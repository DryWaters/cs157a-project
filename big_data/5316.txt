A Clustering-based Collaborative Filtering Approach for Mashups Recommendation over Big Data 
a,c Wanchun Dou Jianxun Liu c a State Key Laboratory for Novel Software Technology Nanjing University Nanjing, Jiangsu, China State Key Laboratory for Novel Software Technology Nanjing University Nanjing, Jiangsu, China c Key Laboratory of Knowledge 
Rong Hu 
Processing & Networked Manufacturing Hunan University of Sci Tec Xiangtan Hunan, China ronghu@126.com douwc@nju.edu.cn ljx529@gmail.com 
Abstract 
Spurred by services computing and Web 2.0, more and more mashups are emerging on the Internet. The overwhelming mashups become too large to be effectively recommended by traditional methods. In view of this challenge we propose a clustering-based collaborative filtering approach for mashup recommendation over big data This approach mainly divided into two phases: clustering and collaborative 
 
Keywords- clustering, collab orative filtering, mashup, API tag 
filtering. By using clustering techniques, the data size is reduced so that the computation time of collaborative filtering algorithm is decreased significantly. Several experiments are done to verify the efficient of the proposed approach at the end of this paper I I NTRODUCTION The Web has undergone a major change from a primarily publication platform towards a participatory and numerous heterogeneous Web-delivered services are emerging resulting in the creation of Web mashups [1 T h e term  mashup implies 
programmableé platform, where   
easy, fast integration, frequently using open application programming interfaces \(API and data sources to produce enriched results that were not necessarily the original reason for producing the raw source data [2 y co m p a n ie s and  institutions provide various mashup solutions or re-label existing integration solutions as mashup tools. For example http://www.housingmaps.com\mbines property listings from http://www.craigslist.org with map data from http://maps.google.com in order to assist people moving from one city to another and searching for housing offers 3 o re in teresting mashups include http://www.zillow.com and 
HousingMaps Craigslist Google Maps Zillow 
http://www.skibonk.com To speed up the mashup development process and to enable end users more easily to mash up their web applications, numerous mashup-specific development tools and frameworks have emerged, e.g http://code.google.com/gme provides a template-based environment for mashup development and http://pipes.yahoo.com/pipes/\ws the mixing of popular data feeds to create da ta mashups via a visual editor As the number of mashups increases continuously, how to create and find values from the mashup-oriented big data become an important research problem Recommender systems \(RSs\ave been proved to be a valuable means for dealing with the information 
SkiBonk Google mashup Editor Yahoo! Pipes 
overwhelming problem by pointing a user towards new notyet-experienced items that may be relevant to the active 
what the RSs recommend to users and the active user is the user looking for suggestions. Collaborative filtering \(CF such as item- and user-based methods are the dominant techniques applied in RS algorithms [4 Giv en a n unk n o w n  rating of a target item by the active user to be estimated user-based CF first measures rating similarities between the active user and other users, th en predicts the unknown rating by averaging the \(weighted\nown ratings of the test item by rating similar users, while ite m-based CF first computes 
userês current task. çItemé is the general term used to denote   
similarity between the target item and other items, then predicts the unknown rating by averaging the \(weighted known ratings of similar items by the active user. Since the relationships between items are relatively static, item-based algorithms may be able to provide the same quality as the user-based algorithms with less online computation However, in terms of item-based CF for mashup recommendation over big data, the main challenges include 1\ow to effectively process large quantities of service within acceptable processing time; and 2\ow to improve the accuracy of CF algorithm In view of these challenges, we propose a cluster-based collaborative filtering approach \(CbCF\which consists of two phases: clustering and collaborative filtering. In fact clustering is used as a prepro 
cessing step to separate big data into manageable parts. Sinc e the number of services in a cluster is much less than th e total number of services, the computation time of CF algorithm can be reduced significantly. Besides, the ratings of similar services within a cluster are more relevant to each other than those of dissimilar services, therefore the recommendation accuracy enhanced The rest of this paper is organized as follows. In Section II, CbCF approach is described in detail step by step. Then a case is studied in Section III. In Section IV, several experiments are conducted on real world data which is extracted from Related work is 
based on usersê ratings may be 
Programmableweb.com 
2013 IEEE 16th International Conference on Computational Science and Engineering 978-0-7695-5096-1/13 $31.00 © 2013 IEEE DOI 10.1109/CSE.2013.123 810 
2013 IEEE 16th International Conference on Computational Science and Engineering 978-0-7695-5096-1/13 $31.00 © 2013 IEEE DOI 10.1109/CSE.2013.123 810 


1 2 3 4 1 
Step Step Step Step Rule 
005 006 005 007 003 006  005 006 003 007 005 007 005 006 005 007 014 006  005 006 014 007 005 007 005 006 005 007 016\017  0,1   1ä\016  016=\020=0.5 021  022 023  022 023 022 005 024 017\022 005 024 022 005 024 017\022 022 005 024 017\022 024 025 026\022 005 024 022 005 027 030  025 031 1 024 031 1 027  024  022 005 024 017\022 022 005 024 017\022 022 005 024 022 005 024+\006 022 005 027 0<\006\032\027ä\024 033 025 026\022 005 024 022 005 027 030 024 025 026\022 005 024 022 005 027 030 022 005 024 022 005 027 1<\033\026\022 005 024 022 005 027 030\032\034 005 024 005 027 020 022 005 024 022 005 024+1 022 005 024 022 005 027 022 005 027 022 005 027+1 022 005 024 022 005 027 002 015 004\005 024 005 024+1 010 005 024 005 024+1 
analyzed in Section V. At last, we draw some conclusions in Section VI II C B CF A PPROACH CbCF approach operates on a user-cluster matrix instead of on the whole user-item matrix It can be divided into four steps as follows Compute tag-based similarity and APIs-based similarity between mashups, which are then combined into a content similarity Propagate similarity according to mashups similarity network Many mashups those are originally dissimilar establish similar relationship via propagation Cluster mashups based on their similarities. By using means cluster algorithm mashups are partitioned into clusters  Recommend mashups according to their predicted ratings. A mashup s predicted rating is measured by the ratings of its neighbors in the same cluster These steps are described in detail in the next subsections Since a mashup is labeled with some tags, the similarity between every two mashups can be measured according to the number of co-labeled tags [5 T h at is to sa y   while t w o mashups are labeled with one or more than one same tag they are considered similar Although tags are a flexible way of categorizing data they are prone to syntactic variations due to the amount of freedom users have, which results in different tags with the similar meanings. And, tagging is related to the use of synonyms and homonyms KI KI B\037 002 035Z 021 004y 004 1 001  Therefore, more information is required for the similarity computation of mashups. As a mashup often uses several APIs to complete its functions, the co-used APIs also denote the similarity between mashups Mathematically, tags-based similarity and APIs-based similarity are both computed by Jaccard similarity coefficient JSC\hich is a statistical measure of similarity between sample sets. For two sets, JSC is defined as the cardinality of their intersection divided by the cardinality of their union 6  C on cretel y  ta g s b ased si m ilarit y b et w e e n  two mashups is computed by formula \(1 7,8  Here and are two mashups is a set of tags labeled to and are a set of tags labeled to  Similarly, APIs-based similarity between two mashups is computed by formula \(2 Here and are two mashups is a set of APIs used by and is a set of APIs used by  Content similarity between two mashups is computed by weighted sum of tags-based similarity and APIs-based similarity, which is expressed as follow In this formula and are two mashups is the weight of tags-based similarity and is the weight of APIs-based similarity The weights express relative importance between these two. For definiteness and without loss of generality, the weights are set to the same value in this paper, i.e In this way, direct similarities between mashups are generated For those mashups that have no direct content similarity relationships, a similarity propagation procedure based on structure information is performed to find more mappings Similarity propagation can provide additional information and leads to extra information accessible for recommendation purposes and particularly relaxes the sparsity and the cold start problems Since the content similarity relationship is symmetrical we generate an undirected mashup graph with represents a set of vertices and represents a set of edges Let denote a vertex labeled by the mashup  Add an edge from a vertex to a vertex if they have a content similarity relationship Let denote the th possible path from a vertex to a vertex  Each path is defined as a sequence of vertices where  Let represents the length of After set a propagation path length threshold which is an integer greater than 1, the content similarity is propagated according to one of the three rules defined as follows  If there is only one path from vertex to and the length of this path then the propagated content similarity between mashup and is the minimum content similarity of mashups labeled to adjacent vertices on this path multiply a path length decay factor i.e wher e  Here and are the first two adjacent vertices on the path from to  and are the last two adjacent vertices on the path from to  is the content similarity between and  
 
K K A Compute Content Similarity B Propagate Content Similarity k L 
002 003 004\005 006 005 007 010 011\003 006 012\003 007 011 011\003 006 013\003 007 011 1 002 014 004\005 006 005 007 010 011\014 006 012\014 007 011 011\014 006 013\014 007 011 2 002 015 004\005 006 005 007 010=\016◊\002 003 004\005 006 005 007 010  1ä\016  002 014 004\005 006 005 007 010 002 035 004\005 024 005 027 010=\036\037!"\002 015 004\005 024 005 024+1 010   002 015 004\005 027ä1 005 027 010  020 020 034ä\033 1 026\022 005 024 022 005 027 030+1 034 
811 
811 


A target number of clusters a set of mashups a content similarity matrix  1: Select points as initial centroids 2 3 Form clusters by assigning each mashup to its closest centroid 4:  Re computes the centroid of each cluster 5 Centroid do not change Figure 1 Furthermore, i t should be noted that if the denominator of formula \(4\ zero, we make 0 
k 
means algorithm for mashups clustering To improve the efficiency of CbCF approach, clustering algorithm is implemented offline 
Rule Rule 
is the content similarity between and  is length of the only path from to   If there are paths om vertex to  and for any path   then the propagated content similarity between mashup and is the average value of the propagated content similarities via different paths i.e Here is the propagated content similarity between two mashups and via the th path from vertex to   If there is no path from vertex to or for any path from vertex to  then After similarity propagation, indirect similarities between mashups are obtained. A content similarity matrix is then built. Each entry of is the corresponding content similarity or propagated content similarity between two mashups The goal of cluster analysis is that the objects within a group be similar to one another and different from the objects in other groups. The greater the similarity within a group and the greater difference between groups, the better or more distinct the clustering. Clustering methods can be classified into three categories: partitioning methods density-based methods [9,10 and hierarchical methods [11 12  co m m o n l y used partition ing  m e t h od is means 13 w h ich h as t w o m a i n  ad vantage s  relati v e  eff icie n c y  and easy implementation. Therefore, we use means algorithm for mashups clustering. By this algorithm, the set of mashups is divided into clusters where and  Many clustering algorithms make soft rather than hard assignments. With hard assignments every mashup is a member of one and only one cluster Soft assignments allow for degrees of membership and membership in multiple clusters By means algorithm, mashups are clustered into one of groups by iteratively reassigning each mashup to its nearest cluster The distance of a mashup to a cluster is defined as the distance of that mashup to the centroid of the mashups currently assigned to that cluster Choosing the proper initial centroids is the key step of this algorithm. A simple approach is to choose the initial centroids randomly but the resulting clusters may be poor. Another commonly used technique is to perform multiple runs, each with a different set of randomly chos en initial centroids, and select the set of clusters with the mi nimum sum of the square error We use a basic means algorithm as shown in Figure 1 to cluster mashups the Pearson correlation coefficient \(PCC\ [14 and th e co sin e si m ilari t y  between ratings vectors. PCC was found to perform better than cosine vector similarity 15  T h eref ore, P CC is ap plie d  in this paper. Based on a PCC formula proposed in e  rating similarity between the target mashup and a mashup is computed as follow Here is a set of users who rated while is a set of users who rated  is a user who both rated and  is the rating that gave to  is the rating that gave to  is the average rating of mashup and is the average rating of mashup It should be noted that there is a precondition before compute the rating similarity between every two services in CbCF. That is, service and must both belong to a same cluster i.e Neighborhood has an impact on the recommendation quality 17 In trad ition al I b CF ap proach  1 8  th e  neighbors of a mashup are determined according to constraint formula \(4 Here is the rating similarity between mashup and mashup  It means that a mashup whose similarity exceeds a pre-defined threshold can be chosen as a neighbor of a distinct mashup. All the neighbors of the mashup are put into the neighbor set  
Common çsimilarityé measures include 
002 015 004\005 027ä1 005 027 010 005 027ä1 005 027 033 1 026\022 005 024 022 005 027 030 022 005 024 022 005 027 1 022 005 024 022 005 027 025 \(1<\025\032 1<\033 025 026\022 005 024 022 005 027 030\032\034 005 024 005 027  002 035 025 004\005 024 005 027 010 005 024 005 027 022 005 024 022 005 027 022 005 024 022 005 027 025 \(1  025 032  022 005 024 022 005 027 033 025 026\022 005 024 022 005 027 030>\034 002 035 004\005 024 005 027 010=0 015 1 015 2 015  015 006 015 007  036   015 1 015 2 015  005  005 007  7  005  7 007 005 007 6 006 005  005 007 4 006 6 006 005  4 006,\007 6 006 005 007 4 006 005 006 4 007 005 007    007 015  005 006 006\005\004\005 006 005 007 010 005 006 005 007 005 006   005 006  
Input Output An assignment of mashups to clusters. The assignment is represented as a mapping from each mashup to a particular cluster Repeat until 
n k S S C Cluster Mashups K K M k k k D Recommend Mashups 1 Compute rating similarity 2 Select neighbors 
002 035 004\005 024 005 027 010  002 035 025 004\005 024 005 027 010  025=1  015 006 006  1,2,É,\025 002 3 004\005  005 007 010  0044 006 4  010◊\0044 006,\007 4 007 010 6 006 0177  0127 007 8  0044 006 4  010 2 6 006 0177  0127 007  8  0044 006,\007 4 007 010 2 6 006 0177  0127 007 9   017\015   007 017 015    005 006   005 007 011 \002 3 004\005  005 007 010>\016,\005 006 005 007   
2 3 
k M S k k 
812 
812 


035\(6 A 005  4 B    0044 A,\007 4 B 007 010◊\002 3 004\005  005 007 010 005 007 017!\(\005    002 3 004\005  005 007 010 005 007 017!\(\005   5 6 A 005  4B  002 3 004\005  005 007 010 002 035  005 1 005   036\037  002 015  005 1 005 9  002 015  005 9 005    020  0.059 
                   
No Mashup Name Used API Labeled Tags 
SemanticSearcher.com Google Base news, photo search, semantic m AllAutoSites Google Base auto, cars, search shopping m 360 Cities Google Maps 3d, mapping panoramic, photo m Anthems on Google Maps Google Maps YouTube anthems deadpool mapping, video m Audio Disco MTV + YouTube deadpool, music video m Favmvs Google Search MTV deadpool, MTV music, video m MTV Billboard charts 411Sync mobile, MTV music, WAP 0.571  0 0 0 0 0 m 0.071 0  0.321 0 0 0 m 0 0 0.321  0.367 0.167 0 m 0 0 0 0.367  0.542 0.083 m 0 0 0 0.167 0.542  0.167 m 0 0 0 0 0.083 0.167  
005  005   005  005  005 007  005 1 005 2 005 9 005  005 5 005 C and \005 D  005 1 005 2 005 1 005 2 002 003  005 1 005 2    003 1 012\003 2   003 1 013\003 2   1 D 005 1 005 2 005 1 005 2 002 014  005 1 005 2    014 1 012\014 2   014 1 013\014 2  1 016 005 1 005 2 002 015  005 1 005 2   016◊\002 003  005 1 005 2    1ä\016  002 014  005 1 005 2   0.5D 022 005 1 022 005  022 005 1 E 022 005 9 E\022 005  033\004\022 005 1 022 005  010=2 005 1 005  020 034ä\033\004\022 005 1 022 005  010+1 034  9   002 035  005 2 005 9   0.059 002 002 035  005 2 005    0.09C 002 002 035  005 2 005 5   0.01F 002 002 035  005 2 005 C   0.01F 022 005 1 022 005 5 022 005 1 E\022 005 9 E 022 005  E\022 005 5 022 005 1 E\022 005 9 E\022 005  E\022 005 C E\022 005 5 022 005 1 E 022 005 9 E\022 005  E\022 005 C E\022 005 D E\022 005 5 033 1 004\022 005 1 022 005 5 010=9 033 2 004\022 005 1 022 005 5 010 033 9 004\022 005 1 022 005 5 010=5 005 1 005 5 
The predicted rating is typically an average of ratings of training mashups that have been determined to be similar to the test mashup, weighted according to the degree of similarity between the training and test mashups. As proposed by Zheng et al. [19  t h e pred icted ratin g of  a mashup is computed by Eq. \(5 Here is the average rating of mashup  is the neighbor set of the mashup and is the rating similarity between and which is computed by Eq. \(3 If the predicted rating of a mashup exceeds a threshold it will be recommended to the active user III A C ASE S TUDY As shown in Table I, seven mashups and the corresponding APIs and tags are listed. For example mashup is labeled by news  photo  search and semantic Mashup is labeled by auto  cars  search and shopping That is to say, there is one same tag \(i.e search mong the total seven tags. Therefore the tags-based similarity between and is computed as And since there is only one API used by both and the APIs-based similarity between and is computed as If the weight of tags-based similarity is set to 0.5, the content similarity between and is computed as  TABLE I C ASE OF MAHSUPS Content similarities between ev ery pair of mashups are computed in the same way and the results are put into Table II TABLE II C ONTENT SIMILARITY M ATRIX Each mashup is represented by a vertex. Every content similarity relationship is represented by an undirected edge And the weight of each edge is the related content similarity We then get an undirected weighted graph as Figure 2 Figure 2 Content similarity propagation Based on the three rules in Section II-B, the propagations of mashups content similarities are discussed in three cases as follows 4 1\here are only one path from to i.e d which meets Therefore, the propagated content similarity between and is computed as  where  Similarly  2\There are three paths from to i.e and heir lengths are  and  respectively. According to the propagated content similarity betweem and is computed as 
Rule Rule 
3 Compute Predicted Rating L 
m m m m m m m m m m 
1 2 
3 1 4 5 2 6 7 0.571 0.071 0.321 0.367 0.083 0.167 0.167 0.542 
m m m m m m m 
is a active user who is looking for suggestions is a target mashup which is relevant to the current task of the active user 
1 2 3 4 5 6 7 1 2 3 4 5 6 7 1  0.571 0.071 0 0 0 0 2 3 4 5 6 7 
813 
813 


    
 
0.571  0.053 0.036 0.018 0.018 0 m 0.071 0.053  0.321 0.162 0.143 0.056 m 0.053 0.036 0.321  0.367 0.167 0.090 m 0.027 0.018 0.162 0.367  0.542 0.083 m 0.027 0.018 0.143 0.167 0.542  0.167 m 0.018 0 0.056 0.090 0.083 0.167  Mashup pair Rating similarity 005 9 005 5  0.544 Mashup pair Rating similarity 
 
 where and Similarly 3\here are three paths from to i.e t  and That is to say, the lengths of these paths are all greater than the propagation path length threshold  Therefore, according to   The content similarity or propagated content similarity between and is put into Table III TABLE III C ONTENT SIMILARITY M ATRIX Based on means algorithm 2\ these mashups are partitioned into two clusters, i.e and are clustered into a group are clustered into a group does not rate  is regarded as an active user and is looked as a target mashup in this case. Furthermore, in order to verify this method is selected as a reference target mashup for The target cluster is  TABLE IV U SER MASHUP RATING MATRIX and every other mashup in the target cluster are calculated and listed in Table V. And rating similarity and enhanced rating similarity between and every other mashup in the target cluster are calculated an d listed in Table VI TABLE V RATING SIMILARITIES WITH to 0.4 and  Then and As for if the recommending threshold is set to 3, it will not be recommended to In addition, as the real rating of by is 2 \(see Table IV\ be inferred that CbCF has good prediction accuracy IV E XPERIMENTS AND A NALYSIS All Experiments are implemented using Visual C++ 6.0 running on an HP desktop with an Intel Core i3 3.20GHz CPU, 2GB RAM, and Windows 7 \(32bit\ operating system 
m m m m m m m m m C 1 C 2 m 1 m m 3 m m m m 7 u 1 5 4 4 3 3 1 0 u 2 1 1 4 5 4 4 2 u 3 4 4 2 2 0 2 3 u 4 5 4 5 5 5 1 5 Using formula \(3\ similarity between 
k k C C A Experiment Context 1 Experiment Platform 2 Experiment Dataset 
002 035  005 1 005 C   0.02D 002 002 035  005 1 005 D   0.01F 002 002 035  005 9 005 5   0.1C2 002 002 035  005 9 005 C   0.1@9 002 002 035  005 9 005 D   0.05C 002 002 035  005  005 D   0.0G0 022 005 2 022 005 D 022 005 2 E\022 005 1 E 022 005 9 E\022 005  E\022 005 5 E\022 005 D 002 022 005 2 E\022 005 1 E\022 005 9 E\022 005  E 022 005 C E\022 005 D and \022 005 2 E\022 005 1 E\022 005 9 E\022 005  E\022 005 C E\022 005 5 E 022 005 5 033 1 004\022 005 2 022 005 D 010=5 033 2 004\022 005 2 022 005 D 010=5 033 9 004\022 005 2 022 005 D 010=C 034 002 035  005 2 005 D  0 005 006 005 007 005 1 005 2 005 9 005  005 5 005 C A$H \005 D 6 9 005 5 6 9 005 5 005 9 6 9 015 2 005 5 005 9 I   005 5    005 9 005  005 D    005 9    005  005 5 005 D  035 006 4 6 9 005 5   2.25 035 006 4 6 9 005 9  2 005 5 6 9 005 9 6 9 
005 5 005  005 5  0.736 005 C 005 5  0 005 D 005 5  0.781 TABLE VI RATING SIMILARITIES AND E NHANCED R ATING S IMILARITIES WITH 005 9 005 9 005   0.839 005 9 005 5  0.544 005 9 005 C  0.187 005 9 005 D  0.499 The Pearson correlation coefficient ranges in value from -1 to +1, indicating perfect negative correlation at -1, absence of correlation at zero, and perfect positive correlation at +1 If set the rating similarity threshold 
3 
1 nd 2  Suppose there are four users have rated these mashups as shown in Table IV The ratings are on 5-point scales and 0 means the user did not rate the mashup. As 
002 035  005 1 005 5   002 035 1  005 1 005 5  002 035 2  005 1 005 5  2  0.02D 002 035 1  005 1 005 5  036\037  002 015  005 1 005 9  002 015  005 9 005   002 015  005  005 5  020 020 034ä\033 1 004\022 005 1 022 005 5 010+1 034  2  002 035 2  005 1 005 5   036\037  002 015  005 1 005 9  002 015  005 9 005   002 015  005  005 C  002 015  005 C 005 5  020 020 034ä\033 2 004\022 005 1 022 005 5 010+1 034  1  
Rule 
1 2 3 4 5 6 7 1  0.571 0.071 0.053 0.027 0.027 0.018 2 3 4 5 6 7 2 4 5 6 
814 
814 


K K 
005 006\017  1 2   025  016 
ProgrammableWeb.com ProgrammableWeb.com k k M 1 M 2 M k M i k k k 3 Cluster of Dataset K K K k k k k k B Experiment Evaluation 
Numerous of mashups, APIs and user profiles are listed on and the number is still on the increase [20 Up to N o v e m b er 20 12 6 226 m a s h u p s and related information are crawled from this site. The mashups are labeled with 20,936 tags among which 3,520 tags are different. And, 12,200 APIs are used by these mashups among which 4,506 APIs are different Since rating is a new feature appearing on there are very few ratings available. Therefore, we gene rate pseudorandom integer integers in the range 0 to 5 as the ratings of mashups. Each rating represents an entry in a user-mashup matrix Assume there are 500 users th at have rated some mashups published on the website. Then the matrix consists of 500 rows and 6226 columns. In total, 50,000 non-zero ratings are generated. The sparsity level of the dataset is 98.39 sparsity level =1-50000/500*6226=0.9839 We add an empirical evaluation based on a well known statistical test, namely the fold cross validation [21  T h e  ratings records are split into mutually exclusive subsets the folds    of equal size During each fold  it is tested on and trained on the rest. The cross-validation process is then repeated times, with each of the subsets used exactly once as the validation data. We generate five distinct splits of training and test data from the rating dataset i.e 5. For each data split, 80% of the original set was included in the training data and 20% of it was included in the test data. The test sets in all cases were disjoin  Using means algorithm, the mashups are partitioned into clusters. Set the values of to 3 and 4 respectively the centroids and the number of mashups in each cluster are shown in Table VII and Table VIII TABLE VII T HE CENTROID AND THE NUMBER OF MASHUPS OF EACH CLUSTER  in means algorithm has effect on the computation time A big value of may reduce the scale of cluster and thus decrease the computation time. However, if is set to a big value option ally, the value of centroids is very close, which would exclude the possibility of some mashups to be the neighbors of the target mashup As a trade-off, we set the value of to 3 For each test mashup in each fold, its predicted rating is calculated based on IbCF a nd CbCF approach separately We then use a widely popular statistical accuracy metric named Mean Absolute Error \(MAE\which is a measure of the deviation of recommendations from their true userspecified ratings [23   The threshold in formula \(4\ affects the number of neighbors. We create a threshold vector with values ranging from 0 to 0.1 \(with a step size of 0.01\ and compute the predicted rating of each mashup in the test data. The average MAE of the test mashups in each fold is calculated and listed in the Figure 3. It can be observed that CbCF yields lower MAE values than IbCF, which means CbCF may generate better recommendation to users than IbCF Figure 3 Comparison of MAE          0 0.02 0.04 0.06 0.08 0.1 0.65 0.7 0.75 Alpha MAE Fold 1          0 0.02 0.04 0.06 0.08 0.1 0.65 0.7 0.75 Alpha MAE Fold 2          0 0.02 0.04 0.06 0.08 0.1 0.65 0.7 0.75 Alpha MAE Fold 3          0 0.02 0.04 0.06 0.08 0.1 0.65 0.7 0.75 Alpha MAE Fold 4          0 0.02 0.04 0.06 0.08 0.1 0.65 0.7 0.75 Alpha MAE Fold 5 IbCF CbCF 
3 Direct path Centroid 1 Centroid 2 Centroid 3 0.886 0.752 0.701 Number of mashups 857 2482 1799 2-path Centroid 1 Centroid 2 Centroid 3 0.756 0.529 0.567 Number of mashups 5179 9425 9912 3-path Centroid 1 Centroid 2 Centroid 3 0.758 0.361 0.546 Number of mashups 5253 748521 20289 TABLE VIII T HE CENTROID AND THE NUMBER OF MASHUPS OF EACH CLUSTER  4 Direct path Centroid 1 Centroid 2 Centroid 3 Centroid 4 0.886 0.752 0.713 0.700 Number of mashups 857 2482 100 1699 2-path Centroid 1 Centroid 2 Centroid 3 Centroid 4 0.756 0.614 0.563 0.529 Number of mashups 5177 776 9239 9324 3-path Centroid 1 Centroid 2 Centroid 3 Centroid 4 0.756 0.526 0.567 0.361 Number of mashups 5180 10371 9992 748520 The value of 
 
815 
815 


OêConnor  
k k 
     
To verify the efficiency of CbCF, the computation time of predicted ratings is compared with the computation time of IbCF. It can be seen from Figure 4, CbCF spends less time than IbCF because the number of neighbors of a mashup is smaller in most cases Figure 4 Comparison of run time V R ELATED W ORK A ND C OMPARATIVE A NALYSIS Clustering methods for CF have been extensively studied by some researchers. Ungar et al. [24 cluster ed users and items separately using variations of means and Gibbs sampling. Users are clustered based on the items they rated and items are clustered based on the users that rated them. Users can be re-clustered based on the number of items they rated, and items can be re-clustered based on the number of users rated them. Each user is assigned to a class with a degree of membership proportional to the similarity between the user and the mean of the class. The performance of CF on synthetic data is good, but not good on real data et al. [25 and Sar w a r et al 2 3  u s ed  clustering techniques to partit ion the data into clusters and use a memory-based CF algorithm to make predictions for CF tasks within each cluster Xue et al. [26 co m b i n ed  th e strengths of memory-based CF approaches and model-based CF approaches in order to enable recommendation by groups of closely related individuals. By using the rating information from a group of closely related users, unrated items of the individual user in a group can be predicted Quan et al. [27 p r op ose d a C F algorithm t h at ad ds ite m  clusters to a user-based approach. When predicting an item s rating for a user, it looks at similar users with respect to ratings within that item's cluster. There are also other studies on clustering techniques for collaborative filtering 28,29,30,31 In  th e ab ov e research wo rk u s ers a n d ite m s  are clustered using the rati ng data while the additional information, for example the relationship between items, is ignored. Additional information has been proved to be very useful in certain application domains 32 pr opos e d  CbCF approach, mashups are fi rst clustered based on the synthetic similarity distance, which is the weighted sum of tags-based similarity and APIs-based similarity All mashups are partitioned into clusters and a traditional CF algorithm is operated on a user-cluster matrix instead of on the whole user-item matrix. By reducing the dimensions of user-item rating matrix and excluding some irrelevant mashups, this approach can improve the quality of recommendation and the online performance of CF algorithms VI C ONCLUSION Big data require new forms of processing to enable enhanced decision making, insight discovery and process optimization. We present a cluster-based collaborative filtering approach for mashups recommendation over big data Besides using ratings data, similar relationship between mashups is proposed to identify their neighborhoods. A clustering technique is applied to find the groups of similar mashups. After that, a traditional CF algorithm is used to generate the recommendations. The results of experiments with real-world data set show that the CbCF approach outperforms traditional item-based collaborative filtering algorithms in terms of MAE and the computation time of predicted ratings A CKNOWLEDGMENT This work was supported by Natural Science Fund of China under Grant No. 61021062 61073032, Scientific and Technical Support Program of Jiangsu Province under Grant No. BK2011171 Excellent Youth Found of Hunan Scientific Committee of China under Grant No. 11JJ1011 R EFERENCES  1 i u X Z  Hua n g G  Z h a o Q et a l   
iMashup: a mashup-based framework for service composition Science China Information Sciences, 2013, pp. 1-20  2 Ag a r wa l S a n d N a t h A  A study on implementing Green IT in Enterprise 2.0 International Journal of Advanced Computer Research, 2013, 3\(1\, pp. 43-49 3 i n Y  B o u a lem B F a bi o C  an d Flori a n D   Understanding mashup          0 0.02 0.04 0.06 0.08 0.1 200 300 400 Alpha Time\(s Fold 1          0 0.02 0.04 0.06 0.08 0.1 0 200 400 Alpha Time\(s Fold 2          0 0.02 0.04 0.06 0.08 0.1 200 300 400 Alpha Time\(s Fold 3          0 0.02 0.04 0.06 0.08 0.1 200 300 400 Alpha Time\(s Fold 4          0 0.02 0.04 0.06 0.08 0.1 0 200 400 Alpha Time\(s Fold 5 IbCF CbCF 
816 
816 


Development and its Differences with Traditional Integration Internet Computing, 2008, 12\(5\, pp. 44-52  4 T s o S u tte r K H L  Mar i n h o L B  S c hm i d t T h ie me L  T a g a w ar e  recommender systems by fusion of collaborative filtering algorithms[C   P roc eed i n gs of th e 200 8 A C M s y m p os iu m o n A p p l i e d computing. ACM, 2008: 1995-1999 5 G i a nna ki d o u E  K o u t s oni k o la V   V a ka li A  et a l    Co-clustering tags and social data sources in proceedings of the Ninth International Conference on Web-Age Information Management  \(WAIM'08\, 2008 pp. 317-324 6 a n k J a nd Co l e B Calculating the jaccard similarity coefficient with map reduce for entity pairs in Wikipedia Wikipedia Similarity Team 2008  7  Y u s e f H M an d VÌc t or H S   Improving Tag-Clouds as Visual Information Retrieval Interfaces in proceedings of International Conference on Multidisciplinary Information Sciences and Technologies, 2006  8 o ine B a nd A ntal v a n de n B   Collaborative and Content-based Filtering for Item Recommendation on Social Bookmarking Websites In Proceedings of Systems and the Social Web, 2009 9 E s t e r M  K ri e ge l H P  San d e r J  a n d Xu X based algorithm for discovering clusters in large spatial databases Proceedings of the International Conference on Knowledge Discovery 10 A nke r s t M Br e u nig  M M  K r ieg e l  H P  an d S a n d e r J   TICS proceedings of ACM SIGMOD Conference, 1999, pp. 49-60  H a n J  an d K a m b e r M Data Mining: Conce pts and Techniques Morgan Kaufmann, San Francisco, Calif, USA, 2001  S u X  K u b a t M  T a pi a M A  a n d  H u C   estimation using proceedings of the 17 th International Conference on Tools with Artificial Intelligence \(ICTAI 05\, 2005, pp 185-189 13 T a pas K  D a v id M M, N a th an S N   e t al  Means Clustering Algorithm: Analysis and Implementation IEEE Transactions on Pattern Analysis and Machine Intelligence, 2002 24\(7\, pp. 881-892  14  R e s n ic k P I a k ovou N S u s ha k M  B e rgs t rom P, an d Ri ed l J  GroupLens: An Open Architecture for Collaborative Filtering of Netnews in proceedings of Computer Supported Cooperative Work Conference, 1994 15 Herloc k e r J  K on s t a n J A  a nd R i ed l J   An empirical analysis of design choices in neighborhood-based collaborative filtering algorithms Information retrieval, 2002, 5\(4\, pp. 287-310  16 Zh en g Z  M a H  L y u M R  et a l    QoS-aware Web service recommendation by collaborative filtering IEEE Transactions on Services Computing, 2011, 4\(2\, pp. 140-152 17 P h am M  C C a o Y  K l amm a  R  e t al    A clustering approach for collaborative filtering recommendation using social network analysis Journal of Universal Computer Science, 2011, 17\(4\.  583-604  H e r l o c ke r J  K o ns tan J A  R i e dl J   An empirical analysis of design choices in neighborhood-based collaborative filtering algorithms Information retrieval, 2002, 5\(4\, pp. 287-310  19 Zh en g Z  M a H  L y u M R  et a l    QoS-aware Web service recommendation by collaborative filtering IEEE Transactions on Services Computing, 2011, 4\(2\: 140-152 20 W a n g J   Ch en H, Zh an g Y   Mining user behavior pattern in mashup community in proceedings of IEEE International Conference on Information Reuse & Integration, 2009, pp. 126-131 21 K oh a vi  R  A St ud y of C r os s Va li d a t i on and  B oot s t rap for A c cu ra c y  in proceedings of International Joint Conference on Artificial Intelligence \(IJCAI\, 1995 22 Ac i l a r A M a n d Ar s l a n A  artificial immune network Expert Systems with Applications, 2009 36, pp. 8324-8332 23 Sa r w a r B M  Ka r y p i s G Ko n s t a n J A a n d  R i e d l J  Recommender systems for large-scale E-commerce: scalable neighborhood in proceedings of the 5th International Conference on Computer and Informati 2002,1 24 U n g a r L H an d F o ste r  collaborative fi in proceedings of the Workshop on Recommendation Systems, AAAI Press, 1998 25  M and Herlocker J in proceedings of the ACM SIGIR Workshop on 26 X u e G R  L i n C  Y a n g Q  e t a l    Scalable collaborative filtering using cluster-based smoothing in proceedings of the 28th annual international ACM SIGIR conference on Research and development in information retrieval 2005, pp. 114-121  27 Q u a n T K   F u y uki I  S h in ic hi H   Improving accuracy of recommender system by clustering items based on stability of user similarity in proceedings of International Conference on Computational Intelligence for Modeling Control and Automation and International Conference on Intelligent Agents Web Technologies and International Commerce, 2006, pp. 61-61 28 G e or g e T a n d M e ru gu S based on co-clustering in proceedings of the Fifth I EEE International Conference on Data Mining 2005, pp. 625628  29 T r uo ng K   I s hikaw a F  an d H o ni de n  accuracy of recommender system by item clustering IEICE - Trans. Inf. Syst E90-D\(9\, 2007, pp. 1363-1373  Ras hi d A M, S hy o ng K a ry pis G  an d R i e dl J   scalable hybrid model- & memory-based cf algorithm Web KDD 2006  Z h ang M a n d H u r l ey N partitioning in proceedings of the 2009 IEEE/WIC/ACM International Joint Conference on Web Intelligence and Intelligent Agent Technology, 2009, pp. 508-515  M a n h  C P  Y iw e i C, R a l f K  Matt hi as J  Collaborative Filtering Recommendation Using Social Network Analysis Journal of Universal Computer Science, 2011, 17\(4 583-604 
        
        ACM RecSys ê09 Workshop on Recommender A density with noise,é in and Data Mining \(KDD ê96\, 1996 OP ordering points to identify the clustering structure,é in   Querysize clustering techniques,é in  An Efficient k                Estimation and Model Selection A collaborative filtering method based on   formation using clustering on Technology \(ICCIT ê02 D P, çClustering methods for ltering OêConnor Clustering items for collaborative filtering Recommender Systems \(SIGIR ê99\ , 1999     A scalable collaborative filtering framework  ICDM ê05 S, çImproving  Clustknn: A highly In Novel item recommendation by user profile  A Clustering Approach for  
817 
817 


overhead of job initialization in Hadoop is much larger than cNeural VIII C ONCLUSION AND F UTURE W ORK The past several years have witnessed an ever-increasing growth speed of data To address large scale neural network training problems in this paper we proposed a customized parallel computing platform called cNeural Different from many previous studies cNeural is designed and built on perspective of the whole architecture from the distributed storage system at the bottom level to the parallel computing framework and algorithm on the top level Experimental results show that cNeural is able to train neural networks over millions of samples and around 50 times faster than Hadoop with dozens of machines In the future we plan to develop and add more neural network algorithms such as deep belief networks into cNeural in order to make further support training large scale neural networks for various problems Finally with more technical work such as GUI done we would like to make it as a toolbox and open source it A CKNOWLEDGMENT This work is funded in part by China NSF Grants No 61223003 the National High Technology Research and Development Program of China 863 No 2011AA01A202 and the USA Intel Labs University Research Program R EFERENCES  C Bishop Neural networks for pattern recognition  Clarendon press Oxford 1995  J Collins Sailing on an ocean of 0s and 1s  Science  vol 327 no 5972 pp 1455Ö1456 2010  S Haykin Neural networks and learning machines  Englewood Cliffs NJ Prentice Hall 2009  R Hecht-Nielsen Theory of the backpropagation neural network in Proc Int Joint Conf on Neural Networks,IJCNN IEEE 1989 pp 593Ö605  Y  Loukas  Artiìcial neural netw orks in liquid chromatography Efìcient and improved quantitative structure-retention relationship models Journal of Chromatography A  vol 904 pp 119Ö129 2000  N Serbedzija Simulating artiìcial neural netw orks on parallel architectures Computer  vol 29 no 3 pp 56Ö63 1996  M Pethick M Liddle P  W erstein and Z Huang P arallelization of a backpropagation neural network on a cluster computer in Proc Int Conf on parallel and distributed computing and systems PDCS  2003  K Ganeshamoorthy and D Ranasinghe On the performance of parallel neural network implementations on distributed memory architectures in Proc Int Symp on Cluster Computing and the Grid CCGRID  IEEE 2008 pp 90Ö97  S Suresh S Omkar  and V  Mani P arallel implementation of back-propagation algorithm in networks of workstations IEEE Trans Parallel and Distributed Systems  vol 16 no 1 pp 24Ö34 2005  Z Liu H Li and G Miao Mapreduce-based backpropagation neural network over large scale mobile data in Proc Int Conf on Natural Computation ICNC  vol 4 IEEE 2010 pp 1726Ö1730  M Glesner and W  P  ochm  uller Neurocomputers an overview of neural networks in VLSI  CRC Press 1994  Y  Bo and W  Xun Research on the performance of grid computing for distributed neural networks International Journal of Computer Science and Netwrok Security  vol 6 no 4 pp 179Ö187 2006  C Chu S Kim Y  Lin Y  Y u  G  Bradski A Ng and K Olukotun Map-reduce for machine learning on multicore Advances in neural information processing systems  vol 19 pp 281Ö288 2007  U Seif fert  Artiìcial neural netw orks on massi v ely parallel computer hardware Neurocomputing  vol 57 pp 135Ö150 2004  D Calv ert and J Guan Distrib uted artiìcial neural netw ork architectures in Proc Int Symp on High Performance Computing Systems and Applications  IEEE 2005 pp 2Ö10  H Kharbanda and R Campbell F ast neural netw ork training on general purpose computers in Proc Int Conf on High Performance Computing HiPC  IEEE 2011  U Lotri  c and e a Dobnikar A Parallel implementations of feed-forward neural network using mpi and c on  net platform in Proc Int Conf on Adaptive and Natural Computing Algorithms  Coimbra 2005 pp 534Ö537  Q V  Le R Monga and M e a De vin Building high-le v e l features using large scale unsupervised learning in Proc Int Conf on Machine Learning ICML  ACM 2012 pp 2Ö16  J Ekanayak e and H e a Li T wister a runtime for iterati v e mapreduce in Proc of the 19th ACM International Symposium on High Performance Distributed Computing  ACM 2010 pp 810Ö818  Y  Bu B Ho we M Balazinska and M D Ernst Haloop Efìcient iterative data processing on large clusters Proc of the VLDB Endowment  vol 3 no 1-2 pp 285Ö296 2010  M Zaharia M Cho wdhury  T  Das A Da v e  J  Ma M McCauley M Franklin S Shenker and I Stoica Resilient distributed datasets A fault-tolerant abstraction for in-memory cluster computing in Proc USENIX Conf on Networked Systems Design and Implementation  USENIX Association 2012 pp 2Ö16 384 


Figure 15  3D model of the patio test site Figure 16  Model of the patio test site combining 2D map data with 3D model data a Largest explored area b Smallest explored area Figure 14  Maps built by a pair of 2D mapping robots Yellow indicates area seen by both robots Magenta indicates area seen by one robot and Cyan represents area seen by the other a 3D point cloud built of the patio environment Figure 16 shows a model built combining 2D map data with 3D model data A four-robot mission scenario experiment was conducted at the mock-cave test site This included two 2D mapping robots a 3D modeling robot and a science sampling robot There was no time limit on the run Figure 17 shows a 3D model of the tunnel at the mock cave Figure 18 shows a model built combining 2D map data with 3D model data 7 C ONCLUSIONS  F UTURE W ORK The multi-robot coordination framework presented in this paper has been demonstrated to work for planetary cave mission scenarios where robots must explore model and take science samples Toward that end two coordination strategies have been implemented centralized and distributed Further a core communication framework has been outlined to enable a distributed heterogenous team of robots to actively communicate with each other and the base station and provide an online map of the explored region An operator interface has been designed to give the scientist enhanced situational awareness collating and merging information from all the different robots Finally techniques have been developed for post processing data to build 2  3-D models of the world that give a more accurate description of the explored space Fifteen 2D mapping runs with 2 robots were conducted The average coverage over all runs was 67 of total explorable area Maps from multiple robots have been merged and combined with 3D models for two test sites Despite these encouraging results several aspects have been identi\002ed that can be enhanced Given the short mission durations and small team of robots in the experiments conducted a simple path-to-goal costing metric was suf\002cient To use this system for more complex exploration and sampling missions there is a need for learning-based costing metrics Additional costing parameters have already been identi\002ed and analyzed for future implementation over the course of this study One of the allocation mechanisms in this study was a distributed system however task generation remained centralized through the operator interface In an ideal system robots would have the capability to generate and auction tasks based on interesting features they encounter Lastly the N P complete scheduling problem was approximated during task generation However better results could potentially 10 


Figure 17  3D model of the tunnel in the mock cave test site Figure 18  Model of the mock cave test site combining 2D map data with 3D model data be obtained by releasing this responsibility to the individual robots A CKNOWLEDGMENTS The authors thank the NASA STTR program for funding this project They would also like to thank Paul Scerri and the rCommerceLab at Carnegie Mellon University for lending hardware and robots for this research R EFERENCES  J C W erk er  S M W elch S L Thompson B Sprungman V Hildreth-Werker and R D Frederick 223Extraterrestrial caves Science habitat and resources a niac phase i study\\224 NASA Innovative Advanced Concepts NIAC Tech Rep 2003  G Cushing T  T itus and E Maclennan 223Orbital obser vations of Martian cave-entrance candidates,\224 in First Intl Planetary Caves Workshop  Carlsbad NM 2011  J W  Ashle y  M S Robinson B R Ha wk e A K Boyd R V Wagner E J Speyerer H Hiesinger and C H van der Bogert 223Lunar caves in mare deposits imaged by the LROC narrow angle camera,\224 in First Intl Planetary Caves Workshop  Carlsbad NM 2011  J W  Ashle y  A K Bo yd H Hiesinger  M S Robinson T Tran C H van der Bogert and LROC Science Team 223Lunar pits Sublunarean voids and the nature of mare emplacement,\224 in LPSC  The Woodlands,TX 2011  S Dubo wsk y  K Iagnemma and P  J Boston 223Microbots for large-scale planetary surface and subsurface exploration niac phase i.\224 NASA Innovative Advanced Concepts NIAC Tech Rep 2006  S Dubo wsk y  J Plante and P  Boston 223Lo w cost micro exploration robots for search and rescue in rough terrain,\224 in IEEE International Workshop on Safety Security and Rescue Robotics Gaithersburg MD  2006  S B K esner  223Mobility feasibility study of fuel cell powered hopping robots for space exploration,\224 Master's thesis Massachusetts Institute of Technology 2007  M T ambe D Pynadath and N Chauv at 223Building dynamic agent organizations in cyberspace,\224 IEEE Internet Computing  vol 4 no 2 pp 65\22673 March 2000  W  Sheng Q Y ang J T an and N Xi 223Distrib uted multi-robot coordination in area exploration,\224 Robot Auton Syst  vol 54 no 12 pp 945\226955 Dec 2006  A v ailable http://dx.doi.or g/10.1016/j.robot 2006.06.003  B Bro wning J Bruce M Bo wling and M M V eloso 223Stp Skills tactics and plays for multi-robot control in adversarial environments,\224 IEEE Journal of Control and Systems Engineering  2004  B P  Gerk e y and M J Mataric 223 A formal analysis and taxonomy of task allocation in multi-robot systems,\224 The International Journal of Robotics Research  vol 23 no 9 pp 939\226954 September 2004  M K oes I Nourbakhsh and K Sycara 223Heterogeneous multirobot coordination with spatial and temporal constraints,\224 in Proceedings of the Twentieth National Conference on Arti\002cial Intelligence AAAI  AAAI Press June 2005 pp 1292\2261297  M K oes K Sycara and I Nourbakhsh 223 A constraint optimization framework for fractured robot teams,\224 in AAMAS 06 Proceedings of the 002fth international joint conference on Autonomous agents and multiagent sys11 


tems  New York NY USA ACM 2006 pp 491\226493  M B Dias B Ghanem and A Stentz 223Impro ving cost estimation in market-based coordination of a distributed sensing task.\224 in IROS  IEEE 2005 pp 3972\2263977  M B Dias B Bro wning M M V eloso and A Stentz 223Dynamic heterogeneous robot teams engaged in adversarial tasks,\224 Tech Rep CMU-RI-TR-05-14 2005 technical report CMU-RI-05-14  S Thrun W  Bur g ard and D F ox Probabilistic Robotics Intelligent Robotics and Autonomous Agents  The MIT Press 2005 ch 9 pp 222\226236  H Mora v ec and A E Elfes 223High resolution maps from wide angle sonar,\224 in Proceedings of the 1985 IEEE International Conference on Robotics and Automation  March 1985  M Yguel O A ycard and C Laugier  223Update polic y of dense maps Ef\002cient algorithms and sparse representation,\224 in Intl Conf on Field and Service Robotics  2007  J.-P  Laumond 223T rajectories for mobile robots with kinematic and environment constraints.\224 in Proceedings International Conference on Intelligent Autonomous Systems  1986 pp 346\226354  T  Kanungo D Mount N Netan yahu C Piatk o R Silverman and A Wu 223An ef\002cient k-means clustering algorithm analysis and implementation,\224 IEEE Transactions on Pattern Analysis and Machine Intelligence  vol 24 2002  D J Rosenkrantz R E Stearns and P  M Le wis 223 An analysis of several heuristics for the traveling salesman problem,\224 SIAM Journal on Computing  Sept 1977  P  Scerri A F arinelli S Okamoto and M T ambe 223T oken approach for role allocation in extreme teams analysis and experimental evaluation,\224 in Enabling Technologies Infrastructure for Collaborative Enterprises  2004  M B Dias D Goldber g and A T  Stentz 223Mark etbased multirobot coordination for complex space applications,\224 in The 7th International Symposium on Arti\002cial Intelligence Robotics and Automation in Space  May 2003  G Grisetti C Stachniss and W  Bur g ard 223Impro ving grid-based slam with rao-blackwellized particle 002lters by adaptive proposals and selective resampling,\224 in Proceedings of the IEEE International Conference on Robotics and Automation  2005  227\227 223Impro v ed techniques for grid mapping with raoblackwellized particle 002lters,\224 IEEE Transactions on Robotics  2006  A Geiger  P  Lenz and R Urtasun 223 Are we ready for autonomous driving the kitti vision benchmark suite,\224 in Computer Vision and Pattern Recognition CVPR  Providence USA June 2012  A N 250 uchter H Surmann K Lingemann J Hertzberg and S Thrun 2236d slam with an application to autonomous mine mapping,\224 in Proceedings of the IEEE International Conference on Robotics and Automation  2004 pp 1998\2262003  D Simon M Hebert and T  Kanade 223Real-time 3-d pose estimation using a high-speed range sensor,\224 in Proceedings of the IEEE International Conference on Robotics and Automation  1994 pp 2235\2262241 B IOGRAPHY  Ammar Husain received his B.S in Mechanical Engineering Robotics from the University of Illinois at Urbana-Champaign He is pursuing an M.S in Robotic Systems Development at Carnegie Mellon University He has previously worked on the guidance and control of autonomous aerial vehicles His research interests lie in the 002eld of perception-based planning Heather Jones received her B.S in Engineering and B.A in Computer Science from Swarthmore College in 2006 She analyzed operations for the Canadian robotic arm on the International Space Station while working at the NASA Johnson Space Center She is pursuing a PhD in Robotics at Carnegie Mellon University where she researches reconnaissance exploration and modeling of planetary caves Balajee Kannan received a B.E in Computer Science from the University of Madras and a B.E in Computer Engineering from the Sathyabama Institute of Science and technology He earned his PhD from the University of TennesseeKnoxville He served as a Project Scientist at Carnegie Mellon University and is currently working at GE as a Senior Cyber Physical Systems Architect Uland Wong received a B.S and M.S in Electrical and Computer Engineering and an M.S and PhD in Robotics all from Carnegie Mellon University He currently works at Carnegie Mellon as a Project Scientist His research lies at the intersection of physics-based vision and 002eld robotics Tiago Pimentel Tiago Pimentel is pursuing a B.E in Mechatronics at Universidade de Braslia Brazil As a summer scholar at Carnegie Mellon Universitys Robotics Institute he researched on multi-robots exploration His research interests lie in decision making and mobile robots Sarah Tang is currently a senior pursuing a B.S degree in Mechanical and Aerospace Engineering at Princeton University As a summer scholar at Carnegie Mellon University's Robotics Institute she researched multi-robot coordination Her research interests are in control and coordination for robot teams 12 


Shreyansh Daftry is pursuing a B.E in Electronics and Communication from Manipal Institute of Technology India As a summer scholar at Robotics Institute Carnegie Mellon University he researched on sensor fusion and 3D modeling of sub-surface planetary caves His research interests lie at the intersection of Field Robotics and Computer Vision Steven Huber received a B.S in Mechanical Engineering and an M.S in Robotics from Carnegie Mellon University He is curently Director of Structures and Mechanisms and Director of Business Development at Astrobotic Technology where he leads several NASA contracts William 223Red\224 L Whittaker received his B.S from Princeton University and his M.S and PhD from Carnegie Mellon University He is a University Professor and Director of the Field Robotics Center at Carnegie Mellon Red is a member of the National Academy of Engineering and a Fellow of the American Association for Arti\002cial Intelligence 13 


