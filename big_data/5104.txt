An Efficient Close Frequent Pattern Mining Algorithm  Jun TAN College of Mechanical and Electrical Engineering Central South University Changsha,   Hunan Province, China e-mail: tanjun007@vip.sina.com Yingyong BU and Bo YANG College of Mechanical and Electrical Engineering Central South University Changsha,   Hunan Province, China e-mail: buyingyong43@126.com   Abstract Efficient algorithms for mining frequent itemsets are crucial for mining association rules and for other data mining tasks.  FP-growth algorithm has been implemented using a prefix-tree structure,   known as a FP-tree,   for storing compressed frequency information.  Numerous experimental results have demonstrated that the algorithm perform extremely well.  But In FP-growth algorithm,   two traversals of FP-tree are needed for constructing the new conditional FPtree.   In this paper we present a novel FP-array technique that greatly reduces the need to traverse FP-trees,   thus obtaining significantly improved performance for FP-tree based algorithms.  We then present a very effective closed frequent pattern   algorithm which uses a variation of the FP-tree data structure in combination with the FP-array technique efficiently.  In the algorithm,   an efficient closeness-testing approach is also given for mining closed frequent itemsets Experimental results show that the new algorithm outperform other algorithm in not only the speed of algorithms,   but also their scalability Keywords- Closed FP-growth algorithm;  Closed FP-tree   sparse datasets;  FP-array I  P REFACE  The core of mining association rules is mining frequent itemsets efficiently.  An important property of frequent itemset is “anti-monotonicity”,   which means any subset of a frequent itemset is frequent.  When a transaction database is very dense,   i.e. when the database contains large number of long frequent itemsets,   mining all frequent itemsets might not be a good idea.  For example,   if there is a frequent itemset with size L, then all 2 L nonempty subsets of the itemset have to be generated.  For overcome the difficult scholars put forward the concept of closed frequent itemsets The closed frequent itemsets not only is less several orders of magnitude   than   frequent   itemsets,   but also contains complete information.  So it is widely used. Some representative research results are made.  for example 000&\000+\000$\0005\0000\000\003 000>\000\024\000@\000\017\000\003\000&\000/\0002\0006\000\(\0007\000\003\000>\000\025\000@\000\017\000\003\000&\000/\0002\0006\000\(\0007\000\016\000\003\000>\000\026\000@\000\003\000H\000W\000F\000\021\000\003 This paper proposes an effective closed frequent pattern mining algorithm at the basis of frequent itemsets mining algorithm FP-growth 000>\000\027\000@\000\003 000>\000\030\000@\000\003 000>\000\031\000 A novel FP-array technology is proposed in the algorithm,   a variation of the FP-tree data structure is used which is in combination with the FP-array.  Experimental results show that the new algorithm has very good performance II  CLOSED FREQUENT ITEMSETS CONCEPT  Mining association rules is divided into two steps.  Fist step:  find all frequent itemsets;   Second step:  generate strong association rules.  The second step costs much lower than first step,   so the performance of mining association rules is decided by the first step.  For reduce the number of frequent itemsets,   we give the concept of maximal frequent itemset Definition 1:  A frequent itemset X is called maximal if there does not   exist a   frequent itemest Y such that X 002 Y Sometimes we only want to know whether an itemset is frequent or not.  Then it is sufficient to discover only all the maximal frequent itemsets \(MFI\.  Many existing algorithms only mine maximal frequent itemsets \(MFI\ However mining only MFI’s has the following deficiency.  From a MFI and its support,   we know that all its subsets are frequent and the support of any of its subset is not less than MFI’,   but we do not know the exact value of the support For generating association rules,   we do need support of all frequent itemsets.  To solve this problem,   another type of a frequent itemset,   the Closed Frequent Itemset \(CFI\as proposed Definition 2:  A frequent itemset X is called closed if the support of all its supersets is less than the support of X So,   the first step of mining association rules is changed to find all closed frequent itemsets.  Mining closed frequent itemsets is divided two steps. \(1\find frequent itemsets;   \(2 verify that the new frequent itemset is closed III  C LOSED F REQUENT P ATTERN M INING A LGORITHM  A  Closed  FP-tree construction We proposed an effective closed frequent pattern mining algorithm based on FP-growth,   which is named,   closed FP-growth.  In the algorithm,   a variation of the FP-tree is used,   named Closed FP-tree.  In a Closed FP-tree,   each node in the subtree has four fields: item-name, count,   nodelink and level.  Level is used for closed frequent itemset testing An example is used to illustrate the construction of the Closed FP-tree.  a transaction dataset is shown in table 1.  the minimum support is supposed to be 20%.  figure 1 shows FP-tree which contains all frequent itemset;   table 2 shows that each item of FP-tree’s conditional pattern base and conditional FP-tree.  the constructed Closed   FP-tree is 
2009 Second International Conference on Intelligent Computation Technology and Automation 978-0-7695-3804-4/09 $26.00 © 2009 IEEE DOI 10.1109/ICICTA.2009.134 528 
2009 Second International Conference on Intelligent Computation Technology and Automation 978-0-7695-3804-4/09 $26.00 © 2009 IEEE DOI 10.1109/ICICTA.2009.134 528 
2009 Second International Conference on Intelligent Computation Technology and Automation 978-0-7695-3804-4/09 $26.00 © 2009 IEEE DOI 10.1109/ICICTA.2009.134 528 
2009 Second International Conference on Intelligent Computation Technology and Automation 978-0-7695-3804-4/09 $26.00 © 2009 IEEE DOI 10.1109/ICICTA.2009.134 528 
2009 Second International Conference on Intelligent Computation Technology and Automation 978-0-7695-3804-4/09 $26.00 © 2009 IEEE DOI 10.1109/ICICTA.2009.134 528 
2009 Second International Conference on Intelligent Computation Technology and Automation 978-0-7695-3804-4/09 $26.00 © 2009 IEEE DOI 10.1109/ICICTA.2009.134 528 


shown in figure 2 which contains all closed frequent itemsets A node x: l: c means that the node is for item x,   its level is l and its count is c.  The header table in the CFP-tree is the same as that of the FP-tree Start from the first FP-tree T in figure 1.  Since T contains more than one path,   a bottom-up search has to be done.  First,   because item g’conditional FP-tree contains only one path,   we get the first frequent itemset {a, g Obviously it is closed,   so it is inserted into the Closed FPtree directly.  Similarly,   for item b and e,   we can get closed frequent itemsets {d, b} and {a, c, e}.  For item f construct f’conditional FP-tree \(T f because T f contains more than one path, Closed FP-growth is recursively called we get closed frequent itemsets {a, d, f},   {a, f}.  Similarly we deal with item d until item a.  Finally,   we get Closed FP-tree as shown   in   figure2 TABLE I  A TRANSACTION SET           TABLE II  CONDITONAL FPTREE                Figure 1  FP-tree      Figure 2  Closed  FP-tree  B  FP-array technique The core of Closed FP-growth algorithm is traversing Closed   FP-trees and constructing new conditional Closed FP-tree after the first Closed   FP-tree is constructed   from the original database.  From a great deal of experiments we found out that about 80% of the CPU time was used for traversing Closed   FP-trees.  Therefore, the question is,   can we reduce the traversal time so that the method can be sped up The traversal time can be reduced by using a simple additional data structure.  For each item i in the header of a conditional FP-tree T X two traversals of T X are needed for constructing the new conditional FP-tree T X 001 i The first traversal finds all frequent items in the conditional pattern base of X 001 i},  and initializes the FP-tree T X 001 i by constructing its header table,  The second traversal constructs the new tree T X 001 i We can omit the first scan of T X by constructing a frequent pair array A X while building T X T X  is initialized with an attribute A X  Definition: Suppose the T is a conditional FP-tree, I= {i1 i2…im} is the set of items in the header table of T.  A frequent pair array of T is a \(m-1\\(m-1\atrix,   where each element of the matrix corresponds the counter of an ordered pair of items in I.  Obviously, there is no need to set a counter for both item pair \(i j i k d item pair \(i k i j  Therefore we only set the counters for all pairs \(i j i k j<k We explain the construction of the FP-array based on datasets shown in table 1.  After the first scan of the original database,   we get frequent items as a:5,  c:5,  d:5,  f:4,  e:2 b:2, g:2.  During the second scan of the database we will construct FP-tree T and a FP-array A.  The FP-array will save the counts of all pairs of items,   each cell is a counter of a pair of items,   and   All cells in the FP-array are initialized as 0. For example,   A [a is  th e c o u n t e r f o r item s et a  b   During the second scan,   for each transaction,   first all frequent items in the transaction are extracted.  Suppose these items form itemset I.  To insert I into T,   the items in I are sorted according to the order in header table of T.  When we insert I into T,   at the same time A [i is in c r em en te d  by 1.  if {i, j} is contained in I.  For example,   for the fourth transaction, {a, c, e, f} is extracted \(item h is infrequent Tid Transactions 1 cdb 2 acde 3 acg 4 acefh 5 cdfk 6 adfgi 7 adfbj item Conditional pattern base Conditional FP-tree g {\(fda:1\,  \(ca:1 a:2 b {\(fda:1\,  \(dc:1 d:2 e dca:1\,  \(fca:1 c:2, a:2 f da:2\,  \(ca:1\,  \(dc:1 a:3 d:2 c:2 d:1 c:1 d a:2\  \(ca:1\,  \(c:2 c:3, a:1\, a:2 c {\(a:3 a:3 a Null set Null set 
529 
529 
529 
529 
529 
529 


This itemset is inserted into T as usual,  and at the same time A[a a A a, f], A[c  e], A c, f A[e  f  ar e a l l incremented by 1.  After the second scan, FP-array A contains the counts of all pairs of frequent items as shown in table 3 Next,   the FP-growth method is recursively called to mine frequent itemsets for each item in header table of T However,  now for each item i,  instead of traversing T along the linked list starting at i to get all frequent items in i’s conditional pattern base,  A gives all frequent items for i. For example, by checking the third line in the table for A frequent items a; c; d for the conditional pattern base of f can be obtained.  Therefore,   for each item i in T the FP-array A makes the first traversal of T  unnecessary,   and T i can be initialized directly from A For the same reason,  from a conditional FP-tree T X  when we construct a new conditional FP-tree for X i},  for an item i,  a new FP-array A X i is calculated.  During the construction of the new FP-tree T X i the FP-array A X i  is filled. For example,  if the conditional FP-tree T f is constructed, the cells of its FP-array A f will be the table 4 This FP-array is constructed as follows.  From the FP-array A,  we know that the frequent items in the conditional pattern base of {f} are,  in order, a, d, c.  By following the linked list of f,  from the first node we get {a, d }:1,  so it is inserted into the new FP-tree T f At the same time, A f a, d is  incremented by 1.  From the second node in the linked list c,  d}:1 is extracted,  and it is inserted  into T f At the same time,  A f c, d  is in cr e m en ted b y 1   F r o m th e th ir d  node in the linked list,  {a, b}:2 is extracted,  and it is inserted into T f At the same time, A f a, b is in cr em en ted  by 2. Since there are no other nodes in the linked list,  the construction of T f is finished, and FP-array A f is ready to be used for construction of FP-tree in next level of recursion The construction of FP-arrays and FP-trees continues until the FP-growth method terminates  TABLE III  A         TABLE IV  A F       IV  ALGORITHM  DISCRIPSION  According to the FP-array technique, we present an improved FP-growth algorithm \(FP-growth# \  T means an FP-tree, its attribute contains base, header and FP-array T.base contains the itemsets X,  while T is X’s a conditional FP-tree,  T.FP-array contains FP-array A X The algorithm detail is described as follows Procedure Closed  FP-growth \(T,C Input: A conditional FP-tree: T The Closed FP-tree for T.base: C Output: updated C Method 1. If  T is single path P 2.        generate all Closed FP-tree’s from P 3.    for each Closed FP X 4.           if   not closed_checking \(X,C 5.                insert X into C 6.          else for each I in T.header 7.                       set Y=t.base i 8.                       if  not closed_checking \(Y,C 9.                           if  T.FP-array is not NULL 10.                           construct the header of Y’ conditional FP-tree from  T.FP-array 11.                         else 12.                               scan T to construct the header 13.            construct the FP-tree T Y and its FP-array A Y  14.            initialize Y’s conditional Closed FP-tree C Y  15.            call Closed  FP-growth\(T Y C Y  16.            merge C Y with C 17.  end In the algorithm,   FP-array technology is used from line 9 to line 12.  Function closed_checking \(Y, C\s called to test if Y is closed frequent itemset in line 4 and line 8.  if it is function returns true.  Y’conditional frequent pattern tree and closed frequent pattern tree are constructed in line 14 and line 15. Closed  FP-growth is called recursively V  E XPERIMENT ANALYSIS  We implemented Closed FP-growth and CLOSET+ by running them on a virtual dataset.  The virtual dataset is downloaded from the website of research center of IBM [7  which contains 100, 000 transactions and 1000 items. The average transaction length is 40, and the average frequent pattern length is 10. it is a sparse dataset. The experiments were performed on a Lenevo computer with Intel 2.8 GHz Processor, and 1 GB of memory. The  operating system was Windows 2003 Server.  The algorithm is developed by VC++.  Source codes of CLOSET+ algorithm is download from [8 Figure 3 shows that respective runtime of two algorithms Because of the usage of FP-array technique,  For a sparse dataset, Closed FP-growth turns out to be faster than CLOSET+.  But when the minimum support is very low the FP-tree contains good compressibility,   thus the FP-array has no too great advantage,  Consequently, as showed in Figure 3,  for very low minimum support,  Closed FP-growth and CLOSET+ have almost the same runtime  c 3 d 3 3 f 3 2 3 e 2 2 1 1 b 1 1 2 1 0 g 2 1 1 1 0 0 a c d f e b d 2 c 1 1 c a 
530 
530 
530 
530 
530 
530 


 000\023 000\024\000\023\000\023 000\025\000\023\000\023 000\026\000\023\000\023 000\027\000\023\000\023 000\023\000\021\000\030 000\024 000\024\000\021\000\030 000\024\000\021\000\032\000\030 000\025 033\003\030Õ\024zKÔ\006\020 030;> \033ÊKÈ\000\013\000V\000H\000F\000\014 000&\000 000&\000/\0002\0006\000\(\0007\000\016  Figure 3  C ompare on sparse dataset VI  C ONCLUSIONS  In this paper, we combine FP-tree with FP-array efficiently and present an  improved closed frequent pattern mining algorithm. Experiment result indicates,   for the sparse database,  that the algorithm has more excellent performance than the FP-growth algorithm. How to apply FP-array technique to mine the data streams based on frequent itemsets,   it need further research A CKNOWLEDGMENT  Financial supports from National Natural Science Foundation of China \(Grant NO.50474052\e highly appreciated R EFERENCES  1  M.J..Zaki, C.Hsiao, “CHARM:An efficient algorithm for closed itemset mining”. .In Proceeding of The 2nd SIAM International Conference on Data Mining, Arlington, April  2002 2  J.Pei, J.Han, R.Mao, “CLOSET:An efficient algorithm for mining frequent closed itemsets”. In ACM SIGMOD Workshop on Research Issues in Data Mining and Knowledge Discovery, 2000,   pp.21-30 3  J.Wang, J.Han, and J.Pei, “CLOSET+: Searching for the best strategies for mining frequent closed itemsets”. In Proc.2003 ACM SIGKDD Int. Conf on Knowkedge Discovery and Data Mining Washington, D.C.,Aug.2003 4  J.Han, J.Pei, and Y.Yin,  “Mining frequent patterns without candidate generation”.  In Proc. 2000 ACM- SIGMOD Int. Conf.  Management of  Data \(SIGMOD’00\,   pp.  1–12,  May 2000 5  Jiawei Han, Micheline Kamber, Data Mining Concepts and Techniques,  mechanism industry publishing, Bei Jing, 2002, pp.156160 6  K.Wang, L.Tang, J.Han. ”Top down FP-growth for association rule mining”  In proc.of the 6 th Pacific Area Conference on Knowleage Discovery and Data Mining \(PAKDD  2002, pp.108-112 7  http://www.almaden.ibm.com/software/quest/resources/index.shtml 8  http://www-sal.cs.uiuc.edu/hanj/pubs/software.htm 
531 
531 
531 
531 
531 
531 


  40  The second step is started by making logical and   between each pair of frequent 1-itemsets, as we mentioned earlier in this paper, and by assigning 30% as a new value to the minimum support threshold, we found that the frequent 2itemsets will be: {{1, 3}, {1, 4}, {3, 5}}, and the graph is constructed by drawing an edge between each pair of frequent items, as in Figure 1   Figure 1: a simple directed graph to display frequent k-itemsets k 2  To determine frequent 3-itemsets, we traverse the graph as if there is a path among three nodes {i , j} and {j, k then the set {i, j, k} will be frequent 3-itemset. Here, in this example, {{1, 3, 5}} is the only frequent 3-itemsets. As there are no extra edges, the algorithm terminates In the standard situation, as the database contains hundreds of thousands of transactions and different items constructing only one graph is not practical, and so we suggested to construct different graphs for each cluster and find from this graph all frequent itemsets, then combine the subsets of frequent itemsets together to get the whole set of frequent itemsets, and this technique is scalable with all transactions databases of different sizes 6  Experimental Results To assess the efficiency of the proposed technique, we have implemented the CGAR, along with Apriori algorithm using Java programming language on a Pentium IV 1700 MHz PC with 512MB of available physical memory. The test databases are the standard datasets available to evaluate rule mining algorithms, they are: T10I4D100K and T40I10D100K We execute both algorithms, Apriori and CGAR, at various values of minimum support thresholds, as the number of frequent itemsets generated inversely proportional with the value of the minimum support. Figure 2 displays the average execution time in seconds to generate all frequent itemsets using CGAR and Apriori algorithm        Figure 2: a comparison between Apriori and CGAR The experimental results in Figure 2 show that the CGAR algorithm has better performance than Apriori in terms of the execution time. When there is an increase in the number and size of frequent itemsets discovered, i.e. reduction in the minimum support threshold, the performance gap between these algorithms is displayed in greater clearance 7  Conclusion In this paper we propose a new framework, which is scalable and efficient.  The entire database is divided into 1 3 5 4 Time Seconds  Minimum Support 


  41  partitions of variable sizes, each partition will be called a cluster.  Each cluster is consid ered one at a time by loading the first cluster into memory and calculating large itemsets and the corresponding support counts. Then the second cluster is considered similarly and the cumulative support count is calculated for the cumulative large itemsets. This process is continued for the entire set of clusters and finally we have the whole large itemsets and the corresponding cumulative support counts.  This approach reduces main memory requirement since it considers only a small cluster at a time and hence it is scalable for any large size of the database Experiments using two of the standard transaction databases available on the Internet, T10I4D100K and T40I10D100K, show that CGAR outperforms Apriori, a familiar and widely used association rule mining algorithm When there is a reduction in the value of the minimum support threshold, the performance gap between the algorithms becomes more evident References 1 uhJ i u a n T s ay J i un nY a n n Ch ia ng C B A R  an e f f i cie n t m e t h o d f o r  mining association rules, Knowledge-Based Systems 18 \(2005\105 2 R A g r a w a l  T   I m il ie ns ki, A  S w am i Mi ni ng as s o cia t io n r u l e s be tw e e n s e ts  of items in large databases, Proceedings of the ACM SIGMOD International Conference on Management of Data, Washington, DC, 1993 pp. 207–216 3  A y s e Oz el and H  A l tay  G venir  A n A l g o r ithm f o r Mi ni ng A s s o ciati o n  Rules Using Perfect Hashing and Database Pruning, \(2000  4  A g ra w a l R  S r ik ant   M i ni n g s e q u e nt ia l pa tt ern s  P r oc eed in gs of th e 11 th  International Conference on Data Engineering \(ICDE\, 1995 5 F  B e rz a l  J C  C u b e ro N M a rin   J M  Se rra n o  T B A R a n e ffi c i e n t me th od for association rule mining in relational databases, Elserier Data and Knowledge, Engineering 37 \(2001\ 47–64 6   Br i n R  Mo tw an i C. S i l v e r s t e i n, Be y o nd m a r k e t  bas k e t s  g e ne r a l i z i ng  association rules to correlations, ACM SIGMOD Conference on Management of Data, Tuscon, Arizona, 1997 pp. 265–276 7 s ho k S a v a s e r e E d w a r d O m ie ci ns k i a n d S h am ka n t N a v a t h e  A n E f f i cie n t  Algorithm for Mining Association Rules in large databases. 1995 8 a n, J P e i, J Y i n  Y  Min i ng f r e que nt P a tte r ns w i tho u t Ca nd i d a t e  Generation. In: ACM-SIGMOD, Dallas \(2000 9 h o w J ane Y e n an d A r be e  L  P  Che n A G r aphB a s e d A ppr o a c h f o r  Discovering Various Types of Association Rules, IEEE TRANSACTIONS ON KNOWLEDGE AND DATA ENGINEERING, VOL. 13, NO. 5 SEPTEMBER/OCTOBER 2001 10 D  W  C h e u ng J. H a n  V  T   N g A  W  F u Y  F u A f a st dis t r i bu te d  algorithm for mining association rules, Proceedings of International Conference on PDIS’96, Miami Beach, Florida, USA, 1996 11  Be n F r an kl in G e ne al og ical D a t a  Mi ni ng  2 0 0 6    


 F  To check the validity of association rules  E quatio n  1  is use d  as  it is done i n  th e  last column of  Figur e  7   G  Select one  of th e  rules which have Improvement  value more than   1     H  In case if there is another job asking to get the files  and the s e files are available in the same sites then  choose another rule to serve the new request  Otherwise  apply  Aprior i  algorithm for recent STTs  of  new replicas sites    VI I   I NTERPRETING THE  R ESULT S    This section means to explain how the association  rul e s work better than the traditional and random methods  As it is shown in  Figure 7 after applying  Aprior i  algorithm  we get  602  different rules which can be used to select the  best combination of replica sites   Let us explain Figure 7  in details    Rule #1: if Site\(s S 4  S 7  are selected then this implies  that site\(s S 3  can also be selected at the same time. This  rule has 100% confidence    In other words, it means if site  S 4   and  S 7  are selected to  work together to transfer the requested files, t h en this  implies site\(s  S 3  can also be selected to share the work at  the same time. This rule has confidence  100  This  particular rule has  confidence  of  100  meaning that  S 4  S 7   and  S 3  can be selected as a best set of replicas by  Replica  Manage r  to ge t  requested files. To compute the correlation  of this rule and see how far it is better than choosing the site  randomly, we use an Improvement equation     indicates that it has support of  26  transactions, meaning that in transaction  Single Trip  Time  Table  there are  2 6  concurrent uncongested trips of  S 4  S 7   i.e. these sites have similar network conditions in particular  time      indicates the total number of transactions  involving uncongested trips of  S 3   in  Rule 1  is equal to  174    This is a piece of a side information; it is not involved  in calculating the confidence or support for the rule itself       is the number of transactions where   S 4   S 7 as well as   S 3 has uncongested trips. In  Rule 1  it is equal  to  2 6       or   indicates how much  more likely we are to encounter  S 4  and  S 6  transaction if we  consider just those transactions where  S 3  S 5 and  S 8  have  uncongested trips. As compared to the entire population of  the transactions, it's t h e  confidenc e  divided by  support \(c   where the latter is expressed as a percentage   For  Rule 1 the  confidenc e is  100   support \(c  in  percentage   174/194\*100 = 89.6 9 So, th e    Lift ratio = 100/89.69.1 = 1.1   As it is clearly shown in  Figure 7  some r u les with  an improvement value less than one means this is an  unreliable rule. Whereas the rule with a value more than one  means this rule is better than random replica selection with  number of time equal to improvement value as it is shown in  Figure 8                   When improvement value is more than 1 it is better to use  EST to select replica sites, because it selects the sites able to  work simultaneously    I n  Figure  9  we sho w  the  comparison between EST and  traditional model using highest bandwidth a s  a criterion to  select the best replica. As we can observe our technique has  a better performance most of the times because it selects the  sites which have the stable links. In traditional method the  site which has the highest bandwidth does not always me a n  to be the best because sometimes this highest bandwidth  link can be congeste d   Let us declare more by the following  scenario  o f  Figure 1 0 suppose   S 0   be the computing site  and let   S 1  S 3   S 1 4   be replica sites  Red stars referring to  congested router s   Using traditional selection method the  file will be got from S14 since it has less number of Hops  routers\ and highest and also has highest bandwidth link         Figure 8. Improvement ratio for different rule s  Figure 9. Traditional selection strategy and ES T    
193 


               Using  ES T the replica   S 3    is selected as a best replica  because the link b etween  C S  and  R S  is uncongested     VII I   C ONCLUSIO N  In this paper we presented a dynamic replica  selection strategy that aims to adapt at ru n time its criteria to  flexible QoS binding contracts specified by the service  provider and/or the client. The adapta b ility feature  addressed by our replica selection strategy is inferred from  the observation that the basic metrics, which influence the  QoS that the user perceives when accessing a replica  depend directly on the application being replicated and on  the cli e nts\222 preferences. To reach this objective that, we  used   the concept of association rules of data mining  approach to the most stable links sites in order to reduce the  searching space the response time and network resources  consumed    A CKNOWLEDGEMENT S  Au t hors wish to express their sincere thanks to  Prof. Arun Agarwal, from GridLabs Department of  Computer and Information Sciences, University of  Hyderabad, India for providing all the infrastructural and  computational support required to carry out this work  His  academic suggestions to improve the quality of the work are  also highly appreciated and acknowledged   R EFERENCE S     M  Rashedur Rahma n   Ken Barke r   Reda Alhaj j    Replica  selection in grid environment:a dat a mining approac h    Distributed systems and grid computing \(DSGC\,pp: 695  226  700  2005    J. Gwertzman and M. Seltzer    The case for geographical  push  cashing  In Proceeding of the 5th Workshop on Hot ZTopic in  Operating Systems, 1995     R. Kavitha, I. Foster   Design and evaluation of replication  strategies for a high performance data gri d  in, Proceedings of  Computing and High Energy and, Nuclear P h ysics, 2001   S. Vazhkudai, J. Schopf, I. Foster   Predicting the performance of  wid e area data transfer s  in: 16th International PDPS, 2002   S. Vazhkudai, J. Schopf   Using regression techniques to predict  large data transfer s  in: Computing: Infrastru c ture and  Applications, The International Journal of High Performance  Computing Applications, IJHPCA , August, 2003   A. Abbas, Grid Computing    A Practical Guide to Technology  and  A PPLICATION S    2006   http://goc.pragm a grid.net/wiki/index.php/UoHy d   S. Vazhkudai, S Tuecke, I. Foster   Replica selection in the  globus data gri d  in: First IEEE/ACM International Conference  on Cluster Computing and the Grid, CCGrid 2001   J. Guyton and M. Schwartz   L o cating nearby copies of replicated  internet server s    In Proceeding of ACM SIGCOM M 222  95, 1995   A. Tirumala, J. Ferguson, Iperf 1.2   The TCP/UDP Bandwidth  Measurement Tool, 2002   R. Wolski, Dynamically forecasting network performance using  the Network Weat h er Service, Cluster Computing \(1998   Yunhong Gu, Robert L. Grossman   UDT: UD P based data  transfer for hig h speed wide area network s  Computer  Networks, Volume 51, Issue 7, 16 May  2007, Pages 1777 1799  Elsevier   R.M. Rahman, K. Barker, R. Alhajj   Predicting the performance  of GridFTP transfer s  in: Proceedings of IEEE Symposium of  Parallel and Distributed Systems, 2004, New Mexico, USA, p  238a   J. F. Kurose, K.W. Ross   Compute r  Networking A To p Down  Approach Featuring the Interne t 3rd edition   S. Venugopal, . R. Buyya,"The Gridbus Toolkit for Service  Oriented Grid and Utility Computing: An Overview and Status  Report"2004   R   Agrawal  T  Imielinski  A.Swami    Mining associatio n  rules  between sets of items in large database s  In: Proc. ACM  SIGMOD Intl. Conf. Management Data, 199 3  R  M Rahman, K Barker and R Alhajj   Replica selection  strategies in data gri d    Jou r nal of Parallel and Distributed  Computin g   Volume 68, Issue 1 2 Pages 156 1 1574, December  2008   A. Jaradat, R. Salleh and A. Abid   Imitating K Means to  Enhance Data Selectio n  Journal of Applied Sciences 9 \(19  356 9 3574, 2009, ISSN 181 2 5654, Asian Ne t work for Scientific  Informatio n 2009   S. Venugopal, . R. Buyya, K. Ramamohanarao, "A taxonomy of  Data Grids for distributed data sharing, management, and  processing". ACM Comput. Surv. 38, 1 \(Jun. 2006  AC M   New  York, NY, US A  http://www.resample.com/xlminer/help/Index.ht m  A   K Pujar i    Data mining technique s    Hyderabad : Universities  Press, 2002   G. Williams, M. Hegland and S. Roberts   A Data Mining  Tutoria l  IASTED International Conference on Parallel and  Distributed Computing and Networks P DCN\22298\ 14 December  199 8   T  Ceryen, and M. Kevin, 2005   Performance characterization of  decentralized algorithms for replica selection in dstributed object  system s  Proceedngs of 5th International Workshop on Software  and Performance, July 11  14, Palm a de Mallorca, Spain, pp  25 7 262    F  Corina, and M. Mesaac, 2003  A scalable replica selection  strategy based on flexible contract s  Proceedings of the 3rd  IEEE Workshop on Internet Applications, June 2 3 24, IEEE  Computer Society Washington, DC, USA p p: 9 5 99   R. M. almuttari, R. Wankar, A. Negi, C.R. Rao   Intelligent  Replica Selection Strategy for Data Gri d    In proceeding of the  1 0 t h  International conference on Parallel an d  Distributed  Proceedin g  Techniques and Applications  IEEE Computer  Society W a shington, DC  WorldComp2010, GCA2010   LasVega s   USA  Volume3  pp: 9 5 100  July 1 2 1 5 201 0   Cisco Distributed Director  http://www.cisco.com/warp/public/cc/pd/cxsr/dd/index.shtm l  M   Sayal, Y. Breitbart, P. Scheuermann, R  Vingralek   Selection  algorithms for replicated web server s  In Proceeding of the  Workshop on Internet Server Performance,1998   E. Zegura, M. Ammar, Z. Fei, and S. Bhattacharjee   Applicatio n layer anycasting: a se r ver selection architecture and  use in a replicated web servic e  IEEE/ACM Transactions on  Networking, vol. 8, no. 4, pp. 45 5 226 466, Aug. 2000     Figur e  10   Data Grid and their associated network geometr y   
194 


Application of Chaotic Particle Swarm Optimization Algorithm in Chinese Documents Classification 763 Dekun Tan Qualitative Simulation Based on Ranked Hyperreals 767 Shusaku Tsumoto Association Action Rules and Action Paths Triggered by Meta-actions 772 Angelina A. Tzacheva and Zbigniew W. Ras Research and Prediction on Nonlinear Network Flow of Mobile Short Message Based on Neural Network 777 Nianhong Wan, Jiyi Wang, and Xuerong Wang Pattern Matching with Flexible Wildcards and Recurring Characters 782 Haiping Wang, Fei Xie, Xuegang Hu, Peipei Li, and Xindong Wu Supplier Selection Based on Rough Sets and Analytic Hierarchy Process 787 Lei Wang, Jun Ye, and Tianrui Li The Covering Upper Approximation by Subcovering 791 Shiping Wang, William Zhu, and Peiyong Zhu Stochastic Synchronization of Non-identical Genetic Networks with Time Delay 794 Zhengxia Wang and Guodong Liu An Extensible Workflow Modeling Model Based on Ontology 798 Zhenwu Wang Interval Type-2 Fuzzy PI Controllers: Why They are More Robust 802 Dongrui Wu and Woei Wan Tan Improved K-Modes Clustering Method Based on Chi-square Statistics 808 Runxiu Wu Decision Rule Acquisition Algorithm Based on Association-Characteristic Information Granular Computing 812 JianFeng Xu, Lan Liu, GuangZuo Zheng, and Yao Zhang Constructing a Fast Algorithm for Multi-label Classification with Support Vector Data Description 817 Jianhua Xu Knowledge Operations in Neighborhood System 822 Xibei Yang and Tsau Young Lin An Evaluation Method Based on Combinatorial Judgement Matrix 826 Jun Ye and Lei Wang Generating Algorithm of Approximate Decision Rules and its Applications 830 Wang Yun and Wu-Zhi Qiang Parameter Selection of Support Vector Regression Based on Particle Swarm Optimization 834 Hu Zhang, Min Wang, and Xin-han Huang T-type Pseudo-BCI Algebras and T-type Pseudo-BCI Filters 839 Xiaohong Zhang, Yinfeng Lu, and Xiaoyan Mao A Vehicle License Plate Recognition Method Based on Neural Network 845 Xing-Wang Zhang, Xian-gui Liu, and Jia Zhao Author Index 849 
xiii 


   C4.2 Open GL has excellent documentation that could help the developer learn the platform with ease C4.3 Developer has very little ex perience in working with Open GL platform  For our case study, alternative B i.e. Adobe Director was the most favorable alternative amongst all the three. It catered to the reusability criteria quite well and aimed at meeting most of the desired operational requirements for the system   6. CONCLUSION & FUTURE WORK  The main contribution of this paper is to develop an approach for evaluating performance scores in MultiCriteria decision making using an intelligent computational argumentation network. The evaluation process requires us to identify performance scores in multi criteria decision making which are not obtained objectively and quantify the same by providing a strong rationale. In this way, deeper analysis can be achieved in reducing the uncertainty problem involved in Multi Criteria decision paradigm. As a part of our future work we plan on conducting a large scale empirical analysis of the argumentation system to validate its effectiveness   REFERENCES  1  L  P Am g o u d  U sin g  A r g u men ts f o r mak i n g an d  ex p lain in g  decisions Artificial Intelligence 173 413-436, \(2009 2 A  Boch m a n   C ollectiv e A r g u men tatio n    Proceedings of the Workshop on Non-Monotonic Reasoning 2002 3 G  R Bu y u k o zk an  Ev alu a tio n o f sof tware d e v e lo p m en t  projects using a fuzzy multi-criteria decision approach Mathematics and Computers in Simualtion 77 464-475, \(2008 4 M T  Chen   F u zzy MCD M A p p r o ach t o Selec t Serv ice  Provider The IEEE International Conference on Fuzzy 2003 5 J. Con k li n  an d  M. Beg e m a n   gIBIS: A Hypertext Tool for Exploratory Policy Discussion Transactions on Office Information Systems 6\(4\: 303  331, \(1988 6 B P  Duarte D e v elo p in g a p r o jec ts ev alu a tio n sy ste m based on multiple attribute value theroy Computer Operations Research 33 1488-1504, \(2006 7 E G  Fo rm an  T h e  A n a l y t ic Hier a rch y P r o cess A n  Exposition OR CHRONICLE 1999 8 M. L ease  an d J L  L i v e l y  Using an Issue Based Hypertext System to Capture Software LifeCycle Process Hypermedia  2\(1\, pp. 34  45, \(1990 9  P e id e L i u   E valu a tio n Mo d e l o f Custo m e r Satis f a c tio n o f  B2CE Commerce Based on Combin ation of Linguistic Variables and Fuzzy Triangular Numbers Eight ACIS International Conference on Software Engin eering, Artificial Intelligence Networking and Parallel Distributed Computing, \(pp 450-454 2007  10  X  F L i u   M an ag e m en t o f an In tellig e n t A r g u m e n tatio n  Network for a Web-Based Collaborative Engineering Design Environment Proceedings of the 2007 IEEE International Symposium on Collaborative Technologies and Systems,\(CTS 2007\, Orlando, Florida May 21-25, 2007 11 X. F L i u   A n In ternet Ba se d In tellig e n t A r g u m e n tatio n  System for Collaborative Engineering Design Proceedings of the 2006 IEEE International Symposium on Collaborative Technologies and Systems pp. 318-325\. Las Vegas, Nevada 2006 12 T  M A sub jec tiv e assess m e n t o f altern ativ e m ission  architectures for the human exploration of Mars at NASA using multicriteria decision making Computer and Operations Research 1147-1164, \(June 2004 13 A  N Mo n ireh  F u zzy De cisio n Ma k i n g b a se d o n  Relationship Analysis between Criteria Annual Meeting of the North American Fuzzy Information Processing Society 2005 14 N  P a p a d ias HERMES Su p p o rti n g A r g u m e n tative  Discourse in Multi Agent Decision Making Proceedings of the 15th National Conference on Artifical Intelligence \(AAAI-98  pp. 827-832\dison, WI: AAAI/MIT Press,  \(1998a 15  E. B T riantaph y llo u   T h e Im p act o f  Ag g r e g atin g Ben e f i t  and Cost Criteria in Four MCDA Methods IEEE Transactions on Engineering Management, Vol 52, No 2 May 2005 16 S  H T s a u r T h e Ev alu a tio n o f airlin e se rv ice q u a lity b y  fuzzy MCDM Tourism Management 107-115, \(2002 1 T  D W a n g  Develo p in g a f u zz y  T O P S IS app r o ach  b a sed  on subjective weights and objective weights Expert Systems with Applications 8980-8985, \(2009 18 L  A  Zadeh  F u z z y Sets   Information and Control 8  338-353, \(1965  152 


                        





