1  Mining Positive and Negative Association Rules   B.Ramasubbareddy 1 Dr.A.Govardhan 2 Dr.A.Ramamohanreddy 3  1 Associate Professor ,Jyothishmathi Institute of Technology& Science, Karimnagar, India 2 Professor & Principal JNTUH College of Engineering, Nachupally, Karimnagar,India 3 Professor ,S.V.U.College of Engineeri ng , S.V.University, Tirupati, India 1 rsreddyphd@gmail.com 2 govardhan_cse@yahoo.co.in  3 ramamohansvu@yahoo.com    Abstract Association rule mining is one of the most popular data mining techniques to find associations among items in a set by mining necessary patterns in a large database. Typical association rules consider only items enumerated in transactions Such rules are referred to as positive association rules. Negative association rules also consider the same items, but in addition consider negated items \(i.e. absent from transactions\ative association rules are useful in market-basket analysis to identify products that conflict with each other or products that complement each other. They are also very useful for constructing associative classifiers. In this paper, we propose an algorithm that mines positive and negative association rules without adding any additional measure and extra database scans  Index TermsÑData Mining, Negative Association Rules Support, Confidence I  I NTRODUCTION  Association rule mining is a data mining task that discovers associations among items in a transactional database. Association rules have been extensively studied in the literature for their usefulness in many application domains such as recommender systems, diagnosis decisions support telecommunication, intrusion detection, etc. Efficient discovery of such rules has been a major  focus in the data mining research. From the celebrated Apriori algorithm [1  there have been a remarkable number of variants and improvements of association rule mining algorithms typical example of association rule mining application is the market basket analysis. In this process, the behavior of the customers is studied with reference to buying different products in a shopping store. The discovery of interesting patterns in this collection of data can lead to important marketing and management strategic decisions. For instance, if a customer buys bread, what are chances that customer buys milk as well? Depending on some measure to represent the said chances of such an association, marketing personnel can develop better planning of the shelf space in the store or can base their discount strategies on such associations/correlations found in the data. All the traditional association rule mining algorithms were developed to find positive associations between items. By positive associations, we refer to associations between items exist in transactions containing the items bought together. What about associations of the type customers that buy Coke do not buy Pepsié or çcustomers that buy juice do not buy bottled wateré? In addition  to the positive associations, the negative association can provide valuable information, in devising marketing strategies. This paper is structured as follows: the next section recalls preliminaries about Association Rules, In Section 3, existing strategies for mining negative Association Rules are reviewed The proposed algorithm is presented in Section 4 and this is a new Apriori-based algorithm for finding all valid positive and negative association rules. Section 5 contains conclusions and future work II  BASIC  CONCEPTS  AND  TERMINOLOGY This section introduces association rules terminology and some related work on negative association rules A  Association Rules Formally association rules are defined as follows Let I i 1  i 2 i n  be a set of items. Let D be a set of transactions where each transaction T is a set of items such that T  I  Each transaction is associated with a unique identifier TID A transaction T is said to contain X a set of items in I if X  T  An association rule is an implication of the form X  Y  where X    I; Y    I, and  X  Y The rule X  Y has support s in the transaction set D if s of the transactions in D contain X U Y In other words, the support of the rule is the probability that X and Y hold together among all the possible presented cases. It is said that the rule X  Y holds in the transaction set D with confidence c if c of transactions in D that contain X also contain Y In other words, the confidence of the rule is the conditional probability that the consequent Y is true under the condition of the antecedent X The problem of discovering all association rules from a set of transactions D consists of generating the rules that have a support and confidence greater than given thresholds. These rules are called strong rules and the framework is known as the support-confidence framework for association rule mining Definition of Negative Association Rule A negative association rule is an implication of the form X   Y or X  Y or  X  Y here X   I  Y   I and X  Y Note that although rule in the form of X  Y  contains negative elements, it is equivalent to a positive association rule in the form of Y  X Therefore it is not considered as a negative association rule.\trast to positive rules, a negative rule encapsulates relationship between the  occurrences of one set of items with the absence of the other set of items. The rule X  Y has support s in  the data sets, if s of transactions in T contain itemset X while do not contain itemset Y The support of a negative 978-1-4244-6005-2/10/$26.00 ©2010 IEEE The 5th International Conference on Computer Science & Education Hefei, China. August 24ñ27, 2010 1403 ThP9.20 


2  association rule supp\( X  Y is the frequency of occurrence of transactions with item set X in the absence of item set Y Let U be the set of transactions that contain all items in X The rule X  Y holds in the given data set database\ith confidence c if c% of transactions in U do not contain item set Y Confidence of negative association rule conf \( X  Y can be calculated with P\( X  Y \/P\(X  where P is the probability function. The support and confidence of itemsets are calculated during iterations However, it is difficult to count the support and confidence of non-existing items in transactions. To avoid counting them directly, we can compute the measures through those of positive rules III  RELATED  WORK  IN  NEGATIVE  ASSOCIATION  RULE  MINING We give a short description of the existing algorithms that can generate positive and negative association rules The concept of negative relationships mentioned for the first time in the literature by Brin T o v e rify  th e  independence between two variables, they use the statistical test. To verify the positive or negative relationship, a correlation metric was used. Their model is chi-squared based The chi-squared test rests on the normal approximation to the binomial distribution \(more preci sely, to the hyper geometric distribution\his approximation breaks down when the expected values are small  A new idea to mine strong negative rules presented in They combine positive frequent itemsets with domain knowledge in the form of taxonomy to mine negative associations. However, their algorithm is hard to generalize since it is domain dependent and requires a predefined taxonomy. Finding negative itemsets involve following steps 1\irst find all the generalized large itemsets in the data \(i.e itemsets at all levels in the taxonomy whose support is greater than the user specified minimum support\\(2\next identify the candidate negative itemsets based on the large itemsets and the taxonomy and assign them expected support. \(3\ the last step,  count the actual support for the candidate itemsets and retain only the negative itemsets .The interest measure RI of negative association rule X   Y as follows RI=\(E[support X U Y  s u pport X U Y  u pport X   Where E[support\(X th e expected s u pport of an ite m s e t X   A new measure called mininterest the argument is that a rule A  B is of interest only if supp  A U B  supp  A  supp  B  mininterest ded on top of the support-confidence framework T h ey co n s i d er th e ite m s ets pos iti v e or  negative\hat exceed minimum support and minimum interest thresholds as itemsets of interest. Although trodu ces t h e  mininteresté parameter, the authors do not discuss how to set it and what would be the impact on the results when changing this parameter A novel approach has proposed in [15  I n this m i ni ng  both positive and negative association rules of interest can be decomposed into the following two sub problems, \(1\enerate the set of frequent itemsets of interest \(PL\ and the set of 2\tract positive rules of the form A=>B in PL and negative rules of the forms A  B,  A  B and  A  B in NL. To generate PL NL and negative association rules they developed three functions namely,  fipi\(\\(\d CPIR The most common frame-work in the association rule generation is the çSupport-Confidenceé one. In thors  considered another frame-work called correlation analysis that adds to the support-confidence. In this paper, they combined the two phases \(mining frequent itemsets and generating strong association rules\d generated the relevant rules while analyzing the correlations within each candidate itemset. This avoids evaluating item combinations redundantly. Indeed, for each generated candidate itemset, they computed all possible combinations of items to analyze their correlations. At the end they keep only those rules generated from item combinations with strong correlation. If the correlation is positive, a positive rule is discovered. If the correlation is negative, two negative rules are discovered. The negative rules produced are of the form X  Y or  X   Y which the authors term as confined negative association rulesé. Here the entire antecedent or consequent is either a conjunction of negated attributes or a conjunction of non-negated attributes An innovative approach has proposed in In th is   generating positive and negative association rules consists of four steps: \(1\nerate all positive frequent itemsets L \( P 1  ii\or all itemsets I in L\( P 1 generate negative frequent itemsets of the form  \( I1 I2 \ \(iii\erate all negative frequent  itemsets    I1 I2 \(iv\ Generate all negative frequent itemsets     I1  I2 and \(v\nerate all valid positive and negative association rules . Authors generated negative rules without adding additional interesting measure\(s\ to support-confidence frame work IV  ALGORITHM In this section we propose and explain our algorithm Apriori algorithm has two steps, namely, the join step and the prune step. In join step all frequent itemsets of previous level joined itself to obtain candidate itemsets i.e., by joining L k-1 to itself i.e C k L k -1   L k Ö 1  In pruning step, for each I  C k it applies Apriori Property an itemset is frequent if all its subsets are also frequent  Itemsets satisfying Apriori Property are called as valid itemsets and it is denoted by PC K NC K can be obtained by replacing each literal in PC K by its corresponding negated item. For a valid candidate with n literals it produces n negative itemsets Support of  negative itemsets can be obtained from positive itemsets  1  Algorithm: Negative Association Rules \(NAR  INPUT   D:Transactional database ms: minimum support mc: minimum confidence  1404 ThP9.20 


3  OUTPUT Positive and Negativ e Association Rules Method   1  L 1 frequent-1-positive-itemsets\(D 2  N 1 frequent-1-Negative-itemsets\(D complement frequent-1-positive-itemsets\(D 3  L=L 1 U N 1  4  for \(k=2;     L k-1 k 5   6    Generating C k  7  for each l 1 l 2 L k-1  8  If\(l 1 1]=l 2 1]^ÉÉÉÉl 1 k2 k-2 1 k1]<l 2 k-1 9  C k C k   l1 [1]ÉÉ.l 1 k-2 1 k-1 2 k\(10  end if 11  end for 12   Pruning using Apriori property 13  for each \(k-1\ subsets s of c in C k  14  If s is not a member of L k-1  15  C k C k c 16  end if 17  end for 18  PC k C k  19  for each c in PC K  20  NC k c k 1 c k 1 is obtained by replacing a literal of c in PC k by its negation 21   Pruning using Support Count 22  Scan the database and find support for all c in PC k  23  L k candidates in PCk that pass support threshold 24  Find support for all c k 1 in NC k from supports of members of PC K and L k-1  25  N k candidates in NC k that pass support threshold 26  L= L k U N k  27       Line 1 generates positive-frequent-1itemsets   Line 2 generates negative-frequent-1itemsets by complementing 1-itemsets obtained in Line  1   Line 8 and 9 generates candidate itemsets C k  using Apriori algorithm   Line 13-15 pruning candidate itemsets in C k  using Apriori property   Lines 18, after pruning, the remaining elements are treated as valid candidates and is denoted by PC k    Line 19-20, for each literal of this valid candidate, replace the literal with the corresponding negated literal, creates a new negative rule and denoted by NC k Each valid candidate with n number of literals in the antecedent will generate n new negative itemsets. For example a 3-itemset ABC will give 3 negative items ABC, ABC, and ABC   Line 22-23, prune all items in PC k using support count and add to L k set of frequent k-itemsets   Line 24, find support count of all items in NC k using PC k and L k-1    support\(A\ = 1- suuport\(A   support\(AUB\upport\(A\-support\(AU B   support\(AUB\upport\(B\support\(AU B   support\(AUB\support\(A support\(B\upport\(A U B   Line 25, N k is the set of all elements whose support  minsupp   The generation of positive rules continues without disruption and the rich but valuable negative rules are produced as by-products of the Apriori process  V  EXPERIMENTAL  RESULTS We tested proposed algorithm on a synthetic dataset to study the  performance of the algorithm.  However, to illustrate the algorithm, we hereunder provided the solution to a typical example Example Let us consider a small transactional table with 15 transactions and 9 items. In Table 1 a small transactional database is given  TABLE   I.    A Transaction Table   TID  ITEMS  TID  ITEMS  TID  ITEMS  T1  I1,I5,I6, I8  T6  I2,I3,I4  T11  I3,I5,I7  T2  I2,I4,I8  T7  I2,I6,I7,I9  T12  I5,I6,I8  T3  I4,I5,I7  T8  I5  T13  I2,I4,I6,I7  T4  I2,I3  T9  I8  T14  I1,I3,I5,I7  T5  I5,I6,I7  T10  I3,I5,I7  T15  I2,I3,I9  In the following tables, L K denoted as positive frequent kitemsets and N K denoted as negative frequent k-itemsets Consider minimum support as 20%. In N K bold itemsets are infrequent negative itemsets  Table II.   Frequent 1-Positive And Negative Itemsets  L1 SUPP N1 SUPP I2 0.4 I2 0.6 I3 0.4 I3 0.6 I4 0.27 I4 0.73 I5 0.53 I5 0.47 I6 0.33 I6 0.67 I7 0.47 I7 0.53 I8 0.27 I8 0.73 1405 ThP9.20 


4  Table III.     Frequent 2-Positive Itemsets    L2  I2 I3  I2 I4  I3 I5  I3 I7  I5 I6  I5 I7  I6 I7  SUPP  0.2  0.2  0.2  0.2  0.2  0.33  0.2  Table IV: Frequent 2-Negative Itemsets  N2 SUPP N2 SUPP I2 I3 0.2 I2 I3 0.2 I2 I4 0.07 I2 I4 0.2 I3 I5 0.33 I3 I5 0.2 I3 I7 0.27 I3 I7 0.2 I5 I6 0.13 I5 I6 0.33 I5 I7 0.14 I5 I7 0.2 I6 I7 0.27 I6 I7 0.13  Table V: Frequent 3-Positive Itemsets L3 SUPP I3I5I7 0.2   Table VI: Frequent 3-Negative Itemsets  N3 SUPP I3I5I7 0.13 I3I5I7 0 I3I5I7 0  VI  CONCLUSION  AND  FUTURE  WORK In this paper, we proposed an algorithm that mines both positive and negative association rules. Our method generates positive and negative rules with existing support-confidence framework and no extra scan is required for mining negative association rules. We conducted experiments on synthetic data set. It is producing larger number of negative rules. In future we wish to conduct experiments on real datasets and compare the performance of our algorithm with other related algorithms REFERENCES  1  R Agrawal and R. Srikant Fast algorithms for mining associationrules In VLDB, Chile, September 1994 2  J. Han, J. Pei, and Y. Yin Mining frequent patterns without candidate generation. In SIGMOD, dallas,   Texas, 2000 3  C. Blakeand C. Merz. UCI repository of machine learning databases 4  S.Brin, R. Motwani, and C.Silverstein Beyond market baskets Generalizing association rules to correlations.  In ACM SIGMOD Tucson, Arizona, 1997 5  D. Thiruvady and G. Webb Mining negative association    rules using grd In PAKDD, Sydney, Australia, 2004 6  B.Ramasubbareddy, A.Govardhan, and  A.Ramamohanreddy. Adaptive approaches in mining    negative association rules. In intl. conference on ITFRWP-09, India Dec-2009 7  Goethals, B., Zaki, M., eds FIMIê03: Workshop on Frequent Itemset Mining Implementations. Volume 90 of CEUR Workshop  Proceedings series. \(2003 http://CEUR-WS.org/Vol-90  8  Teng, W., Hsieh, M., Chen, M On the mining of substitution rules for statistically dependent items. In:         Proc. of ICDM. \(2002\ 442Ö449 9  Tan, P., Kumar, V.: Interestingness measures for     association patterns A perspective.In: Proc. of   Workshop on Postprocessing in Machine Learning and    Data Mining. \(2000   Gourab Kundu, Md. Monirul Islam, Sirajum Munir, Md.  Faizul Bari ACN: An Associative Classifier with Negative  Rules 11th IEEE International Conference on    Computational Science and Engineering 2008   Brin,S., Motwani,R. and Silverstein,C Beyond Market  Baskets: Generalizing Association Rules to Correlations Proc. ACM SIGMOD Conf., pp.265-276,   May 1997   Chris Cornelis, peng Yan, Xing Zhang, Guoqing Chen:   Mining Positive and Negative Association Rules from  Large Databases , IEEE conference 2006   M.L. Antonie and O.R. Za®ane Mining Positive and Negative Association Rules: an Approach for Confined Rules Proc. Intl. Conf on Principles and Practice of  Knowledge Discovery in Databases, 2004 pp 27Ö38   Savasere, A., Omiecinski,E., Navathe, S Mining for Strong negative associations in a large data base of customer transactions In: Proc. of ICDE. \(1998\-  502   Wu, X., Zhang, C., Zhang, S.: efficient m ining both positive and negative association rules ACM  Transactions on Information Systems Vol. 22, No.3,   July 2004,Pages 381-405   Wu, X., Zhang, C., Zhang, S Mining both positive and negative association rules.In: Proc. of ICML. \(2002\658Ö665   Yuan,X., Buckles, B.,Yuan, Z.,Zhang, J Mining Negative Association Rules. In: Proc. of ISCC. \(2002\     623-629   Honglei Zhu, Zhigang Xu An Effective Algorithm for Mining Positive and Negative Association Rules.   International Conference on Computer Science and   Software Engineering 2008   Pradip Kumar Bala:A Technique for Mining Negative Association Rules  Proceedings of the 2nd Bangalore  Annual Compute Conference  2009   Data Mining: Concepts and Techniques  Jiawei Han,  Micheline Kamber 1406 ThP9.20 


  W 6 MF6A6/J  6?\012J  015\0154\015<\015\015 A 015'&[%	F+***=%+2E0I%E A\015 \015 \015F\015NN\(&\015 015\015\015\015\015 F\015NN \015\015\015\015\0154\015 4<\0157J	J\015 \015	J 015\015	\015J 015\015!\015     015\015   015 \015\015\015\015\015\015 0153!\015 7J   015 015 015   0153!\015      015 015 56  015\0154\015\015\015\015  015     015  015 \015!\015\015 \0154 1  0153!\015 015     015  C  4@X3 I A\015  F 015 3    015   015A\015\015\015\015   015   015 0153!\015   015\015!\015 015 015  015  015  015\015 2  015	!\015F\015\015 0    015 C   015\015 015 015\015 015\015\015\015\015\015 0153!\015\0154\015!4F\015NN 7J   015  015 015   015   015   6\015AEF\015  A\015  015 A\015    0153!\015        0153!\015\015  A3\015 \015!!4F\015NN     015QAQ\015\015#V  Q0!/-Q\015\015#V V4  Q'+3:+#V4$\\Q"\015Q\015#V4VI$\\"\015Q\015#VI  012QA#VI V  IQQ?\015 Q#V 012   Q A       V  V      015QAQ\015\015#V  Q0!/-Q\015\015#V V4  Q'+3:+#V4$\\Q"\015Q\015#V4VI$\\"\015Q\015#VI 012QA#VIV$\\	\01543\015Q&Q!\015 QQ?\015Q#V  012QA#V<V    015QAQ\015\015#V  Q0!/-Q\015\015#V V4  Q:'32*#V4$\\Q"\015Q\015#V4VI$\\"\015Q\015#VI 012QA#VIV$\\@QQ?\015Q#V  012   Q A       V   V       QQ?\015Q#V<$\\Q^	QQA\015#V V4$\\^	QQA\015#V4$\\Q^	QQF!Q Q6\015#V4VI$\\^	QQF!Q/Q6\015#VI Q^	QQF4QA#VIV$\\^	QQF4Q A#V   Q A      Q      015   V  V   3-3%3\(4\015\015 \0150 015I FF&4!\015 0150!/-:\\015@4 015 3&4\015\015 \015I 015\015!\015 \015\015\015 015\015 456?? \0154\015\015  015 015!44\015\0150 A 015  015  015 015\015 015 4\015  015  015 015 015 015 015 015H<\015\015"\(7J! \015 7J 015   56   015 015  015 015\015\01556   7J! \015?7J\01556  


   015\015\01556   015 015  H 015  015 4 0150!/-<0!/-:\1#\015 132*1$\015\0153!\015A\015 015\015\015\015 015   015       015        015<\015!\015\015 7\015\015!\015 4   015   015    0!/-\(\015\015\015\0154 015!\015 \015  015  015 015 015 015 015 015H<\015\015   015 4\015   0153!\015 0154\015\015\015\015\015\015 01544\015\015\015\0154 015 \015\015!\015\015\015 W  J\012  012\01267K  015\0153!\015\015\015\015 015\015"\015\0154  F\015NN 015  015 015\015 0153!\015    015\015 0154  015 7J 015!\015\0153!\015\015  M?J 015 015 7J 015 56 015  4 015 4\015  015  4 56  015  015 015 015 015 015   015\015!\015\015\0154\015 015 0153!\015  0154  015\015 015 015\0150 \015!\015\015 015\015\015\015!\015\015 015\0154!\015\0153!\015 444\015 015\01504! \0153!\015 015\015\015!\0154\015\015 015\015\015\0154\015 015\015\015\015\015\015 0154\015\015T\0154\015\015 015\015H 015 0154  015 015\015     K7J6	EA6  015 \015\015\015\015 015    015 8  2\3\(%&3   6"666   5BJ0FD\012/\015 \015 015\015 0154  T4   015"T4G6<\015?4\015 \015/\015#%**\$W   BJD\01543!\015\015?T?4\015 \015 015D6<\015?4\015 \015/\015#%**2$W   K	JAD6<\015?4\01587\0156<\015?4\015VG J!4?\015  #-22&$W   E D\015 3   015\015 015   AJG 6\015    015#%**&$W\(-%3  AKD\012?7J7J	J\015	?4\015 G\015	A\015	\015\015 015A\015B\015\012\0154   0  J 7 A K 0 7  D 015 4  FI"\015G"II4\015F?\0154   07!J@??@\015 \0156A@\015\0150!B 00F?5JE5FJ45 A    D 015   6\015 A E   F\015   A\015  015 A 015G  015   6\015#%**:$W-\(-3  7\015455D/\0154!C\015G\015\0155 K 	\0156#-222$-++3 2 A07?J0J7AKD\01543!"II4  015  015 015G II4 015 F?\0154#%**:$:23   B  A 0 7  B  DF\015 015 K A 01547!JG6<\015?4\015 015/\015#%**2$W\('\(&\(223    015 0\015  5  015\0158SS 015 STST 4-Q\015   015\015  0\015 6<\015 B  5  015\0158SS 015 S\015 S<Q     A 015  2 015\0158SS   \015 S 63-3-\015   56 015  6  015 5 F\015  2 015\0158SSI S   4	JAE\0154	\015 8/E\015 015 B 015 0154  2 015\0158SS   3\015SSSS\01543\015\015343 3!\015\015\015   7J 0157!J!7JAJ 5%*-*$\015\015 8SS    \(S?!S?7JS  


   for overlooking the overall software development process and playing a crucial role in making important decisions  5.1.3. The Criterion Set As stated earlier, criterion is the attribute for which favorability of an alternativ e is calculated. The criterion set defined for this case study comprises of Reusability  Meeting Operational Requirements and Meeting Project Deadline By reusability, we mean, the amount of reuse of different functionalities that ca n be achieved from the previously developed system on Mine detection training tool. Meeting operational requirements implies how effectively a desired operational capability can be satisfied by an alternative. For example, some alternative might lack a certain operational capability like database support whereas another may support it with enhanced features. Meeting project deadline stresses on the fact whether the project requirements can be satisfactorily achieved within the stipulated deadline which in our case was around one year  5.1.4. The Alternatives To resolve the concerned issu e, the stakeholders decided to choose one software platfor m for developing the mine detection training tool among the three stated alternatives Adobe Director  Adobe Flash  Open GL were chosen as the three possible alternatives along with some justifications. Adobe Flash was chosen as one of the alternatives because; the stakeholders already had a previous developed system for mine detection developed using Adobe Flash    Figure 6. Mine Detection System Along With Three Alternatives One of the considerations involved here was to enhance this system rather than develop a new system from scratch. Same reason applied to choosing Adobe Director as one of the other alternatives. Open GL was picked up as one of the three alternatives in the case when a new development had to be started Open GL is an advanced software development platform and it could have served as a good platform for the mine detection training system  Figure 6 summarizes the pro ject and its three alternatives positions available  5.2. Prioritizing The Criteria  For an effective decision making, we had to weigh the criteria according to their im portance in the decision making process. For this, we choose Analytic Hierarchy process because of its effectiveness in performing pair wise comparison of elements .Table 2 shows the ranking table used for comparing the two criteria  Table 2. Criteria Comp arison Table For AHP  Value a ij  Comparison Description 1 Criteria i and j are of equal importance 3 Criteria i is weakly more important than j 5 Criteria i is strongly more important than j 7 Criteria i is very strongly more important than j 9 Criteria i is absolutely more important than j   Table 3. Comparison Values For Prioritizing Different Criteria   Reusability Meeting Operational Requirements Meeting project Deadline Reusability 1 1/5 3 Meeting Operational Requirements 5  1  7 Meeting Project Deadline  1/3 1/7  1   149 


   Table 4. Normalized Criteria Comparison Table In AHP   Reusability Meeting Operational Requirements Meeting project Deadline Reusability 0.157 0.148 0.272 Meeting Operational Requirements 0.789 0.744 0.636 Meeting Project Deadline 0.052 0.106 0.090  Table 3 and Table 4 show the weight values of the three criterions as compared to each other using the AHP process. These weights have been decided by the stakeholders after discussions among themselves Average weights can be derived from Table 4 as follows Reusability- 0.193 Meeting Operational Requirements- 0.724 Meeting Project Deadline- 0.083 These weights represent the priority of each criterion on a scale of 0 to 1  5.3. Argumentation Tree  We develop argumentation tree for each and every alternative separately. The ar guments are stated by stake holders and assembled under the alternative but they target a specific cr iterion. These arguments can either be supporting or attacking each other or their respective alternative nodes. We present three figures, where each figure represents the argumentation hierarchy for one alternative. Rectangular boxes represent the alternatives with the name of the alternative under it. Ovals represent the criteria with their descr iption. The arguments are specified by labels èAê, èBê, èCê for alternative çAdobe flashé, çAdobe Directoré and çOpen GLé respectively Along with the labels, the arguments also have indexes associated with them. Beneath the labels are two boxes The box on left shows the weight of the argument whereas the box on right shows the priority of the stakeholder who specifies the argument  Once the argument has been sp ecified, the user enters its weight. We first reassess the weights of the arguments using priority reassessment discussed in h e n us ing the techniques specified in [11 w e red u ce t h e arg u m e n t s  to a single level. Finally, the weighted summation of the arguments with the criteria weights helps us evaluate the final weights for the decision matrix. It is important to note here that, the aggregation method used for calculating the favorability is a weighted summation  The three argumentation hierarchies for the three alternatives are presented in the Figures 7, 8, and 9. The diagrams contain arguments, their weights and the stakeholderês priorities     Figure 7. Argumentation Tree For Adobe Flash   Figure 8. Argumentation Tree For Adobe Director 150 


     Figure 9. Argumentation Tree For Open GL  A1 The current system in flash does not have the functionality of dynamic allocation of particles like mine or clutter. It places them randomly  A1.1 That is not of much importance because it still gives a new position to mine and clutter particles A2 Current system in flash has faster response time as compared to system in Adobe Director A3 The current system doesnêt satisfy many of the features required for the new system like database A4 Adobe Flash cannot communicate with database A4.1 Flash doesnêt support database but database support is very important and critical A4.1.1 The system should be able to generate evaluation reports for trainee based on pr evious records stored in the database A5 Flash doesnêt create sound clips  A5.1 We donêt need sound creating features as the sys tem has to generate sound. We can play externally recorded sound files using Adobe Flash A6 Flash can provide good visual effects as compared to Adobe Director A7 The developer has good knowledge in development using Flash so the system can be developed quickly B1 We could reuse the system already developed for sound generation, as it is developed using Adobe Audition for analysis which is somehow related to Adobe Director B1.1 The current system is better synthesized in terms of sound production and the sound produced is also instantaneous rather than discrete B1.2 That current system has certain performance issues like slow response time B1.3 The current system in Adobe Director has the feature of producing dynamic coloring scheme on approaching a mine. This kind of scheme is highly preferable and is not present in Adobe Flash system B2 Adobe Director can provide more functionality as compared to the current flash system. E.g. Multiple sounds while detecting mines   B2.1 Adobe Director can provide better visual effects as compared to flash e.g. in case of GUIês   B2.2 A modified version of the current system in flash can also provide the same functionality B2.2.1 We cannot integrate code developed in other platforms with Flash, but Flash can be integrated in Adobe Director B3 The interface provided by flash is not professional enough. It is too simple and straight forward for doing more things in future   B4 Easily available plug-ins can help integrate the tracking system developed in C# with Adobe Director  B4.1 Code developed in Open GL/AL can also be integrated using Adobe Director using suitable stubs   B5 A new sound recognition algorithm is being developed in Adobe Audition which can be integrated with Adobe Director but not with Open GL or Flash Evidence supported B6 If the current system is reused; the project deadline can be met easily B7 The developer has very little experience in development using Adobe Director   B7.1 The developer can take help from the already developed system in Adobe Director C1 The tracking software already developed is coded in C#/NX5. We could reuse that and develop our system in Open GL/AL C1.1 Open GL has C# libraries which can be used to develop the system C2 Because the platform used is for high end application development, it can provide good GUI and database support C2.1 Open GL/AL can help us generate dynamic surfaces for mine detection and training which the original system in flash does not have C4 Open GL does not support connectivity with Adobe Audition. Adobe Audition is required for creating sound recognition algorithm C3 Open GL does not support connectivity with Adobe Audition. Adobe Audition is required for creating sound recognition algorithm C4 The time taken for developing the project using open GL will be comparatively more as the whole system would have to be developed from scratch C4.1 If Open GL has support for C# libraries, and then the system could be develope d faster as developer is quite familiar with programming languages like C 151 


   C4.2 Open GL has excellent documentation that could help the developer learn the platform with ease C4.3 Developer has very little ex perience in working with Open GL platform  For our case study, alternative B i.e. Adobe Director was the most favorable alternative amongst all the three. It catered to the reusability criteria quite well and aimed at meeting most of the desired operational requirements for the system   6. CONCLUSION & FUTURE WORK  The main contribution of this paper is to develop an approach for evaluating performance scores in MultiCriteria decision making using an intelligent computational argumentation network. The evaluation process requires us to identify performance scores in multi criteria decision making which are not obtained objectively and quantify the same by providing a strong rationale. In this way, deeper analysis can be achieved in reducing the uncertainty problem involved in Multi Criteria decision paradigm. As a part of our future work we plan on conducting a large scale empirical analysis of the argumentation system to validate its effectiveness   REFERENCES  1  L  P Am g o u d  U sin g  A r g u men ts f o r mak i n g an d  ex p lain in g  decisions Artificial Intelligence 173 413-436, \(2009 2 A  Boch m a n   C ollectiv e A r g u men tatio n    Proceedings of the Workshop on Non-Monotonic Reasoning 2002 3 G  R Bu y u k o zk an  Ev alu a tio n o f sof tware d e v e lo p m en t  projects using a fuzzy multi-criteria decision approach Mathematics and Computers in Simualtion 77 464-475, \(2008 4 M T  Chen   F u zzy MCD M A p p r o ach t o Selec t Serv ice  Provider The IEEE International Conference on Fuzzy 2003 5 J. Con k li n  an d  M. Beg e m a n   gIBIS: A Hypertext Tool for Exploratory Policy Discussion Transactions on Office Information Systems 6\(4\: 303  331, \(1988 6 B P  Duarte D e v elo p in g a p r o jec ts ev alu a tio n sy ste m based on multiple attribute value theroy Computer Operations Research 33 1488-1504, \(2006 7 E G  Fo rm an  T h e  A n a l y t ic Hier a rch y P r o cess A n  Exposition OR CHRONICLE 1999 8 M. L ease  an d J L  L i v e l y  Using an Issue Based Hypertext System to Capture Software LifeCycle Process Hypermedia  2\(1\, pp. 34  45, \(1990 9  P e id e L i u   E valu a tio n Mo d e l o f Custo m e r Satis f a c tio n o f  B2CE Commerce Based on Combin ation of Linguistic Variables and Fuzzy Triangular Numbers Eight ACIS International Conference on Software Engin eering, Artificial Intelligence Networking and Parallel Distributed Computing, \(pp 450-454 2007  10  X  F L i u   M an ag e m en t o f an In tellig e n t A r g u m e n tatio n  Network for a Web-Based Collaborative Engineering Design Environment Proceedings of the 2007 IEEE International Symposium on Collaborative Technologies and Systems,\(CTS 2007\, Orlando, Florida May 21-25, 2007 11 X. F L i u   A n In ternet Ba se d In tellig e n t A r g u m e n tatio n  System for Collaborative Engineering Design Proceedings of the 2006 IEEE International Symposium on Collaborative Technologies and Systems pp. 318-325\. Las Vegas, Nevada 2006 12 T  M A sub jec tiv e assess m e n t o f altern ativ e m ission  architectures for the human exploration of Mars at NASA using multicriteria decision making Computer and Operations Research 1147-1164, \(June 2004 13 A  N Mo n ireh  F u zzy De cisio n Ma k i n g b a se d o n  Relationship Analysis between Criteria Annual Meeting of the North American Fuzzy Information Processing Society 2005 14 N  P a p a d ias HERMES Su p p o rti n g A r g u m e n tative  Discourse in Multi Agent Decision Making Proceedings of the 15th National Conference on Artifical Intelligence \(AAAI-98  pp. 827-832\dison, WI: AAAI/MIT Press,  \(1998a 15  E. B T riantaph y llo u   T h e Im p act o f  Ag g r e g atin g Ben e f i t  and Cost Criteria in Four MCDA Methods IEEE Transactions on Engineering Management, Vol 52, No 2 May 2005 16 S  H T s a u r T h e Ev alu a tio n o f airlin e se rv ice q u a lity b y  fuzzy MCDM Tourism Management 107-115, \(2002 1 T  D W a n g  Develo p in g a f u zz y  T O P S IS app r o ach  b a sed  on subjective weights and objective weights Expert Systems with Applications 8980-8985, \(2009 18 L  A  Zadeh  F u z z y Sets   Information and Control 8  338-353, \(1965  152 


                        





