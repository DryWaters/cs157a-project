On Mining General Temporal Association Rules in a Publication Database Chang-Hung Lee Cheng-Ru Lin, and Ming-Syan Chen Department of Electrical Engineering National Taiwan University Taipei, Taiwan ROC E-mail mschen@cc.ee.ntu.edu.tw  chlee, owenlin arbor.ee.ntu.edu.tw Abstract In this papel we explore a new problem of mining gen eral temporal association rules in publication databases In essence, a publication database is a set of transactions where each transaction T is a set of items of which each item contains an individual exhibition period The cur rent 
model of association rule mining is not able to handle the publication database due to the following fitndamental problems i.e I lack of consideration of the exhibition period of each individual item 2 lack of an equitable sup port counting basis for each item To remedy this, we pm pose an innovative algorithm Progressive-Partition-Miner abbreviated as PPM to discover general temporal asso ciation rules in a publication database The basic idea of PPM is to first partition the publication database in light of exhibition perioch 
of items and then progressively accu mulate the occurrence count of each candidate 2-itemset based on the intrinsic partitioning characteristics Algo rithm PPM is also designed to employ a3ltering threshold in each partition to early prune out those cumulatively infre quent 2-itemsets ExplicitrY the execution time of PPM is in orders of magnitude, smaller than those required by the schemes which are,directly extended from existing methods 1 Introduction The discovery of association relationship among a huge database has been known to be useful in selective market ing, decision analysis, and business management 
4 91 A popular area of applications is the market basket analysis which studies the buying behaviors of customers by search ing for sets of items that are frequently purchased together or in sequence For a given pair of confidence and sup port thresholds the problem of mining association rules is to identify all association rules that have confidence and support greater than the corresponding minimum support threshold \(denoted as min-sup and minimum confidence threshold \(denoted as min-conf Since the early work in I several efficient algorithms to mine association rules have been developed 
in recent years These studies cover a broad spectrum of topics in cluding 1 fast algorithms based on the level-wise Apri ori framework 2 131 and partitioning I l 2 FP-growth algorithms 8 3 incremental updating 6 IO 4 min ing of generalized and multi-level rules 7 141 5 mining of quantitative rules IS 6 mining of multi-dimensional rules 18 7 constraint-based rule mining I61 and mul tiple minimum supports issues 12 171 and \(8 
temporal association rule discovery 3 51 While these are important results toward enabling the integration of association mining and fast searching algo rithms e.g BFS and DFS which are classified in 9 we note that these mining methods cannot effectively be ap plied to the mining of a publication-like database which is of increasing popularity recently In essence a publication database is a set of transactions where each transaction T is a set of items of which each item contains an individ ual 
exhibition period The current model of association rule mining is not able to handle the publication database due to the following fundamental problems i.e 1 lack of consideration of the exhibition period of each individ ual item 2 lack of an equitable support counting basis for each item Note that the traditional mining process takes the same task-relevant tuples i.e the size of transaction set D as a counting basis Recall that the task of support speci fication is to specify the minimum transaction support for 
each itemset However since different items have different exhibition periods in a publication database, only consider ing the occurrence count of each item might not lead to a fair measurement This problem can be further explained by the illustrative example below Example 1.1 In a bookstore transaction database as shown in Figure 1 the minimum transaction support and confidence are assumed to be min-supp  30 and min-conf  75 respectively A set of time series 0-7695-1 119-8/01 317.00 0 2001 IEEE 337 


1 Item Informadon Item PublicationDate a Feb4l Mar-01 Figure 1 An illustrative transaction database and the corresponding item information database indicates the transaction records from January 2001 to March 2001 The publication date of each trans action item is also given Based on the traditional min ing techniques the absolute support threshold is denoted as SA  112  0.31  4 where 12 is the size of transac tion set V It can be seen that only B C D E BC can be termed as frequent itemsets since the amounts of their oc currences in this transaction database are respectively larger than the absolute value of support threshold. Thus only rule C  B is termed as a frequent association rule with sup port s  41.67 and confidence c  83.33 However some phenomena are observed when we take the 223item in formation\224 in Figure 1 into consideration 1 An early publication intrinsically possesses a higher likelihood to be determined as a frequent itemset For example the sales volume of an early product such as A B C or D is likely to be larger than that of a newly exhibited product e.g E or F since an early product has a longer exhibition period As a result the association rules we usually get will be those with long-term products such as 223milk and bread are fre quently purchased together\224 which while being cor rect by the definition is of less interest to us in the association rule mining In contrast some more recent products such as new books which are really 223fre quent\224 and interesting in their exhibition periods are less likely to be identified as frequent ones if a tradi tional mining process is employed 2 Some discovered rules may be expired from users\222 interest Considering the generated rule C  B both B and C were published from the very early dates of this mining transaction database This information is very likely to have been explored in the previous mining database, such as the one from January 1996 to December 1997. Such mining results could be of less interest to our on-going mining works For example most researchers tend to pay more attention to the lat est published papers Note that one straightforward approach to addressing the above issues is to lower the value of the minimum support threshold required However this naive approach will cause another problem i.e those interesting rules with smaller supports may be overshadowed by lots of less important information with higher supports As a consequence we introduce the notion of exhibition period for each transac tion item in this paper and develop an algorithm Progres sive Partition Miner abbreviatedly as PPM to address this problem It is worth mentioning that the application do main of this study is not limited to the mining of a publica tion database Other application domains include bookstore transaction databases, video and audio rental store records stock market data and transactions in electronic commerce to name a few Explicitly we explore in this paper the mining of gen eral temporal association rules i.e X a Y where t is the latest-exhibition-start time of both itemsets X and Y and n denotes the end time of the publication database In other words t,n is the maximal common exhibition period of itemsets X and Y An association rule X  Y is termed to be a frequent general tem poral association rule X  Y if and only if its probability is larger than minimum support required i.e P\(Xt U Yt>\224  min-sup and the conditional prob ability P\(Ytin IXttn is larger than minimum confidence needed i.e P\(Ytin IXt  min-con f Instead of using the absolute support threshold SA  TlVl  min-suppl as a minimum support threshold for each item in Figure 1 a dative minimum support denoted by Sz  Vx min-suppl where IVx I indicates the amount of partial transactions in the exhibition period of itemset X is given to deal with the mining of temporal association rules To deal with the mining of general temporal association rule X 7\221 Y an efficient algorithm Progressive Par tition Miner is devised The basic idea of PPM is to first partition the publication database in light of exhibition pe riods of items and then progressively accumulate the occur rence count of each candidate 2-itemset based on the in trinsic partitioning characteristics Algorithm PPM is also designed to employ a filtering threshold in each partition to early prune out those cumulatively infrequent 2-itemsets The feature that the number of candidate 2-itemsets gen erated by PPM is very close to the number of frequent 2 itemsets allows us to employ the scan reduction technique by generating Cks from Cz directly to effectively reduce the number of database scan Experimental results show that PPM produces a significantly smaller amount of candidate 2-itemsets than Apriorif i.e an extended version of Apri 338 


ori algorithm In fact, the number of the candidate itemsets Cks generated by PPM approaches to its theoretical mini mum i.e the number of frequent k-itemsets as the value of the minimal support increases Explicitly the execution time of PPM is in orders of magnitude, smaller than those required by Apriori Sensitivity analysis on various pa rameters of the database is also conducted to provide many insights into algorithm PPM The advantage of PPM over Apriorif becomes even more prominent as the size of the database increases This is indeed an important feature for PPM to be practically used for the mining of a time series database in the real world It is worth mentioning that the problem of mining gen eral temporal association rules will be degenerated to the one of mining temporal association rules explored in prior works 3,5 ifthe exhibition period t n of association rule X a Y is applied to a non-maximal exhibition pe riod of X I Y such as j n where j  t Consider for example the database in Figure 1 where C  B and C are two general temporal association rules in database V while the temporal subset of C  B e.g C  B can also be a temporal association rule as defined in 3,5 showing that the model we consider can be viewed as a general framework of prior studies This is the reason we use the term general temporal association rule in this paper We mention in passing that the Frequent Pattern growth FP-growth\which constructs a highly compact data struc ture an FP-tree to compress the original transaction database is a method of mining frequent itemsets with out candidate generation 8 However in our opinion FP-growth algorithms do not have obvious extensions to deal with this publication database problem Further some methodologies were proposed to explore the problem ofdis covering temporal association relationship in the partial of database retrieved [3 51 i.e to determine association rules from a given subset of database specified by time These works however do not consider the individual exhibition period of each transaction item, and are thus not applicable to solving the mining problems in a publication database On the other hand some techniques were devised to use multiple minimum supports for frequent itemsets genera tion 12 171 However it remains unclear for how the techniques in  12 171 to be coupled with the correspond ing minimum confidence thresholds when general temporal association rules we consider in this paper in a publication database are being generated The rest of this paper is organized as follows Prob lem description is given in Section 2 Algorithm PPM is described in Section 3 Performance studies on various schemes are conducted in Section 4 This paper concludes with Section 5 2 Problem Description Let n be the number of partitions with a time granularity e.g business-week month quartel year to name a few in database V In the model considered dbtyn denotes the part of the transaction database formed by a continuous region from partition Pt to partition P and Idbt\(nl=Ch=t,n lPhl where dbty c V An item xx.start*n is termed as a tempo ral item of x meaning that Px.start is the starting partition of x and n is the partition number of the last database parti tion retrieved Example 2.1 Consider the database in Figure 1 Since database V records the transaction data from January 2001 to March 2001 database V is intrinsically segmented into three partitions PI PZ and P3 in accordance with the month granularity As a consequence a partial database db2l3 c V consists of partitions P2 and P3 A temporal item E2y3 denotes that the exhibition period of E293 is from the beginning time of partition P2 to the end time of partition p3 As such we can define a maximal temporal itemset Xtyn as follows Definition 1 An itemset Xt is called a marimal tem poral itemset in a partial database dbt7 if t is the latest starting partition number of all items belonging to X in database D and n is the partition number of the last parti tion in dbtin retrieved For example as shown in Figure 1 itemset DE293 is deemed a maximal temporal itemset whereas CD2l3 is not In view of this the exhibition period of an itemset is ex pressed in terms of Maximal Common exhibition Period MCP ofthe items that appear in the itemset. Let MCP\(2 denote the MCP value of item x The MCP value of an item set X is the shortest MCP among the items in itemset X Consider three items C E and F in Figure 1 for example Their exhibition periods are as follows MCP\(C  1,3 MCP\(E  2,3 and MCP\(F  3,3 Since itemset CEF is termed to be CEF3  CEF with consid ering the exhibition of CEF we have MCP\(CEF  In addition Idbtinl is the number of transactions in the partial database dbtin The fraction of transac tion T supporting an itemset X with respect to par tial database dbtin is called the support of Xtyn i.e a rule X I Y Xy is defined as supp\(\(X  y XY   zlpp\(\(XUY  The con fidence of this rule is defined as conf\(\(X  general temporal association rule X  Y  373 pp  J{TEdbMCP\(X I&,MCP XCT   The Of y Xy SUPP\(\(X Y xy sUpp~Mcp~xy  Consequently, a 1  339 


which holds in the transaction set D can be defined as fol lows Definition 2 An association rule X  Y XY is called a general temporal association rule in the trans action set D with conf\(\(X  Y xy  c and supp\(\(x  Y XY  s ifc oftransactions in dbMCP\(XY that contain X also contain Y and s oftrans actions in dbMCP\(XY contain X U Y while X For a given pair of min-conf and min-supp as the min imum thresholds required in the maximal common exhibi tion period of each association rule the problem of min ing general temporal association rules is to determine all frequent general temporal association rules e.g X Y XY E dbMCP\(XY which transaction itemsets X and Y have relative support and confidence greater than the corresponding thresholds Thus, we have the following definition to identify the frequent general temporal associa tion rules A general temporal association rule X  Y XY is termed to be frequent if and only if supp\(\(X  Y xy  min-supp and conf  Y   min-cmf Consequently, this rule mining of general temporal asso ciation can also be decomposed into to three steps 1 generate all fiequent maximal temporal itemsets TIS with their support values 2 generate the support values of all corresponding tempo ral sub-itemsets SIs of frequent TIS 3 generate all temporal association rules that satisfy min-conf using the frequent TIS andor SIs Example 2.2 Recall the illustrative general temporal as sociation rules e.g C  E with relative sup port 37.5 and confidence 75 of the bookstore trans action database as shown in the Figure 1 In accor dance with Definition 3 the implication C 3 E is termed as a general temporal association rule if and only if supp\(\(C  E  min-supp and conf\(\(C   min-con f Consequently we have to deter mine if supp\(CE2i3  min-supp and s~pp\(C  min-supp for discovering the newly identified association rule C  E It is worth mentioning that though CE2l3 has to be a maximal temporal itemset called TI C2l3 may not be a TI We call C2l3 is one of correspond ing temporal sub-itemsets i.e SI of itemset CE2,3 For better readability a list of symbols used is given in Table 1 Then the definition of a frequent maximal tem poral itemset and the property of its corresponding sub itemsets are given below Definition 4 A maximal temporal itemset XMCP\(X is termed to be frequent when the occurrence frequency Y  4 Definition 3  IdbZVn I XZ TI SI of XMCP\(X is larger than the value of min-supp re quired, i.e s~pp\(X  min-sup in transaction set dbMCP\(X When a maximal temporal k-itemset is frequent in data set dbMCP\(X each of its 1 5 i  k is also corresponding sub-itemset Xycp\(xL frequent in dbMCP\(X Property 1 xYp\(xk Number of transactions in dbZYn A temporal itemset in partial database dbZin A maximal temporal itemset A corresponding temporal sub-itemset of TI Table 1 Meanings of symbols used Once 3   xMCP\(X 2 1 I xMCP\(X is frequent the set of all frequent TIS and SIs to gether with their support values is known deriving the desired association rules is straightforward For ev ery XMCP\(X E 3 check the confidence of all rules X r Y XY and drop those that do not sat isfy  mzn-con f This problem can also be reduced to the problem of finding all frequent maximal temporal itemsets first and then generat ing their corresponding frequent sub-itemsets for the same support threshold Therefore in the rest of this paper we concentrate our discussion on the algorithms for mining fre quent TIS and SIs In fact the process steps of generating frequent TIS and SIs can be further merged to one step in our proposed algorithm PPM As explained we have to find all maximal temporal item sets that satisfy min-supp first and then to calculate the oc currences of their corresponding sub-itemsets for producing all temporal association rules hidden in database V How ever if we use an existing algorithm to find all frequent TIS for this new problem the downward closure property, which Apriori-based algorithms are based on no longer holds In addition the candidate generation process is not intuitive at all Note that even though itemset Xt3n is not a fre quent itemset it does not imply that Xtf i.e a tem poral sub-itemset of Xt is not a frequent itemset In other words even knowing Xt>n is not frequent in dbtJ where MCP\(X  t n we are not able to assert whether XYtflin is frequent or not when MCP\(Y  t  1,n Specifically to determine whether a general temporal as sociation rule X  Y is fiequent we have to find out the support values of Xtfl,n and XYtflin where MCP\(XY  IlfCP\(Y  t  1 n Example2.3 Consider MCP\(s1  1 n MCP\(z2  2 n and MCP\(s3  3 n If we find that item z1 is not frequent at exhibition period 1 n then it does not sat isfy min-supp requirement at level 1 Under a conventional 340 


h on exhibition periods candidate 2-TIS Use candidate 2-TIS to produce candidate k-TIS and k-SIs I 2nd Scun  Generate frequent Rule k-TIs and k-SIs  generation I I I II Figure 2 The flowchart of PPM Apriori-based association rule mining algorithm this item set is discarded since it will not be frequent The potentially frequent itemsets 51x2 and 21x3 will then not be generated at level 2 for consideration Clearly this disposition is in correct in mining general temporal association rules since q is still possible to be frequent at 2,n and 3,n in dicating that the downward property is not valid in mining general temporal association rules It is worth mentioning that since the downward level wise property, which holds for Apriori-like algorithms is not valid in this general temporal association rule mining problem the second method is to expand each transaction item to be its combination with different exhibition peri ods For instance all temporal sub-itemsets of X at level k with different exhibition periods i.e Xi X XL+29n  X are taken as temporal candidate k iternsets for producing any possible combination of gen eral temporal association rules Using this approach the problem of mining temporal association rules can be imple mented on an anti-monotone Apriori-like heuristic As in most previous works the essential idea is to iteratively gen erate the set of candidate itemsets of length k  l i.e I  from the set of frequent itemsets of length k i.e  for k 2 1 and to check their corresponding occur rence fiequencies.in the database db This is the basic concept of an extended version of Apriori-based algorithm called Apriori  whose performance will be comparatively evaluated with algorithm PPM in our experimental studies later 3 General Temporal Association Rules An overview of progressive partition miner is given in Section 3.1 We present an illustrative example of algorithm PPM in Section 3.2 3.1 An overview of Progressive Partition Miner As explained. above a naive adoption of conventional methods to mine general temporal association rules will be prohibitively expensive To remedy this by partitioning a transaction database into several partitions algorithm PPM is devised to employ a filtering threshold in each partition to deal with the candidate itemset generation and process one partition at a time For ease of exposition the processing of a partition is termed a phase of processing Explicitly a progressive candidate set of itemsets is composed of the following two types of candidate itemsets i.e 1 the can didate itemsets that were carried over from the previous pro gressive candidate set in the previous phase and remain as candidate itemsets after the current partition is included into consideration Such candidate itemsets are called type cr candidate itemsets\and 2 the candidate itemsets that were not in the progressive candidate set in the previous phase but are newly selected after only taking the current data parti tion into account Such candidate itemsets are called type El candidate itemsets Under PPM the cumulative informa tion in the prior phases is selectively carried over toward the generation of candidate itemsets in the subsequent phases After the processing of a phase algorithm PPM outputs a progressive screen denoted by PS which consists of a pro gressive candidate set of itemsets their occurrence counts and the corresponding partial supports required 3.2 Algorithm of PPM The operation of algorithm PPM can be best understood by an illustrative example described below and its corre sponding flowchart is depicted in Figure 2 Recall the trans action database shown in Figure 1 where the transaction database db1>3 is assumed to be segmented into three par titions PI P2 and P3 which correspond to the three time granularities from January 2001 to March 2001 Suppose that min-supp  30 and min-con f  75 Each par tition is scanned sequentially for the generation of candi date 2-itemsets in the first scan of the database db1l3 After scanning the first segment of 4 transactions i.e partition PI 2-itemsets BD BC CD AD are sequentially gen erated as shown in Figure 3 In addition, each potential can didate itemset c E C2 has two attributes 1 c.start which contains the partition number of the corresponding starting partition when c was added to C2 and 2 ccount which contains the number of occurrences of c since c was added to Cz Since there are four transactions in PI the partial minimal support is r4  0.31  2 Such a partial mini mal support is called thejltering threshold in this paper Itemsets whose occurrence counts are below the filtering threshold are removed Then as shown in Figure 3 only BD BC marked by  0  remain as candidate item sets of type El in this phase since they are newly generated whose information is then carried over to the next phase Pz of processing Similarly after scanning partition P2 the occurrence 341 


0 BD 0 BC CD AD P  P 1 0 BC I I BE2 OCE2 2 P  P,+P BF CF EF AD 3 BD 3 DF 3 Aner I SI scan dambars D c ha\\c candidatc ilcmsels  rclatke suppon  30  BS Collo~~s 8\224 8\224 C\224 C\224 E\224 F\224 iBC\222.\222 BF\224 CE\224 C\224 BC\221 222 E\224 CE\224 Aner 2nd scam databarc D ne hac frequent Ilcmscts rclal~~e ruppon  30 as Colloar IB\222.\222 B\224 C\224 C\224 E\224 F\224 BC\224 BF\224 CE\224 Figure 3 Frequent temporal itemsets genera tion for mining general temporal association rules by PPM counts of potential candidate 2-itemsets are recorded of type Q and type p From Figure 3 it is noted that since there are also 4 transactions in Pz the filtering thresh old of those itemsets carried out from the previous phase that become type CY candidate itemsets in this phase is 4  4  0.31  3 and that of newly identified candidate itemsets \(i.e type h\222 candidate itemsets is r4  0.31  2 It can be seen that we have 3 candidate itemsets in C2 after the processing of partition P2 and one of them is of type Q and two of them are of type p Finally, partition P3 is processed by algorithm PPM The resulting candidate 2-itemsets are C2   BC CE BF as shown in Figure 3 Note that though appearing in the pre vious phase P2 itemset DE is removed from C once P3 is taken into account since its occurrence count does not meet the filtering threshold then i.e 2  3 However we do have one new itemset i.e BF which joins the C2 as a type p candidate itemset Consequently we have 3 can didate 2-itemsets generated by PPM and two of them are of type Q and one of them is of type p Note that only 3 candidate 2-itemsets are generated by PPM After generating C2 from the first scan of database db1,3 we employ the scan reduction technique  131 and use C2 to generate Ck Ic  2,3  m where C is the candidate lust-itemsets Instead of generating C3 from LZ  L2 a C2 generated by PPM can be used to generate the candidate 3-itemsets and its sequential Ck-l can be utilized to gener ate Ck Clearly a CA generated from Cz  Cz instead of from L2  L2 will have a size greater than IC31 where C3 is generated from L2  L2 However since the IC2 I generated by PPM is very close to the theoretical minimum i.e 1,521 the IC41 is not much larger than IC31 Similarly the ICkl is close to Ch Since C2  BC,CE,BF no candidate Ic-itemset is generated in this example where Ic 2 3 Thus Ck  BC CE BF and all CL can be stored in main memory Then we can find Lks Ic  1,2  m together when the second scan of the database db1v3 is performed Note that those generated itemsets Ck  BC CE BF are termed to be the candidate maximal temporal itemsets TIS i.e BC1l3 CE2?3 and BF3l3 with a maximal ex hibition period of each candidate Before we process the second scan of the database db1t3 to generate L~s all candidate SIs of candidate TIS can be propagated based on Property 1 and then added into Ck For instance as shown in Figure 3 both candidate 1-itemsets B193 and C173 are derived from BC\22233 Moreover since BC1l3 for example is a candidate 2-itemset, its subsets i.e and C1l3 should potentially be candidate itemsets As a result 9 candidate itemsets i.e as shown in Figure 3 are generated Note that since there is no candidate TI Ic-itemset k 2 2 containing A or D in this example Ai?3 and Dil3 1 5 i 5 3 are not necessary to be taken as SI itemsets for generating general temporal association rules In other words we can skip them from the set of candidate itemsets 7;s Finally all occurrence counts of CLs can be calculated by the second database scan Note that itemsets BC1l3 BF3l3 and CE2,3 are termed as frequent TIS while B3>3 C1v3 C2l3 E2t3 and F333 are frequent SIs in this example As shown in Figure 3 after all frequent TI and SI item sets are identified the corresponding general temporal as sociation rules can be derived in a straightforward man ner Explicitly the general temporal association rule of X  Y XY holds if conf X  Y XY   min-con f 133 B3,3 c1,3 c2,3 E~J F3,3 1,3,~~3,3 C~2,3 I 4 Experimental Studies To assess the performance of algorithm PPM we per formed several experiments on a computer with a CPU clock rate of 450 MHz and 512 MB of main memory The methods used to generate synthetic data are described in Section 4.1 The performance comparison of PPM and Apriori is presented in Section 4.2 Results on scaleup experiments are presented in Section 4.3 342 


4.1 Generation of synthetic workload 500 8 400 s 2 300 i h E 4 200 0 s 100 W o For obtaining reliable experimental results the method to generate synthetic transactions we employed in this study is similar to the ones used in prior works 2 131 These transactions mimic the publication items in a publication database Each database consists of ID1 transactions and on the average, each transaction has IT1 items To simu late the characteristic of the exhibition period in each item transaction items are uniformly distributed into database 73 with a random selection In accordance with the exhibition periods of items database 2 is divided into n partitions Ta ble 2 summarizes the meanings of various parameters used in the experiments The mean of the correlation level is set to 0.25 for our experiments. Without loss of generality we use the notation Tx  Iy  Dm to represent a database in which D  m thousands IT1  x and 111  y We compare relative performance of Apriori and PPM    T 10-14-DI 00    Apriori A PPM   i    ____  _     I 1731 I Number of transactions in the database  ____   1 IT1 I Average size of the transactions  1 I I Average size of the maximal frequent itemsets ILI 1 Number of maximal potentially frequent itemsets N I Number of items IP;I I Number of transactions in the Dartition database Pi Table 2 Meanings of various parameters 4.2 Relative performance We first conducted several experiments to evaluate the relative performance of Apriori and PPM Since the ex  perimental results are consistent for various values of n ILI and N for interest of space we only report the results on ILI  2000 and N  10000 in the following experiments Figure 4 shows the relative execution times for both two algorithms as the minimum support threshold is decreased from 1 support to 0.1 support. When the support thresh old is high there are only a limited number of frequent item sets produced. However as the support threshold decreases the performance difference becomes prominent in that PPM significantly outperforms Apriori Explicitly PPM is in orders of magnitude faster than Apriori and the margin grows as the minimum support threshold decreases 4.3 Scaleup performance In this experiment we examine the scaleup performance of algorithm PPM The scale-up results for different se lected datasets are obtained. Figure 5 shows the scaleup per formance of algorithm PPM as the values of ID1 increase 0.1 0.3 0.5 0.7 0.9 Minimum Support  g2400 E1800 i i v 20-16-D 100  Appriori A PPM I Figure 4 Relative performance studies Three different minimum supports are considered We ob tained the results for the dataset T10  I4  Dm when the number of customers increases from 100,000 to one mil lion The execution times are normalized with respect to the times for the 100,000 transactions dataset in the Fig ure 5 Note that as shown in Figure 5 the execution time only slightly increases with the growth of the database size showing good scalability of PPM 5 Conclusion In this paper we not only explored a new model of mining general temporal association rules i.e X  Y XY in a publication database but also developed algorithm PPM to generate the temporal association rules as well as conducted related performance studies Un der PPM the cumulative information of mining previous partitions is selectively carried over toward the generation of candidate itemsets for the subsequent partitions Algo rithm PPM is particularly powerful for efficient mining for a publication-like transaction database, such as bookstore transaction databases video rental store records library book rental records and transactions in electronic com merce One extension to our proposed model in this paper is to mine general temporal association rules with different 343 


9 2 1 100 300 500 700 900 ID transaction number K Figure 5 Scaleup performance of PPM start and end points of items This is an interesting yet chal lenging issue since the levelwise property does not hold in this situation, and will be a matter of future research 6 Acknowledgment The authors are supported in part by the Ministry of Ed ucation Project No 89-E-FA06-2-4-7 and the National Sci ence Council Project No NSC 89-2219-E-002-028 and NSC 89-22 18-E-002-028, Taiwan, Republic of China References I R Agrawal T Imielinski and A Swami Mining Association Rules between Sets of Items in Large Databases Proc of ACM SIGMOD pages 207-216 May 1993 2 R. Agrawal and R. Srikant Fast Algorithms for Min ing Association Rules in Large Databases Proc of the 20th International Conference on Very Large Data Bases pages 478-499 September 1994 3 J.M. Ale and G. Rossi An Approach to Discovering Temporal Association Rules ACMSymposium on Ap plied Computing 2000 4 M.4 Chen J Han and P S.Yu Data Mining An Overview from Database Perspective IEEE Transac tions on Knowledge and Data Engineering 8\(6 883, December 1996 5 X Chen and I Petr Discovering Temporal Associa tion Rules: Algorithms, Language and System Proc of 2000 Int Con on Data Engineering 2000 6 D Cheung J Han V Ng and C.Y Wong Main tenance of Discovered Association Rules in Large Databases An Incremental Updating Technique Proc of 1996 Int'l Conj on Data Engineering pages 106-1 14, February 1996 7 J Han and Y Fu Discovery of Multiple-Level Asso ciation Rules from Large Databases Proc of the 21th International Conference on Very Large Data Bases pages 420-431 September 1995 8 J Han J Pei, and Y Yin Mining Frequent Patterns without Candidate Generation Proc of 2000 ACM SIGMOD Int Con on Management of Data pages 486-493 May 2000 9 J Hipp U Giintzer and G Nakhaeizadeh Algo rithms for association rule mining  a general survey and comparison SIGKDD Explorations 2 1 July 2000 Sliding Window Filtering An Efficient Algorithm for Incre mental Mining Proc of the ACM 10th Intern I Conf on Information and Knowledge Management Novem ber 200 1 Mining Association Rules Anti-Skew Algorithms Proc of 1998 Int'l Conj on Data Engineering pages 486-493 1998 12 B Liu W Hsu and Y Ma Mining Association Rules with Multiple Minimum Supports Proc of I999 Int Con on Knowledge Discovery and Data Mining Au gust 1999 13 J.-S Park M.-S. Chen, and P S Yu Using a Hash Based Method with Transaction Trimming for Mining Association Rules IEEE Transactions on Knowledge and Data Engineering 9\(5 13-825 October 1997 14 R Srikant and R Agrawal Mining Generalized As sociation Rules Proc of the 21th International Con ference on Very Large Data Bases pages 407-419 September 1995  151 R. Srikant and R Agrawal Mining quantitative asso ciation rules in large relational tables Proc of I996 ACM-SIGMOD Con on Management of Data 1996  161 A K H Tung J Han, L V S Lakshmanan, and R T Ng Constraint-Based Clustering in Large Databases Proc of 2001 Int Conj on Database Theory January 2001  171 K Wang Y He, and J Han. Mining Frequent Itemsets Using Support Constraints Proc of2000 Int Con on Very Large Data Bases September 2000 18 C Yang U Fayyad and P Bradley Efficient dis covery of error-tolerant frequent itemsets in high di mensions The Seventh ACM SIGKDD International Conference on Knowledge Discovery and Data Min ing 200 1 lo C.-H Lee C.-R Lin and M.-S Chen ll J.-L Lin and M.H Dunham 344 


n I31 41 51 61 71 8 I 9 Graph diameter q5\(SCCn Average number of lateral links E Average number of MI local links MI\(loc Average number of MB local links MB\(Zoc I Graph size n  1 e n I 12 I 72 I 480 I 3,600 I 30,240 I 282,240 I 2,903,040 6 8 16 19 1.500 2.583 3.683 4.783 0.667 1.500 3.200 5.000 0.833 1.222 1.925 2.337 1.500 3.000 Average number of local links L Average distance d\(SCC 2.722 5.125 7.337 5.306 8.808 12.121 Table 1 Average distance of SCC graphs under minimal routing 300000 250000 g 200000 3 E L 150000   100000 50000 0 erage number of MB local links is concerned. Also observe that for 3 5 n 5 4 the greedy routing algorithm performs as well as the minimal routing algorithm Besides, our re sults indicate that the performance of these algorithms is quite similar for 5 5 n 5 9 which makes the less complex greedy routing algorithm particularly attractive Average costs of paths produced by the three routing al gorithms are summarized in Table 2 The random routing algorithm has a complexity of O\(n and performs reason ably well on the average Utilization of such an algorithm may however result in variations in the average cost of routes up to the worst-case values shown in Table 2  Minimal routing  andom rout. \(worst case     n 3 Minimal Greedy Random routing rout rout Theor Simul Worst-case 3.000 3.000 3.000 3.084 3.167 I1 I I I I I 4 5 I I I I I 5.306 5.305 5.500 5.514 5.694 8.808 8.812 9.261 9.264 9.775 Table 2 Average costs vs routing algorithms Figure 6 shows distribution curves comparing the three routing algorithms in the case of an SCC graph A point 01 NI in one of these curves indicates that the corre sponding routing algorithm will compute a route of cost DI to the identity for NI nodes in the SCC graph The aver age distribution for the random routing algorithm is shown but the results for that algorithm may actually vary from the minimal to the worst-case distributioncurves due to the non deterministic nature of the algorithm It is also interesting to observe that the greedy routing algorithm provides a dis tribution curve which is close to that of the minimal routing algorithm presenting however a smaller complexity 6 Considerations on wormhole routing 3 In this section we briefly describe how the algorithms presented in the paper cam be combined with wormhole routing 6 which is a popular switching technique used in parallel computers All three algorithms can be used with wormhole routing when implemented as source-based routing algorithms  111 In source-based routing tlhe source node selects the entire path before sending the packet Because the processing delay for the routing algorithm is incurred only at the source node it adds only once to the communication latency and can be viewed as part of the start-up latency Source-based routing however has two disadvantages 1 each packet must carry complete information about its path in the header which increases the packet length and 2 the path cannot be changed while the packet is being routed which precludes incorporating adaptivity into the routing algorithm Distributed routing eliminates the disadvantages of source-based routing by invoking the routing algorithm in each node to which the packet is forwarded ll Thus the decision on whether a packet should be delivered to the local processor or forwarded on an outgoing link is done 451 


locally by the routing circuit of a node Because the routing algorithm is invoked multiple times while a packet is being routed the routing decision must be taken as fast as pos sible From this viewpoint it is important that the routing algorithm can be easily and efficiently rendered in hardware which favors the random routing algorithm over the greedy and minimal routing algorithms Besides being the most complex algorithm discussed in this paper the minimal routing algorithm includes a feature which precludes its distributed implementation in associa tion with wormhole routing namely its backtracking mech anism Distributed versions of the random and greedy al gorithms, however, can be used in combination with worm hole routing A near-minimal distributed routing algorithm which supports wormhole routing can be obtained by re moving the backtracking mechanism from Alg 3 Such an algorithm is likely to have computational complexity and average cost that lie between those of the greedy and the minimal routing algorithm Due to its non-deterministic nature the random routing algorithm also seems to be a good candidate for SCC net works employing distributed adaptive routing  1 I Adap tivity is desirable for example if the routing algorithm must dynamically respond to network conditions such as conges tion and faults Some degree of adaptivity is also possible in the greedy and minimal routing algorithms which in some cases can decide between paths of equal cost 7 Conclusion This paper compared the average cost and the complex ity of three different routing algorithms for the SCC graph We divided routes into three components \(lateral links MI local links and MB local links and showed that only the number of MB local links may be affected by the routing algorithm being considered Exact expressions for the aver age number of lateral links and the average number of MI local links were presented Also an upper bound for the average number of MZ local links was derived considering a random routing algorithm As a result a tight upper bound on the average distance of the SCC graph was obtained Simulation results for a random a greedy and a minimal routing algorithm were presented and compared with theo retical values The complexity of the proposed algorithms is respectively O\(n O\(n2 and O\(n3 where n is the dimensionality of the SCC grap.h The results under mini mal routing produce exact numerical values for the average distance of SCC for 3 5 n 5 9 Results for the greedy algorithm match those of the min imal algorithm for 3 2 n 5 4 The greedy algorithm also performs close to minimality for 5 5 n 5 9 and is an in teresting choice due to its O\(n2 complexity The random routing algorithm has an O\(n complexity and performs fairly well on the average but may introduce additional MB local links in the route under worst-case conditions Finally we discussed how each of the routing algorithms can be used in association with the wormhole routing switch ing technique Directions for future research in this area in clude an evaluation of requirements for deadlock avoidance e.g number of virtual channels References l S B Akers,D. HarelandB Krishnamurthy,\223TheStarGraph An Attractive Altemative to the n-Cube,\224 Proc Int\222l Con Pal Proc 1987 pp 393-400 2 M M Azevedo N Bagherzadeh and S Latifi 223Broadcasting Algorithms for the Star-Connected Cycles Interconnection Network,\224 J Pal Dist Comp 25,209-222 1995 3 M M Azevedo N Bagherzadeh and S Latifi 223Embed ding Meshes in the Star-Connected Cycles Interconnection Network,\224 to appear in Math Mod. and Sci Comp 4 M M Azevedo N Bagherzadeh and S Latifi 223Fault Diameter of the Star-Connected Cycles Interconnection Net work,\224 Proc 28th Annual Hawaii Int\222l Con5 Sys Sci Vol 11 Jan. 3-6 1995 pp 469-478 SI W.-K Chen M F M Stallmann andE E Gehringer 223Hy percube Embedding Heuristics An Evaluation,\224 Int\222l J Pal Prog Vol 18 No 6 1989 pp 505-549 6 W J Dally and C I Seitz 223The Torus Routing Chip,\224 Dist Comp Vol 1 No 4 1986 pp 187-196 7 K Day and A Tripathi,\223A Comparative Study ofTopologica1 Properties of Hypercubes and Star Graphs,\224 IEEE Trans. Pal Dist Sys Vol 5 No 1 Jan. 1994 pp 31-38 8 D E Knuth The Art of Computer Programming Vol I Addison-Wesley 1968 pp 73 pp 176-177 9 S Latifi 223Parallel Dimension Permutations on Star Graph,\224 IFIP Trans A Comp Sei Tech 1993 A23 pp 191-201 lo S Latifi M M Azevedo and N Bagherzadeh 223The Star Connected Cycles A Fixed-Degree Interconnection Net work for Parallel Processing,\224 Proc Int\222l Con5 Pal Proc  1 11 L M Ni and P K McKinley 223A Survey of Wormhole Rout ing Techniques in Direct Routing Techniques,\224 Computer Feb 1993 pp 62-76  121 E P Preparata and J Vuillemin 223The Cube-Connected Cy cles A Versatile Network for Parallel Computation,\224 Comm ACM Vol 24 No 5 May 1981 pp 300-309  131 Y Saad and M H Schultz 223Topological Properties of Hy percubes,\224IEEE Trans Comp Vol 37 No 7 July 1988 pp 14 S Shoari and N Baghenadeh 223computation of the Fast Fourier Transform on the Star-Connected Cycle Network,\224 to appear in Comp  Elec. Engl 1996 15 P Vadapalli and P K Srimani 221\223ho Different Families of Fixed Degree Regular Cayley Networks,\224 Proc Int\222l Phoenix Con Comp Comm Mar 28-31,1995 pp 263-269 1993 Vol 1 pp 91-95 867-872 452 


It can also be added to cell CrossSales.3\(PC, printer one_year,\205 5  Distributed and Incremental Rule Mining There exist two ways to deal with association rules 267  Static that is, to extract a group of rules from a snapshot, or a history, of data and use "as is 267  Dynamic that is, to evolve rules from time to time using newly available data We mine association rules from an e-commerce data warehouse holding transaction data. The data flows in continuously and is processed daily Mining association rules dynamically has the following benefits 267  223Real-time\224 data mining, that is, the rules are drawn from the latest transactions for reflecting the current commercial trends 267  Multilevel knowledge abstraction, which requires summarizing multiple partial results. For example association rules on the month or year basis cannot be concluded from daily mining results. In fact multilevel mining is incremental in nature 267  For scalability, incremental and distributed mining has become a practical choice Figure 3: Distributed rule mining Incremental association rule mining requires combining partial results. It is easy to see that the confidence and support of multiple rules may not be combined directly. This is why we treat them as \223views\224 and only maintain the association cube, the population cube and the base cube that can be updated from each new copy of volume cube. Below, we discuss several cases to show how a GDOS can mine association rules by incorporating the partial results computed at LDOSs 267  The first case is to sum up volume-cubes generated at multiple LDOSs. Let C v,i be the volume-cube generated at LDOS i The volume-cube generated at the GDOS by combining the volume-cubes fed from these LDOSs is 345   n i i v v C C 1  The association rules are then generated at the GDOS from the centralized C v  214  The second case is to mine local rules with distinct bases at participating LDOSs, resulting in a local association cube C a,I a local population cube C p,I  and a local base cube C b,i at each LDOS. At the GDOS, multiple association cubes, population cubes and base cubes sent from the LDOSs are simply combined, resulting in a summarized association cube and a summarized population cube, as 345   n i i a a C C 1   345   n i i p p C C 1  and 345   n i i b b C C 1  The corresponding confidence cube and support cube can then be derived as described earlier. Cross-sale association rules generated from distinct customers belong to this case In general, it is inappropriate to directly combine association cubes that cover areas a 1 205, a k to cover a larger area a In the given example, this is because association cubes record counts of customers that satisfy   customer product merchant time area Doe TV Dept Store 98Q1 California Doe VCR Dept Store 98Q1 California customer product merchant time area Doe VCR Sears 5-Feb-98 San Francisco Joe PC OfficeMax 7-Feb-98 San Francisco customer product merchant time area Doe TV Fry's 3-Jan-98 San Jose Smith Radio Kmart 14-Jan-98 San Jose Association   population      base          confidence      support cube               cube                cube         cube                cube LDOS LDOS GDOS 


the association condition, and the sets of customers contained in a 1 205, a k are not mutually disjoint. This can be seen in the following examples 214  A customer who bought A and B in both San Jose and San Francisco which are covered by different LDOSs , contributes a count to the rule covering each city, but has only one count, not two, for the rule A  336  B covering California 214  A customer \(e.g. Doe in Figure 3\who bought a TV in San Jose, but a VCR in San Francisco, is not countable for the cross-sale association rule TV  336 VCR covering any of these cities, but countable for the rule covering California. This is illustrated in Figure 3 6  Conclusions In order to scale-up association rule mining in ecommerce, we have developed a distributed and cooperative data-warehouse/OLAP infrastructure. This infrastructure allows us to generate association rules with enhanced expressive power, by combining information of discrete commercial activities from different geographic areas, different merchants and over different time periods. In this paper we have introduced scoped association rules  association rules with conjoint items and functional association rules as useful extensions to association rules The proposed infrastructure has been designed and prototyped at HP Labs to support business intelligence applications in e-commerce. Our preliminary results validate the scalability and maintainability of this infrastructure, and the power of the enhanced multilevel and multidimensional association rules. In this paper we did not discuss privacy control in customer profiling However, we did address this issue in our design by incorporating support for the P3P protocol [1 i n  ou r data warehouse. We plan to integrate this framework with a commercial e-commerce system References 1  Sameet Agarwal, Rakesh Agrawal, Prasad Deshpande Ashish Gupta, Jeffrey F. Naughton, Raghu Ramakrishnan, Sunita Sarawagi, "On the Computation of Multidimensional Aggregates", 506-521, Proc. VLDB'96 1996 2  Surajit Chaudhuri and Umesh Dayal, \223An Overview of Data Warehousing and OLAP Technology\224, SIGMOD Record Vol \(26\ No \(1\ 1996 3  Qiming Chen, Umesh Dayal, Meichun Hsu 223 OLAPbased Scalable Profiling of Customer Behavior\224, Proc. Of 1 st International Conference on Data Warehousing and Knowledge Discovery \(DAWAK99\, 1999, Italy 4  Hector Garcia-Molina, Wilburt Labio, Jun Yang Expiring Data in a Warehouse", Proc. VLDB'98, 1998 5  J. Han, S. Chee, and J. Y. Chiang, "Issues for On-Line Analytical Mining of Data Warehouses", SIGMOD'98 Workshop on Research Issues on Data Mining and Knowledge Discovery \(DMKD'98\ , USA, 1998 6  J. Han, "OLAP Mining: An Integration of OLAP with Data Mining", Proc. IFIP Conference on Data Semantics DS-7\, Switzerland, 1997 7  Raymond T. Ng, Laks V.S. Lakshmanan, Jiawei Han Alex Pang, "Exploratory Mining and Pruning Optimizations of Constrained Associations Rules", Proc ACM-SIGMOD'98, 1998 8  Torben Bach Pedersen, Christian S. Jensen Multidimensional Data Modeling for Complex Data Proc. ICDE'99, 1999 9  Sunita Sarawagi, Shiby Thomas, Rakesh Agrawal Integrating Association Rule Mining with Relational Database Systems: Alternatives and Implications", Proc ACM-SIGMOD'98, 1998   Hannu Toivonen, "Sampling Large Databases for Association Rules", 134-145, Proc. VLDB'96, 1996   Dick Tsur, Jeffrey D. Ullman, Serge Abiteboul, Chris Clifton, Rajeev Motwani, Svetlozar Nestorov, Arnon Rosenthal, "Query Flocks: A Generalization of Association-Rule Mining" Proc. ACM-SIGMOD'98 1998   P3P Architecture Working Group, \223General Overview of the P3P Architecture\224, P3P-arch-971022 http://www.w3.org/TR/WD-P3P.arch.html 1997 


Plenary Panel Session 30 XML Databases   Moderator: Michael Carey, IBM Almaden Research Center USA Panelists Adam Bosworth, Microsoft Corporation USA David De Witt University of Wisconsin-Madison, USA Alon Levy University of Washington USA Bruce Lindsay IBM Almaden Research Center USA Jennifer Widom Stanford University USA Demo Session 1 Web Query Optimizer  661 V Zadorozhny L Bright L Raschid T Urhan and M Vidal ReQueSS: Relational Querying of Semi-structured Data  664 R Sunderraman The IDEAL Approach to Internet-Based Negotiation for E-Business  666 J Hammer C Huang Y Huang C Pluempitiwiriyawej M Lee H Li L Wang Y Liu and S Su READY A High Performance Event Notification Service  668 R Gruber B Krishnamurthy, and E Panagos A Multimedia Information Server with Mixed Workload Scheduling  670 G Nerjes DISIMA An Object-Oriented Approach to Developing an Image Database System  672 V Oria T Ozsu P Iglinski B Xu and L Cheng Demo Session 2 The Collaboration Management Infrastructure  677 H Schuster D Baker A Cichocki D Georgakopoulos and M Rusinkiewicz Assisting the Integration of Taxonomic Data The LITCHI Toolkit  679 I Sutherland J Robinson S Brandt A Jones S Embury W Gray R White and F Bisby TheaterLoc: Using Information Integration Technology to Rapidly Build Virtual Applications  681 G. Barish Y.4 Chen D Dipasquo, C Knoblock S Minton I Muslea and C Shahabi Lineage Tracing in a Data Warehousing System  683 Y Cui and J Widom xiii 


The Mentor-Lite Prototype A Light-Weight Workflow Management System  685 J Weissenfels M Gillmann 0 Roth, G Shegalov and W Wonner Location Prediction and Queries for Tracking Moving Objects  687 0 Wolfson B Xu and S Chamberlain Semiorder Database for Complex Activity Recognition in Multi-Sensory Environments  689 S Bhonsle A Gupta S Santini and R Jain Tutorial 1 Web Information Retrieval  693 M Henzinger Tutorial 2 Mobile and Wireless Database Access for Pervasive Computing  694 P Chrysanthis and E Pitoura Tutorial 3 Data Mining with Decision Trees  696 J Gehrke Tutorial 4 Directories Managing Data for Networked Applications  697 D Srivastava Tutorial 5 Indexing High-Dimensional Spaces Database Support for Next Decade\222s Applications  698 S Berchtold and D Keim xiv 


 T5.I2.D100K T10.I4.D100K T15.I4.D100K T10.I6.D400K T10.I6.D800K T10.I6.D1600K Optimizations across Databases 5 0 5 10 15 20 25 30 35 40 45 Improvement COMP TREE COMP-TREE 1 2 4 8 1 2 4 8 1 2 4 8 2 4 8 2 4 8 1 2 4 8 Processors Databases Figure 5 Effect of Computation and Hash Tree Balancing good as the COMP optimization The reason that the hash tree balancing is not suf\336cient to offset inherent load imbalance in the candidate generation in this case The most effective approach is to apply both optimizations at the same time COMP-TREE The combined effect is suf\336cient to push the improvements in the 40 range in the multiple-processor case On 1 processor only hash tree balancing is bene\336cial since computation balancing only adds extra cost 5.4 Short-circuited Subset Checking Figure 6 shows the improvement due to the short-circuited subset checking optimization with respect to the unoptimized version The unoptimized version is the Apriori algorithm due to Agrawal et al 5 The results are presented for dif ferent number of processors across dif ferent databases The results indicate that while there is some improvement for databases with small transaction sizes the optimization is most effective when the transaction size is large In this case we get improvements of around 25 r the unoptimized version To gain further insight into this optimization consider 336gure 7 It shows the percentage improvement obtained per iteration on applying this optimization on the T20.I6.D100K database It shows results only for the uni-processor case r similar results were obtained on more processors We observe that as the iteration k increases there is more opportunity for shortcircuiting the subset checking and we get increasing bene\336ts of up to 60 The improvements start to fall off t the high end where the number of candidates becomes small resulting in a small hash tree and less opportunity for short-circuiting It becomes clear that is an extremely effective 15 Proceedings of the 1996 ACM/IEEE Conference on Supercomputing \(SC\22296 0-89791-854-1/96 $ 10.00 ACM 


 T5.I2.D100K T10.I6.D800K T15.I4.D100K T20.I6.D100K procs across Databases 0 5 10 15 20 25 Improvement 1 2 4 8 Figure 6 Effect of Short-circuited Subset Checking 23456789101112 Iterations 0 10 20 30 40 50 60 improvement T20.I6.D100K Figure 7  Improvement per Iteration  proc   16 Proceedings of the 1996 ACM/IEEE Conference on Supercomputing \(SC\22296 0-89791-854-1/96 $ 10.00 ACM 


optimization for larger transaction sizes and in cases where there are large number of candidate k itemsets 6 Conclusions In this paper e presented a parallel implementation of the Apriori algorithm on the SGI Power Challenge shared memory multi-processor We also discussed a set of optimizations which include optimized join and pruning computation balancing for candidate generation hash tree balancing and short-circuited subset checking We then presented experimental results on each of these Improvements of more than 40 were obtained for the computation and hash tree balancing The short-circuiting optimization was found to be extremely effective for databases with large transaction sizes Finally we reported the parallel performance of the algorithm While we d good speed-up we observed a need for parallel I/O techniques for further performance gains References  R Agra wal T  Imielinski and A Swami Database mining A performance perspecti v e  I n IEEE Trans on Knowledge and Data Engg  pages 5\(6 1993  R Agra wal T  Imielinski and A Swami Mining association rules between sets of items in lar ge databases In Proc M SIGMOD Intl Conf Management of Data  May 1993  R Agra wal H Mannila R Srikant H T o i v onen and A I V erkamo F ast disco v ery of association rules In U F et al editor Advances in Knowledge Discovery and Data Mining  MIT Press 1996  R Agra wal and J Shafer  P arallel mining of association rules design implementation and e xperience Technical Report RJ10004 IBM Almaden Research Center San Jose CA 95120 Jan 1996  R Agra wal and R Srikant F ast algorithms for mining association rules In Proc 20th VLDB Conf  Sept 1994  M Cierniak W  Li and M J Zaki Loop scheduling for heterogeneity  I n 4th IEEE Intl Symposium on High-Performance Distributed Computing also as URCS-TR 540 CS Dept Univ f Rochester  Aug 1995  M Holsheimer  M  K ersten H Mannila and H T o i v onen A perspecti v e on databases and data mining In 1st Intl Conf Knowledge Discovery and Data Mining  Aug 1995  M Houtsma and A Swami Set-oriented mining of association rules In RJ 9567  IBM Almaden Oct 1993  H Mannila H T o i v onen and I V erkamo Ef 336cient algorithms for disco v ering association rules In AAAI Wkshp Knowledge Discovery in Databases  July 1994  J S P ark M Chen and P  S Y u  A n e f fecti v e hash based algorithm for mining association rules In Proc M SIGMOD Intl Conf Management of Data  May 1995 17 Proceedings of the 1996 ACM/IEEE Conference on Supercomputing \(SC\22296 0-89791-854-1/96 $ 10.00 ACM 


 J S P ark M Chen and P  S Y u  E f 336cient parallel data mining for association rules T echnical Report RC20156 IBM T J Watson Research Center Aug 1995  G Piatetsk y-Shapiro Disco v ery  presentation and analysis of strong rules In G P S et al editor  KDD  AAAI Press 1991  A Sa v asere E Omiecinski and S Na v athe An ef 336cient algorithm for mining association rules in large databases In Proc 21st VLDB Conf  1995  M J Zaki M Ogihara S P arthasarathy  and W  Li P arallel data mining for association rules on shared-memory multi-processors Technical Report 618 Department of Computer Science University of Rochester 618 1996 18 Proceedings of the 1996 ACM/IEEE Conference on Supercomputing \(SC\22296 0-89791-854-1/96 $ 10.00 ACM 


