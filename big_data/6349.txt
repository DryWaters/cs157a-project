 Mining Transcriptional Association Rules from Breast Cancer Profile Data   Rakhi Malpani 1 Meiliu Lu 1 Du Zhang 1 and Wing Kin Sung 2, 3   1 Computer Science Department, California State University, Sacramento 2 School of Computing, National Univ ersity of Singapore, Singapore 3 Genome Institute of Singapore, Singapore mlu@csus.edu    Abstract  To gain insight into regulatory mechanisms underlying the transcription process of gene expressions, we need to 
understand the co-expressed gene sets under common regulatory mechanisms. Though  computational methods have been developing to id entify expression module challenges still remain for cancer related gene expression profiling.  In this paper we have developed a method of data preprocessing and two diffe rent association rule mining approaches for discovering breast cancer regulatory mechanisms of gene module. Our data preprocessing task involved with two independent data sources: \(a\ a single breast cancer patient profile data file, \(b\ a candidate enhancer information data file. Using the integrated data, we also conducted four experiments 
of the association rule mining  Keywords Data mining, Informatio n Integration, Data preprocessing, Association rule mining, Machine Learning  1. Introduction  Computational biology research has contributed significantly to the advancement of molecular biology in recent years. High throughput genome sequencing has provided us with the complete genomes of several multicellular species from microbes to human beings. The challenge no longer lies in obtaining gene expression profiles, but rather in inte 
rpreting the results to gain insights into biological mechanisms [4, 5 T h i s  open s  a whole range of exciting possibilities and necessitates for development of data mining methods tailored towards understanding the complex mechanisms of biological systems Breast cancer is cancer originating from breast tissue Prognosis and survival rate varies greatly depending on cancer type and stage. The lifetime risk for breast cancer in the United States is reported as 1 in 8 \(12.5 T h e treatment is based on many factors such as sub-type and stage of cancer, sensitivity to 
hormones, over expression of certain genes. Common treatments include radiotherapy, chemotherapy, hormonal therapy, surgery targeted therapy. The advantag e of using targeted therapy is that it uses special anti-cancer drugs that identify certain changes in a cell that can lead to cancer and aim at specific processes of cancer cell growth, division and lifecycle. Existing targeted therapies such as, avastin herceptin, iressa, and tyke ly f o r a s u bset types of breast cancer. Data mining microarray based gene profile data hold the promise in predicting treatment outcome or drug response; therefore it can help us in 
design of new targeted therapy.  Using microarray technology, the expression profile data of genes can be extracted. Usually this profile data is huge, noisy incomplete, and not in the format suitabl e as an input to any data mining algorithm. In this paper, we first describe a method of data preprocessing, and then introduce our two association rule mining approaches for discovering breast cancer regulatory mechanisms of gene module. The rest of the paper is devoted to four experiments and their result analysis. We co ncluded the paper with 
future work  2. Problem Analysis  DNA is a nucleic acid that contains the genetic instructions used in the development and functioning of all known living organisms and some viruses. The main role of DNA molecules is the long-term storage of information. DNA has non-coding segments, and coding segments called genes specifying the structure of proteins. A transcription factor  TF sometimes called a sequence-specific DNA binding factor\ that 
binds to specific DNA sequences and thereby controls the transfer \(or transcription of genetic information from DNA to mRNA. Transcription factors are essential for the regulation of gene expression and are consequently found in all living organisms. The combinatorial use of a subset of the approximately 2000 human transcription factors easily accounts for the unique regulation each g e n e  154 IEEE IRI 2011, August 3-5, 2011, Las Vegas, Nevada, USA 978-1-4577-0966-1/11/$26.00 ©2011 IEEE 


in the human genome during development Enhancer is a short regulatory region of DNA that can be bound with the activator TF to enhance transcri ption levels of adjacent genes. However, activator-to-enhancer-region binding can result in the transcription of a gene that is some distance away from the enhancer, or can even be on a different chromosome Gene expression is the process by which information from a gene is used in the synthesis of a functional gene product. Measuring gene expression is an important part of many life sciences - the ab ility to quantify the level at which a particular gene is expr essed within a cell, tissue or organism can give a huge amount of information. For example, measuring gene expression can determine an individual's susceptibility to cancer. Expression module is defined as co-expressed gene sets under common regulatory mechanisms. Early work in the area of discovery of expression module include: develop GRAM algorithm that explicitly links genes to the factors that regulate them o step seed module discovery and seed module extension\ methodology to unravel active modules based on the concurrent analysis of three data sources d EEM, th e lates t m odu le dis c ov ery  m e th od applied to breast cancer expression ll of th e above work used more than two data sources.  In our study, we attempt to infer tr anscriptional modules directly from a breast cancer patient profile data and a file that specifies the relationship between enhancers and TFs Using those two data sources in mining transcriptional module sets our study apart from the aforementioned work, and the result is that a practical data mining methodology has been developed As the transcription factors bind on enhancers and enhancers affect the expression of genes, therefore the transcription factors affect the expression of genes  It is our belief that increased knowledge of the association between gene set and TF module will enhance our understanding of the cancer related regulatory mechanism Our objective is two-fold 1\elop a method to integrate the above two data files into a single unified data file in a feasible format as an input to an association rule mining algorithm; \(2\ok for the association rules [3 between a group of transcriptional factors \(TF module and target gene behavior from a single time-series breast cancer profile data.  For example, we are looking for results expressed in association rules such as:  \(TF1, TF2 TF3    a target gene set  expression going up\. The two data files are Data file I  TFvalues_Enhancer.xls describes relationship between 41112 candidate enhancers for 80 selected transcription factors. The file size is 60.5 MB Each row corresponds to one enhancer, and the number of columns is 241 \(the first one for enhancer id, and remaining 240 divided into 80 3-column groups with each group for a TFês 3 attributes for the corresponding enhancer: position p-value, and position weight matrix PWM\re. The position is for the location of the TF binding site relative to the p eak location of the enhancer The p-value is for statistical significance level of the TF to the enhancer. The PWM score is a commonly used representation of motifs in biological sequences Data file II: Gene_expression_profile.xls describes the gene expression time series profile data  for genes associated with the enhancer s in a breast cancer cell-line MCF7. The file size is 6.67 MB. It contains a subset of candidate enhancers in data file I \(21997 rows To find association rules between a set of transcription factor  and set of genes, we combine the two files with candidate enhancer as the pivo t as illustrated in Figure 1   Figure 1: TF to Gene Relation In Figure 2, we give an overview of our experiment design procedure  Figure 2: Experiment Design Procedure 3. Data Preprocessing  We have performed the following major data preprocessing tasks for data mining input preparation cleaning, reduction, discreti zation, transformation, and integration  3.1 Cleaning and Missing Value Handling The first column of TFvalu es_Enhancer.xls file has 41112 candidate enhancers. Each row contains the detailed relation between th e enhancer and 80 TFês Among the three attributes of every TF, p-value and position are more important than PWM. As first step of our investigation, we assume p-value is the most important and it is the only attribute co nsidered in this study. The missing values in the column of p-value are filled by average of remaining values in that column 155 


Gene_expression_profile.xls file has Gene expression time series profile data of a breast cancer patient. The first column is the candidate enhancer and the subsequent columns show the expression level of the nearest gene at 3, 6, 9, 12, 24 and 48 hours. The missing expression values in these time stamps are filled by average of the remaining values of expression levels. Among the 19 column attributes, we include the following in this study Enhancer candidate id, gene name, expression levels of the gene over a period of 48 hours.  The other column attributes that can be includ ed in future studies are chromosome, enhancer peak location, intensity, strand transcription start/end site TSS, TES\ce between TSS and enhancer peak location  3.2 Discretization wi th Classification We classify genes based on the expression level difference between starting and ending observation values Let Difference = MCF7_48hr Ö MCF7_3hr. If Difference 0 then target gene is classified as up expressed, denoted as   If Difference < 0 then target gene is classified as down expressed denoted as  According to the degree of changes we further divided genes into six classes as shown in Table 1. For example  Fê denotes that the target gene is up and increasing at a level greater than or equal to 10 Table 1: Classification Table Difference Target gene expression Class Label Difference < = -1 DOWN Decreasing A Difference < - 0.5 DOWN Decreasing B Difference = 0 NO CHANGE No change C Difference >= 1 UP Increasing D Difference >=5 UP Increasing E Difference >=10 UP Increasing F  3.3 Reduction and Transformation with P-value There are roughly 2500 Transcription factors \(TFs consider only 80 TFs which are significantly overrepresented in the enhancers. With 80 TFs we still can have 2^80 combinations that can trigger any gene in any fashion. To reduce our search space, we have chosen pvalue threshold as 0.002 \(this means that there is 99.8 chance that a TF is significant\for experiment-2 and 0.005 for experiment-3. In other words, we have reduced the search space by transforming P-value to label çTé and Fé as shown in Tabl e d on ou r cl as s i f i cat i o n   data file I is split into six su b-files for easier processing as shown in Table 3 Table 2: P-value Transformation Table P-value Label P-value < 0.002/0.005 T \(true P-value > = 0.002/0.005 F \(false Table 3: File Division Table Label File Name Intensity range Size KB F greater_than_or_equal_to_10.xls 10,27 29 E greater_than_or_equal_to_5.xls 5,27 42 D greater_than_or_equal_to_1.xls 1, 27 265 C equal_to_0.xls 0 1839 B less_than_-0.5.xls 5,-0.5 434 A less_than_-1.xls 5,-1 37  3.4 Data integration  To prepare for the input to the association rule mining algorithm, the two original f iles are merged into a third file as seen in Figure 3. There are a total of 82 columns The first column is çNew tag Ö name of the enhanceré, the second column is çsymbol Ö gene nameé from file II Gene_expression_profile.xls\and the remaining 80 columns are p-values of 80 TFs from file I TFvalues_enhancer.xls  Figure 3:  Integrated Data   4. Two Association Rule Mining Approaches  Our ultimate aim is to look fo r a set of association rules between the set of transcrip tion factors and the set of genes. To identify the association rules that meet our pvalue threshold, we have de veloped two association rule mining approaches using the preprocessed data. In the first approach, we are generating a set of association rules between a single gene and a set of TFs using the machine learning tool WEKA th e s econ d approach th e association rules between a set of genes and a set of TFs are generated by filtering the da ta in Excel using a p-value threshold   156 


4.1 Association rule mining methods in WEKA  WEKA has three associa tion rule learners: \(1\priori implements the apriori algor ithm; \(2\redictive apriori combines confidence and support into a single measure of predictive accuracy and finds the best n association rules in order; \(3\ertius fi nds rules according to a confirmation measure. We have selected Apriori which is the simplest and meets our needs  4.2 Using WEKA We load the data set in the required ç.csvé format into WEKA and then perform association rule mining on the input data set using Aprior i. Figure 4 shows a sample section of the input file re lated to gene GREB1 in the WEKA acceptable format. Once the data is loaded and attributes are recognized by WEKA, the next step is to generate associatio n rules. After the execution of Apriori algorithm, the result can be seen in th e çAssociator outputé window as shown in Figure 5   Figure 4: Greb1.csv file format    Figure 5: Associator output window  4.3 Result Interpretation We are interested in finding sets of TFs that are significant in triggering a gene to go up or down. From Figure 5, we can see that those TFs labeled with çTé are significant for upward expression of GREB1 gene. Hence we are only interested in TFs having label çTé. Therefore the new association rule is rewritten as: TF79 = çT symbol = çGREB1é which can be simplified as TF79 GREB1. The rule suggests that TF79 is significant in expression of gene çGREB1  Similarly, we can obtain a set of association rules between set of transcription factors and another gene using WEKA 4.4 P-value based Filtering Method In the second approach, we would like to get association rules between a set of TFs and a set of genes Towards that end, we developed a method in which the association rules are obtained by filtering the data in MSExcel on the basis of p-value threshold Consider the file greater_than_or_equal_to_10.xls it contains set of genes which are up expressed. We filter this file data using p-value threshold. For instance, if pvalue < 0.005, then we label that TF as çTé, otherwise label it as çF In Figure 6, the file contains p-values of 80 TFs associated with candidate enha ncers. We filter the p-value by applying function such as IF \(column value 0.005,éTé,éFé\and then append the result of filtering at the end of each corresponding row  TFs labeled as çTé are considered to be significant    Figure 6: Filtering using P-value Threshold    Figure 7: Checked Boxes for Significant TFs   If the TF value is true always for a gene, then we select that TF by checking the TF in excel sheet as shown in figure 7. For instance, in row, column \(2, 2\ figure 8 GREB1 gene has been checked for TF1 which implies TF1 is always significant for GREB1 gene. Using this approach, we can see that TF3, TF5 and TF6 are significant for all genes GREB1, CDH26, FLJ30058 MGP, PKIB, SGK1, SYTL4 whereas TF1 is only significant to 5 genes: GREB1, CDH26, FLJ30058, PKIB SGK1. Next step is to determine support. For a subset of gene, a TF is expressed at a significant level \(i.e its p157 


012		\015\015 012\015\015 100 and consider only those TFs in our association rule which satisfy support = 100%. We do this by checking those TFs from the excel sheet of figure 8 which are always significant. For example, TF3, TF5 and TF6 are always significant for the set of genes of figure 6 like GREB1, CDH26, FLJ30058, MGP, PKIB, SGK1 SYTL4. TF3     Q  VX  FLJ30058  GP   Q    If support = 70% then TF1 would also be significant \(As seen in figure 8, TF1 is true for 5 out of 7 genes implying 5/7 = 71% support\. So the corresponding association rule would be: TF1        Q  CDH26  30058     Q  SYTL4    5. Experiments and Results  We carried out four experiments to derive association rules between a set of transcription factors and a set of genes. In the procedure of experiment 1 we have used Weka tool only.  The P-value based filtering association rule mining method is used in the experiments 2, 3 and 4 In each experiment, we have considered a few behaviors such as expression/intensity level of genes increasing Category: E/F\d decreasing \(Category: A\ as described in section 3.2. In each experiment, association rules are generated with various support and confidence  5.1 Experiment 1 Aim To derive an association rule for a given target gene Procedure TFs whose p-value <  0.001 are assumed to be significant. Based on this chosen p-value, the numerical p-values are converted to nominal values such as çTé or çFé. Then this preprocessed data is used as an input to Apriori in Weka Weka generates association rules for every gene. For example, one of association rules generated is TF79  = çTé => symbol  = çGREB1é TF30 Fé, TF31 = çFé, TF66 = çFé, TF71 = çFé. The rule suggests that out of all the associated TFs, TF79 is significant in expression of gene çGREB1é. Support is considered to be 100 The association rules generate d in this experiment only reflect the impact of a subset of TFs on just one target gene but not on a subset of genes. Such a rule may not be robust. To obtain more useful result, we need to identify a collection of association rules between a subset of TFs and a subset of genes in the future experiments  5.2 Experiment 2 Aim to identify a collection of association rules between a subset of the 80 TFs and a subset of genes given with a strong support Procedure we first defined the selection criteria as pvalue < 0.002. In other words, a transcription factor whose p-value < 0.002 is assumed to be significant. Next we define support strength. For this experiment we say that TFs having support = 70% are considered to be strong For instance, in a set of 10 genes, if a particular TFês pvalue is less than 0.002 for 7 genes. Then that TF is said to be significant 70% of the time  Results of the experiment 	\012 Behavior- Expression of genes increasing \(Category: F TF5 TF15 TF23 TF24 TF26 TF30  TF31  TF35  TF37  TF41  TF43 TF45  TF54 TF59 TF61 TF62 TF64 TF70  TF71 => \(GREB1, MGP, PKIB, SGK1, SYTL4 FLJ30058, CDH26  Category: F  This rule means that the se t of TFs in the association rule are playing significant role for up expression of set of genes including GREB1, MGP, PKIB, SGK1, SYTL4 FLJ30058 and CDH26. Note the TFs marked in bold belong to a well known activators set = {FREAC4 \(TF33 FREAC4_01\TA \(TF34 - GATA_01, TF35 GATA_04\3 \(TF41 - HNF3ALPHA6_á6\and therefore they are expected by bio-medical researchers to appear in the experiment results. We also obtained the association rules for Category A with à	 and respectively.  However, only very few well known activators were presen t in the results of this experiment  5.3 Experiment 3 Aim to improve the inclusion rate of the well known activators in the resulti ng association rules  Procedure we try to relax the pvalue threshold, increase the support, and analyze the results. The p-value is relaxed  012     is increased to 90% and let confidence = 99.95%. The selection criteria are p-value 0.005. Therefore a transcription factor whose p-value 0.005 is assumed to be significant Resu\015  Behavior- Expression of genes decreasing \(Category: A   TF1 TF8   QQ  Q  Q  Q  Q  Q  Q  TF16 ! TF19 !"#`	!"#`Q            Q  TF32 TF33              TF48      Q     63   TF67 Q      V V VÅ~`ÉëQ V LOC65296, KCNK6, MAP6D1, P2RY2, PSCA SCNN1A, SMTNL2, SYT12, TGM2, UBTD1, ìASN ZSCAN2  Category A 158 


Similarly, association rules are obtained for Category F and E. The resulting association rules obtained share a common problem: we have too many transcription factors in the association rules obtained  5.4 Experiment 4 Aim   To obtain more useful and precise result, we want to reduce the number of transcription factors appearing in the resulting association rules Procedure we increase the support and analyze the results. In particularåQ		\012 015 Behavior- Expression of genes decreasing \(Category: A  TF4 TF8     Q`!"#Q  Q  Q  Q    Q    TF23 !"#`!"#`$!"#`â!"#Ñ	!"#ÑQ!"#32  TF34    TF35          TF45      Q         TF70 Q      CISH CTR9 CYP24A1, KCNK5, LOC65296, KCNK6, MAP6D1 P2RY2, PSCA, SCNN1A, SMTNL2, SYT12, TGM2 UBTD1, ìASN, ZSCAN2  Category A Similarly, association rules are also obtained for Category F and E. In the comparison study of inclusion rate of the well-known activat ors, we have the following result: experiment 2 -- 60 experiment 3 -- 100 contain all\, and experiment 4 -- 60  6. Conclusion  We have developed a data preprocessing method to consolidate an integrated da ta set of breast cancer gene expression and performed a set of experiments on association rule mining from the data for discovering breast cancer regulatory mechanisms of gene module. The significance of this work includ es: \(a\he data integration method developed in this study can be generalized to other similar data mining applications; \(b\he data mining results thus far pave the way for further study on the problem of discovering breast cancer regulatory mechanisms of gene module; and \(c\We have developed two different association rule mining approaches for discovering breast cancer regulatory mechanisms of gene module using only two data sources Future work  to enhance the results obtained includes the following 1  Currently the p-valu e is considered to be the only important attribute, and the data is classified and analyzed based on its va lues. However, position can also play an important role and we can incorporate position value in our fu ture data analysis 2  We can make better use of the availability of expression level at different points of time like at 3 hrs, 6 hrs, 12 hrs, 24 hrs, 48 hrs to include various gene expression behavior patterns in our experiment design. In our current design, we simply consider that the gene expression intens ity level is monotonically increasing or decreasing from 3hr to 48hr. However there can be many other possibilities if we consider the fluctuation of the expres sion within 48 hours. For example, the gene expression is peak at 3hrs and the peaking intensity reduces by 48 hrs. Can it also peak at 24 hrsî  Further expe riments will be needed  Acknowledgement The authors would like to express their appreciation for the valuable discussions with the Computational and Systems Biology group from the Genome Institute of Si ngapore during the study, and for the comments from anonymous reviewers that help improve the presentation of this paper  References 1  S. Fu, and C. Tobin, An Introduction to DNA and Chromosomes, HOPES: Huntington's Disease Outreach Project for Education at Stanford, 25 April 2006 http://hopes.stanford.edu/n3401/hd-genetics/introductiondna-and-chromosomes-text-and-audio 2  M. Hall, E. Frank, G. Holmes, B. Pfahringer, P Reutemann, I. H. Witten , 2009, çThe WEKA Data Mining Software: An Updateé, SIGKDD Explorations, ìolume 11 Issue 1, 1997 3  J. Han, and M. Kamber, Data mining: Concepts and Techniques, Second Edition, Morgan Kaufmann Publishers, 2006 4  Rakhi Malpani, çA Data Mining Experiment for Inferring Transcriptional Module from Breast Cancer Profile Data MS degree project, Department of Computer Science California State University, Sacramento, Fall 2010 5  A tsushi Niida, et al, çGene set-based module discovery in the breast cancer transcriptomeé, BMC Bioinformatics February, 2009 6  K. Lemmens, T. Dhollander, T. D. Bie, P. Monsieurs, K Engelen, B. Smets, J. Winderickx, B. D. Moor and K Marchal, çInferring transcriptional modules from ChIPchip, motif and microarray dataé, Genome Biology, 5 May 2006 7  Ziv Bar-Joseph, Georg K Gerber, Tong Ihn Lee, Nicola J Rinaldi, Jane Y Yoo, FranÁois Robert, D Benjamin Gordon, Ernest Fraenkel, Tommi S Jaakkola, Richard A Young, ï  David K Gifford Computational discovery of gene modules and regulatory networks Nature Biotechnology, November 2003 8  Transcription Factor, Wikipedia http://en.wikipedia.org/wiki/Transcription_factor 159 


Table III A VERAGE RANKS OF THE QUALITY MEASURES  All datasets Binary datasets Measure k 1 k  100 k 1 k  100 004 2 4.435 4.038 4.694 3.889 Jaccard 5.224 5.622 5.361 7.028 Correlation 5.235 4.679 5.361 4.667  WRAcc  5.288 4.571 5.306 4.333 G-measure 5.312 5.538 5.417 6.750 F-measure 5.582 5.718 5.250 6.778 WRAcc 5.800 5.027 5.417 4.722 Conìdence 6.506 6.865 7.333 7.028 Laplace 6.553 6.654 7.278 6.139 Speciìcity 7.465 8.455 8.306 7.806 Purity 10.235 10.141 8.389 7.361 Sensitivity 10.365 10.692 9.889 11.500 004 2 F  003 1  261.916 292.001 40.674 57.618 CD  003 1  2.069 2.160 4.496 4.496 Purity Jaccard Speciìcity Sensitivity Laplace F-measure G-measure and Correlation Details on these measures and their origins can be found in the paper by F  urnkranz and Flach For each dataset we perform steps I and II of our method the same way as in the previous section with each of the 12 quality measures We then compare the measures in step III by comparing the p-values of the k best subgroups for both k 1 and k  100 for k  100 we take the average p-values over the top 100 groups Hence for all measures we obtain for both choices of k one test score for each combination of dataset and target value within that dataset For k 1 this leads to a grand total of 85 test scores for each quality measure On both the Car and the Contact-lenses dataset no 100 subgroups are found that satisfy the minsup constraint Hence there are no results on these datasets for k  100  leaving a total of 78 test cases for k  100  The measures are subsequently ranked where a lower test score p-value is better The resulting average ranks can be found in the second and third columns of Table III This table also displays the results of the Friedman tests the values for 006 2 F  With a signiìcance level of 002 1 we need 006 2 F to be at least 24  73 to reject the null hypothesis that all quality measures perform equally good Hence we comfortably pass this test Since the Friedman test is passed we can now perform Nemenyi tests to see which quality measures outperform others For the k 1 setting the critical difference CD equals 2  069 with signiìcance level 002 1  For each pair of measures we compute from Table III whether their difference is larger than CD  and if so the one with the smaller average rank is better than the other The corresponding CD chart can be found in Figure 2 Such a chart features a horizontal bar of length CD for each quality measure 004 i  starting at its average rank Hence 004 i is signiìcantly better than each quality measure whose bar starts to the right of the bar of 004 i  For instance in Figure 2 we see that 006 2 Table IV A VERAGE RANKS FOR CORRELATION MODEL MEASURES  Measure Average rank 005 ent 1  75 r 3  00 r 2 3  75 005 abs 4  25  r 4  75  r 2 5  25 005 scd 5  25 004 2 F 21  96 CD  003 1  4  114 is signiìcantly better than Laplace Speciìcity Purity and Sensitivity Figure 3 displays the CD chart for the k  100 setting When we have a dataset with many distinct target values we repeatedly let one of the target values correspond to positive examples and the rest to negative examples Hence the more distinct target values we have the lower the average fraction of positive examples in the dataset To see whether certain quality measures suffer from this effect we also computed the average ranks considering only the 9 datasets with a binary target The results can be found in the last two columns of Table III Again the average ranks easily pass the Friedman test Now that we have only 18 test cases the critical difference for the Nemenyi test becomes CD 4  496 with signiìcance level 002 1  C Beyond subgroup discovery So far we have illustrated our method with measures for subgroup discovery over a single discrete target We now turn to a variant of EMM 12 an e xtension of subgroup discovery incorporating complex target concepts This variant strives to nd subgroups for which the correlation between two attributes is signiìcantly different from their correlation on the whole dataset Several quality measures have been proposed for this problem W e validate measures for this setting on the datasets and target concepts used in the original paper The resulting average ranks over the two datasets  Windsor Housing and Gene Expression  can be found in Table IV The Friedman test value for these ranks is 006 2 F 21  96  where 16  81 would be enough with 7 measures so we can proceed with the Nemenyi test The critical difference is CD 4  114 with signiìcance level 002  10 when testing 7 measures on 4 test cases aggregating over the results for k 1 and k  100  In these modest experiments we nd that no signiìcant conclusions can be drawn VI D ISCUSSION The previous section displayed the results experimentally obtained with our new method in this section we will interpret them We start with the results obtained by the technique for validating subgroups in a set S found through subgroup discovery 
157 


 Fämeasure Gämeasure WRAcc Correlation Jaccard Chi^2 12 11 10 9 8 7 6 5 4 Sensitivity WRAcc Confidence Laplace Specificity Purity Figure 2 CD chart for k 1  CD 2  069    Jaccard Gämeasure WRAcc Correlation WRAcc Chi^2 Confidence Laplace Fämeasure Purity Specificity Sensitivity 456789101112 Figure 3 CD chart for k  100  CD 2  160  A Validating subgroups From Table II we nd that we cannot refute any subgroups from S in several datasets Adult Credit-a Ionosphere Pima-indians and Wisconsin To explain this result we crafted a metalearning dataset from Tables I and II We selected the columns from Table I as attributes of our metalearning dataset and added three new columns representing the total number of attributes in the dataset a boolean column representing whether the dataset has discrete attributes and a boolean column representing whether the dataset has numeric attributes As target column we added the last column of Table II the fraction of subgroups retained when insigniìcant subgroups are removed with signiìcance level 002 1  On this metalearning dataset we performed a shallow using search depth d 1  but exhaustive subgroup discovery run using Kl  osgenês mean test as quality measure The resulting metasubgroups should consist of those datasets with a relatively high fraction of kept subgroups The best metasubgroup is deìned by the condition that the datasets have more than ve numeric attributes The eight datasets belonging to this metasubgroup are Adult Credita Glass Ionosphere Labor Pima-indians Wisconsin and Yeast This set includes all datasets for which we cannot refute any of the subgroups from S  This makes sense since for each dataset we have only considered the top 1000 subgroups a xed number independent of dataset characteristics Numeric attributes usually have many different values resulting in a hypothesis space that is much larger than it would have been if the attributes would have been discrete Hence in datasets with relatively many numeric attributes it is more likely that the 1000 best subgroups represent relatively rare spikes in a quality distribution consisting mainly of low values Therefore it is less likely that the random baseline incorporates some of these spikes and thus the baseline is more likely to be relatively weak B Validating quality measures The results we obtained by the technique for validating quality measures show that 006 2 achieves the best performance of all quality measures in distinguishing the top k subgroups from false discoveries Many of the relations between quality measures however are not signiìcant For k 1  all other quality measures perform signiìcantly better than Purity and Sensitivity Additionally Speciìcity performs signiìcantly worse than Jaccard Correlation  WRAcc   and the Gmeasure and 006 2 signiìcantly outperforms Laplace For k  100  we see some slight changes 006 2 and 
158 


 WRAcc  now also perform signiìcantly better than Conìdence and Speciìcity is now additionally outperformed by the F-measure and WRAcc while it no longer performs signiìcantly better than Purity Finally Correlation signiìcantly outperforms Conìdence Obviously some measures might be better than others in distinguishing the top k subgroups from false discoveries when k 1  while others might be better when k  100  The observed changes are not very dramatic and we consider the selection of k a user-derived parameter in the method One of the signiìcant relations that seems somewhat peculiar is the result that for both k 1 and k  100  Conìdence performs signiìcantly better than Purity while the latter is deìned to be max  Conìdence  1  Conìdence   While there is a good theoretical reason to consider the Purity of a subgroup we can see from the deìnition that Purity has a lower bound of 0  5  hence the random baseline will generate higher values with Purity than with Conìdence Apparently the quality of the subgroups found with Purity does not increase enough compared to those found with Conìdence to compensate for this effect By comparing the second and third columns of Table III with the last two columns we can see that  WRAcc   WRAcc and particularly Purity perform better when we restrict the tests to datasets with a binary target These measures beneìt from the fact that in these test cases we have a better balance between positive and negative examples in the data compared to test cases on other datasets We can also read from the table that we have fewer measures that are signiìcantly better than others on datasets with a binary target This is mainly because because signiìcance is hard to achieve in an experiment with only 18 test cases as opposed to 85 or 78 on all datasets With 18 test cases the critical difference for the Nemenyi test with signiìcance level 002 1 is CD 4  496  rather than CD 2  069 with 85 test cases Since the average ranks range from 1 to 12  a critical difference of 4  496 is substantial More signiìcant differences between the quality measures can be expected when tested on more datasets with a binary target The results for the EMM variant were generated on a modest number of test cases As a result the critical difference for the Nemenyi test is quite high and one could not expect to nd many signiìcant results Expensive experimentation may give a signiìcant reason to prefer one measure over another in this setting For now what matters is that this illustrates that our method is applicable in more general settings than just traditional subgroup discovery VII C ONCLUSIONS We propose a method that deals with the multiple comparisons problem in subgroup discovery i.e the problem that when exploring a vast search space one basically considers many candidates for a statistical hypothesis hence one will inevitably incorrectly label some candidates as passing the test Our method tackles this problem by building a statistical model for the false discoveries the Distribution of False Discoveries DFD This distribution is generated by given a dataset and quality measure repeatedly running a subgroup discovery algorithm on a swap-randomized version of the data In this swap-randomized version while the distribution of the target variable is maintained its correlation with the attributes is destroyed Hence the best subgroup discovered on this dataset represents a false discovery The DFD is then determined by applying the central limit theorem to the qualities of these false discoveries Having determined the DFD one can solve many practical problems prevalent in subgroup discovery For any given discovered subgroup one can determine a p-value corresponding to the null hypothesis that it is generated by the DFD refuting this null hypothesis implies that the subgroup is not a false discovery Given a set of quality measures one can use the DFD to determine which quality measures are better than others in distinguishing the top k subgroups from false discoveries This gives an objective criterion for selecting a quality measure that is more likely to produce exceptional results Finally given some desired signiìcance level 002  one could extract from the DFD a minimum threshold for the quality measure at hand When validating single subgroups we see that our method removes insigniìcant subgroups found on datasets that have few numeric attributes From metalearning we nd that on large datasets for instance with more than ve numeric attributes the random baseline is more likely to accept many patterns This is reasonable because of the associated larger hypothesis space Table II shows that our method can remove insiginìcant subgroups on some of the datasets with more than ve numeric attributes but not on all of them When we validate quality measures we have outlined that the method we described determines the extent to which a quality measure is also an exceptionality measure We have seen that of the twelve measures for subgroup discovery we tested 006 2 is the best exceptionality measure and Purity and Sensitivity are by far the worst For the EMM correlation model variant no signiìcant conclusions can be drawn from the modest experiments In this paper we have presented a technique making extensive use of swap randomization Notice that we do not by any means claim to have invented this particular randomization method Also its use in step I of the method we introduced in this paper is not the only option available We have extensively explained why using swap randomized data leads to a good model for false discoveries but it comes at a price for every result of a subgroup discovery run one wishes to validate one has to run the same subgroup discovery algorithm an additional m times where m needs to be large enough to satisfy the constraints of the Central Limit Theorem In the more traditional subgroup discovery setting one can usually afford this extra computation time 
159 


For more complex settings for instance the EMM variant using Bayesian networks introduced in this becomes problematic When computation time becomes an issue one might consider different randomization techniques to generate R 1 R m  for instance by simply drawing a random sample from 002 of a certain size for each R i  Before such a technique can be employed its theoretical ramiìcations need to be explored In future work we also plan to empirically investigate the effect of certain parameters on the outcome of the method A CKNOWLEDGMENTS This research is nancially supported by the Netherlands Organisation for Scientiìc Research NWO under project number 612  065  822 Exceptional Model Mining R EFERENCES  J Friedman N Fisher  Bump-Hunting in High-Dimensional Data Statistics and Computing 9\(2 pp 123Ö143 1999  W  Kl  osgen Subgroup Discovery Handbook of Data Mining and Knowledge Discovery ch 16.3 Oxford University Press New York 2002  S D Bay  M J P azzani Detecting group dif ferences Mining contrast sets Data Mining and Knowledge Discovery 5\(2 pp 213Ö246 2001  G Dong J Li Ef cient mining of emer ging patterns Discovering trends and differences Proc KDD pp 43Ö52 1999  P  Kralj No v a k N La vra 031 c G I Webb Supervised Descriptive Rule Discovery A Unifying Survey of Contrast Set Emerging Pattern and Subgroup Mining Journal of Machine Learning Research 10 pp 377Ö403 2009  Y  Hochber g A T amhane Multiple Comparison Procedures Wiley New York 1987  J F  urnkranz P A Flach ROC n Rule Learning  Towards a Better Understanding of Covering Algorithms Machine Learning 58 1 pp 39-77 2005  N La vra 031 c P Flach B Kav 031 sek and L Todorovski Rule induction for subgroup discovery with CN2-SD Proc ECML/PKDD 2002  H Grosskreutz Cascaded subgroups disco v ery with an application to regression Proc ECML/PKDD 2008  B F  I Pieters A Knobbe S D 031 zeroski Subgroup Discovery in Ranked Data with an Application to Gene Set Enrichment Proc Preference Learning workshop PL2010 at ECML PKDD 2010  W  Dui v esteijn A Knobbe A Feelders M v an Leeuwen Subgroup Discovery meets Bayesian networks an Exceptional Model Mining approach Proc ICDM pp 158Ö167 2010  D Leman A Feelders A Knobbe Exceptional Model Mining Proc ECML/PKDD Part II pp 1Ö16 2008  Y  H Xu A Fern On Learning Linear Ranking Functions for Beam Search Proc ICML 2007 ACM International Conference Proceeding Series vol 227 pp 1047Ö1054 ACM New York  H Grosskreutz S R  uping On Subgroup Discovery in Numerical Domains Data Mining and Knowledge Discovery 19\(2 pp 210Ö226 2009  A Gionis H Mannila T  Mielik  ainen P Tsarapas Assessing data mining results via swap randomization Proc KDD pp 167Ö176  2006  A M L yapuno v  Nouv elle forme du th  eor  eme sur la limite de probabilit  e St Petersburg 1901  K Pearson L Filon Mathematical contrib utions to the theory of evolution iv on the probable errors of frequency constants and on the inîuence of random selection on variation and correlation Phil Trans A 191 pp 229Ö311 1898  J Dem 031 sar Statistical Comparisons of Classiìers over Multiple Data Sets Journal of Machine Learning Research 7 pp 1Ö30 2006  M Friedman The use of ranks to a v oid the assumption of normality implicit in the analysis of variance Journal of the American Statistical Association 32 pp 675Ö701 1937  M Friedman A comparison of alternati v e tests of signiìcance for the problem of m rankings Annals of Mathematical Statistics 11 pp 86Ö92 1940  P  B Nemen yi Distrib ution-free multiple comparisons PhD thesis Princeton University 1963  M Ojala G C Garriga A Gionis H Mannila Ev aluating Query Result Signiìcance in Databases via Randomizations Proc SDM pp 906Ö917 2010  N Me giddo R Srikant Disco v ering Predicti v e Association Rules Proc KDD pp 274Ö278 1998  W  Kl  osgen Explora A multipattern and multistrategy discovery assistent Advances in Knowledge Discovery and Data Mining pp 249-271 1996  C Silv erstein S Brin R Motw ani Be yond Mark et Bask ets Generalizing Association Rules to Dependence Rules Data Min Knowl Discov 2 1 pp 39Ö68 1998  P N T an V  K umar  J Sri v asta v a Selecting the right inter estingness measure for association patterns Proc KDD pp 32Ö41 2002  G I W ebb Disco v ering Signiìcant P atterns Machine Learning 68 1 pp 1Ö33 2007  M Meeng A J Knobbe Fle xible Enrichment with Cortana  Software Demo Proc Benelearn pp 117Ö119 2011  D Ne wman S Hettich C Blak e C Merz UCI repository of machine learning databases 1998 
160 


cc ur ac y   Fig. 4. Accuracy for Model-based clustering and rule-based classification Fig. 5. Distribution of flow attributes in scatter plot matrix In Fig.5, the distribution of IP and ports for source and destination is depicted for Model-based clustering method. For HTTP \(blue traffic to few destination IPs. HTTP behavior is prominent because a number of source hosts are communicating with small number of destination hosts, i.e., HTTP servers. In DNS application, source hosts communicate with a set of DNS servers. Each host interacts with different domains such as www, .org and .net for resolving IP addresses. The DNS behavior is prominent because large group of source hosts communicate with small repeated set of destination IPs. In the IRC application, a group of hosts communicates with other group of hosts. There is roughly one-to-one correspondence between source and destination IP. This behavior is prominent because IRC \(cross with approximately equal number of destination IPs. Moreover, source IP and destination port distribution show that destination port numbers are in the range of 30000 for SMTP green where as HTTP and MAIL have destination ports number in lower range of 1000. Model-based clustering with the Apriori algorithm provides reliable and accurate classification model as compared to K-mean method. The association rules helps us predict flows for particular application with high confidence and lift values IV. CONCLUSION In conclusion, we have presented a classification model that achieves high flow classification accuracy with application behavior profiling. The use of the K-mean algorithm for Netflow classification was shown to be inefficient. On the other hand, Model based clustering with association rule mining techniques provided a much better accuracy. Moreover the rule heuristics are produced automatically, making the algorithm modular and independent of the dataset. In addition 


our model is able to detect new behavior patterns for next generation applications. As a future work, we are planning to analyze a bigger database of traces and define behavior patterns for a wider range of applications REFERENCES 1] F. Baker, B. Foster, and C. Sharp. Cisco architecture for lawful intercept in IP networks. Internet Engineering Task Force, RFC, 3924, 2004 2] C. Borgelt and R. Kruse. Induction of association rules: Apriori implementation. In Compstat: Proceedings in Computational Statistics 15th Symposium Held in Berlin, Germany, 2002, page 395. Physica Verlag, 2002 3] WAND Trace Catalogue. http://www.wand.net.nz/wits/catalogue.php 4] C. Dewes, A. Wichmann, and A. Feldmann. An analysis of Internet chat systems. In Proceedings of the 3rd ACM SIGCOMM conference on Internet measurement, pages 5164. ACM, 2003 5] J. Erman, A. Mahanti, and M. Arlitt. Internet traffic identification using machine learning. In Proceedings of IEEE GlobeCom. Citeseer, 2006 6] C. Fraley and A.E. Raftery. MCLUST version 3 for R: Normal mixture modeling and model-based clustering. Technical report, Citeseer, 2006 7] M. Iliofotou, H. Kim, M. Faloutsos, M. Mitzenmacher, P. Pappu, and G. Varghese. Graph-based P2P traffic classification at the internet backbone. In IEEE Global Internet Symposium. Citeseer, 2009 8] T. Karagiannis, A. Broido, and M. Faloutsos. Transport layer identification of P2P traffic. In Proceedings of the 4th ACM SIGCOMM conference on Internet measurement, pages 121134. ACM, 2004 9] David Kotz, Tristan Henderson, Ilya Abyzov and Jihwang Yeo. CRAWDAD trace dartmouth/campus/tcpdump/fall01 \(v. 2004-11-09 http://crawdad.cs.dartmouth.edu/dartmouth/campus/tcpdump/fall01 November 2004 10] A.W. Moore and K. Papagiannaki. Toward the accurate identification of network applications. Passive and Active Network Measurement, pages 4154, 2005 11] TTT Nguyen and G. Armitage. A survey of techniques for internet traffic classification using machine learning. IEEE Communications Surveys Tutorials, 10\(4 12] I. Papapanagiotou and M. Devetsikiotis. Aggregation Design Methodologies for Triple Play Services. In IEEE CCNC 2010, Las Vegas, USA pages 15, 2010 13] V. Paxson. Bro: A system for detecting network intruders in real-time Comput. Networks, 31\(23 14] J. Xu, J. Fan, M. Ammar, and S.B. Moon. On the design and 


performance of prefix-preserving IP traffic trace anonymization. In Proceedings of the 1st ACM SIGCOMM Workshop on Internet Measurement, page 266. ACM, 2001.80 


denote the input attribute with the minimum integrated cost after the split, and let the set of allocated sample sizes, computed by the sample allocation method explained later, be ASM . Then DM | children are generated for the node M . For each child CHi, i = 1, . . . , |DM |, the associated query is QN ?{M = mi sample size is asi ? ASM , and potential splitting attributes is PSN ? M . The process of splitting is then recursively applied to children of node N In the process of calculating costs during the strati?cation process, we need to perform sample allocation, i.e., divide the parent nodes sample size among the potential children nodes This is required for calculating the integrated cost for the potential split. This is based on our sample allocation method, which we 328 describe next in Section IV-B. Furthermore, for calculating the integrated cost, the variance of target value ?2i and probability of output attribute A = a, ?i, for each stratum is computed based on the pilot sample Initially, the strati?cation process on the query space begins by calling Stratification\(R, null, F IA, n, null root node. The process of strati?cation would stop if there is no leaf node with integrated cost larger than a prede?ned threshold Each leaf node in the tree is a ?nal stratum for sampling, and the associated sample size denotes the number of data records drawn from the subpopulation of the stratum B. An Optimized Sample Allocation Method Now, we introduce our optimized algorithm for sample allocation which integrates variance reduction and sampling cost As introduced in section IV-A, integrated cost is de?ned by taking into account of variance of estimation and sampling cost The goal of our sample allocation algorithm is to minimize the integrated cost by choosing the sample size, ni, for each stratum In our algorithm, we adjust the value of SampCost and ?2s so that their in?uences on the integrated cost are in the same unit SampCost SampCost SmpCost\(r where SmpCost\(r entire population, and ?r denotes the probability of A = a being true for the entire population 2 2s 


2r where ?2r 2 n denotes the variance of estimation of the target value on the entire population The key constraint on the values of the sample sizes for each strata is that their sum should be equal to the total sample size A vector n = {n1, n2, . . . , nH} is used to represent the sample sizes, where the ith element, ni, is the sample size for the ith stratum By including sampling cost and variance of estimation into the integrated cost, our sample size determination task leads to the following optimization problem Minimize Cost\(n  i\(?s ni i v N2i niN2 2 i subject to  i ni = n 6 where Ni denotes the population size of data records under the space of A = a in ith stratum. Note that this value may not be known if A is an output attribute. However, the total number of records in the ith stratum is typically known, and can be denoted as DNi. Then Ni can be estimated by ?iDNi, and the population size of A = a on the entire population is estimated by N  i ?i DNi For ?nding the minimum of integrated cost, we utilize Lagrange multipliers, a well know optimization method. Lagrange multipliers aims at ?nding the extrema of a function object to constraints. Using this approach, a new variable ? called a Lagrange multiplier is introduced and de?ned by n n  


 i ni ? n If n is a minimum solution for the original constrained problem then there exists a ? such that \(n Lagrange function. Stationary points are those points where the partial derivatives of ?\(n n,??\(n 7 In our problem, by conducting partial derivatives on Formula 7 a group of equations are yielded as follows s i v N 2 i n2iN2 2 i + ? = 0 i = 1, ..H i ni = n 8 where the solution n leads to the minimum value of integrated cost in Formula 5 However, it is dif?cult to solve the group of equations directly Thus, we use numerical analysis to approximate the real solution. Newtons method is utilized for ?nding successively better approximations to the zeroes \(or roots Given an equation f\(x x tive of function f\(x method iteratively provides, xt+1, a better approximation of the root, based on xt, the previous approximation of root according to the following formula xt+1 = xt ? f\(xt f ?\(xt The iteration is repeated until a suf?ciently accurate value is reached, i.g. |f\(xt In our problem of Formula 8, there are H + 1 equations F \(xt xt xt n1, .., nH , ?}, where the equations in F \(xt fi\(xt s i v N 


2 i n2iN2 2 i + ? i = 1, .., H fH+1\(xt  i ni ? n The Newtons method is also applied iteratively via the system of linear equations JF \(xt xt+1 ? xt xt 9 where JF \(xt H + 1 H + 1 equation system F \(xt vector xt. The entry JF \(i, j d\(fi\(x dxj where fi\(x xt x From the Expression 9, a better approximation xt+1 is obtained based on previous approximation xt. The iterative procedure would be stopped if ?i|fi\(xt threshold, and then the sample size ni is allocated for each stratum so that the integrated cost is minimized. In reality, we are required to pick an integral number of records from each stratum during the sampling step. Thus, we round down each ni to its nearest integer, ni + 0.5 In the example shown in Table I, suppose we set both weights v and ?s to be 0.5. Further, assume the variance of the entire population, ?2r , to be 80000. The probability of A = a over the entire population ?r is 0.242. By using the proposed optimized sample allocation method, the sample sizes for the three strata 329 are 162, 299, and 139, respectively. In this case, the variance of estimation according to the Expression 2 is 93.66, and the estimated cost is 1943.7. We can see that, compared with Neyman allocation, the sampling cost is decreased by 42.1%, but results some increase in variance. Overall, this example shows that we can achieve lower sampling cost by trading off some accuracy C. Overall Sampling Process Algorithm 2 DiffRuleSampling\(DW1, DW2, F IA, t, St 1: PS ? a pilot sample from DW1, DW2 


2: DR ? identi?ed rules from PS 3: OA ? output attributes of DW1, DW2 4: for all R : X ? DW1\(t t 5: if X ?OA = null then 6: Acquire St data records from the space of X 7: else 8: R ? root node 9: Lf ? null 10: Strati?cation\(R,null, F IA, St, Lf 11: for all N ? Lf do 12: s ? sample size of N 13: Draw s data records from the subpopulation of N 14: end for 15: end if 16: Update the mean value of DW1\(t t 17: end for Algorithm 2 shows the overall sampling process for differential rule mining on two deep web data sources, DW1 and DW2 and with differential attribute t. The inputs of the algorithm also contain the full set of input attributes FIA as well as the sample size St. The algorithm starts with a pilot sample PS, from which the differential rules are identi?ed. For the rule R : X ? DW1\(t t St data records are directly drawn from the space of X \(Lines 5-6 t t containing output attributes, query spaces of DW1 and DW2 are strati?ed and sample is recursively allocated to each stratum with corresponding query subspace \(Line 10 of the tree built by strati?cation, a sample is drawn according to its sample size \(Line 13 t t is updated by the further sample \(Line 16 for association rule mining is very similar and not shown here V. EVALUATION STUDY We evaluate our sampling methods for association mining and differential rule mining on the deep web using two datasets described below US Census data set: This is a 9-attribute real-life data set obtained from the 2008 US Census on the income of US households. This data set contains 40,000 data records with 7 categorical attributes about the race, age, and education level of the husband and wife of each household and 2 numerical attributes about the incomes of husband and wife 


Yahoo! data set: The Yahoo! data set, which consists of the data crawled from a subset of a real-world hidden database at http://autos.yahoo.com/. Particularly, we download the data on used cars located within 50 miles of a zipcode address. This yields 30,000 data records. The data consists of 7-attribute with 6 categorical attributes about the age, mileage, brand, etc, of the cars and one numerical attribute, which is the price of the car Variance of Estimation is estimated for the target value \(i.e mean value in differential rule mining, and con?dence in association rule mining is calculated according to the Expression 2. Since variance of estimation reveals the variation of the estimated value from the true value, smaller variance suggests better estimation Sampling Cost is estimated by the number of queries submitted to data sources in order to acquire a certain number of data records containing target output attributes, i.e. A = a. Larger sample size implies higher sampling costs in a deep web setting where the queries are executed over the internet Estimate accuracy is estimated by Absolute Error Rate \(AER Small AER value indicates higher accuracy. For an estimator on variable Y with true value y and estimated value y, the AER of the estimator is calculated by AER\(y A. Association Rule Mining In this section, we present the results of our method for association rule mining. Using our overall approach, we have created four different versions, which correspond to four different sets of weights assigned to variance of estimation and sampling costs. 1 the weight ?v = 1.0 and ?s = 0.0, 2 the weight ?v = 0.7 and ?s = 0.3, 3 v = 0.5 and ?s = 0.5, and 4 weights ?v = 0.3 and ?s = 0.7. In addition, we also compare these approaches with a simple random sampling method, which is denoted by Random We focus on the queries in the form of A = a ? B = b where A and B are output categorical attributes. Other categorical attributes in the data set are considered as input attributes Our goal is to estimate Supp\(A=a,B=b A=a association rules are randomly selected from the datasets. Each of the 50 association rules are re-processed 100 times using 100 different \(pilot sample, sample iterations result is the average result for 5000 executions 


In all charts reported in this section, the X-axis is k, which denotes the size of sample under the space of a target rule drawn from deep web. The sample size for each point on X-axis is k x, where x is a ?xed value for our experiment, and depends upon the dataset. At each time, queries are issued to obtain kx data records under the space of a target rule. Overall, all our experiments show the variance of estimation, sampling costs and sampling accuracy with varying sample size Figure 1 shows the result from our strati?ed sample methods on the US census data set. The size of pilot sample is 2000, from which all of the 50 initial rules are derived. In this experiment the ?xed value x is set to be 300, which means the smallest sample size at k = 1 is 300, and the largest sample size at k 10 is 3000. Figure 1 a the ?ve sampling procedures. Figure 1 b cost for the sampling procedures. In order to better illustrate the experiment result, in each execution of sampling, the variance of 330 6DPSOLQJ9DULDQFH            9D UL DQ FH R I V WL PD WL RQ  


9DU 9DU 9DU 5DQG a timation 6DPSOLQJ&RVW           6D PS OL QJ  RV W 9DU 9DU 9DU 5DQG b 6DPSOLQJ$FFXUDF            5 


 9DU 9DU 9DU 5DQG c Fig. 1. Evaluation of Sampling Methods for Association Rule Mining on US Census Dataset estimation and sampling cost for the sampling procedures var7 var5, var3, and rand are normalized by the corresponding values of Full Var. Thus, in our experiment, the values of sampling cost and variance of estimation for sampling procedure Full Var are all 1. Furthermore, Figure 1 c sampling procedures From Figure 1 a pared with sampling procedures Var7, Var5 and Var3, Full Var has the lowest estimation variance and the highest sampling cost. From sampling procedures Var7, Var5, and Var3, we can see a pattern that the variance of estimation increases, and the sampling cost decreases consistently with the decrease of the weight for variance of estimation. At the largest sample size of k = 10, the estimation variance of sampling procedure Var3 is increased by 27% and the sampling cost is decreased by 40 compared with sampling procedure Full Var. The experiment shows that our method decreases the sampling cost ef?ciently by trading off a percent of variance of estimation. Similar to variance of estimation, the sampling accuracy of these procedures also decreases with the decrease of the weight on variance of estimation. For the largest sample size at k = 10, we can see that the AER of sampling procedure Var3 is increased by 20 compared with sampling procedure Full Var. However, for many users, increase of the AER will be acceptable, since the sampling cost is decreased by 40%. By setting the weights for sampling variance and sampling cost, users would be able to control the trade-off between the variance of estimation, sampling cost, and estimation accuracy In addition, compared with sampling procedure of Full Var Var7, Var5, and Var3, sampling procedure Random, has higher estimation of variance, sampling cost and lower estimation accuracy. Thus, our approach clearly results in more effective methods than using simple random sampling for data mining on the deep web Figure 2 shows the experiment result of our proposed strati?ed 


sampling methods on the Yahoo! data set. The size of pilot sample on this data set is 2,000, and the ?xed value x for sample size is 200. The results are similar to those from the US census dataset. We can still see the pattern of the variance of estimation increasing with the decrease of its weight. Besides, the sampling accuracy is also similar to the variance of estimation. However although the variance estimation of sampling procedure Random is 60% larger than sampling procedure Full Var, the sampling cost of Random is 2% smaller than Full Var. This is because Full Var does not consider sampling cost. It is possible that Full Var assigns a large sample to a stratum with low ?, which denotes the probability of containing data records under the space of A = a, resulting the larger sampling cost than that of simple random sampling. Sampling procedures Var7, Var5, Var3 consider sampling cost as well, and have smaller variance estimation and sampling cost, compared with Random. Furthermore, Random has smaller sampling accuracy than Full Var, Var7 and Var5, but has larger sampling accuracy than Var3. This is because Var3 assigns much more importance to the sampling cost, and loses accuracy to a large extent To summarize, our results shows that our proposed strati?ed sampling are clearly more effective than simple random sampling on the deep web. Moreover, our approach allows users to tradeoff variance of estimation and sampling accuracy to some extent while achieving a large reduction in sampling costs B. Differential Rule Mining In this section, we present results from experiments based on differential rule mining. Particularly, we look at the rules of the form A = a ? D1\(t t categorical attribute and t is an output numerical attribute, while other categorical attributes in the data set are considered as input attributes In this experiment, we also evaluate our proposed method with different weights assigned to variance of estimation and sampling cost. Five sampling procedures, Full Var, Var7, Var5,Var3 and Random, have same meanings with those in the experiments of association rule mining. Similarly, 50 rules are randomly selected from the datasets, and each of the 50 differential rules are reprocessed 100 times using 100 different \(pilot sample, sample iterations 5000 runs First, we evaluated the performance of these procedures on 


the US census data set. The size of pilot sample is 2000, and all 50 rules are derived from this pilot sample. In this experiment the ?xed value x for the sample size is set to be 300. The attribute income is considered as a differential attribute, and the difference of income of husband and wife is studied in this experiment. Figure 3 shows the performance of the 5 sampling 331 6DPSOLQJ9DULDQFH             9D UL DQ FH R I V WL PD WL RQ  9DU 9DU 9DU 5DQG a timation 6DPSOLQJ&RVW    


      6D PS OL QJ  RV W 9DU 9DU 9DU 5DQG b 6DPSOLQJ$FFXUDF          5  9DU 9DU 9DU 5DQG c Fig. 2. Evaluation of Sampling Methods for Association Rule Mining on the Yahoo! Dataset procedures on the problem of differential rule mining on the US census data set. The results are also similar to the experiment results for association rule mining: there is a consistent trade off between the estimation variance and sampling cost by setting their weights. Our proposed methods have better performance than simple random sampling method 


We also evaluated the performance of our methods on the Yahoo! dataset. The size of pilot sampling is 2000, and the xed value x for the sample size is 200. The attribute price is considered as the target attribute. Figure 4 shows the performance of the 5 sampling procedures on the problem of differential rule mining on the Yahoo! dataset. The results are very similar to those from the previous experiments VI. RELATED WORK We now compare our work with the existing work on sampling for association rule mining, sampling for database aggregation queries, and sampling for the deep web Sampling for Association Rule Mining: Sampling for frequent itemset mining and association rule mining has been studied by several researchers [23], [21], [11], [6]. Toivonen [23] proposed a random sampling method to identify the association rules which are then further veri?ed on the entire database. Progressive sampling [21], which is based on equivalence classes, involves determining the required sample size for association rule mining FAST [11], a two-phase sampling algorithm, has been proposed to select representative transactions, with the goal of reducing computation cost in association rule mining.A randomized counting algorithm [6] has been developed based on the Markov chain Monte Carlo method for counting the number of frequent itemsets Our work is different from these sampling methods, since we consider the problem of association rule mining on the deep web. Because the data records are hidden under limited query interfaces in these systems, sampling involves very distinct challenges Sampling for Aggregation Queries: Sampling algorithms have also been studied in the context of aggregation queries on large data bases [18], [1], [19], [25]. Approximate Pre-Aggregation APA  categorical data utilizing precomputed statistics about the dataset Wu et al. [25] proposed a Bayesian method for guessing the extreme values in a dataset based on the learned query shape pattern and characteristics from previous workloads More closely to our work, Afrati et al. [1] proposed an adaptive sampling algorithm for answering aggregation queries on hierarchical structures. They focused on adaptively adjusting the sample size assigned to each group based on the estimation error in each group. Joshi et al.[19] considered the problem of 


estimating the result of an aggregate query with a very low selectivity. A principled Bayesian framework was constructed to learn the information obtained from pilot sampling for allocating samples to strata Our methods are clearly distinct for these approaches. First strata are built dynamically in our algorithm and the relations between input and output attributes are learned for sampling on output attributes. Second, the estimation accuracy and sampling cost are optimized in our sample allocation method Hidden Web Sampling: There is recent research work [3 13], [15] on sampling from deep web, which is hidden under simple interfaces. Dasgupta et al.[13], [15] proposed HDSampler a random walk scheme over the query space provided by the interface, to select a simple random sample from hidden database Bar-Yossef et al.[3] proposed algorithms for sampling suggestions using the public suggestion interface. Our algorithm is different from their work, since our goal is sampling in the context of particular data mining tasks. We focus on achieving high accuracy with a low sampling cost for a speci?c task, instead of simple random sampling VII. CONCLUSIONS In this paper, we have proposed strati?cation based sampling methods for data mining on the deep web, particularly considering association rule mining and differential rule mining Components of our approach include: 1 the relation between input attributes and output attributes of the deep web data source, 2 maximally reduce an integrated cost metric that combines estimation variance and sampling cost, and 3 allocation method that takes into account both the estimation error and the sampling costs Our experiments show that compared with simple random sampling, our methods have higher sampling accuracy and lower sampling cost. Moreover, our approach allows user to reduce sampling costs by trading-off a fraction of estimation error 332 6DPSOLQJ9DULDQFH      


     V WL PD WL RQ R I 9D UL DQ FH  9DU 9DU 9DU 5DQG a timation 6DPSOLQJ&RVW          6D PS OL QJ  RV W 9DU 9DU 


9DU 5DQG b 6DPSOLQJ$FFXUDF          5  9DU 9DU 9DU 5DQG c Fig. 3. Evaluation of Sampling Methods for Differential Rule Mining on the US Census Dataset 6DPSOLQJ9DULDQFH             9D UL DQ FH R I V WL 


PD WL RQ  9DU 9DU 9DU 5DQG a timation 6DPSOLQJ&RVW          6D PS OL QJ  RV W  9DU 9DU 9DU 5DQG b 6DPSOLQJ$FFXUDF         


    5  9DU 9DU 9DU 5DQG c Fig. 4. Evaluation of Sampling Methods for Differential Rule Mining on the Yahoo! Dataset REFERENCES 1] Foto N. Afrati, Paraskevas V. Lekeas, and Chen Li. Adaptive-sampling algorithms for answering aggregation queries on web sites. Data Knowl Eng., 64\(2 2] Rakesh Agrawal and Ramakrishnan Srikant. Fast algorithms for mining association rules. In Proceedings of the 20th International Conference on Very Large Data Bases, pages 487499, 1994 3] Ziv Bar-Yossef and Maxim Gurevich. Mining search engine query logs via suggestion sampling. Proc. VLDB Endow., 1\(1 4] Stephen D. Bay and Michael J. Pazzani. Detecting group differences Mining contrast sets. Data Mining and Knowledge Discovery, 5\(3 246, 2001 5] M. K. Bergman. The Deep Web: Surfacing Hidden Value. Journal of Electronic Publishing, 7, 2001 6] Mario Boley and Henrik Grosskreutz. A randomized approach for approximating the number of frequent sets. In ICDM 08: Proceedings of the 2008 Eighth IEEE International Conference on Data Mining, pages 4352 Washington, DC, USA, 2008. IEEE Computer Society 7] D. Braga, S. Ceri, F. Daniel, and D. Martinenghi. Optimization of Multidomain Queries on the Web. VLDB Endowment, 1:562673, 2008 8] R. E. Ca?isch. Monte carlo and quasi-monte carlo methods. Acta Numerica 7:149, 1998 9] Andrea Cali and Davide Martinenghi. Querying Data under Access Limitations. In Proceedings of the 24th International Conference on Data Engineering, pages 5059, 2008 10] Bin Chen, Peter Haas, and Peter Scheuermann. A new two-phase sampling based algorithm for discovering association rules. In KDD 02: Proceedings of the eighth ACM SIGKDD international conference on Knowledge discovery and data mining, pages 462468, New York, NY, USA, 2002 ACM 


11] W. Cochran. Sampling Techniques. Wiley and Sons, 1977 12] Arjun Dasgupta, Gautam Das, and Heikki Mannila. A random walk approach to sampling hidden databases. In SIGMOD 07: Proceedings of the 2007 ACM SIGMOD international conference on Management of data pages 629640, New York, NY, USA, 2007. ACM 13] Arjun Dasgupta, Xin Jin, Bradley Jewell, Nan Zhang, and Gautam Das Unbiased estimation of size and other aggregates over hidden web databases In SIGMOD 10: Proceedings of the 2010 international conference on Management of data, pages 855866, New York, NY, USA, 2010. ACM 14] Arjun Dasgupta, Nan Zhang, and Gautam Das. Leveraging count information in sampling hidden databases. In ICDE 09: Proceedings of the 2009 IEEE International Conference on Data Engineering, pages 329340 Washington, DC, USA, 2009. IEEE Computer Society 15] Loekito Elsa and Bailey James. Mining in?uential attributes that capture class and group contrast behaviour. In CIKM 08: Proceeding of the 17th ACM conference on Information and knowledge management, pages 971 980, New York, NY, USA, 2008. ACM 16] E.K. Foreman. Survey sampling principles. Marcel Dekker publishers, 1991 17] Ruoming Jin, Leonid Glimcher, Chris Jermaine, and Gagan Agrawal. New sampling-based estimators for olap queries. In ICDE, page 18, 2006 18] Shantanu Joshi and Christopher M. Jermaine. Robust strati?ed sampling plans for low selectivity queries. In ICDE, pages 199208, 2008 19] Bing Liu. Web Data Mining: Exploring Hyperlinks, Contents, and Usage Data \(Data-Centric Systems and Applications Inc., Secaucus, NJ, USA, 2006 20] Srinivasan Parthasarathy. Ef?cient progressive sampling for association rules. In ICDM 02: Proceedings of the 2002 IEEE International Conference on Data Mining, page 354, Washington, DC, USA, 2002. IEEE Computer Society 21] William H. Press and Glennys R. Farrar. Recursive strati?ed sampling for multidimensional monte carlo integration. Comput. Phys., 4\(2 1990 22] Hannu Toivonen. Sampling large databases for association rules. In The VLDB Journal, pages 134145. Morgan Kaufmann, 1996 23] Fan Wang, Gagan Agrawal, Ruoming Jin, and Helen Piontkivska. Snpminer A domain-speci?c deep web mining tool. In Proceedings of the 7th IEEE International Conference on Bioinformatics and Bioengineering, pages 192 199, 2007 24] Mingxi Wu and Chris Jermaine. Guessing the extreme values in a data set a bayesian method and its applications. VLDB J., 18\(2 25] Mohammed J. Zaki. Scalable algorithms for association mining. IEEE Transactions on Knowledge and Data Engineering, 12:372390, 2000 


333 


