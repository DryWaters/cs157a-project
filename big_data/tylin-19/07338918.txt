Application of Hybrid Ant Colony Algorithm for Mining Maximum Frequent Item Sets  Gao Ye College of Computer Science and Technology Xi’an University of Science and Technology  Xi’an, Shaanxi 710054,China  leafhigh@163.com Tang Xiao-lan College of Computer Science and Technology Xi  an University of Science and Technology Xi  an, Shaanxi 710054,China 597299460@qq.com   Abstract  In order to avoid the effect of initial pheromones for Ant Colony Algorithm, Ant Colony Algorithm and Genetic Algorithm are integrated to mine maximum frequent item sets in this paper. First of all, this paper introduces the ideas of Hybrid Ant Colony Algorithm and briefly explains how to process the data of database. In the second place, Ant Colony Algorithm and Genetic Algorithm are designed respectively, including the method of encoding, parameters setting, the choice of evaluation function and so on. Finally, the Hybrid Ant Colony Algorithm is compared with Max-Min Ant Colony Algorithm \(MMAS\ on the issue of mining maximum frequent item sets. The results show that the qualities of maximum frequent item sets mined by Hybrid Ant Colony Algorithm are better than MMAS Index Terms  Maximum frequent item sets, Ant Colony Algorithm , Genetic Algorithm I  I NTRODUCTION  As the main course of mining association rules, frequent item sets mining is a decisive factor affecting the qualities of the association rules. The problem of mining frequent item sets can be converted to mining maximum frequent item sets because maximum frequent item sets include all the frequent item sets[1   A large number of scholars have been paying attention to the problem of mining maximum frequent item sets since it was proposed in 1998 T h e y ha v e  m a de  m a ny a c h i e v e m e nt s with their own efforts. Max-Min Ant Colony Algorithm MMAS\[3  i s a t y pi c a l a l g o r i t h m pr opose d e a r l i e r a nd i t i s  based on the idea of classic Apriori Algorithm and applies the strategy of breadth-first search mining maximum frequent item sets; Both DMFIA Algorithm[4 a n d MMF I  A l g o r ith m  5   a r e  proposed on the basis of the classic FP-growth Algorithm, and they don’t need to generate conditional pattern tree and only need to scan the database twice; In addition, it is a new idea to mine maximum frequent item sets using Ant Colony Algorithm and the mining efficiency is improved to a certain extent[6  A s  an intelligent optimization algorithm, Ant Colony Algorithm has better performance and can effectively solve the problem of mining maximum frequent item sets, but the qualities of maximum frequent item sets mined by Ant Colony Algorithm are not high owing to uncertainty of initial pheromones. In order to improve the qualities of maximum frequent item sets this paper combines Ant Colony Algorithm and Genetic Algorithm to mine maxi mum frequent item sets II  T HE C ONCEPTS OF M AXIMUM F REQUENT I TEM S ETS  Let 12     n Iii i be a set of items and D be a transaction database, where each transaction T is a set of items such that TI and each transaction has an identifier TID. Let X be a set of items of I, a transaction T contains X if  TI  The support count of item set X is the number of transactions in D containing X, the formula can be decomposed in the following way   sup X   port T X T T D  1 Definition 1  If support count of item set A is not less than minimum support count\(min_sup\, then A is called frequent item set or all frequent item set Definition 2  For AI A is called maximum frequent item set if support\(A min_ sup and B   BIAB   we have support\(B min_ sup All the sets of A are called the set of maximum frequent item sets By the definitions above, we can know that the number of maximum frequent item sets is less than all frequent item sets when data set and the minimum support count are given Properties of maximum frequent item sets[7    1\ If X is maximum frequent item set, any proper subset of X is not maximum frequent item set 2\ If X is not maximum frequent item set, any superset of X is not maximum frequent item set III  H YBRID A NT C OLONY A LGORITHM OF M INING M AXIMUM F REQUENT I TEM S ETS  A  The Idea of Hybrid Ant Colony Algorithm Although Genetic Algorithm \(GA\ has an excellent capability of rapid global search, it doesn  t make use of feedback information in the system and often leads to useless redundant iterations. Ant Colony Optimization Algorithm ACO\ converges to the optimal path through accumulation and update of pheromone. What  s more, it has the capability of global convergence and the merit of parallelism. But ACO solves practical problems blindly for lack of initial pheromones To overcome shortcomings of both algorithms and form complementary advantages, it is a good way to take advantage of Genetic Algorithm generating the distributions of initial pheromones. Then, we make full use of the features of Ant  


Colony Algorithm to solve practical problems. As a result , we will find that Hybrid Ant Colony Algorithm have a better capability of application B   Data Processing and Calculation of Support Counts Data in database must be processed before mining maximum frequent item sets so that it can be identified by computer What have to do first is to sort items according to a kind of rule, and then delete the items that don’t sa tisfy the condition that support counts are not less than the minimum support count. Transaction database can be regarded as a twodimensional matrix, rows represent transactions and the columns represent attribute items c  ij m n C where 1 c 0 ji ij if I T others the support count of item j i is  1 sup   m jij i port I c  2 It is not necessary to re-scan the database through the process of previous step. The support count of item set 12     k II I  is the number of “1”after the operation of and” of vectors of items, i.e  12 1   m ki i support I I I v 3 where 12  iii ik vcc c   represents l ogic “and  C  A Quality Assessment of Maximum Frequent Item Sets Maximum frequent item set is the set that support count is not less than the minimum support count and any superset of it is no longer frequent item set, that is to say we should take both aspects into account about maximum frequent item sets 1\ It is maximum frequent item set, i.e., for an item set X we have sup   min_sup port X  2\ Any superset of it is no longer frequent item set. We need to judge that all of its supersets are frequent item sets or not after adding an item to the subset every time, that means we will spend a lot of time in computing support counts. In order to save time, this goal can be converted into that the more the number of items item set contains, the better the quality of maximum frequent item set. i.e  X max  wX  Based on above two points, the evaluation function can be defined as follow  sup      min_ sup port X HX l X s 4 Where 0 1 ls and 1 ls l represents the length of item set and s represents the sensitivity coefficient of support count. We must ensure that X is frequent item set from beginning to end at the same time D  Design of Genetic Algorithm Mining Maximum Frequent Item Sets This paper determines the initial pheromones according to the operating results of Genetic Algorithm 1\ Coding: This paper uses the way of binary encoding 2\ Fitness function: We will regard evaluation function as fitness function 3\ Initialization of population: All the individuals must satisfy the condition that support counts are not less than the minimum support count 4\ Selection operation: This paper uses the method of nonlinear ranking selection based on roulette . What  s more we assign probabilities of selection for each member in descending order according to fitness values 5\ Crossover operation: This paper adopts uniform crossover. First, the system generates a n-dimensional vector randomly. Its every element is 0 or 1, and then what computer should do is to find the corresponding serial numbers of 1 and 0 respectively. Finally, the progeny population selects which parent provides genetic gene according to these serial numbers 6\ Mutation operation: The system generates a positive integer less than n randomly and then regards the integer as the number of points of mutation. What  s more, mutation rate will gradually increase with the evolution of population until it reaches 1/2 of crossover rate 7\ Inversion operation: The system generates two numbers 12  dd less than n randomly and inverses the portion between 1 d and 2 d  8\ The end of judgment: If the number of iterations reaches eranum  the maximum number of iterations, iterations will be stopped, or the procedure will go to \(4\ and repeat the operations E  Design of Ant Colony Mining Maximum Frequent Item Sets This paper adopts Max-Min Ant Algorithm \(MMAS\ and introduces a pheromone window min max  The algorithm avoids the phenomenon of stagnation and has the advantages of positive feedback, distributed computing, parallelism capability of global convergence and so on. On the other hand MMAS will show its better performance after solving the problem of initial pheromone through Genetic Algorithm Design ideas are as follows 1\ Construction of the maximum frequent item sets: It is different from the problem of TSP, and the feasible solutions of mining maximum frequent item sets are frequent item sets. Ant 1 2 tt m will add new item into its subset according to state transition rules at every step of constructing solutions and subsets constructed by ants contain different numbers of items. If subset becomes non-frequent item set because of adding new item to it, the system will delete the new item from the subset. Then, computer determines to stop the process of constructing subsets or not according to the form of probability as follow 


0 1 0 pp quit others 5 Where p is a random number dividing uniformly between 0 and 1 00 01 pp is a parameter, if 0 pp ants stop constructing subsets and the results will be outputted, or ants add another new item into the subsets 2\arameter settings: The parameter values of    and so on can affect the performance of algorithm. This paper makes use of repeated experiments to get their best combination 3\ Determination of initial pheromone: For iI initial pheromone  0maxmin i GA i    GA i is the number of item i selected among the optimal solutions of each iteration of Genetic Algorithm 4\ Rule of state transition: There are two kinds of different ways computing probabilities according to the value of parameter q 0 q is a random number dividing uniformly between 0 and 1. If 0 qq rule is as follow  arg max  t i ll lN j 6 If 0 qq probability equation is as follow      0 t i jj t i jj j jN jN q others 7 Where t i N is the item set that ant t doesn  t select in the ith  iteration j is the pheromone of item j j is the heuristic information of item j and it is the average value of support counts of 2-item sets constructed by item j and all items in its subset 5\ Local pheromone updating: The pheromone of item i will be updated immediately when ant selects item i, then the pheromone of item i will become low and the probability of being selected will become high for items non-selected. Update rule is as follow  0 1 ii i   8 Where 0 i is the initial pheromone of  i 6\ Global pheromone updating: Updating pheromone of each item when all the ants finish their searches and rule is as follow 1 iii   9 i QNi  10 Where Ni is the total number of support counts of maximum frequent item sets containing item  i IV  E XPERIMENTAL R ESULTS AND A NALYSIS  To test the qualities of maximum frequent item sets mined by Hybrid Ant Colony Algorithm, the experiment is done through MATLAB7.0. Experimental data is derived from datatang and named association. There are 1000 people  s shopping records and 20 kinds of commodities in the database This paper takes advantage of repeated experiments to determine the parameters. Specifically speaking, other parameters keep constant and the parameter needs to find the optimum value takes different values. We can find their best combination according to the experimental results. Through multi-tests, we can get the values of parameters as TABLE I and parameters of problems as TABLE II TABLE I  P ARAMETER LIST OF A LGORITHM  Parameters Values the number of ants \(m 15 the ma ximum number of iterations \(NC_ma x  100 the relative importance of pheromone  1 the relative importance of heuristic information  1.5 the degree of attenuation of local pheromone  0.2 the degree of attenuation of global pheromone  0.1 the parameters of state transition rule \(q 0  0.2 reference determining to stop searching or not \(p 0  0.1 the generations of population\(eranum 30 the population size \(popsize 20 the probability of crossover \(pcross 0.3 the probability of initial mutation \(pmutation 0.01 the probability of inversion \(pinversion 0.1 TABLE II  P ARAMETERS OF PROBLEMS  Parameters Values the minimum support count \(min_sup 100,150,200,250,300 the number of items \(n 20 the number of transactions 400,500,600,800,1000 the parameters of evaluation function \(a,b 0.6,0.4 The experiment can be divided into 2 parts: First, the minimum support count takes 100,150,200,250,300 respectively and the number of transactions take 1000, and then Hybrid Algorithm and MMAS operates 20 times respectively Second, the number of transactions take 400,500,600,800,1000 respectively and minimum support takes 100, and then, Hybrid Algorithm and MMAS operates 20 times respectively. Results 


comparing mean values of evaluation function of maximum frequent item sets are shown in Fig.1and Fig.2                  100     120     140     160     180     200     220     240     260     280     300     0.8     1     1.2     1.4     1.6     1.8     2     2.2     2.4     2.6          min-sup index of valuation Comparision of qualities for maximal frequent sets                      Hybrid ACO  MMAS   Fig. 1  Comparison of quality of maximum frequent item sets                  400     500     600     700     800     900     1000     0.8     1     1.2     1.4     1.6     1.8     2     2.2     2.4     2.6                                                  the number of transactions index of valuation Comparision of qualities for maximal frequent sets                      Hybrid ACO         MMAS   Fig. 2  Comparison of quality of maximum frequent item sets As shown in Fig.1and Fig.2, the qualities of maximum frequent item sets mined by Hybrid Ant Colony Algorithm are better than MMAS. On the other hand, maximum frequent item sets contain all the frequent item sets, and the qualities of them determine the qualities of association rules to some extent. So maximum frequent item sets mined by Hybrid Ant Colony Algorithm have better practical value V  C ONCLUSION  As a kind of algorithm of progressive decision, Ant Colony Algorithm has the similar features compared with mining maximum frequent item sets and has advantages of positive feedback, parallelism and global convergence and so on, but the qualities of maximum frequent item sets mined by MMAS are not high because of lack of initial pheromones. This paper makes use of Genetic Algorithm to determine the initial pheromones. The simulation experiment is done under the condition of the best combination of parameters. Experimental results show that the qualities of maximum frequent item sets mined by Hybrid Ant Colony Algorithm are higher than MMAS. What  s more, maximum frequent item sets contain all the frequent item sets and their qualities determine the qualities of association rules to some extent, therefore, maximum frequent item sets mined by Hybrid Ant Colony Algorithm have better practical value R EFERENCES  1  Ye Fu-lan. Improvement of algorithm for mining maximum frequent patterns based on FP_tree[J  J our na l of C h e n g d u  University \(Natural Science Edition\ , 2014,3\(2\:148-150 2  Li Hai-feng. A GPU-based maximal frequent item sets mining algorithm over stream[C  20 10 I n t e r na t i ona l C onf e r e n c e on  Computer and Communication Technologies in Agriculture Engineering,2010:289-292 3  Bayardo R J. Efficiently mining long patterns from databases[C  P r o ceed i n g s o f th e AC M S I GM OD I n t  l Conference on Management of Data, 1998:85-93 4  Song Qing-sheng, Zhu Yu-quan,  Sun Zhi-hui, and Chen Gen An  algorithm  and its  updating algorithm based on FP-Tree for mining maximum frequent item sets[J  J our na l  of  S o f t w a r e   2003, 14\(9\: 1586 1592  5  SG J, and Chen C. MMFI. An effective algorithm for mining maximal frequent item sets[C  P r oc e e d i ng s of t h e  I E E E  International Symposium on Information Processing, IEEE CS Press,2008:26-30 6  Liu Hua. Application research based on Ant Colony Algorithm in mining maximal frequent item sets problem[D   T i a n j i n  Hebei University of Technology,2007 7  Hui Liang. Studies on algorithm of association rule mining in data mining[D J i a n g s u J i a n g n a n U n i v e r s i t y  2 0 1 1   8  Yang Jun-rui, He Hong-de, Yang Li, Li Hai-wen, and Xue Ping A mining algorithm distributed global maximal frequent item sets[J   J our na l of C e nt r a l S out h U n i v e r s i t y  N a t ur a l S c i e nc e  Edition\. 2012.43\(9\:3517-3523   


IEEE Sponsored 9th International Conference on Intelligent Systems and Control \(ISCO\2015 During the construction of MCRP-Tree, all the transactions are selected because each transaction has at least one rare item among rareItems If the transaction does not have any rare item, it cannot contribute into the construction of a tree. In addition, since the support of  is greater than minFreqSup and item fails to satisfy MIS value constraint they are ignored during construction of MCRP-Tree, as shown in Fig 2. The initial tree is constructed using RP-tree, which only ignores the items that falls below minRareSup=3, as shown in Fig 1. This RP-tree has 3 additional nodes that show frequent items as compared to the tree building using MCRPTree \(shown in Fig 2\. In addition, RP-tree does not contains  rare items as it removes the items having support less than minRareSup which is constant for each item in database MCRP-Tree builds conditional pattern bases and conditional tree to find the rare-item itemsets for each rare item   Fig  1. RP-Tree constructed from Dataset  Fig  2. MCRP-Tree constructed form Dataset IV  R ESULTS  From the literature survey we can determine that all algorithms can implemented in Java. With Brief survey experimental result for number of itemset generated and Time taken for itemset generation by ARIMA, FP-Growth and RPTree algorithm can be found. Due to the computationally expensive pruning steps and candidate generation, time taken by ARIMA is significantly greater. From the experiment we can say that runtime of ARIMA is 32 times greater than FPGrowth in all datasets. RP-Tree generated far fewer itemsets for some datasets in comparison to FP-Growth in majority of cases [9, 11, 13   MCRP-Tree is an extension of RP-Tree as it builds reduced tree with complete set of rare items and prunes all frequent nodes. With this approach we can reduce the time taken for itemset generation and can find complete set of rare items very efficiently as compared to the ARIMA, FP-Growth and RPTree algorithm. All existing algorithm spends most of the time finding rare items and as a result they identify non-rare or frequent items. For identifying complete set of rare items proposed approach provides two constraints i.e., minimum Frequent support and MIS value. Proposed approach removes the frequent items from the transactions during tree generation and builds tree with only rare items known as MCRP-Tree. As insertion of node in the tree is computationally expensive, this approach significantly reduces the execution time as compared to others With the help of literature survey we can provide tentative results that compare Time taken for Itemset generation and number of itemset generated by proposed algorithm with existing algorithm \(ARIMA, FP-Growth and RP-Tree\. We can easily estimate that proposed algorithms required less than half time for execution and generate less no of itemset   Fig  3. Number of Itemsets generated  Fig  4. Time taken for Itemset generation 


IEEE Sponsored 9th International Conference on Intelligent Systems and Control \(ISCO\2015 V  C ONCLUSION  Data mining is one of the largest and challenging areas of research with the major topic \223Association Rule Mining\224. Most association rule mining techniques concentrate on finding frequent rules. But rare association rules are sometimes more useful and interesting than frequent association rules Maximum Constraint Model is most effective model for finding rare items. However, mining rare itemset using Apriorilike approach raises performance issues. We present a new effective method for finding complete rare itemset from large database. To our knowledge, proposed MCRP-Tree algorithm is a unique method which uses tree structure with maximum constraint model to mine rare items. The MCRP-Tree algorithm will consider only the rare items while constructing the tree from the dataset. Thus, the tree which takes most of the time for insertion of node is avoided. As a result the processing time for mining complete rare items will be minimized. The effectiveness of MCRP-Tree is shown by the tentative results R EFERENCES  1  R. Agrawal, T. Imielinski,  A Swami, \223Mining association rules between sets of items in large databases\224, Proceedings of the 1993 ACM SIGMOD International Conference On Management Of Data, vol. 22, pp. 207-216, 1993 2  J. Hipp, U. Guntzer, G. Nakhaeizadeh, \223Algorithms for Association Rule Mining-A General Survey and Comparison\224 ACM SIGKDD Explorations Newsletter, vol. 2, pp. 58-64 2000 3  G. Melli, R.Z. Osmar, B. Kitts, \223Introduction to the Special Issue on Successful Real-World Data Mining Applications\224 Proceedings of the ACM SIGKDD Explorations, vol. 8, pp.1-2 2006 4  K. Sotiris, K.  Dimitris, \223Association rules mining-A recent overview\224, Proceedings of International Transactions on Computer Science and Engineering-GESTS, vol. 32, pp. 71-82 2006 5  R. Agrawal, R. Srikant, \223Fast algorithms for mining association rules in large databases\224, Proceedings of the 20th International Conference on Very Large Data Bases, pp. 487-499, 1994 6  B. Liu, W. Hsu, Y. Ma, \223Minin g association rules with multiple minimum supports\224, Pro ceedings of the fifth ACM SIGKDD International Conference on Knowledge Discovery and Data Mining, pp. 337-341 , 1999 7  L. Troiano, G. Scibelli, C. Birtolo, \223A Fast Algorithm for Mining Rare Itemsets\224, Proceedings of the Ninth International Conference on Intelligent Systems Design and ApplicationsIEEE, pp. 1149-1155 , 2009 8  M. Adda, L. Wu, Y. Feng, \223Rare itemset mining\224, Proceedings of the Sixth International Conference on Machine Learning and Applications, pp. 73-80, 2007 9  L. Szathmary, A. Napoli, P. Valtchev, \223Towards rare itemset mining\224, Proceedings of the 19th IEEE International Conference on Tools with Artificial Intelligence-ICTAI, vol. 1, pp. 305-312 2007 10  Y. S. Koh, N. Rountree, \223Finding Sporadic Rules Using AprioriInverse\224, Advances in Knowledge Discovery and Data MiningSpringer, vol. 3518, pp. 97-106, 2005 11  J. Han, J. Pei, Y. Yin, R. Mao, \223Mining frequent patterns without candidate generation: A frequent-pattern tree approach\224 Data Mining and Knowledge Discovery-Springer, vol. 8, pp. 5387, 2004 12  R. Uday Kiran, P. Krishna Reddy, \223An Efficient Approach to Mine Rare Association Rules Using Maximum Items\222 Support Constraints\224, Data Security and Security Data-Springer, vol 6121, pp. 84-95, 2010 13  S. Tsang, Y. S. Koh, G. Dobbie, \223Finding Interesting Rare Association Rules Using Rare Pattern Tree\224, Transactions on Large-Scale Data- and Knowledge-Centered Systems VIIISpringer, vol. 7790, pp. 157-173, 2013 14  Y. Lee, T. Hong, W. Lin, \223Mining Association Rules with Multiple Minimum Supports using Maximum Constraints\224 International Journal of Approximate Reasoning- Elsevier, vol 40, pp. 44-54, 2005 15  Y. H. Hu, Y. L. Chen, \223Mining association rules with multiple minimum supports: A new algorithm and a support tuning mechanism\224, Decision Support Systems-Elsevier, vol. 42, pp. 124, 2006 16  L. Zhou, S. Yau, \223Association Rule and Quantitative Association Rule Mining among Infrequent Items\224, Proceedings of the 8th international workshop on Multimedia data mining pp. 156\226167, 2007 17  R. Uday Kiran, P. Krishna Reddy, \223An Improved Multiple Minimum Support Based Approach to Mine Rare Association Rules\224, IEEE Symposium on Computational Intelligence and Data Mining, pp. 340-347, 2009 18  R. Uday Kiran, P. Krishna Reddy, \223An Improved Frequent Pattern-growth Approach To Discover Rare Association rules\224 Proceedings of the International Conference on Knowledge Discovery and Information Retrieval, pp. 43\22652, 2009 19  R. Uday Kiran, P. Krishna Reddy, \223Mining Rare Association Rules in the Datasets with Widely Varying Items\222 Frequencies\224 Database Systems for Advanced Applications-Springer, vol 5981, pp. 49-62, 2010 20  C.S. Kanimonzhi Selvi, A. Tamilarasi, \223Mining Association rules with Dynamic and Collective Support Thresholds\224 International Journal of Engineering and Technology, vol. 1, pp 427\226438, 2009 21  M. G. Weiss, \223Mining With Rarity: A Unifying Framework\224 ACM SIGKDD Explorations, vol. 6, pp. 7 \226 19, 2004 22  L. Szathmary, P. Valtchev, A. Napoli, \223Finding Minimal Rare Itemsets and Rare Association Rules, Knowledge Science\224 Engineering and Management-Springer, vol. 6291, pp. 16-27 2010  


E Impacted Coef\002cient of the Additional Itemset De\002nition 13 The impacted coef\002cient of an additional itemset is to describe how effective this itemset is to manufacture the derivative itemset from underlying itemset denoted as AU G 001 X j X 0   de\002ned as AU G 001 X j X 0   r C 2 001 X j X 0   W 2 001 X j X 0  2 14 This equation averages the value of C 001 X  in Equation 9 and W 001 X  in Equation 11 Here we use the Quadratic Mean QM also known as Root-Mean Square to measure the signi\002cance of the itemset 001 X in terms of both utility and relationship perspectives because it represents the sample standard deviation of the difference between W and C  thus the result cannot be affected heavily by the smaller value It is easy to prove QM 2  X    X  2  033 2  X  15 Here X and 033  X  stand for the arithmetic mean and the standard deviation of W and C  We also tried another measurement by Harmonic Mean HM as a baseline which is proven to be less effective in our experiments For a speci\002c X 0  for each itemset 001 X to be considered the higher AUG means this itemset is likely to impel the underlying itemset into higher utility itemset On the contrary the lower the AUG is the lower utility that derivative itemset might be As all the AUG would be calculated only the largest AUG value itemset will be chosen F The CUARM Algorithm In this section an algorithm named Combined UtilityAssociation Rule Mining CUARM is proposed to discover all the actionable combined utility-association rules At the beginning of the algorithm it picks all UIs as candidates For each UI all the combined patterns are discovered with their AUGs which form a combined pattern cluster as in Equation 2 and only the most effective pattern would be selected In addition if two patterns are coupled with utility increment and decrement a combined pattern pair forms The input is the transaction database including all transactions with the utility of each item and the output is the combined pattern pairs their underlying itemset and the corresponding utilities In line 1 we prepare all the itemsets with their utilities in the alphabetical order and the length of longest itemset In lines 2-5 we start with each of the UIs named itemset 0 with its utility U 0  In lines 6-11 the DIs are ready and we calculate their AUGs In line 12-13 we select the pattern with max AUG values as CUAR V E XPERIMENTS In this section we conduct intensive experiments to evaluate the proposed methods Our experiments were run on a PC with a 2.30 GHz Intel Core 16 gigabyte memory CUARM is implemented in Java Two real datasets and two synthetic datasets are used for the experiments The real Algorithm 1 CUARM Input  Transaction database D  including the utility U  X  of each item in D Output  All actionable combined utility-association rules 1 Get all itemsets utilities via UG-Tree  2 Get the length of longest itemset lmax  3 for len  1 len  lmax len do 4 for Itemset whose length is equal to len do 5 Get itemset 0 with U 0 itemset-utility 6 for itemset.length  len do 7 Check inclusive and utility changes 8 Get itemset 1 with U 1  9 Calculate C 10 Scan the database get W 11 Calculate AUG 12 Selected max one 13 Present this utility-association rule TABLE VIII C HARACTERISTICS OF DATASETS Dataset Number of Transactions Number of Items Average Length Retail 2 88162 16470 10.3 Chainstore 3 1112949 46086 7.3 t20i6d100k 100000 658 13.7 c20d10k 10000 187 13 datasets are Retail 2 and Chainstore 3  and the synthetic datasets are t20i6d100k and c20d10k  The parameters of the datasets are listed in Table VIII A Comparison of Two Functions for Calculating Impacted Coef\002cient Here we propose two functions for calculating the impacted coef\002cient One is the quadratic mean QM which is adopted in this paper the other function is the harmonic mean HM which is proved to be less accurate in the experiments Those itemsets with a good coef\002cient measurement should be associated with both high frequency and high utility growth we thus can separate the database randomly If the output itemsets discovered in each sub-database are stable we can assume that this measurement is suitable The experiments were conducted on the Retail dataset for the sake of simply examining the QM function The top 100 experimental results are selected and shown in Fig 4 The 002gure on the left shows the comparison between UP-Growth and QM while the 002gure on the right shows the result of QM and HM on C 001 X  and W 001 X   The database is split into 10 parts randomly The 002rst part contains 10 transactions in the database and each later part contains 10 more transactions than the former part such that the second part contains 20 and the last part is 100 The X axis is the k th  1 024 k 024 10  part of the database and the Y axis is the match ratio which means the ratio of the exact patterns found in the k th part 2 http://www.philippe-fournier-viger.com/spmf/index.php?link=datasets.php 3 http://cucis.ece.northwestern.edu/projects/DMS/MineBench.html 


Fig 4 The Comparison of HM QM and UP-Growth matching with the  k  1 th part As seen from the 002gures the QM method outperforms both HM and UP-Growth B Experimental Evaluation of CUARM Next we present the experimental results of comparing derivative itemsets with the traditional HUIs FIs and UIs Underlying Itemsets respectively The statistic values of each dataset are shown in Table VIII The experiment is conducted as follows Firstly we collect all the utility itemsets with their utilities and frequencies in each dataset respectively Secondly we also collect all the frequent itemsets with their frequency and utility Then we calculate the utilities of the frequent itemsets frequencies of the HUIs and both utilities and frequencies of the derivative itemsets At last we plot the frequency of itemsets discovered via UP-Growth and CUARM the utility of itemsets discovered by FP-Growth and CUARM and the utility changes from each underlying itemset to derivative itemset as shown in Fig 5 Such exhibition is made for the comparison of our algorithm with FIM and HUI to demonstrate the UtilityAssociation Rules we discovered have both high utility and high frequency Here all the frequent and utility itemsets we compare with contain at least two items because the derivative itemsets our algorithm discover contain no less than two items Experiments on Real Datasets We 002rst present the outputs of dataset Retail in Fig 5\(a and Fig 5\(b Top 50 patterns of each algorithm are selected for experiments By analyzing the frequencies and utilities of patterns many of them are without much difference in both two experiments which means the association rules we found via traditional AR algorithms are also high utility-association rules via our method In addition such rules are also with high utilities This explains why some parts of the curves overlap In addition customers prefer to buy a few products at one time that is most of FIs and HUIs contain only one or two items which also explains the observations In datasets Chainstore  the differences are much clearer because customers usually prefer a variety of products in each of transactions and high utility itemsets are always low in frequency while highly frequent itemsets are with low utility For example in Fig 5\(d the CUARM performs much better than that of FP-Growth while in Fig 5\(e even at some points the performance is not so good the global performance is much better To sum up we can assert that the performance of our algorithm CUARM is much better than the others Experiments on Synthetic Datasets Experimental results on synthetic datasets t20i6d100k and c20d10k are shown in Fig 5\(g Fig 5\(h Fig 5\(j and Fig 5\(k The results are much clearer than those from real datasets because the items included are much neat and with orderliness For most of the patterns discovered via CUARM the frequencies are much higher than those traditional high utility itemsets At the same time most Utility-associated rules are also with much higher i.e twice the utility than traditional association rules especially in Fig 5\(h from dataset t20i6d100k  C Evaluation of the Utility Increment We demonstrate the utility increment in a graphic way to show how the utility increases from underlying itemset to derivative itemset The utility increment is valued based on the same datasets as above points are ordered by the utility of derivative itemsets The performance of our algorithm varies from one dataset to another The performance in chainstore is much better than that in retail because the transaction time in chainstore is 12 times more than that in retail while the item types are only twice more However in the synthetic datasets the performance is better In conclusion for each dataset the performance is different but the utility actually increases D Utility Variation Experiments Conclusion Based on the above datasets and experimental results a table is used to demonstrate the conclusion that comes from our experiments and shown as Table IX This table describes the number of itemsets whose utilities are increase or decrease with given threshold Also two kinds of utility incremental forms are listed One is the utility of derivative itemset is higher than both the utilities of underlying itemset and additional itemset which is denoted as FA the other is that the utility of derivative itemset is higher than only the utility of underlying itemset which is denoted as FB As for each underlying itemset only one derivative itemset would be discovered some FA and FB might be ignored For the utility decrement itemsets whose utilities are only lower than the underlying itemsets would not be considered in this table because these itemsets can also be regarded as FBs when the underlying itemsets and additional itemsets exchange TABLE IX U TILITY V ARIATION C ONCLUSION Dataset Min Sup N.DI R.U N.FA N.FB N.DecI Retail 0.01 89 20.3 50.4 28 22 39 0.008 135 18.6 50.4 37 46 52 0.002 1667 8.4 50.4 473 769 425 Chainstore 0.002 79 4.6 207.2 7 19 53 t20i6d100k 0.017 33 25.7 78.5 8 11 14 0.015 79 22.8 78.5 24 19 36 0.012 383 1.8 78.5 112 137 134 c20d10k 0.05 120 19.7 150.9 28 48 44 In Table IX M in Sup in the minimum support for mining itemsets N:DI is the number of derivative itemsets discovered 


figures1//retail_f-eps-converted-to.pdf a retail figures1//retail_u-eps-converted-to.pdf b retail figures1//retail_i-eps-converted-to.pdf c retail figures1//ds7_f-eps-converted-to.pdf d chainstore figures1//ds7_u-eps-converted-to.pdf e chainstore figures1//ds7_i-eps-converted-to.pdf f chainstore figures1//t20i6d100k_f-eps-converted-to.pdf g t20i6d100k figures1//t20i6d100k_u-eps-converted-to.pdf h t20i6d100k figures1//t20i6d100k_i-eps-converted-to.pdf i t20i6d100k figures1//c20d10k_f-eps-converted-to.pdf j c20d10k figures1//c20d10k_u-eps-converted-to.pdf k c20d10k figures1//c20d10k_i-eps-converted-to.pdf l c20d10k Fig 5 Experiments for FP UP and CUARM with the threshold M in Sup  R:U in the utility incremental rate from underlying itemset to derivative itemset N:F A is the number of FA itemsets N:F B is the number of FB itemsets and N:DecI is the number of decremental itemsets VI C ONCLUSIONS AND F UTURE W ORK Traditional high utility itemset mining methods have the weak point that if the minimum utility threshold is set too high the itemsets discovered might contain unrepresentative items while if the threshold is set too low too many redundant itemsets will be found On the other hand traditional association rule mining ignores the utility hidden among the items This work proposes a novel pattern select method from two aspects One is the co-occurrence of two underlying and additional itemsets another is the utility increment from underlying itemset to derivative itemset It is an effective approach for identifying actionable combined utility itemsets in which for different items only one itemset will be selected with the highest association-utility growth which caters for both high association and high utility Thus only the most effectively impacted itemsets will be presented The results demonstrate that our method can discover patterns that are composed of different item combinations of both utility increment and high representativeness For the future work we may 002nd some more interesting pattern selection method For example there exists a dependent relationship between two itemsets A and B which means A might appear frequently alone or with other items but for most time B appears together with A VII A CKNOWLEDGMENTS This work is sponsored in part by Australian Research Council Discovery Grant P130102691 R EFERENCES  R Agra w al R Srikant 1994 F ast Algorithms for Mining Association Rules in Proc of the 20th Int'l Conf on Very Large Data Bases pp.487-499 Santiago Chile  C.F  Ahmed S.K T anbeer  B.-S Jeong and Y K Lee 2009 Ef 002cient Tree Structures for High utility Pattern Mining in Incremental Databases in Proc of IEEE Transactions on Knowledge and Data Engineering Vol 21 Issue 12 pp 1708-1721  L Cao Y  Zhao C Zhang 2008 Mining Impact-T ar geted Acti vity Patterns in Imbalanced Data IEEE Trans on Knowledge and Data Engineering 20\(8 1053-1066  L Cao P  S Y u C Zhang and Y  Zhao 2010 Domain Dri v en Data Mining Springer  L Cao 2013 Combined mining Analyzing object and pattern relations for discovering and constructing complex yet actionable patterns Wiley Interdisc Rew Data Mining and Knowledge Discovery 3\(2 140-155  J Han J Pei and Y  Y in 2000 Mining Frequent P atterns without Candidate Generation in Proc of the ACM-SIGMOD Int'l Conf on Management of Data pp 1-12 Dallas TX USA  J Han H Cheng D Xin and X Y an 2007 Frequent P attern Mining Current Status and Future Directions DMKD 15 55-86  M S Khan M Muyeba and F  Coenen 2008  A W eighted Utility Framework for Mining Association Rules in Proc of the Second UKSIM European Symposium on Computer Modeling and Simulation pp 87-92  X Lin Q Zhu F  Li Z Geng and S Shi 2010 S Share Strate gy for Utility Frequent Patterns Mining in Proc of the Seventh International Conference on Fuzzy Systems and Knowledge Discovery pp 14281432 Yantai China  J Liu K W ang and B C M Fung 2012 Direct Disco v ery of High Utility Itemsets without Candidate Generation in Proc of the IEEE Int'l Conf on Data Mining ICDM  M Liu and J Qu 2012 Mining High Utility Itemsets without Candidate Generation in Proc Of the ACM Int'l Conf on Information and Knowledge Management CIKM pp 55-64 


 Y  Liu W  Liao and A C houdhary  2005  A T w o-Phase Algorithm for Fast Discovery of High Utility Itemsets in Proc of PAKDD pp 689-695  S Shankar  T  Purusothaman S Kannimuthu and P  K V ishnu 2010 A Novel Utility and Frequency Based Itemset Mining Approach for Improving CRM in Retain Business International Journal of Computer Applications Volume 1 No 18 pp 87-94  V  S Tseng C.-W  W u B.-E Shie and P  S Y u 2010 UP-Gro wth An Ef\002cient Algorithm for High Utility Itemset Mining in Proc of Int'l Conf on ACM-SIGMOD pp.253-262  B V o B Le and J Jung 2012  A T ree-Based Approach for Mining Frequent Weighted Utility Itemsets in Proc of ICCCI 2012 Part I LNAI 7653 pp 114-123  C W u Y  Lin P  S Y u and V  S Tseng 2013 Mining High Utility Episodes in Complex Event Sequences in Proc of ACM SIGKDD International Conference on Knowledge Discovery and Data Mining KDD pp 536-544  C W u P  Philippe P  S Y u and V  S Tseng 2011 Ef 002cient Mining of a Concise and Lossless Representation of High Utility Itemsets in Proc of IEEE Int'l Conf on Data Mining ICDM pp.824-833  C W u B Shie V  S Tseng and P  S Y u 2012 Mining top-K high utility itemsets in Proc of ACM SIGKDD International Conference on Knowledge Discovery and Data Mining KDD pp 78-86  H Y ao H J Hamilt on and C J Butz 2004  A foundati onal approach to mining itemset utilities from databases in Proc of the 4th SIAM Int'l Conf on Data Mining Florida USA  J S Y eh Y  Li and C Cheng 2007 T w o-Phase Algorithms for a Novel Utility-Frequent Mining Model in Proc of PAKDD Workshop LNAI 4819 pp 433-444  J Y in Z Zheng and L Cao 2012 USpan An Ef 002cient Algorithm for Mining High Utility Sequential Patterns in Proc of ACM SIGKDD International Conference on Knowledge Discovery and Data Mining KDD pp 660-668  H Zhang et al 2008 Combined Association Rules Mining in Proc of PAKDD08 pp.1069-1074  Q Zhao and S Bho wmick 2003  Association Rules Mining a Surv e y Journal of Nanyang Technological University 2003116  Y  Zhao et al 2007 Mining for Combined Association Rules on Multiple Datasets in Proc of the KDD 2007 Workshop on Domain Driven Data Mining San Jose CA USA pp 18-23 


