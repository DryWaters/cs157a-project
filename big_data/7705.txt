An Effective Algorithm for Discovering Fuzzy Rules in Relational Databases Wai-HO AU Keith C.C Chan Department of Computing The Hong Kong Polytechnic University Hung Hom Kowloon Hong Kong Abstract In this paper we present a novel technique called F-APACS for discovering fuzzy association rules in relational databases Instead of dividing up quantitative attributes into fied intervals and searching for rules expressed in terms of them 
F-APACS employs linguistic terms to represent the revealed regularities and exceptions The deBnitions of these linguistic terms are based on fuzzy set theory and the association rules expressed in them are therefore called fuuy association rules here To discover these rules F-APACS utilizes an objective interestingness measure when determining if two attribute values are related This measure is defined in terms of an 223adjusted difference\224 between observed and expected frequency counts The use of such a measure has the advantage that 
no user-supplied thresholds are required In addition to this interestingness measure F-APACS has another unique feature that it provldes a mechanism to allow quantitative values be inferred from the rules Such feature as shown here make F-APACS very effective at various mining tasks Keywords data mining fuzzy association rules linguistic terms, interestingness measure 1 Introduction Data mining sometimes referred to as knowledge discovery in databases is concerned with the nontrivial extraction of implicit previously unknown and potentially useful information from data 
6 One important topic in data mining research is concerned with the discovery of association rules l An association rule describes an interesting association relationship among different attributes A boolean association involves binary attributes a generalized association involves attributes that are hierarchically related and a quantitative association involves attributes that can take on quantitative or categorical values Existing algorithms e.g 2 121 for mining quantitative association rules require discretizing the domains of quantitative attributes into intervals 
so as to discover quantitative association rules These intervals may not be concise and meaningful enough for human users to easily obtain nontrivial knowledge from those rules discovered Instead of using intervals we introduce a novel technique called F-APACS which employs linguistic terms to represent the revealed regularities and exceptions The linguistic representation makes those rules discovered to be much natural for human users to understand The definition of linguistic terms is based on fuzzy set theory and hence we call the rules 
having these terms fuur association rules In fact the use of fuzzy techniques has been considered one of the key components of data mining systems because of the affinity with the human knowledge representation Regardless of whether the association being considered is boolean generalized or quantitative existing algorithms e.g l  decide if it is interesting by having a user supply two thresholds  support and confidence Given two attributes X and Y the 
support is defined as the percentage of records having both attributes X and Y and the confidence is defined as the percentage of records having Y given that they also have X If both support and confidence is greater than the user-supplied threshold the association is considered interesting A weakness of these approaches lies in the difficulty in deciding what these thresholds should be To overcome this problem F-APACS utilizes adjusted 
difference Z-51 analysis to identify interesting associations among attributes The use of this technique has the advantage that it does not require any user supplied thresholds which are often hard to determine Furthermore F-APACS also has the advantage that it allows us to discover both positive and negative association rules A positive association rule tells us that a record having certain characteristic will also have 0-7803-4863-X/98 10.0001998 IEEE 1314 


another characteristic whereas a negative association rule tells us that a record having certain characteristic will not have another characteristic Many data mining algorithms e.g l-2 4-5 10-121 require the class labels \(conclusions of rules to be crisp and the variables representing the class labels are therefore qualitative This makes quantitative values are not inferred from those rules To be more effective F-APACS is able to deal with class boundaries that are fuzzy and to associate qualitative attribute values with quantitative attribute values This provides a mechanism for F-APACS to allow quantitative values be inferred In the next section we provide a brief description of how existing algorithms can be used for the mining of quantitative association rules and how fuzzy techniques can be applied to data mining process The definition of linguistic terms is provided in Section 3 The details of F-APACS is given in Section 4 In Section 5 we present how to allow quantitative values be inferred from fuzzy association rules The experimental results of F-APACS over several real-life databases are discussed in Section 6 Finally in Section 7 we provide a summary of the paper 2 Related Work Quantitative association rules are defined over quantitative and categorical attributes  121 The statement 70 d tatiay educatd pop1 e tet w en age 25 and J are unmarried\224 is one such example The values of categorical attributes are mapped to a set of consecutive integers and the values of quantitative attributes are first discretized into intervals using equi-depth partitioning if necessary and then mapped to consecutive integers to preserve the order of the valueshtervals 12 Both categoricaI and quantitative attributes can then be handled in a uniform fashion as a set of cattribute, integer value With the mappings defined in 12 a quantitative association rule is mapped to a set of boolean association rules In other words therefore, rather than having just one field for each attribute, there is a need to use as many fields as the number of different attribute values For example the value of a boolean field corresponding to attributel valuel would be 2231\224 if attribute1 has value in the original record and 223O\224 otherwise 12 After the mappings the algorithms for mining boolean association rules \(e.g  11 is then applied to the transformed data set Let I  il iz  im be a set of binary attributes called items and T be a set of transactions Each transaction t E T is represented as a binary vector with t[k  1 if t contains item ik and t[k  0 otherwise, for k  1 2  m An association rule is defined as an implication of the form X 3 Y where X c I Y c I and X n Y  0 The rule X 3 Y holds in T with support defined as Pr\(XUY and confidence defined as Pr\(YIX  For the mining algorithms such as that described in l 11-12 to determine if an association is interesting, its support and confidence have to be greater than some user-supplied thresholds A weakness of such approach is that many users do not have any idea what the thresholds should be If it is set too high a user may miss some useful rules but if it is set too low, the user may be overwhelmed by many irrelevant ones Furthermore the intervals involved in quantitative association rules may not be concise and meaningful enough for human users to obtain nontrivial knowledge Fuuy linguisfic summaries introduced in  13-14 express knowledge in linguistic representation which is natural for people to comprehend An example of linguistic summaries is the statement 223about half of people in the database are middle aged.\224 In contrast to association rules which involve implications between different attributes the fuzzy linguistic summaries only provide summarization on different attributes There is no idea of implication in fuzzy linguistic summaries As a result this technique which provides a means for data analysis is not developed for the task of rule discovery In addition to fuzzy linguistic summaries the applicability of fuzzy modeling techniques to data mining has been discussed in SI Given a series of fuzzy sets a  7 context-sensitive Fuzzy C-Means FCM method is used to construct the rule-based models with the rules y is if Q1 and 0 and  and Q where 01   1 r;Z are the regions in the input space that are centered around the c\224 prctciyes fu i  1 2 c 8 Nevertheless the context-sensitive FCM method can only manipulate quantitative attributes and it is for this reason that this technique is inadequate to deal with most real-life databases which consist of both quantitative and categorical attributes 3 Linguistic Terms Given a set of records B each of which consists of a set of attributes J Il Z2   Z where I v  1 2   n can be quantitative or categorical For any record d E B d[Z denotes the value i in d for attribute I For any quantitative attribute I E J let dom\(Z  lv U c 2213 denote the domain of the attribute A set of linguistic terms can be defined over the domain of each quantitative attribute Let Gr r  1 2  s be linguistic terms associated with some quantitative attribute Z E  Lr is represented by a fuzzy set Lr defined on dom\(Z whose membership function is pLv such that P&,:domu\224  OJI 1315 


The fuzzy sets Lr r  1,2   s are then defined as if I is discrete if I is continuous Lvr  for all i E dom\(Z Some value i E dom\(Z is compatible with some linguistic term Gr to a degree of pbr i  For any categorical attribute I E 5 let dom\(Z  ivl  i     i  denote the domain of I To handle categorical and quantitative attributes in a uniform fashion we can also define a set of linguistic terms Lt r  1 2  m for each categorical attribute Z E 9 where Lr is represented by a fuzzy set Lr such that 1 L  vr  lvr Using the above technique we can represent the original attributes 5 using a set of linguistic terms L L,,,lv  1,2  n,r  1,2  s where s  m for categorical attributes Each linguistic term is represented by a fuzzy set and hence we have a set of fuzzy sets L  LJv  1,2  n,r  1,2  s  Given a record d E D and a linguistic term Lr E L which is in turn represented by a fuzzy set hr E L the degree of membership of the values in d with respect to Lyr is given by pLvr d[Z  In order words d is characterized by the term Lr to a degree of phr d[Z,l  If p d[Z  1 d is completely characterized by the term  If pLr d[Z  0 d is undoubtedly not characterized by the term 4 If 0  pL d[Z  1 d is partially characterized by the term  In case that d[l is unknown puL d[Z  05 which indicates that there is no information available concerning whether d is characterized by the term Lr or not In fact d can also be characterized by more than one linguistic terms Let us consider the linguistic terms 4,r  hZr2    L E L  and the corresponding fuzzy sets GZrz  hmr E L  d is characterized by the terms Ltlr Ltzr2 9  LV to a degree of Based on linguistic terms we can apply F-APACS to discover fuzzy association rules which are presented in a manner that is natural for human experts to understand The use of fuzzy techniques also buries the boundaries of adjacent intervals of numeric qualities This makes F-APACS resilient to noises such as inaccuracies in physical measurements of real-life entities Furthermore the fact that 0.5 is the fuzziest degree of membership of an element in a fuzzy set provides a new means for F-MACS to deal with missing values in databases 4 Mining Fuzzy Association Rules F-MACS begins the data mining process by calculating the sum of degrees to which those records in databases are characterized by the linguistic terms Given a record d E 9 and linguistic terms  4k E L p  j which are in turn represented by fuzzy sets Lpq Ljk E L p j respectively the degree to which d is characterized by Gq and Gk is accumulated in degLpqLjk  F-MACS then determines if an interesting association relationship exists between  4k E L p  j More specifically F-APACS can be described as follows Fig 1 1 F-MACS  2 begin 3 4 forall&,GkE L,p#jdo 6 forall  Gk E L p  j do 7 if interesting\(Gq 4k then 8 x  4Urulegen\(Lpq.Ljk  9 retnrn\(a 10 end forall d E D do 5 degLMLfi   min\(/.kw d[lpl 4111  Fig 1 Algorithm F-APACS The identification of interesting associations is based on an objective interestingness measure called adjusted difference 2-51 This measure is defined as where zLpqLfl is the standardized difference given by e,--Ljk is the sum of degrees to which records are expected to be characterized by Lpq and 4k and is calculated by u=l i=l 1316 


and yLpgL,k is the maximum likelihood estimate variance of zLpgLx and is given by of the If ld,--L,k I 1.96 the 95 percentiles of the normal distribution we can conclude that the association between k and  is interesting If dL  1.96, the presence of  implies the presence of  It is more likely for a record having both L,t and  We say that 4 is positively associated with rp.9 If dLMLfi  1.96 the absence of 4 implies the presence of GT It is more unlikely for a record having f and hq at the same time We say that  is negatively associated with  F-APACS employs the adjusted difference analysis in interesting   to determine whether the association between Gq and hk is interesting When such association is found to be interesting, the interesting function returns true otherwise, it returns false If interesting 4 returns true a fuzzy association rule is then generated by the rulegen function The rulegen function takes as argument a pair of linguistic terms Lpq and hk to generate a fuzzy association rule such that it is in the form of L,k  L wLwLir 1 where wL w f denotes weight of evidence 13-51 measure which is defined as wf i#q wL L provides a measure of the difference in the gain in information when a record with Ijk characterized by Gq and when Characterized by 4 i f q It is positive if 4 is positively associated with bq whereas it is negative if 4k is negatively associated with Lp4 P9 Ik 5 Inferring Previously Unknown Values Using Fuzzy Association Rules Using discovered fuzzy association rules F-APACS is able to predict the values of some characteristics of previously unseen records The results can be quantitative or categorical depending on the nature of the attributes whose values are to be predicted Unlike other classification techniques which classify records into distinct classes F-MACS allows quantitative values be inferred from fuzzy association rules Given a record t E dom\(l1 x  x dom\(1 x x dom\(l let t be characterized by n attribute values at q a where ap is the value to be predicted Let 6 p  1,2  J be the linguistic terms corresponding to the class attribute I We further let 1 be a linguistic term with domain dom 1    Lpl  Lp2     Lpsp   The value of c4 is assigned according to the value of Zp To predict the correct value of l F-MACS searches the association rules with Gq E dom\(1 as consequents If some attribute value say 9 j  p of t is characterized by the linguistic term in the antecedent of a rule which implies Lpq it can be considered as providing some evidence for or against the value of lp being assigned to hT By repeating this procedure that is by matching each attribute value of t against the rules F-APACS can determine the value of Zp by computing the total evidence measure Since each of the attributes of t may or may not provide evidence and for those that do they may support the assignment of different values, the different pieces of evidence are quantitatively measured and combined for comparison in order to find the most suitable value of 1 For any attribute value a j  p of t it is characterized by a linguistic term 4k to a degree of compatibility flLa aj for each k E  1 2  s Given those rules implying the assignment of  Ljk  L wLMLx   for all k E c  1,2  7-s the evidence provided by q for or against such assignment is given by Suppose that of the n  1 attribute values excluding 9 only some of them qll   qml with cqli 1,2 n p or more rules then the overall weight of evidence for or against the value of 1 to be assigned to Gq is given by 7 j=l In case that Ip is categorical Zp is assigned to GC if w  w h  1,Z si andh f c 8 where si 5 sp denotes the number of linguistic terms implied by the rules c4 is therefore assigned to ipc E dom\(Z If I is quantitative a novel method is used to assign an appropriate value to c4 Given the linguistic terms L  L     LpSp  and their overall weights of evidence 1317 


w wz  wSp  let pLpm i be the weighted degree of membership of i E dom\(Z to the fuzzy set Lpv U E  1 2  pipu i is given by PiP ip  qJ PL PO i p 1 9 where ip E dom\(Z and U  1 2 J sp The predicted value a is then defined as where jliuy\(i  max\(p i i for any fuzzy sets X and Y This prediction a provides an appropriate value for ap For quantitative predictions we use the root-mean squared error as a performance measure Given a set of testing records D let n be number of records in D For any record r E D let I U c  denote the domain of the class attribute We further let t be the target value of the class attribute in r and or be the predicted value given by F-APACS The root-mean-squared error m is defined as To evaluate the effectiveness of F-MACS we used several real-life databases including i a transactional database of a PBX system and ii\a database concerning with 800 industrial enterprises in mainland China 6.1 The PBX Database The PBX database is collected from a private branch exchange PBX system used in a telecommunication company It consists of phone call records about the usage of the PBX system There are 3,009 records and each record is characterized by 13 attributes Among these attributes two are categorical and all the remaining attributes are quantitative There are 98.4 of records having missing values in at least one of the attributes As an illustration, let us consider attributes Time-of call and Duration-of-call in detail We define the linguistic terms i Mid-night Morning Afternoon Evening and Night for Time-of call and ii Very-short Short Moderate Long and Very-long for Duration-of call These linguistic terms are shown in Fig 2 and Fig 3 respectively Degree ot membership t Mid-night Morning Afternoon Evening Night 12am 3am 6am 9am 12pm 3pm 6pm 9pm Time-ol-call Fig 2 Linguistic terms for Time-of-call Degree of membership 0 36 9 12 15 18 Duration-of-call Fig 3 Linguistic terms for Duration-of-call In 3 F-MACS has been shown to be able to discover meaningful fuzzy association rules in databases In this experiment Calling-party-id is chosen as the class attribute Using the linguistic terms we applied F-AF'ACS to the PBX database For comparison we also applied C4.5  101 a decision-tree based classification technique to this database Of all the records 2,000 are randomly selected for training and the others are used for testing Fig 4 shows the classification accuracy Fig 4 Classification accuracy for the PBX database As shown in Fig 4 F-MACS outperformed 24.5 This revealed that F-MACS is able to discover some important knowledge that cannot be found by C4.5 6.2 The china Database The china database is provided by the China Business Center of the Hong Kong Polytechnic University It contains the data collected in a survey performed by the census bureau of the government in People s Republic of China This survey is concerned with the situations of production and operation of 800 industrial enterprises in mainland China in 1992 The china database contains 800 records representing these industrial enterprises Each record is characterized by 56 quantitative attributes 1318 


The percentage of missing values in each attribute ranges from 0.5 to 97.5 As an illustration, let us consider attribute A1 which represents 223Total value of indusmal output constant price of 1990 in detail We define the linguistic terms Very low Low Moderate High and Very-high for Al These linguistic terms are shown in Fig 5 1 10 1M 1mo 1\223 1\224 lm\224 A1 Fig 5 Linguistic terms for Al Among all the attributes domain experts identified attribute AI as the class attribute It should be noted that there are 30 records whose values of attribute AI are missing or unknown These records are ignored in our experiment Of the remaining records 580 are randomly selected for training and the others are used for testing It should also be noted that attribute A1 is quantitative and the predictions on this attribute are therefore expected to be of quantitative values Unfortunately other classification techniques which can only classify records into distinct classes are unable to give quantitative values as predictions It is for this reason that they are not readily applicable to this task On the contrary by representing attribute AI with the linguistic term F-APACS is able to inferring quantitative values using fuzzy association rules In our experiment the quantitative attributes are represented by appropriate linguistic terms The root mean-squared error over the class attribute A1 for the china database is equal to 4.4 In other words the predictions produced by F-APACS deviated from the target values by 4.4 in average 7 Conclusions We presented a novel algorithm, called F-APACS which employs linguistic terms to represent the revealed regularities and exceptions in this paper The linguistic representation is especially useful when those rules discovered are presented to human users for examination Unlike other algorithms which discover association rules based on the use of some user-supplied thresholds F-APACS employs adjusted difference analysis to identify interesting fuzzy associations among attributes This makes it to be able to avoid the use of some user-supplied thresholds which are often difficult to determine Using adjusted difference analysis F-APACS is able to discover positive and negative association rules Furthermore unlike other classification techniques which classify records into distinct classes F-APACS allows quantitative values be inferred from fuzzy association rules References l R Agrawal T hielinski and A Swami 223Mining Association Rules between Sets of Items in Large Databases,\224 in Proc of 1993 ACM SlGMOD lnt\222 1 Con on Management of Data Washington D.C May 1993 pp 2 K.C.C Chan and W.-H Au 223An Effective Algorithm for Mining Interesting Quantitative Association Rules,\224 in Proc of the 12th ACM Symp on Applied Computing SAC\22297 San Jose, CA Feb 1997 3 K.C.C Chan and W.-H Au 223Mining Fuzzy Association Rules,\224 to appear in Proc of the 6th ACM lnt\222l Con on Information and Knowledge Management ClKM\222 97 Las Vegas, Nevada Nov 1997 4 K.C.C Chan and A.K.C Wong 223APACS A System for the Automatic Analysis and Classification of Conceptual Pattems,\224 Computational Intelligence vol 6 pp 119-13 1 1990 5 K.C.C Chan and A.K.C Wong 223A Statistical Techmque for Extracting Classificatory Knowledge from Databases,\224 in 91 pp 107-123 6 W.J Frawley G Piatetsky-Shapiro and C.J Matheus Kno\\nl ejge II scoveryinththases A Qer\\im 224in 7 A Maeda H Ashida Y Taniguchi and Y Takahashi IBtaM nrg System usilg Fuzzy RuleIniucticn,\224in Proc of 1995 IEEE lnt\222l Con on Fuuy Systems Yokohama Japan, Mar. 1995 pp 45-46 SI W Pedrycz 223Data Mining and Fuzzy Modeling,\224 in Proc of 1996 Biennial Con of the North American Fuuy Information Processing Society NAFIS Berkeley CA June 1996 pp 263-267 9 G Piatetsky-Shapiro and W.J Frawley Eids Knowledge Discovery in Databases AAAYMIT Press, 1991 lo J.R Quinlan C4.5 Program for Machine Learning Morgan Kaufmann 1993 ll R Srikant and R Agrawal 223Mining Generalized Association Rules,\224 in Proc of the 21st VLDB Con Zurich, Switzerland, 1995 pp. 407-419 I21 R Srikant and R Agrawal 223Mining Quantitative Association Rules in Large Relational Tables,\224 in Proc of 1996 ACM SIGMOD Int\222 1 Con5 on Management of Data Monreal, Canada June 1996 pp 1  12 13 R.R Yager 223On Linguistic Summaries of Data,\224 in  141 R.R Yager 223Fuzzy Summaries in Database Mining,\224 in Proc of the 11th Con on Artificial Intelligence for Application Los Angeles CA Feb 1995 pp 265-269 207-216 9 pp 1-27 pp 347-363 1319 


 0 1000 2000 3000 4000 5000 6000 10 20 30 40 45 50 55 60 70 80 90 Environment size Percentage of set bits a 20 40 60 80 100 10 20 30 40 50 60 70 80 90 100 b 0 10 20 30 40 50 60 70 80 90 100 0.1 0.05 0 0.05 0.1 Percent of DB gathered Rule significance c Worst-case Average Figure 1 The locality of LSD-Majority a and of Maj ority-Rule c depends of the signi\336cance The distribution of environment sizes b depe nds on the local signi\336cance and is hence random 4.2 ence and Cost f Rule In addition to locality the other two important characteristics of Majority-Rule are its convergence rate and communication cost We measure convergence by calculating the recall 320 the percentage of rules uncovered 320 and precision 320 the percentage of correct rules among all rules assumed correct 320 vis-a-vis the number of transactions scanned Figure 2 describes the convergence of the recall a and of the precision b In c the convergence of stand-alone LSD-Majority is given for various percentages of set input bits To understand the convergence of Majority-Rule one must look at how the candidate generation and the majority voting interact Rules which are very signi\336cant are expected to be generated early and agreed upon fast The same holds for false candidates with extremely low signi\336cance They too are genera ted early because they are usually generated due to noise which subsides rapidly as a greater portion of the local database is scanned the convergence of LSD-Majority will be as quick for them as for rules with high signi\336cance This leaves us with the group of marginal candidates those that are very near to the threshold these marginal candidates are hard to agree upon and in some cases if one of their subsets is also marginal they may only be generated after the algorithm has been working for a long time We remark that marginal candidates are as dif\336cult for other algorithms as they are for Majority-Rule For instance DIC may suffer from the same problem if all rules were marginal then the number of database scans would be as large as that of Apriori An interesting feature of LSD-Majority convergence is that the number of nodes that assume a majority of set bits always increases in the 336rst few rounds This would result in a sharp reduction in accuracy in the case of a majority of unset bits and an overshot above the otherwise exponential convergence in the case of a majority of set bits This occurs because our protocol operates in expanding wavefronts convincing more and more nodes that there is a certain majority and then retreating with many nodes being convinced that the majority is the opposite Since we assume by default a majority of zeros the st wavefront that expands would always be about a majority of ones Interestingly enough the same pattern can be seen in the convergence of Majority-Rule more clearly for the precision than for the recall Figure 3 presents the the communication cost of LSDMajority vis-a-vis the percentage of set input bits and of Majority-Rule vis-a-vis rule signi\336cance For rules that are very near the threshold a lot of communication is required on the scale of the grid diameter For signi\336cant rules the communication load is about ten messages per rule per node However for false candidates the communication load drops very fast to nearly no messages at all It is important to keep in mind that we denote every pair of integers we send a message In a realistic scenario a message will contain up to 000 002 004 004 bytes or about 000 007 004 integer pairs 5 Conclusions We have described a new distributed majority vote protocol 320 LSD-Majority\320 which we incorporated as part of an algorithm 320 Majority-Rule 320 that mines association rules on distributed systems of unlimited size We have shown that the key quality of our algorithm is its locality 320 the fact that information need not travel far on the network for the correct solution to be reached W e have also shown that the locality of Majority-Rule translates into fast convergence of the result and low communication demands Communication is also very ef\336cient at least for candidate rules which turn out not to be correct Since the overwhelming majority of the candidates usually turn out this way the communication load of Majority-Rule depends mainly 7 Proceedings of the Third IEEE Internati onal Conference on Data Mining \(ICDM\22203 0-7695-1978-4/03 $ 17.00 \251 2003 IEEE 


 0 0.2 0.4 0.6 0.8 1 0.01 0.1 1 10 100 Recall Number of database scans a  T5  T10  T20   0 0.2 0.4 0.6 0.8 1 0.01 0.1 1 10 100 Precision Number of database scans b  T5  T10  T20  Percent of Nodes 60 80 100 40 20 0 10 100 1000    1 10 20 30 40 45 48 52 55 60 70 80 90 c Steps Figure 2 Convergence of the recall and precisi on of Majority-Rule and of LSD-Majority 0 10 20 30 40 50 60 70 80 1 0.5 0 0.5 1 Average number of per node messages Rule significance a 0 10 20 30 40 50 60 70 80 10 20 30 40 45 50 55 60 70 80 90 Number of messages Percentage of set bits b Figure 3 Communication characteristics of Major ity-Rule a and of LSD-Majority b Each message here is a pair of integers on the size of the output 320 the number of correct rules That number is controllable via user supplied parameters namely 000 002 004 006 b n f and 000 002 004 017 020 004 021  References 1 R  A g r a w a l  T  I mie lin sk i a n d A  N  S w a mi M in in g a ssociation rules between sets of items in large databases In Proc of the 1993 ACM SIGMOD Int\222l Conference on Management of Data  pages 207\226216 Washington D.C June 1993 2 R  A g r a w a l a n d J  S h a fe r  P a ra lle l m in in g o f a sso c i a tio n rules IEEE Transactions on Knowledge and Data Engineering  6\:962 226 969 1996 3 R  A gr a w al and R  S r i kant  F ast a l gor i t h ms f o r m i n i n g a ssociation rules In Proc of the 20th Int\222l Conference on Very Large Databases VLDB\22294  pages 487 226 499 Santiago Chile September 1994 4 S  B r i n R  Mot w ani  J Ul l m an a nd S  T s ur  D ynami c itemset counting and implication rules for market basket data SIGMOD Record  6\(2\:255\226264 June 1997 5 D  C heung J Han V  Ng A  F u and Y  F u A f ast d i s tributed algorithm for mining association rules In Proc of 1996 Int\222l Conf on Parallel and Distributed Information Systems  pages 31 226 44 Miami Beach Florida December 1996 6 E nt r opi a http://www.entropia.com   E  H S  Han G Karypi s and V  K umar  S cal abl e paral l e l data mining for association rules IEEE Transactions on Knowledge and Data Engineering  12\(3\:352 226 377 2000 8 J  L  L i n a nd M H Dunham Mi ni ng associ at i o n r ul es Anti-skew algorithms In Proceedings of the 14th Int\222l Conference on Data Engineering ICDE\22298  pages 486\226 493 1998 9 G  S  M anku and R  M ot w a ni  A ppr oxi mat e f r e quenc y counts over data streams In Proceedings of the 28th International Conference on Very Large Data Bases VLDB\22202  Hong Kong China August 2002  T  C  P r oj ect  http://www.cs.wisc.edu condor   A S c hust e r a nd R  W o l f f  C o mmuni cat i onef 036 c i e nt di stributed mining of association rules In Proc of the 2001 ACM SIGMOD Int\222l Conference on Management of Data  pages 473 226 484 Santa Barbara California May 2001  S e t i  home http://setiathome.ssl berkeley.edu   S  T homas and S  C hakra v art h y  Increment a l m i n i n g o f constrained associations In HiPC  pages 547\226558 2000 14 Un ite d d e v ic e s in c  h ttp www u d  c o m/h o m e  h t m  M J Z a ki  S  P ar t h asar at hy  M  O gi har a  a nd W  L i  P ar allel algorithms for discovery of association rules Data Mining and Knowledge Discovery  4\:343\226373 1997 8 Proceedings of the Third IEEE Internati onal Conference on Data Mining \(ICDM\22203 0-7695-1978-4/03 $ 17.00 \251 2003 IEEE 


 0 5 10 15 20 25 30 35 40 10 15 20 25 30 average number of items in transactions T I=6 D=200K  o f d ata p rocessed 0 50 100 150 200 250 300 350 400 450 500 ti m e m sec SG-table\(%data SG-tree\(%data SG-table\(time SG-tree\(time Figure 5 Pruning and CPU time varying T 0 2000 4000 6000 8000 10000 12000 14000 10 15 20 25 30 average number of items in transactions T I=6 D=200K number o f r andom I  Os SG-table SG-tree Figure 6 Random I/Os varying T 0 5 10 15 20 25 30 35 40 6121824 average length of large itemsets I T=30 D=200K  o f d ata p rocessed 0 50 100 150 200 250 300 350 400 450 500 ti m e m sec SG-table\(%data SG-tree\(%data SG-table\(time SG-tree\(time Figure 7 Pruning and CPU time varying I 0 2000 4000 6000 8000 10000 12000 14000 6121824 average length of large itemsets I T=30 D=200K numbe r of ra ndom I  O s SG-table SG-tree Figure 8 Random I/Os varying I 0 2 4 6 8 10 12 14 16 T=10,I=6 T=20,I=12 T=30,I=18 T=40,I=24 T=50,I=30 Varying T and I I/T=0.6 D=200K  o f d ata p rocessed 0 20 40 60 80 100 120 140 160 tim e m sec SG-table\(%data SG-tree\(%data SG-table\(time SG-tree\(time Figure 9 Pruning and CPU time 336xed I/T 0 200 400 600 800 1000 1200 1400 1600 1800 2000 T=10,I=6 I=12 T=30,I=18 I=24 T=50,I=30 Varying T and I I/T=0.6 D=200K numbe r of ra ndom I  Os SG-table SG-tree Figure 10 Random I/Os 336xed I/T 0 1 2 3 4 5 6 7 100 00 300 400 500 Data set cardinality T=10 I=6  o f d ata p rocessed 0 10 20 30 40 50 60 70 80 90 ti m e m sec SG-table\(%data SG-tree\(%data SG-table\(time SG-tree\(time Figure 11 Pruning and CPU time varying D 0 10 20 30 40 50 60 0 1 to 3 4 to 10 11 to 20 20 distance of nearest neighbor T30.I18.D200K  o f d at a p rocessed 0 100 200 300 400 500 600 700 800 time m sec SG-table\(%data SG-tree\(%data SG-table\(time SG-tree\(time Figure 12 Pruning and CPU time var 000 000 003 005 007 t  83  Proceedings of the 19th International Conference on Data Engineering \(ICDE\22203 1063-6382/03 $ 17.00 \251 2003 IEEE 


shows a pattern similar to the CPU cost as in the previous experiments During the experiments we observed that queries having a close nearest neighbor were processed fast using both structures whereas for cases with distant neighbors the SG\226tree was signi\036cantly faster than the SG\226table We validated this observation by running 1000 queries on the T30.I18.D200K dataset and averaging the query costs for various distance ranges of the nearest neighbor Figure 12 shows the average pruning an d CPU cost for 036ve distance ranges When the distance is small search is fast for both methods actually for distances in the range 1\2263 the SG\226 table outperforms the SG\226tree However the distant cases are handled much faster by the SG\226tree showing that this access method is more robust to 221outlier\222 queries As a general conclusion from this set of experiments the SG\226tree is a more ef\036cient and robust access method than the SG\226table in addition to its other inherent advantages dynamic data handling independence to hard-wired constants In the next subsection we compare the indexes for other query types on both synthetic and real data 5.4 Real data nd other queries Figures 13 and 14 show the performance of the indexes for 000 NN queries on the T30.I18.D200K synthetic dataset and the CENSUS dataset respectively for various values of 000  The results for each experimental instance were averaged over 100 queries In both 036gures for small to medium values of 000 the SG\226tree is signi\036cantly faster than the SG\226 table When 000 is large  001 003 005 005 005  the fraction of the data that need to be visited becomes too large for the indexes to be useful This is due to the fact that the search space becomes less appropriate for search For example when 000 t 003 005 005 005 005 we observed that the average distance of the 000 th neighbor is very large 31.81 for T30.I18.D200K and 18.06 for CENSUS and very close to the average distance of all transactions from f  This is due to the 221dimensionality curse\222 effect 3 o ften o b s erv e d i n h ig h d i men s io n a l search problems Observe that the SG\226tree is less sensitive to this effect since its performance degenerates at a smaller pace especially for the real dataset We also compared the indexes for similarity range queries Figures 15 and 16 The same datasets and queries as before are used and the distance threshold from the query varies from 2 to 10 For r t 020  the SG\226table outperforms the SG\226tree on the synthetic dataset In all other cases the tree is much faster Observe that on the real dataset in particular for both 000 NN queries and range queries the performance difference quite large in favor of the tree This indicates that the structure can perform very well in real life cases  0 10 20 30 40 50 60 70 80 90 100 1 10 100 1000 10000 k-nn search varying k T30.I18.D200K  o f d ata p rocessed 0 200 400 600 800 1000 1200 1400 time\(msec SG-table\(%data SG-tree\(%data SG-table\(time SG-tree\(time Figure 13 021 NN queries T30.I18.D200K 0 10 20 30 40 50 60 70 80 90 100 1 10 100 1000 10000 k-nn search varying k CENSUS  o f d ata p rocessed 0 100 200 300 400 500 600 tim e m sec SG-table\(%data SG-tree\(%data SG-table\(time SG-tree\(time Figure 14 022 NN queries CENSUS 5.5 Dynamic data changes In this experiment we compare the structures simulating a case where the nature of the data changes dynamically We generated a synthetic dataset T10.I6.D100K and built an SG\226table and SG\226tree for it We then gradually updated the structures by inserting batches of 100K transactions each with the same characteristics i.e T=10 I=6 but putting different seeds to the random generator i.e the large itemsets used were different for each batch We ran nearest neighbor queries on the two structures after each insertion phase The queries for phase 023 after batch 023 has been inserted 024 026 023 026 032  are generated as follows For each query i a random number 033 from 1 to 023 is chosen and ii the generator parameters i.e large itemsets for batch 033 are used to produce the query For example a query for the phase where the dataset contains 300K data is generated using randomly one of the generators of batches 1 2 or 3 Figure 17 shows the average pruning ef\036ciency and CPU time of the two structures Initially both have similar performance but as more data with different characteristics are inserted into the structures the performance of the SG\226table degenerates since it is optimized for the 036rst 100K data  84  Proceedings of the 19th International Conference on Data Engineering \(ICDE\22203 1063-6382/03 $ 17.00 \251 2003 IEEE 


 0 5 10 15 20 25 30 35 40 246810 similarity range queries varying epsilon T30.I18.D200K  o f d at a p r o cessed 0 50 100 150 200 250 300 350 400 tim e m s e c  SG-table\(%data SG-tree\(%data SG-table\(time SG-tree\(time Figure 15 Range queries T30.I18.D200K 0 10 20 30 40 50 60 70 80 246810 similarity range queries varying epsilon CENSUS  o f d ata p r o cessed 0 50 100 150 200 250 300 350 400 ti me\(msec SG-table\(%data SG-tree\(%data SG-table\(time SG-tree\(time Figure 16 Range queries CENSUS On the other hand the SG\226tree is robust to updates and exhibits very good query performance since each batch contains skewed data generated from a different collection of large itemsets 6 Conclusions and Future Work We presented a hierarchical indexing method for similarity search in sets and categorical data The SG\226tree is a disk-based height-balanced tr ee that organizes 036xed-length bitmaps and is appropriate for various query types We have shown how several branch-and-bound methods which apply on R\226tree-like structures can be adapted for ef\036cient similarity search on the SG\226tree Extensive experimental evaluation has shown that the SG\226tree is in most cases much faster than the SG\226table a previous hash-based index The advantages of the SG\226tree can be summarized as follows 000 It is ef\036cient and robust to various data types both categorical and set data and characteristics cardinality density dimensionality It is a versatile structure that can be used for several query types 000 The tree is dynamically adapted to updates and re0 2 4 6 8 10 12 100 200 300 400 500 Dataset cardinality T=10 I=6  o f d ata p rocessed 0 20 40 60 80 100 120 140 160 180 200 tim e m sec SG-table\(%data SG-tree\(%data SG-table\(time SG-tree\(time Figure 17 NN search after dynamic updates quires no preprocessing of the data Thus it can be useful for analyzing data which change dynamically over time 001 It relies on no hardwired constants and requires no tuning using a-priori de\036ned parameters 001 It is a disk-based paginated data structure so it can operate with limited memory resources and dynamically changing memory resources Caching policies previously used for the B 002 226tree and the R\226tree can be seamlessly applied on this structure There are several directions for extending the current work In our study we used hamming distance as the similarity metric However the SG\226tree can also be de\036ned tuned and searched for other set theoretic similarity metrics For example if the Jaccar d coef\036cient is used the lower distance bound in fact the upper similarity bound for nearest neighbor search can be de\036ned by 003 005 007 b n f 016 007 020 021 023 024 026 030 003 005 007 b n f 026  We plan to test the effectiveness of the structure using alternative metrics Another direction or future work is to study methods for bulk-loading SG\226trees instead of inserting the data oneby-one We can adapt categor ical clustering algorithms 12 for t hi s purpos e Anot her a pproach i s t o s o rt t h e transactions using gray codes as key in analogy to using space-\036lling curves for bulk-loading multidimensional data to an R\226tree 17  A lternati v ely  hashing t echniques can be used to group similar signatures together The resulting 221globally-optimized\222 tree could have much better quality characteristics while being built faster In a reverse direction we can investigate whether the SG\226tree can be used for clustering large dynamic collections of set and categorical data The cost of existing methods is at least 035 n   026 and the tree could be used to derive good clusters much faster e.g by merging the leaf nodes using their signatures as guides Finally we plan to empirically test the ef\036ciency of the tree to the query types discussed in Section 4.2 In  85  Proceedings of the 19th International Conference on Data Engineering \(ICDE\22203 1063-6382/03 $ 17.00 \251 2003 IEEE 


addition for some data types search can be further optimized For example if the indexed categorical data have 223xed-dimensionality 000 we know that the area of each indexed signature is 223xed to 000  We can use this property to derive stricter lower bounds for the directory node entries 001  instead of the rather relaxed 002 004 006 006 t 013 r 001 020 022 004 025 027 For this example a better bound is 002 004 006 006 t 013 r 001 020 022 004 025 027 033 t 000 037    t 001 020 022 004 025 r 013 027 027  We plan to study such search optimizations using domain properties or statistics from the indexed data References  C  C  A ggarw al  J  L  W ol f and P  S  Y u A N e w Method for Similarity Indexing of Market Basket Data SIGMOD Conference  pages 407\205418 1999  R  A gra w al and R  S ri kant  F as t A l gori t h ms for M i n ing Association Rules in Large Databases VLDB Conference  pages 487\205499 1994  K  S  B e y er  J  G ol ds t e i n  R  R amakri s hnan and U Shaft When Is 215Nearest Neighbor\216 Meaningful International Conference on Database Theory  pages 217\205235 1999  T  B ri nkhof f H.-P  K ri e g el  a nd B  S e e g er  E f 223 ci ent Processing of Spatial Joins Using R-Trees SIGMOD Conference  pages 237\205246 1993  A  C orral  Y  Manol opoul os  Y  T heodori d i s  a nd M Vassilakopoulos Closest Pair Queries in Spatial Databases SIGMOD Conference  pages 189\205200 2000  A  P  d e V ries N  M amoulis N  N es a nd M K e r sten Ef\223cient k-NN Search on Vertically Decomposed Data SIGMOD Conference  pages 322\205333 2002  U  D eppisch S-T r ee A D ynamic B alanced Signature Index for Of\223ce Retrieval ACM SIGIR Conference  pages 77\20587 1986  V  G aede a nd O G 250 unther Multidimensional Access Methods ACM Computing Surveys  30\(2\170\205231 1998  V  G ant i  J  Gehrk e  a nd R  R a makri s hnan C A C T US 205 clustering categorical data using summaries ACM SIGKDD Conference on Knowledge Discovery and Data mining  pages 73\20583 1999  D Gi bs on J  M Kl ei nber g  a nd P  R a gha v a n C l us tering Categorical Data An Approach Based on Dynamical Systems VLDB Conference  pages 311\205322 1998  A Gi oni s  D Gunopul os  a nd N K oudas  Ef 223 c i e nt and Tunable Similar Set Retrieval SIGMOD Conference  2001  S  Guha R  R as t ogi  a nd K S h i m  R OC K A R obust Clustering Algorithm for Categorical Attributes International Conference on Data Engineering  pages 512\205521 1999  A Gut t m an R T rees  A Dynami c I nde x S t r uct u re for Spatial Searching SIGMOD Conference  pages 47\205 57 1984  S  Hel m er and G  M oerk ot t e  A S t udy of F our Inde x Structures for Set-Valued Attributes of Low Cardinality Technical Report University of Mannheim  number 2/99 1999  G R Hjaltason a nd H Samet Distance Bro w sing in Spatial Databases TODS  24\(2\265\205318 1999  A K J a i n and R  C  D ubes  Algorithms for Clustering Data  Prentice-Hall 1988  I Kamel a nd C  F a louts o s  Hilbert R tree An Improved R-tree using Fractals VLDB Conference  pages 500\205509 1994  F  K o rn N  S i d i r opoul os  C  F al out s o s  E S i e g el  a nd Z Protopapas Fast Nearest Neighbor Search in Medical Image Databases VLDB Conference  pages 215\205 226 1996  N K oudas a nd K C  S e vci k  H i g h D i m ens i onal S i m i larity Joins Algorithms and Performance Evaluation International Conference on Data Engineering  pages 466\205475 1998  N R ous s opoul os  S  K el l e y  and F  V i n cent  Neares t Neighbor Queries SIGMOD Conference  pages 71\205 79 1995  Y  S a kurai  M  Y os hi ka w a  S  U emura and H  K oj i m a The A-tree An Index Structure for High-Dimensional Spaces Using Relative Approximation VLDB Conference  pages 516\205526 2000  The U C I KDD Archi v e ht t p    kdd.i c s  uci  edu 23 R W e b e r  H.-J S ch ek  a n d S Blo tt A Q u a n titative Analysis and e Study for SimilaritySearch Methods in High-Dimensional Spaces VLDB Conference  pages 194\205205 1998  86  Proceedings of the 19th International Conference on Data Engineering \(ICDE\22203 1063-6382/03 $ 17.00 \251 2003 IEEE 


13  251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02 Example of supportbased pruning 4 Bread 1 Eggs 4 Diaper 3 Beer 4 Milk 2 Coke Count 1Item 3 Beer,Diaper 3 Milk, Diaper 2 Milk,Beer 3 Bread, Diaper 2 Bread,Beer 3 Bread,Milk Count 2Item 2 Milk, Diaper Beer 3 Bread,Milk Diaper Count 3Item Support-based pruning 225 Min support =3 Ignore subsets of items of size N 225 only if N-1 support > min-support Without pruning 6 C 1  6 C 2  6 C 3 41 With pruning: 6 + 6 + 2 = 14 251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02 Classifiers versus Association rules \(again  Classifiers  Assume entire example set can fit into RAM  Association rule learners  can handle very big data sets  Agraw  t he APRIORI alg o r i t h m   very large data sets  10,000,000 examples  843MB Proceedings of the 27th Annual NASA Goddard Software Engineering Workshop \226 Tutorial Notes \(SEW\22202 0-7695-1854-0/02 $17.00 \251 2002 IEEE 


14  251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02 The Data Mining Desiderata Bradley  Require one scan \(or less\ of the database if possible  On-line \223anytime\224 behavior  223best\224 is always available, with status information on progress, expected remaining time, etc. provided  Suspendable, stoppable, resumable  incremental  progress saved to resume a stopped job  Ability to incrementally incorporate additional data with existing models efficiently  Work within confines of a given limited RAM buffer  Ooops, good-bye traditional classifiers e.g. C4.5  Argued against by some  223Memory is cheap\224: [W A R2 251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02 Conf1  outlo o k overc a s t   1 0   82  40    84  40   4 0 0  Treatment learning sunny, 85 86 false none \(2 1 2 sunny, 80 90 true none sunny, 72 95 false none rain 65 70 true,          none rain, 71 96 true none rain 70  false some \(2 2 4 rain, 68 80 false,  some rain, 75 80 false some sunny,      69 70 false lots    \(2 3 8 sunny,      75 70 true lots overcast,     83  false lots overcast,     64  true lots overcast,     72  true lots overcast,     81 75 false lots outlook temp humidity wind hours on course A good attribute range 225 More frequent in good that bad 225 Weighted by 223distance\224good to bad 225 Normalized by total count 225 Summed for all good/bad class pairs Lots  none Lots  some Proceedings of the 27th Annual NASA Goddard Software Engineering Workshop \226 Tutorial Notes \(SEW\22202 0-7695-1854-0/02 $17.00 \251 2002 IEEE 


15  251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02 sunny, 85 86 false none \(2 1 2 sunny, 80 90 true none sunny, 72 95 false none rain 65 70 true,           none rain, 71 96 true none rain 70  false some \(2 2 4 rain, 68 80 false,  some rain, 75 80 false some sunny,      69 70 false lots    \(2 3 8 sunny,      75 70 true lots overcast,     83  false lots overcast,     64  true lots overcast,     72  true lots overcast,     81 75 false lots 0 1 2 3 attribute ranges with deltaf 4-2024681 conf1 225 treatments 002 attribute.range.conf1 > X 225 treatments|=N 225TAR2 = O\(2 N  225 fails for large N outlook temp humidity wind hours on course Conf1  outlo o k overc a s t   1 0   82  40    84  40   4 0 0  Lots  none Lots  some 251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02 Treatments for golf 0 1 2 3 4 none some lots I f outl ook o verc as t Th en l o t s o f go l f  4 4  0 Least monitor watch the humidityalert if rising over 90 Least change pick a vacation location with overcast weather I f h u m i d i t y  90  97 Th en l o t s o f go l f  1 4  0 1 2 3 none some lots 0 1 2 3 4 5 6 none some lots If n o ch an ge Th en l o t s o f go l f  6 6 3 5  3  Proceedings of the 27th Annual NASA Goddard Software Engineering Workshop \226 Tutorial Notes \(SEW\22202 0-7695-1854-0/02 $17.00 \251 2002 IEEE 


16  251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02 6.7 <= RM < 9.8 And 12.6 <= Ptratio 15.9 BEST ACTION 0.6 <= NOX < 1.9 and 17.16 <= LSTAT < 39 WORST ACTION BASELINE 500 examples  of bad--, bad, ok, good Stop staring at the scenery and tell me where to steer or what to dodge 251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02 Require overall require2 require3 require5 require4     action1 action1, action2, action3,  \205   Cost,    Benefit 1 Y              Y             N,        \205   23200,  250 2           N              N             Y ,       \205   11400,  150 205..       \205             \205            \205        \205   \205         \205 action2 fault2 fault3 fault1 JPL requirements Feather&Menzie Proceedings of the 27th Annual NASA Goddard Software Engineering Workshop \226 Tutorial Notes \(SEW\22202 0-7695-1854-0/02 $17.00 \251 2002 IEEE 


17  251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02 Case study 99 proposed actions for deep space satellite design; 2 99 10 30 options Each row is one project plan action1, action2, action3,  \205   Cost,    Benefit 1 Y              Y             N,        \205   23200,  250 2           N              N             Y ,       \205   11400,  150 205..       \205             \205            \205        \205   \205         \205 Learnt 225 Do 16 225 Don\222t do 14 225 Ignore 66 options 225 c.f. genetic algorithms Each dot  is one randomly generated project plan 251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02 Pr of tampering 0.02 Pr of fire 0.01 Pr of smoke  given [fi  0.90 Pr of smoke  given [fi  0.01 Pr of report given [exodus=ye 0.75 Pr of report given [exodus=no 0.01 Pr of exodus given [alarm=yes 0.88 Pr of exodus given [alarm=no 0.001 etc tampering fire alarm smoke exodus run away report hello, operator I want to report a fire 0.02 0.01 Use Bayesian analysis to update probabilities given new information Use Bayesian analysis to update probabilities given new information Bayesian Tuning Proceedings of the 27th Annual NASA Goddard Software Engineering Workshop \226 Tutorial Notes \(SEW\22202 0-7695-1854-0/02 $17.00 \251 2002 IEEE 


18  251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02 tampering fire alarm smoke NO exodus report YES 0.50 was 0.02 0.03 was 0.01 Q1: What if there is a report, but no smoke Q1: What if there is a report, but no smoke Q2: What if there is a report, and smoke Q2: What if there is a report, and smoke tampering fire alarm smoke YES exodus 0.03 was 0.02 0.97 was 0.01 report YES Example from : [Poole98   p37 1 Source = http:// www.swi.psy.uva.nl/projects/SWI-Prolog/download.html http://www.cs.ubc.ca/spider/poole/ci/code.tar.gz Files    = code/acp/bnet.pl code/acp/bnet_t1.pl Bayesian Tuning 251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02 Non-na\357ve model bayesian network Proceedings of the 27th Annual NASA Goddard Software Engineering Workshop \226 Tutorial Notes \(SEW\22202 0-7695-1854-0/02 $17.00 \251 2002 IEEE 


19  251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02 Low testing effort EXPLAINS 1\ some observed operational defects  and 2\ low pre-release defects 251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02  Ancestors  ancestor\(X,Y\:-parent\(X,Y  ancestor\(X,Y\:-parent\(X,Z\ancestor\(Z,Y  Lists  member\(X,[X|Z   member\(X,[Y|Z me mb er X Z   append X X   append\([X|X Y s X Z s  a ppe nd X s Ys Z s  Example Example action action hypothesis hypothesis p\(b,[b add clause p\(X,Y   specialize p\(X,[V p\(x,[a specialize p\(X,[X p\(b,[a add clause p\(X,[X p\(X,[V p\(X W Inductive Logic Programming Proceedings of the 27th Annual NASA Goddard Software Engineering Workshop \226 Tutorial Notes \(SEW\22202 0-7695-1854-0/02 $17.00 \251 2002 IEEE 


20  251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02 East-West trains 1. TRAINS GOING EAST 2. TRAINS GOING WEST 1 2 3 4 5 1 2 3 4 5 1. TRAINS GOING EAST 2. TRAINS GOING WEST 1 2 3 4 5 1 2 3 4 5 251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02 ILP representation  Example eastbound\(t1  Background theory car\(t1,c1\      car\(t1,c2\       car\(t1,c3\.      car\(t1,c4 rectangle\(c1\  rectangle\(c2\     rectangle\(c3\.   rectangle\(c4 short\(c1\      long\(c2\.          short\(c3\       long\(c4 none\(c1\.        none\(c2\.          peaked\(c3\.      none\(c4 two_wheels\(c1\  three_wheels\(c2\two_wheels\(c3\two_wheels\(c4 load\(c1,l1\.     load\(c2,l2\       load\(c3,l3\    load\(c4,l4 circle\(l1\      hexagon\(l2\       triangle\(l3\    rectangle\(l4 one_load\(l1\  one_load\(l2\.      one_load\(l3\    three_loads\(l4  Output ne\(C Proceedings of the 27th Annual NASA Goddard Software Engineering Workshop \226 Tutorial Notes \(SEW\22202 0-7695-1854-0/02 $17.00 \251 2002 IEEE 


21  251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02 Predicting Correctness Almei NewID CN2 C4.5 C4.5_rule FOIL Accuracy 52 54 66 68 73 251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02 FOIL\222s best rule high\(A executable\(A,B maximum_statement_nesting_depth\(A,C lines_of_comments\(A,B commentsdivsize\(A,E n1\(A,F n2\(A,G less_or_equal\(E,F not less_or_equal\(B,G C <> 4 C <> 43 less_or_equal\(C,D High faults when comment density <= #operators and executable statements > #operators and max nesting <= number of lines of comments and max nesting is not 4 or 43 High faults when comment density <= #operators and executable statements > #operators and max nesting <= number of lines of comments and max nesting is not 4 or 43 Proceedings of the 27th Annual NASA Goddard Software Engineering Workshop \226 Tutorial Notes \(SEW\22202 0-7695-1854-0/02 $17.00 \251 2002 IEEE 


22  251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02 Inside  some learners  neural nets  genetic algorithms  decision tree learners  association rule learners  treatment learners  bayesian tuning  inductive logic programming 225 sub-symbolic locally guided descent symbolic, global search 225 recursive diversity reduction 225 this goes with that CLASS 225 this goes with that 225 asses 225 a little model goes a long way 225 Horn clauses  251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02 Case studies predicting effort \(45 predicting faults \(51 model-based ML \(54 early lifecycle project planning \(60 Proceedings of the 27th Annual NASA Goddard Software Engineering Workshop \226 Tutorial Notes \(SEW\22202 0-7695-1854-0/02 $17.00 \251 2002 IEEE 


23  251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02 Case study How can we estimate earlier in the life cycle  251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02 Predicting development times in months\Srinivasan95 Proceedings of the 27th Annual NASA Goddard Software Engineering Workshop \226 Tutorial Notes \(SEW\22202 0-7695-1854-0/02 $17.00 \251 2002 IEEE 


24  251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02 Bayes for effort Chulani99  The COCOMO-II project  Open-source software cost estimation  Reuse vs effort XH : multiple product lines VH : across product lines H : across program N : across project L  : none  Regression over data from 83 software projects  Regression conflicted with \223Delphi values\224  Tune regression values using Delphi expectations 0.8 0.9 1 1.1 1.2 1.3 1.4 1.5 1.6 Low N H VH XH Delphi Regression Adjusted Da ta   reus e low e rs effo r t Ex pe ct e d  reus e incre a se  effo r t    251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02 COCOMO-II \(1998\COCOMO-II \(1997 Pred\(30 Pred\(25 Pred\(20 Pred\(X 52 49 46 83 projects 63 59 54 161 projects 7561 68 55 63 48 161 projectsbased on Bayesian 161 projectsbased on Delphi Percentage of estimated effort within X of actual Conclusion data + delphi tuning\a Proceedings of the 27th Annual NASA Goddard Software Engineering Workshop \226 Tutorial Notes \(SEW\22202 0-7695-1854-0/02 $17.00 \251 2002 IEEE 


25  251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02 Neural Network Count the wi dge ts in the I n te r f ace to es ti m a te e f f o r t  Labels Edit Boxes Grid Boxes Check Boxes Buttons 251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02 Neural Network Subsystem Pred\(25 MARE Buyer Admin 80 17.6 Buyer Client 80 14.6 Distribution Server 20 96.7 Supplier Client 90 12.2  12 Different Widgets Counted and associated with effort Proceedings of the 27th Annual NASA Goddard Software Engineering Workshop \226 Tutorial Notes \(SEW\22202 0-7695-1854-0/02 $17.00 \251 2002 IEEE 


26  251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02 Case study: Predicting software 251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02 Predicting software  faults Khoshgoftaar99 Whi c h d o g s di d not ba r k  225 42 attri b ute s  in dat a s e t 225 Only 6 in the l e arnt th e o ry Diffe re nt attri b ute s than b e fore 225 223c au se s f a u l t 224  do m a in s pec i f i c 225 Me thod for fin d ing fa ult s  gen e r a l Whi c h d o g s di d not ba r k  225 42 attri b ute s  in dat a s e t 225 Only 6 in the l e arnt th e o ry Diffe re nt attri b ute s than b e fore 225 223c au se s f a u l t 224  do m a in s pec i f i c 225 Me thod for fin d ing fa ult s  gen e r a l Proceedings of the 27th Annual NASA Goddard Software Engineering Workshop \226 Tutorial Notes \(SEW\22202 0-7695-1854-0/02 $17.00 \251 2002 IEEE 


27  251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02 Issue of generality  Specific conclusions may not apply to general projects  Proposal one  Intra-project learning  Lessons should generalize across the same developer methodology, application and tool set  Proposal two  Inter-project learning  Need larger training set  COCOMOII uses 161 projects  Note: two = N * one Khoshgoft good bad Tia bad good  251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02 Model-based ML Bratko89,Pearc Proceedings of the 27th Annual NASA Goddard Software Engineering Workshop \226 Tutorial Notes \(SEW\22202 0-7695-1854-0/02 $17.00 \251 2002 IEEE 


28  251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02 Model-based ML simple e.g sum\(X,  Y Z sum   sum   sum\(0 0 0 sum 0  sum 0  sum\(0   sum\(0   sum  Any sum  Any if X >0 X\222=      if X < 0 0 if X= 0  switch\(State,Volts,Amps switch\(on,       0,     Any switch\(off,      Any,   0 blub\(Mode,Light,Volts,Amps bulb\(blown,dark, Any 0 bulb\(ok,     light   bulb\(ok,    light   bulb\(ok,    dark 0 0 251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02 A qualitative circuit go  :tell\('circ.data'\ go1, told go1 :functor\(X,circuit,9\ forall\(X, example\(X example\(circuit\(Sw1,Sw2,Sw3,B1,B2,B3,L1,L2,L3\classification\(B1,B2,B3,Class format\('~a,~a,~a,~a,~a,~a,~a~n Sw1,Sw2,Sw3,L1,L2,L3,Class  classification\(B1, B2, B3,Class needs 2 our of three bulbs working classification\( ok, ok, B3,   good classification\( ok, B2, ok,   good classification\( B1, ok, ok,   good classification\( B1, B2, B3,   bad Proceedings of the 27th Annual NASA Goddard Software Engineering Workshop \226 Tutorial Notes \(SEW\22202 0-7695-1854-0/02 $17.00 \251 2002 IEEE 


29  251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02 Results from > 700 examples circ.names good,bad switch1: on, off switch2: on, off switch3: on, off bulb1: light, dark bulb2: light, dark bulb3: light, dark Command line c4.5 -f circ -m 2 W a t c hing bulb1 tells us th e rest Insight f ul  Or dull W a t c hing bulb1 tells us th e rest Insight f ul  Or dull 251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02 More Model-based ML Proceedings of the 27th Annual NASA Goddard Software Engineering Workshop \226 Tutorial Notes \(SEW\22202 0-7695-1854-0/02 $17.00 \251 2002 IEEE 


30  251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02 ca n we r e v i s i t thos e warranti e s   Run 1 35,000 tions  Learn 1  Run 2 if Sw2c=off then 3264 tions  Learn 2  Run 2 if Sw2c=off n then 648 tions  Learn 3 Ca n\222t clos e  Sw3c warranty issu es No b u d g e t  for e x p e ns i v e ha rd wa r e 251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02 3 \223tunings\224 5 SLOC guesstimates 150,000 runs Treatments for software projects Proceedings of the 27th Annual NASA Goddard Software Engineering Workshop \226 Tutorial Notes \(SEW\22202 0-7695-1854-0/02 $17.00 \251 2002 IEEE 


31  251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02 flex=1 pmat=3 sced=2 rest anything from kc1 150,000 runs 150,000 runs Treatments for software projects \(ii 251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02 pmat=2 acap=2 sced=2 rest anything from kc1 30,000 runs 30,000 runs Treatments for software projects \(iii Proceedings of the 27th Annual NASA Goddard Software Engineering Workshop \226 Tutorial Notes \(SEW\22202 0-7695-1854-0/02 $17.00 \251 2002 IEEE 


32  251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02 ons discussion \(64 downloads \(69 further reading \(71 references \(72 251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02 Will you try ML  Have we motivated you  Will you rush home and do ML on your data  Clearly  ML algorithms work  Caution  you may find it harder than you think Proceedings of the 27th Annual NASA Goddard Software Engineering Workshop \226 Tutorial Notes \(SEW\22202 0-7695-1854-0/02 $17.00 \251 2002 IEEE 


33  251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02 Many ways to learn numerous case studies but there is still a problem Theme Learning is a solved problem \(sort of Data collecting and modeling is not 251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02 Be warned match your ML goals to your software process level Project metrics coarse-grain conclusions Product metrics product learning Process metrics process learning Proceedings of the 27th Annual NASA Goddard Software Engineering Workshop \226 Tutorial Notes \(SEW\22202 0-7695-1854-0/02 $17.00 \251 2002 IEEE 


34  251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02 Also, match your tool to task Task ML Tool Assembly line robot deciding what to reject Decision tree learner Repair robot trying to do the least to fix the rejected parts Treatment learner Predicting the life of a robot Neural Network Optimizing the assembly line Genetic Algorithm If clustering when no classes iation rule learning If simple background knowledge Bayesian If complex relational background knowledge ILP 251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02 Have we learnt enough  Not yet  But wait Proceedings of the 27th Annual NASA Goddard Software Engineering Workshop \226 Tutorial Notes \(SEW\22202 0-7695-1854-0/02 $17.00 \251 2002 IEEE 


35  251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02 Cost = $0  WEKA  E.g. http://www.cs.waikato.ac.nz/~ml/weka/: ML in JAVA 003 decision tree inducers,rule learners, naive Bayes, decision tables locally weighted regression  GDB_Net  http://nas.cl.uh.edu/boetticher/gdb_net.zip  TAR2  http://www.ece.ubc.ca/twiki/bin/view/Softeng/TreatmentLearner  APRIORI  http://fuzzy.cs.uni-magd eburg.de/~borgelt/apriori/apriori.html#download  And many others  E.g. ML  A public domain \223C\224 library of common algorithms  Naive Bayes, ID3, MC4 , Decision Tables ,   Holte's OneR CN2,\205  http://www.sgi.com/tech/mlc/utils.html 251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02 Cost > $0  C4.5  Comes with the book Quinlan  C5.0  http://www.rulequest.com/download.html  Microsoft SQL SERVER 2000\231  Comes with numerous machine learning tools  Proprietary algorithms  Etc  223data mining\224 \223commercial software\224 in Google  3,340 links  223data mining consultancy\224 in Google  850 links Proceedings of the 27th Annual NASA Goddard Software Engineering Workshop \226 Tutorial Notes \(SEW\22202 0-7695-1854-0/02 $17.00 \251 2002 IEEE 


36  251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02 Further reading  Mendonca  great rev i e w art i cl e on ML  Large list of available tools  All the things you can do with a decision tree [Menzies0  Treatment learning: [Menzies01a  Michalski\222s excellent survey of ML types [Michalski  Neural nets: [Boetticher01  Special issue SEKE journal, knowledge discovery Morasca99  Inductive logic programming [Bergadano95,Cohen95  Come by IJCAI 2011 and I\222ll tell you all about it\222s applications  Genetic algorithms: [Goldberg8  Bayesian learning [Cheeseman88 251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02 References  Agrawal  Agrawal, R., and T.Imeilinski and A.Swami \223Mining Association Rules between Sets of Items in Large Databases,\224 Proceedings of the 1993 ACM SIGMOD Conference Washington DC, USA  Bergadan  Bergadano, F., and D.Gunetti Inductive Logic Programming: From Machine Learning to Software Engineering The MIT Press, 1995  B  Berry, M. J. A., and G., Linoff Data Mining For Marketing, Sales, and Customer Support John Wiley Sons, Inc., New York, 1997  Boetticher01  Boetticher, G., "An Assessment of Metric Contribution in the Construction of a Neural Network-Based Effort Estimator Second International Workshop on Soft Computing Applied to Software Engineering  Enschade, NL, 2001 Available from http://nas.cl.uh.edu/boetticher/publications.html  Boetticher01  Boetticher, G., "Using Machine Learning to Predict Project Effort: Empirical Case Studies in Data-Starved Domains First International Workshop on Model-based Requirements Engineering San Diego, 2001 Available from http://nas.cl.uh.edu/boetticher/publications.html  Bradley  Bradley, P., U. Fayyad, and C. Reina. \223Scaling clustering algorithms to large databases\224. In KDD'98  B  Bratko, I., I. Mozetic, and N. Lavrac KARDIO: a Study in Deep and Qualitative Knowledge for Expert Systems MIT Press, 1989  Breim  Breiman, L., J. Friedman, R. Olshen, C. Stone, \223Classification and Regression Trees,\224 Wadsworth International Group, 1984 Proceedings of the 27th Annual NASA Goddard Software Engineering Workshop \226 Tutorial Notes \(SEW\22202 0-7695-1854-0/02 $17.00 \251 2002 IEEE 


37  251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02 References  Burgess  Burgess, C.J., and Martin Lefley. \223Can genetic programming improve software effort estimation? A comparative evaluation,\224 Information and Software Technology er 2001  Cheesem  P. Cheeseman, D. Freeman, J. Kelly, M. Self, J. Stutz, and W. Taylor. \223Autoclass: a bayesian classification system,\224 In Proceedings of the Fifth International Conference on Machine Learning  Morgan Kaufman, 1988  Chulani  S.Chulani,  B. Boehm, and B. Steece 223Bayesian analysis of empirical software engineering cost models,\224 IEEE Transaction on Software Engineering 25\(4\ly/August  1999  Cohe  W. W. Cohen, \223Inductive specification recovery: Understanding software by learning  from example behaviors,\224 Automated Software Engineering 2:107-129, 1995  DeJon  DeJong, K.A., and Spears, W.M. "An Analysis of the Interacting Roles of Population Size and Crossover in Genetic Algorithms Proc. First Workshop Parallel Problem Solving from Nature  Springer-Verlag, Berlin, 1990  Dietteric  Dietterich, T. G., \223Machine Learning  Research: Four Current Directions,\224 AI Magazine 18 \(4\97 Pp. 97-136. Available from ftp://ftp.cs.orst.edu/pub/tgd/papers/aimag-survey.ps.gz  s  Feather, M.S., and T. Menzies: \223Converging on the Optimal Attainment of Requirements IEEE Joint Conference On Requirements Engineering  ICRE'02 and  RE'02 9-13th September, University of Essen, Germany, 2002. Available from http://tim.menzies.com/pdf/02re02.pdf 251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02 References  Fenton00  Fenton, N., and  M. Neil \223Software Metrics: A Roadmap,\224 International Conference on Software Engineering, 2000. Available from http://www.dcs.qmul.ac.uk/~norman/papers/metrics_roadmap.pdf  Goldberg  Goldberg, D.E Genetic Algorithms in Search, Optimization, and Machine Learning Addison-Wesley Reading, Massachusetts, 1989  Khoshgoftaar  Khoshgoftaar, T.M., and E.B. Allen. \223Model software quality with classification trees,\224 in H. Pham, editor 223Recent Advances in Reliability and Quality  Engineering\224, World Scientific, 1999  Mendonc  Mendonca, M., and N.L. Sunderhaft, \223Mining Software Engineering Data: A Survey,\224 A DACS State-ofthe-Art Report September 1999. Available from http://www.dacs.dtic.mil/techs/datamining  Menzie  Menzies, T., \223Practical Machine Learning for Software Engineering and Knowledge Engineering,\224 ftware Engineering and Knowledge Engineering volume 1, 2001\vailable from http://tim.menzies.com/pdf/00ml.pdf  Menzies01a  Menzies, T., and Y. Hu, \223Reusing models for requirements engineering,\224 First International Workshop on Model-based Requirements Engineering 2001. Available from http://tim.menzies.com/pdf/01reusere.pdf  Menzies01b  Menzies, T., and Y. Hu, \223Constraining discussions in requirements engineering,\224 First International Workshop on Model-based Requirements Engineering San Diego, 2001. Available from http://tim.menzies.com/pdf/01lesstalk.pdf  Menzie  Menzies. T., and J. Kiper, \223Better reasoning about software engineering activities,\224 Automated Software Engineering 2001. Available from http://tim.menzies.com/pdf/01ml4re.pdf Proceedings of the 27th Annual NASA Goddard Software Engineering Workshop \226 Tutorial Notes \(SEW\22202 0-7695-1854-0/02 $17.00 \251 2002 IEEE 


38  251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02  Michalski90   Michalski, R.S., \223Toward a unified theory of learning,\224  In B.G. Buchanan and D.C. Wilkins, editors 223Reading in Knowledge  Acquisition and Learning\224, pages 7--38. Morgan Kaufmann, 1993  Mitchell  Mitchell, T Machine Learning McGraw-Hill, 1997  Morasca99  Morasca, S., and Gunther Ruhe, Guest editors' introduction of the Special issue on \223Knowledge Discovery from Software Engineering Data,\224 International Journal of Software Engineering and Knowledge Engineering October, 1999  Pearce  Pearce, D., \223The induction of fault diagnosis systems from qualitative models,\224 in Proc. AAAI-88 1988  Poole9  Poole, D. L.,  A. K. Mackworth, and R. G. Goebel Computational Intelligence: A Logical Approach  Oxford University Press, New York, 1998  Porter9  Porter, A.A., and R.W. Selby  \223Empirically guided software development using metric-based classification trees,\224 IEEE Software Pp. 46-54, March 1990  Quinla  Quinlan, R C4.5: Programs for Machine Learning Morgan Kaufman, 1992  Srinivasa  Srinivasan, K., and D. Fisher,  \223Machine learning approaches to estimating software development effort,\224 IEEE Transactions on Software Engi neering Pp. 126-137, February 1995  Tian9  Tian, J., and M.V. Zelkowitz 223Complexity measure evaluation and selection,\224 IEEE Transactions on Software Engineering 21\(8\p. 641-649,  August 1995  Webb0  Webb, G., \223Efficient search for association rules,\224 Proceeding of KDD-2000 Boston, MA,  2000  Zhang0  Zhang, Du, \223Applying Machine Learning Algorithms in Software Development,\224 Modelling Software System Structures in a fastly moving scenario Santa Margherita Ligure, Italy, 2000 References Proceedings of the 27th Annual NASA Goddard Software Engineering Workshop \226 Tutorial Notes \(SEW\22202 0-7695-1854-0/02 $17.00 \251 2002 IEEE 


