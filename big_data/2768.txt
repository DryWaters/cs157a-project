Proceedhgs of 200\200E T\200NCONOZ Research of Storage Method for Association Rules with Relational Algebra Xiong Zhongyang Tang Rongjun, Zhang Yufang, Cheng Daijie Department of Computer Science, Chongqing University, Chongqing China 400044 zvxionq@cqu. edu.cn Abstract This paper probes intensively into the storage methods of association rules It proposes a new data mining architecture with storing association rules and describes the storage structure of association rules with relational algebra This storage method stores the association rules in the relational database 
It is convenient to establish the interface of the storage system based on the matured interface technology of relational database This architecture achieves the share of association rules among different mining systems Keywords Association Rule Relational Algebra Data Mining 1 introduction The new framework of DSS is formed by data warehouse OLAP and data mining, which put DSS into practical use Data mining IS developed with the technology of artificial intelligence AI and database It analyzes 
the data automatically and mines the potential information to help users for decision-making.[\222IP1 The purpose of data mining is to find out the patterns implied in the data set. There are some differences between data and patterns Data is enormous and irregular There is no practical meaning existing in the unprocessed data. However patterns are the schemas implied in enormous dataL3 At present the research of data mining has integrated with data warehouse Data warehouse can re-extract the a great amount of historical data from the traditional database 
to form a certain data set which is concentrate subject oriented changing with the time and obtaining relatively stable contents Data warehouse provides strongly data support for the construction of DSS Many mature products of data warehouse have been used extensively Data warehouse also provides a new application area and strong supports for data mining technology Data warehouse processes a series of work, such as collection, aggregation storage, management of data It provides the regular and enormous data to 
the process of data mining and makes data mining more engaged in knowledge discovery  0-7803-7490-8/02/$17.0002002 IEEE Data mining a core technology of realizing business intelligence has received considerable research attention in recent years How to improve efficiency of data mining become popular research issues. The problem is solved in the following aspects e e To find out more efficient data mining algorithm To improve the hardware performance and parallel ability To store and use the results of data mining a The third approach 
can solve the problem of volume expansion of data warehouse, enhance algorithm efficiency and use the mining result effectively. This paper studies the storage methods\222 of association rules and data mining structure 2 Data Mining System with Storage 221of the Association Rules The typical data mining system is based on data warehouse or large relational database and has integrated with the function of inquiry, analysis expression and etc The system is composed of various technologies and can provide DSS information for users. There are three layers in the data mining system data layer, core mining model and result-expressing 
tool Data layer that offers data to mining is the foundation of the whole system It will be useless without data A good data-mining tool has the ability of storing and accessing various data Data mining system which is built on data warehouse satisfy the demand of users to some degree However there are still some problems in the mining process The volume expansion of data warehouse e Low efficiency of 
data mining Ineffective usage of historical pattern Low interacted operation among the different mining systems People have made many efforts and offered several directions for solving the problems above The key to improve the efficiency of mining is to find out the fast algorithm But the improvement is limited with the sharp increase of data. Another direction is to reduce the volume 105 


of data to be processed It suggests making full use of mining results and only mining the newly incre The paper introduces the idea of storing mining result and to manage the mining-result pattern An improved architecture of data mining system with the storage of association rules is proposed. This storage method will not be limited in the storage of association rules It will be referenced by the other applications I i I Rulemanagement subsystem I I I1 I1 I 1r 1 Rule base I i I Rulemanagement subsystem I I I1 I1 I 1r 1 Rule base 6 Data access layer Figure 1 improved data mining In order to store mining results a component storing association rules is added With this component association rules can be stored and manipulated As figure 1 the added parts are rule management subsystem and rule base which make association rules First it uses build rule base regarding management system is app maintenance. The hollow arrowheads illustrate the process of collecting the data from data source and obtaining the rule after mining storing the rules and expressing them The solid arrowheads illustrate the process of resp data mining request The procedure is that rule management system will inquire whether there are corresponding rules If there are not, then the system starts the mining procedure otherwise nothing will be done The dotted arrowhead illustrates the direction of original association rules The improved structure solves the existing problem in the traditional data mining system effectively It has the following characteristics a Small volume The volume of rule base will be decreased several times compared with the data ociation rules mined to a a a warehouse because data are more polished If the processing data will not be used frequently, they can be stored in the cheap storage appliance such as tape recorder Higher speed The rule base stores association rules or mining results If the rules are close to the time of mining request they can be put into use directly without executing the time consuming mining procedure. Because the volume of rule base is much smaller than data warehouse the corresponding speed of inquiry will be quicker Better interacted operation. Regular and concentrated rule storage solves the consistence problem effectively With the rule base management system the query language similar to SQL or the rule base interface can be designed Different mining tools using the query language or calling function provided by rule base interface can share the association rules Effective use of historical data We can predict the tendency from analyzing the change of the association rules to provide more means for DSS 3 Association Rules Let if i2 0 i be a set of literals called items. Let D be a set of transactions, where each transaction T is a set of items such that T c 1 Associated with each transaction is a unique identifier, called TID We say that a transaction T contains X a set of some items in I if x E T  An association rule is an implication of the form xa Y where X c 1 Y c I and X n 1  0 The support and confidence of an association rule X a y are calculated by the following two equations Support  The Number of Transaction That Contains X and Y The Totul Number Of Transactions The Number Of Transactio 11 That Contans Y Tfie Number Of Transuctto n That Contains X Confidence  The rule X-Y holds in the transaction set D if its support and confidence are equal to or greater than the user specified values The goal of association rules is to find the relationship between any combinations of items The Xis called body of the rule and the Y is called head 4 Existing Storage Methods of Association Rules It is difficult to share the mining results among different mining systems because of the lack of unified method to 106 


store them. There are two storage methods Method 1 Popular data mining tools such as the DBMiner Intelligent Miner etc generally stores the mining results into files In Intelligent Miner 6.1 the mining results are stored into a file named re~Xn.dat and can be read from the file provided by API. There are three steps to read the association rules in the result files in other mining tools First it defines a structure Second it calls the function IDMAsrParserlnitialize to initialize Finally it calls the function IDMAssocRules to read the association rules The procedure of obtaining association rules in such way is complicated Different data mining tools have different results format It is difficult to share the mining re:ults among different mining tools Method 2 Relational database15 to store mining results The structure of table is Item ltemk NuIIM RuleM confidence suppoh Fields Itemk are items in the transaction data set k specifies the total amount of items NullM specifies the null-mark of the rule if there are n items in one rule the value of NullM should be n+l RuleM specifies the rule-mark of the rule if there are m items in the rule head the value of RuleM should be m+l The 2 2 Pumper Lock 60 3 Pumper Helmet 60 3 The common disadvantage of these two storage methods is the lack of relative time stamp of association rule, which stands for the change of historic data Following is an improved storage method to overcome these problems 5 Relational Algebra Description of Association Rule This paper presents an approach using relational table to store association rules The relation schema is Rule schema  RID BODY HEAD Conf Supp  RID represents the number of the rules and each rule has a unique number The value of column BODY and HEAD which is the item of transaction database constitutes an association rule The value of column Conf and Supp denotes the minimal confidence threshold and minimal support threshold An association rule Bike A Pumper 3 Lock A Hebnet  0.6  0.03 is expressed as Table 2 Improved association rule table I 2 1 Bike I Lock 60 I 3 1 Bike Pumpe Lock Helmet Null Null Null 1 2 I Bike I Helmet I 60 1 3 1 Null 4 2 60%3 107 


There are following problems in the relation ASSOCI-RULE 1 Data redundancy A N+M association rule needs N*M records And the same CONF, SUP value will be stored N*M times repeatedly Complex manipulation When inserting, removing and updating on one N+M\association rule it needs N*M operations in relation table We can see this relation exists multivalued dependency BODY CONF SUP}and needs decomposition We use the projecting operation to project the relation over some attributes and decompose it into two relation schemas. The schema RULE describes the rule part of an association rule and the schema PARA describes the parameter 2 RULE\( ID BODY HEAD\BODY,HEAD\(ASSOCI_RULE PARA\(ID CONF SUP TIME CONF sup TIME\(ASSOCI-RULE Duplicate tuples are likely to appear in the result of project operation The project operation implicitly removes any duplicate tuples so the result of projecting operation is a set of tuples and hence a valid relation In the PARA table every association rule corresponds to a record. The column ID becomes the primary key that has a unique identifier The inserting updating and deleting operation of an association rule's parameter could be finished in one step But the redundancy still exists. \(N*M\records are needed to represent one N+M association rule The relation RULE needs to be decomposed further BODY\( ID BO DY BODY RULE HEAD ID HEAD HEAD RULE After decomposition relation ASSOCI-RULE is decomposed into relation BODY HEAD PARA The data redundancy of RULE has been eliminated In each \(N+M association rule, the body items appear N times and the head items M times The storage method can be formally described as follows ASSOCI-RULE BODY ID BODY  HEAD ID HEAD PARA ID CONF SUP TIME The joining operation using identical ID among three tables composes a corresponding association rule The characteristics of this storage method are: The format of association is uniform and the rule can be shared with 1 different mining systems Data redundancy is low thus query speed is high It's easy to extract association rules in this storage method by joining the body head and parameter according to the rule's ID Base on the relation schema, storage of association rule in relational database can be easily realized The basic operations are relational algebra operation, which provides the foundation to implement 6 Conclusions and Future Work The paper proposes an improved- architecture of data mining system with the storage of association rules after analyzing the efficiency of the present system. And it also proposes to use the relational database to store the association rules and describes the storage structure of association rules with relational algebra The mining results, association rules, are stored in the rule base through which users can carry various operations and management A consistent view of association rules is formed so as to improve the efficiency of sharing association rules Based on this improved architecture of data mining system there are some future study directions The storage method of association rule can be referred by other storage method of mining results such as classification rule, cluster rule etc A set of operations which manipulate rules in rule base can be defined similar to SQL in relational database Using these operations people can execute management functions on rule base like adding removing querying and organizing data, as well as authority management References M. Chen J Han, and P Yu.,Data mining: An overview from database perspective IEEE Transactions on Knowledge and Data Eng,8\(6 1996 J Han Y Cai, and N Cercone, Knowledge Discovery in Databases: An Attribute-Oriented approach, VLDB 92, Vancouver, BC Canada 547--559  1992  Parsaye.K  From Data Management to Pattern Management DM Review January 1999 Application Programming Interface and Utility Reference Version 6 Release 1,IBM Inc 1999 Hongen Z Mining and visualization of association rules over relational DBMS UF MS thesis, Aug 2000 108 


0.6 0.7 0.8 0.9 1 Minimum Suppm  a T5-13-W3-N500-D10K EH-Apriori E-Apriori  9 0.6 0.7 0.8 0.9 1 Minimum Support  d T8-11.5-W3-N500-D10K Figure 1 Minimum support versus execution time 70 60 50 I 40 30 20 10 0 Separate Joint Pass 1 Pass 2 OPass 2 m0 Pass 4 98 96 Separate Joint Figure 2 Execution time on LOSER data set, support=98 Our study using stock movement data is on going The results obtained so far do indicate  that with cross-object association rules we can discover more comprehensive and interesting knowledge and EH-Apriori algorithm can always achieve better performance than E Apriori algorithm regardless of large or small average transaction size 5 CONCLUSION In this paper we introduce the notion of cross-object association rules These rules can represent not only the associations of items within transactions but also associations of items among different transactions The classical association rules can be viewed as a special case of the cross-object association rules We implement two algorithms for finding such association rules by extension of Apriori Our performance studies on both synthetic and real life data sets show that the strategies to prune unnecessary 2-itemsets from the candidate set C is more beneficial to the overall performance than it is in the case of traditional association rules As we only consider single-dimensional mining context in this paper one future work is to incor porate multiple dimensional attributes into the mining process Performing distributed and/or parallel cross-ob ject association rules mining is another further work we are interested in Acknowledge This work is supported by Hong Kong Govern ment University Grants Council  CERG PolyU 50741983 References l R Agrawal T Imielinski and A Swami Min ing association rules between sets of items in large databases In Proe ACM SIGMOD Id Conf Management of Data pages 207-216 Washington D.C USA May 1993 V 880 


R Agrawal and R Srikant Fast algorithms for mining association rules In Proc. 20th Intl Conf Very Large Data Bases pages 478-499 Santiago, Chile September 1994 E Baralis and G Psaila Designing tem plates for mining association rules Journal of Intelligent Information Systems Volume 9 Number 1 pages 7-32 1997 D Cheung J Han V Ng and C.Y Wong Maintenance of discovered association rules in large databases an incremental updating tech nique In Proc Intl Conf Data Engineering pages 106-114 New Orleans Louisiana USA February 1996 M Fang N Shivakumar H Garcia-Molina R Motwani and J.D Ullman Computing iceberg queries efficiently In Proc 24th IntI Conf Very Large Data Bases pages 299-310 New York USA August 1998 J Han and Y Fu Discovery of multiple-level association rules from large databases In Proc 21st Intl Conf Very Large Data Bases pages 420-431 Zurich Switzerland September 1995 J Han and Y Fu Meta-rule-guided mining of association rules in relational databases In Proc 1st Intl Workshop on Integration of Knowledge Discovery with Deductive and Object Oriented Databases pages 39-46 Singa pore December 1995 M Kamber J Han and J.Y Chiang Metarule guided mining of multi-dimensional association rules using data cubes In Proc Intl Conf Knowledge Discovery and Data Mining pages 207-210 California USA August 1997 M Klemettinen H Mannila P Ronkainen H Toivonen and A.I Verkamo Finding inter esting rules from large sets of discovered associ ation rules In Proc 3rd Intl Conf Information and Knowledge Management pages 401-408 Gaithersburg Maryland November 1994 B Lent A Swami and J Widom Clustering association rules In Proc Intl Conf Data Engineering pages 220-231 Birmingham, Eng land April 1997 R Meo G Psaila and S Ceri A new sql-like operator for mining association rules In Proc 22th Intl Conf Very Large Data Bases pages 122-133 Mumbai India September 1996 Proc ACM SIGMOD Intl Conf Management of Data pages 13-24 Seattle Washington June 1998 14 B Ozden A Ramaswamy and A Silberschatz Cyclic association rules In Proc Intl Conf Data Engineering 1998 15 J.3 Park M.-S Chen and P.S Yu An effective hash based algorithm for mining association rules In Proc ACM SIGMOD Intl Conf Management of Data pages 175-186 San Jose CA May 1995 Min ing association rules with adjustable accuracy Technical Report IBM Research Report 1995 17 S Ramaswamy S Mahajan and A Silber schatz On the discovery of interesting patterns in association rules In Proc 24th Intl Conf Very Large Data Bases pages 368-379 New York USA August 1998 18 A Savasere, E. Omiecinski and S Navathe An efficient algorithm for mining association rules in large databases In Proc 2lst Intl Conf Very Large Data Bases pages 432-443 Zurich Switzerland September 1995 19 R Srikant and R Agrawal Mining generalized association rules In Proc 2lst Intl Conf Very Large Data Bases pages 409-419 Zurich Switzerland September 1995 20 R Srikant and R Agrawal Mining quantitative association rules in large relational tables In Proc ACM SIGMOD Intl Conf Management of Data pages 1-12 Montreal Canada June 1996 Mining association rules with item constraints In Proc 3rd Intl Conf Knowledge Discovery and Data Mining pages 67-73 Newport Beach California August 1997 Sampling large databases for association rules In Proc 22th Intl Conf Very Large Data Bases pages 134-145 Mumbai India September 1996 23 D Tsur J.D Ullman S Abitboul C Clifton R Motwani and S Nestorov Query flocks a generalization of association-rule mining In Proc ACM SIGMOD Intl Conf Management of Data pages 1-12 Seattle Washington June 1998 16 J.-S Park M.4 Chen and P.S Yu 21 R Srikant Q Vu and R Agrawal 22 H Toivonen R.J over Intl 461 Miller and Y Yang Association rules 24 M.J Zaki S Parthasarathy M Ogihara and interval data In Proc ACM SIGMOD W Li New algorithms for fast discovery of Conf Management of Data pages 452 association rules In Proc 3rd Intl Conf Tucson, Arizona USA June 1997 Knowledge Discovery and Data Mining pages 13 R Ng L.V.S Lakshmanan J Han and 283-286 Newport Beach CA USA August 1997 A Pang Exploratory mining and pruning op timizations of constrained association rules In V 881 


has possibilities to be the platform for large scale web mining We have introduced some raw results of data mining on a portal site with focus on mobile users However we have not provided the evaluation of the quality of the results yet We believe that the quality of web mining techniques depends on the application The compari son with other techniques in certain applications such as prefetching and recommendation system will be one of our future work Acknowledgements We would like to thank people from NTT Software in particular Mr Katsumi Takahashi and Dr Atsuhiro Goto for providing the log file of MIS and helpful dis cussions References R Agrawal T Imielinski A Swami 224Mining Association Rules between Sets of Items in Large Databases\224 In Proc of the ACM SIGMOD Con ference on Management of Data 1993 R Agrawal, R Srikant 224Fast Algorithms for Min ing Association Rules\224 In Proc of the VLDB Con ference 1994 R Agrawal R Srikant 223Mining Sequential Pat terns\224 221In Proceedings of Int Conf on Data En gineering March 1995 R Srikant R Agrawal 223Mining Sequential Pat terns Generalizations and performance improve ments\224 221In Proceedings of 5th Int Conf on Ex tending Database Technology March 1996 G 0 Arocena A 0 Mandelzon G A Mihaila 223Applications of a Web Query Language\224 221In Pro ceedings of WWWG April 1997 S Brin L Page 223The Anatomy of a Large Scale Hypertextual Web Search Engine\224 In Proceedings of WWW7 May 1998 A Buchner M D Mulvenna 223Discovering inter net marketing intelligence through online analyti cal Web usage mining\224 In SIGMOD Record 4 1999 R Cooley B Mobasher J Srivistava 223Data preparation for mining World Wide Web browsing patterns\224 In Journal of Knowledge and Informa tion Systems 1 1999 9 E Spertus L A Stein 223Squel A Structured Query Language for the Web In Proceedings of WWW9 May 2000 lo M Houtsma A Swami 224Set-oriented Mining of Association Rules\224 In Proc of International Con ference on Data Engineering March 1995 ll J Kleinberg 223Authoritive sources in s hyper In Proceedings of ACM linked environment\224 SIAM Symposium in Discrete Algorithm 1998 12 S Lawrwence L Giles 224Accessibility of informa tion on the web\224 In Nature Vol 400 pp 107-109 1999 E131 M Perkowitz 0 Etzioni 223Towards Adaptive Web Sites Conceptual Framework and Case Study\224, In Proceedings of WWW8 May 1999 14 Katsumi Takahashi Seiji Yokoji Nobuyuki Miura 224Location Oriented Integration of Internet Infor mation  Mobile Info Search\224 In Designing the Digital City Springer-Verlag, March 2000 15 Takayuki Tamura Masato Oguchi and Masaru Kitsuregawa 223Parallel Database Processing on a 100 Node PC Cluster Cases for Decision Sup port Query Processing and Data Mining\224 In Pro ceedings of SC97 High Performance Networking and Computing\(SuperComputing 22297 November 1997 16 S Thomas S Sarawagi 223Mining Generalized Association Rules and Sequential Patterns Using SQL Queries\224 221In Proceedings of Int Conf on Knowledge Discovery and Data Mining March 1998 17 T Yan M Jacobsen H Garcia-Molina U Dayal 223From user access patterns to dynamic hypertext linking\224 In Proceedings of WWW5 May 1996 134 


267  Feature dimensions  on which the generated rules may be dimensioned such as merchant, time and area  A volume cube C v is sufficient for deriving the instances of rule X 336 Y if it has a base dimension that represents the base of the rule, and the association conditions for qualifying X 331 Y are definable on C v For deriving cross-sale association rules from cube SaleUnits an association condition can be  for each base and feature dimension C v product A\ > 0 331 C v product B\ > 0 If the association conditions used to compute multidimensional P X  307 P Y  are definable on C v then another kind of condition, called antecedent conditions that are used to compute multidimensional  P X    are also definable on C v such as  for each base and feature dimension C v product A\ > 0 Association cube The association cube C a  for rule X 336 Y gives a volume-based measure of multidimensional association relationships that are computed from the volume cube C v and is used to derive the confidence cube and the support cube of association rules. More exactly, it maintains dimensioned P X 307 P Y i.e the number of base elements that satisfy X 331 Y Usually C a is dimensioned differently from C v In the cross-sale association rule example, the association cube is defined as  CrossSales product, product2, customer_group, merchant time, area  A cell of this cube, CrossSales product 221A\222 product2 221B\222  customer_group \221 engineer\222 merchant 221Sears\222 time 221Jan98\222 area 221Los Angeles\222\eans that there are 4,500 customers who are engineers, who bought item A as well as item B, at a Sears store in Los Angeles in Jan98 For an association cube the item dimensions underlie the counts for deriving association rules, such as dimensions product and product2 for the above CrossSales cube. The dimension product2 has the same set of values as product and we call it the mirror dimension  of product We introduce a mirror dimension simply because the cross-sale association rule involves more than one element of the item dimension  The base dimension   such as the customer dimension  underlies the base of rules. Unlike the volume cube, the association cube does not necessarily have to be dimensioned by the base dimension However, we can dimension rules by a derived dimension, each value of which identifies a group of base dimension values at bottom levels. In the cube CrossSales shown above, we introduce the hierarchical dimension customer_group   which has levels customer_profession\222, \221customer_category\222 and 'top'. A relation is also defined for relating customers and customer groups. For example, a value of the derived customer_group dimension, say, \223engineer\224, is used to identify a group of individual customers who are engineers  An association can cube also have underlying feature dimensions  such as merchant, time and area Population cube and base cube The population cube C p and the base cube C b for rule X 336 Y are also derived from the volume cube C v  C p is used to measure dimensioned P X i.e the numbers of base elements satisfying X  C b is used to represent dimensioned B For the above cross-sale rules, the population cube is defined as NumOfBuyers \(product, customer_group, merchant, time area A cell of this cube NumOfBuyers product 221A\222 customer_group \221 engineer\222 merchant 221Sears\222 time 221Jan98\222 area 221Los Angeles\222  10000  means that there are 10,000 customers who are engineers, and who bought item A in Los Angeles in Jan98. The base cube is defined as  NumOfShoppers \(customer_group, merchant, time, area Note that NumOfShoppers is not aggregated from NumOfBuyers as a single customer may buy multiple products Confidence cube and support cube The confidence of rule X 336 Y defined as P X 307 P Y  P X  and the support, defined as P X 307 P Y B are represented as cubes C f  and C s  C f  is derived from C a and C p and C s is derived from C a  and C b They have the same dimensions as C a For the above cross-sale rules the confidence cube and support cube are defined as  Confidence \(product, product2, customer_group, merchant time, area   Support  product, product2, customer_group, merchant time, area Figure 2 shows the cubes related to cross-sale association rules, with one slice of each cube. The volume-cube is generated from transactions; the 


association-cube, base-cube and population-cube are derived from the volume cube; the confidence-cube is derived from the association cube and population cube and the support-cube is derived from the associationcube and base-cube. The slices of these cubes shown in Figure 2 correspond to the same list of values in dimension merchant, time, area and customer_group  Multidimensional and multilevel rules Representing association rules by cubes and underlying cubes by hierarchical dimensions, naturally supports multidimensional and multilevel rules. Also these rules are well organized and can be easily queried  First, the cells of an association cube with different dimension values are related to association rule instances in different scopes. In the association cube CrossSales cell CrossSales product \221A\222, product2 \221B\222  customer_group 221engineer\222, merchant \221Sears\222, area \221Los Angeles\222, time 221Jan98\222 represents the following multidimensional rule x 316 Customers: buy_product\(x, \221A\222 336 buy_product\(x,\221B\222  275 customer_group = \221engineer\222, merchant = \221Sears\222, area 221Los  Angeles\222, time =  \221Jan98\222 If this cell has value 4500, and the corresponding cell in the population cube has value 10000, then this rule has confidence 0.45 Next as the cubes representing rules can have hierarchical dimensions, they represent not only multidimensional but also multi-level association rules. For example, the following cells CrossSales\(product \221A\222, product2 \221B\222, customer_group 221engineer\222, merchant \221Sears\222, area \221 California 222, time 221Jan98\222 CrossSales\(product \221A\222, product2 \221B\222, customer_group 221engineer\222, merchant \221Sears\222, area \221 California 222, time 221 Year98 222 represent association rules at different area levels \(i.e the city level and the state level\d different time levels \(i.e., the month level, the year level x 316 Customers: buy_product\(x, \221A\222 336 buy_product\(x, \221B\222  275 customer_group = \221engineer\222, merchant =  \221Sears\222, area 221 California 222, time =  \221Jan98\222 x 316 Customers: buy_product\(x, \221A\222 336 buy_product\(x, \221B\222  275 customer_group = \221engineer\222, merchant =  \221Sears\222, area 221 California 222, time =  \221 Year98 222 The cell CrossSales\(product \221A\222, product2 \221B\222,  customer_group 221top\222, merchant \221top\222, area \221top\222,  time \221top\222 represents the customer-based cross-sale association rule for all customers, merchants, areas, and times in the given range of these dimensions, expressed as x 316 Customers: buy_product\(x, \221A\222 336 buy_product\(x, \221B\222 4.3  Generating Association Rule Related Cubes The basic task of our OLAP based association rule mining framework, either at the GDOS or at an LDOS is to convert a volume cube i.e. the cube representing the purchase volumes of customers dimensioned by product  area etc, into an association cube a base cube and a population cube These cubes are then used to derive the confidence cube and the support cube of multidimensional association rule instances. The following general steps are involved in cross-sale association rule mining 267  Roll up the volume cube SaleUnits by aggregating it along merchant, time, area dimensions 267  Derive cube NumOfBuyers from SaleUnits based on the antecedent condition SaleUnits 0 267  Populate cube NumOfShoppers by the counts of customers dimensioned by merchant, area  time not by product\at satisfy the antecedent conditions 267  Derive cube CrossSales from SaleUnits based on the association conditions SaleUnits  product  p 1  0 and SaleUnits  product2  p 2 0 267  Derive cube Confidence and cube Support using cell-wise operations 214  Confidence = CrossSales  NumOfBuyers 214  Support  CrossSales  NumOfShoppers  Cubes Confidence  Support  CrossSales are dimensioned by product  product2 customer_group,merchant  time, area NumOfBuyers is dimensioned by product  customer_group, merchant time, area  NumOfShoppers is dimensioned by customer_group, merchant  time, area Rules with confidence and support that exceed specified thresholds  may be considered interesting 4.4. Rules with Conjoint Items Cubes with conjoint dimensions can be used to represent refined multidimensional association rules For example, using OLAP, we can derive association rules across time  Time-variant or temporal association rules such as 


x 316 Customers buy_product\(x,\222 A\222, \221 Jan98\222  336 buy _product\(x, \221B\222, \221 Feb98\222   275 area = \221Los Angeles\222 can be used to answer such questions as \223 How are  the sales of B in Feb98  associated with the sales of A in Jan98 224 The items in this rule are value pairs of dimensions product and time In order to specify this kind of association rule we introduce a conjoint dimension product, time and mirror it with dimension product2, time2 This allows a cell in the association cube to cross two time values. Accordingly, the cubes related to association rule mining are defined as follows Association cube  CrossSales.2 \(<product, time>, <product2, time2 customer_group, merchant, area  Population cube  NumOfBuyers.2  \(<product, time>, customer_group merchant, area Base cube  NumOfShoppers.2  \( customer_group, merchant, area Confidence cube Confidence.2 \(<product, time>, <product2, time2 customer_group, merchant, area Support  cube  Support.2  product, time>, <product2, time2 customer_group, merchant, area  The steps for generating these cubes are similar to the ones described before. The major differences are that a cell is dimensioned by, besides others product, time and product2, time2 and the template of the association condition is  SaleUnit s  product p 1 time t 1  0 and  SaleUnits  product2 p 2 time2 t 2  0 where, in any instance of this condition, the time expressed by the value of time2 is not contained in the time expressed by the value of time The template of the antecedent condition is SaleUnits   product p 1 time t 1  0 In general, other dimensions such as area may be added to the conjoint dimensions to specify more refined rules 4.5. Functional Association Rules A multidimensional association rule is functional if its predicates include variables, and the variables in the consequent are functions of those in the antecedent.  For example, functional association rules can be used to answer the following questions, where a_month and a_year are variables q  What is the percentage of people in California who buy a printer in the next month after they bought a PC x 316 Customer buy_product\(x, \221PC\222, a_ month 336 buy_product\(x, \221printer\222, a_month+1  275 area = \221California\222 q  What is the percentage of people who buy a printer within the year when they bought a PC  x 316 Customer: buy_product\(x, \221PC\222, a_ year 336 buy_product\(x, \221printer\222, a_year 275 area = \221California\222 To be distinct, we call the association rules that are not functional as instance association rules; e.g x 316 Customer: buy_product\(x,\222 PC\222, \221Jan98\222 336 buy_product\(x,\222 printer\222, \221Feb98\222  275 area =  \221California\222 Time variant, functional association rules can be derived from time variant, instance association rules through cube restructuring. Let us introduce a new dimension time_delta that has values one_day, two_day 205, at the day level, and values one_month, two_month, \205, at the month level, etc. Then, let us consider the following functional association rule related cubes Association cube  CrossSales.3 \(product, product2, customer_group merchant, area, time_delta  Population cube  NumOfBuyers.3 \(product, customer_group, merchant area Base cube  NumOfShoppers.3 \( customer_group, merchant, area Confidence cube  Confidence.3 \(product, product2, customer_group merchant, area, time_delta Support cube  Support.3 \(product, product2, customer_group, merchant area, time_delta The association cube CrossSales.3  can be constructed from CrossSales.2   The cell values of CrossSales.2  in the selected time and time2 ranges are added to the corresponding cells of CrossSales.3 For example, the count value in cell  CrossSales.2\(<PC, Jan98>, <printer, Feb98>\205 is added to cell \(bin CrossSales.3\(PC, printer, one_month,\205 


It can also be added to cell CrossSales.3\(PC, printer one_year,\205 5  Distributed and Incremental Rule Mining There exist two ways to deal with association rules 267  Static that is, to extract a group of rules from a snapshot, or a history, of data and use "as is 267  Dynamic that is, to evolve rules from time to time using newly available data We mine association rules from an e-commerce data warehouse holding transaction data. The data flows in continuously and is processed daily Mining association rules dynamically has the following benefits 267  223Real-time\224 data mining, that is, the rules are drawn from the latest transactions for reflecting the current commercial trends 267  Multilevel knowledge abstraction, which requires summarizing multiple partial results. For example association rules on the month or year basis cannot be concluded from daily mining results. In fact multilevel mining is incremental in nature 267  For scalability, incremental and distributed mining has become a practical choice Figure 3: Distributed rule mining Incremental association rule mining requires combining partial results. It is easy to see that the confidence and support of multiple rules may not be combined directly. This is why we treat them as \223views\224 and only maintain the association cube, the population cube and the base cube that can be updated from each new copy of volume cube. Below, we discuss several cases to show how a GDOS can mine association rules by incorporating the partial results computed at LDOSs 267  The first case is to sum up volume-cubes generated at multiple LDOSs. Let C v,i be the volume-cube generated at LDOS i The volume-cube generated at the GDOS by combining the volume-cubes fed from these LDOSs is 345   n i i v v C C 1  The association rules are then generated at the GDOS from the centralized C v  214  The second case is to mine local rules with distinct bases at participating LDOSs, resulting in a local association cube C a,I a local population cube C p,I  and a local base cube C b,i at each LDOS. At the GDOS, multiple association cubes, population cubes and base cubes sent from the LDOSs are simply combined, resulting in a summarized association cube and a summarized population cube, as 345   n i i a a C C 1   345   n i i p p C C 1  and 345   n i i b b C C 1  The corresponding confidence cube and support cube can then be derived as described earlier. Cross-sale association rules generated from distinct customers belong to this case In general, it is inappropriate to directly combine association cubes that cover areas a 1 205, a k to cover a larger area a In the given example, this is because association cubes record counts of customers that satisfy   customer product merchant time area Doe TV Dept Store 98Q1 California Doe VCR Dept Store 98Q1 California customer product merchant time area Doe VCR Sears 5-Feb-98 San Francisco Joe PC OfficeMax 7-Feb-98 San Francisco customer product merchant time area Doe TV Fry's 3-Jan-98 San Jose Smith Radio Kmart 14-Jan-98 San Jose Association   population      base          confidence      support cube               cube                cube         cube                cube LDOS LDOS GDOS 


the association condition, and the sets of customers contained in a 1 205, a k are not mutually disjoint. This can be seen in the following examples 214  A customer who bought A and B in both San Jose and San Francisco which are covered by different LDOSs , contributes a count to the rule covering each city, but has only one count, not two, for the rule A  336  B covering California 214  A customer \(e.g. Doe in Figure 3\who bought a TV in San Jose, but a VCR in San Francisco, is not countable for the cross-sale association rule TV  336 VCR covering any of these cities, but countable for the rule covering California. This is illustrated in Figure 3 6  Conclusions In order to scale-up association rule mining in ecommerce, we have developed a distributed and cooperative data-warehouse/OLAP infrastructure. This infrastructure allows us to generate association rules with enhanced expressive power, by combining information of discrete commercial activities from different geographic areas, different merchants and over different time periods. In this paper we have introduced scoped association rules  association rules with conjoint items and functional association rules as useful extensions to association rules The proposed infrastructure has been designed and prototyped at HP Labs to support business intelligence applications in e-commerce. Our preliminary results validate the scalability and maintainability of this infrastructure, and the power of the enhanced multilevel and multidimensional association rules. In this paper we did not discuss privacy control in customer profiling However, we did address this issue in our design by incorporating support for the P3P protocol [1 i n  ou r data warehouse. We plan to integrate this framework with a commercial e-commerce system References 1  Sameet Agarwal, Rakesh Agrawal, Prasad Deshpande Ashish Gupta, Jeffrey F. Naughton, Raghu Ramakrishnan, Sunita Sarawagi, "On the Computation of Multidimensional Aggregates", 506-521, Proc. VLDB'96 1996 2  Surajit Chaudhuri and Umesh Dayal, \223An Overview of Data Warehousing and OLAP Technology\224, SIGMOD Record Vol \(26\ No \(1\ 1996 3  Qiming Chen, Umesh Dayal, Meichun Hsu 223 OLAPbased Scalable Profiling of Customer Behavior\224, Proc. Of 1 st International Conference on Data Warehousing and Knowledge Discovery \(DAWAK99\, 1999, Italy 4  Hector Garcia-Molina, Wilburt Labio, Jun Yang Expiring Data in a Warehouse", Proc. VLDB'98, 1998 5  J. Han, S. Chee, and J. Y. Chiang, "Issues for On-Line Analytical Mining of Data Warehouses", SIGMOD'98 Workshop on Research Issues on Data Mining and Knowledge Discovery \(DMKD'98\ , USA, 1998 6  J. Han, "OLAP Mining: An Integration of OLAP with Data Mining", Proc. IFIP Conference on Data Semantics DS-7\, Switzerland, 1997 7  Raymond T. Ng, Laks V.S. Lakshmanan, Jiawei Han Alex Pang, "Exploratory Mining and Pruning Optimizations of Constrained Associations Rules", Proc ACM-SIGMOD'98, 1998 8  Torben Bach Pedersen, Christian S. Jensen Multidimensional Data Modeling for Complex Data Proc. ICDE'99, 1999 9  Sunita Sarawagi, Shiby Thomas, Rakesh Agrawal Integrating Association Rule Mining with Relational Database Systems: Alternatives and Implications", Proc ACM-SIGMOD'98, 1998   Hannu Toivonen, "Sampling Large Databases for Association Rules", 134-145, Proc. VLDB'96, 1996   Dick Tsur, Jeffrey D. Ullman, Serge Abiteboul, Chris Clifton, Rajeev Motwani, Svetlozar Nestorov, Arnon Rosenthal, "Query Flocks: A Generalization of Association-Rule Mining" Proc. ACM-SIGMOD'98 1998   P3P Architecture Working Group, \223General Overview of the P3P Architecture\224, P3P-arch-971022 http://www.w3.org/TR/WD-P3P.arch.html 1997 


Plenary Panel Session 30 XML Databases   Moderator: Michael Carey, IBM Almaden Research Center USA Panelists Adam Bosworth, Microsoft Corporation USA David De Witt University of Wisconsin-Madison, USA Alon Levy University of Washington USA Bruce Lindsay IBM Almaden Research Center USA Jennifer Widom Stanford University USA Demo Session 1 Web Query Optimizer  661 V Zadorozhny L Bright L Raschid T Urhan and M Vidal ReQueSS: Relational Querying of Semi-structured Data  664 R Sunderraman The IDEAL Approach to Internet-Based Negotiation for E-Business  666 J Hammer C Huang Y Huang C Pluempitiwiriyawej M Lee H Li L Wang Y Liu and S Su READY A High Performance Event Notification Service  668 R Gruber B Krishnamurthy, and E Panagos A Multimedia Information Server with Mixed Workload Scheduling  670 G Nerjes DISIMA An Object-Oriented Approach to Developing an Image Database System  672 V Oria T Ozsu P Iglinski B Xu and L Cheng Demo Session 2 The Collaboration Management Infrastructure  677 H Schuster D Baker A Cichocki D Georgakopoulos and M Rusinkiewicz Assisting the Integration of Taxonomic Data The LITCHI Toolkit  679 I Sutherland J Robinson S Brandt A Jones S Embury W Gray R White and F Bisby TheaterLoc: Using Information Integration Technology to Rapidly Build Virtual Applications  681 G. Barish Y.4 Chen D Dipasquo, C Knoblock S Minton I Muslea and C Shahabi Lineage Tracing in a Data Warehousing System  683 Y Cui and J Widom xiii 


The Mentor-Lite Prototype A Light-Weight Workflow Management System  685 J Weissenfels M Gillmann 0 Roth, G Shegalov and W Wonner Location Prediction and Queries for Tracking Moving Objects  687 0 Wolfson B Xu and S Chamberlain Semiorder Database for Complex Activity Recognition in Multi-Sensory Environments  689 S Bhonsle A Gupta S Santini and R Jain Tutorial 1 Web Information Retrieval  693 M Henzinger Tutorial 2 Mobile and Wireless Database Access for Pervasive Computing  694 P Chrysanthis and E Pitoura Tutorial 3 Data Mining with Decision Trees  696 J Gehrke Tutorial 4 Directories Managing Data for Networked Applications  697 D Srivastava Tutorial 5 Indexing High-Dimensional Spaces Database Support for Next Decade\222s Applications  698 S Berchtold and D Keim xiv 


 T5.I2.D100K T10.I4.D100K T15.I4.D100K T10.I6.D400K T10.I6.D800K T10.I6.D1600K Optimizations across Databases 5 0 5 10 15 20 25 30 35 40 45 Improvement COMP TREE COMP-TREE 1 2 4 8 1 2 4 8 1 2 4 8 2 4 8 2 4 8 1 2 4 8 Processors Databases Figure 5 Effect of Computation and Hash Tree Balancing good as the COMP optimization The reason that the hash tree balancing is not suf\336cient to offset inherent load imbalance in the candidate generation in this case The most effective approach is to apply both optimizations at the same time COMP-TREE The combined effect is suf\336cient to push the improvements in the 40 range in the multiple-processor case On 1 processor only hash tree balancing is bene\336cial since computation balancing only adds extra cost 5.4 Short-circuited Subset Checking Figure 6 shows the improvement due to the short-circuited subset checking optimization with respect to the unoptimized version The unoptimized version is the Apriori algorithm due to Agrawal et al 5 The results are presented for dif ferent number of processors across dif ferent databases The results indicate that while there is some improvement for databases with small transaction sizes the optimization is most effective when the transaction size is large In this case we get improvements of around 25 r the unoptimized version To gain further insight into this optimization consider 336gure 7 It shows the percentage improvement obtained per iteration on applying this optimization on the T20.I6.D100K database It shows results only for the uni-processor case r similar results were obtained on more processors We observe that as the iteration k increases there is more opportunity for shortcircuiting the subset checking and we get increasing bene\336ts of up to 60 The improvements start to fall off t the high end where the number of candidates becomes small resulting in a small hash tree and less opportunity for short-circuiting It becomes clear that is an extremely effective 15 Proceedings of the 1996 ACM/IEEE Conference on Supercomputing \(SC\22296 0-89791-854-1/96 $ 10.00 ACM 


 T5.I2.D100K T10.I6.D800K T15.I4.D100K T20.I6.D100K procs across Databases 0 5 10 15 20 25 Improvement 1 2 4 8 Figure 6 Effect of Short-circuited Subset Checking 23456789101112 Iterations 0 10 20 30 40 50 60 improvement T20.I6.D100K Figure 7  Improvement per Iteration  proc   16 Proceedings of the 1996 ACM/IEEE Conference on Supercomputing \(SC\22296 0-89791-854-1/96 $ 10.00 ACM 


optimization for larger transaction sizes and in cases where there are large number of candidate k itemsets 6 Conclusions In this paper e presented a parallel implementation of the Apriori algorithm on the SGI Power Challenge shared memory multi-processor We also discussed a set of optimizations which include optimized join and pruning computation balancing for candidate generation hash tree balancing and short-circuited subset checking We then presented experimental results on each of these Improvements of more than 40 were obtained for the computation and hash tree balancing The short-circuiting optimization was found to be extremely effective for databases with large transaction sizes Finally we reported the parallel performance of the algorithm While we d good speed-up we observed a need for parallel I/O techniques for further performance gains References  R Agra wal T  Imielinski and A Swami Database mining A performance perspecti v e  I n IEEE Trans on Knowledge and Data Engg  pages 5\(6 1993  R Agra wal T  Imielinski and A Swami Mining association rules between sets of items in lar ge databases In Proc M SIGMOD Intl Conf Management of Data  May 1993  R Agra wal H Mannila R Srikant H T o i v onen and A I V erkamo F ast disco v ery of association rules In U F et al editor Advances in Knowledge Discovery and Data Mining  MIT Press 1996  R Agra wal and J Shafer  P arallel mining of association rules design implementation and e xperience Technical Report RJ10004 IBM Almaden Research Center San Jose CA 95120 Jan 1996  R Agra wal and R Srikant F ast algorithms for mining association rules In Proc 20th VLDB Conf  Sept 1994  M Cierniak W  Li and M J Zaki Loop scheduling for heterogeneity  I n 4th IEEE Intl Symposium on High-Performance Distributed Computing also as URCS-TR 540 CS Dept Univ f Rochester  Aug 1995  M Holsheimer  M  K ersten H Mannila and H T o i v onen A perspecti v e on databases and data mining In 1st Intl Conf Knowledge Discovery and Data Mining  Aug 1995  M Houtsma and A Swami Set-oriented mining of association rules In RJ 9567  IBM Almaden Oct 1993  H Mannila H T o i v onen and I V erkamo Ef 336cient algorithms for disco v ering association rules In AAAI Wkshp Knowledge Discovery in Databases  July 1994  J S P ark M Chen and P  S Y u  A n e f fecti v e hash based algorithm for mining association rules In Proc M SIGMOD Intl Conf Management of Data  May 1995 17 Proceedings of the 1996 ACM/IEEE Conference on Supercomputing \(SC\22296 0-89791-854-1/96 $ 10.00 ACM 


 J S P ark M Chen and P  S Y u  E f 336cient parallel data mining for association rules T echnical Report RC20156 IBM T J Watson Research Center Aug 1995  G Piatetsk y-Shapiro Disco v ery  presentation and analysis of strong rules In G P S et al editor  KDD  AAAI Press 1991  A Sa v asere E Omiecinski and S Na v athe An ef 336cient algorithm for mining association rules in large databases In Proc 21st VLDB Conf  1995  M J Zaki M Ogihara S P arthasarathy  and W  Li P arallel data mining for association rules on shared-memory multi-processors Technical Report 618 Department of Computer Science University of Rochester 618 1996 18 Proceedings of the 1996 ACM/IEEE Conference on Supercomputing \(SC\22296 0-89791-854-1/96 $ 10.00 ACM 


