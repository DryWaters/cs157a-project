An Improved BP Algorithm over Out-of-order\nStreams for Big Data\n\(Invited Paper Linchao Zhuo, Heng Lu, Huang Guo, Lili Xu, Yuhua Zhang\nAbstract—Due to the difficulty of getting the association rules\nover out-of-order streams for big data, a new improved BP algo-\nrithm based on dynamic adjustment is proposed. We firstly use\na dynamic adaptive structural adjustment mechanism to change\nthe network training structure according to the environmental\nrequirements, which can automatically remove invalid training\nnode, and optimize the iterative training process. Secondly, we\nadjust three factors \(i.e. learning index, momentum factor and\nscaling factor to enhance the stability of the network.\nSimulation results show that compared with traditional BP\nalgorithm this algorithm can get more convergence times,the\nconvergence rate can be improved effectively, and finally obtain\nthe association rules over out-of-order data streams.\nKeywords—BP Algorithm, Out-of-order Streams Machine\nLearning, Big Data\nI. INTRODUCTION\nIN big data, we cannot get the association rules out of thesequence data through the current software tools within a\nreasonable time. Traditional data processing mode is that the\ncollected data is stored in a database management system and\nthen the users inquire to get the final answer. However, it\nis inappropriate for massive, endless real-time data stream[1].\nThe BP algorithm is an effective learning prediction algorithm,\nwhich is capable of massively parallel information processing,\nand has a strong ability to simulate the nonlinear system[2].It\ncan also effectively predict the data correlation over huge\namount of data stream to identify the association rules. How-\never, the traditional BP algorithm still has some deficiencies.\nIn specific applications, the learning rate of network is often\nfixed in case of increasing the number of iterations. In this\nway, network performance will deteriorate so that it will make\na great contradiction between the learning speed of algorithm\nand network stability. In addition, there are still inherent\nKun Wang,Linchao Zhuo,Heng Lu,Huang Guo,Lili Xu and Yuhua Zhang\nare with Key Lab of Broadband Wireless Communication and Sensor Net-\nwork Technology \(Nanjing University of Posts and Telecommunications Kun\nWang,kwang@njupt.edu.cn\nThis work was supported by National 973 Program of China\n\(2011CB302903 61100199, 61100213, 61170276, 61201160,\n61201222 Education\n\(20113223120007 10KJA510035 12KJD510007 NUPT Ministry\nof Education \(NYKL201107 Province\(CXLX12 0484,CXLX13 463 determine, the hidden layer structure determined\nby experience, long training time, slow convergence speed and\na poor prediction[3,4].\nIn recent years, the main improved measures to BP algo-\nrithm include the following aspects. \(1 algorithm which can improve the momentum term of the\nweight adjustment rule[5]. The weight adjustment speed can\nbe quicker and the process will be smoother. This algorith-\nm can realize quicker convergence rate and better tracking\naccuracy. \(2 process. Wen et.al proposed\na new algorithm, which can gradually increase the test data\nand the hidden units[6].\(3 et.al proposed a new algorithm called GA-BP combined\nwith genetic algorithm and BP algorithm, which can greatly\nimprove convergence speed and accuracy[7].\(4 artificial neural net-\nworks. Li et.al proposed a self-adapting algorithm of BP in\nartificial neural network[8]. It can make the selection of input\nunits, hidden units and learning rate easy in the course of\ntraining, reduce external interference and improve the self-\nadapting ability of BP neural network. Xu et.al proposed an\nimproved algorithm which is obtained by modifying the action\nfunction, regulating the learning rate and choosing the initial\nweights[9]. They also used an example about license plate\nrecognition technology, proving that the improved BP algo-\nrithm has some advantages in fast convergence speed short\nrecognition time and high recognition rate. \(5 Sigmoid function\nis in the saturation region, the weights correction in the weight\ncorrection formula becomes negligible, so that it will make\nthe network training into a saturated state which will greatly\nreduce the learning efficiency[10].\nIn order to deal with the problems described above, and\nmake BP algorithm have stronger learning ability, effectively\nreduce the hidden layer nodes, and get more convergence\ntimes, this paper presents an improved BP algorithm based on\ndynamical adjustment \(IBPDA adaptive\nstructural adjustment mechanism to adjust three factors during\nthe learning process, in order to speed up the learning response,\nto enhance the stability of the network, and finally obtain the\nassociation rules over out-of-order data streams.\n2013 8th International Conference on Communications and Networking in 


China \(CHINACOM algorithm we proposed is different from the traditional\nBP algorithm in the following aspects: firstly, a novel method\nis introduced in this algorithm to select the number of neurons.\nSecondly, we use a self-adaptive adjustment mechanism to\ndynamically change the three factors, which makes it possible\nto achieve the desired convergence with less learning iterations\nand obtain the association rules over the data stream.\nA Determination of the number of neurons\nIn the BP algorithm, the number of neurons is generally\nselected through experience value. But the number of inputting\nsamples is not always fixed. This leads to the problem that the\nnumber of neurons in the network cannot always be changed\nartificially during the training iteration Once the number of\nneurons is fixed, the network learning model remains un-\nchanged. The excessive number of neurons will cause some\nredundant nodes, which will result in the performance degra-\ndation. If the number of neurons is few, it may not converge\nduring the learning process, which will lead to the decline\nof learning precision significantly. In order to improve the\nefficiency of the algorithm, we design a method to select the\nself-adaptive number of neurons dynamically at the beginning\nstage of learning.\nSuppose that the output of the input layer node is equal to its\ninput in the network structure. The number of nodes at output\nlayer is L The number of nodes at hidden layer is Q. The\ninput of hidden layer and output layer node is the weight sum\nof the output from nodes at the previous layer, the excitation\nof each node is decided by Sigmoid activation function.\nAssume that there are N training samples in learning phase\nof the training. We use a fixed sample of input-output patterns\nto train the network. If the output of network is different from\nthe desired output, the error signal from output terminal will be\ntransmitted in back-propagation to input layer. The weighting\nfactor is constantly revised in dissemination process, so that\nthe output of node at output layer can be close to the desired\noutput. After the adjustment of weight factor of sample, we\ncan use formula \(1 neurons number\(NH 1 represents\nthe number of output neurons. NP represents the number of\ntraining samples. We can use Sigmoid activation function to\ncalculate the error in each layer. The learning phase of training\nsamples is completed until the calculation results meet the\nterminal condition.\nB. Optimal selection of neurons\nAfter the determination of the number of neurons by formula\n\(1 will\nstill exist. These redundant nodes lower the efficiency of the\nalgorithm. Therefore, we propose a novel neurons optimization\nmethod.\nThe sample input is as follows:\n\(1 group:\(x1,t1\n x2,t2 x3,t3 corresponding output.\n\(2 3 node.\n\(4 nodes and different\ntypes of activation functions. Suppose that the number of\nlearning samples is n,opiis the output of p-th learning sample\nin nodes at i-th hidden layer,opj is the output of p-th learning\nsample in nodes at j-th hidden layer..\nDefinition 1 The output of P-th sample???????\no¯i =\n1\nn =\nn?\np=1\nopi\no¯j =\n1\nn nn?\np=1\nopj\n\(2 3 o¯i\ntp = opj ? 1n\nn?\np=1\nopj = opj ? o¯j\n\(3 be\nindicated by formulas \(4 4 Rij 6 1, and the linear correlated\nmodulus betweenopiandopj is increasing and approximates to 1\nwith the module ofRij , while the decentralization coefficient\nis decreasing.\nDefinition 2 Correlation Coefficient\n?ij Rij | =\nn?\np=1\nxptp?\nn?\np=1\nx2p ×\n?\nn?\np=1\nt2p\n\(5 nodes at\nhidden layer. ?ijrepresents the correlation coefficient between\nthe i-th node and the j-th node at hidden layer. If the value\nof?ijexceeds the threshold, it means that the i-th node and the\nj-th node has the same function. So these two neurons can be\nmerged into one.\nDefinition 3 Decentralization Coefficient\nSi n1\nn\nn?\n1\no2pi ? o¯j2 \(6 small value of Simeans that the output\n841\nin i-th neuron changes very little. It is invalid to the network\ntraining. Thus this node should be deleted.\nBy using definition 1,2,3 we can effectively cut out or com-\nbine the number of nodes at hidden layer. Therefore, the times\nof repetitive training and learning can be reduced. The error\ncan be controlled within a reasonable range. The total sample\nerror reduces smoothly and the convergence rate improves. In a\ntraining period, the weights and thresholds remain unchanged\nuntil all samples have been trained once. According to the\ntotal sample error, we can modify the correlation coefficient\nand the decentralization coefficient of each neurons node, and\nthen proceed to the next cycle of training.\nC. Improved algorithm based on three factors\nThe learning propagation model in BP algorithm is changed\nwith the number of neurons, while the initial value of the\nweight vector is randomly selected based on statistical the-\nory [14]. Although this approach is helpful to increase the\nprobability of obtaining a global 


optimal value, blindness and\nrandomness still exist. In order to deal with these problems,\nwe propose a new initial value selection method. Since the\nSigmoid activation function is used in algorithm, the actual\noutput value is in the interval [0, l]. In order to avoid the\nblindness in choosing the initial weights, we use the stepwise\nsearching method. Firstly, the range interval is divided into\nN equal regions with respect to feedback network. The initial\nweight is randomly generated in the N regions to start learning.\nThen the region with the minimum error is selected to be\ndivided into N equal regions. The above step is repeated until\nthe error function value no longer reduces. The algorithm\nwill stop iteration and find the optimal point when the error\nvalue reaches the learning terminal condition. This method can\neffectively avoid sliding to a local minimum when the interval\nis quite small.\nAt the beginning of the algorithm, we calculate the actual\noutput value of each node by determined activation function.\nDefinition 4 The value of input training sample\no = f\(x 7  activation\nfunction and its derivative in closed interval [0,1] is defined\nas: {\nf1\(x x f1\(x x 8 avoid falling into local minimum.\nAccording to the above definition, when the output value of\nthe respective units is close to 0 or l, the derivative value of\nSigmoid will be close to 0. By using the definition 4, we can\nstart iterative learning in the identified learning propagation\nmodel network. The variance of performance is calculated by\ndefinition 5 and the error term in each node at output layer\nis obtained by definition 6 Then the error is transmitted in\nback-propagate propagation to the hidden layer to for iterating.\nDefinition 7 is used to calculate the error term in each node\nat hidden layer.\nDefinition 5 The function of variance of performance\nE tk ? ok 9 k=l,2,...,n ok\nis the actual output value of k-th node at output layer.\nDefinition 6 The error term in each node at output layer\n?k = o\n?\nk\(tk ? ok 1? ok tk ? ok 10 k=l,2,...,n layer ok\nis the actual output value of k-th node at output layer.\nDefinition 7 The error term in each node at hidden layer\n?k = o\n?\nh\n?\nkoutput\n?ji?k = ok\(1? ok 11 k=l,2,...,n output value at hidden layer, ok\nis the actual output value of k-th node at hidden layer.\nCompare the error value with the learning terminal con-\ndition. If the error precision meets the set requirements, the\niteration will be end up. The final result is output. Otherwise\nthe connection weight is modified by definition 8.\nDefinition 8 The correction value of connection weight\n4?ji = ??jxij \(12 13 initial learning index. The smaller ? can guarantee\na more stable convergence. The bigger ? can improve the\nconvergence speed. xji is the output from node i to node j.\nWe can adjust the connection weight by using formula \(13 12.13 with the learning rate in BP\nalgorithm,so as to ensure the change of learning factor with the\nchanging the weights .Only in this way can the BP network\nmodel be self-adapt and adapt to the increasing number of\nlearning. Therefore, we use definition 9 to implement the self-\nadaptive adjustment.\nDefinition 9 Self-adaptive adjustment mechanism\n4?\(k 5 E\(?\(k k ? 1 14 weights. E is the weight vector\nin network communication model. 5E\(?\(k k the k-th learning? is the learning index,\n? is the momentum factor. If the value of and is fixedthe\nnetwork can not get rapid and stable convergence. So we use\nformula \(14 15 to\nmodify the momentum factor.\n?\(k + 1 k k k ? 1 15 k + 1 k k k ? 1 16 the learning index and\nmomentum factor to obtain a more stable convergence with\nhigher learning efficiency. At the beginning of learning phase, a\nlarge learning index value is required to accelerate the learning\nspeed When the learning phase is close to the optimal zone,\nthe learning index must accordingly be smaller Otherwise, the\nweight would oscillate without convergence, which reduces the\nstability of network.\nThus, after determining the neuron number of input layer,\noutput layer and hidden layer based on the sample data, we set\nlearning mode and initialize layer parameters. The connection\nweights and three factors are adjusted dynamically to calculate\neach unit error and variance according to formula \(9-11 with the terminal condition of learning. If\nthe values satisfy the condition, the learning process stops If\nthe condition is unsatisfied, it returns to the learning mode to\nre-iterate the training until the error condition satisfies. Then\nwe can obtain the association rules over data flow.\nThe flow chart of improved BP algorithm is shown in Figure\n1.\nFig. 1: Algorithm flow chart\nIII. SIMULATION\nIn the simulation, the proposed IBPDA algorithm will be\ncompared with the traditional BP algorithm. We use Matlab\n7.0 to implement IBPDA Simulation settings are shown in\nTable 1.\nTABLE I: Simulation Settings\nThe number of neurons\nInput layer 10\nHidden layer 30\nOutput layer 1\nnetwork parameters\nRight Learning index 1.5\nMomentum factor 1.5\nThreshold 


learning factor 1.5\nScaling factor 1.1\nConvergence counter 1\nA. Algorithm performance evaluation indicator\nIn the traditional algorithm presented by Uedan[2], right\nlearning index, momentum factor and threshold learning index\nwill not change with the increasing iteration times upon initial-\nization. In order to discuss the efficiency of IBPDA algorithm,\nwe use the convergence rate and convergence time as the\nindexes to evaluate the algorithm performance. If the number\nof errors is within the setting range after one cycle of training\nfor all the samples, it could be judged as a convergence. Then\nwe increase the convergence counter by one. The higher value\nof Convergence counter accounts for more convergence and\nthe better performance of the algorithm.\nB Simulation results\nTo verify the performance of the improved algorithm on\ndata analysis, we gathered 20 groups of random datasets for\nsimulation experiments. We changed power index, threshold\nlearning index and right learning index, respectively. The\ncomparison shows the advantage of IBPDA on the number of\nconvergence Finally, we compared IBPDA to the traditional\nalgorithm proposed by Uedan on the convergence time through\nthe dynamic changes of three factors, which shows its higher\nalgorithm efficiency.\nWe used the rand randomly generate 20 groups\nof datasets, the discrete distribution points of raw data before\ntraining are shown in figure 2.\nFig. 2: The discrete distribution points of raw data\n843\nExperiment 1: Right learning index is dynamically changed\nby formula \(14 learning index, are fixed. According\nto the random generated data, we compared the improved BP\nalgorithm with the traditional BP algorithm to observe their\ndifferences in convergence times. The simulation results are\nshown in figure 3.\nFig. 3: Comparison of right learning index\nIn figure 3, two convergence curves show that there is not\nlarge difference between convergence times and convergence\nrate at the initial stage. Once it declines to a certain extent\n\(Convergence is 50 times convergence times before right learning index\ndeclines further. However, with the decline of right learning\nindex, two algorithms become consistent on the convergence\ntimes and convergence rate, which shows that right learning\nindex will affect the convergence while the convergence times\nare limited.\nExperiment 2 Implementing the BP algorithm with the\nrandom data, we compared the improved BP algorithm with\nthe traditional BP algorithm to observe the differences in\nconvergence times through dynamically changing momentum\nfactor by formula \(15 figure\n4.\nIn figure 4, two convergence curves show that IBPDA\nalgorithm and the traditional algorithm keep consistent on the\nconvergence times and convergence rate under the same initial\nconditions. But with the decrease of momentum factor, IBPDA\ncan get more convergence times and higher convergence rate\nthan the traditional one, and finally become stable when the\nmomentum factor is on a large level.\nExperiment 3 Threshold learning index is dynamically\nchanged by formula \(13 fixed.\nAccording to the random generated data, we compared the\nimproved BP algorithm with the traditional BP algorithm to\nobserve their differences in convergence times. The simulation\nresults are shown in figure 5.\nIn figure 5, two convergence curves show that IBPDA\nalgorithm can earlier achieve more convergence times before\nFig. 4: Comparison of momentum factor\nFig. 5: Comparison of threshold learning index\nthreshold learning index declines further. But there is no\nobvious advantage in convergence rate compared with the\ntraditional algorithm.\nExperiment 4: We dynamically change all the three factors\nat the same time. According to the random data, we compared\nthe improved BP algorithm to the traditional BP algorithm to\nobserve the differences in convergence times. The simulation\nresults are shown in figure 6.\nIn figure 6, the blue Goal curve represents the target con-\nvergence points. After implementation, the algorithm is more\neffective when the curve is closer to the blue target function.\nComparing the two convergence curves, IBPDA can reach the\nconvergences with shorter time and less convergence times.\nWe make data convergence by running the BP algorithm The\nalgorithm is more effective if the data points are closer to the\noriginal data. Through simulation experiment, the improved\nalgorithm can make effective convergence of the discrete data.\nAnd the error range can be controlled in a reasonable scope\nunder the condition where the training time is increasing. It has\na good convergence, but the expense paid for the improvement\nis the time. Using the dynamic adjustment of three factors\n844\nFig. 6: Comparison of the convergence time\ncan achieve better learning terminal condition and get a better\nnetwork performance.\nIV. CONCLUSIONS\nWe propose a new improved BP algorithm based on dy-\nnamic adjustment to get the association rules over out-of-\norder streams for big data.Considering the effect on network\nperformance that caused by the number of neurons in the BP\nalgorithm, we propose a new method of neurons optimization.\nWe use a dynamic adaptive structural adjustment mechanism\nin the learning process to speed up the learning response and\nenhance the stability of the network. In this way, we can obtain\nthe association rules over data flow. Simulation results show\nthat the convergence of the algorithm will be greatly improved\nby the dynamic change of each parameter while three factors\nare in the same initial value 


Changing three factors at the\nsame time can achieve the required convergence with limited\niteration times and short operation time. Compared with the\ntraditional BP algorithm, IBPDA has faster convergence speed\nand accuracy precision. Therefore, the network performance is\nimproved effectively.\nREFERENCES\n[1] D.Garlasu C.Technol, O.Romania. A Big Data Implementation based\non Grid Computing[C]. 2013 11th Roedunet International Conference.\nSinaia, Romania. Jan. 2013. pp.1-4.\n[2] Uedan. Optimal Linear Combination of Neural Networks for Improving\nClassification[J]. IEEE Transactions on Pattern Analysis and Machine\nIntelligence. Aug 2002. pp 207-215.\n[3] J.Leonard, Hungary, B.Tusor. Improvement of the Back-propagation\nAlgorithm for Training Neural Networks[C]. 2011 IEEE 7th International\nSymposium on Intelligent Signal Processing. Floriana, Malta. Sept 2011.\npp.337-340.\n[4] H. Zhao, J. Zhang, K. Wang. A GA-ANN Model for Air Quality\nPredicting[C]. 2010 International Computer Symposium. Tainan. Dec.\n2010. pp.693-699.\n[5] R. Xie, X. M. Wang, Y. Li. Research and Application on Improved\nBP Neural Network Algorithm[C]. 2010 the 5th IEEE Conference on\nIndustrial Electronics and Applications. Taichung, China. June 2010.\npp,1462-1466.\n[6] J. W. Wen, J. L. Zhao, S. W. Luo. The Improvements of BP Neural\nNetwork Learning Algorithm[C]. WCCC-ICSP 2000 5th International\nConference on Signal Processing Proceedings. Beijing, China. Aug 2000.\npp.1647-1649.\n[7] H. Li, C. X. Hu, Y. Li. The BP Neutral Network Model and Application\nBased on Genetic Algorithm[C].2011 International Conference on Elec-\ntric Information and Control Engineering. Wuhan, China. April 2011.\npp. 795-798.\n[8] X. F. Li, J. P. Xu. The Improvement of BP Artificial Neural Network\nAlgorithm and Its Application[C]. 2010 International Conference on E-\nBusiness and E-Government. Guangzhou, China. May 2010. pp.2568-\n2571.\n[9] Y. M. Xu, H. Zhang. Study on the Improved BP Algorithm and Ap-\nplication[C]. 2009 Asia-Pacific Conference on Information Processing.\nShenzhen China. July 2009. pp.7-10.\n[10] R.Heeht-Nielsen. Theory of Back Propagation Neural Network[C].\nInternational Joint Conference on Neural Networks, 1989. Washington,\nDC, USA. Jun 1989. pp. 593-603.\n[11] C. Ning. Research on Improved Neural Network Forecast Basing on\nGenetic Algorithm[C]. 2010 2nd International Workshop on Intelligent\nSystems and Applications. Washington, DC, USA. May 2010. pp.1-4.\n[12] X. Y. Li, B. Qin, L. Wang. A New improved BP Neural Network\nAlgorithm[C]. 2009 Second International Conference on Intelligent Com-\nputation Technology and Automation. Changsha, China. Oct 2009. pp.19-\n22.\n845\n 


TaskID=$id 8\n5 time=$t, Task=Commit Pending, TaskID=$id 10\nE6 time=$t, Ta k=Done, TaskID=$id 9,11\nTable 4 Execution sequ nce after e iminating loo -\ning\nTaskID Event sequence\n01A E1, E2, E3, E5, E6\n077 E1, E2, E4 E6\nform would generate extra logs. The extra logs contain\nevent sequences indicating the process of error message and\nfault recovery. Therefore, dierent event sequences, which\nreflect dierent system behaviours should be recovered be-\ntween dierent runs of an application with and without fail-\nures. Several approaches that identify the dierent event\nsequences in logs can be used to identify system failures.\n3.4.1 Sequence counts variance\nS que ce cou ts var ance \(SCV multiple runs of the\nsame a plication. It is defined as the ratio of the standard\ndeviation ? to the mean nSCV =\n?\nµ\n\(1 Before running an application\nperiodically on a cloud computing platform, a certain num-\nber of runs of the program without problems are required\nto setup a baseline of the SCV. After deploying the pro-\ngram, any SCV among the number of consecutive runs that\nis larger than the baseline would be considered a warning of\nfailure.\nFor example, if we setup our baseline based on three failure-\nfree runs and recover 8, 9 and 10 log sequences respectively,\nthe baseline SCV would be 0.111. If a following run gen-\nerates 10 log sequences we would calculate the SCV based\non the number 9, 10 and 10 \(number 9 and the first num-\nber 10 are from the previous two runs 0.111 that the new run is failure-free. If another\nrun has failure and generates 15 log sequence, the SCV cal-\nculated by the number 10, 10 and 15 would be 0.247, which\nis larger than the baseline. An alert would be sent to the\nadministrator for further inspection.\n3.4.2 Sequence distribution\nDierent runs of an application with and without failures\nintuitively have dierent sequence distributions. Therefore,\nstatistical methods to detect dierent distributions can be\nused for automatic failure detection. In practice, we have\nbaseline runs for each application without failure, and we\ncarry out an unpaired, 2-sided t-test \(Mann-Whitney the two runs to setup a baseline p-value. The lower\nthe p-value, th higher probability that the new run has\nfailure. Therefore, every new run will be tested with the\nprevious failure-free run to calculate the p-value. A p-value\nthat is larg r than the baseline would indicate failures.\nFor examp e, we start two failure-free baseline run with\nthe sequences distribution of “4, 2, 2” and “4, 3, 2”. The\np-value of the t-test would be 0.8137. If another run has\nthe sequence distribution of “5, 2, 2”, we perform a t-test\nbetwe 5, 2, 2” and “4, 3, 2” \(the sequence distribution\nof the previous failure-free run is\nlarger th n the baseline \(0.8137 failure has the\nsequence distribution of “6, 5, 2, 2”, the calculated p-value\nwould be 0.6533, which is smaller than the baseline. There-\nfore, the administrator would receive an alert.\nIn the following two sections, we present our three case stud-\nies on a widely used cloud computing platform, and detect\nthree injected problems with the approach presented in this\nsection.\n4. CASE STUDY SETUP\nWe present the cloud computing platform that we chose,\nthe subject programs, the experimental environment and the\ninput data.\n4.1 Cloud computing platform: Hadoop\nThis sub-section introduces Hadoop, a widely used cloud\ncomputing platform that we choose for our case studies. We\nbriefly present the programming model, and the Hadoop log\nthat we use in our case studies.\n4.1.1 Programming model\nHadoop is an open-source cloud computing platform [30]\nthat is supported by Yahoo! and is used by Amazon, AOL\nand a number of other companies as their cloud computing\nplatform. To achieve parallel execution, Hadoop implements\na programming model named MapReduce.\nMapReduce is a distributed divide-and-conquer program-\nming model. The programming model consists of two phases:\na massively parallel“Map”phase, followed by an aggregating\n“Reduce” phase. The input data for MapReduce is broken\ndown into a list of key/value pairs. Mappers \(processes as-\nsigned to the “Map” phase accept the incoming pairs, pro-\ncess them in parallel and generate intermediate key/value\npairs. All intermediate pairs having the same key are then\npassed to a specific Reducer \(process assigned to the Re-\nduce” phase output of\nall Reducers is the final result of a MapReduce run.\nTo illustrate MapReduce, we consider an example MapRe-\nduce process which counts the frequency of word lengths in\nFig. 2. An example of our approach for summarizing the run-time behaviour of BDA Apps.\non full logs to abstract the logs. Figure 2 shows an example\nof a log file with 11 log lines and how we process it. Each log\nline contains the execution time stamp, the ask t pe, and the\ntask ID. The log lines are abstracted into six different system\nevents, as shown in Figure 2-b. The “$id” and “$t” identifiers\nindicate two dynamic values.\n2 dynamic values, such as\n“$id”, to link log lines into a sequence. The linking heuristic is\nbased on the dynamic values. In our example, T skID is used\nfor log linking since TaskID represents some kind of session\n“ID”. Therefore, line 1 and line 3 in the input data in Figure 2-\na can be linked together since they 


contain the same TaskID.\nSimilar to log abstraction, we also identify the linkage among\na few IDs based on a small sample of data, then apply the\nlinking on full data.\nFigure 2-c shows the resulting sequences after abstracting\nthe logs and linking them into sequences using the TaskID\nvalues. Events E1, E2, E3, E5 and E6 are linked together \(note\nthat event E3 has been executed three times together since the same TaskID values\ne shared, among them.\n3 is\nsequence caused by loops. For example, for sequences about\nreading data from a remote node, there would be repeated\nevents about fetching the data. Without this step, similar log\nsequenc s that include different occurrences f the same ev nt\nare considered differ nt sequences, although they indicate the\nsame system behaviour in essence. These repeated events need\nt be suppressed to i prove the readability of the generated\nsummaries. Therefore, we use regular expression techniques to\ndetect and suppress the repetitions For the example sho n in\nFigure 2, our technique detects th repetition of E3 in the\nsequence “E1, E2, E3, E3 E3, E5, E6”, a d reduces this\nsequence to “E1, E2, E3, E5, E6”.\nThe sec nd step of implifying s quences is dealing with\npermutations of seq ences. The reason why permutations oc-\n405\ncur is that sometimes the events execute asynchronously on the\ndistributed computing platforms, although the corresponding\nsequences result in the same system behaviour. We group the\npermutations of a sequence together to simplify the sequences.\nFor example, if we recovered two sequences “E1, E2, E3, E4”\nand “E1, E3, E2, E4”, we would group these two sequences\ntogether in this step.\nAfter simplifying sequences, we obtain the final log se-\nquences in Figure 2-d.\nB. Generating Reports\nWe generate a log sequence report in HTML format. Fig-\nure 3 shows an example report. The report consists of two\nparts: an overview of the number of execution log sequences\nand a list of sample log lines. To ease the comparison of\ndifferent reports, each event is represented by the same unique\nnumber across the reports. An exemplar sequence from the\nanalyzed logs is shown in each row of the report to provide\ndevelopers an actual example with a realistic context.\nV. CASE STUDY\nIn this section, we present the design of the case study that\nwe performed to evaluate our approach.\nA. Subject Applications\nWe use three BDA Apps as subjects for our study. Two out\nof the three applications are chosen to be representative of\nindustrial BDA Apps. In addition, to avoid potential bias from\nthe development of the applications, we chose one application\nthat is developed from scratch and another application that is\nre-engineered by migrating a set of Perl scripts to the Hadoop\nplatform. In addition, to ease the replication of our approach\nby others, we chose a third application from Hadoop’s official\nexample package The overview of the three BDA Apps is\nshown in Table I.\n• WordCount. WordCount is an application that is released\nwith Hadoop as one of the examples of MapReduce\nprogramming. The WordCount application analyzes the\ninput files and counts the number of occurrences of each\nword in the input files.\n• PageRank. PageRank 11] is a program used by the\nGoogle Internet search engine for rating Web pages. We\nimplemented the PageRank algorithm on Hadoop.\n• JACK. JACK is an industrial application that uses data\nmining techniques to identify problems in load tests [12].\nThis tool is used in practice on a daily basis. We migrated\nJACK to the Hadoop platform.\nNote that none of the three above BDA Apps have their\nown logs and the logs that our approach uses are the plat-\nform \(Hadoop Environment Setting\nAs input data for WordCount and JACK, we use two groups\nof execution log files of a large enterprise application. The\ninput data for the PageRank application, however, comes from\nTABLE I\nOVERVIEW OF THE THREE SUBJECT BDA APPS.\nWordCount PageRank JACK\nSource Hadoop: Google: RIM:\nOfficial Developed Migrated\nExample from scratch from Perl\nDomain File Social Log\nprocessing network analysis\nInjected Machine Missing supporting Lack of\nproblem failure library disk space\nTABLE II\nOVERVIEW OF THE BDA APP’S INPUT DATA SIZE.\nWordCount & PageRank\nJACK\nLarge Data 3.69GB 1.08GB\nSmall Data 597MB 10.7MB\ntwo social-network datasets from the Stanford Large Network\nDataset Collection2. Table II summarizes the overall size of\nthe input data for the studied applications.\nTo have a proof of concept experiment setting, we per-\nformed our experiments on an in-house small cloud \(a cluster\nwith 40 cores across five machines 2.53GHz the machines is Ubuntu 9.10.\nVI. CASE STUDY RESULTS\nIn this section, we present our research questions, and the\nresults of our case study. For each research question, we\npresent the motivation of the question, our approach to answer\nthe question, and the results.\nA. RQ1: How Much Effort Reduction Does Our Approach\nProvide When Verifying the Deployment of BDA APPs in the\nCloud?\nMotivation\nDevelopers often use simple text search techniques to\nidentify troublesome events when deploying BDA Apps. For\nexample, keywords such as “kill” and fail” are often used\nto find problematic tasks in Hadoop. Due to the decision\nby underlying platform \(e.g algorithms that Hadoop uses for\nassigning tasks to machines other reasons than an actual deployment fail-\nure. Two commonly seen examples of such reasons on 


Hadoop\nplatform are “Task exceptions” and “Speculative execution”:\n• Task exceptions. When there is an exception during the\nexecution of a Hadoop task, the task will be killed and\nrestarted on another cloud node Therefore, a keyword\nsearch for “kill” on the log lines would flag such Hadoop\ndecisions as a sign of failure even though this is supposed\nto be transparent from the developer.\n• Speculative execution. The overall performance of a\nHadoop Job may slow down because of some slow-\nrunning tasks. To optimize the performance Hadoop\n2http://snap.stanford.edu/data/ last check Aug, 2012.\n406\nTotal 5 grouped sequences\nCount Grouped Sequence\n105 8, 10, 7, 0, 5, 3, 2, 1\n22 8, 10, 7, 0, 5, 6, 3, 2, 1\n21 10, 0, 5, 3, 2, 1\n2 8, 10, 7, 0, 4, 5 2, 6, 3, 1\n1 8, 10, 4, 0, 7, 5, 3, 2, 1\nshow\t sample\t nsequences\t nTotal 5 grouped sequences\nCount Grouped Sequence\n105\n8, 10, 7, 0, 5, 3, 2, 1\nSample Sequence8#8#8#10#7#0#5#3#2#1\n8\n2011-06-26 15:36:53,460 INFO org.apache.hadoop.mapred.JobInProgress:\ntip:task_201106261526_0001_m_000047 has split on node:/default-\nrack/sail215.cs.queensu.ca\n8\n2011-06-26 15:36:53,460 INFO org.apache.hadoop.mapred.JobInProgress:\ntip:task_201106261526_0001_m_000047 has split on node:/default-\nrack/sail217.cs.queensu.ca\n8\n2011-06-26 15:36:53,460 INFO org.apache.hadoop.mapred.JobInProgress:\ntip:task_201106261526_0001_m_000047 has split on node:/default-\nrack/sail213.cs.queensu.ca\n10\n2011-06-26 15:37:29,100 INFO org.apache.hadoop.mapred.JobTracker Adding task\n'attempt_201106261526_0001_m_000047_0' to tip task_201106261526_0001_m_000047,\nfor tracker tracker_sail215.cs.queensu.ca:localhost/127.0.0.1:48227'\n7 2011-06-26 15:37:29,100 INFO org.apache.hadoop.mapred.JobInProgress: Choosing data-local task task_201106261526_0001_m_000047\n0\n2011-06-26 15:37:29,101 DEBUG org.apache.hadoop.mapred.JobTracker:\ntracker_sail215.cs.queensu.ca:localhost/127.0.0.1:48227 LaunchTask:\nattempt_201106261526_0001_m_000047_0\n5\n2011-06-26 15:38:10,657 INFO org.apache.hadoop.mapred.JobInProgress: Task\n'attempt_201106261526_0001_m_000047_0' has completed\ntask_201106261526_0001_m_000047 successfully.\n3\n2011-06-26 15:51:54,749 DEBUG org.apache.hadoop.mapred.JobTracker: Marked\n'attempt_201106261526_0001_m_000047_0 from\n'tracker_sail215.cs.queensu.ca:localhost/127.0.0.1:48227'\n2 2011-06-26 15:51:55,758 DEBUG org.apache.hadoop.mapred.JobTracker: Removing task'attempt_201106261526_0001_m_000047_0'\n1\n2011-06-26 15:51:55,758 INFO org.apache.hadoop.mapred.JobTracker: Removed completed\ntask attempt_201106261526_0001_m_000047_0' from\n'tracker_sail215.cs.queensu.ca:localhost/127.0.0.1:48227'\n22 8 10, 7, 0, 5, 6, 3, 2, 1\n21 10, 0, 5, 3, 2, 1\n2 8, 10, 7, 0, 4, 5, 2, 6, 3, 1\n1 8, 10, 4, 0, 7, 5, 3, 2, 1\nFig 3. An example of our log sequences report.\nreplicates the unfinished tasks on idle machines. When\none of the replicated tasks, or the original task, is finished,\nHadoop commits the results from the task and kills other\nreplicas. This mechanism is similar to the Backup Task\nin Google’s MapReduce platform [8]. The replication\nand killing are decided at run-time and are not signs of\ndeployment failures. However, again, a keyword search\nwould flag them as a problem to be verified.\nTherefore, a simple text search for such keywords may result\nin a very large set of irrelevant log lines for manual verifi-\ncation. In this research question we investigate whether our\napproach saves any effort in the cloud deployment verification\nprocess.\nApproach\nTo evaluate our approach in terms of effort reduction, we\nuse the amount of log lines that must be examined as a\nbasic approximation of the amount of effort. We first use\nthe traditional \(most-often-used in practice today e.g., [1 that we use in this\nexperiment are common basic keywords \(“kill”, “error”, “fail”,\n“exception” and “died that are usually a sign of failure in a\nlog line. We applied this search on all three BDA Apps. We\nmeasure the number of log lines with these keywords as the\nbaseline effort.\nTo apply our approach for deployment verification, we\nfirst recover execution sequences of the three BDA Apps,\nwhen deployed on a cloud environment. We then compare\nthe two sets of log sequences \(small-scale environment and\nlarge cloud identify the delta set \(the execution sequences\nTABLE III\nEFFORT REQUIRED TO VERIFY THE CLOUD DEPLOYMENT USING OUR\nAPPROACH VERSUS THE TRADITIONAL KEYWORD SEARCH.\nUsing our approach Using keyword search\n# execution unique #log line\nsequences log events with keyword\nWordCount 19 64 467\nPageRank 55 83 1,739\nJACK 20 67 726\nTABLE IV\nREPEATED EXECUTION SEQUENCES BETWEEN RUNNING THE BDA APPS\nONCE, TWICE AND THREE TIMES.\nonce and twice  match the\nnumber of execution sequences and log events that are required\nto examine.\nResults\nThe results from Table 


III show that with our approach the\nnumber of execution log sequences \(and their corresponding\nnumber of log events 64 83 67 number of raw log lines to verify after the keyword\nsearch, i.e., the traditional approach, is 467, 1739, and 726 for\nWordCount, PageRank, and JACK respectively. Therefore, our\napproach provides 86%, 95%, and 97% effort reduction over\n407\nTABLE V\nNUMBER OF LOG LINES GENERATED BY RUNNING BDA APPS ONCE,\nTWICE AND THREE TIMES.\nonce twice three times\nWordCount 78 K 309 K 393 K\nPageRank 109 K 217 K 474 K\nJACK 237 K 419 K 666 K\nthe traditional approach, ignoring the fact that verifying a log\nline may require more effort than verifying a log event Indeed,\nverifying a log line requires checking the other log lines to get\na context of the failure, whereas the log events are already\nshown in the context \(i.e., the execution sequences approach does not incur any instrumentation\noverhead since the platform logs are already available.\nAnother interesting point is that when the input data grows,\nseveral new execution sequences and log lines appear That\nis due to the fact that the behaviour is not present with\nthe smaller runs. However, when moving to bigger runs, the\nexecution sequences will not increase dramatically. The reason\nis that most of the runs, in the abstract level, are identical.\nTherefore, the size of the final sequences to verify will show\nvery minor increases. However, the log lines to be verified\nusing traditional approach always increase proportional to\nthe data. Table IV shows the number of repeated execution\nsequences when running the same BDA App once twice, and\nthree times. In Table V, we report the number of log lines to be\nverified using the traditional approach for the same BDA App\nexecutions. The large portion of repeated execution sequences\nin the number of execution sequences vs. the rapid growth in\nthe number of log lines emphasizes the effectiveness of our\napproach in terms of effort reduction during verification of the\ndeployment of a BDA App in the cloud.\n\n\n\nOur approach reduces the verification effort by be-\ntween 86% to 97% when verifying the cloud deploy-\nment of BDA Apps.\nB. RQ2: How Precise and Informative is Our Approach When\nVerifying Cloud Deployments?\nMotivation\nAs discussed in RQ1, a flagged sequence \(using our ap-\nproach using the traditional approach We consider such flagged sequences or log\nevents, e.g., those that are related to “ Task exception and\n“Speculative execution”, as false positive results that affect\nthe precision of the approaches. Therefore in this question,\nwe compare the two approaches in terms of precision. We\nalso discuss how our approach facilitates the verification of\nthe flagged execution sequences.\nApproach\nIn this research question, we categorize the flagged logs/ex-\necution sequences by the traditional/our approach into two\nclasses: actual failures \(true positives false positives actual\nfailure, we intentionally injected three different failures, which\nare commonly observed by BDA App developers [13], into\nour experimental environment, during the execution of the\nthree subject programs. These three failures are all encountered\noften in our real-life experience of using Hadoop in the large\nindustrial clouds. The three injected failures are as follows:\n1 common\nsystem errors in distributed computing. To inject this\nfailure, we manually turn off one machine in the cluster.\n2 However,\nthe new machines in the cluster may miss supporting\nlibraries or the versions of the supporting libraries may\nbe outdated. We inject this failure by removing one\nrequired library of the analysis.\n3 disk space. Disks often run out of space while\na BDA App is running on the platform due to the large\namount of generated intermediate data. We manually fill\nup one of the machine’s disks to inject this failure.\nNext, we manually analyzed the log sequences in the HTML\nreports and identified any false positive instances.\nResults\nTable VI summarizes the number of false positives, total\nnumber of flagged sequences/log lines, and the precision of\nboth approaches. The precision of our approach is 21, 38, and\n10% for WordCount PageRank, and JACK respectively. The\nrange of the number of false positive sequences to verify is 15\nto 34 sequences \(16-49 log events WordCount,\nPageRank, and JACK respectively, while the range of the\nnumber of false positive log lines to verify is 432 to 650\nlog lines. A more detailed analysis of the results shows\nthat the only case where the precision of our approach is\noutperformed by traditional approach is with JACK BDA App\nwhere one single exception is appearing in almost every log\nline. Though the traditional approach is of higher precision,\nhowever, the same exception produces 1,467 log lines that\nmust be examined each by hand to determine their context and\ndecided whether they are problematic or not. Unfortunately,\nsince a keyword approach does not provide any abstraction all\nlog lines would need to be examined carefully, even though\nthey all are instances of the same abstract problem.\nNote that the recall for both approaches is 100%, since all\ninstances of log lines and execution sequences related to the\nfailures are identified by the keyword 


search. However, there\nare cases that deployment failure might not be possible to\ncatch by a keyword search For example, a temporary network\ncongestion may cause the pending queue to be very long, but\nlogs may record that the pending queue is too long without\nmaking use of an “error” like string in the log line. In some\ncases, a node in the cloud may even fail without recording any\nerror message [14]. In such situations our approach is even\nsuperior, since the traditional approach simply would not work\n\(as no “error” log lines are produced VI\nNUMBER OF FALSE POSITIVES, TRUE POSITIVES, AND THE PRECISION OF BOTH OUR APPROACH AND THE TRADITIONAL KEYWORD SEARCH.\nUsing our approach Using keyword search\nfalse positive true positive precision false positive true positive precision\nWordCount 15 4 21% 432 35 7%\nPageRank 34 21 38% 272 1467 84%\nJACK 18 2 10% 650 76 10%\neach log line. However, our recovered execution sequences\nstill would work, since it only depends on finding the delta\nset of sequences when switching from the small to large cloud.\nAnother interesting aspect of our approach, which was the\ninitial motivation of this work, is the extra information \(context\nof a log line that our approach provides for deployment\nverification. Even after all the reduction that is performed\nby the keyword search approach, 467 to 1,739 log lines\nshould be verified manually. As discussed earlier, there are\nfalse positives in the flagged log lines. Distinguishing them\nfrom true positives requires knowledge about the context of\neach line \(otherwise both categories contain the failure-related\nkeyword provides such context by grouping\nthe log events in one execution sequence, which speeds up\nthe understanding and verification of the event.\n\n\n\nThe precision of our approach for assisting deploy-\nment verification of BDA Apps in the cloud is compa-\nrable with the precision of the traditional approach.\nHowever, our approach provides additional context\ninformation \(execution sequences investigation of flagged\nproblems.\nVII. DISCUSSION\nIn this section, we discuss other possible features of our\napproach. In particular, one feature is to support developers\nto understand the runtime differences when migrating BDA\nApps from one platform to another.\nTo find the most optimal and economical platform for\nBDA Apps, a BDA App may need to be migrated from\none Big Data Analytics platform to another [1]. This type\nof redeployments requires similar verifications as discussed in\nthe research questions. Therefore, developers need an approach\nto help them in identifying any run-time behaviour change,\ncaused by the migration Identifying the differences between\nthe execution of the BDA App in the two environments help\nverifying the new deployment and flag any potential failure or\nanomalies.\nTo assess the ability of our approach for identifying the\npotential redeployment problems in the cloud, we migrated\nthe PageRank program from Hadoop to Pig platform. Pig [15]\nis a Hadoop-based [4] platform designed for analysis of\nmassive amounts of data. To reduce the effort of coding\nin the MapReduce paradigm, Pig provides a high-level data\nprocessing language called Pig Latin [15]. Using Pig Latin,\ndevelopers can improve their productivity by focusing on the\nprocess of data analysis instead of writing the boiler-plating\nMapReduce coding [16].\nWe ran PageRank three times on Hadoop and three times\non Pig. After examining the sequence reports we could note\nthe following differences between both platforms:\n1. Hadoop-based PageRank Has More MapReduce Steps than\nPig-based PageRank\nIn our implementation, the Hadoop-based PageRank con-\nsists of four MapReduce steps, while the Pig-based PageRank\nhas eight lines of Pig scripts \(each line is one step in the\npipeline of the data analysis real-life execu-\ntion, the Pig platform groups the eight steps of data process\ninto three MapReduce steps Since the Hadoop platform does\nnot have such a feature of grouping MapReduce steps, the\nexecution of Hadoop-based PageRank has four MapReduce\nsteps, as it is written.\n2. Hadoop-based PageRank Has More Tasks than Pig-based\nPageRank\nWe examine the distribution of sequences in both im-\nplementations of PageRank. The results show that the total\nnumber of log sequences from the Hadoop-based PageRank\nis much larger than the Pig-based PageRank. For example,\none run of the Hadoop-based PageRank generates, in total,\nover 700 execution log sequences in the Task log, while this\nnumber by the Pig-based PageRank is less than 30. This result\nindicates that the Pig-based PageRank splits the execution into\na significantly smaller number of tasks than the Hadoop-based\none. The reason is that based on the Hadoop instructions [4],\nthe number of Map Tasks should be set to a relatively large\nnumber. Therefore, in our case study, the number of Map Tasks\nis configured to 200 However, Pig optimizes the platform\nconfigurations at run-time and reduces the number of Map\nTasks to a smaller number to get better performance.\nIdentifying such differences would be extremely difficult by\nonly looking at the raw log lines. Thus our approach not only\nassists developers of BDA Apps with the first deployment in\nthe cloud but also helps them with any redeployment. We do\nnote that our approach only works when the new platform is\na derivative of the older platform \(e.g., in the case of Pig,\nit provides a high-level abstraction to create programs that\neventually still run on MapReduce. Hence we can compare\nthe eventual MapReduce execution for the Pig program against\nthe old MapReduce execution 


THREATS TO VALIDITY\nWe present the limitations and threats to validity for our\napproach in this section.\n409\nA. External Validity\nAs a proof of concept, we illustrate the use of our approach\nto address the challenges encountered in our experience. How-\never, there are still other challenges of developing and testing\nBDA Apps, such as choosing an architecture that optimizes for\ncost and performance [1]. Our approach may not be able to\naddress other challenges. Additional case studies are needed to\nbetter understand the strengths and limitations of our approach.\nWe only demonstrate the use of our approach on Hadoop,\none of the most widely adopted underlying frameworks for\nBDA Apps, with three injected failures. In practice, we have\ntried our approach on several commercial BDA Apps on\nother underlying platforms. The only effort for adapting our\napproach to other platforms of BDA Apps is to determine\nthe parameters for abstracting and linking the platform logs.\nAdditional studies on other open source and commercial\nplatforms with other types of failures are needed to study the\ngeneralizability of our approach.\nAll our experiments are carried out on a small-scale private\nexperimental cluster, which mimics the large cloud with 40\ncores. However, a typical environment for BDA Apps has\nmore than 1,000 cores, such as Amazon EC2 [17]. The logs of\nsuch large-scale clouds do lead to considerably more logs and\nmore sequences. From our experiences using our approach\nin practice on such large clouds, we have found that our\napproach performs even better than grep since the abstraction\nand sequencing leads to a drastic reduction in the amount of\ndata. Such observation was noted in our case study as well.\nOne interesting note is to support such large clouds we needed\nto re-implement our own approach to run in a cloud setting\nusing the Hadoop platform \(since we needed to process a very\nlarge amount of logs and summarize them into a small number\nof event sequences be\nlocalized, for example, linking Hadoop task logs only needs\nthe logs from one task, our approach is parallelizable with\nminimal effort.\nB. Construct Validity\nWe use abstracted execution logs to perform log clustering\nand to learn the runtime behaviour. However, the execution\nlogs may not contain all the information of the runtime\nbehaviour. Other types of dynamic information, such as execu-\ntion tracing, may have more details about the execution of the\nBDA Apps. We use the execution logs rather than other more\ndetailed dynamic information in this work, because execution\nlogs are readily available and are widely used in practice\n\(leading to no performance overhead Apps \(e.g., Hadoop the bugs in the BDA Apps but\nrather assist in reducing the effort in deploying BDA Apps\nin a cloud environment. Therefore, the platform logs provide\nmore and better information than application logs.\nIdentifying the re-occurrences of sub-sequences can also be\nused in our approach to reduce the event sequences, similar\nto our method of eliminating repetitions in Section IV. In\nour experience, we performed sub-sequence detection on the\nrecovered event sequences and found that it did not suppress\nexecution log sequences as good as our repetition elimination\napproach. In addition, the process of sub-sequence detection\nis very time consuming and slows down the overall analysis.\nTherefore, we did not use the sub-sequence detection in\npractice. For other BDA Apps and other distributed platforms,\nsub-sequence detection may be effective in reducing the log\nsequences.\nIX. RELATED WORK\nIn this section, we discuss the related work in two areas.\nA. Dynamic Software Understanding\nFischer et al. [18] instrument the source code and produce\ndifferent kinds of visualizations to track and to understand\nthe evolution of software at the module level. Kothari et\nal. [19] propose a technique to evaluate the efficiency of\nsoftware feature development by studying the evolution of\ncall graphs generated by execution traces. Ro¨thlisberger et\nal. [20] implement an IDE called Hermion, which captures\nrun-time information from an application under development.\nThe run-time information is used to understand the navigation\nand browsing of source code in an IDE.\nRecent work by Beschastnikh et al. [21] designed an\nautomated tool that infers execution models from logs. The\nmodels can be used by developers to verify and diagnose bugs.\nOur techniques aim to provide context of logs when deploying\nBDA Apps in cloud.\nIn addition, Cornelissen et al. [22] perform a systematic\nsurvey of using dynamic analysis to assist in program un-\nderstanding and comprehension. FIELD is a development\nenvironment created by Reiss et al. [23] that contains the\nfeatures to dynamically understand the execution of a program.\nHowever the environment is rather designed for traditional\napplication development, and not for the cloud deployment of\nBDA Apps.\nB. Hadoop Log Analysis\nHadoop typically runs on large-scale clusters of machines\nwith hundreds or even thousands of nodes. As a result, large\namounts of log data are generated by Hadoop. To collect and\nanalyze the large amounts of log data from Hadoop, Boulon et\nal. built Chukwa [24]. This framework monitors Hadoop clus-\nters in real-time and stores the log data in Hadoop’s distributed\nfile system \(HDFS leveraging Hadoop’s infrastructure,\nChukwa can scale to thousands of nodes in both collection\nand analysis However, Chukwa focuses more on collecting\nlogs without the ability to perform complex analysis.\nTan et al 


introduced SALSA, an approach to automatically\nanalyze Hadoop logs to construct state-machine views of the\nplatform’s execution [25]. The derived state-machines are used\nto trace the data-flow and control-flow executions. SALSA\ncomputes the histograms of the durations of each state and uses\nthese histograms to estimate the Probability Density Functions\n\(PDFs between the PDFs across machines to detect\nanomalies. Tan et al. also compare the duration of a state\nin a particular node with its past PDF to determine if the\nduration exceeds a determined threshold and can be flagged\nas an anomaly.\nAnother related work to this paper is the approach of Xu\net al. in [26], which uses the source code to understand the\nstructure of the logs. They create features based on the constant\nand variable parts of the log messages and apply the Principal\nComponent Analysis \(PCA behaviour.\nAll the above approaches are all designed for system\nadministrators in managing their large clusters. Our approach,\non the other hand, aims to assist developers in comparing the\ndeployed system on such large clusters against the develop-\nment cloud.\nX. CONCLUSION\nDevelopers of BDA Apps typically first develop their appli-\ncation with a small sample of data in a pseudo cloud, then\ndeploy the application in a large scale cloud environment.\nHowever, the larger data and more complex environments\nlead to unexpected executions of the underlying platform.\nSuch unexpected executions and their context cannot be easily\nuncovered by traditional approaches.\nIn this paper, we propose an approach to uncover the\ndifferent behaviour of the underlying platforms for BDA Apps\nbetween runs with small testing data and large real-life data\nin a cloud environment. To evaluate our approach, we perform\na case study on Hadoop, a widely used platform, with three\nBDA Apps. The case study results show the strength of our\napproach in two aspects:\n1 drastically reduces the verification effort\nby 86-97% when verifying the deployment of BDA\nApps in the cloud.\n2 the prob-\nlematic logs reported by our approach are much fewer\nthan using keyword search, which makes it possible to\nmanually explore the problematic logs.\nIn addition, our approach provides additional context informa-\ntion \(execution sequences sequences of the logs to\nrapidly understand the cause of problematic log lines.\nREFERENCES\n[1] D. Fisher, R DeLine, M. Czerwinski, and S. Drucker, “Interactions with\nbig data analytics,” interactions, vol. 19, no. 3 pp. 50–59, May 2012.\n[2] N. Wingfield, “Virtual product, real profits: Players spend on zynga’s\ngames, but quality turns some off,” Wall Street Journal.\n[3] “Ebay is powered by hadoop http://wiki.apache.org/hadoop/PoweredBy.\n[4] T. White, Hadoop: The Definitive Guide. Oreilly & Associates Inc,\n2009.\n[5] M. Isard, M. Budiu, Y. Yu, A. Birrell, and D. Fetterly, “Dryad:\ndistributed data-parallel programs from sequential building blocks,”\nSIGOPS Oper. Syst. Rev., vol. 41, no. 3, pp. 59–72, Mar. 2007.\n[6 S. Sorkin, “Large-scale, unstructured data retreival and analysis using\nsplunk,” Technical paper, Splunk Inc 2009.\n[7] P. Mundkur, V. Tuulos, and J. Flatow, “Disco: a computing platform\nfor large-scale data analytics in Erlang ’11: Proc. of the 10th ACM\nSIGPLAN workshop on Erlang. New York, NY, USA: ACM, 2011, pp.\n84–89.\n[8 J. Dean and S. Ghemawat, “Mapreduce: simplified data processing on\nlarge clusters,” Commun. ACM, vol. 51, no 1, pp. 107–113, January\n2008.\n[9] W. Shang, Z. M. Jiang, B. Adams, A. E. Hassan, M. Godfrey, M. Nasser,\nand P Flora, “An Exploratory Study of the Evolution of Communicated\nInformation about the Execution of Large Software Systems,” in WCRE\n’11: Proceedings of the 18th Working Conference on Reverse Engineer-\ning, Lero Limerick, Ireland, October 2011.\n[10] Z. M. Jiang, A. E. Hassan, G. Hamann, and P. Flora, “An automated\napproach for abstracting execution logs to execution events,” J. Softw.\nMaint. Evol., vol. 20, no 4, pp. 249–267, 2008.\n[11] L. Page, S. Brin, R. Motwani, and T. Winograd, “The pagerank citation\nranking Bringing order to the web.” Stanford InfoLab, Technical Report\n1999-66, November 1999.\n[12] Z. M. Jiang, A. E Hassan, G. Hamann, and P. Flora, “Automatic\nidentification of load testing problems,” in ICSM ’08: Proc. of 24th IEEE\nInternational Conference on Software Maintenance. Beijing, China:\nIEEE, 2008, pp. 307–316.\n[13 America’s most wanted - a metric to detect persistently faulty ma-\nchines in hadoop http://hadoopblog.blogspot.com/2010/06/americas-\nmost-wanted-metric-to-detect.html.\n[14] D. Cotroneo, S Orlando, and S. Russo, “Failure classification and\nanalysis of the java virtual machine,” in Proceedings of the 26th IEEE\nInternational Conference on Distributed Computing Systems, ser. ICDCS\n’06. Washington, DC, USA IEEE Computer Society, 2006, pp. 17–.\n[15] C. Olston, B. Reed, U. Srivastava, R. Kumar, and A. Tomkins, “Pig latin:\na not-so-foreign language for data processing,” in SIGMOD ’08: Proc.\nof the 2008 ACM SIGMOD international conference on Management of\ndata. New York, NY, USA: ACM, 2008, pp. 1099–1110.\n[16] A. F. Gates O. Natkovich, S. Chopra, P. Kamath, S. M. Narayanamurthy,\nC. Olston, B. Reed, S. Srinivasan, and U Srivastava, “Building a high-\nlevel dataflow system on top of Map-Reduce: the Pig experience,” Proc.\nVLDB Endow., vol. 2, no. 2, pp. 1414–1425, 2009.\n[17] “Amazon ec2,” https://aws.amazon.com/ec2/.\n[18] M. Fischer 


J. Oberleitner, H. Gall, and T. Gschwind, “System evolution\ntracking through execution trace analysis,” in IWPC ’05: Proceedings of\nthe 13th International Workshop on Program Comprehension. Wash-\nington, DC, USA: IEEE Computer Society, 2005, pp. 237–246.\n[19] J. Kothari, D. Bespalov, S. Mancoridis, and A. Shokoufandeh On\nevaluating the efficiency of software feature development using alge-\nbraic manifolds,” in ICSM ’08 International Conference on Software\nMaintenance, 2008, pp. 7–16.\n[20] D. Ro¨thlisberger, O. Greevy, and O Nierstrasz, “Exploiting Runtime\nInformation in the IDE,” in ICPC ’08: Proceedings of the 2008 The 16th\nIEEE International Conference on Program Comprehension. Washing-\nton, DC, USA: IEEE Computer Society, 2008, pp 63–72.\n[21] I. Beschastnikh, Y. Brun, S. Schneider, M. Sloan, and M. D. Ernst,\n“Leveraging existing instrumentation to automatically infer invariant-\nconstrained models,” in ESEC/FSE ’11: Proc. of the 19th ACM SIG-\nSOFT symposium and the 13th European conference on Foundations of\nsoftware engineering. New York, NY USA: ACM, 2011, pp. 267–277.\n[22] B. Cornelissen, A. Zaidman, A. van Deursen, L. Moonen, and\nR. Koschke, “A systematic survey of program comprehension through\ndynamic analysis,” IEEE Trans. Softw. Eng., vol. 35, pp 684–702,\nSeptember 2009.\n[23] S. Reiss, The Field programming environment: A friendly integrated\nenvironment for learning and development. Springer, 1995, vol. 298.\n[24] J. Boulon, A. Konwinski, R. Qi, A. Rabkin, E Yang, and M. Yang,\n“Chukwa, a large-scale monitoring system,” in CCA ’08: Proc. of the\nfirst workshop on Cloud Computing and its Applications, 2008, pp. 1–5.\n[25] J. Tan, X. Pan, S. Kavulya, R. Gandhi, and P. Narasimhan Salsa:\nanalyzing logs as state machines,” in WASL’08: Proceedings of the First\nUSENIX conference on Analysis of system logs. Berkeley, CA, USA:\nUSENIX Association, 2008, pp. 6–6.\n[26] W. Xu, L. Huang, A. Fox, D Patterson, and M. I. Jordan, “Detecting\nlarge-scale system problems by mining console logs,” in SOSP 09:\nProceedings of the ACM SIGOPS 22nd symposium on Operating systems\nprinciples. New York, NY, USA: ACM 2009, pp. 117–132.\n411\n 


  14  
 


Available Array Energy 60297 W-hr Battery Recharge Energy Losses 93 W-hr Shunt Energy Losses 20% Battery W-hr 187 W-hr Remaining Electrical Energy 60017 W-hr Power Conversion Losses 80% Efficiency 12003 W-hr Harness Losses \(4 Available Diurnal Load Energy \(CBE Average Load Energy Supported 67.9 W Array Area 0.20 m2 12 specifically the seismometer and magnetometer continuously while other instruments such as the heat flow probes may operate intermittently. The retroreflector does not require any thermal control resources. Telecom between the Earth and the hub or from the remote units to the hub would be during the lunar day only  Description of the Design  A thermal blanket \(MLI Silver-Teflon would be used to moderate the temperature variation of the surface. The MLI and the lunar material thermal conduction properties could be used to insulate the different ALGEP elements from the external environment  The Mars Exploration Rover thermal switch and a thermal radiator with thermal louvers would be used to reject the internally generated thermal energy. The MER Thermal Switch has the ability to transfer up to 11 W. For the hub three or four switches may be necessary, depending on the RF power output  Potentially a small electric heater/thermostat system may be needed \(on the order of 10% of the dissipated electrical energy example, the seismometer, which dissipates 1.5 W, may need a 0.15 W heater. A detailed thermal analysis would be necessary to further assess this need  The ALGEP hardware location would be dictated by the science requirements. Each ALGEP element could be either positioned on the surface or buried.  An example of a buried element would be the seismometer, while the hub could be surface mounted. In either case a surface blanket would be required. The surface blanket would minimize the lunar temperature variation, from a range of -173 to ~127  C to a range under the blanked between approximately -73 to 27  C. Initial calculations indicate that the blanket extending about 0.5 m beyond the edge of the instrument or hub would provide the temperature control of the lunar surface required to minimize the temperature variation. For the lunar night, a small electric heater may be needed to keep the ALGEP hardware within specified temperature limits  For polar region operation it is assumed that the ALGEP could operate at all times as the solar arrays would always have incident solar energy and could provide electrical power for operations.  Thus with electrical power for the instruments and hub, the thermal radiator and louvers could maintain the ALGEP hardware within specified temperature limits. Initial calculations indicate that the current conceptual thermal control design does not require electric heaters for this location  Design Rationale  The design uses MLI, thermal conduction control, electric heaters, thermal radiators thermal louvers, and a deployed surface blanket to provide thermal control to maintain the remote units and hub within specified temperature limits. The surface blanket would 


specified temperature limits. The surface blanket would minimize the temperature variation of the surface, and electric heaters would provide makeup thermal energy  Risk  The thermal subsystem design is a low to moderate risk element, as the hardware used has extensive flight experience. Although this system would be on the surface of the Moon, the environment would be space-like, with the  Figure 6  ALGEP avionics block diagram showing the power and command and data handing  interface. This is a low-power design to enable data collection during lunar night at the remote units. The hub  contains the same avionics package but does not interface with an instrument  13 exception of the infrared heating of the lunar surface therefore the space qualified thermal control hardware could provide thermal control for this mission  Command and Data Handling Subsystem Design Requirements  The ALGEP controller is designed to meet the six year mission lifetime requirement stemming from the science objectives flowing down to the mission requirements and has a technology cutoff of 2016 \(assumes a 2020 launch interface to the science instrument and the UHF radio.  The controller for the hub interfaces to the UHF and S-band radios. Each type of controller would be single string  Design Assumptions  All selected electronic parts for the controller have a path to flight hardware with a technology cutoff of 2016. There would be one ALGEP hub that has a bi-directional S-band link to Earth and a UHF receiver link to the remote instrument units. There would be four ALGEP remote units that have UHF transmitters to link to the ALGEP hub. The controllers would have an operating temperature range: -20  C to 35  C. The total ionizing dose of radiation would be 2 krads for the mission  Description of the Design  Both controller designs would incorporate low-powered Field Programmable Gate Arrays FPGAs devices and I/O drivers.  Portions of the existing MultiMission System Architecture Platform \(MSAP Engineering Unit \(REU IP provide the mission clock and alarm clock logic.  Both the hub and remote unit controllers would capture engineering data regarding temperatures, currents and voltages. Figure 6 provides an overview of the command and data handling and power subsystem architectures.  The remote units would be supplied with 2 Gb of memory and the hub would have 5 Gb of memory  Design Rationale  A low-powered avionics architecture would be achieved by developing a stand-alone controller capable of operating at various power levels. In the lowest power configuration only the mission clock and alarm clock logic would be active. Other logic, analog and I/O functions would be power strobed in the off mode during this very low-power mode. Science and engineering data would be stored in non-volatile memory elements that retain their data in the power-off mode  Risk  The controller requires engineering development to obtain the low-powered mode required for night operation However, it has been designed to incorporate components with flight heritage. A lower frequency oscillator would be used to reduce power  Telecom Subsystem 


Design Requirements  The telecom subsystem is designed to return 3.4 Gb of stored data every 16 days during lunar night in addition to 1.2 Gb of additional data collected each 24 hour period during daylight. This translates into a minimum direct-to-Earth return data rate of ~50 kbps for an 8 hour pass each Earth day for 16 days of sunlight. The subsystem must operate down to a temperature of -20  C and survive non-operational temperature of -50  C. The telecom subsystem would support two-way communications between the hub and the DSN network. It would also support two-way communications between the hub and each of the remote instrument packages on the surface. There would be a minimum 3 dB margin for the direct-to-Earth DTE  Design Assumptions  The telecom subsystem is assumed to be a single string design. The hub would have an S-band radio and antenna for two-way communications with a DSN 34 m ground station. The nominal downlink rate would be 120 kbps and the uplink rate would be 2 kbps. The surface links would be at UHF. The forward link data rate would be 8 kbps and the return rate would be 256 kbps. The maximum range for the surface links would be 100 m. All of the surface links would have line-of-sight between the units. It is assumed that the astronauts would point the Sband antenna towards Earth, within 5  of the center of Earth. This should be relatively easy to do as 5  is a very loose pointing requirement and the uplink/downlink would be marginally affected if the pointing is off by a little more than 5  A signal could be added which would use an uplink from the Earth to give a relative signal power to ensure the pointing requirement is met  Description of the Design  The telecom subsystem would use a commercial off-the-shelf S-band transponder \(L3 CXS-610 has a 5 W power amplifier and an S-band diplexer included This radio is used on GRAIL and a similar unit was used on Genesis. The diplexer would be connected to an S-band low gain antenna \(LGA be a 2-element S-band patch array with a boresight gain of 9 dB. It would be mounted on the end of one solar array on the hub and gimbaled to allow the astronaut to point it to the Earth  The hub communicates with each of the remote instrument units in UHF using a new UHF micro-transceiver. Each UHF microtransceiver would have a radio frequency output power of 50 mW. The UHF transceiver would use a halfduplex system meaning it would transmit and then listen However, it cannot do both at the same time. The UHF links would use a simple UHF monopole antenna, similar to the antennas flown on MER, and mounted on the top of the hub and remote units. The hub could only communicate with one remote unit at a time. Figure 7 shows the hub and remote unit telecom block diagrams  The S-Band telemetry link has a margin of 7.0 dB for a telemetry rate of 120 kbps into a 34 m beam waveguide ground station. The data rate could be increased to reduce 14 playback time. The surface link would have a margin exceeding 20 dB for a return data rate of 256 kbps. This includes a multipath loss allotment of 20 dB. The margin would be large because the range would be so small and all of the links would be line of sight  Design Rationale  Where available, the design of this subsystem uses heritage hardware. The UHF microtransceiver is a radio that is under development for the Mars program. It would be designed for low mass, low 


Mars program. It would be designed for low mass, lowpower and low temperature operation. The S-band antenna would be a smaller, simpler version of the antenna that flew on Deep Impact. Other antenna options would be available The UHF antennas have been flown on previous Mars lander/rover missions. There would be other alternatives for the S-band antenna and the UHF transceiver on the hub could use a larger power amplifier to talk to an orbiting asset as a backup to the S-band radio  Risk  The highest risk items for telecom would be the single string design for each element and six year design lifetime. However, the S-band radio has flight heritage. The UHF radios would be a new design but do not require new technology. They would be an engineering development 8. SYSTEM SUMMARY Mass Equipment List Table 5 shows a summary of the mass and power for each of the subsystems for the remote instrument units. The mass of one remote unit without the specified instrument is 26.6 kg with contingency specified at the subsystem level based on heritage. Table 6 shows a summary of mass and power by subsystem for the hub. The mass of the hub with contingency is 44.9 kg. Table 7 shows a mass summary for the entire package with appropriate contingencies added per the JPL  s Flight Project Practices and Design Principles Design Principles. The package totals 218.2 kg which includes four remote units, five instruments, one hub, and the carrier container\(s Table 5. Mass and power summary for remote units Remote Unit Mass CBE Contingency Total Power Power 14.3 kg 30% 18.5 kg 0.180 W 2 W Night /Day Thermal 2.0 kg 29% 2.5 kg 0 W Telecom UHF 0.2 24% 0.3 kg 2 W 40 W CDS 0.7 kg 30% 0.9 kg 1 W \(1/60th per hour 3 W Structure 3.4 kg 30% 4.4 kg 0 W Total x 1 unit 20.6 kg 29% 26.6 kg Diplexer S-Band Downconverter STDN command data to S/C CDS Pr oc es so r S-Band Exciter 9 dBi S-Band LGA UHF Downconverter Small UHF transceiver command data to S/C CDS 


to S/C CDS Pr oc es so r UHF PA UHF Monopole Command data to C&amp;DH Command dat  to C&amp;DH  Figure 7  Telecom block diagram for the S-band \(top bottom  units would be located on the hub while the remote units only contain a UHF system 15 9. OPERATIONAL SCENARIOS Daytime Operations During the day, the remote units and hub would be fully operational. The remote units would collect data from their instruments as specified by the science team and store it in the controller memory. Table 8 shows the data volume expected from each instrument. After 24 hours have passed the UHF telecom system on the hub is used to poll each of the remote units separately at the designated interval for the stored data. The hub then transmits the data direct-to-Earth using the S-band radio. This requires a maximum of eight hours at 50 kbps each day using the DSN 34 m antennas However, data rates as high as 120 kbps may be achieved reducing the downlink time. The hub has enough memory margin to accumulate data from all the instruments for three Earth days before it must downlink the data Nighttime Operations During nighttime operations, data collection at the remote units would be taking place. The magnetometer and seismometer collect data continuously. However, the seismometer operates at a reduced mode where the sampling rate is reduced to one-half of the daytime rate which has been deemed more than adequate by the science team. The remaining instruments collect data at various intervals that would be conducive to the science team  s current requirements. Telecom events would not be scheduled during the lunar night. The data accumulates in the controller memory over 16 Earth days \(~14 days at an equatorial location would be considered a worse case so two days have been added to be conservative data volume summary for each instrument during a 16 Earth day lunar night. When the sun comes up and the hub and remote units have sufficient power to run the telecom systems the hub polls each remote unit separately at a designated interval similar to operations during the day. The data would then be transmitted to Earth gradually over the next few days using the S-band radio Table 7. Mass summary for total package Unit Mass Contingency Mass + contingency 4 Remote Units 82.4 kg 29% 106.4 kg Hub 35.2 kg 27% 44.9 kg Instruments including cabling 17.3 kg 30% 22.5 kg Carrier Container\(s Total with heritage contingency 153.1 kg 29% 197.5 kg  System contingency  21.4 kg 14 Total Package  43% 218.9 kg Table 8. Instrument data volumes received at the hub over one Earth day in daylight operations Science Instrument Compressed Data Volume Received at Hub 


Volume Received at Hub Mb Seismometer 236 Magnetometer 58 Heat Flow Probe 2 Seismic Sounder 700 Instrument &amp; Hub Engineering Data 6 Total 1002 Hub Memory 5000 Margin 80  Table 6. Mass and power summary for hub Hub/Base Unit Mass CBE Contingency Total Power Power 14.3 kg 30% 18.5 kg 0.180 W 2 W Night /Day Thermal 13.4 kg 28% 17.2 kg 0 W Telecom UHF Telecom S-band 3.4 15% 3.9 kg 2 W 40 W CDS 0.7 kg 30% 0.9 kg 1 W \(1/60th per hour W \(day Structure 3.4 kg 30% 4.4 kg 0 W Total x 1 unit 35.2 kg 27% 44.9 kg 2.38 W avg at night  16 10. SUMMARY AND CONCLUSIONS The ALGEP modular design builds upon lessons learned from Apollo era ALSEP package and technology advances since that time. ALGEP meets the requirements of long lifetime survival while maintaining continuous operation of its instruments during the lunar night which can last up to 16 days at equatorial regions on the Moon. The package would be powered using solar arrays and batteries alone not requiring nuclear sources to supply power or maintain thermal control. This concept is feasible due to its lowpower operational mode at night The modular design and packaging scheme provides flexibility in deployment across all regions of the Moon including the farside pending the availability of an orbital communications asset. The relatively light ALGEP package could be accommodated on astronaut activity support vehicles, providing a method to distribute the packages across the Moon, ultimately gaining a Moon-wide understanding of lunar geophysical properties ACKNOWLEDGEMENTS This work was supported by the NASA Lunar Sortie Science Opportunities Program The work described in this publication was carried out at the Jet Propulsion Laboratory, California Institute of Technology under a contract with the National Aeronautics and Space Administration References herein to any specific commercial product process or service by trade name, trademark, manufacturer 


or otherwise does not constitute or imply its endorsement by the United States Government or the Jet Propulsion Laboratory, California Institute of Technology REFERENCES 1] NRC  Scientific Context for Exploration of the Moon   Washington D.C.: The Nat. Academies Press, 2007 2] Apollo 11 Prelim. Sci. Rept., NASA SP-214, 1969 3] Apollo 12 Prelim. Sci. Rept., NASA SP-235, 1970 4] Apollo 14 Prelim. Sci. Rept., NASA SP-272, 1971 5] Apollo 15 Prelim. Sci. Rept., NASA SP-289, 1972 6] Apollo 16 Prelim. Sci. Rept., NASA SP-315, 1972 7] Apollo 17 Prelim. Sci. Rept., NASA SP-330, 1973 8] ALSEP Termination Report, NASA RP-1036, 1979 9] NRC  New Frontiers in the Solar System: an Integrated Exploration Strategy  Decadal Survey D.C.: The Nat. Academies Press, 2003 10] International Lunar Network Science Definition Team Final Report, 2009 BIOGRAPHY Melissa Jones is a member of the technical staff in the Planetary and Lunar Mission Concepts Group at the Jet Propulsion Laboratory.  Current work includes development of small Lunar lander concepts and instrument packages to deploy on the Moon,  Report Manager for the Titan Saturn System Mission Outer Planets Flagship Mission study, and staffing various concept studies as a systems engineer on Team X, JPL  s mission design team.  Melissa graduated from Loras College with a B.S. in Chemistry and a Ph.D. in Space and Planetary Science from the University of Arkansas  Linda Herrell has a BA in math/computer science/languages \(University of Texas fluids and heat transfer \(City College of New York addition to analytical work in computer science and thermal and structural analysis, she has worked as both a payload \(instrument Earth orbiting \(Hubble Space Telescope, Earth Observing System \(EOS Cassini as Proposal Manager for several NASA science missions She currently serves as the Program Architect for NASA's New Millennium Program    Table 9. Instrument data volumes generated at the hub after 16 Earth day lunar night Science Instrument Compressed Data Volume Received at Hub Mb Seismometer 1980 Magnetometer 920 Heat Flow Probe 5 Seismic Sounder 0 Instrument &amp; Hub Engineering Data 72 Total 2977 Hub Memory 5000 Margin 40  17 Bruce Banerdt has been a research geophysicist at the California Institute of Technology's Jet Propulsion Laboratory since 1977, where he does research in planetary geophysics and instrument development for flight projects. He has been on science teams for numerous planetary missions 


on science teams for numerous planetary missions including Magellan, Mars Observer, Mars Global Surveyor and Rosetta. He was the US Project Scientist for the international Mars NetLander mission, for which he was also principal investigator of the Short-Period Seismometer experiment, and is currently the Project Scientist for the Mars Exploration Rovers. He led the Geophysics and Planetary Geology group at JPL from 1993-2005, and is the JPL Discipline Program Manager for Planetary Geosciences. He has held several visiting appointments at the Institut de Physique du Globe de Paris. He has a BS in physics and a PhD in geophysics from the University of Southern California  David Hansen is a member of the technical staff in the Communications Systems and Operations Group at the Jet Propulsion Laboratory. Current work includes the development of the telecom subsystem for the Juno project. David received a B.S. in Electrical Engineering from Cornell University and an M.S. in Electrical Engineering from Stanford University  Robert Miyake is a member of the technical staff in the Mission and Technology Development Group at the Jet Propulsion Laboratory. Current work includes the development of thermal control subsystems for interplanetary flagship missions to Jupiter and Saturn missions to Mars and the Earth Moon, and is the lead Thermal Chair for the Advanced Project Design Team Robert graduated with a B. S. from San Jose State University, with extensive graduate studies at UCLA University of Washington, and University of Santa Clara  Steve Kondos is a consultant to the Structures and Mechanisms group at the Jet Propulsion Laboratory. He currently is generating the mechanical concepts for small Lunar Landers and Lunar Science Instrument packages in support of various Lunar mission initiatives. He also provides conceptual design, mass and cost estimating support for various Team X studies as the lead for the Mechanical Subsystem Chair. Steve is also involved with various other studies and proposals and provides mentoring to several young mechanical and system engineers. He graduated with a B.S. in Mechanical Engineering from the University of California, Davis and has 28 years of experience in the aerospace field ranging from detail part design to system of systems architecture development. He has worked both in industry and in government in defense, intelligence commercial and civil activities that range from ocean and land based systems to airborne and space systems. Steve has received various NASA, Air Force, Department of Defense and other agency awards for his work on such projects as the NASA Solar Array Flight Experiment, Talon Gold, MILSTAR, Iridium, SBIRS, Mars Exploration Rovers ATFLIR, Glory Aerosol Polarimeter System and several Restricted Programs  Paul Timmerman is a senior member of technical staff in the Power Systems Group at the Jet Propulsion Laboratory Twenty-five years of experience in spacecraft design including 22 at JPL, over 250 studies in Team-X, and numerous proposals. Current assignments include a wide variety of planetary mission concepts, covering all targets within the solar system and all mission classes. Paul graduated from Loras College with a B.S. in Chemistry in 1983  Vincent Randolph is a senior engineer in the Advanced Computer Systems and 


the Advanced Computer Systems and Technologies Group at the Jet Propulsion Laboratory. Current work includes generating Command and Data Handling Subsystem conceptual designs for various proposals and Team X.  He also supports Articulation Control and Electronics design activities for the Advanced Mirror Development project. Vincent graduated from the University of California at Berkeley with a B.S. in Electrical Engineering 18  pre></body></html 


i models into time and covariate dependent dynamic counterparts  ii models and reliability analysis in a more realistic manner  iii level  whether or not functional components \(loyal generals diagnose correctly and take proper actions such as fault mask of failed components \(traitors asymmetric  iv survivability analysis. Evolutionary game modeling can derive sustainable or survivable strategies \(mapped from the ESS in EGT such as node failures such as security compromise level modeling in the so-called three-layer survivability analysis developed in Ma \(2008a this article  v offer an integrated architecture that unite reliability survivability, and fault tolerance, and the modeling approaches with survival analysis and evolutionary game theory implement this architecture. Finally, the dynamic hybrid fault models, when utilized to describe the survival of players in EGT, enhance the EGT's flexibility and power in modeling the survival and behaviors of the game players which should also be applicable to other problem domains where EGT is applicable  5. OPERATIONAL LEVEL MODELING AND DECISION-MAKING  5.1. Highlights of the Tactical and Strategic Levels  Let's first summarize what are obtainable at both tactical and strategic levels. The results at both tactical and strategic levels are precisely obtainable either via analytic or simulation optimization. With the term precisely, we mean that there is no need to assign subjective probabilities to UUUR events. This is possible because we try to assess the consequences of UUUR events \(tactical level ESS strategies \(strategic level time prediction of survivability. The following is a list of specific points. I use an assumed Wireless Sensor Network WSN  i of UUUR events: \(a actions which can be treated as censored events; \(b Cont' of Box 4.2 It can be shown that the replicator differential equations are equivalent to the classical population dynamics models such as Logistic differential equation and LotkaVolterra equation \(e.g., Kot 2001 Logistic equation, or the limited per capital growth rate is similar to the change rate of the fitness  xfxfi which can be represented with the hazard function or survivor functions introduced in the previous section on survival analysis.  This essentially connects the previous survival analysis modeling for lifetime and reliability with the EGT modeling. However, EGT provides additional modeling power beyond population dynamics or survival analysis approaches introduced in the previous section. The introduction of evolutionary theory makes the games played by a population evolvable. In other words, each player \(individual 


other words, each player \(individual agent and players interact with each other to evolve an optimized system Box 4.3. Additional Comments on DHF Models  The above introduced EGT models are very general given they are the system of ordinary differential equations. Furthermore, the choice of fitness function f\(x complexity to the differential equation system.  The system can easily be turned into system of nonlinear differential equations. The analytical solution to the models may be unobtainable when nonlinear differential equations are involved and simulation and/or numerical computation are often required  In the EGT modeling, Byzantine generals are the game players, and hybrid fault models are conveniently expressed as the strategies of players; the players may have different failure or communication behaviors Furthermore, players can be further divided into groups or subpopulations to formulate more complex network organizations. In the EGT modeling, reliability can be represented as the payoff \(fitness, the native term in EGT of the game. Because reliability function can be replaced by survivor function, survival analysis is seamlessly integrated into the EGT modeling. That is, let Byzantine generals play evolutionary games and their fitness reliability function  The evolutionary stable strategy \(ESS counterpart of Nash equilibrium in traditional games ESS corresponds to sustainable strategies, which are resistant to both internal mutations \(such as turning into treason generals or nodes such as security compromises represent survivable strategies and survivability in survivability analysis. Therefore, dynamic hybrid fault models, after the extension with EGT modeling, can be used to study both reliability and survivability 13 risks such as competing risks which can be described with CRA; \(c captured with the shard frailty.  We believe that these UUUR events are sufficiently general to capture the major factors/events in reliability, security and survivability whose occurrence probabilities are hard or impossible to obtain  Instead of trying to obtain the probabilities for these events which are infeasible in most occasions, we focus on analyzing the consequences of the events.  With survival analysis, it is possible to analyze the effects of these types of events on survivor functions. In addition, spatial frailty modeling can be utilized to capture the heterogeneity of risks in space, or the spatial distribution of risks \(Ma 2008a d UUUR events introduced previously. These approaches and models that deal with the effects of UUUR events form the core of tactical level modeling  To take advantage of the tactical level modeling approaches it is obviously necessary to stick to the survivor functions or hazard functions models. In other words, survival analysis can deal with UUUR events and offer every features reliability function provides, but reliability function cannot deal with UUUR events although survivor function and reliability function have the exactly same mathematical definition. This is the junction that survival analysis plays critical role in survivability analysis at tactical level. However, we 


recognize that it is infeasible to get a simple metric for survivability similar to reliability with tactical level modeling alone. Actually, up to this point, we are still vague for the measurement of survivability or a metric for survivability. We have not answered the question: what is our metric for survivability? We think that a precise or rigorous definition of survivability at tactical level is not feasible, due to the same reason we cited previously  the inability to determine the probabilities of UUUR events However, we consider it is very helpful to define a work definition for survivability at the tactical level  We therefore define the survivability at tactical level as a metric, Su\(t t function or reliability function with UUUR events considered. In the framework of three-layer survivability analysis, this metric is what we mean with the term survivability. The "metric" per se is not the focus of the three-layer survivability analysis. It is not very informative without the supports from the next two levels  strategic and operational models.  However, it is obvious that this metric sets a foundation to incorporate UUUR effects in the modeling at the next two levels  Due to the inadequacy of tactical level modeling, we proposed the next level approach  strategic level modeling for survivability. As expected, the tactical level is one foundation of strategic level modeling ii objectives: \(a affect survivability which survival analysis alone is not adequate to deal with; \(b survivability at tactical level is necessary but not sufficient for modeling survivability, we need to define what is meant with the term survivability at strategic level  With regard to \(a behaviors or modes which have very different consequences. These failure behaviors can be captured with hybrid fault models. However, the existing hybrid fault models in fault tolerance field are not adequate for applying to survivability analysis. There are two issues involved: one is the lack of real time notion in the constraints for hybrid fault models \(e.g., N&gt;3m+1 for Byzantine Generals problem synthesize the models after the real-time notions are introduced. The solution we proposed for the first issue is the dynamic hybrid fault models, which integrate survivor functions with traditional hybrid fault models. The solution we proposed for the second issue is the introduction of EGT modeling  With regard to \(b modeling our problem at strategic level, EGT modeling is essentially a powerful optimization algorithm.  One of the most important results from EGT modeling is the so-called evolutionary stable strategies \(ESS We map the ESS in EGT to survivable strategies in survivability analysis.   Therefore, at the strategic level, our work definition for survivability refers to the survivable strategies or sustainable strategies in the native term of EGT, which can be quantified with ESS  In addition to integrating dynamic hybrid fault models another advantage for introducing EGT modeling at strategic level is the flexibility for incorporating other node behaviors \(such as cooperative vs. non-cooperative those behaviors specified in standard hybrid fault models, as well as anthropocentric factors such as costs constraints  Without UUUR events, both tactical and strategic level 


Without UUUR events, both tactical and strategic level models default to regular reliability models. This implies that, in the absence of UUUR events, reliable strategies are sustainable or survivable.  This also implies that three-layer survivability analysis defaults to reliability analysis however, the three-layer approach does offer some significant advantages over traditional reliability analysis, as discussed in previous sections. Nevertheless, when UUUR events exist, reliable strategies and survivable strategies are different. This necessitates the next operational level modeling  5.2. Operational Level Modeling and Decision-Making  When UUUR events are involved, we cannot make real time predictions of survivability at tactical and strategic levels This implies that the implementations of survivable 14 strategies need additional measures that we develop in this section.  Box 5.1 explains the ideas involved with possibly the simplest example  Figure 4 is a diagram showing a simplified relationship between action threshold survivability \(TS survivability \(ES view since both TS and ES are multidimensional and dynamic in practice. Therefore, the sole purpose of the diagram is to illustrate the major concepts discussed above The blue curve is the survivability when survivable strategies specified by ESS are implemented at some point before time s.  The system is then guaranteed to hold survivability above ES. In contrary, if no ESS implemented before time s, then the system quickly falls below to the survivable level at around 40 time units  T i m e 0 1 0 2 0 3 0 4 0 5 0 6 0 7 0 8 0 9 0 1 0 0 Su rv iv ab ili ty M et ric S u t 0 . 0 0 . 1 0 . 2 0 . 3 0 . 4 0 . 5 0 . 6 0 . 7 0 . 8 0 . 9 1 . 0 E S S  i s  I m p lm e n t e d N o  E S S  is  I m p lm e n t e d ts E S T S  Figure 4. A Diagram Showing the Relationship Between TS and ES, as well as timing of s and t, with s &lt; t  6. SUMMARY  The previous sections discussed the major building blocks 


The previous sections discussed the major building blocks for the new life-system inspired PHM architecture. This section first identifies a few minor aspects that have not been discussed explicitly but are necessary for the implementation of the architecture, and then we summarize the major building blocks in a diagram  6.1. Missing Components and Links  Optimization Objectives  Lifetime, reliability, fault tolerance, and survivability, especially the latter two, are application dependent. Generally, the optimization of reliability and survivability are consistent; in that maximization of reliability also implies maximization of survivability. However, when application detail is considered, optimization of lifetime is not necessarily consistent with the optimization of reliability. Consider the case of the monitoring sensor network as an example. The network reliability is also dependent on connectivity coverage, etc, besides network lifetime. What may be further complicated is the time factor. All of the network metrics are time-dependent. A paradoxical situation between lifetime and reliability could be that nodes never 'sleep                                                   


          Box 5.1 Operational Level Modeling  Assuming that the ESS solution for a monitoring sensor network can be expressed with the following simple algebraic conditions: survivability metric at tactical level SU = 0.7, Router-Nodes in the WSN &gt; 10%, Selfish Nodes &lt; 40%. Even with this extremely simplified scenario, the ESS strategies cannot be implemented because we do not know when the actions should be taken to warrant a sustainable system.  These conditions lack a correlation with real time  The inability to implement ESS is rooted in our inability to assign definite probabilities to UUUR events, which implies that we cannot predict when something sufficiently bad will jeopardize the system survivability What we need at the operational level is a scheme to ensure ESS strategy is in place in advance  The fundamental idea we use to implement the ESS strategy is to hedge against the UUUR events. The similar idea has been used in financial engineering and also in integrated pest management in entomology. This can be implemented with the following scheme  Let us define a pair of survivability metrics: one is the expected survivability \(ES threshold survivability or simply threshold survivability \(TS ES is equivalent to the survivability metric at tactical level. ES corresponds to ESS at strategic level, but they are not equivalent since ESS is strategy and ES is survivability. TS is the survivability metric value \(at tactical level and TS can be obtained from strategic level models. For example, TS = SU\(s t condition for the implementation of ESS. In other words, the implementation of strategies that ensures TS at time s will guarantee the future ES level at time t.  To make the implementation more reliable and convenient multiple dynamic TSs can be computed at time s1, s2 sk, with si &lt; t for all i.  These TS at times s1, s2, ..., sk should be monitored by some evaluation systems  Unlike tactical and strategic levels, the operational level modeling is approximate. The term "approximate means that we cannot predict the real time survivability or we do not know the exact time an action should be taken. Instead, the action is triggered when the monitored survivability metric SU\(r survivability \(TS scheme of TS and ES, we ensure the ES by taking preventative actions \(prescribed by ESS and triggered by the TS consequences of UUUR events  Figure 4 is a diagram showing the above concepts and the decision-making process involved 15 This wakefulness \(never 'sleep short period but at the expense of network lifetime. Of course, when the network is running out of lifetime, network reliability ultimately crashes. This example reminds us that 


reliability ultimately crashes. This example reminds us that multi-objective optimization should be the norm rather than exception  Constraints and Extensions  Many application specific factors and constraints are ignored in this article. For example, we mentioned about spatial heterogeneity of environment, but never present a mathematical description The spatial heterogeneity can be modeled with the so-called spatial frailty in multivariate survival analysis \(Ma 2008a  Evolutionary Algorithm  Evolutionary game modeling when implemented in simulation, can be conveniently implemented with an algorithm similar to Genetic Algorithms \(GA ESS in the evolutionary game model with simulation is very similar to GA. Dynamic populations, in which population size varies from generation to generation \(Ma &amp; Krings 2008f of node failures. Another issue to be addressed is the synchronous vs. asynchronous updating when topology is considered in the simulation. This update scheme can have profound influences on the results of the simulation. Results from cellular automata computing should be very useful for getting insights on the update issue  6.2. Summary and Perspective  To recapture the major points of the article, let us revisit Figure 3, which summarizes the principal modules of the proposed life-system inspired PHM architecture. The main inspiration from life systems is the notion of individuals and their assemblage, the population. Population is an emergent entity at the next level and it has emergent properties which we are often more concerned with. Survival analysis, which has become a de facto standard in biomedicine, is particularly suitable for modeling population, although it is equally appropriate at individual level. Therefore, survival analysis \(including competing risks analysis and multivariate survival analysis comprehensively in the context of PHM in a series of four papers presented at IEEE AeroSpace 2008 \(Ma &amp; Krings 2008a, b, c, &amp; d proposed architecture. Survival analysis constitutes the major mathematical tools for analyzing lifetime and reliability, and also forms the tactical level of the three-layer survivability analysis  Besides lifetime and reliability, two other major modules in Figure 3 are fault tolerance and survivability. To integrate fault tolerance into the PHM system, Dynamic Hybrid Fault DHF 2008e, Ma 2008a make real-time prediction of reliability more realistic and make real-time prediction of fault tolerance level possible DHF models also unite lifetime, reliability and fault tolerance under a unified modeling framework that consists of survival analysis and evolutionary game theory modeling  DHG models also form the partial foundation, or strategic level, for the three-layer survivability analysis. At the strategic level, the Evolutionary Stable Strategies \(ESS which is mapped to survivable or sustainable strategies, can be obtained from the evolutionary game theory based DHF models. When there is not any UUUR event involved reliability and survivability are consistent, and reliable strategies are survivable. In this case, the strategic level modeling up to this point is sufficient for the whole PHM system modeling, and there is no need for the next level  operational level modeling  When there are UUUR events in a PHM system, the 


When there are UUUR events in a PHM system, the inability to determine the occurrence probabilities of UUUR events makes the operational level modeling necessary Then the principle of hedging must be utilized to deal with the "hanging" uncertainty from UUUR events. In this case reliability strategies are not necessarily survivable strategies At the operational level modeling, a duo of survivability metrics, expected survivability \(ES survivability \(TS the survivable strategies \(ESS level are promptly implemented based on the decisionmaking rules specified with the duo of survivability metrics then the PHM system should be able to endure the consequences of potentially catastrophic UUUR events. Of course, to endure such catastrophic events, the cost may be prohibitively high, but the PHM system will, at least, warn decision-makers for the potentially huge costs.  It might be cheap to just let it fail  Figure 3 also shows several other modules, such as security safety, application systems \(such as Automatic Logistics CBM+, RCM, Life cycle cost management, Real-time warning and alert systems architectures, but we do not discuss in this paper. Generally the new architecture should be fully compatible with existing ones in incorporating these additional modules. One point we stressed is that PHM system can be an ideal place to enforce security policies. Enforcing security policies can be mandatory for PHM systems that demand high security and safety such as weapon systems or nuclear plant facilities.  This is because maintenance, even without human-initiated security breaches, can break the security policies if the maintenance is not planned and performed properly  In perspective, although I did not discuss software issues in this paper, the introduced approaches and models should provide sufficient tools for modeling software reliability and survivability with some additional extension. Given the critical importance of software to modern PHM systems, we present the following discussion on the potential extension to software domain. Specifically, two points should be noted: \(1 architecture to software should be a metric which can 16 replace the time notion in software reliability; I suggest that the Kolmogorov complexity \(e.g., Li and Vitanyi 1997 be a promising candidate \(Ma 2008a change is because software does not wear and calendar time for software reliability usually does not make much sense 2 software reliability modeling.  Extending to general survivability analysis is not a problem either. In this article I implicitly assume that reliability and survivability are positively correlated, or reliability is the foundation of survivability. This positive correlation does not have to be the case. A simplified example that illustrates this point is the 'limit order' in online stock trading, in which limit order can be used in either direction: that stock price is rising or falling.  The solution to allow negative or uncorrelated relationships between reliability and survivability are very straightforward, and the solutions are already identified in previous discussions. Specifically, multiple G-functions and multi-stage G-functions by Vincent and Brown \(2005 very feasible solution, because lifetime, reliability and survivability may simply be represented with multiple Gfunctions. Another potential solution is the accommodation of the potential conflicts between reliability and survivability with multi-objective GA algorithms, which I previously suggested to be used as updating algorithms in the optimization of evolutionary games  


 The integration of dynamic hybrid fault models with evolutionary game modeling allows one to incorporate more realistic and detailed failure \(or survival individual players in an evolutionary game. This is because dynamic hybrid fault models are supported by survival analysis modeling, e.g., time and covariate dependent hazard or survivor functions for individual players. If necessary, more complex survival analysis modeling including competing risks analysis and multivariate survival analysis, can be introduced.  Therefore, any field to which evolutionary game theory is applicable may benefit from the increased flexibility in modeling individual players.  Two particularly interesting fields are system biology and ecological modeling.  In the former field, dynamic hybrid fault models may find important applications in the study of biological networks \(such as gene, molecular, and cell networks 2008g conjecture that explains the redundancy in the universal genetic code with Byzantine general algorithm. In addition they conducted a comparative analysis of bio-robustness with engineering fault tolerance, for example, the strong similarity between network survivability and ecological stability \(Ma &amp; Krings 2008g survivability analysis can be applied for the study of survivals or extinctions of biological species under global climate changes \(Ma 2008b  In this paper, I have to ignore much of the details related to the implementation issues to present the overall architecture and major approaches clearly and concisely. To deal with the potential devils in the implementation details, a well funded research and development team is necessary to take advantages of the ideas presented here. On the positive side I do see the great potential to build an enterprise PHM software product if there is sufficient resource to complete the implementation. Given the enormous complexity associated with the PHM practice in modern engineering fields, it is nearly impossible to realize or even demonstrate the benefits of the architecture without the software implementation. The critical importance of PHM to mission critical engineering fields such as aerospace engineering, in turn, dictates the great value of such kind software product  6.3. Beyond PHM  Finally, I would like to raise two questions that may be interested in by researchers and engineers beyond PHM community. The first question is: what can PHM offer to other engineering disciplines? The second question is: what kinds of engineering fields benefit most from PHM? Here, I use the term PHM with the definition proposed by IEEE which is quoted in the introduction section of the paper  As to the first question, I suggest software engineering and survivability analysis are two fields where PHM can play significant roles. With software engineering, I refer to applying PHM principles and approaches for dealing with software reliability, quality assurance, and even software process management, rather than building PHM software mentioned in the previous subsection. For survivability analysis, borrowing the procedures and practices of PHM should be particularly helpful for expanding its role beyond its originating domain \(network systems that control critical national infrastructures is a strong advocate for the expansion of survivability analysis to PHM. Therefore, the interaction between PHM and survivability analysis should be bidirectional. Indeed, I see the close relationships between PHM, software engineering, and survivability as well-justified because they all share some critical issues including reliability survivability, security, and dependability  


 The answer to the second question is much more elusive and I cannot present a full answer without comparative analysis of several engineering fields where PHM has been actively practiced. Of course, it is obvious that fields which demand mission critical reliability and dependability also demand better PHM solutions. One additional observation I would like to make is that PHM seems to play more crucial roles for engineering practices that depend on the systematic records of 'historical' data, such as reliability data in airplane engine manufacturing, rather than on the information from ad hoc events.  This may explain the critical importance of PHM in aerospace engineering particularly in commercial airplane design and manufacturing.  For example, comparing the tasks to design and build a space shuttle vs. to design and manufacture commercial jumbo jets, PHM should be more critical in the latter task  17    Figure 2. States of a monitoring sensor node and its failure modes \(after Ma &amp; Krings 2008e     Figure 3. Core Modules and their Relationships of the Life System Inspired PHM Architecture    REFERENCES  Adamides, E. D., Y. A. Stamboulis, A. G. Varelis. 2004 Model-Based Assessment of Military Aircraft Engine Maintenance Systems Model-Based Assessment of Military Aircraft Engine Maintenance Systems. Journal of the Operational Research Society, Vol. 55, No. 9:957-967  Anderson, R. 2001. Security Engineering. Wiley  Anderson, R. 2008. Security Engineering. 2nd ed. Wiley  Bird, J. W., Hess, A. 2007.   Propulsion System Prognostics R&amp;D Through the Technical Cooperation Program Aerospace Conference, 2007 IEEE, 3-10 March 2007, 8pp  Bock, J. R., Brotherton, T., W., Gass, D. 2005. Ontogenetic reasoning system for autonomic logistics. Aerospace Conference, 2005 IEEE 5-12 March 2005.Digital Object Identifier 10.1109/AERO.2005.1559677  Brotherton, T., P. Grabill, D. Wroblewski, R. Friend, B Sotomayer, and J. Berry. 2002. A Testbed for Data Fusion for Engine Diagnostics and Prognostics. Proceedings of the 2002 IEEE Aerospace Conference  Brotherton, T.; Grabill, P.; Friend, R.; Sotomayer, B.; Berry J. 2003. A testbed for data fusion for helicopter diagnostics and prognostics. Aerospace Conference, 2003. Proceedings 2003 IEEE  Brown, E. R., N. N. McCollom, E-E. Moore, A. Hess. 2007 Prognostics and Health Management A Data-Driven Approach to Supporting the F-35 Lightning II. 2007 IEEE AeroSpace Conference  Byington, C.S.; Watson, M.J.; Bharadwaj, S.P. 2008 Automated Health Management for Gas Turbine Engine Accessory System Components. Aerospace Conference 2008 IEEE, DOI:10.1109/AERO.2008.4526610 


2008 IEEE, DOI:10.1109/AERO.2008.4526610 Environment Covariates &amp; Spatial Frailty Applications: AL; Life Cycle Mgmt; Real-Time Alerts CBM+, RCM, TLCSM; Secret Sharing and Shared Control 18 Chen, Y. Q., S. Cheng. 2005. Semi-parametric regression analysis of mean residual life with censored survival data Biometrika \(2005  29  Commenges, D. 1999. Multi-state models in Epidemiology Lifetime Data Analysis. 5:315-327  Cook, J. 2004. Contrasting Approaches to the Validation of Helicopter HUMS  A Military User  s Perspective Aerospace Conference, 2004 IEEE  Cook, J. 2007. Reducing Military Helicopter Maintenance Through Prognostics. Aerospace Conference, 2007 IEEE Digital Object Identifier 10.1109/AERO.2007.352830  Cox, D. R. 1972. Regression models and life tables.  J. R Stat. Soc. Ser. B. 34:184-220  Crowder, M. J.  2001. Classical Competing Risks. Chapman amp; Hall. 200pp  David, H. A. &amp; M. L. Moeschberger. 1978. The theory of competing risks. Macmillan Publishing, 103pp  Ellison, E., L. Linger, and M. Longstaff. 1997.  Survivable Network Systems: An Emerging Discipline, Carnegie Mellon, SEI, Technical Report CMU/SEI-97-TR-013  Hanski, I. 1999. Metapopulation Ecology. Oxford University Press  Hallam, T. G. and S. A. Levin. 1986. Mathematical Ecology. Biomathematics. Volume 17. Springer. 457pp  Hess, A., Fila, L. 2002.  The Joint Strike Fighter \(JSF concept: Potential impact on aging aircraft problems Aerospace Conference Proceedings, 2002. IEEE. Digital Object Identifier: 10.1109/AERO.2002.1036144  Hess, A., Calvello, G., T. Dabney. 2004. PHM a Key Enabler for the JSF Autonomic Logistics Support Concept. Aerospace Conference Proceedings, 2004. IEEE  Hofbauer, J. and K. Sigmund. 1998. Evolutionary Games and Population Dynamics. Cambridge University Press 323pp  Hougaard, P. 2000. Analysis of Multivariate Survival Data Springer. 560pp  Huzurbazar, A. V. 2006. Flow-graph model for multi-state time-to-event data. Wiley InterScience  Ibrahim, J. G., M. H. Chen and D. Sinha. 2005. Bayesian Survival Analysis. Springer. 481pp  Kacprzynski, G. J., Roemer, M. J., Hess, A. J. 2002. Health management system design: Development, simulation and cost/benefit optimization. IEEE Aerospace Conference Proceedings, 2002. DOI:10.1109/AERO.2002.1036148  Kalbfleisch, J. D., and R. L. Prentice, 2002. The Statistical Analysis of Failure Time Data. Wiley-InterScience, 2nd ed  Kalgren, P. W., Byington, C. S.   Roemer, M. J.  2006 Defining PHM, A Lexical Evolution of Maintenance and Logistics. Systems Readiness Technology Conference 


Logistics. Systems Readiness Technology Conference IEEE. DOI: 10.1109/AUTEST.2006.283685  Keller, K.; Baldwin, A.; Ofsthun, S.; Swearingen, K.; Vian J.; Wilmering, T.; Williams, Z. 2007. Health Management Engineering Environment and Open Integration Platform Aerospace Conference, 2007 IEEE, Digital Object Identifier 10.1109/AERO.2007.352919  Keller, K.; Sheahan, J.; Roach, J.; Casey, L.; Davis, G Flynn, F.; Perkinson, J.; Prestero, M. 2008. Power Conversion Prognostic Controller Implementation for Aeronautical Motor Drives. Aerospace Conference, 2008 IEEE. DOI:10.1109/AERO.2008.4526630  Klein, J. P. and M. L. Moeschberger. 2003. Survival analysis techniques for censored and truncated data Springer  Kingsland, S. E. 1995. Modeling Nature: Episodes in the History of Population Ecology. 2nd ed., University of Chicago Press, 315pp  Kot, M. 2001. Elements of Mathematical Ecology Cambridge University Press. 453pp  Krings, A. W. and Z. S. Ma. 2006. Fault-Models in Wireless Communication: Towards Survivable Ad Hoc Networks Military Communications Conference, 23-25 October, 7 pages, 2006  Lamport, L., R. Shostak and M. Pease. 1982. The Byzantine Generals Problem. ACM Transactions on Programming Languages and Systems, 4\(3  Lawless, J. F. 2003. Statistical models and methods for lifetime data. John Wiley &amp; Sons. 2nd ed  Line, J. K., Iyer, A. 2007. Electronic Prognostics Through Advanced Modeling Techniques. Aerospace Conference 2007 IEEE. DOI:10.1109/AERO.2007.352906  Lisnianski, A., Levitin, G. 2003. Multi-State System Reliability: Assessment, Optimization and Applications World Scientific  Liu, Y., and K. S. Trivedi. 2006. Survivability Quantification: The Analytical Modeling Approach, Int. J of Performability Engineering, Vol. 2, No 1, pp. 29-44  19 Luchinsky, D.G.; Osipov, V.V.; Smelyanskiy, V.N Timucin, D.A.; Uckun, S. 2008. Model Based IVHM System for the Solid Rocket Booster. Aerospace Conference, 2008 IEEE.DOI:10.1109/AERO.2008.4526644  Lynch, N. 1997. Distributed Algorithms. Morgan Kaufmann Press  Ma, Z. S. 1997. Demography and survival analysis of Russian wheat aphid. Ph.D. dissertation, Univ. of Idaho 306pp  Ma, Z. S. 2008a. New Approaches to Reliability and Survivability with Survival Analysis, Dynamic Hybrid Fault Models, and Evolutionary  Game Theory. Ph.D. dissertation Univ. of Idaho. 177pp  Ma, Z. S. 2008b. Survivability Analysis of Biological Species under Global Climate Changes: A New Distributed and Agent-based Simulation Architecture with Survival Analysis and Evolutionary Game Theory. The Sixth 


International Conference on Ecological Informatics. Dec 25, 2008. Cancun, Mexico  Ma, Z. S. and E. J. Bechinski. 2008. A Survival-Analysis based  Simulation Model for Russian Wheat Aphid Population Dynamics. Ecological Modeling, 216\(2 332  Ma, Z. S. and A. W. Krings. 2008a.  Survival Analysis Approach to Reliability Analysis and Prognostics and Health Management \(PHM  AIAA AeroSpace Conference, March 1-8, 2008, Big Sky, MT, 20pp  Ma, Z. S. and A. W. Krings. 2008b. Competing Risks Analysis of Reliability, Survivability, and Prognostics and Health Management \(PHM  AIAA AeroSpace Conference, March 1-8, 2008.  Big Sky, MT. 20pp  Ma, Z. S. and A. W. Krings. 2008c. Multivariate Survival Analysis \(I Dependence Modeling", Proc. IEEE  AIAA AeroSpace Conference, March 1-8, 2008, Big Sky, MT. 21pp  Ma, Z. S. and A. W. Krings., R. E. Hiromoto. 2008d Multivariate Survival Analysis \(II State Models in Biomedicine and Engineering Reliability IEEE International Conference of Biomedical Engineering and Informatics, BMEI 2008.  6 Pages  Ma, Z. S. and A. W. Krings. 2008e. Dynamic Hybrid Fault Models and their Applications to Wireless Sensor Networks WSNs Modeling, Analysis and Simulation of Wireless and Mobile Systems. \(ACM MSWiM 2008 Vancouver, Canada  Ma, Z. S. &amp; A. W. Krings. 2008f. Dynamic Populations in Genetic Algorithms. SIGAPP, the 23rd Annual ACM Symposium on Applied Computing, Ceara, Brazil, March 16-20, 2008. 5 Pages  Ma, Z. S. &amp; A. W. Krings. 2008g. Bio-Robustness and Fault Tolerance: A New Perspective on Reliable, Survivable and Evolvable Network Systems, Proc. IEEE  AIAA AeroSpace Conference, March 1-8, Big Sky, MT, 2008. 20 Pages  Ma, Z. S.  and A. W. Krings. 2009. Insect Sensory Systems Inspired Computing and Communications.  Ad Hoc Networks 7\(4  MacConnell, J.H. 2008. Structural Health Management and Structural Design: An Unbridgeable Gap? 2008 IEEE Aerospace Conference, DOI:10.1109/AERO.2008.4526613  MacConnell, J.H. 2007. ISHM &amp; Design: A review of the benefits of the ideal ISHM system. Aerospace Conference 2007 IEEE. DOI:10.1109/AERO.2007.352834  Marshall A. W., I. Olkin. 1967. A Multivariate Exponential Distribution. Journal of the American Statistical Association, 62\(317 Mar., 1967  Martinussen, T. and T. H. Scheike. 2006. Dynamic Regression Models for Survival Data. Springer. 466pp  Mazzuchi, T. A., R. Soyer., and R. V. Spring. 1989. The proportional hazards model in reliability. IEEE Proceedings of Annual Reliability and Maintainability Symposium pp.252-256  Millar, R.C., Mazzuchi, T.A. &amp; Sarkani, S., 2007. A Survey of Advanced Methods for Analysis and Modeling of 


of Advanced Methods for Analysis and Modeling of Propulsion System", GT2007-27218, ASME Turbo Expo 2007, May 14-17, Montreal, Canada  Millar, Richard C., "Non-parametric Analysis of a Complex Propulsion System Data Base", Ph.D. Dissertation, George Washington University, June 2007  Millar, R. C. 2007. A Systems Engineering Approach to PHM for Military Aircraft Propulsion Systems. Aerospace Conference, 2007 IEEE. DOI:10.1109/AERO.2007.352840  Millar, R. C. 2008.  The Role of Reliability Data Bases in Deploying CBM+, RCM and PHM with TLCSM Aerospace Conference, 2008 IEEE, 1-8 March 2008. Digital Object Identifier: 10.1109/AERO.2008.4526633  Nowak, M. 2006. Evolutionary Dynamics: Exploring the Equations of Life. Harvard University Press. 363pp  Oakes, D. &amp; Dasu, T. 1990. A note on residual life Biometrika 77, 409  10  Pintilie, M. 2006. Competing Risks: A Practical Perspective.  Wiley. 224pp  20 Smith, M. J., C. S. Byington. 2006. Layered Classification for Improved Diagnostic Isolation in Drivetrain Components. 2006 IEEE AeroSpace Conference  Therneau, T. and P. Grambsch. 2000. Modeling Survival Data: Extending the Cox Model. Springer  Vincent, T. L. and J. L. Brown. 2005. Evolutionary Game Theory, Natural Selection and Darwinian Dynamics Cambridge University Press. 382pp  Wang. J., T. Yu, W. Wang. 2008. Research on Prognostic Health Management \(PHM on Flight Data. 2008 Int. Conf. on Condition Monitoring and Diagnosis, Beijing, China, April 21-24, 2008. 5pp  Zhang, S., R. Kang, X. He, and M. G. Pecht. 2008. China  s Efforts in Prognostics and Health Management. IEEE Trans. on Components and Packaging Technologies 31\(2             BIOGRAPHY  Zhanshan \(Sam scientist and earned the terminal degrees in both fields in 1997 and 2008, respectively. He has published more than 60 peer-refereed journal and conference papers, among which approximately 40 are journal papers and more than a third are in computer science.  Prior to his recent return to academia, he worked as senior network/software engineers in semiconductor and software industry. His current research interests include: reliability, dependability and fault tolerance of distributed and software systems behavioral and cognitive ecology inspired pervasive and 


behavioral and cognitive ecology inspired pervasive and resilient computing; evolutionary &amp; rendezvous search games; evolutionary computation &amp; machine learning bioinformatics &amp; ecoinformatics                 pre></body></html 


