2010 International Conference on Distributed Frameworks for Multimedia Applications \(DFmA  Success Factors of OSS Pr ojects from Sourceforge using Datamining Association Rule Andi Wahju Rahardjo Emanuel 1 Retantyo Wardoyo 2 Jazi Eko Istiyanto 3 Khabib Mustofa 4   Bachelor Informatics, Faculty of Information Technology, Maranatha Christian University Jl. Prof. Drg. Suria Sumantri 65 Bandung, INDONESIA 1 awreman@gmail.com  Department of Computer Science and Electronics, Gadjah Mada University Jl. Sekip Utara, Sleman, Yogyakarta, INDONESIA 2 rw@ugm.ac.id 3 jazi@ugm.ac.id 4 khabib@ugm.ac.id   Abstract We present a research to find the success factors of 134,549 Open Source Software \(OSS\ Projects at sourceforge.net portal using Datamining 2-Itemset Association Rule.  Data from each OSS Project i.e. project’s audience, database environment description, developer, development status, download, filename file size, operating system, programming language, review thumb \(up and down\, topic, translation, and user interface are collected and then stored into database to be analyzed using Weka Datamining Tool.  The Datamining Association Rule is used to find the success factors of these projects by assuming that the success is reflected by the number of downloads.  The success factors of these OSS Projects are found by performing 2-Itemset Association Rules.  The result is then formulated into six success factors that should be utilized by future initiators and other developers of OSS Project to increase the possibilty of success of their OSS Projects  Keywords Open Source Software Project, Datamining, 2Itemset Association Rule, Success Factor, sourceforge.net  I  I NTRODUCTION  Nowadays, Open Source Software \(OSS\ has become one of the popular term in Information Technology / Computer Science.  OSS Project is a software development methodology that allows developers from all across the globe to collaboratively download, modify, and improve the source code using Internet as the main communication channel Pioneered by Eric Raymond and Richard Stallman in 1990s this “movement” was initially seen as the way to develop software by researchers, academicians and programmers to share programming knowledge during their spare times Slowly but surely, this method receives greater acceptance as one alternative stream in Software Engineering.  There are already several success stories about OSS Project i.e. Linux Operating System, Apache Web Server, Mozilla Web Browser, etc Despite several success stories about OSS Project, many of these project were failed or stagnant.  Some approaches or strategies need to be discovered in order to assist an OSS Project initiator and other developers in increasing the chance of success for the project.  These approaches / strategies could be found by studying the existing small to medium sized OSS Projects to find their success factors from one of the popular OSS development portal i.e. sourceforge.net This paper is arranged in six sections started with Introduction in Section I.  Section II of the paper shows the current studies relating to the success factors of OSS Projects Section III describes the theoretical background of OSS Projects as well as Datamining 2-Itemset Association Rule Section IV contains the Datamining Process starting from data colletion processing and data classification of the parameters collected.  The result of the Datamining 2-Itemset Association Rule is shown in Section V followed by Conclusion in Section VI II  C URRENT S TUDIES ON OSS  P ROJECT S UCCESS F ACTORS  Many studies have been conducted to identify the key success factors of OSS Projects.  One approach of the study is by studying several successful projects, i.e. the study on Debian GNU/Lin  F r e e B S D 4  A p a c h e  W e b S e r v e r 10   a n d  OpenBSD [7  O t h e r  a p p r o a c h i s  tr y i n g t o f i n d  th e s i mi lar i t y  in the processes in many successful OSS Projects i.e. the study of Apache and Mozilla [9  f i f t e e n O p e n S o u r c e  P r o j ec ts  8    and Arla and Mozila Projects [2  B o t h a p p r o a ch es h a v e t h e  same weakness since they involve only relatively small number of OSS Projects, leading to the consequence that they may not give good representation of other OSS Project that already in hundreds of thousands The study of small and medium sized OSS Projects which are considered successful are more relevant compared to the study on large and mature OSS Projects since all projects are usually start from small size.    These OSS Projects could be found in many OSS Development Portal available in the Internet, one of the most popular web portal is the Sourceforge which at the time of this research \(January, 2010 had 160,141 registered projects.  In this research, 134,549 OSS Projects are selected and their data are extracted and analyzed using Datamining 2-Itemset Association Rule to find their success factors.  This research could be considered an improvement of our previous research [6 w h ic h o v e r v iew e d  only 5000 most downloaded OSS Projects with 11 parameters  


 III  T HEORETICAL B ACKGROUND  A  OSS Project OSS Project is a software development methodology based on several distinct characteristics  The source code is freely available for everybody to download, improve and modify   People who contribute to the development of the project is forming a group called Open Source Software Community which is voluntary [3    The primary concern of the developers are building features and fixing bugs [5  In order to develop software application in OSS Project, an initiator may use the service from OSS Development portal i.e. sourceforge.net, launchpad.net, google code, etc.  Table 1 shows some description about the number of OSS Projects in the world by recording the number of projects in some popular OSS development portals as observed on April 2010 T ABLE 1  N UMBER OF OSS  P ROJECTS IN OSS  D EVELOPMENT P ORTALS  Portal No. of OSS Projects sourceforge.net 226,308 code.google.com 73,904 launchpad.net 17,975 freshmeat.net 4,004 TOTAL 322,191 Table 1 shows that the study of OSS Projects in sourceforge.net portal conducted in this research may provide a good representation since it covers quite large proportion of OSS projects B  Datamining 2-Itemset Association Rule Datamining is a technique to find hidden structure and relationship in a large number of populatio  T h e  knowledge about these structure and relationship is discoverd by using two methods which are predictive and descriptive The descriptive method is selected in this research since it is intended to find the human readable patterns from all the data being collected from Sourceforge.net.  In this method, there are several techniques / rules that could be chosen which are Classification, Segmentation / Clustering, Association, etc The Association Rule is selected since it will find dependency rule which predict the appearance of an itemset based on the appearance of other itemset. One example of this rule with 2-Itemset is A} => {B or A,B  1 Where A and B are items in which their relationship is to be discovered.  Item A is the cause Antecedent resulting in item B Consequent with some certainty values called Support and Confidence The value of Support \({A,B shows the number of transaction containing item A and item B against total population, whereas the value of Confidence A=>B shows the probability of the occurrence of item B if a transaction containing item A and B.  In this research, the selected minimum Support is 10% and the minimum Confidence is 50 IV  D ATAMINING P ROCESS  Table 2 shows the data description of the OSS project recorded from sourceforge.net portal  T ABLE 2  OSS  P ROJECT D ATA D ESCRIPTION  No Parameter Type Remark 1 Audience Text Intended audience of the project 2 Audience Count Integer Number of the audience of the project 3 Database Text Database environment used 4 Database Count Integer Number of applicable database in the project 5 Description Text Project description 6 Description Word Count Integer Word count of project description 7 Developer Text User name of developer 8 Developer Count Integer Number of developer of the project 9 Development Status Text Status of project development 10 Developement Status Count Integer Number of development status each project 11 Download Integer Number of  download 12 Filename Text Name of downloadable file from project's front page 13 File Size Text Size of downloadable filename 14 License Text Applicable license 15 License Count Integer Number of applicable licenses 16 Operating System Text Applicable operating system 17 Operating System Count Integer Number of applicable operating systems in the project 18 Programming Language Text Programming language used for the project 19 Programming Language Count Integer Number of applicable programming language in the project 20 Review Text Review from user 21 Review Count Integer Number of recorded reviews 22 Thumb Integer Recorded thumb up and thumb down from user for the project 23 Topic Text Applicable topic for the project 24 Topic Count Integer Number of applicable topic in the project 25 Translation Text Available translation for the project 


 No Parameter Type Remark 26 Translation Count Integer No. of available translation in the project 27 User Interface Text Appliable user interface for the project 28 User Interface Count Integer No. of applicable user interface in the project A  Data Collection Process The data collection process of OSS Projects from sourceforge.net was conducted by creating custom-made PHP script crawler. There are three phases fo the collection process  Recording summary of projects http://sourceforge.net/softwaremap\ to record the name of the project, its description, date registered, latest version date, number of download, link of the project topic, user interface, translation, programming language operating system, license, intended audience development status, and database environment  Recording project’s detail information by crawling each individual project link page to record the developer project description, filename, file size, number of thumbs up dan down\, and reviews  Filling the missing information, finding and deleting duplicates and then generating count data from multiplevalue parameters The collection process took about 9 weeks to complete starting from early January 2010 through the end of February 2010.  Out of 160,141 OSS Projects registered from the portal the crawler was able to collect data from 134,549 unique projects stored in 27 tables with total 3,115,085 records.  The Datamining process was conducted by using Weka Datamining Tool \(http://www.cs.waikato.ac.nz/ml/weka Figure 1 shows the block diagram of the crawling system  Fig. 1 Crawling and Datamining System B  Data Classification Process The next process is the classification of the data collected The following is the classification of each of the parameters 1 Audience There are 121,095 OSS Projects \(90%\of the recorded projects that list the audiences of its software project There are more than 23 distinct values of project's audience which are then classified into three classes as shown in Table 3 T ABLE 3  C LASSIFICATION OF P ROJECT  S A UDIENCE  Audience Class Population Percentage  Specific Audience 83,897 42.54 Developers 57,391 29.10 Common Users 55,940 28.36 Where  Specific Audience: Advanced End Users, System Administrators,  Information Technology, Education Telecommunications Industry, etc  Common Users: End Users / Desktop, Other Audience etc The classification of Audience Count for each OSS Project is shown in Table 4 T ABLE 4  C LASSIFICATION OF A UDIENCE COUNT  Audience Count Class Population Percentage one 74,785 61.76 two 27,513 22.72 three 12,000 9.90 four or more 6797 5.61 2\  Database Environment  There are only 30,335 OSS Projects \(22.55%\ of the recorded projects are using at least one database.  Table 5 shows the Classification of Database Environment that are applicable to these projects  TABLE 5  C LASSIFICATION OF D ATABASE FOR OSS  P ROJECT  Database Class Population Percentage MySQL 12,623 31.25 SQL-based 10,975 27.17 API-based 8274 20.48 Text-based 6230 15.42 Other 2295 5.68 Where  SQL-based: PostgreSQL \(pgsql\ Microsoft SQL Server, Firebird/InterBase, etc  API-based: Perl DBI/DBD, ADOdb, PHP Pear JDBC, etc  Text-based: Flat-file, XML-based, Proprietary file format, Other file-based DBMS, etc  Other: other types of database Table 6 shows the classification of database count for each of the OSS project T ABLE 6  C LASSIFICATION OF D ATABASE C OUNT  Database Count Class Population Percentage one 24,256 79.96 two 3987 13.14 


 Database Count Class Population Percentage three or more 1201 3.96 3 Project Description Word Count Each OSS Project has a short description to state the purpose of project.  The project initiator has the freedom to describe his / her project.  If these descriptions are word-counted for each of the project, it shows an interesting result as shown in Figure 2  Fig. 2  Distribution of Description Word Count Figure 2 shows that the project description is mostly short with the peak at about 36 words.  If the project description is classified into three categories which are short \(< 26 words middle \(26 - 36 words\ and long \(> 36 words\, the classification of project description's word count is shown in Table 7 T ABLE 7  C LASSIFICATION OF P ROJECT D ESCRIPTION  S W ORD C OUNT  Description Word Count Class  Population Percentage short 58,838 43.78 middle 43,779 32.58 long 31,767 23.64 4 Project Developer There are 133,892 OSS Projects 99.51%\ of the recorded projects list at least one developer Table 8 shows the classification of the count of developer for each of the OSS Project T ABLE 8  C LASSIFICATION OF D EVELOPER C OUNT  Developer Count Class Population Percentage one 110,622 82.62 two 15,412 11.51 three or more 7858 5.87 5 Development Status There are 128,215 OSS Projects 95.29%\f the recorded projects that list the development status of their projects.  Table 9 shows the statistics of development status for the projects T ABLE 9  D EVELOPMENT S TATUS OF OSS  P ROJECTS  Development Status Population Percentage 1 - Planning 26,261 18.84 2 - Pre-Alpha 21,119 15.15 3 - Alpha 23,898 17.15 Development Status Population Percentage 4 - Beta 33,528 24.05 5 - Production / Stable 28,658 20.56 6 - Mature 2545 1.83 7 - Inactive 3377 2.42 Table 10 shows the classification of the count of listed development status in each OSS Project T ABLE 10  C LASSIFICATION OF D EVELOPMENT S TATUS C OUNT  Development Status Count Class Population Percentage  one 118,681 92.56 two 8355 6.52 three or more 1179 0.92 6 Number of Download  Table 11 shows the statistics of the number of downloads of OSS projects. The number of download is 0 means that there is no download or the project does not have any downloadable file T ABLE 11  S TATISTICS ABOUT N UMBER OF D OWNLOAD  Download Population Percentage 0 / NA 55,986 41.61 1 - 99 10,080 7.49 100 - 999 33,539 24.93 1000 - 9999 24,438 18.16 10,000 - 99,999 8302 6.17 100,000 - 999,999 1831 1.36 1,000,000 - 9,999,999 322 0.24 10,000,000 51 0.04 Note: NA - not available \(downloadable file is not yet available Table 12 shows the classification of the download of OSS projects T ABLE 12  C LASSIFICATION OF D OWNLOAD  Download Class Population Percentage  none 55,986 41.61 hundreds or less 43,619 32.42 thousands or more 34,944 25.97 In this research, the number of download is assumed to be an indication of success in OSS Project.  If an OSS Project is successful, it will be accepted by many users that is indicated by the large number of downloads.  By referring to Table 12 the project that has Download - Thousands or more is assumed to be more successful than other classification  Download - none or Download - Hundreds or less In this research, the parameter Download with all possible classification was always placed as the Consequent  


 7 Filename and File Size This experiment only records the filename and its size listed on the projects' site on the first page \(http://sourceforge.net/project/project_name\.  This filename is not neccessarily the only available filename, and there is also no guarantee that the filename is always the source code of the project.  The filename is then classified based on its extension as shown in Table 13 T ABLE 13  S TATISTICS OF F ILENAME E XTENSION  Filename Extension Population Percentage zip 33,352 47.27 tar.gz 20,970 29.72 jar 5234 7.42 tar.bz2 4108 5.82 tgz 3540 5.02 rar 1734 2.46 other format 1612 2.28 The size of the downloadable files was also recorded and then categorized based on its order of magnitude \(BYTES KB, MB, or GB\. Table 14 shows the magnitude of the downloadable file size T ABLE 14  S TATISTICS OF F ILE S IZE M AGNITUDE  File Size Magnitude Population Percentage BYTES 181 0.26 KB 50,723 71.90 MB 19,605 27.79 GB 41 0.06 8 License There are 131,777 OSS Projects \(97.94%\f the recorded projects that list the applicable license for the project.  There are 75 distinct values for the licence for the recorded OSS projects, and they were classified as shown in table 15 T ABLE 15  C LASSIFICATION OF P ROJECT  S L ICENSE  License Class Population Percentage GPL 87,641 61.57 LGPL 15,139 10.64 BSD License 9607 6.75 Apache License 5376 3.78 Public License 4835 3.40 MIT License 3726 2.62 AFL 2231 1.57 Mozilla License 1995 1.40 Other 11785 8.28 The classification of the count of applicable licenses in each of the OSS project is shown in Table 16  T ABLE 16  C LASSIFICATION OF L ICENSE C OUNT  License Count Class  Population Percentage one 123,813 93.96 two 6393 4.85 three or more 1571 1.19 9 Operating System There are 111,760 OSS Projects 83.06%\ of the recorded projects that list the applicable Operating System.  There are 85 distinct Operating System for the OSS projects which are then classified as Linux-like Windows, Cross-Platform, or Other.  Table 17 shows the classification of Operating System for the OSS Projects T ABLE 17 CLASSIFICATION OF O PERATING S YSTEM  Operating System Class Population Percentage Linux-like 69,607 35.63 Windows 66,905 34.25 Cross-Platform 45,306 23.19 Other 13,532 6.93 Where  Linux-like: All POSIX \(Linux/BSD/UNIX-like Oses Linux, All BSD Platforms \(Free BSD, NetBSD, etc  Windows: all OS using Windows i.e. Win98, Windows XP, Windows Server etc  Cross-platform: OS Portable \(Source code to work with many OS platform\, OS Independent \(Written in an interpreted language\ etc  Other : other OSes The classification of the count of Operating System in each OSS projects is shown in table 18 T ABLE 18  C LASSIFICATION OF O PERATING S YSTEM C OUNT  Operating System Count Class Population Percentage one 71,322 63.82 two 20,276 18.14 three 9026 8.08 four 5266 4.71 five 3006 2.69 six or more 2864 2.56 10 Programming Language There are 127,247 OSS Projects \(94.57%\ of the recorded projects that list the applicable programming language.  There are 97 distinct programming languages for the OSS projects which are then classified into Java, C++, Other OOP, C, PHP, Other Scriptbased, or Other as shown in Table 19 T ABLE 19  C LASSIFICATION OF P ROGRAMMING L ANGUAGE  Programming Language Class Population Percentage Java 33,277 20.10 


 Programming Language Class Population Percentage C++ 26,940 16.27 Other OOP 12,341 7.45 C 24,681 14.91 PHP 21,755 13.14 Other Script-based 30,751 18.57 Other 15,820 9.56 Where  Other Script-based: Python, Unix Shell, Perl JavaScript, VBScript, etc  Other OOP : C#, Object Pascal, Objective , etc  Other: Other programming language  The classification of the count of Programming Language in each OSS Project is shown in table 20 T ABLE 20  C LASSIFICATION OF P ROGRAMMING L ANGUAGE C OUNT  Programming Language Count Class Population Percentage one 99,217 77.91 two 20,708 16.27 three or more 7322 5.75 11 Review There are only 8663 OSS Projects \(6.44%\f the recorded project that being reviewed or commented by other users.  Table 21 shows the classification of reviews for each of the project T ABLE 21  C LASSIFICATION OF R EVIEW C OUNT  Review Count Class Population Percentage one 4713 54.40 two 2495 28.80 three or more 1455 16.80 12 Thumb \(Up and Down There are only 16,829 OSS Projects \(12.50%\ of the recorded projects that being thumbreviewed \(users give either thumb up or thumb down\.  The classification of thumb shown in Table 22 consisting the sum of thumb up and thumb down T ABLE 22 CLASSIFICATION OF T OTAL T HUMB  Thumb \(Up + Down\ Class Population Percentage single 8176 48.58 two to three 4097 24.34 four to ten 2669 15.86 eleven or more 1887 11.21 The total thumb was choosen as the basis for classification since it was difficult to find better judgement for classification based on only thumb up or only thumb down 13 Topic There are 440 distinct topics for the OSS Projects which are then classified into 6 categories as shown in Table 23 T ABLE 23 CLASSIFICATION OF OSS  P ROJECT  S T OPIC  Topic Class Population Percentage  Software Development 44,112 19.97 Internet/Networking 38,467 17.41 Data Management 38,359 17.37 Games/Entertainment 32,002 14.49 Scientific/Engineering 25,725 11.65 Other topic 42,185 19.10 Where  Software Development: Build Tools, Code Generators Compilers, Debuggers, Software Development, etc  Internet/Networking: File Sharing, File Transfer Protocol FTP\, WWW/HTTP, etc  Data Management: Conversion, Interpreters, Dynamic Content, etc  Games/Entertainment: Video Capture, CD Ripping Sound/Audio, etc  Scientific/Engineering: Cryptography, Security, Codec Astronomy, Simulation, etc  Other topic: Desktop Environment, Office Suites Printing, Emulators, etc The classification of the count of Topic for each OSS Project is shown in table 24 T ABLE 24  C LASSIFICATION OF T OPIC C OUNT  Topic Count Class Population Percentage one 81,294 60.42 two 30,717 22.83 three 15,986 11.88 four or more 6552 4.87 14 Translation There are 77,269 OSS Projects \(57.43%\f the recorded projects that list the available language translation.  There are 67 distinct values for available language translation that is then classified into three classes which are English, European, and Other as shown in Table 25 T ABLE 25  T RANSLATION CLASSIFICATION FOR OSS  P ROJECT  Translation Class Population Percentage English 65,020 59.18 European 37,190 33.85 Other 7667 6.98 Where  European: German, Spannish, Finnish, etc  Other: Afrikaans, Chinese \(Simplified\, etc The classification of the translation count in each of OSS Project is shown in Table 26 


 T ABLE 26  C LASSIFICATION  OF T RANSLATION C OUNT  Translation  Count Class Population Percentage one 58,990 76.34 two 14,581 18.87 three or more 3698 4.79 15\  User Interface There are 97,302 OSS Projects \(72.32 of the recorded projects that list the available user interface for the project.  There are 60 distinct values which is then classified into 4 classes as shown in Table 26  T ABLE 26  U SER I NTERFACE CLASSIFICATION FOR OSS  P ROJECT  User Interface Class Population Percentage  Desktop-based 58,136 46.91 Web-based 31,679 25.57 Text-based 21,228 17.13 Other 12,872 10.39 Where  Desktop-based: Win32 \(MS Windows\, X Window System \(X11\, Gnome, GTK+, etc  Text-based: Non-interactive \(Daemon Console/Terminal, etc The classification of the count of User Interface in each OSS Project is shown in Table 27 T ABLE 27  C LASSIFICATION OF U SER I NTERFACE C OUNT  User Interface Count Class Population Percentage one 77,983 80.15 two 14,132 14.52 three or more 5187 5.33 V  R ESULT AND D ISCUSSION  The process of Datamining 2-Itemset Association Rule is using Weka Datamining tool.  The class parameters were the combination of two parameters with the Consequent was always set to parameter Download There are 24 possible combinations of other parameters as the Antecedent and Download as the Consequent The result that have Download Thousands or more as Consequent with Confident  50 and Support  10% are interesting values Table 28 shows all the result of Datamining 2-Itemset Association Rule the has Consequent  Download - Thousands of more  T ABLE 28  R ESULT WITH D OWNLOAD  T HOUSANDS OF MORE AS C ONSEQUENT  Antecedent Analysis Parameter Class Pop. Sup. Conf Audience Common Users 123909 14.91% 51.76  Development Status 5-Production Stable 83422 17.54% 60.12  Antecedent Analysis Parameter Class Pop. Sup. Conf Operating System  Linux-like 129912 19.88% 52.34  Operating System  Windows 129912 18.51% 55.19  Review Count three or more 7822 28.97% 94.10  Review Count two 7822 14.02% 81.32  Review Count one 7822 36.93% 71.07  Size MB 70343 15.46% 55.71  Total Thumb eleven or more 15117 12.17% 98.87  Total Thumb two to three 15117 18.83 75.26  Total Thumb single 15117 29.34% 64.03  Total Thumb four to ten 15117 15.28 90.73  Translation English 73412 30.92% 51.62  Translation European 73412 21.54% 63.97  Note: Pop. - Population, Sup. - Support, Conf. - Confidence Table 28 shows that the success factors of OSS Project with the goal to get the number of download in thousands or more are 1  Project should target for common users as audience 2  Project source code should already in 5 – Production Stable development status 3  Project should work on either Linux-like or Windows operating system 4  Project should be reviewed and thumb-reviewed by at least one users 5  Project has filename in zip format with size in MB in magnitude 6  Project should have either English or European language translation Most of the above results are reasonable except for the file size.  Stating Common users as audience will reach wider segment of users.  Users are also more interested in projects that are in reasonable level of maturity so they will select OSS Project which is already in 5 – Production / Stable development status.  The selected Operating System in Windows or Linux-like are also reasonable since both are the most popular desktop-based Operating System.  The need for reviews and thumbs by other users seems to have good influence for another users to download and try the OSS The file size in MB magnitude appears with possible explanation that users are more interested in larger scale OSS Project than medium or small one.  Lastly, the English or European language translation is important since many of OSS Projects are originated from this region \(Englishspeaking countries or other European language-speaking countries\. It is also interesting to note that some freedom is still available for project initiator to decide i.e. topic programming language and description of his/her project without affecting the number of download Some caution should be considered relating to these rules The subject being researched is small to medium OSS Projects 


 from sourceforge.net that may not reflect the whole population of OSS Projects that are small, medium and large scale.  These result should also verified using OSS Project data from other portal i.e. launchpad.net, google code, etc. to verify their validity VI  C ONCLUSION  We present the Datamining 2-Itemset Association Rule of 134,549 OSS Projects crawled from sourceforge.net portal This covers about 84% of the total of 160,141 OSS Projects registered at the portal in the month of January 2010.  There are more than 27 parameter being recorded into MySQL database i.e. audience, audience count, database environment database environment count, developer count, development status, development status count, number of download filename and file size, license, license count, operating system, operating system count, programming language programming language count, review count, topic, topic count, translation, translation count, user interface, and user interface count The result of this datamining process are 6 success factors that may be applied by project initiators and developers in order to increase the probability of success of their projects The details of the guidelines is shown in Section V. Future work of this research include expanding the experiment to cover other portal i.e. launchpad.net, google code and freshmeat.net ACKNOWLEDGMENT  The authors would like to thank Maranatha Christian University \(http://www.maranatha.edu\ that provides the funding for this research and Department of Computer Science and Electronics at Gadjah Mada University http://mkom.ugm.ac.id\ which provides guideline and technical assistance for the research R EFERENCES  1  R. Agrawal., R. Srikant, “Fast Algorithm for Mining Association Rule Proceeding of 20th International Conference Very Large Database 1994, pp 1 - 32 2  A. Capiluppi, J.F. Ramil, “Studying the Evolution of Open Source Systems at Different Levels of Granularity: Two Case Studies Proceeding of the 7th International Workshop of Principles of Software Evolution, 2004, 113 - 118 3  S. Christley, G. Madey, “Analysis of Activity in the Open Source Software Development Community”, Proceeding of the 40th IEEE Annual Hawaii International Conference on System Sciences, 2007 166b 4  T.T. Dinh-Trong, J.M. Bieman, “The FreeBSD Project: A Replication Case Study of Open Source Development”, IEEE Transaction on Software Engineering Vol. 31 No. 6,  June 2005, 481 – 494 5  V.K. Gurbani, A. Garvert, J.D. Herbsleb, “A Case Study of Open Source Tools and Practices in Commercial Setting”, Proceeding of the fifth Workshop on Open Source Software Engineering, 2006, 1 - 6 6  J.E. Istiyanto, A.W.R. Emanuel, “Success Factors of Open Source Software Projects using Datamining Technique”, Proceeding of Information Technology and Communication International Seminar ITIS\, June 2009 7  P.L. Li, J. Herbsleb, M. Shaw, “ Finding Predictors of Field Defects for Open Source Software Systems in Commonly Available Data Sources a Case Study of OpenBSD”, Proceeding of 11th IEEE International Software Metrics Symposium, 2005,  32 8  G. von Krogh, S. Spaeth, S. Haefliger, “Knowledge Reuse in Open Source Software: An Exploratory Study of 15 Open Source Projects Proceeding of 38th Hawaii International Conference on System Sciences, 2005, 198b 9  A. Mockus, R.T. Fielding, J. Herbsleb, “Two Case Studies of Open Source Software Development: Apache and Mozilla”, ACM Transaction on Software Engineering and Methodology Vol. II No. 3 Juli 2002, 309 – 346 10   A. Mockus, R.T. Fielding, J. Herbsleb, “A Case Study of Open Source Software Development: The Apache Server”,  ACM ICSE, 2000, 263 272 11   E.S. Raymond, “The Cathedral and the Bazaar”, version 3, Thyrsus Enterprises \(http://www.tuxedo.org/~esr/\, 2000 12   Sourceforge.net web portal at http://www.sourceforge.net 13   S. Spaeth, M. Stuermer, “Sampling in Open Source Development: The Case for Using the Debian GNU/Linux Distribution”, Proceedings of the 40th IEEE Hawaii International Conference on System Sciences 2007, 166a 14   Weka website at  http://www.cs.waikato.ac.nz/ml/weka 


Application of Chaotic Particle Swarm Optimization Algorithm in Chinese Documents Classification 763 Dekun Tan Qualitative Simulation Based on Ranked Hyperreals 767 Shusaku Tsumoto Association Action Rules and Action Paths Triggered by Meta-actions 772 Angelina A. Tzacheva and Zbigniew W. Ras Research and Prediction on Nonlinear Network Flow of Mobile Short Message Based on Neural Network 777 Nianhong Wan, Jiyi Wang, and Xuerong Wang Pattern Matching with Flexible Wildcards and Recurring Characters 782 Haiping Wang, Fei Xie, Xuegang Hu, Peipei Li, and Xindong Wu Supplier Selection Based on Rough Sets and Analytic Hierarchy Process 787 Lei Wang, Jun Ye, and Tianrui Li The Covering Upper Approximation by Subcovering 791 Shiping Wang, William Zhu, and Peiyong Zhu Stochastic Synchronization of Non-identical Genetic Networks with Time Delay 794 Zhengxia Wang and Guodong Liu An Extensible Workflow Modeling Model Based on Ontology 798 Zhenwu Wang Interval Type-2 Fuzzy PI Controllers: Why They are More Robust 802 Dongrui Wu and Woei Wan Tan Improved K-Modes Clustering Method Based on Chi-square Statistics 808 Runxiu Wu Decision Rule Acquisition Algorithm Based on Association-Characteristic Information Granular Computing 812 JianFeng Xu, Lan Liu, GuangZuo Zheng, and Yao Zhang Constructing a Fast Algorithm for Multi-label Classification with Support Vector Data Description 817 Jianhua Xu Knowledge Operations in Neighborhood System 822 Xibei Yang and Tsau Young Lin An Evaluation Method Based on Combinatorial Judgement Matrix 826 Jun Ye and Lei Wang Generating Algorithm of Approximate Decision Rules and its Applications 830 Wang Yun and Wu-Zhi Qiang Parameter Selection of Support Vector Regression Based on Particle Swarm Optimization 834 Hu Zhang, Min Wang, and Xin-han Huang T-type Pseudo-BCI Algebras and T-type Pseudo-BCI Filters 839 Xiaohong Zhang, Yinfeng Lu, and Xiaoyan Mao A Vehicle License Plate Recognition Method Based on Neural Network 845 Xing-Wang Zhang, Xian-gui Liu, and Jia Zhao Author Index 849 
xiii 


   C4.2 Open GL has excellent documentation that could help the developer learn the platform with ease C4.3 Developer has very little ex perience in working with Open GL platform  For our case study, alternative B i.e. Adobe Director was the most favorable alternative amongst all the three. It catered to the reusability criteria quite well and aimed at meeting most of the desired operational requirements for the system   6. CONCLUSION & FUTURE WORK  The main contribution of this paper is to develop an approach for evaluating performance scores in MultiCriteria decision making using an intelligent computational argumentation network. The evaluation process requires us to identify performance scores in multi criteria decision making which are not obtained objectively and quantify the same by providing a strong rationale. In this way, deeper analysis can be achieved in reducing the uncertainty problem involved in Multi Criteria decision paradigm. As a part of our future work we plan on conducting a large scale empirical analysis of the argumentation system to validate its effectiveness   REFERENCES  1  L  P Am g o u d  U sin g  A r g u men ts f o r mak i n g an d  ex p lain in g  decisions Artificial Intelligence 173 413-436, \(2009 2 A  Boch m a n   C ollectiv e A r g u men tatio n    Proceedings of the Workshop on Non-Monotonic Reasoning 2002 3 G  R Bu y u k o zk an  Ev alu a tio n o f sof tware d e v e lo p m en t  projects using a fuzzy multi-criteria decision approach Mathematics and Computers in Simualtion 77 464-475, \(2008 4 M T  Chen   F u zzy MCD M A p p r o ach t o Selec t Serv ice  Provider The IEEE International Conference on Fuzzy 2003 5 J. Con k li n  an d  M. Beg e m a n   gIBIS: A Hypertext Tool for Exploratory Policy Discussion Transactions on Office Information Systems 6\(4\: 303  331, \(1988 6 B P  Duarte D e v elo p in g a p r o jec ts ev alu a tio n sy ste m based on multiple attribute value theroy Computer Operations Research 33 1488-1504, \(2006 7 E G  Fo rm an  T h e  A n a l y t ic Hier a rch y P r o cess A n  Exposition OR CHRONICLE 1999 8 M. L ease  an d J L  L i v e l y  Using an Issue Based Hypertext System to Capture Software LifeCycle Process Hypermedia  2\(1\, pp. 34  45, \(1990 9  P e id e L i u   E valu a tio n Mo d e l o f Custo m e r Satis f a c tio n o f  B2CE Commerce Based on Combin ation of Linguistic Variables and Fuzzy Triangular Numbers Eight ACIS International Conference on Software Engin eering, Artificial Intelligence Networking and Parallel Distributed Computing, \(pp 450-454 2007  10  X  F L i u   M an ag e m en t o f an In tellig e n t A r g u m e n tatio n  Network for a Web-Based Collaborative Engineering Design Environment Proceedings of the 2007 IEEE International Symposium on Collaborative Technologies and Systems,\(CTS 2007\, Orlando, Florida May 21-25, 2007 11 X. F L i u   A n In ternet Ba se d In tellig e n t A r g u m e n tatio n  System for Collaborative Engineering Design Proceedings of the 2006 IEEE International Symposium on Collaborative Technologies and Systems pp. 318-325\. Las Vegas, Nevada 2006 12 T  M A sub jec tiv e assess m e n t o f altern ativ e m ission  architectures for the human exploration of Mars at NASA using multicriteria decision making Computer and Operations Research 1147-1164, \(June 2004 13 A  N Mo n ireh  F u zzy De cisio n Ma k i n g b a se d o n  Relationship Analysis between Criteria Annual Meeting of the North American Fuzzy Information Processing Society 2005 14 N  P a p a d ias HERMES Su p p o rti n g A r g u m e n tative  Discourse in Multi Agent Decision Making Proceedings of the 15th National Conference on Artifical Intelligence \(AAAI-98  pp. 827-832\dison, WI: AAAI/MIT Press,  \(1998a 15  E. B T riantaph y llo u   T h e Im p act o f  Ag g r e g atin g Ben e f i t  and Cost Criteria in Four MCDA Methods IEEE Transactions on Engineering Management, Vol 52, No 2 May 2005 16 S  H T s a u r T h e Ev alu a tio n o f airlin e se rv ice q u a lity b y  fuzzy MCDM Tourism Management 107-115, \(2002 1 T  D W a n g  Develo p in g a f u zz y  T O P S IS app r o ach  b a sed  on subjective weights and objective weights Expert Systems with Applications 8980-8985, \(2009 18 L  A  Zadeh  F u z z y Sets   Information and Control 8  338-353, \(1965  152 


                        





