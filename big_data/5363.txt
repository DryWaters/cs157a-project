Wuhan National Laboratory for Optoelectronics School of Computer Huazhong University of Science and Technology IBM Center for Advanced Studies CAS Atlantic University of New Brunswick Fredericton Canada E3B 5A3 Faculty of Business and Information Technology University of Ontario Institute of Technology Ontario Canada E-mail 
 
An Improved Xen Credit Scheduler for I/O Latency-Sensitive Applications on Multicores Lingfang Zeng 
002 003 
 Yang Wang  Wei Shi  Dan Feng 
002 003 002 
 
 
It has long been recognized that the Credit scheduler favors CPU-bound applications while for the latency-sensitive workloads such as those related to stream-based audio/video services its performance is far from satisfactory In this paper we present an improved Credit scheduler in Xen to facilitate such tasks on multicore platforms To this end we improve the Credit scheduler from three perspectives First given the identiìed problem we minimize the system response time by load balancing the virtual CPUs with 
Abstract Simultaneous Multi-Boost 
lfzeng,dfeng hust.edu.cn yangwang@ca.ibm.com wei.shi@uoit.ca 
 
the BOOST priority between the cores Second we address the 
Premature Preemption 
problem by monitoring the received network packets in the driver domain and deliberately preventing it from being prematurely preempted during the packet delivery to further reduce and stabilize the I/O latency Finally we optimize the frequency of CPU switch by utilizing time-variant slice instead of the existing long time-invariant one to adapt to the dynamic uctuation of the number of virtual CPUs in the run queue associated with each physical CPU Our empirical studies show that the proposed improvement can signiìcantly improve the performance of the Credit scheduler for scheduling the I/O latency-sensitive applications 
I I NTRODUCTION Xen virtualization is being widely adopted by many enterprises at present to underpin their business-oriented services due to its exibility and efìciency in resource management and provision With Xen virtualization one can easily achieve quick resource re-allocation ideal fault isolation and increased exibility which are all critical factors to the success of service delivery Although the beneìts of Xen are obvious its complexity and overhead present additional challenges to adversely effect the overall performance to some applications One typical example 
Index Terms 
Xen virtual machine Credit scheduling SMP framework multicore I/O latency Dynamic time slice 
is the I/O-intensive applications with latency sensitivity such as those related to stream-based audio/video services In general these applications do not require a great amount of CPU time rather they are very sensitive to latency This observation indicates that resource multiplexing and scheduling among virtual machines in Xen is still poorly understood or at least not fully studied in some regards In this paper we study this VM scheduling problem in Xen by impro ving its def ault 
 3 to minimize the response time of the latency-sensitive applications The Credit scheduler is the most recent WC-mode scheduler in Xen which is characterized by 
Credit scheduler work-conserving 
using a credit system to fairly share processor resources while minimizing the wasted CPU cycles Hence it is very intuitive for users to think about CPU allocations which should be exible enough to achieve global load balancing of virtual CPUs VCPUs across physical CPUs PCPUs on SMP hosts in order to achieve high performance for CPU-bound tasks Although the Credit scheduler is efìcient to computationintensive workloads it could incur a certain amount of latency for I/O-intensive tasks due to the mismatched or inefìcient designs in its VCPU allocation strategies data distribution mechanisms and time slice calculations For example VCPUs could be frequently switched in dealing with I/O packet distribution if a large amount of blocked I/O operations exist 
including those in Dom0 which is also subjected to the same scheduling algorithm as other guest domains This would adversely impact the overall system performance as the control domain  
 back-ends the communication directly with I/O devices to complete all the I/O requests in the system On the other hand the xed time slice the Credit scheduler algorithm assigns to each PCPU may also potentially cause frequent switching cache miss or low hit rate and sporadic task starvation We make contributions to improving the Credit scheduler with enhanced performance to the I/O latency-sensitive applications First we minimize the system response time by balancing the I/O intensive tasks of the VCPUs with BOOST 
Dom0 
priority i.e BOOST VCPUs in multicore systems Second we reduce the VCPU dispatching time by monitoring the received network packets and deliberately prevent the scheduler from being prematurely preempted during the packet delivery Finally we optimize the frequency of CPU switch by utilizing time-variant slice instead of the existing long time-invariant one to adapt to the dynamic uctuation of the number of VCPUs in the run queue of each PCPU Our experimental results show that the proposed optimization can signiìcantly improve the performance of the Xenês scheduling algorithm 
2013 International Conference on Cloud Computing and Big Data 978-1-4799-2829-3/13 $26.00 © 2013 IEEE DOI 10.1109/CLOUDCOM-ASIA.2013.40 267 
2013 International Conference on Cloud Computing and Big Data 978-1-4799-2830-9/14 $31.00 © 2014 IEEE DOI 10.1109/CLOUDCOM-ASIA.2013.40 267 


002\003\004\005\006\003\004\007 010\011\012\003\013\014\015 016\007\014 017\020\020 010\011\012\003\013\014\021 010\011\012\003\013\014\021 010\011\012\003\013\014\021 
IDD to conduct real I/O operations the reliability and safety of the system 2 Xen also allows a domain to have access to more than one CPU by allocating more than one VCPU For easy presentation we assume that each domain is conìgured by one VCPU Thus VCPU and domain can be interchangeable in the discussion 
Virtual Machine Monitor hypervisor Domains A Inter-Domain Communication in Xen B Xenês Credit Scheduler credit weight 

II B ACKGROUND K NOWLEDGE Xen virtualization is a layer of software termed VMM or in Xen parlance that abstracts the underlying hardware resources of a single physical server into multiple instances of virtual machines VMs aka in Xen co-existing and co-executing simultaneously Domain as the VM presents the virtualized resources such as CPUs physical memory network connections and block devices as an illusion of a real machine to the overlying guest OS and applications According to Xen the domains in the same physical machine are not in the same functional class Dom0 as a privileged domain i.e control domain is created during the boot time to take the responsibility for hosting the application-level management software including the control of other domains termed DomUs in Xen e.g domain creation domain termination In particular Dom0 can function as a driver domain if it hosts the device drivers and performs I/O operations on behalf of the DomUs 1  In contrast DomUs are unprivileged guest domains which as discussed present the virtualized resources to the overlying guest OS and applications They cannot directly access the physical hardware on the machine Rather to accomplish an I/O operation i.e network and disk accesses DomUs have to cooperate with Dom0 via two ring buffers one for packet transmission and the other for packet reception The Credit scheduler is a fair share algorithm based on the proportional scheduling Each domain is assigned a value which is determined by the deìned for the domain The credit value represents the CPU share that the domain is expected to have Therefore the domains should have an equal fraction of processor resources if each domain is given the same number of credits The credits of the running domains as the cost paid for the processor resources are deducted periodically 100 credits for every 10ms via scheduler interrupts but a domain that runs for less than 10ms will not have any credits debited Whenever its credit value is negative the domain is in OVER priority otherwise in UNDER priority Every so often 30ms a system-wide accounting thread recomputes the credits earned by each running domain according to its weight By default Xen allocates only one VCPU to each domain when the domain is created 2  and it contains general information related to scheduling and event channels To support the numerous processes in the guest OS and applications the VCPUs will be scheduled among the PCPUs which is 1 Current Xen-based systems usually employ the Fig 1 The organization of the Credit scheduler IDLE state is not illustrated here achieved by maintaining a local ready VCPU domain queue i.e run queue for each PCPU The queue is periodically accounting period 30ms sorted in such a way that VCUPs with UNDER priority i.e UNDER VCPUs will always run ahead of VCPUs with OVER priority i.e OVER VCPUs and the ordering within each priority is round-robin The system always schedules the VCPU to run which is at the head of the queue The selected VCPU will receive 30ms before being preempted to run another VCPU VCPUs in OVER priority cannot be scheduled unless there is no UNDER VCPUs in the run queue This implies a domain cannot use more than its fair share of the processor resources unless the processor\(s would otherwise have been idle When a processor is idle or the processorês run queue has no more UNDER VCPUs it would check other processors to nd any eligible VCPUs to run on this processor achieving the global load balancing However the original Credit algorithm is merely amenable to the compute-intensive workloads and biased against the I/Olatency sensitive applications To address this problem and minimize the latency of I/O event handling a boost mechanism is introduced into the Credit scheduler by adding a new priority BOOST to the system so that a VCPU with BOOST priority i.e BOOST VCPU is allowed to preempt a running UNDER VCPU The current Credit scheduler boosts the priority of the blocked VCPU in UNDER to BOOST after it is woke up by receiving an event over its event channel The woke-up VCPU preempts the running VCPU at once rather than entering the run queue to compete with other domains As a consequence the response time of I/O-intensive tasks is reduced As an illustrative example Fig 1 shows the organization of the Credit scheduler where four Domains are co-located in the same machine to multiplex the underlying physical resources for effective utilization III P ERFORMANCE A NALYSIS OF X EN C REDIT S CHEDULER In this section we identify several not yet fully-studied sources of performance aws in the current Credit scheduler that could slowdown the I/O-latency sensitive applications 
002 
Isolated Driver Domain 
268 
268 


002 002 
022\023\021\015\024 025\015\026 024 022\023\021\027\024 027\030\026 024 022\023\021\025\024 031\030\026 024 022\023\021\031\024 025\032\026 024 022\023\021\015\024 025\033\026 024 022\023\021\027\024 027\030\026 024 022\023\021\025\024 034\035\026 024 022\023\021\031\024 035\026 024 
a zip b ping Group CPU0 CPU1 CPU2 CPU3 a zip Linux-2.6.18 112 98 215 149 b ping 1000Mbps Eth 146 102 285 52 Fig 2 Distribution of the BOOST VCPUs among the physical CPUs 32 guest domains are evenly divided into 4 groups each having 8 domains concurrently running on Xen-3.4.2 Xentrace is used to create a record whenever a VCPU enters BOOST state in a time interval of 1s According to Xen I/O model arriving packets are rst delivered to the hypervisor where the associated physical interrupts are virtualized and sent to the driver domain via the event channel The driver domain demultiplexes the packets after it receives the corresponding virtual interrupt and then notiìes the availability of one or more packets to a target guest domain also via the event channel connected with the guest which will be woke up by the hypervisor if it is blocked Since sending an event will result in the scheduler tickle the PP problem will be caused as the driver domain could be preempted by a guest domain even though it has multiple pending interrupts for the arriving packets not being processed In this situation the driver domain is prematurely scheduled out in the sense that some guest domains cannot timely receive their notices and have to wait till when the driver domain is re-scheduled by the hypervisor rendering the whole system to be less responsive 
Simultaneous Multi-Boosting Premature Preemption Fixed Time Slice 1 Simultaneous Multi-Boosting SMB 2 Fixed Time Slice FTS A Load Balancing of BOOST Domains LB 
We refer to them as   and  SMB refers to the phenomenon that multiple domains could be boosted at the same time This phenomenon is quite often observed in I/Ointensive applications due to Xenês split driver model as we discussed The SMB problem has been recognized in the virtualizations 6 Ho we v er  there are quite fe w research on this problem in the context of multicore platforms Although the Credit scheduler is merited for its global load balancing it does not distinguish the states of the VCPUs to balance the loads among the multiple PCPUs As a consequence it could be happened that for some PCPUs there are more BOOST VCPUs waiting in the queue to be scheduled than the others which results in the imbalance of the BOOST VCPUs as shown in Fig 2 where the uneven distribution of the BOOST VCPUs for two I/O intensive benchmarks ping and zip&gzip on a quad-core platform with 32 test domains excluding Dom0 are shown In this paper we intend to make a contribution on this problem for the multicore platforms The Credit algorithm is by nature a sort of round-robin algorithm a xed time slice of 30ms is designed independent of the number of the VCPUs as well as their states to ensure the fairness among the domains However this may result in two problems when the number of VCPUs in the run queue is small the xed time slice will cause frequent switches between the VCPUs in the run queue increasing the system overhead On the contrary when the number of VCPUs is large the xed time slice will increase the response time of those VCPUs at the tail of the queue In theory for a particular time interval the longer the time slice is the fewer switch times and the shorter average turnaround of the scheduling are However for a latency-sensitive task its response time is closely related to the number of tasks waiting in the run queue Therefore the xed time slice might not be sufìciently adequate and dynamic time slice adapting to the number of VCPUs waiting in the run queue is probably desired On the other hand as the number of CPUs in the same physical machine is constantly increased on a large-scale The number of VCPUs associated with each PCPU would be steadily decreased for more efìcient consolidation Therefore the Credit scheduling algorithms need to consider and optimize the case where the run queue of PCPU has less VCPUs Again the xed time slice is also not adequate IV E NHANCED S CHEDULER D ESIGN AND I MPLEMENTATION Given the description of the identiìed aws in Credit scheduler in this section we present the design and implementation of our enhanced scheduler to address these issues As we showed in the last section the current scheduler could cause the SMB problem which potentially leads to the uneven distribution of BOOST domains among the PCPUs Although Credit scheduler can achieves global load balancing it little effect on the balance of the BOOST domains making the system less responsive as a whole To address this problem we perform a load balance for the BOOST VCPUs across all the PCPUs in the machine to improve the response speeds of the VCPUs Our load balancing algorithm is shown as follows After a BOOST domain is woke up and inserted into a run queue the hypervisor will tickle the scheduler to make a scheduling for the PCPU associated with that queue However before this action is performed we rst run a simple load balancing algorithm Checks whether or not the current running VCPU on the corresponding PCPU is BOOST If yes selects the target PCPU based on some criteria where VCPUs can migrate ties are broken arbitrarily However if the selected target and source PCPU are the same then exits Otherwise inserts the VCPU into the run queue of the target PCPU Otherwise if the current running VCPU is not BOOST triggers the PCPU scheduling as usual and then exits 
   
269 
269 


time slice ms qlen  avg length ms qlen avg lento avg length qlen 
002 
B Prevention of Premature Preemption PPP 1 Dispatching vector dispatching vector 2 Prevention algorithm C Dynamic Time Slice DTS 
In a multicore system the target PCPU is selected according to the following criteria Searches a free PCPU in accordance with the order of the same core the same socket different sockets If found then returns the PCPU number Searches the PCPU not running a BOOST VCPU in accordance with the order of the same core the same socket different sockets If found then returns the PCPU number Finds out the PCPU whose run queue includes the least BOOST VCPUs then returns the PCPU number The rationale behind these criteria is the spatial locality of the computations For example if two PCPU share the same core they can also share the same local cache This section introduces our design and implementation of the algorithm to prevent the driver domain from being prematurely scheduled out i.e the PP problem in the process of the network packet dispatches The basic idea of this algorithm is straightforward When there are multiple pending packets for dispatching the driver domain will inform the underlying hypervisor of this fact which as a response will not tickle the scheduler until the driver domain dispatches all these packets and yields The core data structure of this algorithm is a of size equal to the number of the PCPUs in the platform The vector is created in the hypervisor at the boot time and then shared with the driver domain Each bit represents a PCPU and the bit value is set by the driver domain and used by the hypervisor The value of indicates the corresponding PCPU is dispatching packets while the value of denotes that the PCPU is not doing such work The algorithm runs inside the driver domain whenever a packet is arriving or has been dispatched to the target guest Depending on whether or not the number of I/O virtual interrupts in the event channel is greater than one the algorithm notiìes the hypervisor by setting or clearing the corresponding bit in the vector via a hypercall When the scheduler is tickled by the hypervisor it rst examines the value of the bit that corresponds to the PCPU running the domain driver If the value has been set to  then scheduling on the corresponding PCPU is disabled which means the driver domain cannot be preempted while dispatching packets Otherwise scheduling is performed as usual and the driver domain could be preempted Our algorithm is simple yet efìcient to achieve the goal as only one bit vector is shared between the driver domain and the hypervisor and the shared bit vector is only updated by the domain driver incurring no synchronization cost As discussed in Credit scheduler the xed time slice of 30ms is used independent of the states of VCPU BOOST or UNDER The slice for the BOOST VCPU is divided into two phases In the rst phase the VCPU will run under the BOOST priority for 10ms and then switch down to the UNDER priority entering the second phase The time length of VCPU in the BOOST state is essential to the scheduling If this length is too long other VCPUs with the same priority i.e BOOST could be over delayed increasing the I/O response time Otherwise if it is too short the BOOST VCPU could not get sufìcient time to execute before being preempted by other BOOST VCPUs balancing out the beneìts of BOOST state With these factors in mind to strike a balance between the average turnaround time of the system and the mean response time of each individual I/O-sensitive application we propose dynamic time slice that would be adjusted according to the number of VCPUs in the corresponding run queues Depending on the state the time slice after this optimization is deìned on the selected VCPU by the conducting the following steps Changing the length of its rst BOOST phase as 2ms approximately amounting to the time slice for the I/O processes running on BOOST VCPUs inserting it into the run queue and then changing its priority into UNDER As a consequence the selected VCPU would be located before all the UNDER VCPUs and after all the BOOST VCPU in the queue Clearly if there is no more BOOST VCPUs in the queue the just inserted VCPU can be continued to schedule for execution Calculating the time slice for the UNDER VCPU based on the number of UNDER VCPUs in the queue according to the following formula if if 1 here is the default length of the run queue which is typically set to 4 after system boot-ups refers to the number of UNDER VCPUs in the queue when the time slice is calculated The rationale behind this deìnition is twofold First for the BOOST phase I/O processes in general could be frequently blocked yielding the VCPUs As a result the VCPUs usually do not need longer time slices On the other hand if there are other applications other than the blocked I/O processes running on the same BOOST VCPU those applications will continue to run at BOOST level till the end of the time slice As a result it would delay the scheduling of other BOOST VCPUs which is not desired This also requires a small time slice for the BOOST VCPUs Second for the UNDER phase we distinguish two cases On one hand due to the VCPU afìnity the number of the UNDER VCPUs in the queue remains small and largely unchanged If there are a quite few UNDER VCPUs the time slice can be increased accordingly to minimize the scheduling overhead As discussed previously 
        
1 0 1  30 60 
002 
270 
270 


in reality the number of UNDER VCPUs associated with a PCPU is usually small and the improved algorithm should optimize this common case On the other hand the increased time slice should not be varied in a wide range as otherwise it could compromise the fairness the goal of the Credit scheduler Therefore in our deìnition we use two xed values 30ms and 60ms to optimize the scheduler for the short run queues while maintaining the fairness goal Given this deìnition the algorithm for dynamic time slice is straightforward First a color attribute is added to the VCPUês data structure which is set to red when the VCPU is inserted into the run queue and to black when it is fetched out for recalculating the time slice Based on this attribute the algorithm then performs the following 1 Checking the selected VCPU state If it is in BOOST state then the time slice is set to ms directly 2 Otherwise if the selected VCPU is not in BOOST state then checking the color of the VCPU If it is black the time slice will be set to a value calculated according to Eq 1 Otherwise if it is red indicating the time slice calculated previously has expired and the algorithm needs to recalculate it 3 Locking the entire run queue counting the VCPUs and recalculating the time slice according to Eq 1 then setting all VCPUs to black and storing the time slices into each PCPUês local structures 4 Setting the time slice of the forthcoming VCPU to the just calculated value and switching off it The three proposed algorithms are independent of each other They are designed for different problems and invoked at different time during the execution Currently the LB algorithm for load balancing the BOOST VCPUs is invoked by the hypervisor after a BOOST VCPU is inserted into a queue and before the scheduler is tickled This is reasonable under the assumption that each BOOST VCPU has an equal opportunity to preempt the running VCPU implying that the driver domain can be scheduled out at any time However this assumption is not always true when considering the effects of the prevention algorithm PPP since the driver domain cannot be preempted arbitrarily In this situation the prevention algorithm should be designed in conjunction with the load balancing algorithm for further performance improvements More speciìcally according to the original scheduler after an VCPU is boosted it likely preempts the running driver domain even though it has pending packets However in our implementation this premature preemption is temporarily forbidden and a new PCPU has to be selected for this new woke-up BOOST VCPU with the stated load balancing in mind Therefore the performance can be improved In contrast to LB and PPP the DTS algorithm is relatively isolated to be completely implemented in the Credit scheduler and invoked when a VCPU is scheduled Although our algorithm to SMB is effective to improve the latency-sensitive applications as we will show in the empirical studies in the next section there is still some room left unexplored for further improvements For example we did not consider the temporal locality and queue features other than the number of BOOST VCPUs in the current PCPU selection criteria Like the proposed LB algorithm the prevention algorithm can also be improved as well First we can use a vector instead of a bit vector to track the number of pending packets in the driver domain The advantage of using a counter vector is that the values of the elements can be increased or decreased on the y with respects to the packet arriving at or leaving from the driver domain saving the work each time to check the event channels However a problem with this improvement is the size of the counter the could be a potential solution to this problem for further study Second as a side effect the prevention algorithm could pin down the driver domain to the PCPU if it has a large number of pending packets we therefore need new optimizations on both the scheduling algorithms and the network I/O mechanisms running in due course to address this problem the current dynamic time slice may not sufìce but a large time slice may also have negative effects on the fairness of the Credit algorithm especially for compute-intensive applications on single-processor platforms Since the time slice for each selected VCPU depending its state is different the organization of the run queues may have impact on the performance of the DTS algorithm We can organize all the logic CPUs in a red-black tree rather than the linked list queue which could be more efìcient It is not necessary to assign a run queue of VCPU for each PCPU rather we can assign a red-black tree for each group to organize and maintain the VCPUs V P ERFORMANCE E VALUATIONS In this section we evaluate our algorithms via intensive empirical studies After introducing the experimental setup we assess each proposed optimization by measuring the response times of a latency-sensitive application Our numerical results show that the proposed optimizations can remarkably improve the performance of the latency-sensitive tasks Our experimental setup includes two physical machines and 32 virtual machines excluding the driver domain The two physical machines are connected by a 100 Mbps Ethernet and each of them is conìgured according to Table I All the virtual machines are installed on one physical machine and managed by Xen-3.4.2 while the other one as a remote machine communicates with those virtual machines We conìgure each domain based on Table II and use CentOS 5.2 as the guest OS in the driver domain i.e Dom0 in our experiments As the major goal of this research is to optimize the latency-sensitive applications by reducing the response 
30 
D Algorithm Combinations E Remarks counter probabilistic counting A Experimental setup 
271 
271 


     
45 4 771 400 7 0 1600 4 32 8 64 4 32 8 64 2 6 24 64 2800 
20 10 0 08 0 10 0 10 0 1 0 1 
002 015\036\015\015\024\024 015\036\015\033\024\024 015\036\027\015\024\024 015\036\027\033\024\024 015\036\025\015\024\024 015\036\025\033\024\024 015\036\031\015\024\024 015\036\031\033\024\024 015\036\034\015\024\024 015\036\034\033\024\024 015\036\033\015\024\024 027\024 034\024 030\024 027\015\024 027\031\024 027\032\024 027\035\024 025\025\024 025\033\024 025\037\024 031\027\024 031\034\024 031\030\024 034\015\024 034\031\024 034\032\024 034\035\024 023\003 !\007"\024\004\007#$\011\014#\007\024"\013\012\007\024%\012#&\024 023\013\014'\024\004\(\014\013\014'\024"\013\012\007\024%#&\024 007*\011\004\007+\013\012$\004\011,\007\005\024 007\004+\013\012$\004\011,\007\005\024 
    
Intel Xeon E5462 2.80GHz 16GB RAM Yorkìeld  nm  Stepping C0 number of cores 4 Socket FC-LGA6 2.80 GHz  MHz  FSB MHz KB Way byte lines KB Way byte lines MB Way byte lines rate MHz 320G IDE 100Mbps TABLE II Domain VM conìguration boot/vmlinuz-2.6.18.8-xen boot/initrd-2.6.18.8-xen.img 256 DomU 2 le:/dom1.img hda1 dev/hda1 ro time we deliberately select the 
B Evaluations on the Load-Balancing of BOOST VCPUs C Evaluations on Prevention of the Premature Preemption D Evaluations on Dynamic Time Slices 
TABLE I Hardware conìguration and a basic search BS programs as our benchmarks since these programs are usually adopted for this purpose in the literature Concretely a remote system is used to send pings to the guest who only acknowledges the receipt of the ping packets without doing any other computations We use this benchmark to measure the network latency whereby to evaluate our proposed algorithms To evaluate the LB optimization on the BOOST domains we rst create guest domains in this experiment which are evenly divided into two groups each with virtual machines We then allow each machine in the second group to ping a machine in the rst group every second in order to generate a large amount of BOOST VCPUs We then measure each ping response time The comparison results before and after the improvement are shown in Fig 3 It is clear that the packet response time is not only dramatically reduced after the optimization but also relatively stable between each ping operation This demonstrates the beneìts of the load balancing among the BOOST domains This phenomenon is not difìcult to understand as during the scheduling the BOOST VCPUs are organized to wait in the run queue which would cause the VCPUs in the front of the queue to have more opportunities to get scheduled quickly and thus shorten the ping response time but for the VCPUs in the rear of the queue they would get scheduled slowly lengthening the ping response time and resulting in the unstableness In contrast after the improvements with the load balancing BOOST VCPUs are distributed evenly into each PCPUês run queue so that in average the number of BOOST VCPUs in each run queue is decreased accordingly As a result even a BOOST VCPU at the backend of the run queue would not be waiting too long Therefore the ping response time is uctuated little approximately around ms which is relatively stable compared with the before improvement Fig 3 The runtime of ping program before and after being improved As the system performance will be degraded if the backend driver is frequently switched off in the process of dispatching network packets the number of domains involved in this experiment should be increased accordingly so that the advantages of this optimization would be prominently displayed To this end we still create 20 virtual machines and another machine to ping these 20 virtual machines In this way a large number of the ping packets have to be dispatched by the backend dispatcher to multiple blocked VCPUs We measure the distribution of the response time of the rst 1000 ping requests as the metric to evaluate the optimization Fig 4 shows the comparison results on the distribution before and after the improvements From this gure we can clearly see that a large percentage of the response time before the improvement falls into the interval greater than ms whereas for the improved results it is less than ms demonstrating the effectiveness of our improvement to the latency-sensitive applications The results are straightforward before the improvement due to the extensive communications between the number of guest domains it is highly likely that the VCPUs allocated to the back-end driver domain would be preempted by the VCPUs that just woke up in other domains Consequently it would delay to wake up some other VCPUs to dispatch the ping packets This is evidenced by the hash bars in Fig 4 where the ping response time that is greater than ms occupies a large percentage close to 47 of the total results With the PPP optimization the VCPUs in the back-end driver domain are prevented from being switched off during the packet dispatching As a result the ping response time after improved is less than ms in a large part about 75 as shown by the dotted bars in Fig 4 Although the DTS algorithm is designed to optimize the response time of each individual latency-sensitive task when the run queue length is short it may also effect the overall performance of other tasks as a whole especially the computeintensive tasks To evaluate the algorithm in a comprehensive 
 
ping 
CPU RAM Core Logic processor Socket frequency L1 data cache L1 code cache L2 cache HardDisk NIC Kernel Ramdisk Memory Name VCPUs Disk Root 
272 
272 


4 
1 Mean Response Time of VCPUS 2 Average Turnaround Time SysBench 
015\026\024 027\015\026\024 025\015\026\024 031\015\026\024 034\015\026\024 033\015\026\024 023\003 !\007"\024\004\007#$\011\014#\007\024"\013\012\007\024 005\013#"\004\013.\("\013\011\014\024 023\003 !\007"\024\004\007#$\011\014#\007\024"\013\012\007\024%\012#&\024 007*\011\004\007+\013\012$\004\011,\007\005\024 007\004+\013\012$\004\011,\007\005\024 
40 60 80 100 120 140 160 180 200 220 240 260 280 Request'Intensity 10 15 20 25 30 Mean'Response'Time'\(ms Before'DTS'Opt After'DTS'Opt 
0 500 1000 1500 Benchmark'Running'Time'\(ms 0 200 400 600 800 1000 1200 1400 Difference'on'Trunaround'Time\(ms 
 VI R ELATED WORK Improving the Credit scheduler to assure that I/O domains will get timely response has long been an active research topic 3 The testing command line is sysbench test=cpu cpus-maxprime=100000 run 
Fig 4 The ping time distribution before and after the improvement Fig 5 Mean response time before and after DTS improvement way in the following set of experiments we focus on the evaluations of its impact on both the mean response time of the latency-sensitive applications and the average turnaround time of the system as well Our results show that with the dynamic time slice both the mean response time and the average turnaround time can be more or less improved In this experiment we measure the mean response time of VCPUS by adopting the BS benchmark To this end we rst conìgure the measured machine as a search server which includes four guest OSes and observe the responses to the search requests in different intensities from these guest OSes We then use the average of the response time over the four guest OSes as a metric to evaluate the DTS algorithm As shown in Fig 5 the mean response time after the DTS improvement is gradually reduced compared to when the improvement is not employed This observation is not surprisingly As the search service is deployed in the virtual machines it could happen that there are multiple processes running on the same VCPU When the VCPU is boosted in addition to the I/O processes other compute-intensive processes would enable the BOOST VCPU to execute a long time which is not necessary After the improvements the time slice is adjusted to 2ms only allowing the I/O processes to have the BOOST VCPUs while others having the UNDER VCPUs In the gure when the request intensities are low the mean response time before and after the improvements is almost the same This is because in this case there are not that many BOOST VCPUs waiting in the queue However with the intensity growth the results after the improvements is clearly better than those before improved because a large number of BOOST VCPU could be produced as a result of the ever-increasing requests In Credit scheduler the time slice for the UNDER VCPUs is set to 30ms whereas in the improved algorithm we adjust this value for the UNDER VCPUs based on their queue lengths and optimize the case when such a queue length is less than a default value In the measurements to avoid the impact of the multicore architectures on the scheduling algorithm we deliberately conduct the experiment on a single PCPU by creating different a number of guest OSes which could further result in a different number of VCPUs for the same PCPU Additionally we deploy  on each gust OS and adopt its primesum 3 as the benchmark to measure the CPU performance Table III shows the compared average turnaround times between the after-improved and the before-improved when the number of VCPUs in the run queue is varied from 1 to 8 Given the default queue length of 4 we can observe that the turnaround times after the improvements are obviously lower than those before the improvements and the difference between them is gradually increased with respects to the execution time as shown in Fig 6 The reason is that when the number of UNDER VCPUs is less than the default value the algorithm sets the time slice by 60ms in order to minimize the scheduling overhead However when the queue length of the UNDER VCPUs is greater than the default value both the improved and unimproved algorithms have the same time slice of 30ms As a result they exhibit approximately the same turnaround time These results demonstrate that when the number of UNDER VCPUs in the queue is small increasing the time slice can clearly improve the system performance Fig 6 Difference of the average turnaround time between beforeimproved and after-improved the default VCPU queue length is 
002 
273 
273 


TABLE III Compared turnaround times for the SysBench Prime-Sum benchmark The default VCPU queue length is 4 VCPU 1 2 3 4 5 6 7 8 Before-improved s 361.823 724.438 1086.978 1452.598 1807.154 2215.224 2533.542 2895.687 After-improved s 361.758 722.989 1084.652 1447.488 1807.065 2215.439 2533.453 2895.406 Although various methods have been proposed 5 8  in practice I/O latenc y is still an obstacle lea ving much room unexplored for further improvements Govindan  proposed a communication-aware scheduling to preferentially scheduling communication-oriented domains over computeintensive counterparts by scarifying a short-term fairness Similarly Ongaro  adv ocated a mechanism to favor the scheduling of I/O domains as we discussed To supplement this mechanism with knowledge about the characteristics of guest-level tasks for further achieving both low I/O latency and fair CPU allocation a task-aware VM scheduling was proposed in Some related w ork pertain to network virtualization techniques to fully exploit the beneìts of virtualization is summarized in Other research with the same goal in the multicore environments includes  11 Ho we v er  no one in these studies considers all the problems we delved into in this paper SMB was rst identiìed by Ongaro  in their original paper of introducing BOOST and later studied in for real-time Credit scheduling However the unbalanced BOOST VCPUs caused by this problem on multiprocessor platforms has not yet aroused much attention in the literature To our best knowledge we are the rst to investigate this special load balancing problem The PP problem was also rst discussed in Ongaro  b ut has not been well studied since then Yoo  in v estigated this problem from a realtime prospective by proposing three strategies However their methods are incomparable with ours presented in this paper since our goal is not for real-time computing Ongaro introduced the ideal of disabling scheduler tickle to prevent the PP problem in b ut left une xplored Our method can be viewed as an extension of their idea to the multiprocessor platforms The subtle but important extension is that we allow the scheduler to be tickled yet forbid when scheduling the PCPU on which the driver domain is running Chen  discussed dynamic time slice problem based on their analysis on the ineffective holding time in the communication-intensive multiprocessing programs Similar to ours they also suggested a set of formulae to compute the variable time slice in order to dynamically scale the context switching frequency However their goal is to reduce the actual execution time of the program whereas our goal is to improve the response time of each scheduled BOOST VCPU VII C ONCLUSIONS In this paper we presented three improvements to the Credit scheduler in Xen for latency-sensitive applications on multicore systems These improvements are motivated by the observations on the performance aws in the current Xen default VM scheduler implementations The rst improvement is the load balancing of BOOST domains to to mitigate the adverse impact of the identiìed SMB issue The second is the prevention of the premature preemption to improve the Credit scheduler to address the PP problem for the latency-sensitive applications The last one is the dynamic time slice which can be adjusted in the runtime as a reaction to the changes of the number of VCUPs in the run queue Our empirical results show that the proposed improvement can remarkably boost the performance of latency-sensitive applications with minimized the mean response time of VCPUs without have adverse impact on the average turnaround time of the computeintensive applications A CKNOWLEDGMENTS This research is sponsored in part by the National 973 Program of China under Grant No 2011CB302301 China National Funds for Distinguished Young Scientists under Grant No 61025008 Special thanks go to Canqun Zhang and Jiaxiang Li for fruitful test on our work We would also like to thank anonymous reviewers for their constructive comments and helpful advice R EFERENCES  P  Barham B Drago vic K Fraser  S Hand T  Harris A Ho R Neugebauer I Pratt and A Warìeld Xen and the art of virtualization in 
et al et al boost/tickle et al et al et al et al et al 
 New York NY USA 2003 pp 164Ö177  Credit scheduler  http://wiki.x ensource.com/x enwiki/creditscheduler   A v ailable http://wiki.x ensource.com/x enwiki/CreditScheduler  L Cherkaso v a D Gupta and A V ahdat Comparison of the three CPU schedulers in Xen  vol 35 no 2 pp 42Ö51 2007  H Chen H Jin K Hu and J Huang Dynamic switching-frequenc y scaling Scheduling pinned domain in Xen VMM in  San Diego California USA Sep 2010  D Ongaro A L Cox and S Rixner  Scheduling I/O in virtual machine monitors in  Seattle WA USA March 2008  B Y oo Y  W on J Choi S Y oon S Cho and S Kang SSD characterization from energy consumptionês perspective in  2011 pp 3Ö3  A system performance benchmark Online A v ailable http://sysbench sourceforge.net  S Go vindan A R.Nath A Das B Ur gaonkar  and A Si v asubramaniam Xen and Co Communication-aware CPU scheduling for consolidated Xen-based hosting platforms in  San Diego Califomia,USA 2007 pp 126Ö136  H Kim H Lim J Jeong H Jo and J Lee T ask-a w are virtual machine scheduling for I/O performance in  Washington DC USA March 2009  G Liao D Guo L N Bhuyan and S R King Softw are techniques to improve virtualized I/O on multi-core platforms in  San Jose USA 2008  Y  Hu X Long J Zhang J He and L Xia I/O scheduling model of virtual machine based on multi-core dynamic partitioning in  New York NY USA 2010 pp 142Ö154  S Rixner  Netw ork virtualization Breaking the performance barrier    vol 6 no 1 pp 37:36Ö37:ff Jan 2008 
Proc of the 19th ACM Symposium on Operating Systems Principles SOSP ACM SIGMETRICS Performance Evaluation Review Proc of the 39th International Conference on Parallel Processing  ICPP Proc of the Fourth ACM SIGPLAN/SIGOPS International Conference on Virtual Execution Environments VEE Proc of the 3rd USENIX conference on Hot topics in storage and le systems HotStorage Proc of the 3rd Intemational Conference on Virtual Execution Environments VEE Proc of ACM SIGPLAN/SIGOPS International Conference on Virtual Execution Environments VEE Proc of the 4th ACM/IEEE Symposium on Architectures for Networking and Communications Systems ANCS Proc of the 19th ACM International Symposium on High Performance Distributed Computing HPDC Queue 
274 
274 


in Proceedings of the 1995 ACM SIGMETRICS Joint International Conference on Measurement and Modeling of Computer Systems various software and hardware con\223gurations leading us to the recommendation that prefetching algorithms be applied to any of the proposed cache con\223gurations in order to increase the hit rate and decrease the system power consumption In addition we have examined the effects of a likely future expansion of FTP server size on the EROS system and found a slight increase in hit rate in addition to the expected substantial increase in power consumption Although the bene\223t of prefetching diminishes as cache sizes become larger we continue to suggest the use of prefetching as a mechanism for offsetting the cost of powering additional hardware The cost of expanding the FTP server farm to 200TB would contain not only a signi\223cant up-front investment about 8 million dollars but an increasing power draw Our experimental results Table II demonstrate that the EROS system can maintain the same level of performance with 31.78 of power savings by using our proposed popularity-based and user-speci\223c prefetching algorithms compared to doubling the size of its FTP server farm Therefore we suggest administrators of large scale massive storage systems fully explore all possible software optimizations before physically expanding the existing system A CKNOWLEDGMENT The work reported in this paper is supported by the U.S National Science Foundation under Grants No CNS-0915762 and CNS-1212535 and the Texas State University Research Enhancement Program We also gratefully acknowledge the support from the U.S Geological Survey USGS Earth Resources Observation and Science EROS Center R EFERENCES  http://earthe xplorer usgs.go v  http://glo vis.usgs.go v  F aundeen J 215 Archi ving strate gy for USGS ER OS center and our future direction\216 In Proceedings of the Third C Conference on Computer Science and Software Engineering in Proceedings of the Summer USENIX Technical Conference  No 5 2010  Romoser  B F ares R Jano vics P  Ruan X.J Qin X Zong Z.L 215Global Workload Characterization of A Large Scale Satellite Image Distribution System\215  Dec 2012  Z L Zong J Job X S Zhang M Nijim and X Qin 216Case study of visualizing global user download patterns using Google Earth and NASA World Wind  doi 10.1117/1.JRS.6.061703  F ares R Romoser  B Qin X Nijim M Zong Z 215Performance Evaluation of Traditional Caching Policies on A Large System with Petabytes of Data\216  2012  Butt A.R Gniady  C Hu Y C 215The Performance Impact of K ernel Prefetching on Buffer Cache Replacement Algorithms\216  vol 56 no 7 pp 889-908 Jul 2007  Grimsrud K.S Archibald J.K Nelson B.E 215Multiple Prefetch Adaptive Disk Caching,\216  vol 5 no 1 pp 88-103 Feb.1993  Jeon H.S 215Practical Buf fer Cache Management Scheme Based on Simple Prefetching\216  vol 52 no 3 Aug 2006  Jeon J Lee G Cho H Ahn B 215 A Prefetching W eb Caching Method Using Adaptive Search Patterns\216  vol 23 no 1 pp 188-197 May 1995  Lan B Bressan S Ooi B T an K 215Rule-Assisted Prefetching in Web-Server Caching\216  pp 504-511 2000  Nanopoulos A Katsaros D Manolopoulos Y  215 A Data Mining Algorithm for Generalized Web Prefetching\216  vol 15 no 5 pp 1155-1169 September 2003  Lee H Lee K Noh S 215 Augmenting RAID with an SSD for energy relief\215  pp 12-12 2008  215Hybrid Storage Solutions\216 Po wer\223le T echnical Report Retrieved from http://www.imconsulting.ca/\223les IMConsultingPower\223leHybridStorageBrochure.pdf in September 2012  http://storagene ws.com/2009/10/12/sunf5100\223nallyappears  http://www qdpma.com/storage/SSD  pp 1-9 2010  Grif foen J Appleton R 215Reducing File System Latenc y Using a Predictive Approach  vol 1 pp 13-13 1995  Gindele J.D 215Buf fer Block Prefetching Method\216  vol 20 no 2 pp 696-697 July 1977  Smith A 215Cache Memories\216 A CM Computing Surv e ys pp 473530 Sept 1982  Srini v asan V  Da vidson E T yson G 215 A Prefetch T axonomy\216  vol 53 no 2 2004 In Proceedings of the 2008 conference on Power aware computing and systems in Proceedings of 2010 Roadmap for Digital Preservation Interoperability Framework Workshop in Proceedings of the 7th IEEE International Conference on Networking Architecture and Storage IEEE Transactions on Computers IEEE Transactions on Knowledge and Data Engineering in Proceedings of the Ninth International Conference on Information and Knowledge Management IBM Technical Disclosure Bulletin IEEE Transactions on Knowledge and Data Engineering  vol 1 pp 37-40 Aug 2003  Cao P  Felten E.W  Karlin A.R Li K 215 A Study of Inte grated Prefetching and Caching Strategies\216 other.html  http://www eia.go v/beta/state/print.cfm?sid=SD  Schall,D Hudlet V  Hrder  T  215Enhancing ener gy ef 223cienc y of database applications using SSDs\215 in Proceedings of the IEEE Paci\223c Rim Conference On Communications Computers And Signal Processing IEEE Transactions on Consumer Electronics In Proceedings of the 2012 IEEE International Performance Computing and Communications Conference IPCCC IEEE Transactions on Computers Journal of Applied Remote Sensing 6 1 061703 October 09 2012 


  D Sigel and D Wettergreen 223Star tracker celestial localization system for a lunar rover,\224 in Proc of the IEEE/RSJ Int Conf on Intelligent Robots and Systems 050IROS\051  29 Oct 2 Nov 2007 pp 2851\2262856   N Xiaolin and F Jiancheng 223A new autonomous celestial navigation method for the lunar rover,\224 Robotics and Autonomous Systems  vol 57 no 1 pp 48 226 54 2009   J Enright T Barfoot and M Soto 223Star tracking for planetary rovers,\224 in Proc of the IEEE Aerospace Conf  Mar 2012 pp 1\22613   M Cummins and P Newman 223FAB-MAP Probabilistic localization and mapping in the space of appearance,\224 The Int Journal of Robotics Research  vol 27 no 6 pp 647\226665 2008   M Shuster and S Oh 223Three-axis attitude determination from vector observations,\224 Journal of Guidance and Control  vol 4 no 1 pp 70\22677 1981   M Kaess H Johannsson R Roberts V Ila J J Leonard and F Dellaert 223iSAM2 Incremental smoothing and mapping using the bayes tree,\224 The Int Journal of Robotics Research 050IJRR\051  vol 31 no 2 pp 216\226 235 2012   C Tong and T D Barfoot 223Gaussian Process GaussNewton for 3D laser-based visual odometry,\224 in Proc of the IEEE Conf on Robotics and Automation 050ICRA\051 to appear  Karlsruhe Germany 6\22610 May 2013 B IOGRAPHY  Jonathan D Gammell is a Ph.D student at the University of Toronto Institute for Aerospace Studies 050UTIAS\051 and a member of the Autonomous Space Robotics Lab 050ASRL\051 He holds a B.A.Sc degree 0502006\051 from the University of Waterloo 050UW\051 in Mechanical Engineering 050Physics Option With Distinction Dean's Honours List\051 and a M.A.Sc 0502010\051 from the University of Toronto 050UofT\051 in Aerospace Science and Engineering in the Space Robotics Group His current research focus is developing planning techniques for rovers in unstructured terrain in order to minimize their 002nal positional uncertainty Chi Hay Tong is a Ph.D candidate at the University of Toronto Institute for Aerospace Studies 050UTIAS\051 and a member of the Autonomous Space Robotics Lab 050ASRL\051 He holds a B.A.Sc degree 0502008\051 from the University of Toronto 050UofT\051 in Engineering Science 050Computer Option\051 and his recent research focus is on laser-based mapping and navigation Peter Berczi is a M.A.Sc student at the University of Toronto Institute for Aerospace Studies 050UTIAS\051 with the Autonomous Space Robotics Lab 050ASRL\051 He has a B.A.Sc 050Honours 2012\051 from the University of Toronto 050UofT\051 in Engineering Science 050Aerospace Option\051 His research is focused on developing a terrain assessment framework for mobile robots particularly for robots operating on the Moon or Mars Sean Anderson received a B.A.Sc degree in Mechatronics Engineering 050With Distinction Dean's Honours List\051 from the University of Waterloo 050UW\051 in 2011 Currently he is a Ph.D student in the Autonomous Space Robotics Lab 050ASRL\051 at the University of Toronto Institute for Aerospace Studies 050UTIAS\051 His main research interest is in improving Simultaneous Localization and Mapping 050SLAM\051 algorithms for mobile robots in threedimensional unstructured terrain Timothy D Barfoot holds a B.A.Sc 050Honours 1997\051 from the University of Toronto 050UofT\051 in Engineering Science 050Aerospace Option\051 and a Ph.D 0502002\051 from the University of Toronto Institute for Aerospace Studies 050UTIAS\051 in Aerospace Engineering He is currently an Associate Professor at UTIAS where he leads the Autonomous Space Robotics Lab 050ASRL\051 Before joining UTIAS he worked at MDA Space Missions in the Controls  Analysis Group on applications of mobile robotics to space exploration and underground mining Dr Barfoot is a Canada Research Chair 050Tier II\051 in Autonomous Space Robotics a Professional Engineer of Ontario and an IEEE Member John Enright holds a B.A.Sc 0501997\051 from the University of Toronto 050UofT\051 050Engineering Science Aerospace\051 and a M.S 0501999\051 and a Ph.D 0502002\051 from Massachusetts Institute of Technology 050MIT\051 in Aerospace Systems He is currently an Associate Professor in Aerospace Engineering at Ryerson University in Toronto Having joined the faculty at Ryerson University in 2003 he is now the Principal Investigator of the Space Avionics and Instrumentation Laboratory 050SAIL\051 While at MIT 0501999-2003\051 he led the software development for the SPHERES 003ight project and the GFLOPS real-time spacecraft simulation testbed His research interests include spacecraft avionics and sensor processing systems engineering and 003ight software Dr Enright is a member of the AIAA CASI and the IEEE 10 


Table 9  CMG Ops Mode Uplink Command  Description Bits Hex Chars Value Description  Operating mode ID 8 2 01 Detumble Mode  01  Beacon interval 8 2 XX 05000 to FF\051 00 corresponds to 30 s XX corresponds to increments of 10 s The frequency can be varied from 10 s to 2550 s 05042 mins\051  Battery voltage 8 2 XX 05000 to FF\051 Signed two's complement integer 0 corresponds to 7.0v each increment is 0.01 V  Uplink time 48 12 XXX year X month XX hour XX day XX minute XX second  Orbital position 192 48 XXXXXXXXXXXXXXXX orbital position in 0.5 meter resolution ranging from 0 to 8388.608 km XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX  Orbital velocity 192 48 XXXXXXXXXXXXXXXX orbital velocity in 0.25 meter/s resolution ranging from 0 to 16.384 km/s XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX  QUEST weights 8 2 XX 0500 to 15\051 0500 to 1\051 each increment represents 0.05  Maneuver type 4 1 X 0500 or 1\051 0  R2 1  sun pointing  Maneuver time 48 12 XXX year X month XX hour XX day XX minute XX second  Total 516 129  discussed in this paper is capable of distributed operation and is intelligently designed to perform mission operations through duty cycling of the two processing units The on orbit average power is utilized effectively to produce net positive power store it on board the Li-Po batteries and discharge them by executing high power primary mission objectives Each computing unit is designed with its own storage device to store mission speci\002c data which is downlinked during an overhead pass of the CubeSat The CDH 003ight software is designed in the form of operating modes which are capable of being commanded from ground multiple times The CubeSat is capable of teleoperation autonomous and semiautonomous operation Every operating mode is designed with a downlink telemetry budget which is designed to capture data for validating primary and secondary objectives The 003ight software and thus the CubeSat is designed for on orbit tuning through an uplink command speci\002c for each operating mode The ADS mode and CMG Ops mode are implemented as distributed operations which get initiated by the 003ight computer through ground control and are executed on the auxiliary processor Effectively the distributed computing architecture and its operational design enable a CubeSat to demonstrate precision 3-axes attitude control and showcase the potential of such a computing platform for enabling similar complex capabilities A PPENDIX For completeness and facilitation of design of tasks encountered in the various operating modes the design of the following functions is presented in the form of 003owcharts 1  Deploy antenna 050Fig 9\051 2  Safe-hold mode functions 050Fig 10\051 3  Detumble mode functions 050Fig 11\051 4  Comms mode functions 050Fig 12\051 Figure 9  Deploy Antenna 11 


Figure 10  Safe-hold Functions Figure 11  Safe-hold Functions 12 


Figure 12  Safe-hold Functions R EFERENCES   H Heidt J Puig-Suari A Moore S Nakasuka and R Twiggs 223Cubesat A new generation of picosatellite for education and industry low-cost space experimentation,\224 in Proceedings of the Utah State University Small Satellite Conference Logan UT  Citeseer 2001 pp 1\2262   J Schaffner and J Puig-Suari 223The Electronic System Design Analysis Integration and Construction of the Cal Poly State University CP1 CubeSat,\224 in 16th AIAA/USU on Small Satellites Conference Logan UT  Citeseer 2002 pp 1\2262   R Munkata 223Cubesat design speci\002cation rev 12,\224 August 2009   G Minelli A Ricco D Squires C Beasley and J Hines 223O/oreos A multi-payload technology demonstration,\224 in Proceedings of the 24th Annual AIAA/USU Conference on Small Satellites Logan UT  2010   C Kitts J Hines E Agasid A Ricco B Yost K Ronzano and J Puig-Suar 223The GeneSat-1 Microsatellite Mission A Challenge in Small Satellite Design,\224 in Proc 20th Annual AIAA/USU Conf on Small Satellites Logan UT  2006   D Schor J Scowcroft C Nichols and W Kinsner 223A command and data handling unit for pico-satellite missions,\224 in Electrical and Computer Engineering 2009 CCECE'09 Canadian Conference on  IEEE 2009 pp 874\226879   M Swartwout C Kitts R Twiggs B Smith T Kenny R Lu K Statten\002eld R Batra and F Pranajaya 223Flight results for the sapphire satellite a low-cost university-class mission.\224   C McBryde and E Lightsey 223A star tracker design for cubesats,\224 in Aerospace Conference 2012 IEEE  IEEE 2012 pp 1\22614   W Kinsner D Schor R Fazel-Darbandi B Cade K Anderson C Friesen D Kotelko and P Ferguson 223The t-sat1 nanosatellite team of teams,\224 in Cognitive Informatics  Cognitive Computing 050ICCI CC\051 2012 IEEE 11th International Conference on  IEEE 2012 pp 380\226390   M Swartwout and S Jayaram 223The argus mission Detecting thruster plumes for space situational awareness,\224 in Aerospace Conference 2011 IEEE  IEEE 2011 pp 1\22610   M Swartwout C Kitts P Stang and E Lightsey 223A standardized distributed computing architecture Results from three universities,\224 in Proceedings of the 19th Annual AIAA/USU Conference on Small Satellites  2005   I Garcia 223Texas instruments application report tms320c6711d c6712d c6713b power consumption summary,\224 http://focus.ti.com/lit/an/spra889a/spra889a.pdf 2005   223MSP430 16-bit Ultra-Low Power Micorcontroller,\224 www.ti.com/msp430   223C6000 High Performance DSP,\224 http://focus.ti.com/paramsearch/docs 13 


parametricsearch.tsp?family dspsectionId=2tabId=57familyId=132   S Asundi 223Cubesat system design based on methodologies adopted for developing wireless robotic platform,\224 Ph.D dissertation University of Florida 2011   S Asundi and N Fitz-Coy 223Cubesat mission design based on a systems engineering approach,\224 in IEEE Aerospace Conference  IEEE 2013   W Lan 223Poly Picosatellite Orbital Deployer Mk III ICD,\224 http://cubesat.calpoly.edu/images LaunchProviders/mk  iii  icd5.pdf 2007   R Nugent R Munakata A Chin R Coelho and J Puig-Suari 223The cubesat The picosatellite standard for research and education,\224 Aerospace Engineering  vol 805 pp 756\2265087 2008   J Puig-Suari C Turner and W Ahlgren 223Development of the standard CubeSat deployer and a CubeSat class PicoSatellite,\224 in Aerospace Conference 2001 IEEE Proceedings  vol 1 2001   V Galysh 223Katysat radio board rev 2.4,\224 January 2008   S Asundi M Mahin V Nagabhushan T Lin and N Fitz-Coy 223Composite and PCB Based Implementations of a Solar Panel Design for SwampSat,\224 in SmallSat Conference  2010   V Galysh 223Varta poli\003explf 503759 d.\224   M Shuster and S Oh 223Three-axis attitude determination from vector observations,\224 Journal of Guidance and Control  vol 4 no 1 pp 70\22677 1981   J Murrell 223Precision attitude determination for multimission spacecraft,\224 in Guidance and Control Conference Palo Alto Calif August 7-9 1978 Technical Papers.\050A78-50159 22-01\051 New York American Institute of Aeronautics and Astronautics Inc 1978 p 7087  1978   R Kalman 223A new approach to linear 002ltering and prediction problems,\224 Journal of Basic Engineering  vol 82 no 1 pp 35\22645 1960   R Kalman and R Bucy 223New results in linear 002ltering and prediction theory,\224 Random Processes  1973 B IOGRAPHY  Sharan Asundi is an Assistant Professor in the Department of Aerospace Science Engineering at Tuskegee University He graduated with a MS and PhD in Aerospace Engineering from University of Florida in 2011 under the guidance of Dr Norman Fitz-Coy His research interests include design of autonomous ground and space systems spacecraft attitude determination and estimation vehicle health monitoring and design of small satellite mission operations Norman G Fitz-Coy is an Associate Professor in the Department of Mechanical and Aerospace Engineering at the University of Florida in Gainesville He is the Director of the Advanced Space Technologies Research and Engineering Center 050ASTREC\051 a National Science Foundation 050NSF\051 Industry/University Cooperative Research Center Dr FitzCoy's research efforts address the dynamics and controls of multi-degree-of-freedom 050M-DOF\051 systems with emphasis on space appications One of the current research interests is attitude control of small satellites 050less than 10 kg in mass\051 His research team has developed the world's smallest control moment gyroscopes and these will be 003ight veri\002ed the upcoming UF CubeSat mission SwampSat 14 


Integrating Context-Awareness and Trustworthiness in IoT Descriptions 1168 Kaiyu Wan and Vangalur Alagar Building Smart M2M Applications Using the WuKong Profile Framework 1175 Kwei-Jay Lin, Neils Reijers, Yu-Chung Wang, Chi-Sheng Shih, and Jane Y. Hsu A Human Trajectory Estimate Based on Individual Mobility Pattern Library 1181 Yang Yang, Bowen Du, and Xiao Jiang The Research on Monitoring of Discrete Manufacturing Process Based on Internet of Things 1186 Liuyin Yuan, Yu Guo, Jiajun Jiang, and Liyun Nian Research on the Framework of Internet of Things in Manufacturing for Aircraft Large Components Assembly Site 1192 Jihong Liu and Jie Yu Technical State Monitoring and Evaluation of Aerospace Product Manufacturing Workshop Based on Internet of Things 1197 Jihong Liu and Wenting Xu Temperature Map Recovery Based on Compressive Sensing for Large-Scale Wireless Sensor Networks 1202 Xuanxuan Wu, Cheng-Long Chuang, and Joe-Air Jiang Interoperability Repository System for the Internet-of-Things 1207 Pedro MalÛ, Tiago Teixeira, Bruno Almeida, and M·rcio Mateus Discussion on Key Technologies in Forestry Fundamental Scientific Information Cloud Service Platform 1216 Mubo Zhang, Zhongming Li, and Fan Li Symposium on Frontiers of Cyber-Physical-Social Computing SymCPS Leveraging Social Network APIs for Enhancing Smartphone Apps: An Example of VoIP App 1219 Shuchih Ernest Chang and Pin-Fan Lee Extending and Recompiling AADL for CPS Modeling 1225 Zhonghao Sun and Xingshe Zhou A Novel Frequency Hopping Scheme Based on Cognitive Radio for Aircraft 1231 Lei Zhidong and Zhang Xiaolin Modeling Effects of Physical Factors on Controller Area  Network in Cyber-physical Systems 1237 Bo Shen, Xingshe Zhou, and Ru Wang Detecting Flu Transmission by Social Sensor in China 1242 Jiangmiao Huang, Hui Zhao, and Jie Zhang A Smart Cyber-physical Systems-Based Solution for Pest Control \(Work in Progress 1248 Farhad Mehdipour, Krishna Chaitanya Nunna, and Kazuaki J. Murakami 
xix 


A Hybrid Content-Based Filtering Approach: Recommending Microbloggers for Web-Based Communities 1254 Kejun Dong and Yi Shen Just-in-Time Social Cloud: Computational Social Platform to Guide People's Just-in-Time Decisions 1259 Kwan Hong Lee, Andrew Lippman, Alex S. Pentland, and Pattie Maes Towards a Hybrid Approach of Primitive Cognitive Network Process and K-Means Clustering for Social Network Analysis 1267 Chun Guan and Kevin Kam Fung Yuen A Compressive Sensing Based Secure Data Transmission Scheme 1272 Guorui Li and Ying Wang An IO Optimized Data Access Method in Distributed Key-Value Storage System 1276 Li Chao, Wu Guangjun, Wang Shupeng, and Li Yixi W e  K n o w  W h a t  Y o u  A r e A  U s e r  C l a s s i f i c a t i o n  B a s e d  o n  M o b i l e  D a t a                                                             1 2 8 2 Duan Hu, Fei Sun, Lai Tu, and Benxiong Huang E f f i c i e n t  S e c u r i t y  S o l u t i o n  f o r  I n f o r m a t i o n c e n t r i c  N e t w o r k i n g                                                                          1 2 9 0 Hasen Nicanfar, Peyman TalebiFard, Chunsheng Zhu, and Victor C.M. Leung Towards Dynamic Resource Provisioning for Traffic Mining Service Cloud 1296 Jianjun Yu and Tongyu Zhu Leading Users Detecting Model in Professional Community Question Answering Services 1302 Siqi Song, Ye Tian, Wenwen Han, Xirong Que, and Wendong Wang A Moving Foreground Expansion Method Based on the Gaussian Distribution 1308 Yanhua Li, Wei Li, and Qi Xiang A Hybrid Emotion Recognition on Android Smart Phones 1313 Weishan Zhang, Xin Meng, Qinghua Lu, Yuan Rao, and Jiehan Zhou Multi-view Approach for Modeling Aerospace Cyber-physical Systems 1319 Lichen Zhang EigenCrime: An Algorithm for Criminal Network Mining Based on Trusted Computing 1325 Shujun Cai, Jiangnan Xia, Keyi Sun, and Zhen Wang A Task-Attribute-Based Workflow Access Control Model 1330 Yi Liu, Ke Xu, and Junde Song GreenBicycling: A Smartphone-Based Public Bicycle Sharing System for Healthy Life 1335 Yifan Zhao, Longbiao Chen, Chao Teng, Shijian Li, and Gang Pan Multi-step Sensor Scheduling for Energy-Efficient High-Accuracy Collaborative Target Tracking in Wireless Sensor Networks 1341 Biao Song, Wendong Xiao, and Zhaohui Zhang xx  


International Workshop on Vehicular Sensor and Ad-Hoc Networks \(VeSAN 2013 Toward Optimal Additive Noise Distribution for Privacy Protection in Mobile Statistics Aggregation 1346 Hao Zhang, Yonggang Wen, Honggang Hu, and Nenghai Yu Performance Analysis of a Hierarchical Structured VANET 1352 Wanting Zhu, Qing Zhang, and A.C.M. Fong Multilevel Cluster-Based Information Fusion in Vehicle Ad Hoc Networks 1357 Weicheng Zhao, Linjuan Zhang, Wanting Zhu, and Yanqi Zhao PSFCS: Robust Emergency Communications Supporting High-Mobility Based on WiMAX MMR Networks 1363 Wen-Kang Jia, Chia-Yao Chen, and Yaw-Chung Chen International Workshop on Next Topics for Green Communications and Computing \(GreenCom-Next 2013 On Energy Efficiency Data Access and Backup for Cloud Computing Networks 1369 Yeanf-Fu Wen A Model to Analyze the Energy Savings of Base Station Sleep Mode in LTE HetNets 1375 Paolo Dini, Marco Miozzo, Nicola Bui, and Nicola Baldo Soft Timing Synchronization Algorithm for CPM Signals 1381 Xiangchao Zhou, Rui Xue, Danfeng Zhao, and Fu Fang Secure Framework for the Return Routability Procedure in MIPv6 1386 Faisal Al Hawi, Chan Yeob Yeun, and Khaled Salah An Energy Efficient Cache Design for Multi-core Processors 1392 Cao Xiangrong and Zhang Xiaolin Analysis Method of Energy for C Source Program and Its Application 1397 Yang Yuechuan, Zeng Guosun, Ding Chunling, and Wang Wei Simulating Stochastic Activation Functions 1403 Hanno Hildmann, Sebastien Nicolas, and Fabrice Saffre Power-Efficient Virtual Machine Placement and Migration in Data Centers 1408 Shuo Fang, Renuga Kanagavelu, Bu-Sung Lee, Chuan Heng Foh, and Khin Mi Mi Aung Probabilistic Modeling during Power Estimation for Mixed Polarity Reed-Muller Logic Circuits 1414 Xiang Wang, Ying Lu, Yi Zhang, Zexi Zhao, Tongsheng Xia, Jishun Cui, and Limin Xiao Ant-Colony Based Heuristics to Minimize Power and Delay in the Internet 1419 Shankar Raman, Gaurav Raina, Hanno Hildmann, and Fabrice Saffre Materialization of a Comprehensive Digital City with CityMaker and ArcGIS 1424 Mingzhu Deng, Guangming Liu, and Yuran Hu 
xxi 


iThings/CPSCom 2013 Workshops International Workshop on Biometric Recognition and Its Applications \(BR&A 2013 A New Method of Designing High-Power Electroplating Power Supply 1429 Yihong He and Shuiyong Yu The Study of Fusion Image Block and Sparse Representation Classification in Disguised Face Recognition 1434 Gan Junying, Liu Dan, Zeng Junying, and Tian fengxia SMT Components Model Inspection Based on Characters Image Matching and Verification 1438 Bing Luo, Yuehua Gao, Zhongyu Sun, and Sufang Zhao The Manipulation of Chaotic Synchronization Quality Based on VCSEL with Optical Feedback 1442 Dongzhou Zhong Fast Wavelet Thresholding Algorithms for Face Image Inpainting 1445 Yibin Yu, Jinguo Cao, Yaofang Tang, and JunYing Gan Multispectral Palmprint Recognition Using Score-Level Fusion 1450 Yibin Yu, Yaofang Tang, Jinguo Cao, and JunYing Gan Encryption Node Design in Internet of Things Based on Fingerprint Features and CC2530 1454 Zeng Bohan, Wang Xu, Zhou Kaili, and Zhao Xueyuan Facial Expression Recognition Based on Local Binary Pattern and Gradient Directional Pattern 1458 Wenjin Chu Design of Intelligent Inducing Switch 1463 Yang Zhao and Fengxia Tian International Workshop on Cyber Physical Society Information Processing \(CPSIP 2013 Identify Online Fraudster with Extended Cellular Automata 1467 Ji Li and Yueliang Xiao Harmonization of Cyber-physical Society 1473 Alexander Abramovich and Rashid Khunagov Influence Analyzing and Modeling of High Frequency Forwarding Microblogs 1479 Shangbo Zhou, Wei Wang, Jie Luo, Li Wan, and Yao Zhang Requirement Specification for Transportation Cyber Physical Systems 1486 Lichen Zhang Integration-Oriented Modeling of Cyber-physical Interactive Process 1492 Tao Guan and Gang Yang 
xxii 


Web-of-Things Framework for WeChat 1496 Huang Yitong, Lai Xiaozheng, Dai Bingpei, and Chen Qinyi International Workshop on Cyberspace Security and Information Countermeasures \(CS&IC 2013 Simulation Experiment Research of Cyberspace Confront Effectiveness Evaluation 1501 Yu Zhang, Chen Shansong, and Xie Deping Technology of Situation Awareness Based on Radar Network in Cyberspace 1505 Xun Yang, Wei Shan, and Liu Jia Space Information Security and Cyberspace Defense Technology 1509 Su Kang, Dong Qiaozhong, and Zhu WeiQiang International Workshop on Connected Vehicles and Vehicular Networks \(CV2N 2013 Real-Time Vehicle Route Guidance Based on Connected Vehicles 1512 Daxin Tian, Yong Yuan, Jianshan Zhou, Yunpeng Wang, Guangquan Lu, and Haiying Xia A Novel Two-Timer-Based Broadcast Routing Algorithm for Vehicular Ad-Hoc Networks 1518 Song Fang and Tao Luo Research of Vehicle Counting Based on DBSCAN in Video Analysis 1523 Dayang Sun, Binbin Li, and Zhihong Qian A Self-Adaptive V2V Communication System with DSRC 1528 Daxin Tian, Hao Luo, Jianshan Zhou, Yunpeng Wang, Guizhen Yu, and HaiyingXia International Workshop on Electromagnetic Characteristics of Target and Environment \(ECTE 2013 SAR Segmentation and Recognition Based SCM 1533 Liping Hu and Xiaoyu Xing EM Scattering Analysis of Complex Target Coated with Plasma by Conformal SO-FDTD Method 1538 Hao-Chuan Deng, Xiao Wei, and Hong-Cheng Yin SAR RAW Data Simulation by Electromagnetic Computation in Frequency Domain 1542 Xupu Geng, Chunzhu Dong, Hongcheng Yin, and Guoqing Zhu Precession and Structural Parameters Estimation of the Cone-Shaped Target Based on the Profile Length 1545 Jing Huang, Chao Ning, and Zhihe Xiao Terahertz Gaussian Beam Scattering by a Conducting Sphere 1550 Liangsheng Li and Hongcheng Yin Reshaped Window Iterative Super-Resolution Imaging Algorithm 1554 Sheng Li, Liangsheng Li, and Hongcheng Yin Study on the influential factors of radar target RCS in resonance region 1557 Liang Man, Xiao Wei, and Zhihe Xiao 
xxiii 


A New Method for Estimating Radar Profile Length of a Cone Target 1561 Chao Ning, Jing Huang, Chao Gao, and Yong Zhu The Feature Extraction of Time-Frequency Image Based on Frequency Diversity 1566 Jing Sheng, Zhihe Xiao, and Jing Huang Characteristic Study of Target Micro-motion Based on the Wavelet Analysis 1571 Yuguang Tian, Chao Ning, and Xiangyang Zhang The Decorrelation Time Accumulation Restrain Method for Sea Clutter Spike 1576 Xujin Yuan, Yong Chen, Chao Wang, and Hongcheng Yin The Radar Echo Simulation of Moving Targets Based on HRRP 1580 Tao Zhao, Chun-Zhu Dong, Hong-Mei Ren, and Hong-Cheng Yin A Novel Method for Generating Planar Wave Based on Dielectric Gratings 1584 Dai Fei, Cheng Qiping, and Yue Hui Application of Terahertz Technology on RCS Measurement 1587 Wang Xiaobing, Huang Xin, Wu Yajun, Dai Fei, and Li Li Typical Target RCS Reduction Using Structural Radar Absorbing Material 1591 Yongfeng Wang and Kainan Qi International Workshop on Electromagnetic Detection and Identification \(EDI 2013 Error Analysis in Calculating RCS Using GRECO Method 1594 Zhi Hua Cheng, Yong Jun Xie, Xue Mei Wang, Yu Ru Mao, and Xiao Dong Ma Placement Optimization of Vehicular Antenna Using Particle Swarm Optimization 1597 Yu-Ru Mao, Yong-Jun Xie, Zhi-Hua Cheng, Xue-Mei Wang, and Xiao-Dong Ma A Novel Loss Compensated Multipath Power Divider for Frequency Synthesizer 1600 Tongfei Yu, Jungang Miao, Yan Xie, Baohua Yang, and Xianxun Yao An Approach for Extrapolating Far Field Radar Cross-Section from Near Field Measurement 1604 Gao Chao, Yuan Xiaofeng, and Bai Yang Implementation of the Digital Correlation Unit for Synthetic Aperture Interferometric Radiometer 1608 Xianxun Yao, Cheng Zheng, Baohua Yang, Jin Zhang, and Jungang Miao Design Procedures and Considerations of FOD Detection Millimeter-Wave FMCW Radar 1612 Jin Zhang, Cheng Zheng, Baohua Yang, Xianxun Yao, and Jungang Miao Exact Design of a Ka Band H-Plane Inductance Diaphragm Waveguide Band-Pass Filter 1618 Yong Fu, Baohua Yang, and Jungang Miao The Compact Microstrip Bandstop Filter Using Equal Width Open Stub 1622 Bao-Hua Yang, Ghulam Mehdi, Jin Zhang, Tong-fei Yu, Xian-xun Yao, and Jungang Miao 
xxiv 


The Design and Simulation of Hardware Architecture of the Fast and On-Site Assessing System of Scattering Characteristics of Stealth Aircraft Based on Simulink 1626 Hong Tao and Song Dan Second International Workshop on Engineering Pervasive Service Systems \(EPS 2013 Food Image Recognition Using Pervasive Cloud Computing 1631 Pengcheng Duan, Wenshan Wang, Weishan Zhang, Faming Gong, Peiying Zhang and Yuan Rao An Approach of Semantic Similarity by Combining HowNet and Cilin 1638 Peiying Zhang, Zhanshan Zhang, and Weishan Zhang Reconstruction of 3D Maps for 2D Satellite Images 1644 Lianzhang Zhu, Xuexing Zheng, and Pengfei Li Component-Based Cloud Computing Service Architecture for Measurement System 1650 Chao Liu, Qingsong Yu, Tianao Zhang, and Zhongwen Guo Second International Workshop on Energy and Wireless Sensors  \(e-WiSe 2013 Design Optimization of Electromagnetic MEMS Energy Harvester with Serpentine Coil 1656 Yuji Tanaka, Takayuki Fujita, Tatsuya Kotoge, Kohei Yamaguchi, Koji Sonoda Kensuke Kanda, and Kazusuke Maenaka Experimental Study of a Passive Impedance Matching Interface Based on a Centimeter-Size High Inductance Coil for Practically Enhanced Piezoelectric Energy Harvester Performance at Low Frequency 1659 Alessandro Giuliano and Meiling Zhu SPICE Modeling of Piezoelectric Energy Harvesting Device Utilizing Stress Influence 1662 Koji Sonoda, Takayuki Fujita, Kensuke Kanda, Kazusuke Maenaka, Hidenori Katsumura Masaya Tamura, and Hiroshi Kagata Modeling, Validation and Design Analyses of a Piezoelectric Cymbal Transducer for Non-resonant Energy Harvesting 1665 Alice Daniels, Alessandro Giuliano, Meiling Zhu, and Ashutosh Tiwari Towards Energy Autonomy of Wireless Sensors in Aeronautics Applications SMARTER Collaborative Project 1668 Marise Bafleur and Jean-Marie Dilhac 
xxv 


International Workshop on Gas Sensors and Gas-Sensing Platforms \(GS&GSP 2013 A Novel Surface Acoustic Wave Sensor for Optical Lens Surface Dirt Detection 1673 Jiuling Liu, Minghua Liu, Wen Wang, and Shitang He Electrical Sensoring Characteristics of Pseudo-LFE Sensors with Different Single Crystals 1676 Zhitian Zhang, Chao Zhang, Wenyan Wang, Yan Liu, and Tingfeng Ma Investigation of Polymer-Coated Film Bulk Acoustic Wave Resonator for Acetone Vapor Detection 1680 Jingjing Wang and Da Chen Polyaniline-Coated Surface Acoustic Wave Sensor for Humidity Detection 1685 Xiao Xie, Wen Wang, Shitang He, Ning Mu, and Yong Pan Effect of Facets of  Fe2O3 Nanostructures on Gas-Sensing Performance 1688 Jing Wang, Xiaoman Zhang, Weihong Xu, Liang Chen, Xingjiu Huang, and Jinhuai Liu Application and Development Trend of Gas Sensing Technology Based on Absorption Spectroscopy 1692 Zhenzhen Zhao, Fengchun Tian, and Shouqiong Liu Identification of Toxic VOC Pollutants Using FAIMS 1698 Youjiang Liu, Lehua Zhang, Hongwei Wang, Xiaotian Zhang, Chilai Chen Huanqin Wang, Deyi Kong, Mario A. Chavarria, and Juergen Brugger Detection of benzene series by two-dimensional  FAIMS technique 1702 Lehua Zhang, Youjiang Liu, Hongwei Wang, Chilai Chen, Huanqin Wang, Deyi Kong Xiaotian Zhang, Mario Chavarria, and Juergen Brugger Fabrication of Prototypal Nanomechanical Resonator Based on a Single Copper Nanowire 1706 Weihong Xu and Li-Feng Ge The SAW Gas Chromatograph and Its Applications in the Public Security 1710 Shitang He, Jiuling Liu, and Minghua Liu Theory of Lamb Wave Transducers and Their Applications for Gas and Liquid Sensing 1714 Li-Feng Ge Study of the Space Station On-Orbit Leak Detection Based on the Differential Pressure Gas Sensor 1718 Wei Sun, Rongxin Yan, Lichen Sun, Donghui Meng, Zheng Li, Haitao Guo, and Wenbin Li 
xxvi 


International Workshop on Human Body Communications and Biomedical Signal Processing \(HBC&BSP 2013 Pulse-Output Monitor Genetic Circuit of Breast Cancer Testing 1722 Xiang Wang, Guangqian Yuan, Xun Wang, and Zexi Zhao Elderly Gait Analysis and Assessment Based on Body Area Network 1729 Y.D.Xuan, Z. Zhao, Z. Fang, Z.H.Xu, F.M.Sun, D.L.Chen, L.D.Du, Y.M.Qian, H.Y.Hu and L.L.Tian Combined Motion and Region-Based 3D Tracking in Active Depth Image Sequence 1734 Xingyu Wu, Xia Mao, Lijiang Chen, and Angelo Compare Characteristic Optimization of Multilayer Dielectric for the Bloch-Surface-Wave Based Sensor 1740 Shuna Li, Jiansheng Liu, Zheng Zheng, Yuhang Wan, Weijing Kong, Sun Yu, and Shuna Li Facial Expression Recognition Based on t-SNE and AdaboostM2 1744 Jizheng Yi, Xia Mao, Yuli Xue, and Angelo Compare A Design of Security Module to Protect Program Execution in Embedded System 1750 Wang Xiang, Zhao Zexi, Lu Ying, and Zhang Yi Improved P-T Algorithm Applied to a Wearable Integrated Physiological Parameters System 1756 Z.H.Xu, Z. Fang, Z. Zhao, X.X.Chen, D.L.Chen, F.M.Sun, L.D.Du, Y.M.Qian, H.Y.Hui and L.L.Tian Iterative Threshold Selection for TOA Estimation of IR-UWB System 1763 Xiang Wang, Bo Yin, Ying Lu, Bin Xu, Pei Du, and Limin Xiao A Novel Alternative Exponent-Weighted Fuzzy C-Means Algorithm 1767 Renhao Fan, Xiang Wang, and Jordi Madrenas A Wireless ZigBee Router with P-H-T Sensing for Health Monitoring 1773 Z. Fang, F. M. Sun, J. Tan, and Z. Zhao A Whole Integrated System for Detection of Neural Signal and Wireless Transmission 1779 Dang Hua, Qu Ruoyuan, Chen Zhiming, Gui Xiaoyan, and Wang Xinghua Research on the Monitoring and Controlling Model of SIP Network 1784 Liang Zhang, Zhaoxin Zhang, Xu Cui, and Dan Liu Saliency-Based Feature Learning for No-Reference Image Quality Assessment 1790 Zhang Hong, Feng Ren, and Yuan Ding A Compensated Technique for 2.5-GHz Ring-Oscillator-Based PLL used in Wireless Transmission 1795 Dang Hua, Liu Zicheng, Gui Xiaoyan, and Zhong Shunan Speech Synthesis Research Based on EGG 1799 Lijiang Chen, Xia Mao, Pengfei Wei, and Angelo Compare A Temperature Insensitive Ring Oscillator for Low Power RF Communications 1804 Pilong Yang, Tongsheng Xia, Hongge Li, and Xiang Wang 
xxvii 


Low-Noise Biopotential Recording Circuit with Correlated Timeshare Sampling 1810 Hongge Li and Weidong Cao A No-Reference Quality Metric for Blur Image 1813 Zhang Taojia, Zhang Hong, and Yuan Ding Circuit Design of Analog Front-End for Neural Signal Detection 1817 Dang Hua, Zhang Lei, Chen Zhiming, Gui Xiaoyan, and Wang Xinghua A New Pedestrian Detect Method in Crowded Scenes 1820 Hou Xin, Zhang Hong, and Yuan Ding Design and Implementation of a Circuit System for Neural Signal Detection 1825 Dang Hua, Li Xiao, Chen Zhiming, Gui Xiaoyan, Wang Xinghua, and Zhong Shunan Design and Implementation of a CMOS 1Gsps 5bit Flash ADC with Offset Calibration 1829 Li Shiwen, Dang Hua, Gao Peng, Gui Xiaoyan, Chen Zhiming, Wang Xinghua and Zhong Shunan Spike Detection Based on Fractal Dimension 1834 Zhou Jiyang, Xu Shengwei, Lin Nansen, Wang Mixia, and Cai Xinxia A GPU-Accelerated Large-Scale Music Similarity Retrieval Method 1839 Limin Xiao, Yao Zheng, Wenqi Tang, Guangchao Yao, Li Ruan, and Xiang Wang Power Spectral Analysis of Acupoint Bioelectricity 1844 Quan Zhou, Nansen Lin, Shuping Gai, Jingjing Zhang, Lu Zhang, Wentao Shi Renhuan Yu, and Xinxia Caii Compressive Sensing of Neural Action Potentials by Designing Overcomplete Dictionaries 1848 Shuai Zhou, Bowei Dai, Yin Xiang, Shengwei Xu, Bingchen Zhang, Yilin Song Mixia Wang, and Xinxia Cai CloudDVMM: Distributed Virtual Machine Monitor for Cloud Computing 1853 Li Ruan, Jinbin Peng, Limin Xiao, and Xiang Wang Metadata-Intensive I/O Performance Optimization by Merging Read/Write Requests 1859 Li Ruan, Qimeng Wu, Limin Xiao, Ke Xie, and Xiang Wang International Workshop on Machine-to-Machine Communication \(IWMMC 2013 Angle of Arrival Estimation for Passive UHF RFID Tag Backscatter Signal 1865 Meng-Chang Hua, Guo-Chen Peng, Yan-Jun Lai, and Hsin-Chin Liu Mobile IMS Integration of the Internet of Things in Ecosystem 1870 Han-Chuan Hsieh, Jiann-Liang Chen, Ing-Yi Chen, and Sy-Yen Kuo Design of Gateway for Monitoring System in IoT Networks 1876 Ji-De Huang and Han-Chuan Hsieh Dependable Architecture of RFID Middleware on Networked RFID Systems 1881 Yung-Li Hu, Wei-Bing Su, Yennun Huang, Ing-Yi Chen, and Sy-Yen Kuo 
xxviii 


The Design and Implementation of the Front-End Software for the Telemetry and Telecontrol System of Satellite 1885 Zhao Qi and Ma Li Internet of Things for Special Materials Transportation Vehicles 1891 Li Shengguang, Tan Lin, Zhu Yuanshuo, and Zhang Rucai Performance Analysis of COMPASS for the Asia-Pacific Region 1895 Hangyu Huo, Xiaolin Zhang, and Canhui Chen International Workshop on Localization Technology and Location-Based Services \(LTLS 2013 A KNN Indoor Positioning Algorithm That Is Weighted by the Membership of Fuzzy Set 1899 Jiankun Yu and Jianye Liu Building Location-Based Service Based on Social Network API: An Example of Check-In App 1904 Pin-Fan Lee and Shuchih Ernest Chang Prioritizing the Data in the Target-Tracking Wireless Sensor Networks 1910 Dan Xu, Xiaojiang Chen, Xiaoyan Yin, Lvju Wang, Hao Chen, Yuan Zhang, and Dingyi Fang DLF: Target Detection and Localization in Wireless Network 1916 Tianzhang Xing, Dingyi Fang, Xiaojiang Chen, Liqiong Chang, and Yuhui Ren Bandwidth Reservation for Target Tracking in Region-Base Wireless Sensor Networks 1922 Xiaoyan Yin, Dingyi Fang, Xiaojiang Chen, Hao Chen, and Wei Wei Fusion Estimation Based on UKF for Indoor RFID Tracking 1928 Xue-bo Jin International Workshop on New Media and Computer Vision for Smart City \(NMCV4SC 2013 Facile Analysis of Smartphone Comics 1932 Beili Qiu Research on Production of Regional Animation Style Based on Computer Graphic Rendering 1935 Jingjing Chen, Yi Lin, Kexuan Ma, and Yue Liu A Blind Demodulation Algorithm for MFSK Signals Using STFT-Radon-Wavelet Transform 1940 Zhang Guoyi, Qi Xinglong, Zhang Xuzhou, and Lin Caiyong A Novel Method to Remove Eye-Blink Artifacts Based on Correlation Using ICA 1946 Hengsong Sheng and Hongjun Tian Virtual Assembly, Maintenance and Training System Based on the Virtual - Real Fusion Technology 1949 Ning Wang and Yue Qi 
xxix 


International Workshop on Optical Characteristics and Applications \(OC&A 2013 A New Infrared Sensor Model Based on Imaging System Test Parameter 1953 Zheng Liu, Hong-xia Mao, Ying-hong Dai, and Jing-li Wu Mixed Norm-Based Image Restoration Using Neural Network 1957 Yuan-nan Xu, Jing Wang, and Yan-bing Dong Simulation and Analysis of Turbulent Optical Wavefront Based on Zernike Polynomials 1962 Yan Chen, Shu-hua Wang, Yuan-nan Xu, and Yan-bing Dong Study on the Interaction of Optical Field and Transverse Acoustic Mode in Silicon Optical Fibers 1967 Jing Wang, Yuan-nan Xu, and Yan-bing Dong Testing Technology of Infrared Point Source Target Optical Axis 1972 Yue Peng and Hao Lu Human Segmentation in Infrared Videos Using Markov Random Field 1976 Wenjia Yang, Xiaodan Xie, Zhi Chai, and Yapeng Li Third IEEE International Workshop on Sensing, Networking and Computing with Smartphones \(PhoneCom 2013 SmartProbe: A Bottleneck Capacity Estimation Tool for Smartphones 1980 Francesco Disperati, Dario Grassini, Enrico Gregori, Alessandro Improta Luciano Lenzini, Davide Pellegrino, and Nilo Redini CANDIS: Heterogenous Mobile Cloud Framework and Energy Cost-Aware Scheduling 1986 Sebastian Schildt, Felix B¸sching, Enrico Jˆrns, and Lars Wolf An Experimental Study on Wireless Magnetic Communication with Smart Phone Using a MEMS Magnetometer 1992 Jiabo Wang and Xi Chen PhoneJoule: An Energy Management System for Android-Based Smartphones 1996 Xiaojing Liu, Fangwei Ding, Jie Li, Haifeng Liu, Zhuo Yang, Juan Chen, and Feng Xia KeyGraph-Based Social Network Generation for Mobile Context Sharing 2002 Myeong-Chun Lee, Young-Seol Lee, and Sung-Bae Cho Cyber-physical Directory: A Dynamic Visualization of Social Media Data 2007 Jean-Loup Lamothe, James She, and Ming Cheung 
xxx 


International Workshop on Sensor Data Processing and Integration \(SDPI 2013 Capturing, Calculating, and Disseminating Real-Time CO2 Emissions and CO2 Flux Measurements via Twitter in a Smart City 2013 Laurie Butgereit and Alecia Nickless Freshness-Aware Sensor Mashups Based on Data Services 2018 Guiling Wang and Feng Zhang A Method of Sensor Data Services Query in Emergency Management 2024 Xin Chen, Yanbo Han, Yongshan Wei, Feng Zhang, and Yan Wen A Sensory-Data-Hosting Oriented Scheduling Strategy on Virtual Machine 2029 Xiang Li and Yong Jiang International Workshop on Software Engineering for Internet of Things-Based Applications \(SeIoTA 2013 From the Internet of Things to Trusted Apps for Things 2037 Christian Prehofer A Profile for Step Data Transmission Based on Bluetooth Low Energy 2043 Youcong Ni, Sun Cong, Zhao Ting, Peng Ye, Chunyan Wang, and Luo Zeng Exception Handling in Service-Oriented Software: A Survey 2048 Xue Tong, Ying Shi, and Wu Qing On the Application of the Internet of Things in the Field of Medical and Health Care 2053 Fang Hu, Dan Xie, and Shaowu Shen Hierarchical RBAC Model with Alpha Factor in the Water Supply Pipeline Network Information System 2059 Wu Ting, Yuan Tianliang, and Yu Long Modeling Concern of Online Auction System with SA-CDL 2063 Linlin Zhang, Kai Zhao, Zhenhong Jia, and Youcong Ni The Research on Interactive Exhibition Technology of Digital Museum Resources 2067 Ning Wang and Xukun Shen International Workshop on Sensor Networks and Data Communications Security \(SNDCS 2013 Integrity Protection and Attestation of Security Critical Executions on Virtualized Platform in Cloud Computing Environment 2071 Bingyu Zou and Huanguo Zhang A Fuzzing Framework Based on Symbolic Execution and Combinatorial Testing 2076 Jian Yang, Huanguo Zhang, and Jianming Fu Dynamic Knowledge Repository-Based Security Auxiliary System of User Behavior 2081 Fan Yang, Jinxia Wu, Shanyu Tang, and Huanguo Zhang 
xxxi 


Research on a New Mathematic Description for Fingerprint Identification 2085 Zhao Ma, Shanyu Tang, Liping Zhang, Linchen Yu, and Sifa Zhang Robust and Efficient Authentication Protocol Based on Elliptic Curve Cryptography for Smart Grids 2089 Liping Zhang, Shanyu Tang, Yijing Jiang, and Zhao Ma De Bruijn Graph-Based Whole-Genomic Sequence Assembly Algorithms and Applications 2094 Xiaojun Kang, Shanyu Tang, Yongge Ma, Ruixiang Liu, and Yaping Wang Review of Digital Watermarking for 2D-Vector Map 2098 Jinxia Wu, Fan Yang, and Chonglong Wu Real-Time Covert VoIP Communications over Smart Grids by Using AES-Based Audio Steganography 2102 Yijing Jiang, Liping Zhang, Shanyu Tang, and Zhangbing Zhou Improving Performance of E-Government System from the User Perspective 2108 Hang Zhang, Sifa Zhang, Muzhou Xiong, and Shanyu Tang ECC-Based Authenticated Key Agreement Protocol with Privacy Protection for VoIP Communications 2114 Shaohui Zhu, Fan Yang, Liping Zhang, Shanyu Tang, and J. Li Establishment of Security Levels in Trusted Cloud Computing Platforms 2119 Fan Yang, Li Pan, Muzhou Xiong, and Shanyu Tang Efficient Divisible E-Cash in the Standard Model 2123 Jiangxiao Zhang, Zhoujun Li, Hua Guo, and Chang Xu International Workshop on Secure Smart Objects \(SSO 2013 Towards a Modular and Lightweight Model for Android Development Platforms 2129 Mussab Zneika, Hasan Loulou, Fatiha Houacine, and Samia Bouzefrane Towards a Secure Identity Management in Smartphone Environments 2133 Maryline Laurent, Samia Bouzefrane, and Christophe Kiennert Third International Workshop on Trends and Future of Web Science \(TFWS 2013 Extracting Protein Terminologies in Literatures 2136 Jangwon Gim, Donald J. Kim, Myunggwon Hwang, Sa-kwang Song, Do-Heon Jeong and Hanmin Jung Author Name Disambiguation in Technology Trend Analysis Using SVM and Random Forests and Novel Topic Based Features 2141 Sebastian Kastner, Sung-Pil Choi, and Hanmin Jung Research on Quantum-Bit Error Correction Coding for Smart Grid Substation 2145 Xin Miao and Xi Chen 
xxxii 


Fourth International Workshop on Universal User Modeling and Applications \(UUMA 2013 The Research of MEICSP Model through a REST Web Service 2148 Zhilei Huang, Lingyu Xu, and Yang Liu A Text Association Rules Mining Method Based on Concept Algebra 2153 Feiyue Ye, Jiannan Xiong, and Lingyu Xu Research and Application of the Intelligent Flow 2159 Yang Liu, Lingyu Xu, Liang Chen, and Fei Zhong Application of Hybrid MPI+TBB Parallel Programming Model for Traveling Salesman Problem 2164 Jinke Zhu and Qing Li Data Deduplication Cluster Based on Similarity-Locality Approach 2168 Xingyu Zhang and Jian Zhang The Application of the Knowledge Representation Based on Concept Algebra in the Knowledge Management System of Petroleum Enterprise 2173 Hongjie Duan, Shanpeng Wu, and Feiyue Ye A New Reliable Hybrid Algorithm for Shortening the Expanding Range of Interval 2178 Cheng Chen and Yongmei Lei A Novel Data Encryption in HDFS 2183 Thanh Cuong Nguyen, Wenfeng Shen, Jiwei Jiang, and Weimin Xu The Dynamically Efficient Mechanism of HDFS Data Prefetching 2188 Shaochun Wu, Guobing Zou, Honghao Zhu, Xiang Shuai, Liang Chen, and Bofeng Zhang Multi-granularity Recommendation Based on Ontology User Model 2194 Jianxing Zheng, Bofeng Zhang, and Guobing Zou Friend Recommendation Based on the Similarity of Micro-blog User Model 2200 Fan Tang, Bofeng Zhang, Jianxing Zheng, and Yajun Gu The Research of Image Detail Enhancement Algorithm with Laplacian Pyramid 2205 Yanwen Teng, Fuyan Liu, and Ruoyu Wu Information Gain with Weight Based Decision Tree for the Employment Forecasting of Undergraduates 2210 Yue Liu, Lingjie Hu, Fei Yan, and Bofeng Zhang A User Model-Based Resource Scheduling Framework 2214 Guannan Hu, Wenhao Zhu, Kangkang Niu, and Wu Zhang A Novel Method of Adopting Graph Reduction for Resource Management in Parallel Computing Model 2218 Shen Chao and Tong Weiqin Sentiment Classification for Topical Chinese Microblog Based on Sentences' Relations 2221 Kang Wu, Bofeng Zhang, Jianxing Zheng, and Haidong Yao An Anomaly Intrusion Detection Method Based on PageRank Algorithm 2226 Quan Qian, Jianyu Li, Jing Cai, Rui Zhang, and Mingjun Xin 
xxxiii 


Distributed File System and Classification for Small Images 2231 Shaojian Zhuo, Xing Wu, Wu Zhang, Xing Wu, and Wanchun Dou The Possibility of Normal Gait Analysis Based on a Smart Phone for Healthcare 2235 Susu Jiang, Bofeng Zhang, Guobing Zou, and Daming Wei IoT/CPS Demo and Exhibition Mo-Fi: Discovering Human Presence Activity with Smartphones using Non-intrusive Wi-Fi Monitors 2241 Weijun Qin, Hongsong Zhu, Jiadi Zhang, and Bo Li Towards a Pervasive Cloud Computing Based Food Image Recognition 2243 Wenshan Wang, Pengcheng Duan, Weishan Zhang, Faming Gong, Peiying Zhang and Yuan Rao Wireless IoT Platform Based on SDR Technology 2245 Yong Hua Lin, Qing Wang, Jun Song Wang, Ling Shao, and Jianbin Tang Join the Workshop Better with Telepresence Capturer 2247 Pin Tao, Lixin Feng, and Minxi Yu InSciTe Adaptive: R&D Decision Support System for Strategic Foresight 2249 Jangwon Gim, Do-Heon Jeong, Myunggwon Hwang, Sung-Pil Choi, Donald J. Kim Seungwoo Lee, Sa-kwang Song, and Hanmin Jung Author Index 2251 
xxxiv 


FrA6 \226 Privacy and Big Data Visitor Center   Chair Oh, Sewoong University of Illinois  Organizer\(s Duchi, John University of California, Berkeley  Oh, Sewoong University of Illinois Viswanath, Pramod University of Illinois  Local Privacy and Statistical Minimax Rates 1592  Duchi, John C University of California, Berkeley  Jordan, Michael I University of California, Berkeley  Wainwright, Martin J University of California, Berkeley  Differential Privacy, Equilibrium, and Efficient Allocation of Resources 1593  Roth, Aaron University of Pennsylvania  A Bayesian Method for Matching Tw o Similar Graphs without Seeds 1598  Pedarsani, Pedram 311cole Polytechnique F\351d\351rale de Lausanne  Figueiredo, Daniel R Federal University of Rio de Janeiro  Grossglauser, Matthias 311cole Polytechnique F\351d\351rale de Lausanne  Privacy as a Coordination Game 1608  Ghosh, Arpita Cornell University  Ligett, Katrina California Institute of Technology  De-Anonymizing Private Data by Matching Statistics 1616  Unnikrishnan, Jayakrishnan 311cole Polytechnique F\351d\351rale de Lausanne  Movahedi Naini, Farid 311cole Polytechnique F\351d\351rale de Lausanne  Robust Subspace Iteration and Privacy-Preserving Spectral Analysis 1624  Hardt, Moritz IBM Research Almaden  Privacy-Utility Tradeoff und er Statistical Uncertainty 1627  Makhdoumi, Ali Massachusetts Institute of Technology  Fawaz, Nadia Technicolor   


Copyright © 2009 Boeing. All rights reserved Advanced Arrival Procedures with Active Abatement Potentials   9/23/10  32 Backup Slides 


Copyright © 2009 Boeing. All rights reserved  Initial Approach Initial Investigations  Apache Solr/Lucene  Data Warehouse Evaluate Hadoop in the future 


Copyright © 2009 Boeing. All rights reserved  Using SOLR Uncompress Track Information Messages To use with Solr  Transforming track messages from their  original schema to Solr required building a ìkey, valueî list using an XSTL  Queries made against this list of ìkey, valueî pairs Transformation Process  One day of data ~ 4.5 hours Once transformation complete search/query performance very good Geo spatial queries using  unique query language 


Copyright © 2009 Boeing. All rights reserved  Representation Aviation data is frequently represented in more than one form 


