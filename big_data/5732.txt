TEMPORAL ASSOCIATION RULES MINING IN T-DATABASES USING PIPELINE TECHNIQUE   Kanhaiya Lal        N.C.Mahanti Deptt. of Computer Sc. & Engg     Deptt. of Applied Mathematics BIT, Patna Campus       BIT Mesra Patna, India         Ranchi, India  klal@bitmesra.ac.in 
ncmahanti@rediffmail.com      Abstract Temporal data mining is rapidly evolving area of research that is at the intersection of several disciplines, including statistic, temporal pattern recognition temporal database, optimization visualization, high performance computing parallel computing. The presence of a temporal association rule may suggest a number of interpretations, such as 
  Past event\(PE 002 Future event\(FE   The event\(E 002 PE and FE   events 002 coincidental \(c Classical association rules have no notion of order, while time implies an ordering. If we could find the associability of time with 
event, nothing will be hidden to us as the events are associated to each other in the form PE 002 P t E\(present event 002 FE. In this study, we examine the association rules mining in temporal database. After partitioning the database, a time interval TI=[s,e  is allocated to each partition and sequentially put the partitions in an array, in reverse order Keywords 
Association rules; temporal databases; timestamp model; pipeline parallelization  I  I NTRODUCTION  The increase in the affordability of storage capacity, the associated growth in the volumes of data being stored and the mounting recognition in the value of  temporal data and the usefulness of temporal databases and temporal data modeling has 
resulted in the prospe ct of mining temporal rules from both static and longitudinal/temporal da ta. Data mining can itself be viewed as the application of artificial intelligence and statistical techniques to the increasing quantities of data held in large, mo re or less structured data sets, such as databases [1  2   3 a n d  temporal data mining is an extension of this work Depending on the size of the database, many 
efficient algorithms have been proposed for finding the frequent patterns in a database 4 5 6  7 8  9  1 0    A  T EMPORAL DATABASE  A temporal database is a database with builtin time aspects. More specifically the temporal aspects usually include valid-time and transaction-time. Th ese attributes go 
together to form bi temporal data   Valid time denotes the time period during which a fact is true with respect to the real world   Transaction time is the time period during which a fact is stored in the database   Bi temporal data combines both Valid and Transaction Time 
2011 14th IEEE International Conference on Computational Science and Engineering CSE/I-SPAN/IUCC 2011 978-0-7695-4477-9/11 $26.00 © 2011 IEEE DOI 10.1109/CSE/I-SPAN/IUCC.2011.74 392 
The 14th IEEE International Conference on Computational Science and Engineering 978-0-7695-4477-9/11 $26.00 © 2011 IEEE DOI 10.1109/CSE.2011.196 392 


It is possible to have timelines other than Valid Time and Transaction Time, such as Decision Time, in the database  The Main Goal of Temporal Database   Identification of an appropriate data type for time   Prevent fragmentation of an object description   Provide query algebra to deal with temporal data   Compatible with old database without temporal data  1 3     B  R ELATIONSHIPS BETWEEN E VENT AND T IME  Time is represented by a calendar system that has multiple granularities such as hours days, etc. We assume that there is an absolute time line represented by real numbers Clock ticks of a c a lenda r a r e  represented by natural numbers. Each clock tick corresponds to an interval of real numbers. Thus, clock ticks of a calendar system are mapped to consecutive intervals of real numbers that are disjoint. This definition allows repres entation of multiple time granularities, which is essential for modeling temporal data as well as mining useful information from it  Generally, data is batched for a meaningful period of time and data mining techniques are applied to discover association rules However, in a temporal context, we can batch data by different time granularities i.e. hour, day, month, quarter, etc. and this may reveal further useful information. Let’s assume that the absolute time line is represented by a time unit of seconds. A calendar based on minutes would see every consecutive 60 second interval as one minute. A calendar of hours would consider every 60 minutes interval, 3600 seconds, as one hour and so on. The figure 1 shows any event takes place in the world is associated with a clock tick. The classification and characterization rule discovery algorithms discussed in a series of papers by Han and others  1 6    17  can be ex tended to accommodate time in a number of ways Minimally, time can simply be provided as a concept hierarchy, such as: Day ! Week Quarter ! Financial Year: Algorithms deriving concepts can use one of those concept hierarchies to generalize data estimate their statistical support in the sample, and try to find trends in them However, time can be generalized in many ways. An alternative concept hierarchy could be: Day ! Month ! Calendar Year Both hierarchies are equally valid for the generalization process. However, the statistics are computed on different groups of the same data as in  I n  19 an  algorithm is developed which generates candidate patterns and then matches them against user supplied granularities. . Relative Time: The concepts of before and after in sequences are addressed in sequence analysis.  Richer Allen-style interval relationships, such as during, overlaps contemporary of, etc., are more problematic Incorporating them into a mining algorithm remains an open problem. The problem of varying granularity is discussed in    
393 
393 


C  T IME SERIES TEMPORAL DATA MINING  Measure of temporal sequence is used for measuring temporal characteristic element between temporal sequences   Two methods can be used for this a  Characteristic distance measuring in time domain b  Characteristic distance measuring in other than time domain Predication of temporal sequence predicts some fields in a database based on time domain. The temporal classification model and temporal regression models   II  PROBLEM  DESCRIPTION  Let I 1  I m be a set of binary attributes called items. Let D be a database of transactions that contain a subset of items I Each transaction T is represented as a binary vector, with T  k   1 if T bought the item I k   and T  k   0 otherwise L e t X be a set of items in I We say that a transaction T satisfies X if for all items I k  in X  T  k   1. By  an association rule, we mean an implication of the form X 000  Y where X 003  I  Y 003  I and X 001  Y  004  X is the antecedent of the rule and Y is the consequent of the rule. The rule X 000  Y holds in D with confidence c if c of the transactions in D that contain X also contain Y The rule X 000  Y has support s in D if s of the transactions in D contain X 005 Y  Confidence is a measur e of rule’s strength while support corresponds to its statistical significance. An itemset X is called a k itemset if it contains k items from I  X  Y is a l extension of X if Y is a l itemset and X 001  Y  004 Given a database DB, the problem of mining association rules is to generate all association rules that have support and confidence greater than the user-specified minsup and minconf respectively  In temporal data minin g applications, it is necessary to search within a temporal sequence database for those sequences that are similar to a given query sequence. The problem is known as similarity search problem. This kind of problem involves search on multiple and multidimensional time series sets in TDBs to find out how many series are similar to one another. It is one of the most important problems in TDM. A sequence 006 is represented as 006 1 002\006 2 002  002\006 q where 006 1 is an event. A sequence is called a k-sequence, if the sum of the cardinalities of 006 1 is k. The sequence s 006 1 002\006 2 002  002\006 q  to be  subsequence of s 1   007 1 002\007 2 002  002\007 r e exist indices t1 < t2 <……tq of s 1 such that 006 1 010  007 t 1  006 2 010  007 t 2  006 q 010  007 tq The problem is concerned with the temporal order of the events within a sequence of transactions. A more general problem is when we focus on the temporal distance between the events. That is transaction should indicate the temporal gap between two transactions  III  RELATED WORKS   Association rules typically find correlations between items in trans action data sets that record activity \(such as purchases\ on multiple items as part of a single transaction  n asso ciation with rules mining   Apriori \(Agrawal and Srikant, 1995\HP  Savasere et al., 1995; Lin and Dunham 1998\ed to find frequent itemsets. Various aspects of the temporal data mining and knowledge discovery were discussed. This has included a discussion of temporal rules and their semantics, the discovery of temporal rules \(including temporal associations rules, time sequences and series, temporal classification, etc.\ as well as, the issue of interestingness, and temporal mining \(and meta-mining environments. Many of the techniques we have addressed are applicable equally to 
394 
394 


temporal data sets, seri es of static data sets and temporally oriented data warehouses\(Roddick and Spiliopoulou 2002; Tansel and Imberman,2007;  chu etal 2008 In cases where client histories exist temporal patterns on purchasing or other behavior over time can be discovered and used in strategic planning   2 7   The presence of a temporal association rule may suggest a number of interpretations. The earlier event plays some role in causing the later event. There is a third \(set of\ events that cause both other events. The confluence of events is coincidental.  The concept of association rule discovery is the same for temporal and non-temporal rules; algorithms designed for conventional rules cannot be directly applied to extract temporal rules The reason is that cla ssical association rules have no notion of orde r, while time implies an ordering. This ordering affects the statistical properties of the data and the semantics of the rules being extracted from them   Although much research is being performed in this domain, there are still several open issues like concepts, algorithms, and supportive techniques \(such as indexing designed for mining over static data should be extended to take th e temporal dimension into account. In particular, mining algorithms for static data are not directly applicable on temporal data. Concepts such as “interestingness” should incorporate the temporal dimension of the data and of the rules extracted from them. Database systems should offer data structures and operators appropriate for efficient temporal data mining This motivates us to mine association rules in temporal databases in this research  IV. T EMPORAL  ASSOCIATION RULES   One of the reasons behind maintaining any database is to enable the user to find interesting patterns and trends in data. The goal of data mining is to automate this process of finding interesting patterns and trends. Once this information is available we can perhaps get rid of the original database. This goal is difficult to achieve due to the vagueness associated with the term ‘interesting’. The solution is to define various types of trends in the database. One such type constitutes the association rules    A set of items is referred to be as an itemset. An itemset that contains k items is a k-itemset. The occurrence frequency of an itemset is the number of transactions that contain the itemset. This is also known simply, as the frequency, support count, or count of itemsets. An itemset satisfies minimum support if the occurrence frequency of the itemset is greater than or equal to the product of min-sup and the total number of transactions in the transaction set The number of transactions required for the itemset to satisfy minimum support is therefore referred to as the minimum support count If an itemset satisfies minimum support, then it is a frequent itemset. The set of frequent k-itemsets is commonly denoted as L k  Algorithm Input Database of transaction \(D Items \(I Large itemsets \(L Support\(s Confidence 006  Output Association Rules satisfying s and 006   ARGen algorithm R=0 For each l 011 L do  For each x 003 l such that x 012 0 do If support\(l\ / support\(x 013\006 then 
395 
395 


R= R 005 x 000 1 – x Let I=I 1 I 2 I m be a set of m distinct attributes, T be transaction that contains a set of items such that T 010  I, D be a database with different transaction records Ts. An association rule is an implication in the form of X 000 Y, where X, Y 003 I are sets of items called item sets, and X 001 Y 004 X is called antecedent while Y is called consequent, the rule means X implies Y. There are two important basic measures for association rules, support\(s\ and confidence\(c\ Since the database is large and users concern about only those frequently purchased items usually thresholds of support and confidence are predefined by users to drop those rules that are not so interesting or useful. The two thresholds are called minimal support and minimal confidence respectively. Support\(s of an association rule is defined as the percentage/fraction of records that contain X 000  Y to the total number of records in the database. Suppose the support of an item is 0.1%, it means only 0.1 percent of the transaction contain purchasing of this item Confidence of an association rule is defined as the percentage/fraction of the number of transactions that contain X 000 Y to the total number of records that contain X Confidence is a measure of strength of the association rules, suppose the confidence of the association rule X 000 Y is 80%, it means that 80% of the transactions that contain X also contain Y together. In general, a set of items \(such as the antecedent or the consequent of a rule is called an item set The number of items in an item set is called the length of an item set. Item sets of some length k are referred to as k-item sets Generally, an asso ciation rules mining algorithm contains the following steps The set of candidate k-item sets is generated by 1-extensions of the large \(k 1\enerated in the previous iteration Supports for the candidate k-item sets are generated by a pass over the database Item sets that do not have the minimum support are discarded and the remaining item sets are called la rge k-item sets. This process is repeated until no larger item sets are found 21,[22   23  W ith above rules a transa ction can be viewed as <TID , CID, I 1 I n I m  Where  TID is the ID for the transaction CID is the ID for customer, and I 1 I n I m are the items. When considered part of temporal database, a transaction could be viewed as TID , CID, I 1 I n I m t s t e  Where [ t s t e  is the va li d time r a nge f o r the transaction. If this were a grocery store transaction t s t e could be the point in time that the transaction was completed     Figure 2 Association rules in sequence for partition database  V  M ETHODOLOGY  
396 
396 


Our approach discovers the rules within a certain period for each partition, and repeats this process for the whole database for consecutive time periods Let TI  s  e  a ti me inter v al DB TI denotes the portion of a temporal relation that is valid during the interval s  e   Let ATI be the set of large itemsets derived from DB TI Let TI 1 TIn be consecutive non-overlapping, fixed length time intervals and ATI  ATI n 1 be the corresponding large itemsets Figure 2, depicts temporal relations and the large itemsets in partition over the time line in. Let L be the length of a time interval START be the start of TI 1 END be the end of TIn and g be the time granularity of the temporal database finds the large itemsets ATIi for i 1 n Changing L to n  L walks through the databa se in time intervals of s  s  n  L   For example, if L is one day, 365 L would be a year. This is particularly useful for observing seasonal/yearly/halfyearly cyclical patterns, and changes in such patterns. Moreover, it is possible to walk through the database by sliding the starting points of intervals different than the interval length  Algorithm for databases in different time granularities  1 s  START 2 e  START  L 3 while s 000  END do 4 begin 5 R  s  e   R  X  fI  s  e  6  compute A  s  e  7 s  s  L  g 8 e  s  L 9 end     Generation of Local Large Item sets  The procedure gen_large_itemsets takes a partition and generates al l large itemsets \( of all  lengths \at partition . The procedure is shown in Figure 2 . Lines 3-8 show the candidate  generation process. The prune step is performed as follows   Prune c: k-itemset  Forall k-1\ c do   If s doesnot belongs to L k-1 then   Return c can be pruned  The prune step eliminates extensions of \(k1\re not found to be large from  being considered for counting support For example , if L p 3 is found to be 1 2 3 } , { 1 2 4 } , { 1 3 4 } ,{ 1 3 5 2 3 4 } } the candidate generation initially generates the itemsets { 1 2 3 4 } and  { 1 3 4 5 }. However , itemset { 1 3 4 5 } is pruned since  { 1 4  5 }  is not in L p This technique is same as the one described in [4 except in our case , as each candidate itemset is generated , its count is determined immediately The counts for the candidate itemsets are generated as follows. Associated with every itemset, we define a structure called as tidlist A tidlist for itemset l contains the TIDs of all transactions that contain the itemset l within a given partition . The TIDs in a tid list are kept in sorted order. We represent the tidlist for an itemset l by l tid list Clearly, the cardinality of the tid list of an itemset divided by the total number of transactions in a partition gives the support for that itemset  in that partition Initially, the tid lists for 1-itemsets are generated directly by reading the partition The tid list for  a candidate k-itemset is generated by joining the tid lists of the two k-1\-itemsets that were used to generate the candidate k itemset. For example, in the above case the tid list for the candidate itemset { 1 2 3 4 }  is generated by joining 
397 
397 


the tid lists of itemsets { 1 2 3 }  and   { 1 2 4   Procedure gen_final_counts C G global candidate set, p r database partition  1  forall 1-itemsets do  2  generate the tid list 3   For k=2 ; C k G  000  004  k do begin  4   Forall k –itemset c belongs to C K G  do begin  5  Templist = C i st 014  C[2 i st 014 c[k  tidlist  6  C.count = count + | templist 7   End  8   End   Generation of Final Large Itemsets  The global candidate set is generated as the union of all local large itemsets from all partitions. In phase II of the algorithm, global large itemsets are determined from the global candidate set; this phase also takes n \(number of partitions\Initially, a counter is setup for each candidate itemsets and initialized to zero. Next, for each partition tidlists for all 1-itemsets are generated. The support for a candidate itemset in that partition is generated by intersecting the tidlists of all 1-subsets of that itemset the cumulative count gives the global support for the itemsets  Discovering Rules  Once the large itemsets and their supports are determined , the rules can be discovered in a straight forward manner as follows : if l is a large itemset , then for every subset a of l , the ratio support \( l \  / support \( a computed . If the ratio is at least equal to the user specified minimum confidence, them the rule  a => \( l - a \ is output[22   VI  CONCLUSIONS    F UTURE S COPE   Knowledge discovery in general, and discovering association rules in particular involves the extraction of useful information from large datasets. Temporal databases are naturally good sources for knowledge discovery. Moreover, temporal databases provide the opportunity to see how unearthed knowledge changes through time In this paper, we have developed a formalism to make te mporal databases a good source for knowledge discovery. It is also possible to observe the seasonal or cyclical changes and fluctuations in the rules. Moreover, the formalism presented in this paper can be used to extract the association rules in a given time interval beginning the discovery process in small time intervals, and combining the results of them to obtain a comple te set of association rules in the specified time interval If we consider t 1 as the time taken by partition algorithm to generate local large itemset and t 2 to generate global large itemset i.e. total time taken = t 1 t 2  Since the proposed algorithm uses m-stage pipeline to generate local large itemset therefore time taken is t 1 m+t 2  This approach will yield important results for the decision makers in the fields where customer preferences are strongly interrelated with the time. For example, the application of our formalism to the market basket data will be beneficial while interpreting the results of the promotions discounts, etc There are many problems for future research such as optimizing the enumeration operation and the discovery of association rules, evaluating the performance of different algorithms for discovering association rules, determining the right interval size, etc including incremental approaches. We are implementing our algorithm and comparing with other 
398 
398 


 REFERENCES  1  H. Mannila, “Methods and Problems in Data Mining”, Proc. Int'l Conf. Database Theory,  F.    Afrati and P. Kolaitis, eds pp. 41-55, 1997 2  C.J. Matheus, P.K. Chan, and G Piatetsky-Shapiro, “Systems for Knowledge Discovery in Databases IEEE Trans. Knowledge and Data Eng vol. 5, no. 6, pp. 903-913, Dec. 1993 3  U.M. Fayyad, G. Piatetsky-Shapiro, and P. Smyth”, From Data Mining to Knowledge Discovery: An Overview Advances in Knowledge Discovery and Data Mining, U. M. Fayyad, G Piatetsky- Shapiro, P. Smyth, and R Uthurusamy, eds., pp. 1-34, 1996 4  R. Agraval, T. Imielin ski, and A. Swami Mining Association Rules between Sets of Items in Large Databases’, In Proc.of ACM SIGMOD’93, Washington, DC 1993, 207-216 5  R. Agrawal, and R. Srikant, ‘Fast Algorithms for Mining Association Rules’ In Proc. of 28th VLDB’94 Santiago, Chile, 1994, pp. 487-499 6  S. Brin, R. Motwani, J. D. Ullman, and S. Tsur, ‘Dynamic Itemset Counting and Implication Rules for Market Basket Data’, In Proc. of ACM SIGMOD’97 1997, pp. 255-264 7  M. S Chen, J. S. Park, and P. S. Yu, ‘An Effective Hash Based Algorithm for Mining Association Rules’ In Proc. of ACM SIGMOD’95, San Jose California, 1995, pp. 175-186 8  H. Mannila, H. Toivonen, and A. I Verkamo, ‘Efficient Algorithms for Discovering Association Rules’, In Proc of AAAI’94 Workshop on Knowledge Discovery in Data bases, Seattle Washington, 1994, pp. 181-192 9  A. Savasere, E. Omiecinski, and S Navathe, ‘An ‘Efficient Algorithm for Mining Association Rules in Large Databases’ In Proc. of the 21st VLDB’95, Zurich, Switzerland, 1995   S. Thomas, S. Bodagala, K. Alsabti, and S. Ranks, ‘An efficient algorithm for the incremental update of association rules in large databases’ In Proc. of the KDD'97, New Port Beach, California 1997   http://en.wikipedia.org/wiki/Tempo ral_database   http://www.csie.ntu.edu.tw/~hh_lee temporal/introduction.html   Jan chomicki and David Toman, “ Time in database system”, Worldscientific/wsb9-75x6-50, 2004,pp- 3-25   X. S. Wang, C. Betini, A. Brodsky and S. Jajodia, ‘Logical Design for Temporal Databases with Multiple Granularities ACM TODS Vol. 22, No 2, 1997, pp. 115-170    Y. Cai, N. Cercone, and J. Han, An Attribute-Oriented Approach for Learning Classification Rules from Relational Databases Proc. Sixth IEEE Int'l Conf. Data Eng., pp. 281-288, 1990   J. Han, Y. Cai, and N. Cercone, DataDriven Discovery of Quantitative Rules in Relational Databases, IEEE Trans Knowledge and Data Eng., vol. 5, no. 1 pp. 29-40, 1993   R. Agrawal, S. Ghosh, T. Imielinski, B Iyer, and A. Swami, An Interval Classifier for Database Mining Applications, Proc. 18 th Int'l Conf. Very Large Data Bases, L.-Y. Yuan, ed., pp 560-573, 1992   C.P. Rainsford and J.F. Roddick Database Issues in Knowledge Discovery and Data Mining, Australian J. Information Systems, vol. 6, no. 2, pp 101-128, 1999   Y. Li, X.S. Wang, and S. Jajodia Discovering Temporal Patterns  in Multiple Granularitie s, Proc. Int'l Workshop Temporal, Spatial and Spatio 
399 
399 


Temporal Data Mining \(TSDM 2000 J.F. Roddick and K. Hornsby, eds 2000   J.F. Roddick and J.D. Patrick, Temporal Semantics in Information Systems DA Survey, Information Systems, vol. 17 no. 3, pp. 249- 267, 1992   Kanhaiya Lal et al, International Journal of Advanced Research in Computer Science, 1 \(3\, 2010, 90-94   Kanhaiya Lal etal, International Journal of Computer Applications \(0975 – 8887 Volume 2 – No.4, June 2010   K Lal et. al., Journal of Global Research in Computer Science, 1 \(2\ember 2010,31-34   Sharma G., Data mining, Warehousing and OLAP, 2 nd edition, Katson Pub 2009   R. Agrawal, T. Imielinski, and A Swami, ªMining Association Rules between Sets of Items in Large Databases, Proc. ACM SIGMOD Int'l Conf. Management of Data, vol. 22, pp 207-216, 1993   X. Chen, I. Petrounias, and H Heathfield, ªDiscovering Temporal Association Rules in Temporal Databases, Proc. Int'l Workshop Issues and Applications of Database Technology \(IADT '98\ pp. 312- 319 1998   W. KloEsgen, Deviation and Association Patterns for Subgroup Mining in Temporal, Spatial, and Textual Data Bases, Proc. First Int'l Conf. Rough Sets and Current Trends in Computing \(RSCTC '98 1995   John F. Roddick, Member, and Myra Spiliopoulou, A Survey of Temporal Knowledge Discovery Paradigms and Methods IEEE transactions on knowledge and data Engineering., vol. 14, no.. 4, July/Aug 2002   Chun-Jung Chu a, Vincent S. Tseng b Tyne Liang a, An efficient algorithm for mining temporal high utility itemsets from data streams, The Journal of Systems and Software 81 \(2008 1117, Elsevier, Science Direct   Abdullah Uz Tansel and Susan P Imberman, Discovery of Association Rules in Temporal Databases International Conference on Information Technology \(ITNG'07\IEEE, 2007    
400 
400 


E 10 s c 1 fr/l 60000 2 s 0 50000 l ro 40000  l 4-; 30000 0 l D 20000 E s s:: 10000 <l s f0 0.7 Itemset Size Figure 4. Results by Apriori Algorithm Candidate Frequent 4 6 The number of itemsets Figure 5. Results by the Proposed Algorithm Extracted Rules Non-Redunda nt Rules 0.75 0.8 0.85 0.9 0.95 Min imal Confidence\(Threshold Figure 6. The number of extracted rules by the conventional algorithm 9 The results by standard Apriori algorithm for fuzzy association rules mining are shown in Fig.4. At around 4th item set calculation, much waste computation is fulfilled. From the results, it can be seen that the waste computation should be reduced 72 250 


Vl 200 0 <I Q d 0 0 .... 100 <I D E ::: 50 I  f0 Deleted Non-Redundant Rules ___ Deleted Rules r 0.7 0.75 0.8 0.85 0.9 0.95 Minimal Confidence\(Threshold Figure 7. The number of deleted rules by the proposed algorithm Fig.5 shows the results of reduction of itemsets by the proposed algorithm. We can see that fair itemsets are pruned by the proposed method. Fig.6 shows the number of extracted rules by the conventional Apriori algorithm. Many redundant rules are extracted as well as the necessary non-redundant rules Our issue is to restrain the extraction of redundant rules. Fig.7 shows the results of the number of deleted rules by the proposed algorithm. Some redundant rules are deleted simultaneously along with frequent itemsets extraction However, since a few non-redundant rules are also unexpectedly deleted at the lower threshold value of minimal confidence, we have to investigate further about heuristics, i.e strong redundant itemsts and relation of threshold values. It should be noted that the number of deleted rules has less dependence on the minimal confidence These results are promising in terms of computational time and redundant rules pruning. However, the improvement is limited in terms of computational time. We consider that the performance of the proposed method must be improved by applying the output field specification method[17]. We expect that the number of pruned rules becomes larger based on the specifications. Moreover, the other measures to prevent redundant rules extraction in fuzzy association rules mining 


could be applied as well as the proposed algorithm VI. CONCLUSION In this paper, we proposed a basic algorithm based on the Apriori algorithm for rule extraction utilizing redundancy of the extracted rules, in order to improve the efficiency of the association rules mining and to prune the redundant rules extracted. We also proved the redundancy defmition of the rule based on the CF\(certainty factor algorithm was evaluated through numerical experiments using benchmark data, "Abalone". From the results, the method was found to be promising in terms of computational time and redundant rule pruning. Our future plan includes sophistication of the proposed algorithm, application to the huge data mining problem, and further improvement of fuzzy association rules mining REFERENCES I] R. Srikant and R. Agrawal, "Mining Generalized Association Rules Proc. of the 21" VLDB Conf, pp.407-419, 1995 2] R. Srikant and R. Agrawal, "Mining Quantitative Association Rules in Large Relational Tables," Proc. of the ACM Corif. on Management of the Data, pp.I-12, 1996 3] G. Chen and Q. Wei, "Fuzzy Association Rules and the Extended Mining Algorithms," Iriformation Sciences, Vo1.l47, pp.20 1-228, 2002 4] H. Ishibuchi H. and T. Yamamoto, "Fuzzy Rule Selection by Data Mining Criteria and Genetic Algorithms," Proc. of Genetic and Evolutionary Computation Coriference, pp. 399-406, 2002 5] Y. Hu, R. Chen, and G. Tzeng, "Discovering Fuzzy Association Rules Using Fuzzy Partition Methods," Knowledge-Based Systems, Vol. 16 pp.137-147,2003 6] T. Watanabe and N. Nakayama, "Fuzzy Rule Extraction Based on the Mining Generalized Association Rules," Proc. of the 2003 IEEE Int Conf on Syst., Man, and Cybern., pp.2690-2695, 2003 7] UCI Machine Learning Repository: http://www ics.uci.edu/-mlearnIMLRepository.html 8] T. Watanabe, A. Kitamura, K. Higuchi, and H. Ikeda, "Intelligent Manufacturing Techniques for Quality and Process Design of Steel Plate," 2003 IEEE International Coriference on Emerging Technologies and Factory Automation Proceedings, Vol.2, pp.596-601, 2003 9] S. Shankar and T. Purusothaman, "Utility Sentient Frequent Itemset Mining and Association Rule Mining: A Literature Survey and Comparative Study," International Journal of Soft Computing Applications, Issue 4, pp.81-95, 2009 


10] M. Delgado, N. Marin, D. Sanchez, and M.-A. Vila, "Fuzzy Association Rules: General Model and Applications," IEEE Trans. on Fuzzy Systems VoU I, No.2, pp.214-225, 2003 II] M. Delgado, N. Marin, M. J. Martin-Bautista, D. Sanchez, and M.-A Vila, "Mining Fuzzy Association Rules: An Overview," Studies in Fuzziness and Soft Computing, Springer, VoU64/2005, pp.351-373 2006 12] H. Verlinde, M. De Cock, and R. Boute, "Fuzzy Versus Quantitative Association Rules: A Fair Data-Driven Comparison," IEEE Trans. on System, Man, and Cybernetics, Part B, Vol.36, No.3, pp.679-684, 2006 13] E. Hullermeier and Y. Yi, "In Defense of Fuzzy Association Analysis IEEE Trans. on System, Man, and Cybernetics, Part B, Vol.37, No.4 pp.1039-1043,2007 14] Y. C. Lee, T. P. Hong, and T. C. Wang, "Mining Fuzzy Multiple-level Association Rules under Multiple Minimum Supports," Proc. of the 2006 IEEE International Conference on Systems, Man, and Cybernetics pp.4112-4117,2006 15] A. Mangalampalli and V. Pudi, "Fuzzy Association Rule Mining Algorithm for Fast and Efficient Performance on Very Large Datasets Proc. of the 2009 IEEE International Coriference on Fuzzy Systems pp.1163-1168,2009 16] Y. Xu, Y. Li, and G. Shaw, "Concise Representations for Approximate Association Rules," Proc. of the 2008 IEEE International Coriference on Systems, Man, and Cybernetics, pp.94-IOI, 2008 17] T. Watanabe, "Mining Fuzzy Association Rules of Specified Output Field ", Proc. of the 2004 IEEE Int. Corif. on Syst., Man, and Cybern pp.5754-5759,2004 73 


General Chair f!!\f  Organizing Chairs  f!!\f  f$% \f!!\f  Organizing Co-chairs f    f  f\f   f\f\f   f*!\f!\f.\f  f f  Program Committee Chairs  f\f\f   f!!\f  Publication Chair 0   


200 250 300  The size of dataset/10,000 R es po ns e tim e S    a 0 50 100 150 200  The size of dataset/10,000 R es po ns e tim e S    b 0 10 20 30 40 50 


60  The size of dataset/30,000 R es po ns e tim e S    c Fig. 9 The scalability of our algorithm compared with FP-growth  Paper [12] proposed a way to reduce times of scanning transaction database to reduce the cost of I/O IV. CONCLUSIONS AND FUTURE WORK This paper first discusses the theory of foundations and association rules and presents an association rules mining algorithm, namely, FP-growth algorithm. And then we propose an improved algorithm IFP-growth based on many association rules mining algorithms. At last we implement the algorithm we propose and compare it with algorithm FPgrowth algorithm. The experimental evaluation demonstrates its scalability is much better than algorithm FP-growth 177 Now, lets forecast something we want to do someday Firstly, we would parallelize our algorithm, because data mining needs massive computation, and a parallelable environment could high improve the performance of the algorithm; Secondly, we would apply our algorithm on much more datasets and study the run performance; At last, we would study the performance when the algorithm deal with other kinds of association rules  REFERENCES 1] S. Sumathi and S. N. Sivanandam. Introduction to Data Mining and its Applications, Springer, 2006 2] V. J. Hodge, J. Austin, A survey of outlier detection 


methodologies, Artificial Intelligence Review, 2004, 22 85-126 3] Han, J. and M. Kamber. Data Mining: Concepts and Techniques. Morgan Kaufmann, San. Francisco, 2000 4] Jianchao Han, Mohsen Beheshti. Discovering Both Positive and Negative Fuzzy Association Rules in Large Transaction Databases, Journal of Advanced Computational Intelligence and Intelligent Informatics 2006, 10\(3 5] Jiuyong Li, Hong Shen, Rodney Topor. Mining Informative Rule Set for Prediction. Journal of Intelligent Information Systems, 2004, 22\(2 6] Jianchao Han, and Mohsen Beheshti. Discovering Both Positive and Negative Fuzzy Association Rules in Large Transaction Databases. Journal of Advanced Computational Intelligence, 2006, 10\(3 7] Doug Burdick, Manuel Calimlim, Jason Flannick Johannes Gehrke, Tomi Yiu. MAFIA: A Maximal Frequent Itemset Algorithm. IEEE Transactions on Knowledge and Data Engineering, 2005, 17\(11 1504 8] Assaf Schuster, Ran Wolff, Dan Trock. A highperformance distributed algorithm for mining association rules. Knowledge and Information Systems, 2005, 7\(4 458-475 9] Mohammed J. Zaki. Mining Non-Redundant Association Rules. 2004, 9\(3 10] J.Han, J.Pei, Y.Yin, Mining frequent patterns without candidate generation, Proceedings ACM SIGMOD 2000 Dallas, TX, May 2000: 1-12 11] P.Viola, M.Jones. Rapid Object Detection Using A Boosted Cascade of Simple Features. Proc. IEEE Conf. on Computer Vision and Pattern Recognition, 2001 12] Anthony K. H. Tung, Hongjun Lu, Jiawei Han, Ling FengJan. Efficient Mining of Intertransaction Association Rules. 2003, 154\(1 178 


For each vertex b in g form j forests body\(a, g, i s.t. bodyAnt\(a, g, i a, g, i with itemsets Ant\(b b and each subset of itemsets Ant\(b b in P\(a, g, j Assign to each leaf l of trees bodyAnt\(a, g, i bodyCons\(a, g, i a fresh variable Vm,M, m, M = size\(itemset\(l Assign to each leaf l of tree headAnt\(a, g, j the variable assigned to itemset l in some leaf of some tree bodyCons\(a, g, i TABLE II.  EXPERIMENTAL DATA Conf. #rules #pruned #dftrs PtC 0.5 6604 2985 1114 0.6 2697 2081 25 0.75 1867 1606 10 0.8 1266 1176 0 0.95 892 866 1 0.98 705 699 1 DSP 0.5 2473 1168 268 0.6 1696 869 64 0.75 1509 844 89 0.8 1290 1030 29 0.95 1032 889 15 0.98 759 723 1 Arry 0.5 770 492 82 0.6 520 353 60 0.75 472 327 39 0.8 408 287 22 0.95 361 255 25 0.98 314 243 30  Our induction algorithm has been launched for each combination of thresholds. Our scheme eliminates all redundant rules in the sense of [25, 31], i.e. those association rules that are not in the covers. All the meta-rule deductive schemes implicitly included in [25] and [31] are induced by our method. The percentage of pruning, thus, outperforms [25 


The results produced for k=3, support 0.25 and confidences between 0.7 and 0.99 are shown in Fig. 3, in terms of pruning percentage \(vertical axis when applied to low confidences \(from 0.7 to 0.9 The percentage of pruning achieved diminishes as the confidence is superior to 0.9. Nevertheless, the pruning is effective with confidence of 0.99 in the majority of cases Pruning at Support = 0.25 0,00 5,00 10,00 15,00 20,00 25,00 30,00 35,00 40,00 45,00 50,00 0,7 0,8 0,9 0,95 0,99 Confidence P ru n in g L e v e l Case 1 Case 2 Case 3  Figure 3.  Pruning experiences at support 0.25  V. DISCUSSION AND CHALLENGES It is important to discuss the technique presented here with focus on the purpose the technique pursues:  to produce semantic recommendation The reader should have noticed that the algorithm presented 


relies strongly on "choice". For instance, the algorithm chooses ears in the graph to form an order for elimination, and the choice is arbitrary. This strategy is essential to maintain low complexity \(polynomial practical. Nevertheless, a warned reader may conclude that this arbitrary choice implies that there are many compactions to produce and therefore the approach as a whole does not show to produce an optimal solution. And the reader is right in this conclusion. Since the goal is compaction, the search for an optimal solution can be bypassed provided a substantial level of pruning is achieved To complete the whole view, we describe how web service descriptions are complemented with the association rules as recommendations. In effect, under our scheme, the document describing the web service is augmented with a set of OWL/RDF/S triples that only incorporate the non-pruned rules with the format of Example 1, that is, the set ARmin of the compaction program obtained by our algorithm, together with the thresholds applied to the mining process and a registered URI of a registered description service. The assumptions and defeaters are not added to the web service description. If the associations encoded in the triples are not sufficient for the client \(a search engine, for instance widening of the response to the description service identified by the given URI, and then the assumptions and defeaters are produced. The reasoning task required for deriving all the implicitly published rules is client responsibility Notice that, under this scheme, the actual rules that appear as members of the set initial ARmin set are irrelevant; the only important issue is the size of the set The developed scheme also supports an extension of the algorithm that admits the assignment of priorities to rules and to itemsets, in order to allow the user to produce a more controlled program as output. Nonetheless, the importance of the extension has not been already tested, and therefore it is beyond the subject of the present paper It would be also interesting to design a scheme that supports queries where the client provides an itemset class and values for support and confidence and the engine produces a maximal class of inferred associated itemsets as a response. This scheme is also under development, so we have not discussed this aspect here 


VI. CONCLUSION In this paper, we have presented a defeasible logic framework for managing associations that helps in reducing the number of rules found in a set of discovered associations. We have presented an induction algorithm for inducing programs in our logic, made of assumption schemas, a reduced set of association rules and a set of counter-arguments to conclusions called defeaters, guaranteeing that every pruned rule can be effectively inferred from the output. Our approach outperform those of [17], because all reduction compactions presented there can be expressed and induced in our framework, and several other patterns, particular to the given datasets, can also be found. In addition, since a set of definite clauses can be obtained from the induced programs, the knowledge obtained can be modularly inserted in a richer inference engine Abduction can be also attempted, asking for justifications that explain the presence of certain association in the dataset The framework presented can be extended in several ways Admitting defeaters to appear in the head of assumption, to define user interest Admitting arithmetic expressions within assumptions for adjustment in pruning Admitting set formation patterns as itemset constants Extending the scope, to cover temporal association rules REFERENCES 1]  R. Agrawal, and R. Srikant: Fast algorithms for mining association rules In Proc. Intl Conf. Very Large Databases. \(1994 2]  A. V. Aho, J. E. Hopcroft, J. Ullman. The design and analysis of computer algorithms, Addison-Wesley, 1974 3]  G. Antoniou, D. Billington, G. Governatori, M. J. Maher, A. Rock: A Family of Defeasible Reasoning Logics and its Implementation. ECAI 2000: 459-463 4]  G. Antoniou, D. Billington, G. Governatori, M. J. Maher: Representation results for defeasible logic. ACM Trans. Comput. Log. 2\(2 2001 5]  A. Basel, A. Mahafzah, M. Al-Badarneh: A new sampling technique for association rule mining, Journal of Information Science, Vol. 35, No. 3 358-376 \(2009 6]  R. Bayardo and R. Agrawal: Mining the Most Interesting Rules. In Proc of the Fifth ACMSIGKDD Intl Conf. on Knowledge Discovery and Data Mining, 145-154, \(1999 


7]  R. Bayardo, R. Agrawal, and D. Gunopulos: Constraint-based Rule Mining in Large, Dense Databases. Data Mining and Knowledge Discovery Journal, Vol. 4, Num-bers 2/3, 217-240. \(2000 8]  A. Berrado, G. Runger: Using metarules to organize and group discovered association rules. Data Mining and Knowledge Discovery Vol 14, Issue 3. \(2007 9]  S. Brin, R. Motwani, J. Ullman, and S. Tsur: Dynamic itemset counting and implication rules for market basket analysis. In Proc. ACMSIGMOD Intl Conf. Management of Data. \(1997 10] L. Cristofor and D.Simovici: Generating an nformative Cover for Association Rules. In ICDM 2002, Maebashi City, Japan. \(2002 11] Y. Fu and J. Han: Meta-rule Guided Mining of association rules in relational databases. In Proc. Intl Workshop on Knowledge Discovery and Deductive and Object-Oriented Databases. \(1995 12] B. Goethals, E. Hoekx, J. Van den Bussche: Mining tree queries in a graph. KDD: 61-69. \(2005 13] G. Governatori, D. H. Pham, S. Raboczi, A. Newman and S. Takur: On Extending RuleML for Modal Defeasible Logic. RuleML, LNCS 5321 89-103. \(2008  14] G. Governatori and A. Stranieri. Towards the application of association rules for defeasible rules discovery In Legal Knowledge and Information Systems, JURIX, IOS Press, 63-75. \(2001 15] J. Han, J. Pei and Y. Yin: Mining frequent patterns without candidate generation. In Proc. ACM-SIGMOD Intl Conf. Management of Data 2000 16] C. Hbert, B. Crmilleux: Optimized Rule Mining Through a Unified Framework for Interestingness Measures. DaWaK: LNCS 4081, 238247. \(2006 17] E. Hoekx, J. Van den Bussche: Mining for Tree-Query Associations in a Graph. ICDM 2006: 254-264 18] R. Huebner: Diversity-Based Interestingness Measures For Association Rule Mining. Proceedings of ASBBS Volume 16 Number 1, \(2009 19] B. Johnston, Guido Governatori: An algorithm for the induction of defeasible logic theories from databases. Proceedings of the 14th Australasian Database Conference, 75-83. \(2003 20] P. Kazienko: Mining Indirect Association Rules For Web Recommendation. Int. J. Appl. Math. Comput. Sci., Vol. 19, No. 1, 165 186. \(2009 21] M. Klemettinen, H. Mannila, P. Ronkainen, H. Toivonen, and A Verkamo: Finding interesting rules from large sets of discovered association rules. In Proc. 3rd Intl Conf. on Information and Knowledge 


Management. \(1994 22] M. J. Maher, A. Rock, G. Antoniou, D. Billington, T. Miller: Efficient Defeasible Reasoning Systems. International Journal on Artificial Intelligence Tools 10\(4 2001 23] C. Marinica, F. Guillet, and H. Briand: Post-Processing of Discovered Association Rules Using Ontologies. The Second International Workshop on Domain Driven Data Mining, Pisa, Italy \(2008 24] N. Pasquier, Y. Bastide, R. Taouil, and L. Lakhal: Closed sets based discovery of small covers for association rules. In Proc. BDA'99 Conference, 361-381 \(1999 25] N. Pasquier, R. Taouil, I. Bastide, G. Stume, and  L. Lakhal: Generating a Condensed Representation for Association Rules. In Journal of Intelligent Information Systems, 24:1, 29-60 \(2005 26] P. Pothipruk, G. Governatori: ALE Defeasible Description Logic Australian Conference on Artificial Intelligence.  110-119 \(2006 27] J. Sandvig, B. Mobasher Robustness of collaborative recommendation based on association rule mining, Proceedings of the ACM Conference on Recommender Systems \(2007 28] W. Shen, K. Ong, B. Mitbander, and C. Zaniolo: Metaqueries for data mining. In Fayaad, U. et al. Eds. Advances in Knowledge Discovery and Data Mining. \(1996 29] I. Song, G. Governatori: Nested Rules in Defeasible Logic. RuleML LNCS 3791, 204-208 \(2005 30] H. Toivonen, M. Klemettinen, P. Ronkainer, K. Hatonen, and H Mannila: Pruning and grouping discovered association rules. In ECML Workshop on Statistics, Machine Learning and KDD. \(1995 31] M. Zaki: Generating Non-Redundant Association Rules. In Proc. of the Sixth ACMSIGKDD Intl Conf. on Knowledge Discovery and Data Mining, 34-43, \(2000 32] w3c. OWL Ontology Web Language Reference. In http://www.w3.org/TR/2004/REC-owl-ref-20040210 33] w3c. RDF/XML Syntax Specification. In: http://www.w3.org/TR/rdfsyntax-grammar 34] w3c. RDF Schema. In: http://www.w3.org/TR/rdf-schema      


 8   2  3\f            8  D    F  \b 1 8 & #J      b 1  1  4    2  


4 1    9  E 1  2 4 1    9 1   4      8 2  8 1  D 1        1 1  b 


     b b b b b  K            8          2 D 9   F  \b 1 8 ,+J  9 


     b 1     1 2  9 1  12 L 1   9  8       1  2      2   


     b b b b b  K            2  0 \b f  b\f      9       


  8 2   E 1   1     M13 31L 1    b  8E 1   1 #3\b?### 1  1     E 1   1 \b?###3        


1   1   b 1  2 2 18 2     8              1    2 \b 1    2  


    2          2   1 L 2 1   1   L 2 2    2 1  2        


    8  2H D \b A             2  2H D \b A 2 \f 3%\f  f   4%\f f !  , \f\b  C    2    2 


 6    3 1      253 6   1 L 2    6   1         f\b3\f       


               1     1     8 2    E       2  1   


     2 8    b 4      1 8             1 2     1  8 2  


1 9    8      2 1       1     2    8    2 3\f        


     8 D 4 9  F  \b 1 8 #J 9 1     2 1   2 #-@ 1   2 9  E 1   1   2 9      6  


    8  8   1  D 1         1 F  \b0         2 D    F  \b 1 8  9  


  1 9  1   E 1  2 9     1 1 F  \b       1    18   F   1    1 #-$+  \b  2 2  


1 D     1 #-$+.B- 0/:% .0             9 1      18    1 6     1 2  1  1  


1   6      2    1 2 E 8 D 1      1 2   1   1 #-4  #-@E     2  1  1  1       


 8     1          2 F    6   F  2   8    2 C<CC/C N\bO 5      


CD    b$44NO F P Q 6   2 b$$$ ,=\b\bA  A N,O 2 C C  b$$4N  92 2   f  9-\b$$4 B N?O  !-    91  2 1 HH111-18-N+O    -1 :3%   2     0-4 


     b N4O 2   2- \f  C b$@$ \b# >\b\b$3\b$N@O  f :.% 9 /9 \f    1  6  f 2  4   A254 


Advantages of Our M ethod Advantages of Our M ethod Exploit the memory v ertical data format utilizes slidin g windows to g form a much larger database to analyze  Flexibility in Choosing what to choose  Choosing what to choose to build the rules Computational and memory efficiency We have a team working only on this aspect 45 Associative IDS for NextGen Frameworks Dr S Dua LA Tech 45 


Preliminary Results Intra transaction Relations Data rate simulator NH-134 Mb HOP PATH update \(Y/N Inference 11.5 Y Y 2 0.120 N N      Y   n 0.345 N NH134 Y/N   Inf 1 0.150 N N 2 0 120 Y N Inter transaction Relations 2 0  120 Y N       5 5.55 0.456 Y Relations  n 0.345 N N Nmap on DMRL nmap.org 


Anticipated Outcome Anticipated Outcome Develop algorithm capable of learning from a given heterogeneous diverse Develop algorithm capable of learning from a given heterogeneous diverse data ff Dynamic algorithmic f ramework designed to shi f t modalities and sampling rates based on complex logic Flexibility of integration into the Snort intrusion detection system 47 Associative IDS for NextGen Frameworks Dr S Dua LA Tech 47 


References References Aircraft Cockpit Image courtesy USAF http://www.faa.gov htt p   www.faa g ov  air traffic  technolo gy  p g  _ gy  Acharya R Dua S Du X Sree V Chua C K Automated Diagnosis of Glaucoma Using Texture and Higher Order Spectra Features To appear in IEEE Transactions on Information Technology in Biomedicine  Du X Dua S 2011 Cancer Prognosis Using Support Vector Regression in Imaging  Modality World Journal of Clinical Oncology 2  1   44 49 Du X Dua S 2010 Salient Frame Extraction Using Support Vector Regression and Motion Features pp 5 Proc of the National Aerospace and Electronics Conference July 14 16 2010 D M P D S 2010 Di i i ti Ft d Cl ifi ti Mthd f D essaue r  M  P  D ua S  2010  Di scr i m i na ti ve F ea t ures an d Cl ass ifi ca ti on M e th o d s f or Accurate Classification 1st ed vol 7704 pp 14 Bellingham WA Proceedings of SPIE Dessauer M P Dua S 2010 Low Resolution Vehicle Tracking using Dense and Reduced Local Gradient Features Maps 1st ed vol 7694 pp 8 Bellingham WA Proceedings of SPIE SPIE 


Acknowledgements Acknowledgements Fundin g A g encies  US 4 1 Million direct fundin g g g 4 g LA BoR NIH NSF AFRL AFOSR and NASA Research Team Samuel Kasimalla Brandy McKnight Dr Pradeep Chowriappa Connor Johnson Vasanth Nair Mihir Chowriappa  Connor Johnson  Vasanth Nair  Mihir Karnik Mohit Jain and Swadheen Songmen Associative IDS for NextGen Frameworks Dr S Dua LA Tech 49 All the respective Logos belong to their owners 


Rf d Rdi R e f erence d R ea di ngs Copyright of cover pages held by respective publishers 


Thank You Questions Thank You  Questions Dr Sumeet Dua E mail sdua@latech.edu Web http://dmrl.latech.edu Associative IDS for NextGen Frameworks Frameworks Dr S Dua LA Tech 51 Image Source roadtrafficsigns.com 


