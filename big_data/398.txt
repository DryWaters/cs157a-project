Generating an informative cover for association rules Laurentiu Cristofor University of Massachusetts at Boston Department of Computer Science Boston, Massachusetts 02125 USA laur@cs.umb.edu Abstract Mining associarion rules may generare a large num bers of rules making rhe rpsulrs hard fo analyze manually Pasquier er al have discussed rhe generalion of Guigues Duquenne-Luxenburger basis GD-L basis Using a sim ilar appmach we inrmduce a new rule of inference and define rhe norion of associarion rules cover as a minimal ser of rules rhar are non-redundanr wirh respecr ro rhis new rule of 
inference Our experimenral results obtained us ing borh synrheric and real data sets show rhar our covers are smaller rhan the GD-L basis and they are computed in rime rhar is comparable ro the classic Apriori algorirhm for generaring rules 1 Introduction The number of association rules generated by data min ing algorithms can easily overwhelm a human analyst To address this problem several methods were proposed Our paper continues the line of research from 71 by introducing a new rule of inference for association rules and by defining the concept of a cover of the association rules as a minimal set of rules that are 
non-redundant with respect to this new inference rule We use the terminology and notations of 91 Let T  T H p be a table, where T is the name of the table H  AI   A is the heading of the table, and p E 0 l We assume that each attribute have 0 l as its domain The projection of a tuple on a set L C_ H is denoted by t[L The tuple over I that consists of Is is denoted by 11 An iremser I is a set of items I 
C_ H The supparr of I denoted by supp\(I is given by supp\(1  vu In addition supp\(0 is defined to be 1 The closure of an itemset I is cl\(1  A E H\(ift[I  11 then t[Ai  1 An itemset is called closed if it is equal to its closure An associarion rule X  Y consists of two disjoint non Dan Simovici University of Massachusetts at Boston Department of Computer Science Boston Massachusetts 02125 USA dsim@cs.umb.edu 
empty itemsets X and Y called anrecadenr and cansequenr and denoted by antc\(r and cons\(r respectively We refer to the items of a rule T by items\(r  antc\(r U CO~S\(T The supporr of the association rule is the support of i tems\(rl The confidence of the association rule is the  ratio supp i tems T supp\(antc\(r  COnf\(T  If conf\(r  1 then T is called an exact association rule and denoted by X  Y 
otherwise r is called an approx imarive association rule see 7 Given a table T a mini mum support value minsupp and a minimum confidence value minconf we seek to generate all valid association rules cf 8 that is all rules with support greater or equal to minsupp and confidence greater or equal to minconf To deal with the usual large number of association rules it is preferable to generate only the association rules that cannot be inferred from other rules by using N~S of infer ence A minimal set of such association rules was called basis in 71 To avoid 
confusion we mention here that the single word rule will only be used in the sense of an as sociation rule and will never be used to denote an inference rule The Guigues-Duquenne basis for exact rules and the henburger basis for approximative rules are introduced in 7 together they form a basis for the valid rules The Guigues-Duquenne basis is a minimal set of ex act rules from which the complete set of exact rules can be deduced using as following two inference rules X  Y W  Zt XW  YZ,andX  Y Y  Z k A Z The Guigues-Duquenne basis does not 
allow us to infer the support of the rules and in fact by ignoring the support values, the first inference rule can lead to rules that have in ferior support compared to the rules used in its generation The Luxenburger basis is a minimal set of approximative rules from which the complete set of approximative rules can be deduced using the two properties introduced in 61 I the association rule X  Y has the same support and confidence as the rule cl\(X  cl\(Y and 2 for any three closed itemsets X Y and Z such that X C_ Y Z 0-7695-1754-4/02 17.00 Q 2002 IEEE 597 


the confidence of the rule X  Z is equal to the product of the confidences of the rules X t Y and Y i 2 and its support is equal to the support of the rule Y  Z Both these properties can be regarded as new inference rules and they permit the inference of both the support and confidence of the resulting rules Together the Guigues-Duquenne ba sis and the Luxenburger basis provide a minimal basis for rules which we will denote as the GD-L basis Next, we introduce a new rule of inference for rules Theorem 1.1 Ler r r be hvo rules such that i terns C_ iterns\(r and supp\(antc\(r 5 supp\(antc\(r Then supp\(r 2 supp\(r andconf\(r 2 conf\(r This justifies the introduction of the inference rule r items C_ items\(r supp\(antc\(r 5 supp\(antc\(r r Definition 1.2 If for two rules r1 and r2 it is possible to infer TS from r1 using Theorem 1 I then we say that rule r2 is covered by rule TI and that q covers p and we write rI  r2 The coverage relarion  consists of all ordered pairs of rules rt,rz such that rI  r2 If r1  rz and rz  TI lhrn TI 2 arc said 10 be equipotent n Because of Definition I 2 we will also refer to the property of Theorem 1.1 as the coverage rule Theorem 1.3 The rules rl and r2 are equiporenr if and only$iterns\(rl  iterns\(r2 supp\(antc\(r1  SUPP an t 4.2  Equipotent rules are interchangeable from the point of view of the coverage relation that is if rt and r2 are equipo tent and TI  g for some TQ then TS  3 2 Covers for association rules Theorem 1 I suggests the following definition Definition 2.1 Let S be the set of all valid rules extracted from a table r A cover ofX is a minimal set C 2 such that any rule from 2  e is covered by a rule in e A rule 0 Theorem2.2 Ler e be a cover of a set of rules X ex rracred fmm a rable r If r is a Ccover rule then for any T E 31 such rhar i terns\(r  i terns\(r we have supp\(r 5 SUPP\(T and conf\(r 5 conf\(r and rhere is no r1 E X such rhar antc\(r  antc\(r1 and cons\(r C cons\(T1 Furrhec if rI,r2 E e rhen iterns\(r1  iterns\(r2 belonging to e is called a Ccover rule Definition 2.3 An informurive cover is a cover where for each cover rule T there is no equipotent rule r such that antc\(r c antc\(r U Thwrem 2.4 Ler t be on informarive cover of a ser of rules X extracredfmm a rable r lf is a Ccover rule rhen rhere is no valid rule r such rhar i terns  i terns\(r and antc\(r c antc\(r Note that it is possible to have an informative cover rule randavalidruler',suchthatitems\(r  iterns\(r and jantc\(r  jantc\(r as the next example shows A cover summarizes the set of valid rules in a similar way in which the large itemsets summarize the set of fre quent itemsets 2 A cover can also be used to simplify the presentation of rules to users initially only cover rules could he shown to a user then the user could select a cover rule r and retrieve a subset of all rules covered by r and then the process could be repeated In this manner, the user could guide his search for rules without being overwhelmed by their number A similar type of rule exploration has been proposed in 5 in the context of the so called direction ser ring rules The following pseudocode describes an algorithm for generating an informative cover for the set of valid rules Algorithm 2.5 The CoverRules Algorithm Let R be a queue that will contain frequent itemsets and let C be the set of rules in which we will place the cover rules I Initialize R by enqueuing into it all maximal frequent itemsets in decreasing order of their size C is 0 2 If R is empty then output C and exit else extract an 3 For all strict non-empty subsets 1 of I with i  1 21  2 soned primarily by their support values decreasingly and secondarily by their cardinality in creasingly do itemset I from R 3.1 If the rule I  I  I is valid then add it to C if it is not covered by a rule already in C Go to step 2 3.2 If i  1 and 111  2 then add to Reach subset of I that has size I1  1 and that is not already included in an itemset from R Continue step 3 Algorithm CoverRules starts from the set of maximal frequent itemsets and examines them in decreasing order of their cardinalities \(steps 1-2 For each such itemset I we search for a subset S having maximum support, such that S i I  S is a valid association rule step 3 Such a rule is a candidate cover rule and once found, the search stops and the rule is added to the set of cover rules c if it is not 598 


covered by one of the rules of C step 3.1 During the ex amination of each subset S of I we may encounter some subsets such that they cannot be used as an antecedent of a rule based on the items of I For these subsets, we will have to verify whether they can be antecedents of rules based on subsets of I This is why in step 3.2 of the algorithm, we add to R all the subsets of 1 Those subsets that are al ready included in an itemset of R however do not need to be added Step 3.2 needs to be performed only once so we perform it if the first subset examined in step 3 cannot be used as an antecedent The collection R is a queue because we want to examine the maximal frequent itemsets in de creasing order of their size before we examine their subsets added in step 3.2 We examine these itemsets in decreas ing order of their size because a rule whose set of items is larger cannot be covered by a rule whose set of items is smaller This ensures that a cover rule added to C cannot be covered by another cover rule that we may discover later Each time that we intend to add a rule to C however, we still need to check whether that rule can be covered by one of the rules already in 6 The strategy of examining first the maximal frequent itemsets and then their subsets in decreasing order of their size guarantees that the set of rules that we generate is min imal Step 3.2 guarantees that all valid rules can be inferred from the rules in set C Together, these ensure that the re sulting set C is a minimal set of rules from which all valid rules can be inferred and thus C is a cover The cover is in formative because in step 3 for subsets with same support we examine first those with smaller cardinality 3 Experimental results The optimized version of CoverRules implemented in Java is available in ARtool 4 We tested CoverRules on several databases In a first experiment, presented in Ta ble l we executed the algorithm on the Mushroom database from the UCI Repositoly of Machine Learning Databases 3 Note that the UCI repository contains two versions of the Mushroom database We have used the version contain ing fewer rows which was used in the experiments of 7 Mushrwm dnahhase minsupp  3G-X 70si 453 47Y Table 1 Results for Mushroom database The cover contains fewer rules than the GD-L basis and its size decreases as minconf is lowered \(see also Fig I This may seem surprising at first but is due to the fact that as minconf is lowered, more valid rules exist the re 93 1m 5G-X MI Minimum EonBdenmce Figure 1 Comparative Results on Mushroom Database dundancy of these rules is greater, and thus they can be sum marized better In fact forminconf  30 the size ofthe cover is identical to the number of maximal frequent item sets existing in the mushroom database \(for minsupp  30 there are 78 such niaximal frequent itemsets\and this happens because all rules that can be generated using sub sets of a maximal frequent itemset are valid In this case the cover size is one order of magnitude smaller than the size of the GD-L basis and three orders of magnitude smaller than the total number of valid rules For minconf  30 all cover rules have the item veil type  partial as antecedent Interestingly this item is common to all the mushrooms described in the database so its support value is 1  the maximum possi ble support value By looking at a cover rule separately the fact that the rule has the most frequent item as antecedent might make us think that the rule is trivial Knowing that this is a cover rule however its antecedent being the most frequent item takes new meaning because it implies that any rule that we can build from the items of the cover rule will be a valid association rule Usually the most frequent items are known to the users of the database so a cover rule hav ing such an item as antecedent can be easily interpreted even without the help of the computer In the case of the Mushroom database, the CoverRules algorithm is about as fast as the Apriori ap-genrules proce dure for generating all valid rules, which was described in I Both algorithms finished their processing in a couple of seconds so we do not include their detailed time results here To test the on synthetic data we generated database SPARSE with 100.000 transactions of average size IO hav ing I00 items, and containing 300 patterns of average size 5 We mined SPARSE forminsupp 5 and discovered 207 maximal frequent itemsets For all our experiments on this 599 


database the times taken by CoverRules and ap-genrules were well below 1 second so we omit them again The num ber of rules discovered and the corresponding cover size are presented in Table 2 50\260F 4ff 3 IY 42 x7 1x6 321 455 658 xxo nno x8o __  52J CWCr 2 13 25 55 I24 IY6 240 257 1Y4 1Y4 1Y4    Table 2 Results for SPARSE database Note that the cover size increases initially as minconf decreases This happens because the database is sparse so the redundancy is poor and rules that are discovered when the confidence threshold is lowered do not necessar ily allow the inference of rules with higher confidence For minconf  10 we obtain all valid rules and lowering the confidence threshold funher does not bring any new rules In fact. the 194 cover rules correspond to the maximal large itemsets that have cardinality greater than one since there are 13 such maximal frequent itemsets of size one For our final experiment we generated a dense synthetic database, which we will call DENSE with 100,000 transac tions of average size IS having 100 items and containing 100 patterns of average size IO Our strategy for obtaining dense synthetic databases consists of choosing fewer and longer patterns We mined this database for minsupp  5 and we obtained 3,182 maximal frequent itemsets For this experiment the times taken by the CoverRules and ap-genrules algorithms became noticeable and we include them in Table 3 Again for this dense database the cover size generally tends to decrease as we lower the confidence threshold All valid rules are discovered for confidence 5 so lowering DENSEdrmbru minsupp 5 minconf Valid mle spgenrulr Cover Co~erRula Tlme\(ucondrJ Tlrnr\(wconds 87722 5111Y1 574554 54 603x61 6483 40C 630706 6506 301 656724 5496 104 20\224x 682076 5674 10 703373 3416 5 703924 52 3181 37 IC 703Y24 52 31x1 37 Table 3 Results for DENSE database minconf further does not result in more rules There is only one maximum frequent itemset of size one which ac counts for the difference between the number of maximal frequent itemsets and the cover size obtained in this case The time taken by the rule generation algorithms is more significative and allows us to notice that CoverRules\222s per formance tends to improve with the lowering of the confi dence threshold, while ap-genrules tends to take more time as minconf is decreased ap-genrules runs initially faster than CoverRules which performs better for lower values of minconf These results however do not include the time necessary to output the generated rules The space re quirements of ap-genrules are more significant than those of CoverRules and in some experiments we had to increase the memory available to the lava Virtual Machine so that ap-genrules would not run out of memory As expected the performance of CoverRules as well as that of ap-genrules slows down when the databases are denser, and when the number of maximal frequent itemsets increases The performance of the algorithms varies differ ently with the change of rninconf For dense databases the size of the cover is one-two orders of magnitude smaller than the number of valid rules and shows the tendency of getting smaller as the redundancy in the generated rules in creases References I R Agrawal and R Srikant Fast algorithms for mining BESO ciation rules RI 9839 IBM Almaden Research Center Al maden California 1994 2 R J Bayardo Efficiently mining long patterns from databases In Proceedings of ACM-SIGMOD Inrernariowl Cnnfkrmce on Monugernent of Dura pages 85-93 1998 University of California Imine Repository of machine learning databases 1998 http:Nwww.ics.uci.cdu/-mleam/Mlr\(eposito.hIml 4 L Cristofor. ARtool Association rule mining algorithms and tools 2002 hnp://www.cs.umb.ed~-I~~~/ARtooV 5 B Liu W Hsu and Y Ma Pruning and summanring the discovered associations In Proceedings f rhe 5th ACM SIGKDD lnremrionol Conference on Knowledge Discovety ondDoro Mining pages 125-134 1999 6 M Luxenburger Implications panielles dans un con texte MorhPmuriques Infomnrique el Sciences Humines 29\(113 1991 7 N Pasquier Y Bastide R Taouil and L Lakhal Closed set based discovery of small covers for association rules In Proceedinrs of rhe 15rh Conference on Advanced Databases 131 C I Blake and C 1 Men   pages361-381 1999 181 N Pasauier Y Bastide R Taouil and L Lakhal Efficient  mining of association rules using closed itrmset lattices In fimmrion S,vsrems 24\(1 1999 Y D A Simovici and R L Tenney Reldowl Dorablrre Sys tems Academic Press New York 1995 600 


Proceedings of the First International Conference on Machine Learning and Cybernetics Beijing 4-5 November 2002 Atmbutes Product Purchase Records  Customer Purchase Records  Leaf Node preference has no matching taste in another preference it will be deleted 3 The method of taste aggregating is alike with that of learning preferences \(see Section 2.3 15 130 16 4 Product recommendation The goal of the recommendation system is to generate a recommendation set for active customer of which the products most closely match active customer profile In our method both customer profiles and products are represented as the same model So it is fairly convenient to compute the similarity between a customer profile and a product Preference  TI twl T2 twz  T twn Product  41 awl Az aw2  A awn If Ti\(Ai has numerical value Ti vl v2 and Ai v the similarity between Ti and Ai can be computed by 12v-v v I Tastesimilarity  I v2 v1 If it has literal value then Ti  tl tw1 tz twz  The similarity between Ti and Ai can be calculated by the et twn CUI awl 2 wp  a awn following Cosine function 2 tw x awi  Tastesimilarity  i=l  i=l i=l So the similarity of preference and product is  TasteSimilarity x tasteweight In the end the recommendation set for active customer can be obtained by RecommendationSet   Product I PreferenceSimilarity t where t is a threshold of preference similarity PreferenceSimilarity n i=l 5 Experiments The dataset is extracted from http://www.amazon.com http://www prime. wines corn http://www.needmorebeer.com http://www.cornwellcoffee.com From these Web sites we construct a product hierarchy Based on this product hierarchy we set up a virtual Web store Then 11 persons are invited to the experiments as customers and everyone generates about 15-30 purchase records on different products. The main parameters of the dataset are listed in Table 1 Table 1 Dataset Nodes of Product Hierarchy Tree I 87 Leaf Nodes I 58 Products I233 Customers I 11 Based on the approaches denoted in previous sections we implement a system prototype to construct customers profiles In order to check the incremental learning of our approaches we select different number of purchase records First we use 8-10 records to construct the original profiles and then add 5-7 records into database to update customer profiles An example of customer profiles constructed by our prototype is listed below Preference1D:lO PreferenceName: AccountingBook Preference Weight 0.26 TasteNwn I1 TasteName  TasteType  Tastevalue  Tasteweight Title O/NULUO Price U45.5-84.3 0.1 Manufacturer ONULL  0.05 Discount UO 7/0.1 Content O/Fimncia,O.5.Accounting,0.3,Accounting Practices,O.Z  0.4 Author O/Charles W Mulford.O.4,Raig D Shoulders.0.2 Eugene E Comiskey,O.Z Robert J Freemn,O.Z 0.05 Pagecount 1/305-407/0.02 Edition O/Hardcover,O.7, Paperback,O.3  0.01 6 Conclusions In this paper we define business data and customer profile based on product hierarchy for E-commerce recommendation application Especially we analyze the differences between preference profile and de profile, and propose an incremental approach to construct customer preference profiles In the end we conduct experiment to validate our methods There are several problems we need to investigate further. These issues include  more customer behavior data should be used, especially the clickstream, because the Web clickstream contains very important information about how a customer likes products  Web content mining techniques can be employed to extract customer preferences  more reco,mendation experiments and the comparisons with other techniques such as user-based and item-based collaborative filtering, should be conducted in details References l Eric Schmitt Harley Manniny Yolanda Paul and Sadaf Roshan Commerce Software Takes Off Forrester Report, March 2000 Joe Pine Mass Customization 1993 2 1079 


Proceedings of the First International Conference on Machine Learning and Cybernetics Beijing 4-5 November 2002 r31 r41 51 61 71 P31 91 B Mittal and W Lassar The Role of Personalization in Service Encounters. Journal of Retailing, 72 l 95 125,1996 Mulvenma M.D Annual S.S and Buchner A.G Personalization on the Net Using Web Mining Communication of the ACM, 43\(8 122-125,2000 Y.-F Kuo L.-S Chen Personalization Technology Application to Internet Content Provider Expert Systems with Applications 21\(2001\203-215 Jonathan L Herlocker Joseph A Konstan AI Borachers and John Riedl An Algorithmic Framework for Performing Collaborative Filtering SIGlR\22299 Badnal Sarwar George Karypis, Joseph Konstan, and John Riedl Item-based Collaborative Filtering Recommendation Algorightms. WWW10, Hongkong ACM, 1-5 May 2001 Jiawei Han, Micheline Kamber. Data miningconcepts and Techniques. Morgan kanfmam Press, 2001 C.-H Lee Y.-H Kim P.-K Rhee Web Personalization Expert with Combining Collaborative Filtering and Association Rule Mining Technique Expert System with Applications, 21\(2001\131-137 lo Bamshad Mobasher Hoghum Dai TaoLuo Yuqing Sun and JiangZhu Integrating Web Usage and Content Mining for More Effective Personalization ll Kang-Lun Wu Cham C. Aggawal, and Philip S Yu Personalization with Dynamic Profile. 2001 IEEE  Chan C Aggarwal Zheng Sun and Philip S Yu Online Algorithms for Finding Profile Association Rules. CIKM\22298  131 Gediminas Adomavicius and Alexander Tuzbilin Using Data Mining Methods to Build Customer Profiles IEEE Computer, 2001 1080 


References 1 A garw al, R., Aggarw al, C., an d Prasad V., A tree projection algorithm for generation of frequent itemsets. In Proceedings of High Performance Data Mining Workshop Puerto Rico, 1999 2 A graw al R an d Srikan t, R F a st al go rith ms f o r mining association rules In Proceedings of the 20 th VLDB conference pp. 487-499, Santiago Chile, 1994 3 B uc hne r  A  a nd M u l v e nna M   D  D i sc ov e r i n g internet marketing intelligence through online analytical Web usage mining SIGMOD Record  4\ 27, 1999 4 C har n iak  E  Statistical language learning MIT Press, 1996 5 C l i f t o n, C a n d Co ol e y R., T opCa t  da t a  m i ni ng for topic identification in a text corpus. In Proceedings of the 3rd European Conference of Principles and Practice of Knowledge Discovery in Databases Prague, Czech Republic, 1999 6  Coole y  R M obasher  B., an d Sr iv astav a J., Data preparation for mining World Wide Web browsing patterns Journal of Knowledge and Information Systems 1\ 1, 1999 7 C hen, M  S Par k J. S a nd Y u  P S  Data mining for path traversal patterns in a Web environment In Proceedings of 16th International Conference on Distributed Computing Systems  1996 8 Han, E H, Bole y  D., Gini, M Gr oss R   Hastings, K., Karypis, G., Kumar, V., and Mobasher, B., More, J., Document categorization and query generation on the World Wide Web using WebACE Journal of Artificial Intelligence Review January 1999 9 Her lock er  J K onstan, J., B o r c her s, A., Rie d l, J  An algorithmic framework for performing collaborative filtering. To appear in Proceedings of the 1999 Conference on Research and Development in Information Retrieval August 1999 10 Han, E H, K a r y pis, G., K u m a r  V., and M o basher  B., Clustering based on association rule hypergraphs. In Proccedings of SIGMOD\22297 Workshop on Research Issues in Data Mining and Knowledge Discovery \(DMKD\22297 May 1997 11 Han, E H, K a r y pis, G., K u m a r  V., and M o basher  B., Hypergraph based clustering in highdimensional data sets: a summary of results IEEE Bulletin of the Technical Committee on Data Engineering 21\ 1, March 1998 12 Jo ach im s T F r eitag  D., Mitch e ll T   WebWatcher: A Tour Guide for the World Wide Web. In Proceedings of the International Joint Conference in AI \(IJCAI97 August 1997 1 L i eb e r man   H Letizia: an agen t th at assists W e b browsing. In Proceedings of the 14 th International Joint Conference in AI \(IJCAI95 AAAI Press Menlo Park, California, 1995 14 Nasr a oui O F r i g ui, H., Jos h i, A., K r ishnap u r a m  R., Mining Web access logs using relational competitive fuzzy clustering. To appear in the Proceedings of the Eight International Fuzzy Systems Association World Congress August 1999 15 Pe r k ow i t z M  a nd E t z i oni O A d a p t i v e W e b sites: automaticlly synthesizing Web pages. In Proceedings of Fifteenth National Conference on Artificial Intelligence Madison, WI, 1998 16 Sp ilio p o u l o u  M a n d  F a u l stich  L  C., W U M: A Web Utilization Miner In Proceedings of EDBT Workshop WebDB98 Valencia, Spain, LNCS 1590, Springer Verlag, 1999 17 Sc he c h t e r  S., K r i s hna n, M a nd Sm i t h M  D   Using path profiles to predict HTTP requests. In Proceedings of 7th International World Wide Web Conference Brisbane, Australia, 1998 1 Sh ard a n a n d   U., Maes, P So cial inf o rmatio n filtering: algorithms for automating "word of mouth." In Proceedings of the ACM CHI Conference 1995 1 Sh ah ab i C., Zarkesh  A. M Ad i b i J  and  Sh ah V., Knowledge discovery from users Web-page navigation. In Proceedings of Workshop on Research Issues in Data Engineering  Birmingham, England, 1997 2 Yan  T  Jaco b s en M Garcia-Mo lin a, H., Da y a l U., From user access patterns to dynamic hypertext linking. In Proceedings of the 5 th International World Wide Web Conference, Paris France, 1996 


results are shown in Table 4 6 Conclusions mem \(M mem M associative classification 1 efficiency at handling huge Table 4 The comparison of CBA and CMAR on main memory usage Dataset Auto Hypo Ion0 Sick Please note that in this experiment we disable the lim itation of number of rules in CBA In such a setting CBA and CMAR generate all the rules necessary for classifica tion and thus are compared in a fair base From the table one can see that on average CMAR achieves 77.12 sav ing on main memory usage The saving in main memory usage can be explained from two apsects First CMAR uses CR-tree The compactness of CR-tree brings significant gain in storing a large set of rules where many items in the rules can be shared On the other hand CR-free is also an index structure of rules Before a rule is inserted into a CR-tree CMAR checks if there is a general rule or some more specific rules in the tree If so related pruning is pursued immediately Such a pruning techique also contributes to the saving of main memory To test the scalability of CMAR we compare the run time of CBA and CMAR on six data sets The results are shown in Figure 5 Again we disable the limit on number of rules in CBA In the experiments CBA spends a large portion of runtime on YO  attr  cls  rec CBA runtime CMAR runtime 25 7 205 612s 408s 25 2 3163 92s 19s 34 2 351 150s 89s 29 2 2800 74s 13s Sonar I 60 I 2  208 1 226s 145s Table 5 The runtime of CBA and CMAR As can be seen from the table CMAR is faster than CBA in many cases Please be note that the machine we use for testing is with relatively small size of main memory 128M Both CBA and CMAR can be expected running significantly faster if more main memory is available racy 2 it prunes rules effectively based on confidence correlation and database coverage and 3 its efficiency is achieved by extension of an efficient frequent pat tern mining method FP-growth construction of a class distribution-associated FP-tree and applying a CR-tree structure to store and retrieve mined association rules effi ciently Our experiments on 26 databases in UCI machine learning database repository show that CMAR is consis tent highly effective at classification of various kinds of databases and has better average classification accuracy in comparison with CBA and C4.5 and is more efficient and scalable than other associative classification methods References I R Agrawal and R Srikant Fast algorithms for mining as 2 P Clark and T Niblett The CN2 induction algorithm Ma 3 G Dong X Zhang L Wong and J Li Caep Classifi sociation rules In VLDB\22294 Chile Sept 1994 chine Learning 3:261-283,1989 cation by aggregating emerging patterns In DS\22299 LNCS I72 I Japan Dec 1999 4 R Duda and P Hart Pattern Classification and Scene Anal ysis John Wiley  Sons 1973 5 J Han J Pei and Y Yin Mining frequent patterns without candidate generation In SIGMOD\222OO Dallas TX May 2000 6 B Lent A Swami, and J Widom Clustering association rules In ICDE\22297 England April 1997 7 W Li Classification based on multiple association rules M.Sc Thesis Simon Fraser University April 2001 8 T.-S Lim W.-Y Loh and Y.-S Shih A comparison of prediction accuracy complexity and training time of thirty-three old and new classification algorithms Machine Learning 39,2000 9 B Liu W Hsu and Y Ma Integrating classification and association rule mining In KDD\22298 New York NY Aug 1998 IO J R Quinlan C4.5 Programs forkfachine Learning Mor gan Kaufmann 1993 I I K. Wang S Zhou and Y He Growing decision tree on support-less association rules In KDD\222OO Boston MA Aug 2000 376 


of the query expression without ha ving the global view of the in ten tion There is a big c hance that the enco ded pro cedure ma y not b e the b est w a y to compute the rules dep ending on the database instance F urthermore as w e understand it their prop osals require p oten tially large n um ber of name generation for relations and attributes The names that are needed are usually database dep enden t and th us p ossibly cannot b e gathered at query time An additional pro cess needs to b e completed to gather those v ariables b efore actual computations can b egin 5  9 Optimization Issues While it w as in tellectually c hallenging to dev elop a declarativ e expression for asso ciation rule mining from deductiv e databases there are sev eral op en issues with great promises for resolution In the w orst case the least xp oin tneedsto generate n 2 tuples in the rst pass alone when the database size is n  Theoretically  this can happ en only when eac h transaction in the database pro duces an in tersection no de and when they are not related b y subset-sup erset relationship In the second pass w e need to do n 4 computations and so on The question no w is can w e a v oid generating and p erhaps scanning some of these com binations as they will not lead to useful in tersections F or example the no de b 0 3 in gure 11 is redundan t A signican t dierence with apriori lik e systems is that our system generates all the item sets top do wn in the lattice without taking their candidacy as a large item set in to consideration Apriori on the other hand do es not generate an y no de if their subsets are not large item sets themselv es and thereb y prunes a large set of no des Optimization tec hniques that exploit this so called an ti-monotonicit y prop ert y of item set lattices similar to apriori could mak e all the dierence in our setup The k ey issue w ould b e ho ww e push the selection threshold minim um supp ort inside the top do wn computation of the no des in the lattice in our metho d F or the momen t and for the sak e of this discussion let us consider a higher supp ort threshold of 60 for the database T of gure 9 No w the l-en v elop e will b e the one sho wn in ligh ter dashed lines in gure 11 and the no des under this line will b e the large item sets Notice that no ww eha v eto discard no des ad 2 0 and d 0 2 to o This raises the question is it p ossible to utilize the supp ort and condence thresholds pro vided in the query and prune candidates for in tersection an y further Ideas similar to magic sets transformation 3  24 ma y be b orro w ed to address this issue The only problem is that pruning of an y no de dep ends on its supp ort coun t whic h ma y come at a later stage By then all no des ma y already ha v e b een computed and th us pushing selection conditions inside aggregate op erator ma y b ecome non-trivial Sp ecial data structures and indexes ma y also aid in dev eloping faster metho ds to compute ecien t interse ction joins that w e ha v e utilized in this pap er W e lea v e these questions as op en issues that should be tak en up in the future F ortunately though there has been a v ast b o dy of researc h in optimizing Datalog programs including recursiv e programs suc h as the one w e ha v e used in this pap er and hence the new questions and researc h 5 Recall that their prop osal requires one to express the mining problem to the system using sev eral queries and up date statemen ts that utilizes information ab out the database con ten ts to ac hiev e its functionalit y  c hallenges that this prop osal raises for declarativ e mining ma y exploit some of these adv ances Needless to emphasize a declarativ e metho d preferably a formal one is desirable b ecause once w e understand the functioning of the system w e will then be able to select appropriate pro cedures dep ending on the instances to compute the seman tics of the program whic hw e kno wis in tended once w e establish the equiv alence of declarativ e and pro cedural seman tics of the system F ortunately  w e ha v e n umerous pro cedural metho ds for computing asso ciation rules whic h complemen t eac h other in terms of sp eed and database instances In fact that is what declarativ e systems or declarativit y buy us  a c hoice for the most ecien t and accurate pro cessing p ossible 10 Conclusion Our primary goal for this pap er has b een to demonstrate that mining asso ciation rules from an y rst-order kno wledge base is p ossible in a declarativ ew a y  without help from an y sp ecial to ols or mac hinery  and that w e can no wha v ea v ery in tuitiv e and simple program to do so W eha v esho wn that it is indeed p ossible to mine declarativ ekno wledge b y exploiting the existing mac hinery supp orted b ycon temp orary inference engines in programming languages e.g Prolog or kno wledge base systems e.g RelationLog XSB LD L  CORAL All w e require is that the engine b e able to supp ort set v alued terms grouping aggregate functions and set relational op erators for comparison functionalities whic hmostofthesesystemscurren tly supp ort W e ha v e also demonstrated that our formalism is grounded on a more mathematical foundation with formal prop erties on whic h the seman tics of the R ULES system rely  W e ha v e also raised sev eral op en issues related to eciency and query optimization whic h should b e our next order of business As future researc h w e plan to dev elop optimization tec hniques for mining queries that require non-trivial lo ok ahead and pruning tec hniques in aggregate functions The dev elopmen ts presen ted here also ha v e other signican t implications F or example it is no w p ossible to compute c hi square rules 4 using the building blo c ks pro vided b y our system Declarativ e computation of c hi square rules to our kno wledge has nev er b een attempted for the man y pro cedural concepts the computation of c hi square metho d relies on In a separate w ork 2 w e sho w that the coun ting metho d prop osed in this pap er can be eectiv ely utilized to generate the exp ectations needed in order to compute suc h rules rather easily  These are some of the issues w e plan to address in the near future The motiv ation imp ortance and the need for in tegrating data mining tec hnology with relational databases has b een addressed in sev eral articles suc h as 12  13 They con vincingly argue that without suc h in tegration data mining tec hnology ma y not nd itself in a viable p osition in the y ears to come T o b e a successful and feasible to ol for the analysis of business data in relational databases suc htec hnology m ust b e made a v ailable as part of database engines and as part of its declarativ e query language Our prop osal for declarativ e mining bears merit since it sheds ligh t on ho w rst order databases can be mined in a declarativ e and pro cedure indep enden t w a y so that the optimization issues can b e delegated to the underlying database engine Once suc h argumen ts are accepted sev eral systems 9 


related issues b ecome prime candidates for immediate atten tion F or example traditionally database systems supp orted declarativ e querying without the necessit y to care ab out the pro ceduralit y of the queries In this pap er w eha v e actually demonstrated that asso ciation rule mining can b e view ed as a Datalog query  It is immediate that a direct mapping from the Datalog expressions presen ted in this pap er to SQL can be dev elop ed with no problem at all W e can then rely on ecien t database pro cessing of the query in an optimized fashion Hence w ecomeclose to the essence of the visions expressed b y the leading database researc hers and practioners 12  References 1 Rak esh Agra w al and Ramakrishnan Srik an t F ast algorithms for mining asso ciation rules in large databases In VLDB  pages 487{499 1994 2 Anon ymous A declarativ e metho d for mining c hisquare rules from deductiv e databases T ec hnical rep ort Departmen t of Computer Science Anon ymous Univ ersit y USA F ebruary 2001 3 C Beeri and R Ramakrishnan On the po w er of magic In Pr o c e e dings of the 6th A CM Symp osium on Principles of Datab ase Systems  pages 269{283 1987 4 Sergey Brin Ra jeev Mot w ani and Craig Silv erstein Bey ond mark et bask ets Generalizing asso ciation rules to correlations In Pr o c A CM SIGMOD  pages 265 276 1997 5 D Chimen ti et al The LD L system protot yp e IEEE Journal on Data and Know le dge Engine ering  2\(1 90 1990 6 Jia w ei Han Jian P ei and Yiw en Yin Mining frequen t patterns without candidate generation In Pr o c A CM SIGMOD  pages 1{12 2000 7 Marcel Holsheimer Martin L Kersten Heikki Mannila and Hann uT oiv onen A p ersp ectiv e on databases and data mining In Pr o c of the sixth A CM SIGKDD Intl Conf  pages 150{155 Mon treal Queb ec 1995 8 Flip Korn Alexandros Labrinidis Y annis Kotidis and Christos F aloutsos Ratio rules A new paradigm for fast quan tiable data mining In Pr o c of 24th VLDB  pages 582{593 1998 9 Brian Len t Arun N Sw ami and Jennifer Widom Clustering asso ciation rules In Pr o c of the 3th ICDE  pages 220{231 1997 10 Mengc hi Liu Relationlog At yp ed extension to datalog with sets and tuples In John Llo yd editor Pr oc e e dings of the 12th International L o gic Pr o gr amming Symp osium  pages 83{97 P ortland Oregon Decem ber 1995 MIT Press 11 Rosa Meo Giusepp e Psaila and Stefano Ceri An extension to SQL for mining asso ciation rules Data Mining and Know le dge Disc overy  2\(2 1998 12 Amir Netz Sura jit Chaudh uri Je Bernhardt and Usama M F a yy ad In tegration of data mining with database tec hnology  In Pr o c e e dings of 26th VLDB  pages 719{722 2000 13 Amir Netz Sura jit Chaudh uri Usama M F a yy ad and Je Bernhardt In tegrating data mining with SQL databases In IEEE ICDE  2001 14 Ra ymond T Ng Laks V S Lakshmanan Jia w ei Han and Alex P ang Exploratory mining and pruning optimizations of constrained asso ciation rules In Pr o c A CM SIGMOD  pages 13{24 1998 15 Jong So o P ark Ming-Sy an Chen and Philip S Y u An eectiv e hash based algorithm for mining asso ciation rules In Pr o c A CM SIGMOD  pages 175{186 1995 16 Karthic k Ra jamani Alan Co x Bala Iy er and A tul Chadha Ecien t mining for asso ciation rules with relational database systems In Pr o c e e dings of the International Datab ase Engine ering and Applic ations Symp osium  pages 148{155 1999 17 R Ramakrishnan D Sriv asta v a and S Sudarshan CORAL  Con trol Relations and Logic In Pr o c of 18th VLDB Confer enc e  pages 238{250 1992 18 Konstan tinos F Sagonas T errance Swift and Da vid Scott W arren XSB as an ecien t deductiv e database engine In Pr o c of the A CM SIGMOD Intl Conf  pages 442{453 1994 19 Sunita Sara w agi Shib y Thomas and Rak esh Agra w al In tegrating mining with relational database systems Alternativ es and implications In Pr o c A CM SIGMOD  pages 343{354 1998 20 Ashok a Sa v asere Edw ard Omiecinski and Shamk an tB Nav athe An ecien t algorithm for mining asso ciation rules in large databases In Pr o c of 21th VLDB  pages 432{444 1995 21 Pradeep Sheno y  Ja y an t R Haritsa S Sudarshan Gaura v Bhalotia Ma y ank Ba w a and Dev a vrat Shah T urb o-c harging v ertical mining of large databases In A CM SIGMOD  pages 22{33 2000 22 Abraham Silb ersc hatz Henry F Korth and S Sudarshan Datab ase System Conc epts  McGra w-Hill third edition 1996 23 Shib y Thomas and Sunita Sara w agi Mining generalized asso ciation rules and sequen tial patterns using SQL queries In KDD  pages 344{348 1998 24 J D Ullman Principles of Datab ase and Know le dgeb ase Systems Part I II  Computer Science Press 1988 25 Mohammed J Zaki Generating non-redundan t association rules In Pr o c of the 6th A CM SIGKDD Intl Conf  Boston MA August 2000 1 0 


OM OM 006 OD8 01 012 014 016 018 02 022 False alarm demity Figure 9 Percentage of tracks lost within 200 seconds using three-scan assignment with PD  0.9 TI  O.ls Figure 11 T2  1.9s and T  Is ij  20 and 0  0.1 24 1 22  20  E fls 0  8l 16 0 n 14  12  0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 T1/12 PD Average track life of three-scan assignment with PD varying TI  0-ls T2  1.9s T  Is X  0.02 ij LO and   0.1 mareuvenng index Figure 12 Percentage of lost tracks of 4-D assipment in 200 seconds with maneuvering index varying X  0.01 Ti  0.1 T2  1.9s and T  IS PD  0.98 Figure 10 Percentage of lost tracks of 4-D assignment in 200 SeoDllCls with TI and T2 varying PD  0.98 X  0.02 q 20 and 0  0.1 4-1607 


Figure 13 Average gate size for Kalman filter Figure is relative as compared to nq and curves are parametrized by ij/r with unit-time between each pair of samples 1.2 Iy I 1.1 0.5 I A CRLB for he unifm samiina I  0.4 0.35 d 3 03 i7 3 0.25 0 0.M 0.04 0.06 008 0.1 0.12 0.14 0.16 0.18 0.2 False A!am DemW V I    Figure 14 CramerRao Lower Boundfor Mean Square Error of uniform and nonuniform sampling schemes with Ti  O.ls T2  1.9s T  IS PD  0.9 ij  5 and U  0.25 1 unifon sampling r-ls ked i non-uniform sampling loge inlewi I ti non-uniform sampling shod interva I 0.9 0.8 I Figure 15 MSE comparison of three-scan assignment with Ti and T2 varying I'D  1 X  0.01 ij  20 and U  0.1 4-1608 


Plenary Panel Session 30 XML Databases   Moderator: Michael Carey, IBM Almaden Research Center USA Panelists Adam Bosworth, Microsoft Corporation USA David De Witt University of Wisconsin-Madison, USA Alon Levy University of Washington USA Bruce Lindsay IBM Almaden Research Center USA Jennifer Widom Stanford University USA Demo Session 1 Web Query Optimizer  661 V Zadorozhny L Bright L Raschid T Urhan and M Vidal ReQueSS: Relational Querying of Semi-structured Data  664 R Sunderraman The IDEAL Approach to Internet-Based Negotiation for E-Business  666 J Hammer C Huang Y Huang C Pluempitiwiriyawej M Lee H Li L Wang Y Liu and S Su READY A High Performance Event Notification Service  668 R Gruber B Krishnamurthy, and E Panagos A Multimedia Information Server with Mixed Workload Scheduling  670 G Nerjes DISIMA An Object-Oriented Approach to Developing an Image Database System  672 V Oria T Ozsu P Iglinski B Xu and L Cheng Demo Session 2 The Collaboration Management Infrastructure  677 H Schuster D Baker A Cichocki D Georgakopoulos and M Rusinkiewicz Assisting the Integration of Taxonomic Data The LITCHI Toolkit  679 I Sutherland J Robinson S Brandt A Jones S Embury W Gray R White and F Bisby TheaterLoc: Using Information Integration Technology to Rapidly Build Virtual Applications  681 G. Barish Y.4 Chen D Dipasquo, C Knoblock S Minton I Muslea and C Shahabi Lineage Tracing in a Data Warehousing System  683 Y Cui and J Widom xiii 


The Mentor-Lite Prototype A Light-Weight Workflow Management System  685 J Weissenfels M Gillmann 0 Roth, G Shegalov and W Wonner Location Prediction and Queries for Tracking Moving Objects  687 0 Wolfson B Xu and S Chamberlain Semiorder Database for Complex Activity Recognition in Multi-Sensory Environments  689 S Bhonsle A Gupta S Santini and R Jain Tutorial 1 Web Information Retrieval  693 M Henzinger Tutorial 2 Mobile and Wireless Database Access for Pervasive Computing  694 P Chrysanthis and E Pitoura Tutorial 3 Data Mining with Decision Trees  696 J Gehrke Tutorial 4 Directories Managing Data for Networked Applications  697 D Srivastava Tutorial 5 Indexing High-Dimensional Spaces Database Support for Next Decade\222s Applications  698 S Berchtold and D Keim xiv 


 T5.I2.D100K T10.I4.D100K T15.I4.D100K T10.I6.D400K T10.I6.D800K T10.I6.D1600K Optimizations across Databases 5 0 5 10 15 20 25 30 35 40 45 Improvement COMP TREE COMP-TREE 1 2 4 8 1 2 4 8 1 2 4 8 2 4 8 2 4 8 1 2 4 8 Processors Databases Figure 5 Effect of Computation and Hash Tree Balancing good as the COMP optimization The reason that the hash tree balancing is not suf\336cient to offset inherent load imbalance in the candidate generation in this case The most effective approach is to apply both optimizations at the same time COMP-TREE The combined effect is suf\336cient to push the improvements in the 40 range in the multiple-processor case On 1 processor only hash tree balancing is bene\336cial since computation balancing only adds extra cost 5.4 Short-circuited Subset Checking Figure 6 shows the improvement due to the short-circuited subset checking optimization with respect to the unoptimized version The unoptimized version is the Apriori algorithm due to Agrawal et al 5 The results are presented for dif ferent number of processors across dif ferent databases The results indicate that while there is some improvement for databases with small transaction sizes the optimization is most effective when the transaction size is large In this case we get improvements of around 25 r the unoptimized version To gain further insight into this optimization consider 336gure 7 It shows the percentage improvement obtained per iteration on applying this optimization on the T20.I6.D100K database It shows results only for the uni-processor case r similar results were obtained on more processors We observe that as the iteration k increases there is more opportunity for shortcircuiting the subset checking and we get increasing bene\336ts of up to 60 The improvements start to fall off t the high end where the number of candidates becomes small resulting in a small hash tree and less opportunity for short-circuiting It becomes clear that is an extremely effective 15 Proceedings of the 1996 ACM/IEEE Conference on Supercomputing \(SC\22296 0-89791-854-1/96 $ 10.00 ACM 


 T5.I2.D100K T10.I6.D800K T15.I4.D100K T20.I6.D100K procs across Databases 0 5 10 15 20 25 Improvement 1 2 4 8 Figure 6 Effect of Short-circuited Subset Checking 23456789101112 Iterations 0 10 20 30 40 50 60 improvement T20.I6.D100K Figure 7  Improvement per Iteration  proc   16 Proceedings of the 1996 ACM/IEEE Conference on Supercomputing \(SC\22296 0-89791-854-1/96 $ 10.00 ACM 


optimization for larger transaction sizes and in cases where there are large number of candidate k itemsets 6 Conclusions In this paper e presented a parallel implementation of the Apriori algorithm on the SGI Power Challenge shared memory multi-processor We also discussed a set of optimizations which include optimized join and pruning computation balancing for candidate generation hash tree balancing and short-circuited subset checking We then presented experimental results on each of these Improvements of more than 40 were obtained for the computation and hash tree balancing The short-circuiting optimization was found to be extremely effective for databases with large transaction sizes Finally we reported the parallel performance of the algorithm While we d good speed-up we observed a need for parallel I/O techniques for further performance gains References  R Agra wal T  Imielinski and A Swami Database mining A performance perspecti v e  I n IEEE Trans on Knowledge and Data Engg  pages 5\(6 1993  R Agra wal T  Imielinski and A Swami Mining association rules between sets of items in lar ge databases In Proc M SIGMOD Intl Conf Management of Data  May 1993  R Agra wal H Mannila R Srikant H T o i v onen and A I V erkamo F ast disco v ery of association rules In U F et al editor Advances in Knowledge Discovery and Data Mining  MIT Press 1996  R Agra wal and J Shafer  P arallel mining of association rules design implementation and e xperience Technical Report RJ10004 IBM Almaden Research Center San Jose CA 95120 Jan 1996  R Agra wal and R Srikant F ast algorithms for mining association rules In Proc 20th VLDB Conf  Sept 1994  M Cierniak W  Li and M J Zaki Loop scheduling for heterogeneity  I n 4th IEEE Intl Symposium on High-Performance Distributed Computing also as URCS-TR 540 CS Dept Univ f Rochester  Aug 1995  M Holsheimer  M  K ersten H Mannila and H T o i v onen A perspecti v e on databases and data mining In 1st Intl Conf Knowledge Discovery and Data Mining  Aug 1995  M Houtsma and A Swami Set-oriented mining of association rules In RJ 9567  IBM Almaden Oct 1993  H Mannila H T o i v onen and I V erkamo Ef 336cient algorithms for disco v ering association rules In AAAI Wkshp Knowledge Discovery in Databases  July 1994  J S P ark M Chen and P  S Y u  A n e f fecti v e hash based algorithm for mining association rules In Proc M SIGMOD Intl Conf Management of Data  May 1995 17 Proceedings of the 1996 ACM/IEEE Conference on Supercomputing \(SC\22296 0-89791-854-1/96 $ 10.00 ACM 


 J S P ark M Chen and P  S Y u  E f 336cient parallel data mining for association rules T echnical Report RC20156 IBM T J Watson Research Center Aug 1995  G Piatetsk y-Shapiro Disco v ery  presentation and analysis of strong rules In G P S et al editor  KDD  AAAI Press 1991  A Sa v asere E Omiecinski and S Na v athe An ef 336cient algorithm for mining association rules in large databases In Proc 21st VLDB Conf  1995  M J Zaki M Ogihara S P arthasarathy  and W  Li P arallel data mining for association rules on shared-memory multi-processors Technical Report 618 Department of Computer Science University of Rochester 618 1996 18 Proceedings of the 1996 ACM/IEEE Conference on Supercomputing \(SC\22296 0-89791-854-1/96 $ 10.00 ACM 


