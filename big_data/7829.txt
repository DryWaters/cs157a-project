Mining Version Histories to Guide Software Changes Thomas Zimmermann tz@acm.org Peter Weiﬂgerber weissger@st.cs.uni-sb.de Stephan Diehl diehl@acm.org Andreas Zeller zeller@acm.org Saarland University Saarbr ucken Germany Abstract We apply data mining to version histories in order to guide programmers along related changes Programmers who changed these functions also changed  Given a set of existing changes such rules a suggest and predict likely further changes b show up item coupling that is in 
detectable by program analysis and c prevent errors due to incomplete changes After an initial change our ROSE prototype can correctly predict 26 of further les to be changedÑand 15 of the precise functions or variables The topmost three suggestions contain a correct location with a likelihood of 64 1 Introduction Shopping for a book at Amazon.com you may have come across a section that reads Customers who bought this book also bought  listing other books that were typically included in the same purchase Such information is gathered by data mining  the automated extraction of hidden predictive information from large data sets In this pa 
per we apply data mining to version histories Programmers who changed these functions also changed Just like the Amazon.com feature helps the customer browsing along related items our ROSE tool guides the programmer along related changes with the following aims Suggest and predict likely changes Suppose you are a programmer and just made a change What else do you have to change Figure 1 on the following page shows our ROSE tool as a plug-in for the 
ECLIPSE programming environment The programmer is extending ECLIPSE itself with a new preference and has added an element to the fKeys array ROSE now suggests to consider further changes as inferred from the ECLIPSE version history First come the locations with the highest conìdence that is the likelihood that further changes be applied to the given location Prevent errors due to incomplete changes In Figure 1 the top location has a conìdence of 1.0 In the past 
each time some programmer extended the fKeys array she also extended the function that sets the preference default values If the programmer now wanted to commit her changes without altering the suggested location ROSE would issue a warning Detect coupling indetectable by program analysis As ROSE operates uniquely on the version history it is able to detect coupling between items that cannot be detected by program analysis including coupling between items that are not even programs In Figure 1 
position 3 on the list is an ECLIPSE HTML documentation le with a conìdence of 0.75Ñsuggesting that after adding the new preference the documentation should be updated too ROSE is not the rst tool to leverage version histories In earlier work Section 7 researchers have used history data to understand programs and their evolution 3 to detect evolutionary coupling between les 8 o r c las s e s  4   o r t o support navigation in the source code 6 In cont ras t t o t hi s state of the art the present work  uses full-îedged 
data mining techniques to obtain association rules from version histories  detects coupling between ne-grained program entities such as functions or variables rather than say classes thus increasing precision and integrating with program analysis  thoroughly evaluates the ability to predict future or missing changes thus evaluating the actual usefulness of our techniques The remainder of this paper is organized as follows Section 2 shows how to gather changes and their effects Section 3 applies this to CVS  Section 4 describes the basic 
approaches to mining these data followed by examples in Section 5 In Section 6 we evaluate ROSE s ability to predict future changes based on earlier history How often can ROSE suggest further changes and if so how precise is it Section 7 discusses related work and Section 8 closes with conclusion and consequences Proceedings of the 26th International Conference on Software Engineering \(ICSEê04 0270-5257/04 $20.00 © 2004 IEEE 


 A new preference into the field fKeys B locations for further changes, e.g. the function initDefaults Figure 1 After the programmer has made some changes to the ECLIPSE source above ROSE suggests locations below where in similar transactions in the past further changes were made 2 Processing Change Data Figure 2 illustrates the basic data ow through our ROSE tool 1 The ROSE server reads a version archive far left groups the changes into transactions mines the transactions for rules which describe implications between software entities If fKeys is changed then initDefaults is typically changed too When the user changes some entity say fKeys  the ROSE client queries the rule set for applicable rules and makes appropriate suggestions for further changes say initDefaults  We begin by introducing formal deìnitions for changes transactions and affected entities generalizing the concepts as found in existing version archives Adopting the notation from 26 a change is a mapping   P  P  which when applied transforms a product p  P into a changed product 1 ROSE stands for Reengineering Of Software Evolution it is a nonRational tool Version Archive Transactions Rule Set Change\(s Suggestions Rule Application Rose Server Rose Eclipse Client   User Querying Mining Grouping Matching Figure 2 The data ow through ROSE p    p   P  Here P is the set of all products the set of changes is denoted as C  P  P  Changes can be composed using the composition operator   C  C  C  This is useful for denoting transactions consisting of multiple changes to multiple locations For instance the transaction  1  2 between two versions p 1  p 2  P  composed of n individual changes  1  n Proceedings of the 26th International Conference on Software Engineering \(ICSEê04 0270-5257/04 $20.00 © 2004 IEEE 


is expressed as  1  2   1   2   n with  1  2  p 1    1   2   n   p 1    1   2    n  p 1    p 2  To express all the syntactic components affected by a change we deìne the concept of entities An entity is a triple  f  c  i  where f is the name of the affected le c is the syntactic category of the affected component such as method  class  le  and i is the identiìer of the affected component The mapping entities retrieves all entities affected by a change or transaction as in entities   entities  1   entities  n           Comp.java  method  initDefaults   Comp.java  eld  fKeys    Comp.java  class  ComparePreferencePage   Comp.java  le  Comp.java  2          Entities are the base for later mining I changed one entity which other entities should I typically change 3 Grouping Changes to Transactions Our ROSE server retrieves changes and transactions as described above from existing version archivesÑtypically from CVS archives which are frequently used for opensource systems While CVS is popular it has some weaknesses that require special data cleaning 28  Inferring transactions Most modern version control systems have a concept of product versioning that is one is able to access transactions as they alter the entire product CVS  though provides only le versioning To recover per-product transactions from CVS archives we must group the individual per-ìle changes into individual transactions ROSE follows the classical sliding window approach 7 t w o s ubs equent changes  i and  i  1 by the same author and with the same rationale are part of one transaction  if they are at most 200 seconds apart Branches and merges The evolution of a product sometimes branches into different evolution strands which may later be merged again In a CVS archive the merge of a branch is not reîected explicitly instead the merge becomes a large transaction which includes all the changes made in the branch In order to detect coupling within transactions one must take into account all branches but avoid the large merge transactions ROSE does so by ignoring all changes that affect more than 30 entities Getting entities CVS has no syntactic knowledge about the les it stores it manages only les and line num2 To save space we abbreviate all le names from Figure 1 to their rst syllable Comp.java stands for ComparePreferencePage.java   1 3 23 25 30 56 58 60 80 99  Cat.COLORS lines 3-23 Cat.Cat lines 25-30 Class Cat lines 1-56 Dog.COLORS lines 60-80 Class Dog lines 58-99 public String[] COLORS public String[] COLORS class Cat public Cat       class Dog      Change in Line 8 affects file animals.java class Cat, and field Cat.COLORS Figure 3 Relating changes to entities bers for each change ROSE thus parses the les associating syntactic entities with line ranges As sketched in Figure 3 ROSE can thus relate any change given by le and line to the affected components 4 From Transactions to Rules Given the transactions as described in the previous sections the aim of the ROSE server is to mine rules from these transactions What is a rule Here is an example   Comp.java  eld  fKeys      Comp.java  method  initDefaults   plug.properties  le  plug.properties   1 This rule means that whenever the user changes the eld fKeys  i n Comp.java  then she should also change the method initDefaults  and the le plug.properties  Here should means that the rule is based on experience and does not constitute absolute truth the character    is thus not to be read as a logical implication that always holds Formally an association rule r is a pair  x 1  x 2  of two disjoint entity sets x 1 and x 2  In the notation x 1  x 2  x 1 is called the antecedent and x 2 the consequent  As said before rules do not tell an absolute truth They have a probabilistic interpretation based on the amount of evidence in the transactions they are derived from This amount of evidence is determined by two measures Support The support determines the number of transactions the rule has been derived from Assume that the eld fKeys  w a s c hanged i n 8 t rans act i ons  O f these 8 transactions 7 also included changes of both the method initDefaults  and the le plug.properties  Then the support for the above rule is 7 Conìdence The conìdence determines the strength of the consequence or the relative amount of the given consequences across all alternatives In the above example the consequence of changing initDefaults  and plug.properties applies in 7 out of the 8 transactions involving fKeys  Hence the conìdence for the above rule is 7  8  0  875 Proceedings of the 26th International Conference on Software Engineering \(ICSEê04 0270-5257/04 $20.00 © 2004 IEEE 


Formally we deìne  the frequency of a set x in a set of transactions T as frq  T  x     t  t  T  x  t     the support of a rule x 1  x 2 by a set of transactions T as supp  T  x 1  x 2   frq  T  x 1  x 2    its conìdence as conf  T  x 1  x 2   frq  T  x 1  x 2  frq  T  x 1   The shorthand notation r  s  c  d enot es a rul e r with s  supp  T  r  and c  conf  T  r  and a set of transactions T  4.1 Applying Rules As soon as the programmer begins to make changes the ROSE client suggests possible further changes This is done by applying matching rules In general a rule matches aset of changed entities if this set is equal to the antecedent Assume the programmer has created a sequence of changes  1   2   k  The set of changed entities called situation s   entities  1   2   k   In Figure 1 for instance the user has extended the variable fKeys in le ComparePreferencePage.java  The situation is thus    Comp.java  eld  fKeys    2 How does one compute the suggestions The set of suggestions for a situation  and a set of rules R is deìned as the union of the consequents of all matching rules apply  R   012   x 2   R x 2 In the given situation  from 2 and the rule r from 1 ROSE thus suggests the consequent of r  apply   r      Comp.java  method  initDefaults   plug.properties  le  plug.properties   The entire set R of actually mined rules contains further rules though The actual result of apply  R  is shown in Figure 1 ordered by conìdence Let us assume the user decides to follow the rst recommendation for initDefaults with a conìdence of 1.0 it is obvious that a new preference should get a default value So she changes the method initDefaults Again ROSE proposes additional changes which are in this case the same as before except that now initDefaults is missing Now the user examines methods createGeneralPage and createTextComparePage because they are in the same le as fKeys and initDefaults  Each of these two methods creates a window where preferences can be set So she extends the createGeneralPage method resulting in       Comp.java  eld  fKeys    Comp.java  method  initDefaults   Comp.java  method  createGeneralPage     Given this situation a minimum support of 3 and a minimum conìdence of 0  5 ROSE computes the following rules    plug.properties  le  plug.properties   5  1  0    Text.java  method  TextMergeViewer   3  0  6    Text.java  method  propertyChange   3  0  6    build.html  le  build.html   3  0  6 3 Applying the above rules yields the union of the consequents of all rules because they have the same antecedent ROSE will rank the entities by their conìdence suggesting the user to change the le plug.properties next 4.2 Computing Rules ROSE uses the Apriori Algorithm 1 t o c ompute as s o ciation rules The Apriori Algorithm takes a minimum support and minimum conìdence and then computes the set of all association rules in two phases 1 The algorithm iterates over the set of transactions and forms entity sets from the entities that occur in the same transaction Entity sets that are above the minimal support are called frequent Since an entity set can only be frequent when its subsets are frequent entity sets are extended in each iteration This phase nally yields the set F of frequent entity sets 2 The algorithm computes rules from the sets in F More precisely from each of the entity sets E  F it creates those rules E  X  X where X is a subset of E  Note that all these rules have the same support supp  T  E   but different conìdences Only rules that are above the minimum conìdence are returned The classical use of the Apriori Algorithm is to compute all rules beforehand and then search the rule set for a given situation However computing all rules takes timeÑseveral days in our experiments So we used two optimizations Constrained antecedents In our speciìc case the antecedent is equal to the situation hence we only mine rules on the y which are related to the situation Mining with such constrained antecedents 24 tak es only a few seconds An additional advantage of this approach is that it is incremental in the sense that it allows new transactions to be added between two situations Single consequents To speed up the mining process even more we have modiìed the approach such that it only computes rules with a single entity in their consequent So for a situation  the rules have the form   e  For ROSE  such rules are sufìcient because ROSE computes the union of the consequents anyway Proceedings of the 26th International Conference on Software Engineering \(ICSEê04 0270-5257/04 $20.00 © 2004 IEEE 


Section 4.1 3 Our previous example in 3 already used single consequent rules These optimizations make mining very efìcient The average runtime of a query is about 0.5s for large version histories like GCC  4 5 Some Rule Examples Coupling in GCC  GCC has arrays that deìne the costs of different assembler operations for INTEL processors These have been changed together in 11 transactions In 9 of these 11 transactions this change was triggered by a change in the type   i386.h  type  processor cost     i386.c  var  i386 cost   i386.c  var  i486 cost   i386.c  var  k6 cost   i386.c  var  pentium cost   i386.c  var  pentiumpro cost   9  0  82 So whenever the costs type is changed e.g for a new operation ROSE suggests to extend the appropriate cost instances too 5 PYTHON and C les Our approach is not restricted to a speciìc programming language In fact we can detect coupling between program parts written in different languages including natural language Here is an example taken from the PYTHON library   Qdmodule.c  func  GrafObj getattr     qdsupport.py  func  outputGetattrHook   10  0  91 Whenever the C le Qdmodule.c was changed so was the PYTHON le qdsupport.py a classical coupling between interface and implementation POSTGRESQL documentation Data mining can reveal coupling between items that are not even programs as in the POSTGRESQL documentation   createuser.sgml  le  createuser.sgml   dropuser.sgml  le  dropuser.sgml     createdb.sgml  le  createdb.sgml   dropdb.sgml  le  dropdb.sgml   11  1  0 Whenever both createuser.sgml and dropuser.sgml have been changed the les createdb.sgml and dropdb.sgml have been changed too 3 For each entity e  x 2 in a consequent of a rule   x 2  s  c  h e r e e x ists a single consequent rule   e   s e  c e  w ith higher or equal s upport and conìdence values s e  s and c e  c  4 Measured on a PC with Intel 2.0 GHz Pentium 4 and 1 GB RAM 5 This rule also holds for the other direction with the same support and incidentally the same conìdence 6 Evaluation After these rule examples let us now give empirical evidence for the following objectives Navigation through source code Given a single changed entity can ROSE point programmers to entities that should typically be changed too Error prevention Can ROSE prevent errors Say the programmer has changed many entities but has missed to change one entity Does ROSE nd the missing one Closure Suppose a transaction is nishedÑthe programmer made all necessary changes How often does ROSE erroneously suggest that a change is missing Granularity By default ROSE suggests changes to functions and other ne-grained entities What are the results if ROSE suggests changes to les instead 6.1 Evaluation Setup For our evaluation we analyzed the archives of eight large open-source projects Table 1 on the next page For each archive we chose a number of full months containing the last 1,000 transactions but not more than 50 of all transactions as our evaluation period In this period we check for each transaction  whether its entities can be predicted from earlier history 1 We create a test case q   Q  E  consisting of a query Q  entities  and an expected outcome E  entities   Q  2 We take all transactions  i that have been completed before time  as a training set and mine a set of rules R from these transactions 3 To avoid having the user work through endless lists of suggestions ROSE only shows the top ten singleconsequent rules R 10  R ranked by conìdence In our evaluation we apply R 10 to get the result of the query A q  apply  Q  R 10   So the size of A q is always less or equal than ten 4 The result A q of a test case q consists of two parts  A q 012 E q are the entities that matched the expected outcome and are considered correct  A q  E q are unexpected recommendations which are wrong For the assessment of a result A q  we use two measures from information retrieval 20 The precision P q describes which fraction of the returned entities was actually expected Proceedings of the 26th International Conference on Software Engineering \(ICSEê04 0270-5257/04 $20.00 © 2004 IEEE 


History Training Evaluation Project Description in CVS since  Txns  Txns/Day Etys/Txn Period  Txns ECLIPSE  integrated environment 2001-04-28 46,843 56.0 3.17 2003-03-01 to 03-31 2,965 GCC  compiler collection 1997-08-11 47,424 22.4 3.90 2003-04-01 to 04-30 1,083 GIMP  image manipulation tool 1997-01-01 9,796 4.1 4.54 2003-02-01 to 07-31 1,305 JBOSS  application server 2000-04-22 10,843 9.0 3.49 2003-04-01 to 07-31 1,320 JEDIT  text editor 2001-09-02 2,024 2.9 4.54 2003-02-01 to 07-31 577 KOFFICE  ofìce suite 1998-04-18 20,903 11.2 4.25 2003-02-01 to 05-31 1,385 POSTGRESQL  database system 1996-07-09 13,477 5.4 3.27 2003-01-01 to 05-31 925 PYTHON  language  library 1990-08-09 29,588 6.2 2.62 2003-05-01 to 07-31 1,201 Table 1 Analyzed projects Txn  Transaction Ety  Entity by the user The recall R q indicates the percentage of expected entities that were returned P q   A q 012 E q   A q  R q   A q 012 E q   E q  In case no entities are returned  A q is empty we deìne the precision as P q  1 and in case no entities are expected we deìne the recall as R q  1 Our goal is to achieve high precision and high recall values near 1 is to recommend all recall of 1 and only expected entities precision of 1 For each query q i  we get a precision-recall pair  P q i  R q i   To get an overall measure for the entire history we summarize these pairs into a single pair using two different averaging techniques from information retrieval Macro-evaluation simply takes the mean value of the precision-recall pairs P M  1 N N 015 i  1 P q i R M  1 N N 015 i  1 R q i This approach uses the precision and recall which have been computed for each query As users usually think in queries macro-evaluation is sometimes referred to as a user-oriented approachÑit determines the predictive strength of individual queries Micro-evaluation in contrast builds an average precisionrecall pair based on entities It does not use the precision and recall values of single queries but the sums of returned matching and expected entities of all queries P    N i  1  A q i 012 E q i   N i  1  A q i  R    N i  1  A q i 012 E q i   N i  1  E q i  One can think of micro-evaluation as summarizing all queries into one large query and then computing precision and recall for this large query It therefore allows statements summarizing all queries like every n th  0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 0 0.02 0.04 0.06 0.08 0.1 0.12 0.14 0.16 Precision Recall Eclipse \(Navigation, Micro-evaluation 0.1 0.1 0.1 0.6 0.8 0.9 1.0 1.0 1.0 Minimum Support 5  Minimum Support 3   Minimum Support 1 Figure 4 Varying support and conìdence suggestion is wrong/correct For example the precision P  for PYTHON is 0.50 Every second suggestion is correct which means that the recommended entity was actually changed later on Micro-evaluation is sometimes referred to as a system-oriented approach because it focuses on the overall performance of the system and not on the average query performance Unless otherwise noted all averages are given by microevaluation 6.2 Precision vs Recall A major application for ROSE is to guide users through source code The user changes some entity and ROSE automatically recommends possible future changes in a view Figure 1 We wanted to evaluate the predictive power of ROSE in this situation For each transaction   and each entity e  entities   we queried Q  e   and checked whether ROSE would predict E  entities   e  For each transaction we thus tested   entities    queries each with one element Figure 4 shows a so-called precision-recall graph with the results for the ECLIPSE project For each combination of minimum support and minimum conìdence the resulting precision-recall pair is plotted Additionally subProceedings of the 26th International Conference on Software Engineering \(ICSEê04 0270-5257/04 $20.00 © 2004 IEEE 


sequent conìdence thresholds having the same support are connected with lines As a result we get three precisionrecall curves  one for each investigated support The connecting lines between measured values are for sake of clarity and not for interpolation In Figure 4 ROSE achieves for a support of 1 and a conìdence of 0  1 a recall of 0  15 and a precision of 0  26  The recall of 0.15 states that ROSE s suggestion correctly included 15 of all changes that were actually carried out in the given transaction  The precision of 0.26 means that 26 of all recommendations were correctÑevery fourth suggested change was actually carried out and thus predicted correctly by ROSE  The programmer has to check about four suggestions in order to nd a correct one Figure 4 also shows that increasing the support threshold also increases the precision but decreases the recall as ROSE gets more cautious However using the highest possible thresholds does not always yield the best precision and recall values If we increase the conìdence threshold above 0  80 both precision and recall decrease Furthermore Figure 4 shows that high support and conìdence thresholds are required for a high precision Still such values result in a very low recallÑindicating a trade-off between precision and recall In practice a graph such as the one in Figure 4 is thus necessary to select the best support and conìdence values for a speciìc project In the remainder of this paper though we have chosen values that are common across all projects in order to facilitate comparison One can either have precise suggestions or many suggestions but not both 6.3 Likelihood While a precision like 26 sounds low keep in mind that this is the likelihood of each single recommendation predicting a speciìc location If some change in A results in either B  C or D being changed ROSE suggests B  C and D  but each suggestion has an average precision of only 33 To assess the actual usefulness for the programmer we checked the likelihood whether the expected location would be included in ROSE s top three navigation suggestions assuming that a programmer wonêt have too much trouble judging the rst three suggestions Formally L 3 is the likelihood that for a query q   Q  E   at least one of the rst three recommendations is correct L 3  L   apply  Q  R 3  012 E   0  where L  p  stands for the probability of the predicate p  If in the example above ROSE always suggested B  C and D as topmost suggestions L 3  100 would hold 6.4 Results Navigation through Source Code We repeated the experiment from Section 6.2 for all eight projects with a support threshold of 1 and a conìdence threshold of 0  1Ñsuch that for navigation the user gets several recommendations The results are shown in Table 2 on thenextpage\(column Navigation  For these settings the average recall is 15 the average precision is 26 these values are also found for ECLIPSE Section 6.2 The average likelihood L 3 of the three topmost suggestions predicting a correct location is 64 While KOFFICE and JEDIT have lower recall precision and likelihood values GCC strikes by overall high values The reason is that KOFFICE and JEDIT are projects where continuously many new features are inserted which cannot be predicted from history while GCC is a stable system where the focus is on maintaining existing features When given one initial changed entity ROSE can predict 15 of all entities changed later in the same transaction In 64 of all transactions ROSE s topmost three suggestions contain a correct location 6.5 Results Error Prevention Besides supporting navigation ROSE should also prevent errors The scenario is that when a user decides to commit all her changes to the version archive ROSE checks if there are related changes that have not been changed If there are it issues a pop-up window with a warning it also suggests one or more missing entities that should be considered We wanted to determine in how many cases ROSE can predict such a missing entity For this purpose we took each transaction left out one entity and checked if ROSE could predict the missing entity In other words the query was the complete transaction without the missing entity So for each single transaction   and each entity e  entities   we queried Q  entities   e   and checked whether ROSE would predict E  e   For each transaction we thus again ran   entities    tests As too many false warnings might undermine ROSE s credibility ROSE is set up to issue warnings only if the high conìdence threshold of 0.9 is exceeded Still we wanted to get as many missing entities as possible resulting in a support threshold of 3 The results are shown in Table 2 column Prevention   The average recall is about 4 This means that in only one out of 25 queries in GCC  every 5th query ROSE correctly predicted the missing entity  The average precision is above 50 This means that every second recommendation of ROSE is correct or If a warning occurs and ROSE recommends further entities the user on average has to check only one false recommendation before getting to the correct one Proceedings of the 26th International Conference on Software Engineering \(ICSEê04 0270-5257/04 $20.00 © 2004 IEEE 


Navigation Prevention Closure Support 1 3 3 Conìdence 0.1 0.9 0.9 Project R  P  L 3 R  P  R M P M ECLIPSE 0.15 0.26 0.53 0.02 0.48 1.0 0.979 GCC 0.28 0.39 0.89 0.20 0.81 1.0 0.953 GIMP 0.12 0.25 0.91 0.03 0.71 1.0 0.978 JBOSS 0.16 0.38 0.69 0.01 0.24 1.0 0.981 JEDIT 0.07 0.16 0.52 0.004 0.59 1.0 0.986 KOFFICE 0.08 0.17 0.46 0.003 0.24 1.0 0.990 POSTGRES 0.13 0.23 0.59 0.03 0.66 1.0 0.989 PYTHON 0.14 0.24 0.51 0.01 0.50 1.0 0.986 Average 0.15 0.26 0.64 0.04 0.50 1.0 0.980 Table 2 Results for ne granularity  R  recall P  precision L  likelihood Given a transaction where one change is missing ROSE can predict 4 of the entities that need to be changed On average e very second recommended entity is correct 6.6 Results Closure The nal question in the Error Prevention scenario is how many false alarms ROSE would produce in case no entity is missing We simulated this by testing complete transactions For each transaction   we queried Q  entities   and checked whether ROSE would predict E   we thus had one test per transaction As the expected outcome is the empty set the recall is always 1 To measure the number of false warnings we cannot use micro-evaluation anymore as one single false alarm results in a summarized precision of 0 We thus turn to macro-evaluation precision The precision for a single query in this setting is either 0 if at least one entity is recommended or 1 if no entities are recommended P M is the percentage of commits where ROSE has not issued a warning and 1  P M is the percentage of false alarms The results are shown in Table 2 column Closure  One can see that the precision is very high for all projects usually around 0.98 This means that ROSE issues a false alarm in only every 50th transaction ROSE s warnings about missing changes should be taken seriously Only 2 of all transactions cause a false alarm In other words ROSE does not stand in the way 6.7 Results Granularity By default ROSE recommends entities at a ne granularity level e.g variables or functions This results in a low coverage of the rules for a project as most functions are rarely changed Our hypothesis was that if we applied mining to les rather than to variables or functions we would get a higher support and thus a higher recall Navigation Prevention Closure Support 1 3 3 Conìdence 0.1 0.9 0.9 Project R  P  L 3 R  P  R M P M ECLIPSE 0.17 0.26 0.54 0.03 0.48 1.0 0.980 GCC 0.44 0.42 0.87 0.29 0.82 1.0 0.946 GIMP 0.27 0.26 0.90 0.08 0.74 1.0 0.963 JBOSS 0.25 0.37 0.64 0.05 0.44 1.0 0.980 JEDIT 0.25 0.22 0.68 0.01 0.44 1.0 0.984 KOFFICE 0.24 0.26 0.67 0.04 0.61 1.0 0.971 POSTGRES 0.23 0.24 0.68 0.05 0.59 1.0 0.978 PYTHON 0.24 0.36 0.60 0.03 0.67 1.0 0.991 Average 0.26 0.30 0.70 0.07 0.66 1.0 0.973 Table 3 Results for coarse granularity  R  recall P  precision L  likelihood Therefore we repeated the experiments from Sections 6.4to6.6witha coarse granularity e.g mining and applying rules between les rather than between entities The results are shown in Table 3 It turns out that the coarser granularity increases recall in all cases sometimes even dramatically as the factors 3Ö8 in KOFFICE show The precision stays comparable or is increased as well If ROSE thus suggests only a le rather than an entity the suggestions become more frequent and more precise However each single suggestion becomes less useful as it suggests a less speciìc locationÑnamely only a le rather than a precise entity 6 A possible consequence of this result is to have ROSE start with rather vague suggestions say regarding les or packages which become more and more speciìc as the user progresses We plan to apply and extend generalized association rules 23 s u ch that ROSE can suggest the nest granularity wherever possible When given one changed le ROSE can predict 26 of the les actually changed in the same transaction In 70 of all transactions ROSE s topmost three suggestions contain a correct location 6.8 Threats to Validity We have studied 10,761 transactions of eight open-source programs Although the programs themselves are very different we cannot claim that their version histories would be representative for all kinds of software projects In particular our evaluation does not allow any conclusions about the predictive power for closed-source projects However a stricter software process would result in higher precision and higher recallÑand hence a better predictability 6 This is a general trade-off If all entities were contained within one le then any suggestion regarding this one le would yield a precision of 100 and a recall of 100%Ñand be totally useless at the same time Proceedings of the 26th International Conference on Software Engineering \(ICSEê04 0270-5257/04 $20.00 © 2004 IEEE 


Transactions do not record the order of the individual changes involved Hence our evaluation cannot take the order into account the changes were madeÑand treats all changes equal In practice we expect speciìc orderings of changes to be more frequent than others which may affect results for navigation and prevention We have made no attempt to assess the quality of transactions ROSE learned from past transactions regardless of whether they may be desired or not Consequently the rules learned and evaluated may reîect good practices as well as bad practices However we believe that competent programmers make more good transactions than bad transactions and thus there is more good than bad to learn from history We have examined the predictive power of ROSE and assumed that suggesting a change narrowed down to a single le or even a single entity would be useful However it may well be that missing related changes could be detected during compilation or tests in which case ROSE s suggestions would not harm or may be known by trained programmers anyway who may nd ROSE s suggestions correct but distracting Eventually usefulness for the programmer can only be determined by studies with real users which we intend to accomplish in the future 7 Related Work Independently from us Annie Ying developed an approach that also uses association rule mining on CVS version archives 25 She es pecially e v aluated the us efulnes s o f the results considering a recommendation most valuable or surprising if it could not be determined by program analysis and found several such recommendations in the MOZILLA and ECLIPSE projects In contrast to ROSE  though Yingês tool can only suggest les not ner-grained entities and does not support mining-on-the-îy Change data has been used by various researchers for quantitative analyses Word frequency analysis and keyword classiìcation of log messages can identify the purpose of changes and relate it to change size and time between changes 18 V a ri ous res earchers comput ed met ri cs on t h e module or le level 3 9 11 12 or ort hogonal t o t hes e per feature 19 and in v e s tigated the change of thes e m etrics over time i.e for different releases or versions of a system Gall et al were the rst to use release data to detect logical coupling between modules 8 The CVS history allows to detect more ne-grained logical coupling between classes 10  l es and functions 27  None of these works on logical coupling did address its predictive power Sayyad-Shirabad et al use inductive learning to learn different concepts of relevance between logically coupled les 21 22  A concept is a s et of attributes like le name extension and simple metrics like number of routines deìned If two les have these attributes then they are relevant to each other Sayyad-Shirabad thoroughly evaluated the predictive power of the concepts found but none of the papers gives a convincing example of such a concept Amir Michail used data mining on the source code of programming libraries to detect reuse patterns in form of association 16 o r generalized as s o ciation rules 17  The latter take inheritance relations into account The items in these rules are re-\e relationships like method invocation inheritance instantiation or overriding Both papers lack an evaluation of the quality of the patterns found However Michail mines a single version while ROSE uses the changes between different versions To guide programmers a number of tools have exploited textual similarity of log messages 5 o r program code 2  HIPIKAT 6 i mpro v e s o n t his by taking als o other s ources like mail archives and online documentation into account In contrast to ROSE  all these tools focus on high recall rather than on high precision and on relationships between les or classes rather than between ne-grained entities 8 Conclusion and Consequences ROSE can be a helpful tool in suggesting further changes to be made and in warning about missing changes But the more there is to learn fro m history the more and better suggestions can be made  For stable systems like GCC  ROSE gives many and precise suggestions 44 of related les and 28 of related entities can be predicted with a precision of about 40 for each single suggestion and a likelihood of over 90 for the three topmost suggestions  For rapidly evolving systems like KOFFICE or JEDIT  ROSE s most useful suggestions are at the le level Overall this is not surprising as ROSE would have to predict new functions which is probably out of reach for any approach  In about 4Ö7 of all erroneous transactions ROSE correctly detects the missing change If such a warning occurs it should be taken seriously as only 2 of all transactions cause false alarms What have we learned from history and what are our suggestions Here are our plans for future work Taxonomies Every change in a method implies a change in the enclosing class which again implies changes in the enclosing les or packages We want to exploit such taxonomies to identify patterns such as this change implies a change in this package rather than in this method that may be less precise in the location but provide higher conìdence Proceedings of the 26th International Conference on Software Engineering \(ICSEê04 0270-5257/04 $20.00 © 2004 IEEE 


Sequence rules Right now we are only relating changes that occur in the same transaction In the future we also want to detect rules across multiple transactions The system is always tested before being released as indicated by appropriate changes Further data sources Archived changes contain more than just author date and location One could scan log messages including the one of the change to be committed to determine the concern the change is more likely to be related to say Fix vs New feature Program analysis Another yet unused data source is program analysis although our approach can detect coupling between items that are not even programs knowing about the semantics of programs could help separating related changes into likely and non-likely Furthermore coupling that can be found via analysis 25 need not be repeated in ROSE s suggestions Rule presentation The rules as detected by ROSE describe the factual software processÑwhich may or may not be the intended process Consequently these rules can and should be made explicit In previous work 27  w e u sed visual mining t o d etect re gularities and irregularities of logically coupled items Such visualizations could further explain the recommendations to programmers and managers We are currently making ROSE available as a plug-in for ECLIPSE  For information on download and installation see http://www.st.cs.uni-sb.de/softevo Acknowledgments This project is funded by the Deutsche Forschungsgemeinschaft grant Ze 509/1-1 Holger Cleve Carsten G org Christian Lindig Stefan Siersdorfer and the anonymous ICSE reviewers gave helpful comments on earlier revisions of this paper References  R A gra w a l and R S r ikant F a s t algorithm s f or m ining as s o ciation rules In Proceedings of the 20th Very Large Data Bases Conference VLDB  pages 487Ö499 Morgan Kaufmann 1994  D L  Atkins  V ers ion s ens iti v e editing Change his tory as a programming tool In B Magnusson editor Proceedings of System Conìguration Management SCMê98  volume 1439 of LNCS  pages 146Ö157 Springer-Verlag 1998  T  Ball J  M Kim  A A P orter  and H P  S i y  If your v e rs ion control system could talk In ICSE Workshop on Process Modelling and Empirical Studies of Software Engineering  1997  J M Bie ma n A A Andre ws and H J Y ang Understanding change-proneness in OO software through visualization In Proc 11th International Workshop on Program Comprehension  pages 44Ö53 Portland Oregon May 2003  A Chen E  Chou J  W ong A Y  Y a o Q Z h ang S Z h ang and A Michail CVSSearch searching through source code using CVS comments In ICSM 2001 14 pages 364Ö374  D  Cubrani c and G C Murphy Hipikat Recommending pertinent software development artifacts In ICSE 2003 pages 408Ö418  K  F ogel and M O  N eill cvs2cl.pl CVS-log-message-toChangeLog conversion script  Sept 2002 http://www.redbean.com/cvs2cl  H  G all K  H a jek and M J azayeri D e tection of logical coupling based on product release history In Proc International Conference on Software Maintenance ICSM 98  pages 190Ö198 Washington D.C USA Nov 1998 IEEE  H  G all M  J azayeri R K l  osch and G Trausmuth Software Evolution Observations based on Product Release History In Proceedings of International Conference on Software Maintenance ICSM 97  pages 160Ö196 1997  H  G a ll M J azayeri and J  K r aje w s ki CV S r eleas e h is tory data for detecting logical couplings In IWPSE 2003 15 pages 13Ö23  T  L  G r a v es  A  F  K arr  J  S  Marron and H  S i y  P r edicting f ault incidence using software change history IEEE Transactions on Software Engineering  26\(7 2000  A E  Has s a n a nd R Holt T h e c haos of s o ftw are de v elopm ent In IWPSE 2003 15 13 Proc 25th International Conference on Software Engineering ICSE  Portland Oregon May 2003 14 Proc International Conference on Software Maintenance ICSM 2001  Florence Ital y Nov 2001 I EEE 15 Proc International Workshop on Principles of Software Evolution IWPSE 2003  Helsinki Finland Sept 2003 IEEE Press  A  Michail D a ta m i ning library reus e patterns in us er s elected applications In Proc 14th International Conference on Automated Software Engineering ASEê99  pages 24Ö33 Cocoa Beach Florida USA Oct 1999 IEEE Press  A  Michail D a ta m i ning library reus e p atterns us ing generalized association rules In International Conference on Software Engineering  pages 167Ö176 2000  A Mockus and L  G V otta Identifying reas ons for s oftw are changes using historic databases In Proc International Conference on Software Maintenance ICSM 2000  pages 120Ö130 San Jose California USA Oct 2000 I EEE  A Mockus  D  M  W eis s  and P  Z hang Unders tanding and predicting effort in software projects In ICSE 2003 13 pages 274Ö284  C J  V  Rijs ber gen Information Retrieval 2nd edition  Butterworths London 1979  J  Sayyad-Shirabad T  C L e thbridge and S Matwin Supporting maintainance of legacy software with data mining techniques In ICSM 2001 14 pages 22Ö31  J  Sayyad-Shirabad T  C L ethbridge and S Matwin Mining the maintenance history of a legacy software system In Proc International Conference on Software Maintenance ICSM 2003 Amsterdam Netherlands  Sept 2003 I EEE  R Srikant and R Agra w a l Mining generalized as s o ciation rules  I n Proceedings of the 21th Very Large Data Bases Conference VLDB  pages 407Ö419 1995  R S r ikant Q  V u  a nd R A g ra w a l Mining as s o ciation rules w ith item constraints In Proceedings of the 3rd International Conference on KDD and Data Mining KDD 97  Newport Beach California USA Aug 1997  A T  T  Y i ng Predicting s ource code changes by m ining re vis ion history Masterês thesis University of British Columbia Canada Oct 2003  A  Z e ller and R H ildebrandt S i m plifying and is olating f ailureinducing input IEEE Transactions on Software Engineering  28\(2 Feb 2002  T  Z i m m e rm ann S  D i ehl and A  Z eller  H o w his tory jus ti es s y s tem architecture or not In IWPSE 2003 pages 73Ö83  T  Z i m m e rm ann and P  W eiﬂgerber  P reproces s i ng CVS data for ne-grained analysis Technical report Saarland University Mar 2004 Submitted for publication Proceedings of the 26th International Conference on Software Engineering \(ICSEê04 0270-5257/04 $20.00 © 2004 IEEE 


  11 could be improved by a simple modification of the feed by adding a small tuning vane to th e feed. Therefore, it can be stated that some improvement can be expected by modification of the feeds, and adaptation of the test antenna in such a way that surrounding Ku-band element are closed   Figure 28 Reflection coefficient of Ku-band stacked patch antenna element in dual-frequency antenna stack  Figure 29 shows the influence of the L-band slots on the return loss of the Ku-band antenna element. To this end, the four connectors of the L-band elements were alternately open and terminated by means of 50 loads. The deviations were measured with respect to the set-up where all connectors were terminated Apparently, the deviations are acceptable  Figure 29 Influence of L-band termination on return loss of Ku-band antenna element, with and without termination Figure 30 and Figure 31 show the isolation between the Lband and Ku-band elements in L-band and Ku-band respectively. To this end the S21-parameters have been measured. These figures reveal that the mutual coupling between the L-band and Ku-band elements is sufficiently small  Figure 30 Measured isolation between L-band and Ku-band antennas in L-band frequencies  Figure 31 Measured isolation between L-band and Ku-band antennas in Ku-band frequencies From these measurements it can be concluded that opportunities should be considered to improve the design of the dual-frequency antenna \(by optimizing the feeds of the Ku-band elements antenna and the measurement set-up \(closure of surrounding Ku-band ports and use of appropriate connectors for the open Ku-band ports 7  M ODIFIED DUAL FREQUENCY ANTENNA  In order to benefit the str ong points of the two separate designs as discussed in section 4, an alternative antenna is proposed that exploits the properties of a \221best of both worlds\222 solution employing ideas from both designs. The modified antenna possesses an aperture fed L-band patch of a similar form to first design, but situated towards the bottom of the stack. Ku band el ements are located within the L-band perforations and para sitic patches are situated above a foam spacer \(see Figure 32 and Figure 33\A measurement campaign is underway to assess the behaviour of this modified test antenna 


  12  Figure 32 Bottom view of dual frequency antenna tile with perforated L-band patc h in lower layer with Kuband patches  Figure 33 Layer stack with perforated L-band patch in lower layer with Ku-band patches  8  B EAM FORMING N ETWORK  A major keystone for the su ccess of phased array antenna onboard aircraft is the capability of steering the main beam in the direction of the geosta tionary satellites. This requires the inclusion of a broadband beam forming network. Beam steering can be realized by adding RF-phase shifters and LNA\222s to the antenna elements of the array. However traditional phase shifters in ge neral have a narrow band, and hence do not yield the re quired broadband capability Alternative technologies for broadband beam forming are switched beam networks \(using Butler matrices innovative designs for RF-compone nts such as phase shifter LNA components in \(M\IC technology, or beam forming by using opti cal ring resonators  The German SME IMST is involved in several projects for development of electronica lly steerable phased array antennas for satellite communication. In the NATALIA project \(New Automotive Track ing Antenna for Low-cost Innovative Applications\ ESA, IMST is investigating the possibility of realizing a compact costeffective solution for a recei ve-only full electronically steerable antenna for cars in Ku-band. This antenna is a planar array composed of approximately 150 patches circularly polarised by using a 90\260 hybrid, and arranged in a hexagonal fashion. Each patc h is equipped with a MMIC corechip containing a phase sh ifting unit, LNA and digital steering logic  In the Netherlands, a consortiu m \(consisting of University of Twente, Lionix BV, National Aerospace Laboratory NLR and Cyner Substrates developing in the national FlySmart project technology for a broadband optical beam forming network. For the steering of the beam of the conformal phased array a squi nt-free, continuously tunable mechanism is proposed that is based on a fully integrated optical beam forming network \(OBFN optical ring resonators \(ORRs as tunable delay elements. A narrowband continuously tunabl e optical TTD device is realized as a recirculating wa veguide coupled to a straight waveguide. This straight wave guide can behave as a bandpass filter with a periodic, bell-shaped tunable group delay response. The maximum group delay occurs at a tunable resonance frequency. A larger delay-bandwidth product can be achieved by cascading multiple ORR sections. A complete OBFN can be obtaine d by grouping several delays and combining elements in one optical circuit. Such an OBFN can be realized on a si ngle-chip. Electrical/Optical E/O O E by means of filter based single-sideband modulation suppressing the carrier lanced coherent optical detection. Further details of the optical beamforming network have been presented in Re The proof-ofconcept has been shown by manufacturing a chip for an 8x1 OBFN. Essential components of the OBFN are the optical modulators, which are used to modulate the light in the ORR system 9  C ONCLUSIONS  For enhanced communicati on on board aircraft, novel antenna systems with broa dband satellite-based capabilities are required. So far, existi ng L-band satellite based systems for communications are used primarily for passenger application \(APC\i nistrative communications AAC and now data are tending to evolve towards broadband dig ital applications \(Voice over IP\any studies are going on worldwide to employ Kuband TV geostationary sate llites for communication with mobile terminals on aircraft The inbound traffic is about 5 times higher than the outbound The inbound traffic requires the availability of a broadband Ku-band antenna in receive mode only. The outbound traffic services can be supplied by the Inmarsat SBB link, whic h requires the installation of an L-band transmit antenna. In order to avoid both the installation of L-band antenna and Ku-band antenna, the concept of a hybrid dual frequency antenna operating L 


  13 band and Ku-band with low aerodynamic profile has been investigated in this paper. Keyaspects of this research are 200  Design and testing dual-fre quency antenna elements operating in both L-band and Ku-band 200  Conformal aspects of Ku-band phased array antennas 200  Beam forming algorithms for planar and conformal phased array antennas Two designs for dual-frequency antenna tiles consisting of 8x8 Ku-band antenna elements and one L-band element The designs have been analysed by means of computer simulations. Both designs show promising performance both in L-band and Ku-band. The design with slotted Lband antenna has a resonant fre quency in receive mode with a bandwidth of about 1 GHz. The Ku-band antenna is a stacked patch configuration where a parasitic element is placed above a lower patch separated by dedicated space filler. The manufactured protot ype antennas indicate that the bandwidth is sufficiently large In order to be able to communicate with geostationary satellites also at high latitudes e.g. during inter-continental flights\stem should have sufficient performance at low elevation angles. The antenna Ku-band system is required to have a small beamwidth \(to discriminate between the satellite signals\gain 30 dB angles. The effects of these requirements on the size and positioning of the antenna on the aircraft fuselage have been investigated. These requirements can be best satisfi ed by installing two planar phased array antennas on both side s of the fuselage with at least 1600 Ku-band elements. Each element has two feed lines, one for each polarization Every feed line has to be connected to the beam formi ng network. This means that the connections cannot be routed to one of the four sides of the antenna. Instead the concept of vertical feed lines \(by means of vias in a sufficiently thick substrate recommended. These vertical f eed lines connect the L-band and Ku-band antenna elements in the upper layer with feed networks in multiple lower laye rs. This vertical feed line system was not available so far due to manufacturing problems The performances of one dua l-frequency antenna design have been investigated by manufacturing two test antennas without vertical feed line syst em. The first antenna contains only a multilayer structure with L-band slots and 8x8 Kuband stacked patches. The performances of the L-band slots and Ku-band stacked patches c ould be measured separately It was concluded that opportun ities should be considered to improve the design of the dual-frequency antenna \(by optimizing the feeds of the Ku-b and elements the dual frequency test-antenna and the measurement set-up More important, however, is the realization of a mechanically stable vertical feed line system, so that the properties of L-band and Ku-band elements can be measured adequately The second test antenna contains only a multilayer structure with 8x8 Ku-band stacked patches and a feed network with 8 combiners, where each comb iner coherently sums 8 antenna elements. In combination with a prototype 8x1 OBFN, a Ku-band phased arra y antenna is obtained of which the beam can be steered in one direction. This second test antenna is used to analyze the broadband properties of the 8x8 Ku-band antenna array and 8x1 OBFN. The measured performances of this antenna are presented in Ref   A CKNOWLEDGMENT  This work was part of the EU 6 th Framework project ANASTASIA., and the FlySmart project, supported by the Dutch Ministry of Economic A ffairs, SenterNovem project numbers ISO53030 The FlySmart project is part of the Eureka PIDEA  project SMART Cyner Substrates is acknowle dged for technical assistance during the fabrication of the prototype antennas 


  14 R EFERENCES  1  P. Jorna, H. Schippers, J. Verpoorte, \223Beam Synthesis for Conformal Array Antennas with Efficient Tapering\224 Proceedings of 5 th European Workshop on Conformal Antennas, Bristol, September 11-12, 2007 2  The Radio Regulations, editi on of 2004, contain the complete texts of the Radio Regulations as adopted by the World Radio-communication Conference \(Geneva WRC-95 tly revised and adopted by the World Radio-communication Conference WRC-97\RadioWRC2000\and the World Radio-communication Conference WRC-03 Resolutions, Recommendations and ITU-R Recommendations incorporat ed by reference 3  RECOMMENDATION ITU-R M.1643, Technical and operational requirements for ai rcraft earth stations of aeronautical mobile-satellite service including those using fixed satellite service network transponders in the band 14-14.5 GHz \(Earth-to-space 4  ETSI EN 302 186 v1.1.1 \(2004-01 Stations and Systems \(SES\onised European Norms for satellite mobile Aircraft Earth Stations AESs\the 11 12/14 GHz frequency bands covering essential requirement s under article 3.2 of the R&TTE directive 5  EUROCAE ED-14E; Environmental Conditions and Test procedures for Airbor ne Equipment, March 2005 6  F. Croq and D. M. Pozar, \223Millimeter wave design of wide-band aperture-coupled stacked microstrip antennas,\224 IEEE Trans. Antennas Propagation, vol. 39 pp. 1770\2261776, Dec. 1991 7  S. D. Targonski, R. B. Waterhouse, D. M. Pozar Design of wide-band aperture stacked patch microstrip antennas ", IEEE Transactions on Antennas and Propagation, vol. 46, no. 9, Sep. 1998, pp. 1245-1251 8  R. B. Waterhouse, "Design of probe-fed stacked patches", IEEE Transactions on Antennas and Propagation, vol. 47, no. 12, Dec. 1999, pp. 1780-1784 9  D.M. Pozar, S. D. Targonski, \223A shared aperture dualband dual-polarised microstrip array\224, IEEE Transactions on Antennas and Propagation,Vol. 49 no. 2,Feb. 2001, pp. 150-157 10  http://www.ansoft.com 11  J-F. Z\374rcher, F.E. Gardiol, \223Broadband patch antennas\224 Artech House, \(1995\N 0-89006-777-5 12  H. Schippers, J. Verpoorte, P. Jorna, A. Hulzinga, A Meijerink, C. G. H. Roeloffzen, L. Zhuang, D. A. I Marpaung, W. van Etten, R. G. Heideman, A. Leinse, A Borreman, M. Hoekman M. Wintels, \223Broadband Conformal Phased array with Optical Beamforming for Airborne Satellite Communication\224, Proc. of the IEEE Aerospace Conference, March 2008, Big Sky, Montana US 13  H. Schippers, J. Verpoorte, P. Jorna, A. Hulzinga, L Zhuang, A. Meijerink, C. G. H. Roeloffzen, D. A. I Marpaung, W. van Etten, R. G. Heideman, A. Leinse M. Wintels, \223Broadband Op tical Beam Forming for Airborne Phased Array An tenna\224, Proc. of the IEEE Aerospace Conference, March 2009, Big Sky, Montana US 


  15  B IOGRAPHIES  Harmen Schippers is senior scientist at the National Aerospace Laboratory NLR. He received his Ph. D. degree in applied mathematics from the University of Technology Delft in 1982. Since 1981 he has been employed at the National Aerospace laboratory NLR. He has research experience in computational methods for aero-eleastics, aeroacoustic and electromagnetic problems. His current research activities are development of technology for integration of smart antennas in aircraft structures, and development of computational tools for installed antenna analysis on aircraft and spacecraft  Jaco Verpoorte has more than 10 years research experience on antennas and propagation Electromagnetic compatibility \(EMC and radar and satellite navigation He is head of the EMC-laboratory of NLR. He is project manager on several projects concerning EMCanalysis and development of advanced airborne antennas    Adriaan Hulzinga received his BEng degree in electronics from the hogeschool Windesheim in Zwolle Since 1996 he has been employed at the National Aerospace laboratory \(NLR as a senior application engineer. He is involved in projects concerning antennas and Electromagnetic compatibility \(EMC  Pieter Jorna received the M.Sc degree in applied mathematics from the University of Twente in 1999 From 1999 to 2005 he was with the Laboratory of Electromagnetic Research at the University of Technology Delft. In 2005 he received the Ph.D. degree for his research on numerical computation of electromagnetic fields in strongly inhomogeneous media Since 2005 he is with the National Aerospace Laboratory NLR\ in the Netherlands as R&D engineer   Andrew Thain is a research engineer in the field of electromagnetic modelling of antennas. He specialises in the use of surface integral methods for the calculation of coupling and radiation patterns and works closely with Airbus on the topic of antenna positioning. He has experience in the field of electromagnetic modelling  Gilles Peres is head of the Electromagnetics group of EADS-IW He has a wide experience in computational EM modelling particularly the use of FDTD, integral and asymptotic techniques for antenna structure interactions. He has contributed with Airbus experts to the certification campaign of the A340/500 and A340/600. Dr Peres holds a PhD thesis from University of Toulouse \(1998\ on impulsive Electromagnetic Propagation effects through plasma   Hans van Gemeren has a BEng degree in electronics. From the beginning of Cyner substrates he is involved in development and production of prototyping and nonconventional Printed Circuit boards Working mainly for design and research centers Cyner got involved in many high tech projects and from this developed a great expertise in the use of different \(RF materials. In the FlySmart project Hans and his colleagues are able to do what they like most: In close cooperation with designers, creatively working on substrate solutions 


  16  


NIMBUS NOAA 8 NOAA 15 NPOESS Preparatory Project Orbital Maneuvering Vehicle Orbcomm Orbiting Carbon Observatory Orbiting Solar Observatory-8 Orbview 2 Orion 1 P78 Pas 4 Phoenix Pioneer P-30 Pioneer Venus Bus/Orbiter Small Probe and Large Probe Pioneer-I 0 Polar QuikSCAT Radarsat Reuven High Energy Solar Spectroscopic Imager REX-II Rosetta Instruments Sage III SAMPEX Satcom C3 Satcom C4 SBS 5 SCATHA Seastar SMART-1 SNOE Solar Dynamics Observatory Solar Maximum Mission Solar Mesosphere Explorer Solar Radiation and Climate Experiment Solar Terrestrial Relations Observatory Space Interferometry Mission Space Test Program Small Secondary Satellite 3 Spitzer Space Telescope SPOT 5A Stardust  Sample Return Capsule STEPO STEPI STEP3 STEP4 STRV ID Submillimeter Wave Astronomy Satellite Surfsat Surveyor Swift Gamma Ray Burst Exporer Synchronous Meterological Satellite-I TACSAT TACSAT 2 TDRS F7 Tellura Terra Terriers Tethered Satellite System Thermosphere Ionosphere Mesosphere Energetics and Dynamics TIMED TIROS-M TIROS-N TOMS-EP Total Ozone Mapping Spectrometer TOPEX TRACE Triana Tropical Rain Measuring Mission TSX-5 UFO I UFO 4 UFO 9 Ulysses Upper Atmosphere Research Satellite Vegetation Canopy Lidar VELA-IV Viking Viking Lander Viking Orbiter Voyager Wilkinson Microwave Anisotropy Probe WIND WIRE XMM X-Ray Timing Explorer XTE XSS-iO XSS-ii APPENDIX B FIELDS COLLECTED Mission Mission Scenario Mission Type Launch Year Launch Vehicle Bus Model Bus Config Bus Diameter Location Expected Life Flight Profile Flight Focus Technical Orbit Currency Total Cost Including Launch Unit Sat Costs Average Sat Cost Production Costs Launch Costs Operations Cost Orbit Weight Wet Weight Dry Weight Max Power EOL Power BOL Power  of Batts 17 


Batt Power Batt Type Stabilization Type Propulsion Mechanism  of Solar Panels  of Solar Cells Manufacturing Qty Satellites in Constellation On-Orbit Spares Channels Number of Bands Data Storage Processing Power Source type Block Name Thermal Control Material Type Level of Technology Known Inheritance Propulsion station keeping Number of Axes Ground Based Spares Pointing Accuracy APPENDIX C EXISTING MODELS Numerous models are today in use for estimating spacecraft cost Two of the most common are the NASA/Air Force Cost Model and the Aerospace Small Satellite Cost Model Here is a description of the NAFCOM model The NASA/Air Force Cost Model NAFCOM is a parametric estimating toolfor space hardware It is based on historical NASA and Air Force space projects and is primarily used in the very early phases of a development project NAFCOM can be used at the subsystem or component levels The database currently includes 122 missions including 76 unmanned earth orbiting 24 unmanned planetary 11 launch vehicles 8 manned 3 engines It uses parametric relationships to estimate subsystem or component level costs for any aerospace hardware including earth orbital spacecraft manned spacecraft launch vehicle upper stages liquid rocket engines scientific instruments or planetary spacecraft 7 And for the Aerospace Small Satellite Cost Model SSCM employs a parametric methodology for estimation of program cost and is best suited to the early conceptual development phase of a spacecraft program during which time the design is likely to be less mature and when cost and performance trades can be easily performed SSCM consists of a collection of cost-estimating relationships or CERs which estimate the costs of developing andproducing a spacecraft system with the following subsystems  Attitude Determination and Control Subsystem ADCS  Propulsion  Power  Telemetry Tracking  Command TT&C  Command  Data Handling C&DH  Structure  Thermal CERs were also developed for integration assembly and test IA&T program management PM and systems engineering SE and launch and orbital operations support LOOS Individual subsystem cost estimates are statistically rolled up to yield a cost-risk distribution which provides the estimator with a range of cost estimates andpercentiles 8 The SSCM was calibrated from over 100 post-1990 Earth-orbiting andplanetary missions REFERENCES 1 Lack of Disciplined Cost-Estimating Processes Hinders Effective Program Management GAO study 04-642 2 Jilla Cyrus D and Miller David W Satellite Design Past Present and Future International Journal of Small Satellite Engineering 12 February 1997 3 Bearden David A A Complexity Based Risk Assessment of Low-Cost Planetary Missions:When Is A Mission Too Fast and Too Cheap Fourth IAA International Conference On Low-Cost Planetary Missions JHU/APL MAY 2-5 2000 4 Kellogg Mahr and Lobbia An Analogy-based Method for Estimating the Costs of Spacecraft IEEEAC paper 1371 Version 4 5 Hoeting Jennifer A Methodology for Bayesian Model Averaging An Update f 6]btp/ewiieiao iiAaos 7 Keith Smith NASA/Air Force Cost Model Science Applications International Corporation 8 18 


BIOGRAPHIES Lee Fischman served as Principle Investigator for this project Lee is Senior Director of Development at Galorath Incorporated where he directs much of the new product development and research at the firm He developed SEER for Software  Hardware Integrations with Microsoft Project the Comparison Sizing tool COTS Software model in addition to various data mining information extraction and expert systems Previously he was a software designerlprogrammer in the New York financial industry Lee earned a BA from the University of Chicago and an MA from UCLA both in economics Mike Kimel carried out statistical work on the project Mike is an Economist for Galorath Inc in addition to maintaining his own quantitative consulting practice He has also taught Economics and Advanced Statistics at the Graziadio School of Business and Management at Pepperdine University run the Competitive Strategy group for a Fortune 500 Telecom Company and worked as a Consultant at PriceWaterhouse LLC now PriceWaterhouse-Coopers He earned a Ph.D in Economicsfrom UCLA Troy Masters programmed analytic methods and is integrating the Far Out model into its parent product SEER for Hardware previously SEER-H Troy is a Software Engineer with Galorath Incorporated where he has been the primary developer for a range ofproducts He earned a BS in computer science from UCLA David J Pine was our subject matter expert helping us assemble data and gain insight into technical trends Dave is retired after a 34-year career with the National Aeronautics and Space Administration NASA currently is a consultant to various government and industry entities While at NASA his organizations in the Office of the Chief Financial Officer and later at the IPAO at Langley Research Center were responsible for the conduct of major NASA program analyses and evaluations for the NASA Administrator and Deputy Administrator From early 1988 through the end of 1990 he was the Deputy Program Manager for the Hubble Space Telescope Program specifically responsible for the telescope operations and science support aspects of the program He earned a BS in Aerospace Engineering from the Polytechnic Institute of Brooklyn and a Masters of Engineering Administration from the George Washington University 19 


  20 Angeles, where he also received a B.S. in Applied Mathematics  Eric Fetzer is a Senior Member of the Technical Staff at the Jet Propulsion Laboratory, Pasadena, California specializing in satellite observations of the atmosphere.  His scientific interests include planetary boundary layer processes, tropical phenomena, upper tropospheric variability, and climatologies of temperature, water vapor and clouds.  His technical interests include analysis of large data sets, and of multi-sensor observations. He has over 20 peer-reviewed publications and given numerous scientific presentations, public lectures and media interviews about climate science. Eric received a B.A. in Physics from the University of California Berkeley, and a Ph.D. in Astrophysical, Planetary and Atmospheric Sciences from the University of Colorado, Boulder   Amy Braverman is a Senior Statistician at the Jet Propulsion Laboratory, California Institute of Technology She holds a B.A. in Economics from Swarthmore College an M.A. in Mathematics from UCLA, and a Ph.D. in Statistics also from UCLA. Prior to her current position in JPL's Science Data Understanding Group, she was a Caltech Post-doctoral Scholar at the Jet Propulsion Laboratory, and a Scientist in the Flight Sciences Experiments Section of the Science Division. Dr Braverman conducts research on information-theoretic methods for the analysis of massive data sets and streams statistical data fusion, high-dimensional data analysis, and statistical analysis for climate model evaluation and diagnosis. She has published in both the statistics and geoscience literature, and is active in both communities She is a member of the Multi-angle Imaging SpectroRadiometer Science Team, and serves as a member of the Atmospheric Infrared Sounder Science Integration Team. Her responsibilities on both missions include designing data reduction algorithms for massive, remote sensing data sets. Dr. Braverman also holds an appointment in the Department of Statistics at UCLA as Adjunct Associate Professor, and is active in UCLA\222s Center for Environmental Statistics. She is member of the Committee on Applied and Theoretical Statistics of the US National Academy of Science. She has refereed for the Journal of the American Statistical Association, the Journal of Computational and Gr aphical Statistics, IEEE Transactions on Geoscience and Remote Sensing, and the Journal of Applied Meteorology and Climatology Seungwon Lee is a senior member of the High Capability Computing and Modeling Group at Jet Propulsion Laboratory. She is conducti ng research on comet gas dynamics, nonlinear dynamics control, climate model parameterization, Earth science data analysis, parallel computing, and advanced numerical algorithms. She received her Ph.D in Physics fr om the Ohio State University and her M.S. and B.S. in Physics from the Seoul National University, Korea  Matthew Henderson is software engineer in the High Capability Computing and Mode ling group at JPL. His current work includes Web Services and Instrument Data Level 2 subsetting. He received a B.S. Computer Science from CSU Pomona, and is currently pursuing M.S Computer Science  Steven J. Lewis is a member of the Information System and Computer Science staff member at the Jet Propulsion Laboratory.  He received a BS in Mathematics from the University of California, Los Angeles in June 2001, and the MS and Ph.D. Degree from Claremont Graduate University in May 2004 and May 2007, respectively.  He worked as a post doctoral fellow at Keck Graduate Institute from June 2007 until he joined JPL in March of 2008.  During his graduate and post doctoral work, his studies focused on applications of Bayesian methods to hidden Markov models with particular interest and application to protein sequencing.  His work at JPL has focused on integrating web services into various programming platforms for the purposes of accessing NASA satellite data, as well as developing object tracking so ftware and contributing to image enhancement and restoration efforts Van Dang is a member of the Science Data Understanding Group at the Jet Propulsion Laboratory. She was responsible for the NEWS Level 2 processing that generated the formal merged Level 2 data from multiple A-Train instruments  Manuel de la Torre is a Physicist from the Universidad Complutense at Madrid \(Spain\. After finishing his Ph.D work at the University of Bayreuth \(Germany\ on pattern formation in turbulent flows and a 7 1/2 year stunt as Ass and Assoc. Prof. at the Escuela T\351cnica Superior de Ingenieros Aeron\341uticos in Madrid \(Spain\, he came to the Jet Propulsion Laboratory on a 1-year Sabatical leave in 1997 wanting to apply fundamental concepts of nonlinear systems and geophysical fluid dynamics to something that might be directly useful to soci ety. He discovered the JPL as a great place to achieve that goal and extende d his stay a bit longer, becoming Technical staff and working on different aspects of remote sensing, validation of satellite instruments, and data analysis of atmospheric processes and climate  


