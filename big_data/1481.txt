Distributed-Memory Parallel Algorithms for Generating \nMassive Scale-free Networks Using Preferential nAttachment Model \nMaksudul AlarT Science \n+NDSSL, Virginia Bioinformatics Institute \nVirginia Tech, Blacksburg, VA 24061, USA \n{maksud, maleq mmarathe}@vbi.vt.edu* \nABSTRACT \nRecently, there has been substantial interest in the study of \nvarious random networks as mathematical models of com­\nplex systems. As these complex systems grow larger, the \nability to generate progressively large random networks be­\ncomes all the more important. This motivates the need for nefficient parallel algorithms for generating such networks. \nNaive parallelization of the sequential algorithms for gener­\nating random networks may not work due to the dependen­\ncies among the edges and the possibility of creating duplicate \n\(parallel parallel algorithms for generating random \nscale-free networks using the preferential-attachment model. \nOur algorithms scale very well to a large number of proces­\nsors and provide almost linear speedups. The algorithms \ncan generate scale-free networks with 50 billion edges in 123 \nseconds using 768 processors nCategories and SUbject Descriptors \nD.1 . 3  [Programming Techniques] : Concurrent Program­\nming-Parallel programming; G.2.2 [Discrete Mathemat­\nics] : Graph Theory \nGeneral Terms \nTheory, Algorithm \nKeywords nscale-free networks; Big Data; high performance comput-\n*We thank our external collaborators. members of the nNetwork Dynamics and Simulation S'cience Laboratory \n\(NDSSL suggestions \nand comments. This work has been partially supported by \nDTRA CNIMS Contract HDTRAI-11-D-0016-0001, DTRA \nGrant HDTRAI-11-1-0016, DTRA NSF NetSE Grant CNS-\n1011 769 and NSF SDCI Grant OCI-10326 7 7. \nPermission to make digital or hard copies of all or part of this work for \npersonal or classroom use is granted without fee provided that copies are not \nmade or distributed for profit or commercial ad vantage and that copies bear \nthis notice and the full citation on the first page. Copyrights for components \nof this work owned by others than ACM must be honored. Abstracting with \ncredit is permitted To copy otherwise, or republish, to post on servers or to \nredistribute to lists, requires prior specific permission and/or a fee. Request \npermissions from Permissions@acm.org. \nSC'J3 November 17-21,2013, Denver CO, USA \nCopyright 2013 ACM 978-1-4503-2378-9/13/11 ... $15.00. \nhttp://dx.doi.org/l0.1145/250321 0.2503291 ning; preferential attachment; random networks; parallel al­\ngorithms; copy model \n1. INTRODUCTION \nAdvances in hardware technology as well as the develop­\nments in software and algorithms have enabled the detailed nstudy of complex networks. Complex networks such as the \nInternet [12, 26 ] , biological networks [14 social networks \n[21, IS] ' and various infrastructure networks [4, 19, S] are \nabstracted as random graphs for the purposes of obtain­\ning rigorous mathematical results; see e.g. [8] . The study \nof these complex systems have significantly increased the \ninterest in various random graph models [5] . As some of \nthe complex networks grow, it has become necessary to cor­\nrespondingly generate massive random networks efficiently. \nAs discussed in [20] , a smaller network may not exhibit the \nsame behavior, even if both networks are generated using the \nsame model. In [20] , by experimental analysis, it was shown \nthat the structure of larger networks is fundamentally differ­\nent from small networks, and many patterns emerge only in \nmassive datasets. In the areas of network science and data \nmining as well as social sciences and physics large-scale net­\nwork analysis is becoming a dominant field [2] . \nMany random graph models have been developed in the \npast. Among them, the first and well-studied model is the \nErdos-Renyi model [11 However, the Erdos-Renyi model \ndoes not exhibit the characteristics observed in many real­\nworld complex systems [5] . As a result, many other random \ngraph models, such as small-world [2 7] , Barabasi-Albert [3, \n1 Chung-Lu [23] , exponential random graph [1 3, 25] , R­\nMAT [ 7] , and HOT [6] models, have been proposed nBarabasi and Albert [3] discovered a class of inhomoge­\nneous networks, called scale-free networks characterized by \na power-law degree distribution P\(k While highly connected nodes are \nimprobable in exponential networks, they do occur with sta­\ntistically significant probability in scale-free networks. Fur­\nthermore, the work of Albert et al. [1] suggests these highly \ninterconnected nodes appear to play an important role in \nthe behavior of scale-free systems particularly with respect \nto their resilience [S] . \nWatts and Strogatz [2 7] described small-world networks nwhich also lead to relatively homogenous topology [S] . This \nmodel transforms a regular one-dimensional lattice \(with \nvertex degree of four or higher randomly chosen vertex. It has \nbeen found that, even with the small rewiring probability, \nthe average shortest-path length of the resulting graphs is \nof the order of random graphs, and generates graphs with nfat-tailed degree distributions [28] . \nDemand for large random networks necessitates efficient, \nboth in terms of running time and memory consumption, al­\ngorithms to generate such networks. Although various ran­\ndom graph models are being used and studied over the last \nseveral decades, even efficient sequential 


algorithms for gen-\n8l'ating such graphs were nonexistent until recently. Batagelj \nand Brandes [5 justifiably said "To our surprise we have \nfound that the algorithms used for these generators in soft­\nware such as BRITE, GT-ITM, JUNG, or LEDA are rather \ninefficient. . . .  superlinear algorithms are sometimes toler­\nable in the analysis of networks with tens of thousands of \nnodes, but they are clearly unacceptable for generating large \nnumbers of such graphs." As a step towards meeting this \ngoal, recently efficient sequential algorithms have been devel­\noped to generate certain classes of random graphs: Erdos­\nRenyi [5 small world [5], Preferential Attachment [5, 24] , \nand Chung-Lu [23] . \nHowever, although efficient sequential algorithms are able \nto generate networks with millions of nodes quickly, gener­\nating networks with billions of nodes can take substantially \nlonger. Further, a large memory requirement often makes ngeneration of such large networks using these sequential al­\ngorithms infeasible. Shared memory parallel machines pro­\nvide one alternative to overcome the problems. Distributed­\nmemory parallel algorithms provide another natural alter­\nnative. \nThe design of parallel distributed memory algorithms poses \ntwo main challenges in the context of generating random \ngraphs. Firstly, the dependencies among the edges espe­\ncially in the preferential-attachment model, impede inde­\npendent operations of the processors. Second different pro­\ncessors can create duplicate edges, which must be avoided. \nDealing with both of these problems requires complex syn­\nchronization and communications among the processors, and \nthus gaining satisfactory speedup by the parallelization be­\ncomes a challenging problem. Even for the Erdos-Renyi \nmodel where the existence of edges are independent of each \nother, parallelization of a non-naive efficient algorithm, such nas the algorithm by Batagelj and Brandes [5], is a non-trivial \nproblem. A parallelization of Batagelj and Brandes's algo­\nrithm was recently proposed in [24] . \nFor the preferential attachment model, the only previ­\nously known distributed-memory parallel algorithm is given \nby Yoo and Henderson [28] . Although useful, the algorithm \nhas two weaknesses: \(i synchronization, they came up with an \napproximation algorithm rather than an exact algorithm; \nand \(ii accuracy of their algorithm depends on several \ncontrol parameters, which are manually adjusted by running nthe algorithm repeatedly. Several other studies were done \non the evolving and growth model. Machta and Machta \n[22] described how an evolving network can be generated \nin parallel. Dorogovtsev et al. [10] proposed a model that \ncan generate graphs with fat-tailed degree distributions. In \nthis model, starting with some random graph, edges are ran­\ndomly rewired according to some preferential choices. \nIn this paper, we study the problem of designing a dis­\ntributed memory parallel algorithm for generating massive \nscale-free networks based on the preferential attachment \(PA distributed-memory parallel algorithms for generating \nrandom graphs following the preferential attachment model \nexactly. \nThe rest of the paper is organized as follows. Preliminar­\nies, notations and a description of the parallel computation \nmodel is given in Section 2. In Section 3, we describe the \nproblem and algorithms. Some sequential algorithms are \ndiscussed in Section 3.1. In Section 3.2, we present our par­\nallel algorithm for distributed memory architecture for the \ncase where each node connects a single edge to the existing \nnetwork. In Section 3.3, we extend the algorithm for a gen­\neral case where each node contributes x edges to the existing \nnetwork. Experimental results showing the performance of \nour parallel algorithms are presented in Section 4. Finally, \nwe conclude in Section 5. \n2. PRELIMINARIES AND NOTATIONS \nIn the rest of the paper, we use the following notations. \nWe denote a network G\(V, E sets of \nvertices \(nodes n - 1. We use \nthe terms node and vertex interchangeably. If \(u, v neighbors of each other. The set of all \nneighbors of v E V is denoted by N\(v v u, v E}. The degree of v is dv = IN\(v nvice versa. \nWe develop parallel algorithms for the message passing in­\nterface \(MPI memory system, where the \nprocessors do not have any shared memory and each proces­\nsor has its own local memory. The processors can exchange \ndata and communicate with each other by exchanging mes­\nsages. The processors have a shared file system and they \nread-write data files from the same external memory. How­\never such reading and writing of the files are done indepen­\ndently. \nWe use K, M and B to denote thousands millions and \nbillions, respectively; e.g. , 2B stands for two billion. \n3. PREFERENTIAL ATTACHMENT MODEL nPreferential attachment model is a model for generating \nrandom evolving scale-free networks using a preferential at­\ntachment mechanism. In a preferential attachment mecha­\nnism, a new node is added to the network and connected to \nsome existing nodes that are chosen preferentially based on \nsome properties of the nodes. In the most common appli­\ncation, preference is given to nodes with larger degrees: the \nhigher the degree of a node, the higher the probability of \nchoosing it. In this paper, we study only the degree-based 


npreferential attachment, and in the rest of the paper, by pref­\nerential attachment \(PA preferential \nattachment. \nBefore presenting our parallel algorithms for generating \nPA networks, we briefly discuss the sequential algorithms \nfor the same. \n3.1 Sequential Algorithms for Preferential At­\ntachment Model \nOne way to generate a random P A network is to use the \nBarabasi-Albert \(BA  and Albert \nshowed many real-world networks have two important char-\nacteristics: \(i nature and \(ii BA proportional to its current degree. The networks \ngenerated by BA model are called BA networks, which bear nthose two characteristics of a real-world network. BA net­\nworks have power law degree distribution. A degree distri­\nbution is called power law if the probability that a node has \ndegree d is given by Pr { d} ? d where I is a positive \nconstant. \nThe BA model works as follows. Starting with a small \nclique of i; nodes, in each phase t, a new node t is added to \nthe network and connected to x <:: i; randomly chosen exist-\ning nodes: Ft\(k k k Thus each \nphase adds x new edges \(t, Ft\(I t, Ft\(2 t, Ft\(x the evolving nature of the \nmodel. For each of the x new edges, nodes Ft\(1 2 x randomly selected based on the degrees of the nodes in \nthe current network. In particular, the probability P t \(i i of node j. Barabasi and' Al­\nbert showed this preferential attachment method of selecting \nnodes results in a power-law degree distribution [3]. \nIn the following discussion, we assume x = 1, and for this \ncase, we use Ft for Ft\(I ntake r!\(n2 generate \na uniform random number in [1, :? di ] and scan the list \nof the degrees sequentially to find Ft. In this case, phase t \ntakes 8 \(t n2  efficient algorithm with running time \nO\(m appears in this list exactly di times. The list \ncan easily be updated dynamically by simply appending u \nand v to the list whenever a new edge \(u, v nlist uniformly at random. Since each node i occurs exactly \ndi times in the list, we have Pr {Ft = i E,did. Notice \nfor the case x > 1, this algorithm may produ?e \nJ \nduplicate \nedges. To avoid duplicate edges efficiently, the algorithm \nrequires each node to maintain separate lists of neighbors. \nA sequential implementation of this algorithm is given in the \ngraph algorithm library NetworkX [16]. \nAs it turns out none of the above algorithms lead to an effi­\ncient parallelization. Another algorithm, called copy model nproposed in [1 7] also leads to preferential attachment and \npower law degree distribution. The algorithm works as fol­\nlows. In each phase t, \nStep 1: first a random node k E [1, t -l] is chosen with \nuniform probability. \nStep 2: then Ft is determined as follows: \nk with prob. p \nFk with prob. \(1 -p 1 2 can be easily shown that Pr {Ft = i} = "did when p = LJ J \n?. Thus when p = ?, this algorithm follows the Barabasi-\nAlbert model as shown below. Ft can be equal to i in two \nmutually exclusive ways: i the first step and \nassigned to Ft in the second step \(Eq. 1 or ii step \(Eq. 2 1 -p I -p di -1 1 -p is more general than the BA model. \nIn [1 7], it has been shown that the copy model produces net­\nworks with degree distribution following a power law d-"Y, \nwhere the value of the exponent I depends on the choice of p nFurther, it is easy to see the running time of the copy model \nis O\(m more effi­\ncient parallel algorithms for generating preferential attach­\nment networks. We develop our parallel algorithm based on \nthe copy model. \n3.2 Parallel Algorithm for Preferential Attach­\nment Model with x = 1 \nThe dependencies among the edges pose a major challenge \nin parallelizing preferential attachment algorithms. In phase \nt, to determine Ft, it requires that Fi is known for each i < t. \nAs a result, any algorithm for preferential attachment seems \nto be highly sequential in nature: phase t cannot be executed nuntil all previous phases are completed. However, a careful \nobservation reveals that Ft can be partially, or sometime \ncompletely, determined even before completing the previ­\nous phases. The copy model helps us exploit this observa­\ntion in designing a parallel algorithm. However, it requires \ncomplex synchronizations and communications among the \nprocessors. To keep the algorithm efficient, such synchro­\nnizations and communications must be done carefully. In \nthis section, we present a parallel algorithm based on the \ncopy model. \nFor the ease of discussion, we first present our algorithm \nfor the case x = 1. We present the general 


case x ::: 1 in \nSection 3.3. \nLet P be the number of processors. The set of nodes \nV is divided into P disjoint subsets V1 , V2, . . .  , Vp; that is, \nVi C V, such that for any i and j, Vi n Vj = 0 and Ui Vi = V nProcessor Pi is responsible for computing and storing Ft for \nall t E Vi. The load balancing and performance of the algo­\nrithm crucially depend on how V is partitioned. We study \nthree partitioning approaches. In the first two approaches, \nconsecutive nodes are assigned to a processor whereas in the \nlast approach, nodes are assigned in a round robin fashion. \nThe details of these partitioning schemes are given later in \nSection 3.5 Some network analysts may prefer to generate \nnetworks on the fly and analyze it without performing disk \nI/O Many network analysis algorithms require partitioning \nthe graph into equal number of edges per processor Some \nalgorithms require the consecutive nodes to be stored in the \nsame processor. Our different partitioning schemes can be \nused to satisfy many such requirements. \nThe basic principle behind our parallel algorithm is as \nfollows. Recall the sequential algorithm for the copy model. \nEach processors Pi can independently compute step 1 for \neach t E Vi, as a random k E [1, t-l] is chosen with uniform \nprobability \(independent of the node degrees determination of Ft need to be waited \nuntil Fk is known. If k E Vi where i =I j, processor i sends a \nrequest message to processor j to find Fk. Note that at the \ntime when processor j receives this message, Fk can still be \nunknown. If so, Pj keeps this message in a queue until Fk is \nknown. Once Fk is known, Pj sends back a resolved message \nto Pi . The basic method executed by a processor Pi is given \nin Algorithm 3.1 .  An example instance of the execution of \nthis algorithm with seven nodes is depicted in Figure 1. \nAlgorithm 3.1 Parallel PA with x = 1 \n1: Each processor Pi executes the following in parallel: \n2: for each t E V; do \n3: k +-- a uniform random node in [1, t -1] \n4: c +-- a uniform random number in [0, 1] \n5: if c < p \(i.e. , with probability p request t, k follows: \n11: Upon receipt of message \(request, t', k n1 3: send message \(resolved, t', Fk resolved, t, v resolved, t', v Vi \n2 .,,3 4 .,,5 .,,6 \n- - ........ ....... _-"':::,..,.----"'" \na \nb \nFigure 1: A network with 7 nodes generated by Al­\ngorithm 3.1: a the algorithm, \nb the nodes. \nFor example, for node t = 4, k is chosen to be 2, F4 \nis chosen to be set to k = 2 \(in Line 5-6 and thus \nedge \(4, 2 in Line 8 as a result, \ndetermination of Fs is waited until F3 is known. At \nthe end, we have F5 = F3 = F2 = 1. \n3.3 Parallel Algorithm with x 2> 1 \nIn Section 3. 2, we presented the algorithm for the simpler \ncase x = 1. In this section, we modify this algorithm for \nthe general case where each node creates x 2> 1 edges. The npseudocode of the algorithm is given in Algorithm 3.2. The \nbasic structure of the algorithm for the general case is the \nsame as that of the special case x = 1. We mainly focus our \ndiscussion only on the modifications required and the differ­\nences between the two cases. The main difference is that, \nfor each node t, instead of computing one edge \(t, Ft t, Ft \(1 t, Ft\(2 t, Ft\(x make sure such edges are distinct and do not create \nany parallel edges. For this general case, the set of nodes \n{Ft\(1 2 x is a \nclique of the first x nodes labeled 0, 1, 2, . . .  , x -1. Each \nof the other nodes from x to n -1 generates x new edges. \nThere are fundamentally two important issues that need to \nbe handled for the general case: i e Multiple edges for a node t are created by \nrepeating the same procedure x times \(Line 3 edges are avoided by simply checking if such an edge \nalready exists - such checking is done whenever a new edge \nis created. \nFor the e-th edge of a node t, another node k is chosen \nfrom [x, t -1] uniformly at random Line 4 t, k Line 6 t, k in Line 8, the existence of such an \nedge is checked immediately before creating them in Line \n7. If the edge already exists at that time, the process is \nrepeated again \(Line 10 t is connected to some node in Fk; that is, we make an \nedge \(t, Fk\(f  uniformly at \nrandom. Similar to the special case x = 1, if k is in another \nprocessor, a request message is sent to that processor to find \nFk\(f Line 14 same way. The only major change is that \ninstead of one queue for each node, x queues are maintained \nfor each node. \nDuplicate edges can also be created during the execution \nof Line 23. For example, suppose node t creates two edges \n\(t, Fk\(e t, Fkl\(e 


Hence, request messages are \nsent to the processors containing k and k' to resolve Fk \(e e e-th edge of k and e'-th edge of k' both \nconnects to the same node u, then Fk\(e e create a duplicate edge \(t, u nreceiving a resolved message < resolved, t, e, v >, the adja­\ncency list of t is checked to find whether edge t, v Line 22 selected \(Line 27-28 Line 29 algorithm, it is possible that computation \nof Ft for some node t can be waited until Fk for some other \nnode k is known. Such waiting can form a chain namely \na dependency chain. For example, as demonstrated in Fig­\nure 1, computation of Fs is waited for F3, which in turn is \nwaited for F2, and so on, and thus we have chain of depen­\ndency \(5, 3, 2 n1: Each processor Pi executes the following in parallel: \n2: for each t E Vi do \n3: for e = ° to x-I do \n4: k a uniform random node in [x, t -1] \n5: c +-- a uniform random number in [0, 1] \n6: if c < p \(i.e. , with probability p e uniform random number in [1, x] \n13: Ft\(e l request t, e, k, I follows: \n16: Upon receipt of message \(request, t', e', k', I I i= NILL then \n18: send message \(resolved, t', e', Fk t', e n21: Upon receipt of message \(resolved, t, e, v e t ell E Qt.e do \n25: send message \(resolved, t', e', v random node in [x, t -1] \n28: I +-- a uniform random number in [1, x] \n29: re-send message \(request, t, e, k I the parallel algorithm. Fortunately, \nthe length of a dependency chain is small, and the perfor­\nmance of the algorithm is hardly affected by such waiting. \nIn this section, we formally define a dependency chain and nprovide a rigorous analysis showing that maximum length of \na dependency chain is at most O\(log n probability \n\(w.h.p log n log n maximum length, most \nof the chains have much smaller length. It is easy to see \nthat for a constant p average length of a dependency chain \nis also constant, which is at most 1. For an arbitrary p, the p average length is still bounded by log n as shown in Theo-\nrem 3.3. Thus, while for some nodes a processor may need nto wait for O\(log n purpose of analysis, first we introduce another \nchain named selection chain. In the first step \(Line 3 of Al­\ngorithm 3.1  in [1, k -1] \nis selected. We can think such a selection process creates \na chain called selection chain Formally, we define a selec­\ntion chain St starting at node t to be a sequence of nodes \n\(uo, U 1, U2 Ui, . . .  ux selection \nchain must end at node 1. The length of a selection chain \nSt denoted by IStl is the number of nodes in St. \nIn the next step \(see Eqn. 2 and Line 4-8 of Algorithm \n3.1 Fk to it. If Fk is se­\nlected to be assigned to Ft, Ft cannot be determined until Fk \nis known; that is, the computation of Ft for node t depends \non node k. In such a case, we say node t is dependent on \nk; otherwise we say node t is independent. In turn, node k \ncan depend on some other node, and eventually such succes­\nsive dependencies can form a dependency chain. Formally, \na dependency chain Dt starting at node t is a sequence of nnodes \(vo, VI, V2, ... ,Vi, . . .  vy independent. Notice that \nif Vi EDt, DVi is a subsequence and a suffix of Dt. Also it is easy to see that Dt is a subsequence and a prefix of St, \nand we have IDtl S iSti . Examples of a selection chain and \na dependency chain are shown in Figure 2. Bounds on the \nlength of dependency chains are given in Theorem 3.3 The \nfollowing lemmas, Lemma 3.1 and 3.2, are needed to prove \nTheorem 3.3. \n012 k \n \nt n-l \nFigure 2 Selection chain and dependency chain. \nThe entire chain, which is marked by the solid lines, \nis a selection chain \(t, k, j, i , 2, 1 , 0 t k, j, i i Then for any 1 S i < t, \nPt\(i in Line 3 of Algorithm 3.1 t?1 k < t, with probability \(t?l Cd \(3 t -I i i 4 with 1 S i < t + 1, we \nhave \nt \ntPt+l \(i i i t -I i i 5 6 7 i i 


such that 1 S i < min{k, t}. Now consider k = i+ 1. \nNotice that i is in Si+l if and only if i is selected for node \ni + 1; that is, Fi+ l \(i i E St. Then \nthe events Ai for all i, where 1 <:: i < t, are mutually inde­\npendent. \nPROOF. Consider a subset {Ail' Ai2 , . . .  , Ai£} of any £ \nsuch events where i l < i2 < ... < ik. To prove the lemma, \nit is necessary and sufficient to show that for any £ with \n2 <:: £ < t, \n\(8 Aik, i.e. , i2, . . .  , ie E St, by \nthe constructions of selection chains Si2 and St and since \ni l < i2, we have il ESt if and only if i l E Si2. Then \nLet Ri be a random variable that denotes the random \nnode selected for node i. Now observe that the occurrence \nof event i l E Si2 can be fully determined by the variables in n{Rj I i l < j <:: i2}; that is, event i l E Si2 does not depend \non any random variables other than the variables in {Rj I \ni I < j <:: i2} . Similarly, the events i2, . . .  , ie E St do not \ndepend on any random variables other than the variables in \n{Rj I i2 < j <:: t}. Since the random variables Ris are chosen nindependently at random and the sets {Rj I i l < j <:: i2} \nand {Rj I i2 < j <:: t} are disjoint, the events i l E Si2 and \nn!?2 Aik are independent; that is, \nBy Lemma 3.1, we have Pr {i l E Si2} = t; = Pr {i l E St nPr {Ail} and thus, \nNext, by using Eqn. 9 and applying induction on £, we \nprove Eqn. 8. The base case 2, follows immediately \nfrom Eqn. 9: \nPr L0 I Aik } = Pr {Ail} . Pr {Ai2} . \nBy induction hypothesis, for 1 events Aik, 2 <:: k <:: £, \nwe have Pr { n!=2 Aik } = TI!=2 Pr {Aik }. Then using Eqn. \n9 for case 2 t, we have \nD \nTHEOREM 3.3. Let Lt be the length of the dependency \nchain starting at node t and Lmax = maxt Lt. Then the \nexpected length E[Lt] <:: log n and Lmax = O\(log n nPROOF. Let St and Dt be the selection chain and depen­\ndency chain starting at node t, respectively, and Xt i i i nLt = IDtl <:: IStl = L Xi \(t i i i 1] and E[Xt\(i i   nHt-I <:: logt <:: log n \nBy Lemma 3.2, the random variables Xt\(i independent. Applying the Chernoff bound on \nindependent Poisson trials, we have \nPr { ? Xt\(i 1 + i5 1 + ??\(I+8 Then, \nPr {L 2' 5 log n} Pr {L 2' \(1 + i5 8 \nr \(1 1+8 _\ne\n_ 1+8 n\(?rl0gn \n5 log n \n\( 1 r10gn \n<:: \ne og n \n5 log n \n< 1 \nn3 \nThus, with probability at least 1- -\\-, length of the depen­\ndency chain is O\(log n probability at least 1 - ?. \nHence, we can say, the length of the dependency chainn is \nO\(log n Partitioning and Load Balancing \nRecall the formal definition of partitioning of the set of \nnodes V = {D, 1 n-1} into F partitions Vo, VI , . . .  , Vp-I \nas described at the beginning of Section 3.2. A good load \nbalancing is achieved by properly partitioning the set of \nnodes V and assigning each partition to one processor. Node \npartitioning has significant effects on the performance of the \nalgorithm. In this section we study several partitioning \nschemes and their effects on load balancing and the perfor­\nmance of the algorithm. In our algorithm, we measure the \ncomputational load in terms of the number of nodes per pro­\ncessor, the number of outgoing messages \(request message messages \(re­\nsponse messages partition­\ning of the nodes as described below. It is desirable that a \npartitioning of the nodes satisfies the following criteria. \nA. For any given k E V, finding of j, where k E Vj \(Line \n9, Algorithm 3.1 done efficiently, preferably in \nconstant time without communicating with the other \nprocessors. \nB. The partitioning should lead to a good load balancing. \nThe degrees of the nodes vary significantly, and a node nwith a larger degree causes more messages to work \nwith. As a result, naive partitioning may lead to poor nload balancing. \nC. As we discuss later, combining multiple messages \(to \nthe same destination MPLsend oper­\nation for them can increase the efficiency of the al­\ngorithm. However, combining multiple messages may \nnot be possible with an arbitrary partitioning as it may \ncause deadlocks. \nWith the objective of satisfying the above criteria, we \nstudy the following nodes partition schemes. \n3.5.1 Consecutive Node Partitioning \(CP Partition Vi starts at nodes ni and \nends at nHl - 1, where no = 0 and np = n. That is, \nVi = {ni, ni + 1 niH - I} for all i. \nWith the consecutive node partitioning, the only decision \nto be made is the number of nodes to be assigned to each \npartition Vi. The simplest way to do so is uniform parti­\ntioning \(UCP there are an equal number of nodes \nin each partition, i.e., IViI = I? l for all i. This uniform \npartitioning satisfies Criterion A and C above; however, it is \nclear that such partitioning can lead to poor load balancing. \nThe computation in each processor i involves the following \nthree types of load: \nA. generating random numbers and some other processing \nfor each node t E Vi, \nB. sending request messages for the nodes in 


Vi and re­\nceiving their replies, and \nC. receiving request messages from other processors and \nsending their replies. \nThe computation load for load type A and B above is di­\nrectly proportional to the number of nodes in partition Vi. \nComputation load for load type C depends not only on the \nnumber of nodes in a processors but also on i, the rank of \nthe processor. With uniform consecutve node partitioning \n\(UCP processor receives more request mes­\nsages than a higher ranked processor, because with j < k, \nE[N!j E[MkJ, where Mk is the number of request mes­\nsages received for Node k \(see Lemma 3.4 the number of request messages \nreceived for node k. Then E[Nh] = \(1 - p Hn-l - Hk harmonic number. \nPROOF. Node k receives a request message from node t > \nk if and only if t randomly picks k and decided to assign Fk \nto Ft. The probability of such an event is \(1 -p messages received for Node k is given \nby \nD \nn-l 1 \nL \(1 - p 1 - p Hn-l - Hk the computation load for each processor \nwith an arbitrary number of nodes assigned to the proces­\nsors. To do so, we make the following simplifying assump­\ntions: i receiving a message, and ii the same anal­\nysis will follow for arbitrary p by simply multiplying each nterm with 2\(1 - p A and B \nis c\(ni+l - ni i is \nn'i+l-1 \nL \(Hn-1 - Hk niH - ni Hk niH - ni ni+lHni+l niHnJ + \(niH - ni niH - ni Hn-1 + 1 nHIHni+l - niHnJ \nThe second last line follows from Eqn. 2. 36 in page 41 of \n[15] . Thus, using another constant b = 1 + c, the total \ncomputation load at Processor i is \n\(nHl n Hn-1 + b niHHni+l - niHnJ \nThe combined load for all processors is c' n for some con­\nstant c' and desired load in each processor is c?n. Thus ni , \nfor all i, can be determined by solving the following system nof equations, which is unfortunately nonlinear. \nno = 0 \nnp = n - 1 \n, \n\(nHl - ni Hn-1 + b nHIHni+l niHnJ = cpn \n\(10 two major difficulties \nanse: \n It seems the only way the above equations can be \nsolved is by numerical methods and can take a pro­\nhibitively large time to compute. \n Criterion A for load balancing may not be satisfied \nleading to poor performance. \nTo overcome these difficulties, guided by experimental re­\nsults, we approximate the solution of the above system of \nequations with a linear function and call the resultant parti­\ntioning scheme linear consecutive node partitioning \(LCP nodes among proces­\nsors for actual solutions of Equation 10 and linear approxi­\nmation. As we will see later in Section 4, our approximate \n11500 \n.'; \n? 1000 \nz \n? 500 \n? \nZ \n25 50 Processor Rank \n- Linear Approximation \n75 100 \nFigure 3: Distribution of the nodes among proces­\nsors for actual solutions of Equation 10 and its linear \napproximation. \nscheme LCP provides a very good load balancing and per­\nformance of the algorithm. \nAs in the LCP scheme, the number of nodes is increasing \nlinearly with i \(the ranks of the processors i -l i -1 line for \nlinear approximation as shown in Figure 3. Slope d can be \napproximated easily by sampling two points on the actual \nline. How the parameter a and processor rank form a given \nnode \(Criterion A computed is given in Appendix \nA.2. \nMessage Buffering: The processors exchange two types \nof messages request messages and resolve messages. For \neach node t ,  a processor may need to send one request mes­\nsage and receive one resolve message. If a Processor i has \nmultiple messages destined to the same processor, say Pro­\ncessor j, Processor i can combine them into a single mes­\nsage by buffering them instead of sending them individually. \nEach processor can do so by maintaining P -1 buffers, one \nfor each other processor. If the messages are not combined, \nfor large n, there can be a large number of outstanding mes­\nsages in the system and the system may not be able to deal \nwith such a large number of messages at a time, limiting our \nability to generate a large network. Further message buffer­\ning reduces overhead of packet header and thus improves nefficiency. \n3.5.2 Round-Robin Node Partitioning \(RRP robin fash­\nion among all processors. Partition Vi contains the nodes \n\(i, i+p, i+2p, ... , i+kp i+kp::; n < i+ \(k+ l mod p' Similar to UCP, in this RRP \nscheme also, the number of nodes in the partitions is almost \nequal. The number of nodes in a partition is either I nip l or \nl nip J. The difference between the number of nodes in two \npartitions is at most 1 .  \nFrom Lemma 3.4, it is clear that the expected number \nof received messages decreases monotonically with increas­\ning node labels. Round robin partition on such monotonic \ndistribution typically performs better. For the round robin \nnode partitioning scheme, the computation load among pro­\ncessors are well-balanced as shown analytically in Appendix \nA. 3. The difference between the computation load for any \ntwo processors is at most O\(log n n 


satisfies Criterion A: \ngiven a node, finding the processor where the node belongs \nto can be computed in constant time \(see Appendix A. 3 both UCP and LCP message buffering \(combining mes­\nsages since Processor i may wait only for Pro­\ncessor k such that k < i, there cannot be a circular waiting \namong the processors, and therefore deadlock cannot arise. \nHowever, in the RRP scheme, deadlock can occur if the nmessages are not buffered carefully. The request messages \ncan be buffered as it is done in UCP or LCP. The resolved \nmessage can also be buffered, but it needs to be done in a \nspecial way to avoid deadlock. To avoid deadlock, resolved \nmessages must be sent out from the buffer \(even if the buffer \nis not full yet processing every group of received mes­\nsages \(when buffering is used, messages are sent and received \nin groups the \nprocessors leading to a deadlock situation. \n4. EXPERIMENTAL RESULTS \nIn this section, we evaluate the performance of our algo­\nrithms. Our parallel algorithms' accuracy is demonstrated \nby showing that the algorithm produces networks with power \nlaw degree distribution. Then we present the strong and \nweak scaling of the algorithms. These algorithms scale very \nwell with the number of processors. We also present ex­\nperimental results showing the impact of the partitioning \nschemes on load balancing and performance of the algo­\nrithms. \n4.1 Experimental Setup \nWe used a high performance computing cluster of 48 Intel \nSandy Bridge nodes. Each node consists of two dual-socket \nIntel Sandy Bridge E5-26 70 2.60GHz 8-core processors \(16 ncores per node inter­\nconnects. For the MPI based implementation of our algo­\nrithms, we used the MPICH2 \(version 1 . 7 which optimized \nfor QLogic InfiniBand cards. \nIn the experiments, we used up to 768 processors. We \nvaried n from 107 to 109 and x from 4 to 10. Each of the \nalgorithms we considered generates the network in the main nmemory, and the runtime does not include the time required \nto write the graph into the disk. \n4.2 Degree Distribution \nThe degree distribution of the graph generated by our \nparallel algorithm is shown in Figure 4 in a log -log scale. \nWe used n = 109 nodes each adding x = 4 new edges with \na total of 4 x 109 edges. \nAs the figure shows, the distribution is heavy tailed, which \nis a distinct feature of the real-world power-law networks. \nThe exponent I of this power-law degree distribution is mea­\nsured to be 2. 7, which supports the fact that for a finite av­\nerage degree of a scale-free network, the exponent I satisfies \n2 < I < 00 [9]. The above results show that our algorithms \nproduce scale-free networks very accurately. \n4.3 Strong Scaling nStrong scaling of a parallel algorithm shows its perfor­\nmance with the increasing number of processors keeping the \nproblem size fixed. Figure 5 shows speedup factors of our \nalgorithms with partitioning schemes uniform consecutive \nFigure 4: The degree distribution \(in log -log scale parallel algorithms. \nThe network is generated with n = 109 and x = 4. \n\(UCP LCP round-robin parti­\ntioning \(RRP Speedup factors are mea­\nsured as 1?/1?, where 1? and 1? are the running time of \na sequential algorithm and the parallel algorithm, respec­\ntively. We have implemented the sequential version of our \nalgorithm in C This sequential implementation outper­\nforms the best available implementation of BA model given \nin NetworkX graph algorithm library [16]. As the sequential \nalgorithm cannot generate more than 6 x 109 edges due to nmemory limitation, we choose n = 109 and x = 6. We varied \nthe number of processors from 1 to 768 for this experiment. \n250 \n200 \ni150 \n[t100 \n50 \n200 400 600 \nNumber of Processors \n_ucp \n........ LCP \n...... RRP nFigure 5: The strong scaling of our parallel algo­\nrithms for the problem size n = 109 and x = 6 nParallelization of network algorithms is notoriously hard. \nFurthermore, we have observed that the problem of gener­\nating a scale-free random network is quite sequential in na­\nture due to the dependencies among the edges. As Figure 5 \nshows, the speedups of our algorithms are increasing almost \nlinearly with the number of processors. Given the sequen­\ntial nature of the problem, our algorithms show very good \nspeedup. Further, the speedup of both LCP and RRP is \nbetter than UCP, due to better load-balancing as discussed \nin Section 4.6 n4.4 Weak Scaling \nThe weak scaling measures the performance of a parallel \nalgorithm when the input size per processor remains con­\nstant. For this experiment, we varied the number of pro­\ncessors from 16 to 768. With the number of processors, the \ninput size is also increased proportionally: for P processors, \na network with 107 P edges is generated. Figure 6 shows the \nweak scaling of our algorithms with the increasing number \nof procesors. \nIn a perfect weak scaling case, the runtime is expected to \nremain constant as the number of processors \(P nFigure 6: Weak scaling of our parallel PA algorithm. \nHowever, in practice, communication among processors in­\ncreases with P, leading to an increase in runtime. Our al­\ngorithm with load balancing schemes LCP and RRP show \nvery good weak scaling, almost constant runtime. Again, \ndue to poor load balancing in UCP scheme, we 


have worse \nweak scaling. \n4.5 Generating Large Networks \nOur main goal for designing this algorithm is to generate \nvery large random networks. Using our algorithm with the \nRRP scheme, we are able to generate a network with 50 \nbillion edges, with n = IE and x = 5. Using 768 processors, \nthe generation of this network takes only 123 seconds. \n4.6 Partitioning and Load Balancing \nN ode partitioning has significant effects on load balanc­\ning and performance of the algorithm. In Section 3.5, we \nhave discussed three partitioning schemes UCP, LCP and \nRRP, and theoretically analyzed them. In this section, we \nexperimentally study these schemes and their effect on the \nperformance of the algorithm. In these experiments, we use \nn = 108 nodes, x 10 edges per node, and 160 processors. \n160 processors are sufficient to demonstrate the behavior and ndifferences of the partitioning schemes. For each of the three \nschemes, we measure the computational load in the proces­\nsors by the number of nodes per processor, the number of \noutgoing messages from the processors and the number of \nincoming messages to the processors. The results are shown \nin Figure 7. \n4.6.1 Node Distribution \nThe node distribution is shown in Figure 7\(a uniformly among the pro­\ncessors, and each processor has about 62,500 nodes. For \nLCP, the number of nodes in the processors are increasing \nlinearly with the rank of the processors. \n4.6.2 Message Distribution \nIn a consecutive partitioning \(UCP and LCP and \nreceives incoming messages from processors i + 1 to P - 1 .  \nFor each node, a processor sends a request message with \nprobability at most 1 - p \(see Eqn. 2 a processor is propor­\ntional to the number of nodes in the processor, as shown \nin Figure 7\(b the UCP and LCP schemes, \nprocessor 0 does not need to send any request messages at \nall. \nFigure 7\(c the number of incoming request mes­\nsages for each processor. It is clear that a lower ranked pro-\nl\nl\nl\nl\nl\nl\nl\nl\nl l l l l l l l l l l l l l l l l l lllllllllllllllllllllllllllllllllllllllllllll\nl\nllll\nl\nl\nl\nlllllllll\nl\nllll\nll\nl\nl\nllll\nl\nlll\nl\nl\nl\nl\nl\nl\nlll\n lll\nl\nl\nlll\nl\nll\nl\nl\nllll\nl\nllll\nl\nl\nl\nlll\nl\nl\nl\nl\nl\nl\nl\nl\nl\nl\nl\nl\nl\nl\nll\nll\nl\nl\nl\nl\nl\nl\nl\nll\nl\nl\nl\nl\nl\nl\nl\nl\n l\nl\nl\nl\nl\nl\nl\nl\nl\nl\nl\nl\nl\nl\nlll\nl\nl\nl\nl\nl\nl\nlll\nl\nl\nl\nl\nl\nl\nl\nl\nl\nl\nl\nl\nl\nl\nl\nlll\nl\nl\nl\nll\nl\nl\nl\nll\nl\nlll\nl\nl\n l\nlllllll\nl\nllll\nl\nlll\nl\nl\nl\nl\nllll lllllllllllll llll l l\nl\nlll l l lll l l l100\n102\n104\n106\n100 101 102 103\nDegree\nN\num\nbe\nr o\nf N\nod\nes\n? 8e+06 \n? 4e+06 \n'" \n"0 '" <fl 0 ? 3e+06 Z - UCP - UCP '5 ::;: W 6e+06 - LCP 2e+06 - LCP -" - RRP Q Rank Processor Rank \n\(a b 0e+07 \n- ucp - ucp ::;: 1i 50 1 00 1 50 \nProcessor Rank Processor Rank \n\(c d and message distribution for the three partitioning schemes: UCP, LCP, RRP \ncessor receives more messages than a higher ranked proces­\nsor in consecutive partitioning \(UCP and LCP scheme, both incoming and out­\ngoing messages are evenly distributed among the processors. \n4.6.3 Total Load Distribution \nBesides sending and receiving messages, for each node, \na processor can incur a constant other computation cost. \nThus, for analysis purposes, we measure the total computa­\ntion load of a processor as the sum of the number of nodes \nin the processor and the number of incoming and outgoing \nmessages. Figure 7\( d shows the total load for the three par­\ntitioning schemes. Scheme RRP distributes the load almost \nperfectly among the processors. Load balancing in the LCP \nscheme is also quite good. On the other hand, UCP scheme ndistribute the load very poorly. These experimental results \nverify our theoretical analysis given in Section 3.5. \n5. CONCLUSION \nWe developed a parallel algorithm to generate massive \nscale-free networks using the preferential attachment model. \nWe analyzed the dependency nature of the problem in detail \nthat led to the development of an efficient parallel algorithm \nfor the problem. Various node partitioning schemes and \ntheir effect on the algorithm were discussed as well. Our \nalgorithm produces networks which strictly follow power-law \ndistribution. The linear scalability of our algorithm enables \nus to produce 50 billion edges in just 123 seconds. It will be \ninteresting to develop scalable parallel algorithms for other \nclasses of random networks in the future. \n6. REFERENCES \n[1] R. Albert, H. Jeong, and A.-L. Barabasi. Error and \nattack tolerance of complex networks. Nature, \n406\(6794  Parallel algorithms for \nevaluating centrality indices in real-world networks. In \nProceedings of the International Conference on \nParallel Processing \(ICPP  Barabasi and R. Albert. Emergence of scaling in \nrandom networks. Science \(New York, N. Y n286\(5439  networks understanding \nlarge-scale social and infrastructure networks: A \nsimulation-based approach. SIAM News, 37\(4  Physical Review E, \n71\(3  


mechanism for power laws in designed \nsystems. Physics Review E, 60\(2  Y. Zhan, and C. Faloutsos. R-MAT: \nA Recursive Model for Graph Mining. In Fourth SIAM \nInternational Conference on Data Mining, Apr. 2004. \n[8] D. P. Chassin and C. Posse. Evaluating North \nAmerican electric grid reliability using the \nBarabasi-Albert network model. Physica A :  Statistical \nMechanics and i ts Applications, 355\(2-4  In Advances in Physics, pages 10 79-1187, \n2002. \n[10] S. N. Dorogovtsev, J. F. F. Mendes, and A. N nSamukhin. Principles of statistical mechanics of \nrandom networks. Dec. 2002. \n[11] P. Erdos and A. Renyi. On the evolution of random \ngraphs. In Publications of the Mathematical Institute \nof the Hungarian Academy of Sciences, pages 1 7-61 ,  \n1960. \n[12] M. Faloutsos, P. Faloutsos, and C. Faloutsos. On \npower-law relationships of the internet topology. \nSIGCOMM Computer Communication Review, \n29\(4 3] O. Frank and D. Strauss. Markov graphs. Journal of \nthe American Statistical Association, 81 \(395 n1986. \n[14] M. Girvan and M. E. J. Newman. Community \nstructure in social and biological networks Proceedings \nof the National Academy of Sciences of the United \nStates of America, 99\(12 2002. \n[15] R. L. Graham, D. E. Knuth, and O. Patashnik. \nConcrete Mathematics: A Foundation for Computer nScience. Addison-Wesley Longman Publishing Co. , \nInc., Boston, MA, USA, 2nd edition, 1994. \n[16] A. A Hagberg, D. A. Schult, and P. J. Swart. \nExploring network structure, dynamics, and function \nusing NetworkX In Proceedings of the 7th Python in \nScience Conference \(SciPy  Raghavan, S. Rajagopalan, \nD. Sivakumar, A. Tomkins, and E. Upfal. Stochastic \nmodels for the web graph. In Proceedings of the 4 1 st \nAnnual Symposium on Foundations of Computer \nScience \(FOCS DC, USA, \n2000. IEEE Computer Society. \n[18] H. Kwak, C. Lee, H. Park, and S. Moon. What is \ntwitter, a social network or a news media? In \nProceedings of the 1 9th International Conference on \nWorld Wide Web \(WWW 591-600, 2010. \n[19] V. Latora and M. Marchiori. Vulnerability and \nprotection of infrastructure networks Physical Review \nE, 71 \(1  USA, 2008. AAI3340652. \n[21] J. Leskovec and E. Horvitz. Planetary-scale views on a \nlarge instant-messaging network. In Proceedings of the \n1 7th International Conference on World Wide Web \n\(WWW  and J. Machta. Parallel dynamics and \ncomputational complexity of network growth models. \nPhysical Review E 71:026 704, Feb 2005. \n[23] J. Miller and A. Hagberg. Efficient generation of \nnetworks with given expected degrees. In Proceedings \nof Algorithms and Models for the Web- Graph \(WA W  Nobari, X.  Lu, P. Karras, and S.  Bressan. Fast \nrandom graph generation. In Proceedings of the 14th nInternational Conference on Extending Database \nTechnology \(EDBT/ICD T  Robins, P. Pattison, Y. Kalish, and D. Lusher. An \nintroduction to exponential random graph \(p social networks social networks. Social Networks, \n29 \(2  P. Faloutsos, and \nC. Faloutsos. Power laws and the as-level internet \ntopology. IEEE/ A CM Transactions on Networking, \n11 \(4  small-world' networks. Nature, 393\(6684  Generation of \nMassive Scale-Free Graphs. Mar. 2010. \nAPPENDIX \nA. PARTITIONING SCHEME \nIn this section, we describe some additional details of the \npartitioning schemes. For a given n nodes and P processors, \nwe create P partitions Vo, V1 , . . .  Vp-1 . The processors are \nlabeled as 0, 1 ,  . . .  P - 1. Partition Vi is processed by pro­\ncessor i. For each scheme, we need to know i of nodes in each partition, and iii Below we show how to calculate them for the three \npartitioning schemes. \nA.1 Uniform Consecutive Partitioning UCP assigned to the par­\ntitions. \nPartition size: The sizes of the partitions are almost equal. \nLet B = I f5 l Then, the size of a partition is either B or \nB -1. \nPartition range: Partition i includes the nodes from iB nto \(i  + I III J . \nA.2 Linear Consecutive Partitioning \(LCP par­\ntitions, and the number of nodes in the partitions are mod­\neled by arithmetic progression a, a+d, a+2d a+\(P- l are partition pal'ame­\nters. At the end of this section, we discuss how a and d are \ndetermined. \nPartition range: Partition i has the nodes from L;:? \(a+ \njd 2a+\(?-1 a + jd i + 1 2a?id 1 .  \nFinding processor rank: Given a node u ,  we need to \nfind the partition i such that u E Vi, Node u satisfies the \nfollowing inequality: \ni-I \nl 2a + \(i - l i + 1 2a id 11 pa­\nrameters a and d are determined using the number of nodes \nn and the number of processors P. Parameter d 


is the slope \nof the straight line y = a + dx, where y represent the num­\nber of nodes in the processor with rank x = i. We calcu­\nlate d by finding two points on this straight line. Putting \ni = 0 and i = P -1 in Eqn 10, we can compute nl and \nnp- l .  Then, the number of nodes in the first processor is \nnl - no = nl and the number of nodes in last processor is \nnp - np- l = n - 1 - np- l .  Hence, we have \nNow, we have \nd = \nn - 1 np- l - nl \nP \n. \nP- l \n2 2a + \(P - l P - l Round Robin Partitioning \n\(12 partitions, the number of nodes is almost \nequal for all partitions. Similar to UCP scheme, the size of \na partition is either I f5 l  or I f5 l  - 1. \nPartition range: For round robin partitioning, partition i \nhas the nodes i, i + P, i + 2P, . . .  i + \(B - l parti­\ntion i is determined by i = u mod P. \nComputation load: The expected number of request mes­\nsages received for node k is \(Hn- 1  - Hk see Lemma 3.4 load \nfor node k is CL\(k Hn- 1  - Hk with partition Vi = {j Ij \nmod P = i} is PL\(i Hn- 1  - Hk + b CL\(k1 k2 i l i2 between the loads of two processors is \nPL\(O P -1 Hn- 1  - Hk + b Hn- 1  - Hk + b kEVp_ l  \nS \(Hn- 1  + b 1 V0 1 - l Vp- 1 1 l i = 0, \nkEVrl kEVp_ l  \nL Hk < L Hk + Hn , \nk EVp_ l  kEVrl \nand thus, PL\(O P -1 log n nOtherwise, \n1 V0 1 - l Vp- 1 1 = 1, \nL Hk S L Hk ,  \nk EVp_ l  k EVo \nand thus, PL\(O P -1 O\(log n 


to stop the progression to bi­\npolar and/or schizophrenia \n Recognizing feelings and emotions as messages from \nthe subconscious mind to the conscious mind \n1 6  \n Eliminate the threat\(s is/are \npresent. \n Eliminate the presence of the harsh chemicals released \nby the FOFR from the body by ensuring a life style that \ndoes not require the FOFR to be utilized. \n Eliminate the presence of all behavior that can be \nidentified as a threat by the FOFR \n Allow the hypothalamus the time to heal from the ndamage caused by the presence of the harsh chemicals \nreleased by the FOFR \n Develop a balanced lifestyle that includes :  \na members \nc including praying out load \(so that the \nears can be used to communicate with the \nsubconscious mind by the conscious mind s exercise including: \nj poultry, vegetables, \nfruits, nuts, simple and complex carbohydrates \nk Medications as prescribed by medical doctors \nm maintaining high self awareness \nn a person ' s self-protection system train the \nphysical body to protect itself. \n0 nINFORMATION NEEDED IN TELEMETRY TO \nPREDICT, PREVENT, TREAT AND CURE MENTAL \nILLNESS \nBefore being launched to space, the rate the biological \ninformation needed to develop a baseline is much higher \nthan after the person arrives in space. This is because the \ntime in preparation may be very low while the time in space \nmay be very long. If the preparation period will be less than \nseveral weeks then sampling frequency should be ncontinuous or as continuous as feasible . If the preparation \nperiod for launch will occur over many weeks then the \nsampling frequency can be reduced to once/hour. \nIn general, the shorter the preparation time for launch the \nhigher the data sampling frequency is required. Preferably, \nprelaunch activity biological diagnostic data should be \nrecorded continuously and the data available for merging \nwith launch and on-orbit data. After a person initially \narrives in space, the sampling frequency should be \ncontinuous or near continuous . After the person has been in \nspace for several weeks, the sampling frequency can be \nreduced to once/hour. If a person is in space for several \nmonths, the sampling frequency can be reduced to as little \nas once/6 hours . \nTable 2. The Sampling Rates for Biological Diagnostic \nData for Processing with Predictive Algorithms to \nPredict Mental Illness in a Predictive Medical Program. \nDuring During After 6 After 12 Launch Weeks in Weeks \nReadiness \nLaunch \nSpace in Space \nContinuous Continuous 1 1 \nor Near or Near S ample/ S ample/ Continuous Continuous \nData Data hour 6 hours \nIn the general, the more samples of data the better defmed \nthe baseline behavior will be and the easier deviations from \nthe baseline will be able to be identified using predictive \nalgorithms.  Table 2 defmes the telemetry measurement \nsamples per measurement needed to predict mental illness \nfrom each of the different phases that data is generated and \nmade available for processing for completing prognostic \nanalysis during space exploration. This infonnation will be \nused to create a baseline behavior for comparison with \nactual data to discriminate between nonnal and abnormal nbehavior. \nTable 3 is a list of biological diagnostic measurements to be \nincluded in CCSDS telemetry available for ground \npersonnel to complete a prognostic analysis used to predict \nmental illness would be occurring in the near future. In the \nevent that the presence of accelerated aging is identified, \nindicating that mental illness will occur, changes to the \nenvironment to the environment can be made to prevent \nmental illness from occurring. \nTable 3 includes 3 5  measurements are from the circadian \nand ultranian rhythms including the value for the least \nsignificant bit \(LSB into telemetry in the CCSDS format and the \nexpected extreme range that the measurement will need to \nmeasure across and not be exceeded. The LSB value is \nimportant because it defines the smallest increment n\(resolution e.g. knowledge the \nmeasurement. The measurement range is important to defme \nthe 5th or 6th degree polynomial used to convert the 8-bit \ndigital words in telemetry back to analog telemetry so the \ntelemetry processing and display system can accurately \ndisplay the biological and engineering diagnostic \ninformation to ground personnel for analysis. \n1 7  \nTable 3 .  Thirty-Five Environmental and Biological \nMeasurements for Prognostic Analysis to be used in a \nPrognostic Analysis to Predict Mental Illness Occurring \nin the Near Future \(?6 months Provided in \nCCSDS Telemetry Rate \nSystolic BP \(Wide rum Hg At least 0 .0 1 rum 50- 1 50 \(Narrow Wide rum Hg Narrow 


Range once/day \(bpm 1 95- 1 05 once/day \(0C Level once/day mcg/dl \nSubjective At least 1 .0 rum 0- 1 00 Alertness once/day \nDesired Liquid At least \n1 .0 ml 0-2 L Intake once/day \nDesired Solid Food At least 1 .0 g 0-5 kg Intake once/day \nRequired Solid At least 1 0 g 0-3 kg Food Intake once/day \nRequired Liquid At least 1 .0 g 0-2 L Intake once/day \nActual Liquid At least 1 .0 g 0-2 L Intake once/day \nActual Solid Food At least 1 .0 g 0-3 kg Intake once/day \nActual Liquid At least 1 .0 g 0-2 L Waste once/day \nActual Solid Waste At least 1 .0 g 0-3 kg once/day \nDuration of At least 5 min 0- 1 500 Sleep/Day once/day \nDuration of At least 5 min 0- 1 500 RestlDay once/day \nDuration of At least Recreational once/day 5 min 0- 1 500 Activities/day \nDuration of At least 5 min 0- 1 500 Work/Day once/day nBiological/ Sample Physiological Rate/Data LSB Measurements to Recording Value Range be Provided in \nCCSDS Telemetry Rate \nDuration of REM At least 1 min 0- 1200 Sleep once/day \nDuration of Non- At least 5 min 0- 1 500 REM Sleep once/day \nFrequency of At least 1 0-40 Urination once/day \nFrequency of At least \nI 0- 1 5 nEmptying Bowel once/day \nDuration Between At least 1 0- 1 500 Urination once/day \nDuration Between At least 1 0-6000 Emptying Bowel once/day \nUnsuccessful At least 1 0-25 Urinations once/day \nUnsuccessful At least 1 0-25 Emptying of Bowel once/day \nDuration of At least Desired Physical once/day 1 min 0-600 Activity/Day \nDuration of At least Required Physical once/day 1 min 0-600 Activity/Day \nDuration of At least 1 min 0-600 Physical Activity once/day \nDuration of No once/day 1 min 0-6000 Activity \nDuration of No once/day 1 min 0-6000 Required Activity \nXVIII. CONCLUSION \nA prognostic and health management \(PHM industry telemetry to collect, store and distribute \nto remote locations the biological, diagnostic information \nfor process for predicting mental illness using with \npredictive algorithms .  The predictive algorithms are often \nproprietary and must be developed for use with aerospace \ntelemetry to compensate for the many shortcomings and \ncomplexities of CCSDS telemetry to be accurate and \nreliable. Our proprietary predictive algorithms were \npioneered on the Air Force's GPS satellites and Atlas launch \nvehicles over 30 years ago. They have also been \nsuccessfully used on other military, NASA and commercial \nsatellites, launch vehicles and missiles to illustrate the \npresence of accelerated aging in normal appearing \nequipment telemetry from completely normal behaving \nequipment. \nA behavior of a person ' s  FOFR can explain the cause ntreatment and the cure for mental illness .  The chemicals \n1 8  \nreleased by the FOFR when activated were developed by the \nFOFR to be in the body an extremely short duration. \nToday's  lifestyle has forced people to remain in threatening \nsituations forcing the presence of the toxic chemicals used \nby the FOFR for self preservation to be present for many \nyears at varying levels. The chemicals released by the FOFR \nand release of chemicals that are created as a result of the \nrelease of adrenaline and cortisol cause accelerated aging on \nthe entire body including all areas of the brain. When the \nFOFR is damaged from accelerated aging, it forces the \nbrain 's  chemistry to be altered by changing the ratios of \nthree main chemicals very, causing mental illness .  All the \nmedications used in mental health treat only the symptoms \nof mental illness and do not cure it. \nThe identification of accelerated aging in biological, \ndiagnostic telemetry can be used by ground personnel to \npredict the mental illness in personnel to be used for deep \nspace missions. The model of the brain' s  FOFR subsystem \nprovides the information necessary for the ground crew to \npredict and thus prevent mental illness from occurring by \nmaking the changes to the person ' s  environment. The PHM \nuses information obtained from a variety of mission phases \nincluding pre-launch readiness, launch and during deep nspace travel to develop baseline behavior from which \nmental illness can predicted so it can be prevented nREFERENCES \n[ 1 ] .  U.S .  Human Spaceflight Plans Committee. 2009. \nSeeking a Human Spaceflight Program Worthy of a Great \nNation. \n[2] . Committee for the Decadal Survey on Biological and \nPhysical Sciences in Space, Space Studies Board, \nAeronautics and Space Engineering Board, Division on \nEngineering and Physical Sciences, National Research \nCouncil, of the National Academies, Recapturing a Future \nfor Space Exploration Life and Physical Sciences Research \nfor a New Era, National Academies Press, Washington D.C.  \nUSA, 20 1 1 located at www.nap.edu. \n[3 ] .  Stern, Y. 2009. Cognitive reserve. Neuropsychologia \n47\( 1 0 n[4] . Kanas, N.,  Sandal, G .M. ,  Boyd, J .E . ,  Gushin, V.I . ,  \nManzey, D. ,  North, R. , Leon, G.R Suedfeld, P . ,  Bishop, S . ,  \nFiedler, E.R., Inoue, N. ,  e t  al. 2009. Psychology and culture \nduring long-duration space missions. Acta Astronautica \n64 :659-677. \n[5] . Institute of Medicine . 200 1 .  Safe Passage: Astronaut \nCare for Exploration Missions. National Academy Press, \nWashington D.C.  \n[6] . "Advances In In-Vivo Imaging Of Serotonergic \nNeurons In Neuropsychiatric Disorders, "  Swen Hesse, \nDepartment of Nuclear Medicine, University Hospital, \nHenryk Barthel, University of Leipzig, Leipzig, Germany, \nJohannes Schwarz, Department of Neurology, University \nHospital, University of Leipzig, Leipzig, Germany, Osama \nSabri Department of Nuclear Medicine, University \nHospital, Ulrich Miiller, Departments of Experimental \nPsychology 


and Psychiatry, University of Cambridge, \nCambridge, United Kingdom, Neuroscience & Bio­\nbehavioral Reviews Volume 29, Issue 7 ,  2005, Page 1 1 19 .  \n[7] . NASA, Washington, D .C .  Available at \nhttp www.nasa.gov/pdf/396 1 1 7main _ HSF _ Cmte ]inalRe \nport.pdf. \n[8] . National Institute of Health National Institute of \nGeneral Medical Sciences at http ://www.nigms.nih.gov/ \nEducation/Factsheet_ CircadianRhythms.htm. \n[9] .Ultradian Rhythms found at \nhttp ://www.springer.comllife+scienceslbookl978- 1 4020-\n83 5 1 -8 .  \n[ 1 0] .  Packet Telemetry, CCSDS 1 02 .0-B-5, Blue Book, \nNovember 2000, CCSDS Secretariat, Program Integration \nDivision \(Code MT Washington, DC 20546, USA \n[ 1 1 ] .  www.newscientist.com/article/mg2 1 1283 1 1 800-a­\nbrief-history-of-the-brain.html?full=true. \n[ 12 ] .  Blackburn, Elisabeth, "Stress Makes You Age Faster," \nhttp ://www.thevisualmd.comihealth _ centers/wellness/mana \nge 30ur _ stress/stress _makes 30U _age_faster \n[ 1 3 ] .  Weber, Ellen, "The Brain on Cortisol," \nhttp ://www.brainleadersandlearners comlgeneral!the-brain­\non-cortisol!. \n[ 14 ] .  The Sleep-Wake Cycle at: \nhttp ://www.nuvigil comlhcp/efficacy _through_the _ day/wha \nUs_SWD.php \n[ 1 5] .  Losik, Len, "Upgrading the Space Flight Factory \nAcceptance Testing for Equipment and Space Vehicle \nDesign, Manufacture, Test and Integration," AIAA Space \n2009 Conference proceedings. \n[ 1 6] .  Losik, Len, "Predicting Hardware Failures and \nEstimating Remaining-Usable-Life from Telemetry," \nSanLen Publishing, Sacramento, CA, 2004, ISBN 978-0-\n976749 1 -9-6. \n 1 7] .  Losik, Len, Wahl, Sheila, Lewis, Owen, "Predicting \nHardware Failures and Estimating Remaining-Usable Life \nfrom Telemetry," Lockheed Martin Space Systems \nCompany, Proceedings from the International Telemetry nConference, Las Vegas, NV, October, 1 996 \n[ 1 8] .  Failure Analysis, "Data-Driven Predictive Algorithms nUsers Guide," V2 .25, Failure Analysis, Capitola CA. \n\( 1 9] .  Circadian Rhythm Laboratory, "Rhythmiccity of the \nHuman Body Vital Signs  at www.auuuu.com. \n[2 1 ]  Losik, Len, "GPS Quarterly Orbital Report," Air Force \nGPS Program Office, CDRL Item AOOA, Air Force \nContract No. F0470 1 -C-0527. \nAUTHOR BIO \nDr. Losik is the President and Chief Technical Officer of \nFailure Analysis and an award winning spacecraft designer, \nwinning awards from Boeing and the u. s.  the Air Force for \nhis technical contributions and leadership that led to the \nfunding of the GPS program by the DoD while he was the \nBoeing GPS Space & Ground Segment Manager. Dr. Losik \n1 9  \nhas over 3 0  years experience in \nthe design, manufacture and \ntest of military, NASA and \ncommercial satellites ground \nstations, missiles and launch \nvehicles as an RF and digital \ndesign engineer, systems \nengineer Engineering \nManager and Director at \ncompanies such as Boeing, Lockheed Martin, British \nAerospace, United Technologies, LORAL and L3 \nCommunications. \nDr. Losik pioneered the use of predictive algorithms to \nmeasure satellite and launch vehicle equipment remaining \nusable life on the Boeing/Air Force 's GPS satellites and nGeneral Dynamics Atlas E/F launch vehicles beginning in \n1980. Dr. Losik also led the integration of the space-based \nIONDS nuclear detonation detection subsystem and the \nGPS L3 UHF crosslink link system into the GPS Block 1 \nqualification vehicle that launched in 1983 and the Boeing \nBlock 2 satellites. \nDr. Losik continued to use predictive algorithms \nsuccessfully on NASA, military and commercial satellites, \nmissiles and launch vehicles to predict spacecraft \nequipment failures. Dr. Losik published the results of his nresearch into the source of the information he used to \npredict equipment failures and published the results of his \nresearch in 2 books and over 25 technical papers at a wide \nvariety of technical conferences. \nAs the NASA/NOAA GOES Next Spacecraft Manager, he \nwas responsible for the design, manufacture and test of 1 0 nNASA/NOAA GOES Next 3-axis stabilized, geostationary \nweather satellites and he completed a prognostic analysis \non the first GOES Next satellite. As the Air Force Titan 34D \nand Boeing IUS solid rocket motor test manager at United \nTechnologies, where he led the 5 to 7 segment upgrade on \nthe Titan 3 SRM. \nAs the Program Manager on the NASA EUVE low earth \norbiting space science program at U. C. Berkeley, Space \nSciences Laboratory, Dr. Losik completed the first \nprognostic analysis on a NASA satellite in 1996. The results \nwere published in conjunction with Lockheed Martin \nengineers from the Advanced Development Center located \nin Sunnyvale CA. \nAs a spacecraft TC&RlTT&C/C&DH subsystem engineer, \nDr. Losik led the design of the first commercial, \ngeostationary C, Ku and Ka-Band communications satellite \ndesigned to have their subsystem equipment usable life \nmeasured prior to launch using predictive algorithms to \nidentifY the equipment that was going to fail prematurely \nearning a commendation from lNTELSAT. He also designed \nthe first commercial Ku-band TC&R subsystem, and led the \ndesign and launch of the first Mil Std 1 750A \nmicroprocessor-based central and distributed satellite \ncommand and control system using a 1553B data bus and \nADA software. \nMost recently, Dr. Losik worked at Force Computers in San \nJose CA. and embedded predicted algorithms in ntelecommunications industry NEBS and ETSl, public \ntelephone switching network \(PTSN ncompanies such as Verizon, A T&T and Alcatel-Lucent to \nmeet industry-wide 99. 999% availability requirement 


nDr. Losik has 30 years experience working with the \nsubconscious as a martial arts instructor whose objective is \nto increase the student 's reaction time of the conscious to \nthat of the fight-or-flight response and eliminating the \nrelease of cortisol and adrenaline by the student 's fight-or \nflight-response. He has also authored several books on \nmeditation, eastern thought, Lao Tzu including the Tao Te \nChing and Confucius nDr. Losik also participates in and supports the National \nAlliance on Mental Illness \(HAMl Depression and \nBi-Polar Support Alliance \(DBSA to expand \nservices and help individuals learn about living with a \nvariety of mental illnesses. Dr. Losik has helped to establish \nNAMI and DBSA self-help groups in Sacramento, Salinas \nand Santa Cruz CA. that offer access to information related \nto mental illness that is usually not available from treating \nphysicians and institutions. \n20 \n 


specified temperature limits. The surface blanket would minimize the temperature variation of the surface, and electric heaters would provide makeup thermal energy  Risk  The thermal subsystem design is a low to moderate risk element, as the hardware used has extensive flight experience. Although this system would be on the surface of the Moon, the environment would be space-like, with the  Figure 6  ALGEP avionics block diagram showing the power and command and data handing  interface. This is a low-power design to enable data collection during lunar night at the remote units. The hub  contains the same avionics package but does not interface with an instrument  13 exception of the infrared heating of the lunar surface therefore the space qualified thermal control hardware could provide thermal control for this mission  Command and Data Handling Subsystem Design Requirements  The ALGEP controller is designed to meet the six year mission lifetime requirement stemming from the science objectives flowing down to the mission requirements and has a technology cutoff of 2016 \(assumes a 2020 launch interface to the science instrument and the UHF radio.  The controller for the hub interfaces to the UHF and S-band radios. Each type of controller would be single string  Design Assumptions  All selected electronic parts for the controller have a path to flight hardware with a technology cutoff of 2016. There would be one ALGEP hub that has a bi-directional S-band link to Earth and a UHF receiver link to the remote instrument units. There would be four ALGEP remote units that have UHF transmitters to link to the ALGEP hub. The controllers would have an operating temperature range: -20  C to 35  C. The total ionizing dose of radiation would be 2 krads for the mission  Description of the Design  Both controller designs would incorporate low-powered Field Programmable Gate Arrays FPGAs devices and I/O drivers.  Portions of the existing MultiMission System Architecture Platform \(MSAP Engineering Unit \(REU IP provide the mission clock and alarm clock logic.  Both the hub and remote unit controllers would capture engineering data regarding temperatures, currents and voltages. Figure 6 provides an overview of the command and data handling and power subsystem architectures.  The remote units would be supplied with 2 Gb of memory and the hub would have 5 Gb of memory  Design Rationale  A low-powered avionics architecture would be achieved by developing a stand-alone controller capable of operating at various power levels. In the lowest power configuration only the mission clock and alarm clock logic would be active. Other logic, analog and I/O functions would be power strobed in the off mode during this very low-power mode. Science and engineering data would be stored in non-volatile memory elements that retain their data in the power-off mode  Risk  The controller requires engineering development to obtain the low-powered mode required for night operation However, it has been designed to incorporate components with flight heritage. A lower frequency oscillator would be used to reduce power  Telecom Subsystem 


Design Requirements  The telecom subsystem is designed to return 3.4 Gb of stored data every 16 days during lunar night in addition to 1.2 Gb of additional data collected each 24 hour period during daylight. This translates into a minimum direct-to-Earth return data rate of ~50 kbps for an 8 hour pass each Earth day for 16 days of sunlight. The subsystem must operate down to a temperature of -20  C and survive non-operational temperature of -50  C. The telecom subsystem would support two-way communications between the hub and the DSN network. It would also support two-way communications between the hub and each of the remote instrument packages on the surface. There would be a minimum 3 dB margin for the direct-to-Earth DTE  Design Assumptions  The telecom subsystem is assumed to be a single string design. The hub would have an S-band radio and antenna for two-way communications with a DSN 34 m ground station. The nominal downlink rate would be 120 kbps and the uplink rate would be 2 kbps. The surface links would be at UHF. The forward link data rate would be 8 kbps and the return rate would be 256 kbps. The maximum range for the surface links would be 100 m. All of the surface links would have line-of-sight between the units. It is assumed that the astronauts would point the Sband antenna towards Earth, within 5  of the center of Earth. This should be relatively easy to do as 5  is a very loose pointing requirement and the uplink/downlink would be marginally affected if the pointing is off by a little more than 5  A signal could be added which would use an uplink from the Earth to give a relative signal power to ensure the pointing requirement is met  Description of the Design  The telecom subsystem would use a commercial off-the-shelf S-band transponder \(L3 CXS-610 has a 5 W power amplifier and an S-band diplexer included This radio is used on GRAIL and a similar unit was used on Genesis. The diplexer would be connected to an S-band low gain antenna \(LGA be a 2-element S-band patch array with a boresight gain of 9 dB. It would be mounted on the end of one solar array on the hub and gimbaled to allow the astronaut to point it to the Earth  The hub communicates with each of the remote instrument units in UHF using a new UHF micro-transceiver. Each UHF microtransceiver would have a radio frequency output power of 50 mW. The UHF transceiver would use a halfduplex system meaning it would transmit and then listen However, it cannot do both at the same time. The UHF links would use a simple UHF monopole antenna, similar to the antennas flown on MER, and mounted on the top of the hub and remote units. The hub could only communicate with one remote unit at a time. Figure 7 shows the hub and remote unit telecom block diagrams  The S-Band telemetry link has a margin of 7.0 dB for a telemetry rate of 120 kbps into a 34 m beam waveguide ground station. The data rate could be increased to reduce 14 playback time. The surface link would have a margin exceeding 20 dB for a return data rate of 256 kbps. This includes a multipath loss allotment of 20 dB. The margin would be large because the range would be so small and all of the links would be line of sight  Design Rationale  Where available, the design of this subsystem uses heritage hardware. The UHF microtransceiver is a radio that is under development for the Mars program. It would be designed for low mass, low 


Mars program. It would be designed for low mass, lowpower and low temperature operation. The S-band antenna would be a smaller, simpler version of the antenna that flew on Deep Impact. Other antenna options would be available The UHF antennas have been flown on previous Mars lander/rover missions. There would be other alternatives for the S-band antenna and the UHF transceiver on the hub could use a larger power amplifier to talk to an orbiting asset as a backup to the S-band radio  Risk  The highest risk items for telecom would be the single string design for each element and six year design lifetime. However, the S-band radio has flight heritage. The UHF radios would be a new design but do not require new technology. They would be an engineering development 8. SYSTEM SUMMARY Mass Equipment List Table 5 shows a summary of the mass and power for each of the subsystems for the remote instrument units. The mass of one remote unit without the specified instrument is 26.6 kg with contingency specified at the subsystem level based on heritage. Table 6 shows a summary of mass and power by subsystem for the hub. The mass of the hub with contingency is 44.9 kg. Table 7 shows a mass summary for the entire package with appropriate contingencies added per the JPL  s Flight Project Practices and Design Principles Design Principles. The package totals 218.2 kg which includes four remote units, five instruments, one hub, and the carrier container\(s Table 5. Mass and power summary for remote units Remote Unit Mass CBE Contingency Total Power Power 14.3 kg 30% 18.5 kg 0.180 W 2 W Night /Day Thermal 2.0 kg 29% 2.5 kg 0 W Telecom UHF 0.2 24% 0.3 kg 2 W 40 W CDS 0.7 kg 30% 0.9 kg 1 W \(1/60th per hour 3 W Structure 3.4 kg 30% 4.4 kg 0 W Total x 1 unit 20.6 kg 29% 26.6 kg Diplexer S-Band Downconverter STDN command data to S/C CDS Pr oc es so r S-Band Exciter 9 dBi S-Band LGA UHF Downconverter Small UHF transceiver command data to S/C CDS 


to S/C CDS Pr oc es so r UHF PA UHF Monopole Command data to C&amp;DH Command dat  to C&amp;DH  Figure 7  Telecom block diagram for the S-band \(top bottom  units would be located on the hub while the remote units only contain a UHF system 15 9. OPERATIONAL SCENARIOS Daytime Operations During the day, the remote units and hub would be fully operational. The remote units would collect data from their instruments as specified by the science team and store it in the controller memory. Table 8 shows the data volume expected from each instrument. After 24 hours have passed the UHF telecom system on the hub is used to poll each of the remote units separately at the designated interval for the stored data. The hub then transmits the data direct-to-Earth using the S-band radio. This requires a maximum of eight hours at 50 kbps each day using the DSN 34 m antennas However, data rates as high as 120 kbps may be achieved reducing the downlink time. The hub has enough memory margin to accumulate data from all the instruments for three Earth days before it must downlink the data Nighttime Operations During nighttime operations, data collection at the remote units would be taking place. The magnetometer and seismometer collect data continuously. However, the seismometer operates at a reduced mode where the sampling rate is reduced to one-half of the daytime rate which has been deemed more than adequate by the science team. The remaining instruments collect data at various intervals that would be conducive to the science team  s current requirements. Telecom events would not be scheduled during the lunar night. The data accumulates in the controller memory over 16 Earth days \(~14 days at an equatorial location would be considered a worse case so two days have been added to be conservative data volume summary for each instrument during a 16 Earth day lunar night. When the sun comes up and the hub and remote units have sufficient power to run the telecom systems the hub polls each remote unit separately at a designated interval similar to operations during the day. The data would then be transmitted to Earth gradually over the next few days using the S-band radio Table 7. Mass summary for total package Unit Mass Contingency Mass + contingency 4 Remote Units 82.4 kg 29% 106.4 kg Hub 35.2 kg 27% 44.9 kg Instruments including cabling 17.3 kg 30% 22.5 kg Carrier Container\(s Total with heritage contingency 153.1 kg 29% 197.5 kg  System contingency  21.4 kg 14 Total Package  43% 218.9 kg Table 8. Instrument data volumes received at the hub over one Earth day in daylight operations Science Instrument Compressed Data Volume Received at Hub 


Volume Received at Hub Mb Seismometer 236 Magnetometer 58 Heat Flow Probe 2 Seismic Sounder 700 Instrument &amp; Hub Engineering Data 6 Total 1002 Hub Memory 5000 Margin 80  Table 6. Mass and power summary for hub Hub/Base Unit Mass CBE Contingency Total Power Power 14.3 kg 30% 18.5 kg 0.180 W 2 W Night /Day Thermal 13.4 kg 28% 17.2 kg 0 W Telecom UHF Telecom S-band 3.4 15% 3.9 kg 2 W 40 W CDS 0.7 kg 30% 0.9 kg 1 W \(1/60th per hour W \(day Structure 3.4 kg 30% 4.4 kg 0 W Total x 1 unit 35.2 kg 27% 44.9 kg 2.38 W avg at night  16 10. SUMMARY AND CONCLUSIONS The ALGEP modular design builds upon lessons learned from Apollo era ALSEP package and technology advances since that time. ALGEP meets the requirements of long lifetime survival while maintaining continuous operation of its instruments during the lunar night which can last up to 16 days at equatorial regions on the Moon. The package would be powered using solar arrays and batteries alone not requiring nuclear sources to supply power or maintain thermal control. This concept is feasible due to its lowpower operational mode at night The modular design and packaging scheme provides flexibility in deployment across all regions of the Moon including the farside pending the availability of an orbital communications asset. The relatively light ALGEP package could be accommodated on astronaut activity support vehicles, providing a method to distribute the packages across the Moon, ultimately gaining a Moon-wide understanding of lunar geophysical properties ACKNOWLEDGEMENTS This work was supported by the NASA Lunar Sortie Science Opportunities Program The work described in this publication was carried out at the Jet Propulsion Laboratory, California Institute of Technology under a contract with the National Aeronautics and Space Administration References herein to any specific commercial product process or service by trade name, trademark, manufacturer 


or otherwise does not constitute or imply its endorsement by the United States Government or the Jet Propulsion Laboratory, California Institute of Technology REFERENCES 1] NRC  Scientific Context for Exploration of the Moon   Washington D.C.: The Nat. Academies Press, 2007 2] Apollo 11 Prelim. Sci. Rept., NASA SP-214, 1969 3] Apollo 12 Prelim. Sci. Rept., NASA SP-235, 1970 4] Apollo 14 Prelim. Sci. Rept., NASA SP-272, 1971 5] Apollo 15 Prelim. Sci. Rept., NASA SP-289, 1972 6] Apollo 16 Prelim. Sci. Rept., NASA SP-315, 1972 7] Apollo 17 Prelim. Sci. Rept., NASA SP-330, 1973 8] ALSEP Termination Report, NASA RP-1036, 1979 9] NRC  New Frontiers in the Solar System: an Integrated Exploration Strategy  Decadal Survey D.C.: The Nat. Academies Press, 2003 10] International Lunar Network Science Definition Team Final Report, 2009 BIOGRAPHY Melissa Jones is a member of the technical staff in the Planetary and Lunar Mission Concepts Group at the Jet Propulsion Laboratory.  Current work includes development of small Lunar lander concepts and instrument packages to deploy on the Moon,  Report Manager for the Titan Saturn System Mission Outer Planets Flagship Mission study, and staffing various concept studies as a systems engineer on Team X, JPL  s mission design team.  Melissa graduated from Loras College with a B.S. in Chemistry and a Ph.D. in Space and Planetary Science from the University of Arkansas  Linda Herrell has a BA in math/computer science/languages \(University of Texas fluids and heat transfer \(City College of New York addition to analytical work in computer science and thermal and structural analysis, she has worked as both a payload \(instrument Earth orbiting \(Hubble Space Telescope, Earth Observing System \(EOS Cassini as Proposal Manager for several NASA science missions She currently serves as the Program Architect for NASA's New Millennium Program    Table 9. Instrument data volumes generated at the hub after 16 Earth day lunar night Science Instrument Compressed Data Volume Received at Hub Mb Seismometer 1980 Magnetometer 920 Heat Flow Probe 5 Seismic Sounder 0 Instrument &amp; Hub Engineering Data 72 Total 2977 Hub Memory 5000 Margin 40  17 Bruce Banerdt has been a research geophysicist at the California Institute of Technology's Jet Propulsion Laboratory since 1977, where he does research in planetary geophysics and instrument development for flight projects. He has been on science teams for numerous planetary missions 


on science teams for numerous planetary missions including Magellan, Mars Observer, Mars Global Surveyor and Rosetta. He was the US Project Scientist for the international Mars NetLander mission, for which he was also principal investigator of the Short-Period Seismometer experiment, and is currently the Project Scientist for the Mars Exploration Rovers. He led the Geophysics and Planetary Geology group at JPL from 1993-2005, and is the JPL Discipline Program Manager for Planetary Geosciences. He has held several visiting appointments at the Institut de Physique du Globe de Paris. He has a BS in physics and a PhD in geophysics from the University of Southern California  David Hansen is a member of the technical staff in the Communications Systems and Operations Group at the Jet Propulsion Laboratory. Current work includes the development of the telecom subsystem for the Juno project. David received a B.S. in Electrical Engineering from Cornell University and an M.S. in Electrical Engineering from Stanford University  Robert Miyake is a member of the technical staff in the Mission and Technology Development Group at the Jet Propulsion Laboratory. Current work includes the development of thermal control subsystems for interplanetary flagship missions to Jupiter and Saturn missions to Mars and the Earth Moon, and is the lead Thermal Chair for the Advanced Project Design Team Robert graduated with a B. S. from San Jose State University, with extensive graduate studies at UCLA University of Washington, and University of Santa Clara  Steve Kondos is a consultant to the Structures and Mechanisms group at the Jet Propulsion Laboratory. He currently is generating the mechanical concepts for small Lunar Landers and Lunar Science Instrument packages in support of various Lunar mission initiatives. He also provides conceptual design, mass and cost estimating support for various Team X studies as the lead for the Mechanical Subsystem Chair. Steve is also involved with various other studies and proposals and provides mentoring to several young mechanical and system engineers. He graduated with a B.S. in Mechanical Engineering from the University of California, Davis and has 28 years of experience in the aerospace field ranging from detail part design to system of systems architecture development. He has worked both in industry and in government in defense, intelligence commercial and civil activities that range from ocean and land based systems to airborne and space systems. Steve has received various NASA, Air Force, Department of Defense and other agency awards for his work on such projects as the NASA Solar Array Flight Experiment, Talon Gold, MILSTAR, Iridium, SBIRS, Mars Exploration Rovers ATFLIR, Glory Aerosol Polarimeter System and several Restricted Programs  Paul Timmerman is a senior member of technical staff in the Power Systems Group at the Jet Propulsion Laboratory Twenty-five years of experience in spacecraft design including 22 at JPL, over 250 studies in Team-X, and numerous proposals. Current assignments include a wide variety of planetary mission concepts, covering all targets within the solar system and all mission classes. Paul graduated from Loras College with a B.S. in Chemistry in 1983  Vincent Randolph is a senior engineer in the Advanced Computer Systems and 


the Advanced Computer Systems and Technologies Group at the Jet Propulsion Laboratory. Current work includes generating Command and Data Handling Subsystem conceptual designs for various proposals and Team X.  He also supports Articulation Control and Electronics design activities for the Advanced Mirror Development project. Vincent graduated from the University of California at Berkeley with a B.S. in Electrical Engineering 18  pre></body></html 


i models into time and covariate dependent dynamic counterparts  ii models and reliability analysis in a more realistic manner  iii level  whether or not functional components \(loyal generals diagnose correctly and take proper actions such as fault mask of failed components \(traitors asymmetric  iv survivability analysis. Evolutionary game modeling can derive sustainable or survivable strategies \(mapped from the ESS in EGT such as node failures such as security compromise level modeling in the so-called three-layer survivability analysis developed in Ma \(2008a this article  v offer an integrated architecture that unite reliability survivability, and fault tolerance, and the modeling approaches with survival analysis and evolutionary game theory implement this architecture. Finally, the dynamic hybrid fault models, when utilized to describe the survival of players in EGT, enhance the EGT's flexibility and power in modeling the survival and behaviors of the game players which should also be applicable to other problem domains where EGT is applicable  5. OPERATIONAL LEVEL MODELING AND DECISION-MAKING  5.1. Highlights of the Tactical and Strategic Levels  Let's first summarize what are obtainable at both tactical and strategic levels. The results at both tactical and strategic levels are precisely obtainable either via analytic or simulation optimization. With the term precisely, we mean that there is no need to assign subjective probabilities to UUUR events. This is possible because we try to assess the consequences of UUUR events \(tactical level ESS strategies \(strategic level time prediction of survivability. The following is a list of specific points. I use an assumed Wireless Sensor Network WSN  i of UUUR events: \(a actions which can be treated as censored events; \(b Cont' of Box 4.2 It can be shown that the replicator differential equations are equivalent to the classical population dynamics models such as Logistic differential equation and LotkaVolterra equation \(e.g., Kot 2001 Logistic equation, or the limited per capital growth rate is similar to the change rate of the fitness  xfxfi which can be represented with the hazard function or survivor functions introduced in the previous section on survival analysis.  This essentially connects the previous survival analysis modeling for lifetime and reliability with the EGT modeling. However, EGT provides additional modeling power beyond population dynamics or survival analysis approaches introduced in the previous section. The introduction of evolutionary theory makes the games played by a population evolvable. In other words, each player \(individual 


other words, each player \(individual agent and players interact with each other to evolve an optimized system Box 4.3. Additional Comments on DHF Models  The above introduced EGT models are very general given they are the system of ordinary differential equations. Furthermore, the choice of fitness function f\(x complexity to the differential equation system.  The system can easily be turned into system of nonlinear differential equations. The analytical solution to the models may be unobtainable when nonlinear differential equations are involved and simulation and/or numerical computation are often required  In the EGT modeling, Byzantine generals are the game players, and hybrid fault models are conveniently expressed as the strategies of players; the players may have different failure or communication behaviors Furthermore, players can be further divided into groups or subpopulations to formulate more complex network organizations. In the EGT modeling, reliability can be represented as the payoff \(fitness, the native term in EGT of the game. Because reliability function can be replaced by survivor function, survival analysis is seamlessly integrated into the EGT modeling. That is, let Byzantine generals play evolutionary games and their fitness reliability function  The evolutionary stable strategy \(ESS counterpart of Nash equilibrium in traditional games ESS corresponds to sustainable strategies, which are resistant to both internal mutations \(such as turning into treason generals or nodes such as security compromises represent survivable strategies and survivability in survivability analysis. Therefore, dynamic hybrid fault models, after the extension with EGT modeling, can be used to study both reliability and survivability 13 risks such as competing risks which can be described with CRA; \(c captured with the shard frailty.  We believe that these UUUR events are sufficiently general to capture the major factors/events in reliability, security and survivability whose occurrence probabilities are hard or impossible to obtain  Instead of trying to obtain the probabilities for these events which are infeasible in most occasions, we focus on analyzing the consequences of the events.  With survival analysis, it is possible to analyze the effects of these types of events on survivor functions. In addition, spatial frailty modeling can be utilized to capture the heterogeneity of risks in space, or the spatial distribution of risks \(Ma 2008a d UUUR events introduced previously. These approaches and models that deal with the effects of UUUR events form the core of tactical level modeling  To take advantage of the tactical level modeling approaches it is obviously necessary to stick to the survivor functions or hazard functions models. In other words, survival analysis can deal with UUUR events and offer every features reliability function provides, but reliability function cannot deal with UUUR events although survivor function and reliability function have the exactly same mathematical definition. This is the junction that survival analysis plays critical role in survivability analysis at tactical level. However, we 


recognize that it is infeasible to get a simple metric for survivability similar to reliability with tactical level modeling alone. Actually, up to this point, we are still vague for the measurement of survivability or a metric for survivability. We have not answered the question: what is our metric for survivability? We think that a precise or rigorous definition of survivability at tactical level is not feasible, due to the same reason we cited previously  the inability to determine the probabilities of UUUR events However, we consider it is very helpful to define a work definition for survivability at the tactical level  We therefore define the survivability at tactical level as a metric, Su\(t t function or reliability function with UUUR events considered. In the framework of three-layer survivability analysis, this metric is what we mean with the term survivability. The "metric" per se is not the focus of the three-layer survivability analysis. It is not very informative without the supports from the next two levels  strategic and operational models.  However, it is obvious that this metric sets a foundation to incorporate UUUR effects in the modeling at the next two levels  Due to the inadequacy of tactical level modeling, we proposed the next level approach  strategic level modeling for survivability. As expected, the tactical level is one foundation of strategic level modeling ii objectives: \(a affect survivability which survival analysis alone is not adequate to deal with; \(b survivability at tactical level is necessary but not sufficient for modeling survivability, we need to define what is meant with the term survivability at strategic level  With regard to \(a behaviors or modes which have very different consequences. These failure behaviors can be captured with hybrid fault models. However, the existing hybrid fault models in fault tolerance field are not adequate for applying to survivability analysis. There are two issues involved: one is the lack of real time notion in the constraints for hybrid fault models \(e.g., N&gt;3m+1 for Byzantine Generals problem synthesize the models after the real-time notions are introduced. The solution we proposed for the first issue is the dynamic hybrid fault models, which integrate survivor functions with traditional hybrid fault models. The solution we proposed for the second issue is the introduction of EGT modeling  With regard to \(b modeling our problem at strategic level, EGT modeling is essentially a powerful optimization algorithm.  One of the most important results from EGT modeling is the so-called evolutionary stable strategies \(ESS We map the ESS in EGT to survivable strategies in survivability analysis.   Therefore, at the strategic level, our work definition for survivability refers to the survivable strategies or sustainable strategies in the native term of EGT, which can be quantified with ESS  In addition to integrating dynamic hybrid fault models another advantage for introducing EGT modeling at strategic level is the flexibility for incorporating other node behaviors \(such as cooperative vs. non-cooperative those behaviors specified in standard hybrid fault models, as well as anthropocentric factors such as costs constraints  Without UUUR events, both tactical and strategic level 


Without UUUR events, both tactical and strategic level models default to regular reliability models. This implies that, in the absence of UUUR events, reliable strategies are sustainable or survivable.  This also implies that three-layer survivability analysis defaults to reliability analysis however, the three-layer approach does offer some significant advantages over traditional reliability analysis, as discussed in previous sections. Nevertheless, when UUUR events exist, reliable strategies and survivable strategies are different. This necessitates the next operational level modeling  5.2. Operational Level Modeling and Decision-Making  When UUUR events are involved, we cannot make real time predictions of survivability at tactical and strategic levels This implies that the implementations of survivable 14 strategies need additional measures that we develop in this section.  Box 5.1 explains the ideas involved with possibly the simplest example  Figure 4 is a diagram showing a simplified relationship between action threshold survivability \(TS survivability \(ES view since both TS and ES are multidimensional and dynamic in practice. Therefore, the sole purpose of the diagram is to illustrate the major concepts discussed above The blue curve is the survivability when survivable strategies specified by ESS are implemented at some point before time s.  The system is then guaranteed to hold survivability above ES. In contrary, if no ESS implemented before time s, then the system quickly falls below to the survivable level at around 40 time units  T i m e 0 1 0 2 0 3 0 4 0 5 0 6 0 7 0 8 0 9 0 1 0 0 Su rv iv ab ili ty M et ric S u t 0 . 0 0 . 1 0 . 2 0 . 3 0 . 4 0 . 5 0 . 6 0 . 7 0 . 8 0 . 9 1 . 0 E S S  i s  I m p lm e n t e d N o  E S S  is  I m p lm e n t e d ts E S T S  Figure 4. A Diagram Showing the Relationship Between TS and ES, as well as timing of s and t, with s &lt; t  6. SUMMARY  The previous sections discussed the major building blocks 


The previous sections discussed the major building blocks for the new life-system inspired PHM architecture. This section first identifies a few minor aspects that have not been discussed explicitly but are necessary for the implementation of the architecture, and then we summarize the major building blocks in a diagram  6.1. Missing Components and Links  Optimization Objectives  Lifetime, reliability, fault tolerance, and survivability, especially the latter two, are application dependent. Generally, the optimization of reliability and survivability are consistent; in that maximization of reliability also implies maximization of survivability. However, when application detail is considered, optimization of lifetime is not necessarily consistent with the optimization of reliability. Consider the case of the monitoring sensor network as an example. The network reliability is also dependent on connectivity coverage, etc, besides network lifetime. What may be further complicated is the time factor. All of the network metrics are time-dependent. A paradoxical situation between lifetime and reliability could be that nodes never 'sleep                                                   


          Box 5.1 Operational Level Modeling  Assuming that the ESS solution for a monitoring sensor network can be expressed with the following simple algebraic conditions: survivability metric at tactical level SU = 0.7, Router-Nodes in the WSN &gt; 10%, Selfish Nodes &lt; 40%. Even with this extremely simplified scenario, the ESS strategies cannot be implemented because we do not know when the actions should be taken to warrant a sustainable system.  These conditions lack a correlation with real time  The inability to implement ESS is rooted in our inability to assign definite probabilities to UUUR events, which implies that we cannot predict when something sufficiently bad will jeopardize the system survivability What we need at the operational level is a scheme to ensure ESS strategy is in place in advance  The fundamental idea we use to implement the ESS strategy is to hedge against the UUUR events. The similar idea has been used in financial engineering and also in integrated pest management in entomology. This can be implemented with the following scheme  Let us define a pair of survivability metrics: one is the expected survivability \(ES threshold survivability or simply threshold survivability \(TS ES is equivalent to the survivability metric at tactical level. ES corresponds to ESS at strategic level, but they are not equivalent since ESS is strategy and ES is survivability. TS is the survivability metric value \(at tactical level and TS can be obtained from strategic level models. For example, TS = SU\(s t condition for the implementation of ESS. In other words, the implementation of strategies that ensures TS at time s will guarantee the future ES level at time t.  To make the implementation more reliable and convenient multiple dynamic TSs can be computed at time s1, s2 sk, with si &lt; t for all i.  These TS at times s1, s2, ..., sk should be monitored by some evaluation systems  Unlike tactical and strategic levels, the operational level modeling is approximate. The term "approximate means that we cannot predict the real time survivability or we do not know the exact time an action should be taken. Instead, the action is triggered when the monitored survivability metric SU\(r survivability \(TS scheme of TS and ES, we ensure the ES by taking preventative actions \(prescribed by ESS and triggered by the TS consequences of UUUR events  Figure 4 is a diagram showing the above concepts and the decision-making process involved 15 This wakefulness \(never 'sleep short period but at the expense of network lifetime. Of course, when the network is running out of lifetime, network reliability ultimately crashes. This example reminds us that 


reliability ultimately crashes. This example reminds us that multi-objective optimization should be the norm rather than exception  Constraints and Extensions  Many application specific factors and constraints are ignored in this article. For example, we mentioned about spatial heterogeneity of environment, but never present a mathematical description The spatial heterogeneity can be modeled with the so-called spatial frailty in multivariate survival analysis \(Ma 2008a  Evolutionary Algorithm  Evolutionary game modeling when implemented in simulation, can be conveniently implemented with an algorithm similar to Genetic Algorithms \(GA ESS in the evolutionary game model with simulation is very similar to GA. Dynamic populations, in which population size varies from generation to generation \(Ma &amp; Krings 2008f of node failures. Another issue to be addressed is the synchronous vs. asynchronous updating when topology is considered in the simulation. This update scheme can have profound influences on the results of the simulation. Results from cellular automata computing should be very useful for getting insights on the update issue  6.2. Summary and Perspective  To recapture the major points of the article, let us revisit Figure 3, which summarizes the principal modules of the proposed life-system inspired PHM architecture. The main inspiration from life systems is the notion of individuals and their assemblage, the population. Population is an emergent entity at the next level and it has emergent properties which we are often more concerned with. Survival analysis, which has become a de facto standard in biomedicine, is particularly suitable for modeling population, although it is equally appropriate at individual level. Therefore, survival analysis \(including competing risks analysis and multivariate survival analysis comprehensively in the context of PHM in a series of four papers presented at IEEE AeroSpace 2008 \(Ma &amp; Krings 2008a, b, c, &amp; d proposed architecture. Survival analysis constitutes the major mathematical tools for analyzing lifetime and reliability, and also forms the tactical level of the three-layer survivability analysis  Besides lifetime and reliability, two other major modules in Figure 3 are fault tolerance and survivability. To integrate fault tolerance into the PHM system, Dynamic Hybrid Fault DHF 2008e, Ma 2008a make real-time prediction of reliability more realistic and make real-time prediction of fault tolerance level possible DHF models also unite lifetime, reliability and fault tolerance under a unified modeling framework that consists of survival analysis and evolutionary game theory modeling  DHG models also form the partial foundation, or strategic level, for the three-layer survivability analysis. At the strategic level, the Evolutionary Stable Strategies \(ESS which is mapped to survivable or sustainable strategies, can be obtained from the evolutionary game theory based DHF models. When there is not any UUUR event involved reliability and survivability are consistent, and reliable strategies are survivable. In this case, the strategic level modeling up to this point is sufficient for the whole PHM system modeling, and there is no need for the next level  operational level modeling  When there are UUUR events in a PHM system, the 


When there are UUUR events in a PHM system, the inability to determine the occurrence probabilities of UUUR events makes the operational level modeling necessary Then the principle of hedging must be utilized to deal with the "hanging" uncertainty from UUUR events. In this case reliability strategies are not necessarily survivable strategies At the operational level modeling, a duo of survivability metrics, expected survivability \(ES survivability \(TS the survivable strategies \(ESS level are promptly implemented based on the decisionmaking rules specified with the duo of survivability metrics then the PHM system should be able to endure the consequences of potentially catastrophic UUUR events. Of course, to endure such catastrophic events, the cost may be prohibitively high, but the PHM system will, at least, warn decision-makers for the potentially huge costs.  It might be cheap to just let it fail  Figure 3 also shows several other modules, such as security safety, application systems \(such as Automatic Logistics CBM+, RCM, Life cycle cost management, Real-time warning and alert systems architectures, but we do not discuss in this paper. Generally the new architecture should be fully compatible with existing ones in incorporating these additional modules. One point we stressed is that PHM system can be an ideal place to enforce security policies. Enforcing security policies can be mandatory for PHM systems that demand high security and safety such as weapon systems or nuclear plant facilities.  This is because maintenance, even without human-initiated security breaches, can break the security policies if the maintenance is not planned and performed properly  In perspective, although I did not discuss software issues in this paper, the introduced approaches and models should provide sufficient tools for modeling software reliability and survivability with some additional extension. Given the critical importance of software to modern PHM systems, we present the following discussion on the potential extension to software domain. Specifically, two points should be noted: \(1 architecture to software should be a metric which can 16 replace the time notion in software reliability; I suggest that the Kolmogorov complexity \(e.g., Li and Vitanyi 1997 be a promising candidate \(Ma 2008a change is because software does not wear and calendar time for software reliability usually does not make much sense 2 software reliability modeling.  Extending to general survivability analysis is not a problem either. In this article I implicitly assume that reliability and survivability are positively correlated, or reliability is the foundation of survivability. This positive correlation does not have to be the case. A simplified example that illustrates this point is the 'limit order' in online stock trading, in which limit order can be used in either direction: that stock price is rising or falling.  The solution to allow negative or uncorrelated relationships between reliability and survivability are very straightforward, and the solutions are already identified in previous discussions. Specifically, multiple G-functions and multi-stage G-functions by Vincent and Brown \(2005 very feasible solution, because lifetime, reliability and survivability may simply be represented with multiple Gfunctions. Another potential solution is the accommodation of the potential conflicts between reliability and survivability with multi-objective GA algorithms, which I previously suggested to be used as updating algorithms in the optimization of evolutionary games  


 The integration of dynamic hybrid fault models with evolutionary game modeling allows one to incorporate more realistic and detailed failure \(or survival individual players in an evolutionary game. This is because dynamic hybrid fault models are supported by survival analysis modeling, e.g., time and covariate dependent hazard or survivor functions for individual players. If necessary, more complex survival analysis modeling including competing risks analysis and multivariate survival analysis, can be introduced.  Therefore, any field to which evolutionary game theory is applicable may benefit from the increased flexibility in modeling individual players.  Two particularly interesting fields are system biology and ecological modeling.  In the former field, dynamic hybrid fault models may find important applications in the study of biological networks \(such as gene, molecular, and cell networks 2008g conjecture that explains the redundancy in the universal genetic code with Byzantine general algorithm. In addition they conducted a comparative analysis of bio-robustness with engineering fault tolerance, for example, the strong similarity between network survivability and ecological stability \(Ma &amp; Krings 2008g survivability analysis can be applied for the study of survivals or extinctions of biological species under global climate changes \(Ma 2008b  In this paper, I have to ignore much of the details related to the implementation issues to present the overall architecture and major approaches clearly and concisely. To deal with the potential devils in the implementation details, a well funded research and development team is necessary to take advantages of the ideas presented here. On the positive side I do see the great potential to build an enterprise PHM software product if there is sufficient resource to complete the implementation. Given the enormous complexity associated with the PHM practice in modern engineering fields, it is nearly impossible to realize or even demonstrate the benefits of the architecture without the software implementation. The critical importance of PHM to mission critical engineering fields such as aerospace engineering, in turn, dictates the great value of such kind software product  6.3. Beyond PHM  Finally, I would like to raise two questions that may be interested in by researchers and engineers beyond PHM community. The first question is: what can PHM offer to other engineering disciplines? The second question is: what kinds of engineering fields benefit most from PHM? Here, I use the term PHM with the definition proposed by IEEE which is quoted in the introduction section of the paper  As to the first question, I suggest software engineering and survivability analysis are two fields where PHM can play significant roles. With software engineering, I refer to applying PHM principles and approaches for dealing with software reliability, quality assurance, and even software process management, rather than building PHM software mentioned in the previous subsection. For survivability analysis, borrowing the procedures and practices of PHM should be particularly helpful for expanding its role beyond its originating domain \(network systems that control critical national infrastructures is a strong advocate for the expansion of survivability analysis to PHM. Therefore, the interaction between PHM and survivability analysis should be bidirectional. Indeed, I see the close relationships between PHM, software engineering, and survivability as well-justified because they all share some critical issues including reliability survivability, security, and dependability  


 The answer to the second question is much more elusive and I cannot present a full answer without comparative analysis of several engineering fields where PHM has been actively practiced. Of course, it is obvious that fields which demand mission critical reliability and dependability also demand better PHM solutions. One additional observation I would like to make is that PHM seems to play more crucial roles for engineering practices that depend on the systematic records of 'historical' data, such as reliability data in airplane engine manufacturing, rather than on the information from ad hoc events.  This may explain the critical importance of PHM in aerospace engineering particularly in commercial airplane design and manufacturing.  For example, comparing the tasks to design and build a space shuttle vs. to design and manufacture commercial jumbo jets, PHM should be more critical in the latter task  17    Figure 2. States of a monitoring sensor node and its failure modes \(after Ma &amp; Krings 2008e     Figure 3. Core Modules and their Relationships of the Life System Inspired PHM Architecture    REFERENCES  Adamides, E. D., Y. A. Stamboulis, A. G. Varelis. 2004 Model-Based Assessment of Military Aircraft Engine Maintenance Systems Model-Based Assessment of Military Aircraft Engine Maintenance Systems. Journal of the Operational Research Society, Vol. 55, No. 9:957-967  Anderson, R. 2001. Security Engineering. Wiley  Anderson, R. 2008. Security Engineering. 2nd ed. Wiley  Bird, J. W., Hess, A. 2007.   Propulsion System Prognostics R&amp;D Through the Technical Cooperation Program Aerospace Conference, 2007 IEEE, 3-10 March 2007, 8pp  Bock, J. R., Brotherton, T., W., Gass, D. 2005. Ontogenetic reasoning system for autonomic logistics. Aerospace Conference, 2005 IEEE 5-12 March 2005.Digital Object Identifier 10.1109/AERO.2005.1559677  Brotherton, T., P. Grabill, D. Wroblewski, R. Friend, B Sotomayer, and J. Berry. 2002. A Testbed for Data Fusion for Engine Diagnostics and Prognostics. Proceedings of the 2002 IEEE Aerospace Conference  Brotherton, T.; Grabill, P.; Friend, R.; Sotomayer, B.; Berry J. 2003. A testbed for data fusion for helicopter diagnostics and prognostics. Aerospace Conference, 2003. Proceedings 2003 IEEE  Brown, E. R., N. N. McCollom, E-E. Moore, A. Hess. 2007 Prognostics and Health Management A Data-Driven Approach to Supporting the F-35 Lightning II. 2007 IEEE AeroSpace Conference  Byington, C.S.; Watson, M.J.; Bharadwaj, S.P. 2008 Automated Health Management for Gas Turbine Engine Accessory System Components. Aerospace Conference 2008 IEEE, DOI:10.1109/AERO.2008.4526610 


2008 IEEE, DOI:10.1109/AERO.2008.4526610 Environment Covariates &amp; Spatial Frailty Applications: AL; Life Cycle Mgmt; Real-Time Alerts CBM+, RCM, TLCSM; Secret Sharing and Shared Control 18 Chen, Y. Q., S. Cheng. 2005. Semi-parametric regression analysis of mean residual life with censored survival data Biometrika \(2005  29  Commenges, D. 1999. Multi-state models in Epidemiology Lifetime Data Analysis. 5:315-327  Cook, J. 2004. Contrasting Approaches to the Validation of Helicopter HUMS  A Military User  s Perspective Aerospace Conference, 2004 IEEE  Cook, J. 2007. Reducing Military Helicopter Maintenance Through Prognostics. Aerospace Conference, 2007 IEEE Digital Object Identifier 10.1109/AERO.2007.352830  Cox, D. R. 1972. Regression models and life tables.  J. R Stat. Soc. Ser. B. 34:184-220  Crowder, M. J.  2001. Classical Competing Risks. Chapman amp; Hall. 200pp  David, H. A. &amp; M. L. Moeschberger. 1978. The theory of competing risks. Macmillan Publishing, 103pp  Ellison, E., L. Linger, and M. Longstaff. 1997.  Survivable Network Systems: An Emerging Discipline, Carnegie Mellon, SEI, Technical Report CMU/SEI-97-TR-013  Hanski, I. 1999. Metapopulation Ecology. Oxford University Press  Hallam, T. G. and S. A. Levin. 1986. Mathematical Ecology. Biomathematics. Volume 17. Springer. 457pp  Hess, A., Fila, L. 2002.  The Joint Strike Fighter \(JSF concept: Potential impact on aging aircraft problems Aerospace Conference Proceedings, 2002. IEEE. Digital Object Identifier: 10.1109/AERO.2002.1036144  Hess, A., Calvello, G., T. Dabney. 2004. PHM a Key Enabler for the JSF Autonomic Logistics Support Concept. Aerospace Conference Proceedings, 2004. IEEE  Hofbauer, J. and K. Sigmund. 1998. Evolutionary Games and Population Dynamics. Cambridge University Press 323pp  Hougaard, P. 2000. Analysis of Multivariate Survival Data Springer. 560pp  Huzurbazar, A. V. 2006. Flow-graph model for multi-state time-to-event data. Wiley InterScience  Ibrahim, J. G., M. H. Chen and D. Sinha. 2005. Bayesian Survival Analysis. Springer. 481pp  Kacprzynski, G. J., Roemer, M. J., Hess, A. J. 2002. Health management system design: Development, simulation and cost/benefit optimization. IEEE Aerospace Conference Proceedings, 2002. DOI:10.1109/AERO.2002.1036148  Kalbfleisch, J. D., and R. L. Prentice, 2002. The Statistical Analysis of Failure Time Data. Wiley-InterScience, 2nd ed  Kalgren, P. W., Byington, C. S.   Roemer, M. J.  2006 Defining PHM, A Lexical Evolution of Maintenance and Logistics. Systems Readiness Technology Conference 


Logistics. Systems Readiness Technology Conference IEEE. DOI: 10.1109/AUTEST.2006.283685  Keller, K.; Baldwin, A.; Ofsthun, S.; Swearingen, K.; Vian J.; Wilmering, T.; Williams, Z. 2007. Health Management Engineering Environment and Open Integration Platform Aerospace Conference, 2007 IEEE, Digital Object Identifier 10.1109/AERO.2007.352919  Keller, K.; Sheahan, J.; Roach, J.; Casey, L.; Davis, G Flynn, F.; Perkinson, J.; Prestero, M. 2008. Power Conversion Prognostic Controller Implementation for Aeronautical Motor Drives. Aerospace Conference, 2008 IEEE. DOI:10.1109/AERO.2008.4526630  Klein, J. P. and M. L. Moeschberger. 2003. Survival analysis techniques for censored and truncated data Springer  Kingsland, S. E. 1995. Modeling Nature: Episodes in the History of Population Ecology. 2nd ed., University of Chicago Press, 315pp  Kot, M. 2001. Elements of Mathematical Ecology Cambridge University Press. 453pp  Krings, A. W. and Z. S. Ma. 2006. Fault-Models in Wireless Communication: Towards Survivable Ad Hoc Networks Military Communications Conference, 23-25 October, 7 pages, 2006  Lamport, L., R. Shostak and M. Pease. 1982. The Byzantine Generals Problem. ACM Transactions on Programming Languages and Systems, 4\(3  Lawless, J. F. 2003. Statistical models and methods for lifetime data. John Wiley &amp; Sons. 2nd ed  Line, J. K., Iyer, A. 2007. Electronic Prognostics Through Advanced Modeling Techniques. Aerospace Conference 2007 IEEE. DOI:10.1109/AERO.2007.352906  Lisnianski, A., Levitin, G. 2003. Multi-State System Reliability: Assessment, Optimization and Applications World Scientific  Liu, Y., and K. S. Trivedi. 2006. Survivability Quantification: The Analytical Modeling Approach, Int. J of Performability Engineering, Vol. 2, No 1, pp. 29-44  19 Luchinsky, D.G.; Osipov, V.V.; Smelyanskiy, V.N Timucin, D.A.; Uckun, S. 2008. Model Based IVHM System for the Solid Rocket Booster. Aerospace Conference, 2008 IEEE.DOI:10.1109/AERO.2008.4526644  Lynch, N. 1997. Distributed Algorithms. Morgan Kaufmann Press  Ma, Z. S. 1997. Demography and survival analysis of Russian wheat aphid. Ph.D. dissertation, Univ. of Idaho 306pp  Ma, Z. S. 2008a. New Approaches to Reliability and Survivability with Survival Analysis, Dynamic Hybrid Fault Models, and Evolutionary  Game Theory. Ph.D. dissertation Univ. of Idaho. 177pp  Ma, Z. S. 2008b. Survivability Analysis of Biological Species under Global Climate Changes: A New Distributed and Agent-based Simulation Architecture with Survival Analysis and Evolutionary Game Theory. The Sixth 


International Conference on Ecological Informatics. Dec 25, 2008. Cancun, Mexico  Ma, Z. S. and E. J. Bechinski. 2008. A Survival-Analysis based  Simulation Model for Russian Wheat Aphid Population Dynamics. Ecological Modeling, 216\(2 332  Ma, Z. S. and A. W. Krings. 2008a.  Survival Analysis Approach to Reliability Analysis and Prognostics and Health Management \(PHM  AIAA AeroSpace Conference, March 1-8, 2008, Big Sky, MT, 20pp  Ma, Z. S. and A. W. Krings. 2008b. Competing Risks Analysis of Reliability, Survivability, and Prognostics and Health Management \(PHM  AIAA AeroSpace Conference, March 1-8, 2008.  Big Sky, MT. 20pp  Ma, Z. S. and A. W. Krings. 2008c. Multivariate Survival Analysis \(I Dependence Modeling", Proc. IEEE  AIAA AeroSpace Conference, March 1-8, 2008, Big Sky, MT. 21pp  Ma, Z. S. and A. W. Krings., R. E. Hiromoto. 2008d Multivariate Survival Analysis \(II State Models in Biomedicine and Engineering Reliability IEEE International Conference of Biomedical Engineering and Informatics, BMEI 2008.  6 Pages  Ma, Z. S. and A. W. Krings. 2008e. Dynamic Hybrid Fault Models and their Applications to Wireless Sensor Networks WSNs Modeling, Analysis and Simulation of Wireless and Mobile Systems. \(ACM MSWiM 2008 Vancouver, Canada  Ma, Z. S. &amp; A. W. Krings. 2008f. Dynamic Populations in Genetic Algorithms. SIGAPP, the 23rd Annual ACM Symposium on Applied Computing, Ceara, Brazil, March 16-20, 2008. 5 Pages  Ma, Z. S. &amp; A. W. Krings. 2008g. Bio-Robustness and Fault Tolerance: A New Perspective on Reliable, Survivable and Evolvable Network Systems, Proc. IEEE  AIAA AeroSpace Conference, March 1-8, Big Sky, MT, 2008. 20 Pages  Ma, Z. S.  and A. W. Krings. 2009. Insect Sensory Systems Inspired Computing and Communications.  Ad Hoc Networks 7\(4  MacConnell, J.H. 2008. Structural Health Management and Structural Design: An Unbridgeable Gap? 2008 IEEE Aerospace Conference, DOI:10.1109/AERO.2008.4526613  MacConnell, J.H. 2007. ISHM &amp; Design: A review of the benefits of the ideal ISHM system. Aerospace Conference 2007 IEEE. DOI:10.1109/AERO.2007.352834  Marshall A. W., I. Olkin. 1967. A Multivariate Exponential Distribution. Journal of the American Statistical Association, 62\(317 Mar., 1967  Martinussen, T. and T. H. Scheike. 2006. Dynamic Regression Models for Survival Data. Springer. 466pp  Mazzuchi, T. A., R. Soyer., and R. V. Spring. 1989. The proportional hazards model in reliability. IEEE Proceedings of Annual Reliability and Maintainability Symposium pp.252-256  Millar, R.C., Mazzuchi, T.A. &amp; Sarkani, S., 2007. A Survey of Advanced Methods for Analysis and Modeling of 


of Advanced Methods for Analysis and Modeling of Propulsion System", GT2007-27218, ASME Turbo Expo 2007, May 14-17, Montreal, Canada  Millar, Richard C., "Non-parametric Analysis of a Complex Propulsion System Data Base", Ph.D. Dissertation, George Washington University, June 2007  Millar, R. C. 2007. A Systems Engineering Approach to PHM for Military Aircraft Propulsion Systems. Aerospace Conference, 2007 IEEE. DOI:10.1109/AERO.2007.352840  Millar, R. C. 2008.  The Role of Reliability Data Bases in Deploying CBM+, RCM and PHM with TLCSM Aerospace Conference, 2008 IEEE, 1-8 March 2008. Digital Object Identifier: 10.1109/AERO.2008.4526633  Nowak, M. 2006. Evolutionary Dynamics: Exploring the Equations of Life. Harvard University Press. 363pp  Oakes, D. &amp; Dasu, T. 1990. A note on residual life Biometrika 77, 409  10  Pintilie, M. 2006. Competing Risks: A Practical Perspective.  Wiley. 224pp  20 Smith, M. J., C. S. Byington. 2006. Layered Classification for Improved Diagnostic Isolation in Drivetrain Components. 2006 IEEE AeroSpace Conference  Therneau, T. and P. Grambsch. 2000. Modeling Survival Data: Extending the Cox Model. Springer  Vincent, T. L. and J. L. Brown. 2005. Evolutionary Game Theory, Natural Selection and Darwinian Dynamics Cambridge University Press. 382pp  Wang. J., T. Yu, W. Wang. 2008. Research on Prognostic Health Management \(PHM on Flight Data. 2008 Int. Conf. on Condition Monitoring and Diagnosis, Beijing, China, April 21-24, 2008. 5pp  Zhang, S., R. Kang, X. He, and M. G. Pecht. 2008. China  s Efforts in Prognostics and Health Management. IEEE Trans. on Components and Packaging Technologies 31\(2             BIOGRAPHY  Zhanshan \(Sam scientist and earned the terminal degrees in both fields in 1997 and 2008, respectively. He has published more than 60 peer-refereed journal and conference papers, among which approximately 40 are journal papers and more than a third are in computer science.  Prior to his recent return to academia, he worked as senior network/software engineers in semiconductor and software industry. His current research interests include: reliability, dependability and fault tolerance of distributed and software systems behavioral and cognitive ecology inspired pervasive and 


behavioral and cognitive ecology inspired pervasive and resilient computing; evolutionary &amp; rendezvous search games; evolutionary computation &amp; machine learning bioinformatics &amp; ecoinformatics                 pre></body></html 


