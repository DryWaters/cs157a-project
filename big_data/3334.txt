A SECURITY MODEL FOR OBJECT-ORIENTED DATABASES Eduardo E Fernandez Ehud Gudes and Haiyan Song Department of Electrical and Computer Engineering Florida Atlantic University Boca Raton, Florida 33431 Abstract The integration of object-oriented programming concepts with databases is one of the most significant advances in tho evolution of database systems and several recent projects are developing object-oriented databases Among the many issues brought along by this combination one that is becoming important is the protection of information We develop here an authorization model for object oriented databases This model consists of 
a set of policies a structure for authorization rules and an algorithm to evaluate access requests against the authorization rules For concreteness we use a specific database system to illustrate our model but its concepts are applicable to a range of object-oriented databases 1 Introduction The integration of object-oriented programming concepts with databases is one of the most significant advances in the evolution of database systems and several recent projects are developing object-oriented databases Among the many issues brought along by this combination one that is becoming important IS the protection of information Most of the current models for authorization in 
database systems were developed for relational databases [Fern81, Grif761 Object-oriented databases have a much richer structure and thore models are not adequate The addition of semantic relationships makes the authorization problem even more complex There IS a need for new models Until now very few authorization models for object-oriented databases have been proposed Rabi87 Rabi881 A related study Tost881 considers a Smalltalk system without a database system We develop here an authorization model for object oriented databases This model consists of a set of policies a structure for authorization rules, and an algorithm to evaluate access requests against the authorization rules For concreteness we use a specific 
database system which is now under development at the University of Florida This system Intended for CAD/CAM applications, incorporates knowledge rules with a database of objects combined through an Object Oriented Semantic Association Model OsAM   The database is composed of objects that include a collection of facts and a collection of relevant rules An object binds knowledge rules to database facts On leave from Ben Gurion University Israel CH2703-7/89/0000/0110$01.00 0 1989 IEEE All the knowledge manipulation operations can be used to express the rules Some of these rules could be integrity or security rules I e they could be the 
basis for a mechanism to enforce integrity or security Section 2 considers security policies and the structure of the authorization rules for such a system while Section 3 discusses access requests validation Section 4 develops an algorithm for access validation in the context of the OSAM model Section 5 shows some possible extensions while the last section describes conclusions and directions for future worh 2 Securitv policies and authorization rules A coherent set ot policies is needed as a guideline for the design and use of a database system The choice of policies for security is important because it can influence the flexibility 
usability, and performance of the system Fern811 A fundamental choice is having an open or a closed system In an open system everything is accessible unless forbidden while in a closed system we have the inverse situation Security requires closed systems while flexibility indicates open systems In general when security is an important objective we should use a closed system Another issue is the use of positive or negative authorization rules For example the system described in Rabi87 uses positive and negative authorizations a subject may be denied access to an object either because it has no authorization for it or because 
it has a negative authorization on it The use of predicates for negative authorization present evaluation problems as well as possible contradictions in the security structure which may be hard to detect However in a system with a rich data model negative authorizations may be needed to express subtle access constraints Negative authorization constraints are also required by the Orange book for security classes 83 and A1 DODCSS  Another dimension is ownership versus administration In the first case users own and administer their data in the second case the information belongs to the enterprise users are given access to it 
to perform their functions and special users administrators\control the structure and the use of the information Since a Data Base Management System is used to support an enterprise administration is a more logical choice for this case This view is also supported by recent work on enterprise policies Moff88 Additionally one may want to allow some or all user to define private databases Another relevant policy is the choice between discretionary and multilevel security The National Computer Security Center recommends the use of multilevel systems for general computational environments DoDC851 For the environment considered here a discretionary policy seems adequate I IO 


 Multilevel security for object-oriented databases is under development at SRI and Honeywell Figure 1 illustrates a portion of a university database using the OSAM model A few other concepts are introduced in the example of Section 3 Class Person P has attributes SSN Social Security Number Name and maybe others Classes Student 5 and Teacher T are subclasses of Person The generic properties of Student and Teacher define Person through a generalization association G in Figure 1 Attribute Year"\(year of graduation is defined for Student and attribute Course for Teacher Foreign Student FS is a subclass of Student Attributes defined for subclasses reflect the fact that some features or properties only apply to specific subclasses e g  Visa is only meaningful for Foreign Students Person Student Teacher and Foreign Student are object classes similar to Smalltalk classes Their attributes correspond to Smalltalk tnstance vartab/eS In addition to the generalization association Figure 1 also shows an aggregation association indicated by A which defines a set of attributes for some class Class inheritance properties make Figure 1 to define the effective ddtabase of Figure 2 where it can be seen that all attributes of a class are inherited by its subclasses the dotted attributes are the inherited attributes It is clear now that access to zome attribute of a class implies also access to the corresponding values in its subclasses Note that these values are a subset of those of the superclass I e SSN as an attribute of Student represents only the SSNs of Students while the values of SSN as an attribute of Person represent SSNs of Students as well as of Teachers  These considerations can be summarized in the following micies P1 inheritance policy  a user that has access to a class IS allowed to have similar type of access in the corresponding subclasses to the attributes inherited from that class P2  access to a complete class implies access to the attributes defined in that class as well as io attributes inherited from a higher class but only to the class-relevant values of these attributes P3  an attribute defined for a subclass IS not accessible by accessing any of its superclasses Additional policies are necessary to consider predicates and multiple inheritance A discussion of possibilities for discretionary and mandatory systems is given in Spoo88 In general an authorization rule is a tuple U A 0 p f which defines that sublect or user U has authorization of type A access type to those occurrences of object class 0 for which predicate p is true \(note that the word object here is not used in the sense of object-oriented databases but it represents any named entity User U can grant the access right 0,A if the copy flag f is true This model has been used to describe most of the authorization systems for relational databases We use here a more specific version of these rules defined as below An authorization rule is a triple U,A,AO where U is a user or user group A is an access type or set of access types and A0 is the set of attributes of the object to be accessed I e A 0  01 a 01 a2  A rule can either refer to A0 as a whole or to its individual components Attribute a must be defined for object 01 or inherited by it For example consider the graph of Figure 2 Assume the following authorization rules are defined R1 SA R 5 SSN   The Student Advisor can read SSN of students R2 FSA R FS SSN FS visa Advisor can read SSN and visa of foreign students  The Foreign Student A Student Advisor SA could have access to SSNs of all students Pi but no access to their visas P3 a Foreign Student Advisor FSA could have access to visas but only to SSNs of Foreign Students Pz We can also separate user rtghts defined by user authorization rules as described above from administrative rights the ability to control the database access actions Administrative rights are defined by admtnistrative rules described by tuples U A 0 f Examples of administrative access types are the rights to create and delete administrative groupings of data to define user authorization rules to revoke delegated rights etc This separation proved to be useful in a decentralized model Wood79 and has been further elaborated in Moff881 a G a G Figure 1 A university database Figure 2 Effective structure of the database of Figure 1 


3 Validation of access requests Access validation occurs by extracting a data request from a user query or from an executing program This request has a structure U\222,A\222 O\222 where U\222 is the subject user process making the request 0\222 is the requested object, and A\221 IS the requested access type This request is validated against the authorization rules to decide if the request should be granted totally or partially A security context is a set of object classes grouped together for security purposes A security context may be equivalent to a conventional view or other partitions of the database schema A security context defines a partially ordered set of object classes in terms of the associations which delimits the access for user queries i e a data request is validated using the rules in a specific context In Figure 3 we show a more global picture of the university database Security Context SCi IS defined to include Classes Person Student Teacher, and Foreign Student as well as their corresponding associations Validation of a user\222s request associated with this security context will only consider classes and associations within SCl the portion in the dotted circle SC1 is used as a boundary when constructing the Query Security Graph defined later for the user\222s query Authorization rules are usually associated with a partlcular security context Consider now rules R1 and R2 of Section 2 According to Placement rule 1 R1 must be placed at class Student Similarly R2 can only be placed at class Foreign Student A query-graph IS the subgraph of the security context defined by the nodes that the query intends to access and their corresponding associations For the example above we define the following two queries, each of which is issued by SA and FSA Q1 read SSN for all students Q2 read SSN and visa for all foreign students The corresponding query-graphs are shown in Figure 4 Query Graph for 01 I I Academic Institute A  I  sc1  c  _ Figure 3 A security context in the university database The placement of authorization rules affects considerably the way of validating access requests Authorization rules can be placed at special classes e g  a context root at the class to which they refer I e  the class defined by the object part of the rule or propagated throughout the hierarchy as discussed in Fern751 We consider the following placement rule Placement Rule 7 an access rule U.A,{Oi al 0 al  can be placed only at node 01 I Foreignstudent I Query Graph for Q2 Figure 4 Query-graphs for example According to the policies of Section 2 we expect the following behavior as a result of the evaluation of the indicated requests\222 SA.Ql  SA Read S SSN   all SSNs can be read since we do not deal with exceptions or negative authorizations we do not exclude for example foreign students or other subgroups that may not be accessible to a student advisor  Policy PI SA,Q2  SA Read FS Visa FS SSN  only SSNs of foreign students are to be read and not their visas Policy P3 FSA,Ql  FSA Read S SSN   only foreign student SSNs are to be read Policy Pz FSA.Q2 FSA Read FS Visa FS SSN   both foreign student SSNs and visas are to be read Policy Pz We now define the concept of the Query Security Graph for each node in the query graph we add all of its descendants recursively and all of its ancestors \(recursively until we reach the boundaries of the security context The result is the query security graph for example the query security graphs for queries Q1 and Q2 issued within SC1 are shown in Figure 5 in this case this is the same graph for both queries We denote a request as U.Q where U is a subject and Q a query Their combination is equivalent to the set of components of the request model defined in Section 2 For clarity we show also the expanded request I I2 


m Person G G e Foreign Student Figure 5 Query Security graphs for the example 4 Access request evaluation alqorithm This algorithm assumes Placement Rule 1 and that the security graph is a tree a more general algorithm that can handle arbitrary class graphs has been developed [fern891  for each node in the query graph the algorithm checks for authorization in the corresponding node in the query security graph If it finds a rule authorizing all the requested access it returns Otherwise it looks for more general rules in the ancestor of the current node If still not fully authorized it looks for more restrictive rules in its descendant subtrees using for example a depth-first search procedure The algorithm is based on the policies defined earlier for the algorithm we use the following additional deftni tions AT  set of requested attributes AT yes   the set of attributes already authorized at a given moment QG is the query graph SG is the query security graph AUTH UP and AUTH DOWN are procedures to traverse the tree The algorithm is composed of three major procedures  AUTH AUTH-UP and AUTH-DOWN AUTH may traverse the entire query security graph for each node of the query graph the examples below assume a single query node  If the current query node contains access rules which completely authorize access then the algorithm stops and sets the set AT to empty and the set AT yes to the set AT If only partial authorization is found le only some of the attributes in AT are authorized\this is indicated by substracting the authorized attributes from the set AT and adding them to the set AT yes In this case the security tree has to be traversed up and down looking for other authorizing rules This is done by procedures AUTH-UP and AUTH AUTH UP looks for rules authorizing attributes in the remaining set AT in all ancestors of the current node until the root of the SG On the way up it may not be possible to find DOWN respectively  access rules for all attributes because some of them are not known at higher level nodes and according to placement rule 1 they cannot be authorized there Therefore such attributes are temporarily eliminated from the set AT If at any point the set AT becomes empty the traversal up stop although this may not indicate full authorization because of the eliminated attributes If AUTH UP did not get the full authorization for the set AT then AUm DOWN must be invoked AUTH-DOWN traverses the subtree rooted in the current node in a depth-fbrst manner AUTH DOWN must consider restrictive authorization This means givins authorization to a subclass even if access to the full class was requested e g  giving access to only FS in case access to S was required  In order to maximize authorization all children of the current node must be searched However once restrictive authorlzation was given to all attributes in the set AT there is no need to search further down because no more authorization can be found After both procedures fimsh either full authorization IS given set AT is empty\or partial authorization is given by the set AT yes The set AT yes is then used by the query evaluation algorithm to restzct access to authorized attributes only AUTHlU'.A'.QG.SG lor each node NI rn QG do AT IS the set of atlrlbutesto be accessed at NI aeterminea from QG and 0 IS me obiecl class of N8.l AT yes  if tnere~sar~ie~U.AAO~rucntha1 U~LI'.A>A',AO~A then  I*accesi authorlied for all a:mb~ie5 do AT-yes AT AT   exit end else if there IS a rule U.A,ATl such hat U Ju AiA ana uhere AT2  fATi a A andAT2 s 0 then access aufhoruea for some alir#butes do AT-yei AT2 AT nAT-AT2 end I now check ancestors  AUTH IIPlU',A'.O A:,AT-yes if AT  then emf now check descendants 0 ieh son101 In SG If 0 L null then AUTH-DOWN\(U',A',O,AT.AT-yes   end do end AUTH I I3 


AUTH UPIU'.A'.O,AT.AT-~er go pwardr In SG'I  0  larher\(O1 in SG if 0 null thenreturn I lhere 4s any allribule in AT which 15 not known at this node remove 11 from AT slnce inere cannot oe any rule referencing 11 ai this node or above ATR AT  atmnuter not known ai 0 I'ATR ts used not 10 destroy the original AT rf lhere ira rule IU.A.AO such that UIU and AIA and A02ATR then do AT  yes AT-yerUATR AT AT  ATR return end else If lhere 8s a rule U.A.AT1 such lhar UlU and AZA wnere AT2  AT1 nATR and AT2 L c and AT2 not included In AT-yes then do AT yes AT yer U AT2 AT A'-Ar2 ATR  ATR  AT2   end if ATR  0 then return no need 10 conllnue gotng up else AUTH-UPlU'.A'.O.AT AT-yer end AuTH-UP AUTH  DOWN\(U',A',O.AT.AT-yes go downwaror an SG'i f inere 15 a rule iU.A,ATl where ulu and AZA and AT2  ATII?ATI and AT2  and AT2 01 Nncludea 8 AT-yes then do AT fer AT qesu OAT2 n tnlscareO IS a more reslricriie onlea ana inat murl ne nolea 8n AT  yes rf ATTRI AT-,erl ATTRiAT rhen   NO  GOWN  TRUE h0-50Wt.1 IS a rlag ana ATTRIOI g've rne re1 01 a!lrlOulr names of 0 no neea 10 go more aovrn 0111 ve riiii may nave 10 100 o me rignr for aodirionai re$ir8cred ooieclr 0 eh  ron\(O1 If 0 0 r#gnt brorherI0 while 0 null do n~ii ana not NO-DOWN thenAIITH-DOWNlU'.A O.,AT AT-yes  AUTH  D0WNlU.A O..AT,AT-yer 0 right  brorner 10 end ail rlght brothers muit oe checked necaure Trey may add some specjfic suntypes return end AUTrr-DOWN Now let us see how the algorithm works on the four cases above Case I SA,Ql  SA Read S SSN The algorithm finds rule R1 and therefore gives SA access to all SSNs Case2 SA Q2  SA. Read FS SSN FS Visa The algorithm first looks at node FS and cannot find any rules Then it looks at node S Now it updates AT by removing attribute visa since it is not known at this node and therefore no rule can reference it Now it finds the rule SA,R.S SSN and since obviously S includes FS it allows access to all SSNs for foreign students but not to their visas Case3 FSA,Ql  FSA Read S SSN The algorithm first looks at S and cannot find any rules Then it looks at P and cannot find any rules Now it goes downwards and finds R2 It updates AT yes with FS SSN and therefore allows access to SSNs of foreign zudents only Case4 FSA.Q2  FSA, Read FS SSN FS Visa The algorithm looks at FS finds rule R2 and allows access to both SSNs and visas 5 Extensions We may want to use a more general placement rule Placement Rule 2 an access rule \(U,A,{Oi al 01 a2  can be placed at any node A0 such that 1 A0 is 01 or one of its ancestors 2 ai is known for object A0 I e defined or inherited from above If we use the second placement rule instead of the first there are very few changes to the algorithm The basic change is that when we update AT yes we always have to update it with RO AT and not with A0 Aiwhere RO is the Object in the rule and not the object we are currently working on This is because RO may be more restrictive than A0 The second placement rule may be useful if we want to concentrate our authorization rules in higher level nodes, and also most of our queries try to access higher ievel nodes However the distribution of queries versus access rules is not known in general Currently the algorithm repeats for each node of the query graph So if the query graph contains two nodes and their corresponding security graphs overlap we search portions of the same graph twice which is redundant the algorithm needs to be modified for this case Another alternative is to propagate the rules along the hierarchy as proposed in Fern751 In that case the algorithm becomes much more efficient at the expense of the storage space required for all the propagated rules 6 Conclusions and Further Work We have presented a model and a correspondiny algorithm to validate authorization in object-oriented databases Further work is needed for 0 Making the algorithm more efficient and general In particular we are considering how to handle multiple query nodes using Placement Rule 2 Fern891 0 Handle predicates The rule with the complete format as described in Section 2 includes predicates I I4 


These have been ignored at this stage Determine access rules for the other types of associations OSAM has several other types These should be simpler than generalization but have to be studied systematically 0 Study administrative rights These are the rights needed to manipulate the schema and control authorization We have started considering this problem Song891 Consider the use of ordered access types As shown in Fern751 this allows a simplification in the administration and evaluation of security as well as a reduction in storage requirements for these rules One can also define partial orders for user classes Fern75 Rabi87 Sand881 0 Acknowledaments This work has been supported by a grant from the University of Florida Our students Jie Wu Maria Petrie and Francis Yu provided valuable discussions The reviewers comment have had a significant impact on the style of this paper Mrs Joan Buttery typed innumerable versions of this manuscript References Alas881 A M Alashqur S Y W Su H Lam M 5 Guo and E Barkmeyer OQL  An object-oriented query language Report Database Systs Res and Dev Center U of Florida, Gainesville FL Bane871 J Banerlee W Kim et at  Semantics and implementation of schema evolution in object oriented databases Proc 1987 SlGMODlntl Conf ACM New York 1987,311-322 DoDC851 Dept of Defense Computer Security Center Trusted Computer System Evaluatron Crrterra DoD 5200 28 STD December 1985 Fern751 E B Fernandez R C Summers and T Lang Definition and evaluation of access rules in data management systems Proc 1st Int Conf on Very Large Databases Boston 1975 268-285 Fern811 E B Fernandez R C Summers C Wood Database security and Integrity Addison-Wesley Reading Massachusetts System Programming Series February 1981 Fern891 E B Fernandez E Gudes and H Song paper In preparation Grif76]P P Griffiths and B W Wade An authorization mechanism for a relational database system ACM TODS 1 3\(September 1976 242-253 Lam H881 Moff88  Ra bi871  Rabi88 Sand881 Song891 Sp00881 SUSYES SuSY861 SuSY881 Tost881 Wood791 H Lam 5 Y W Su A M Alashqur and M S Guo OSAM A departure from tuple-record oriented databases Report Database Systs Res and Dev Center U of Florida Gainesville FL 1 D Moffett and M 5 Sloman The source of authority for commercial access control Computer 2 2\(February 1988 59-69 F Rabitti D Woelk and W Kim A model of authorization for object-oriented and semantic databases MCC Tech Rept  ACA ST-327-87 October 1987 F Rabitti E Bertino W Kim, and D Woelk A model of suthorization for next-generation database systems MCC Tech Rept ACA-ST-395-88, November 1988 R S Sandhu The NTree A two dimension partial order for protection groups ACM Trans on ComD Svsts 6 2\(May 1988 196-220 H Song and E B Fernandez Administrative authorization in object-oriented semantic databases submitted for publication D L Spooner, "The impact of inheritance on security in object-oriented database systems Report Computer Science Department Rensselaer Polytechnic Institute November 1988 5 Y W Su and L Rarchid Incorporating knowledge rules in a semantic data model An approach to integrated knowledge management Proc of A I Appli~s Conf  December 1985 S Y W Su Modeling integrated manufacturing data with SAM Computer January 1986 34-49 S Y W Su V Krishnamurthy and H Lam An object oriented semantic association model OsAM in A1 in industrial engineering and manufacturina theoretical issues and amlications S Kumara R Kashyap and A L Soyster \(eds  AIIE. 1988 R S Tosten Data security in an object-oriented environment such as Smalltalk-80 Proc of the 1988 Int Conf on Computer Lanauaaes, 234-241 C Wood and E B Fernandez Authorization in a decentralized database system Proceedinas of the 5th International Conference on Verv Larae Databases Rio de Janeiro 1979 352-359 I I5 


main\(atgc. argv  cvm_startup\(argc, argv spacep  cvm-alloc\(size cvm-create-procs\(apriori apriorio cvm-finish 1 number of 1 nodes 2 4 VISIONA 1 2 type CVM apriori  r Apriori algorithm 221I k=l while \(candidate item sets of k-th pass are not emply  r step of k-th pass  while \(\(read data  emply  while item sets of k items are selectable from the data  search the itemset in the hash tree cvm-lock\(&mt[fieldp  4001 222fieldp cvm_unlock\(\(Lmt[fieldp  4001 1 1 cvm-barrier\(0 make the large itemsets of k by comparing the support values of the candidate itemsets with the minimum support value make the candidate item-sets of k+l out of the large itemsets of k k I I pass-1 pass-2 pass-3 pass-4 total 1 4 1 rscc sec ec e 15 21 4 1 41 39 44 9 1 93 1 4 2 1 8 1 2 1 1 5 step-I step-9 step-3 step-4 step-5 step4 step-7 step-8 step-9 step-IC Figure 5 Pseudo code for association rule mining executed in CVM consistency mechanism on the DSM for scalable data mining in both parallel and distributed computing en vironments l and 2 show the basic algorithm of as sociation rule mining which is popular among the data mining research community 9 shows a modification of l and 2 to decrease the number of the candidate item-sets to increase the performance lo shows the parallel algorithm of l and a for cluster-type dis tributed systems with message passing programming model 51 shows bayesian network generation which is a new technique of data mining New techniques for data mining and speedup are important research areas In the past new techniques or speedup is performed for each application indepen dently Our approach is different from the past re search We use DSM as a common tool for scalable data mining programs The objective is to develop scalable Table 6 Performance of association rule mining in CVM and VISIONA I I 4 1 21 11 1 5 data mining programs efficiently To decrease the over head of the DSM we proposed the LBC mechanism on the DSM. Also this paper described VISIONA a pro totype to implement the DSM with LBC To evaluate the effectiveness of the DSM with LBC we have implemented VISIONA both in PC clusters and UNIX computer clusters Programs of association rule mining and bayesian network generation has been also implemented in VISIONA According to t,he results of the evaluation of the DSM with LBC speedup by increasing the number of processors on the DSM with LBC is greater than or equal to that of SMP-type parallel computer In the future we will improve the VISIONA as a DSM system with multiple consistency protocol including the LBC mechanism The goal is to increase the adaptability to many different data mining programs References l R Agrawal T Imielinski A Swami 224Min ing Association Rules between Sets of Items in Large Databases,\224 Proceedings of ACM SIGMOD pp.207-216 May 1993 a R Agrawal R Srikant 224Fast Algorithms for Min ing Association Rules,\224 Proceedings of the 20th VLDB Conference pp.487-499 September 1994 3 C Amza A L Cox S Dwarkadas P Keleher H Lu R Rajamony W Yu W Zwaenepoel 224Tread Marks Shared Memory Computing on Networks of Workstations,\224 IEEE COMPUTER Vol 29 No 2 pp.18-28 February 1996 4 P Keleher 224The relative importance of concur rent writers and weak consistency models,\224 Pro ceedings of the 16th International Conference on Distributed Computing Systems pp 9 1-98 Nl ay 1996 5 D Heckerman 224Bayesian Networks for Knowl edge Discovery,\224 Advances in Knowledge Discov 149 


ery and Data Mining AAA1 Press/The MIT Press pp.273-305 1996 6 D Lenosla J Laudon T Joe D Nakahira L Stevens A Gupta J Hennessy 224The DASH Pro totype Implementation and Performance,\224 Pro ceedings of the 19th International Symposium on Computer Architecture pp.92-103 May 1992 7 F T Chong B Lim R Bianchini J Kubiatow icz 224Application Performance on the MIT Alewife Machine,\224 IEEE COMPUTER Vol 29 No 12 pp.57-64 December 1996 8 P Keleher A.L Cox S Dwarkadas W Zwaenepoel 224An Evaluation of Software-Based Release Consistent Protocols 224 Journal of Parallel and Distributed Computing Vol 29 pp.126-141 October 1995 9 J S Park M Chen P S Yu 224An Effective Hash Based 4lgorithni for Mining Association Rules,\224 Proceedings of ACM SIGMOD pp.175-186 June 1995 lo E Han, G Karypis V Kumar 224Scalable Parallel Data Mining for Association Rules,\224 Proceedings of ACM SIGMOD pp.277-288 May 1997 150 


Figure 8 Visual interface for Moridou system Search EngineTest Page 0 UI 0 5 5 Keyword plealet Figure 9 Prototype system in hcterogeneous environment 283 


6 Conclusions We presented MAFIA an algorithm for finding maximal frequent itemsets Our experimental results demonstrate that MAFIA consistently outperforms Depthproject by a factor of three to five on average The breakdown of the algorithmic components showed parent-equivalence pruning and dynamic reordering were quite beneficial in reducing the search space while relative compressiodprojection of the vertical bitmaps dramatically cuts the cost of counting supports of itemsets and increases the vertical scalability of MAFIA Acknowledgements We thank Ramesh Agarwal and Charu Aggarwal for discussing Depthproject and giving us advise on its implementation We also thank Jayant R Haritsa for his insightful comments on the MAFIA algorithm and Jiawei Han for providing us the executable of the FP-Tree algorithm This research was partly supported by an IBM Faculty Development Award and by a grant from Microsoft Research References I R Agarwal C Aggarwal and V V V Prasad A Tree Projection Algorithm for Generation of Frequent Itemsets Journal of Parallel and Distributed Computing special issue on high performance data mining to appear 2000 2 R Agrawal T Imielinski and R Srikant Mining association rules between sets of items in large databases SIGMOD May 1993  R Agrawal R Srikant Fast Algorithms for Mining Association Rules Proc of the 20th Int Conference on Very Large Databases Santiago Chile, Sept 1994  R Agrawal H Mannila R Srikant H Toivonen and A 1 Verkamo Fast Discovery of Association Rules Advances in Knowledge Discovery and Data Mining Chapter 12 AAAVMIT Press 1995 5 C C Aggarwal P S Yu Mining Large Itemsets for Association Rules Data Engineering Bulletin 21 1 23-31 1 998 6 C C Aggarwal P S Yu Online Generation of Association Rules. ICDE 1998: 402-41 1 7 R J Bayardo Efficiently mining long patterns from databases SICMOD 1998: 85-93 8 R J Bayardo and R Agrawal Mining the Most Interesting Rules SIGKDD 1999 145-154 9 S Brin R Motwani J D Ullman and S Tsur Dynamic itemset counting and implication rules for market basket data SIGMOD Record ACM Special Interest Group on Management of Data 26\(2\1997 IO B Dunkel and N Soparkar Data Organization and access for efficient data mining ICDE 1999 l 11 V Ganti J E Gehrke and R Ramakrishnan DEMON Mining and Monitoring Evolving Data. ICDE 2000: 439-448  121 D Gunopulos H Mannila and S Saluja Discovering All Most Specific Sentences by Randomized Algorithms ICDT 1997: 215-229 I31 J Han J Pei and Y Yin Mining Frequent Pattems without Candidate Generation SIGMOD Conference 2000 1  12 I41 M Holsheimer M L Kersten H Mannila and H.Toivonen A Perspective on Databases and Data Mining I51 W Lee and S J Stolfo Data mining approaches for intrusion detection Proceedings of the 7th USENIX Securiry Symposium 1998 I61 D I Lin and Z M Kedem Pincer search A new algorithm for discovering the maximum frequent sets Proc of the 6th Int Conference on Extending Database Technology EDBT Valencia Spain 1998 17 J.-L Lin M.H Dunham Mining Association Rules: Anti Skew Algorithms ICDE 1998 486-493 IS B Mobasher N Jain E H Han and J Srivastava Web mining Pattem discovery from world wide web transactions Technical Report TR-96050 Department of Computer Science University of Minnesota, Minneapolis, 1996 19 J S Park M.-S Chen P S Yu An Effective Hash Based Algorithm for Mining Association Rules SIGMOD Conference 20 N Pasquier Y Bastide R Taouil and L Lakhal Discovering frequent closed itemsets for association rules ICDT 99 398-416, Jerusalem Israel January 1999 21 J Pei J Han and R Mao CLOSET An efficient algorithm for mining frequent closed itemsets Proc of ACM SIGMOD DMKD Workshop Dallas TX May 2000 22 R Rastogi and K Shim Mining Optimized Association Rules with Categorical and Numeric Attributes ICDE 1998 Orlando, Florida, February 1998 23 L Rigoutsos and A Floratos Combinatorial pattem discovery in biological sequences The Teiresias algorithm Bioinfomatics 14 1 1998 55-67 24 R Rymon Search through Systematic Set Enumeration Proc Of Third Int'l Conf On Principles of Knowledge Representation and Reasoning 539 550 I992 25 A Savasere E Omiecinski and S Navathe An efficient algorithm for mining association rules in large databases 21st VLDB Conference 1995 26 P Shenoy J R Haritsa S Sudarshan G Bhalotia M Bawa and D Shah: Turbo-charging Vertical Mining of Large Databases SIGMOD Conference 2000: 22-33 27 R Srikant R Agrawal Mining Generalized Association Rules VLDB 1995 407-419 28 H Toivonen Sampling Large Databases for Association Rules VLDB 1996 134-145 29 K Wang Y He J Han Mining Frequent Itemsets Using Support Constraints VLDB 2000 43-52 30 G I Webb OPUS An efficient admissible algorithm for unordered search Journal of Artificial Intelligence Research 31 L Yip K K Loo B Kao D Cheung and C.K Cheng Lgen A Lattice-Based Candidate Set Generation Algorithm for I/O Efficient Association Rule Mining PAKDD 99 Beijing 1999 32 M J Zaki Scalable Algorithms for Association Mining IEEE Transactions on Knowledge and Data Engineering Vol 12 No 3 pp 372-390 May/June 2000 33 M. J. Zaki and C Hsiao CHARM An efficient algorithm for closed association rule mining RPI Technical Report 99-10 1999 KDD 1995: 150-155 1995 175-186 3~45-83 1996 452 


