WUN-MINER: A NEW METHOD FOR MINING FREQUENT WEIGHTED UTILITY ITEMSETS Huong Bui Department of Math & Informatics  University of People\222s Security  Hochiminh City, Vietnam buidanhhuong@gmail.com  Bay Vo Faculty of Information Technology Hochiminh City University of Technology Hochiminh City, Vietnam bayvodinh@gmail.com   Ham Nguyen Department of Math & Informatics  University of People\222s Security  Hochiminh City, Vietnam duyham@gmail.com  Abstract In this paper, we prop ose the WUN-set \(Weighted Utility Nodeset\, an exte nsion of the Nodeset structure to solve the problem of mining frequent weighted utility itemsets from a quantitative database Firstly, some theorems are developed to compute quickly the weighted utility support of an itemset. An algorithm is then proposed for the fast mining frequent weighted utility itemsets The experimental results on both sparse and dense databases show that the proposed method outperforms existing methods Keywords: Data mining, frequent weighted utility itemsets, WUN-set I  I NTRODUCTION  Mining frequent itemsets \(FI\plays an important role in data mining, and thus many algorithms have been proposed to solve this problem such as Apriori [1 w t h 7 FPGrowth* [6   Ecl a t 2 6 dE cl at 27  DB V-F I 2 1 P re post    NSF I [2 3  FI N [3  a nd Pre post  4  Al l  t h ese m e t hod s  are carried out on binary databases, in which all items are treated uniformly. It is different from binary databases that quantitative databases have attr ibutes such as quantity and profit of each item in transacti ons. For example, a customer buy 2 loaves of bread \(4$ for each loaf\and 3 bottles of milk 1$ for each bottle\permarket, the binary database reflects only items appearing in the transaction are bread and milk without regard to quantities or prices, by contrast, the quantitative database reflects all these factors. Quantitative dadabases \(QDB\re often found in pratical applications and intelligent systems. There are many approaches for mining knowledge from QDB, such as mining high utility itemsets 12, 5, 14, 11, 10, 13  m i ni ng f req ue nt wei ghe d i t e m s et s 1 7  19, 24, 25, 20, 9, 15 and  min i n g frequ e n t w e igh t ed  u t ilit y  itemsets \(FWUI\8, 22, 16  In recent studies, Vo et al. [22  pr opo sed a M W I T FW U I algorithm which adopted the IT-tree approach for mining FWUI, although this is rather quite time-consuming as the memory usage is not optimal. Ng uyen et al d a  MBiS-FWUI algorithm based on the MBiS structure, an improvement of DBV structure [2  whi c h r e m oved al l 0b i t s  from bit-vector, keeping only 1-bits segments. MBiS-FWUI shows more efficiently th an MWIT-FWUI on sparse databases. In this paper, we propose a method based on the WUN-set structure, an extension of Nodeset structur  solve the problem of mining FWUI from QDB. First, we use the same definition of FWUI proposed by Khan et al. [8  th e reason is that this approach satisfies the downward closure property. Then, the database is scanned and compressed on the WUN-tree, thereby extracting the WUN-sets of 1-itemsets registered on tree. The WUN-set of a 2-itemset is obtained by considering the descendant-an cestor relationship between each pair of WUN-codes in WUN-sets of two corresponding 1itemsets. The WUN-set of a k itemset k  3\btained from the intersection of two corresponding k 1\temsets which has a linear complexity. Next some theorems are developed to compute quickly the weighted utility support of an itemset based on its WUN-set, and, in some cases, determine its value without computing the WUN-set. We use a set-enumeration tree [18 to o p tim ize th e s earching process and remove branches which only contain unsatisfying itemsets. The experimental results on both sparse and dense databases show that the proposed method is more effective than existing methods The remainder of this paper is organized as follows Section 2 reviews the related works. Section 3 presents the WUN-set structure, concepts, definitions and related theorems Section 4 develops the WUN-Miner algorithm for mining FWUI. The experimental results on many different databases are shown in section 5, and then the conclusion and future research directions  are presented in section 6 II  RELATED  WORKS  Khan et al. [8 r op osed a fra m e w o rk  for w e igh ted  u tilit y association rule mining \(WUARM\n which the authors given two basic measures \(transaction weighted utility - twu and weighted utility support - wus\for mining FWUI Vo et al. [2 pr o pose d a M W IT-tree structure for mining FWUI. As it scans the database only once, this method is more effective than previous ones that adopt the Apriori approach However, the drawback of this method is that it needs a lot of memory to store tidsets Nguyen et al  pr op o s ed a MBiS structure, an improvement of DBV structur e, to mine FWUI. MBiS removes all 0-bits and only retains consecutive segments of 1bits in bit-vetor representati on of a tidset. MBiS is thus effective on sparse databases but has no effect when working with dense databases Deng et al  hybric approach using the Nodeset structure to represent binary databases and mine FI The method proposed by Deng et al. compresses the database into a tree called a POC-tree, then represents the database and mines FI using the Nodeset struct ure, which is extracted from the POC-tree. This approach ha s both the advantages of FPtree [7 IT-tree [2 6  ap pro ach es, wh ich  are th e ab ilities to  compress data on the tree and compute quickly the support using Nodesets intersection, and thus the hybrid approach is very efficient in mining FI [2, 23, 3   2016 IEEE International Conference on Systems, Man, and Cybernetics € SM\C 2016 | October 9-12, 2016 € Budapest, Hungary 978-1-5090-1897-0/16/$31.00 ©2016 IEEE SMC_2016    001365 


 III  BASIC  PRINCIPLES Definition 1  A QDB is a triple T  I  W where T  t 1   t 2    t m is a set of quantitative transactions I  i 1  i 2    i n is a set of items, and W  w 1  w 2 205 w n is a set of weights that correspond to the items in set I Each transaction t k  x k1  x k2  205 x kn where x ki is the number of products bought of item i th  in transaction t k  Example 1 Table 1 shows an example of QDB. There are a total of six transactions in set T  t 1  t 2  t 3  t 4  t 5  t 6 and six items I  A  B  C  D  E  F as shown in Table 1A. The set of weights W 0.8, 0.1, 0.5, 0.9, 0.2, 0.3}, as shown in Table 1B. Transaction t 1 2, 1, 0, 3, 4, 0} means that customer t 1  buys two item A one item B three item D four item E and does not buy item C or F   Table 1  An example of QDB A B Transaction Database Item weight Transaction A B C D E F Item Weight t 1  2 1 0 3 4 0 A 0.8  t 2  0 5 0 0 1 1 B 0.1  t 3  1 3 0 0 0 3 C 0.5  t 4  3 1 1 0 2 0 D 0.9  t 5  1 1 2 1 2 0 E 0.2  t 6  0 4 2 1 1 1 F 0.3 Definition 2 The transaction weighted utility twu a transaction t k is defined as follows       1 where w j is the weight of item i j in transaction t k   is the quantity of item i j in t k   S  t k e number of items in t k  Example 2 According to the formula \(1\he twu values of transactions in Example 1 are calculated as shown in Table 2 Table 2  The twu values of transaction in Table 1 Transaction Formula twu t 1  0.8 2 + 0.1 + 0.9 3 + 0.2 4\ / 4 1.30 t 2  0.1 5 + 0.2 + 0.3 0.33 t 3  0.8 + 0.1 3 + 0.3 3\ / 3 0.67 t 4  0.8 3 + 0.1 + 0.5 + 0.2 2\ / 4 0.85 t 5  0.8 + 0.1 + 0.5 2 + 0.9 + 0.2 2\ / 5 0.64 t 6  0.1 4 + 0.5 2 + 0.9 + 0.2 + 0.3 0.56 Sum of twu values \(s umtwu  4.35 Definition 3 The weighted utility support wus f an itemset X is defined as follows       2 where t  X he set of transactions containing X  Example 3 The wus values of itemset AB in Example 1 is calculated using formula \(2\follows   We use a threshold called minwus for mining FWUI. An itemset which has wus values greater than or equal to minwus  is called FWUI according to the minwus threshold. Mining FWUI from QDB is the problem of finding all FWUI which satisfy a given minwus threshold  Definition 4 WUN-tree\A WUN-tree is a tree consisting of one root labeled as \223null\224, and a set of child nodes as the children of the root, where each child node is a tuple itemname, child-list, pre, pos, weight  item-name is the name of node, which is the name of the item representing the node child-list is a list of child nodes of the current node pre is the order when traveling the tree towards top-down-left-to-right pos is the order when traveling the tree towards top-downright-to-left weight is the weight of the node, which is determined by the total twu values of the transactions passing that node Based on Definition 4, the algorithm for building a WUNtree is shown in Algorithm 1 Algorithm 1  WUN-tree construction  Input A QDB and a threshold minwus  Output WUN-tree, the frequent weighted utility 1-itemsets I 1  Method name Construction_WUN_Tree  QDB  minwus  1 2 3 4 5 6 7 8 9 10 Scan QDB for the first time and calculate twu values of the transactions wu s values of the 1-itemsets and sumtwu  I 1 set of 1-FWUIs having wus  minwus  Sort I 1 in frequency descending order Scan QDB for the second time to build the WUN-tree  Create the root of a WUN-tree Tr and label it as "null  for each transaction t in QDB do  P set of items i  i  i I 1 are arranged in order of I 1  Call Insert_Tree  P  Tr insert P into the tree Scan WUN-tree to generate pre and pos values of each node Procedure Insert_Tree  P  Tr   11 12 13 14 15 16 17 18 if P   p 1 is the first element of P   Consider the child nodes belong to child-list of Tr  if node N having N.name  p 1 name then  N.weight  twu  P   else, create a new child node of Tr as N where N.weight  twu  P  and N.name  p 1 name   Call recursive function Insert_Tree  P p 1  N   Example 4 Consider QDB in Table 1 with minwus 0.5 After scanning QDB for the first time, we have I 1 as shown in Table 3B, which are the 1-itemsets having wus values not smaller than minwus The items in each transaction are removed if they don\222t belong to I 1 and the remaining items are arranged in descending order of wus values \(Table 3A Applying Algorithm 1, a WUN-tree is built as shown in Figure 1. We find that the transactions t 1 and t 5 have the same prefixes B  E  A  D re integrated into same branch of the tree. The WUN-tree thus re presents the entire database with a high degree of data compression, and this means that the size of a WUN-tree is quite small compared to that of an IT-tree Table 3  QDB in Table 1 after applying minwu s 0.5 A  B Sorted transaction database  I 1 Transaction B E A D twu Item wus t 1  1 4 2 3 1.30 B 1  t 2  5 1 0 0 0.33 E 0.85  t 3  3 0 1 0 0.67 A 0.80  t 4  1 2 3 0 0.85 D 0.57  t 5  1 2 1 1 0.64   t 6  4 1 0 1 0.56   sumtwu 4.35   Definition 5 WUN-codes of tree nodes\ The WUN-code of a node in the WUN-tree is a triple of values pre  pos  weight f that node Example 5 Consider WUN-tree in Figure 1, node E having WUN-code \(2, 3, 3.68 pre 2 is the order of node E when traveling the tree towa rds top-down-left-to-right pos 3 2016 IEEE International Conference on Systems, Man, and Cybernetics € SM\C 2016 | October 9-12, 2016 € Budapest, Hungary SMC_2016    001366 


 is the order when traveling the tree towards top-down-right-toleft, and weight 3.68 is the sum of twu values of the transactions passing node E that is t 1 t 2 t 4 t 5 and t 6    Figure 1  The WUN-tree of QDB in Table 3 Theorem 1 2  Gi ve n t w o no des N 1 and N 2 which have WUN-codes C 1  x 1  y 1  w 1  C 2  x 2  y 2  w 2 pectively N 1  is an ancestor of N 2 if and only if x 1 x 2 and y 1 y 2   Definition 6 WUN-sets of items\n a WUN-tree, the WUN-set WS of an item is a sequence of all the WUN-codes of nodes registering the item in the WUN-tree Example 6 Consider the WUN-tree in Figure 1, we have WUN-set of items E, A and D as follows WS  E 2, 3, 3.68 WS  A 3, 1, 2.79\, \(6, 4, 0.67 WS  D 4, 0, 1.94\, \(5, 2, 0.56 Note that, it is different with Nodeset  that the WUN-set of a 1-itemset has one more value which is pos value. The pos  value is used to determine quickly the descendant-ancestor relationship between two WUN-codes when building WUNset of a 2-itemset Theorem 2 Given an item A whose WUN-set is WS  A   The wus value of item A is calculated as follows   3 Proof Assume that an item A is registered on n nodes in the WUN-tree. Let T i be the set of transactions containing item A and register A on the node x i  y i  w i ccording to the way the WUN-tree is built, we have  a T i T j  with i j  b Let T  A e the set of all transactions containing item A  according to \(b\have   c According to formula \(2\ we have  d So, according to \(a\nd \(c\ve       e Then, according to \(d\ and \(e\, we have  So, Theorem 2 is proven Definition 7 WUN-sets of 2-itemsets\ Given any two items A 1 and A 2 such that A 1 is before A 2 according to the I 1  ordering. The WUN-set of 2-itemset A 2 A 1 denote as WS  A 2 A 1 a subset of A 2 222s WUN-set, which is defined as follows  WS  A 2 A 1  pre k  weight k  a node registering A 1 which is an ancestor of the node corresponding to pre k  weight k  Example 7 According to Example 6, we have WS  E  2, 3 3.68 WS  A 3, 1, 2.79\, \(6, 4, 0.67\} and WS  D  5, 2, 0.56 And as shown in Table 3B, item E  is before A and A is before D according to the I 1 ordering. We apply Definition 7 to compute WS  DA s follows Scan all WUN-codes of WS  D  With \(4, 0, 1.94\use node A 3, 1, 2.79\ is an ancestor of node D 4, 0, 1.94\o insert \(4, 1.94\o WS  DA  With \(5, 2, 0.56\: Beca use there isn\222t any node A which is an ancestor of node D 5, 2, 0.56\o don\222t insert \(5, 0.56\into WS  DA  Finally, we have WS  DA 4, 1.94 Similarly, we have WS  DE 5, 0.56 Definition 8 WUN-set of k itemsets k 3\et XA 1 and XA 2 be two k 1\msets with the same prefix X such that A 1  is before A 2 according to the I 1 ordering WS  XA 1 d WS  XA 2 two WUN-sets associated with XA 1 and XA 2  respectively. The WUNset associated with XA 2 A 1 called WS  XA 2 A 1 efined as intersection of WS  XA 1  WS  XA 2 That is WS  XA 2 A 1  WS  XA 1   WS  XA 2  Example 8 According to Example 7, we have WS  DA  4, 1.94\and WS  DE 4, 1.94\\(5, 0.56 And according Definition 8 we have WS  DAE  WS  DA   WS  DE 4, 1.94 Theorem 3 Given a k itemset X  k 2\nd the WUN-set of X is WS  X  The wus value of itemset X is calculated as follows      4 Proof Let itemset X  A m A m-1  A 1 where A i is before A i+1 in the order of I 1 and let \(x i w i be a WUN-code in the WUNset of X according to Definitions 7-8 we have the following conclusions a\here must be a node registering A m having a WUNcode with the same x i  b w i is the total twu values of all transactions containing X and passing the sub-tree with the corresponding node registering A m as the root T i is the set of transactions containing X and passing the sub-tree which has the root as A m  After passing root A m each transaction of T i then goes through the other nodes in the sequence A m-1 A m-2  A 2 until the end of A 1 When passing nodes, the twu value of the transaction is added into the weight of nodes. Therefore according to \(b\have  c Let T  X be the set of all transactions containing itemset X  according to \(a\have   d According to formula \(2\ \(c\and \(d\ we have       Theorem 3 is thus proven Null  0  6   B 4.35  1  5   E 3.68  2  3   A 0.67  6  4  A 2.79  3  1   D 0.56  5  2  D 1.94  4  0   2016 IEEE International Conference on Systems, Man, and Cybernetics € SM\C 2016 | October 9-12, 2016 € Budapest, Hungary SMC_2016    001367 


 Example 9 According to Example 7, we have WS  DE 5, 0.56 So, we have wus  DE 1.94 + 0.56\ / 4.35 0.57 Theorem 4 Given an itemset P and item i  if  then for every itemset X satisfies  we have    Proof 1. First, if  it means that a transaction containing P will also contain i  We prove this as follows According to Definition 3, due to  so we have    a Without loss of generality, set   where T 1  is the set of the transactions containing both P and {i T 2 is the set of the transactions containing P and not containing i  Due to we have   b Because T 1 is the set of the transactions containing both P  and i and according to \(a\ we have   c Assume that there exists a transaction containing P but not containing i so and  Then according to \(b\, we have   d Due to \(c\ith \(d\ the assumption is wrong Such that there does not exist the transaction containing P that does not contain i In other words, all the transactions containing P must also contain i  2. Give a transaction t containing  it means it must contain A and P According to part 1 proven above t containing P must also contain i So we have    Thereby leading to    So, Theorem 4 is proven Theorem 4 will be used to reduce the search space by quick determining wus values of itemsets without implementing WUN-sets intersections Example 10 According to Example 6-7, we have WS  D 4, 0, 1.94\, \(5, 2, 0.56 WS  DA 4, 1.94  WS  DE 5, 0.56 Since wus  D 1.94 + 0.56 sumtwu 2.5/4.35 wus  DE we apply Theorem 4 to determine wus  DAE  wus  DA 1.94/4.35 without identifying WS  DAE  IV  THE  ALGORITHM  FOR  FAST  MINING  FWUI We use the set-enumeration tree [18 in  ord e r t o sim p lify  the mining FWUI process. For example, with QDB in Table 3 we have a set-enumeration tree like Figure 2. We note that when traveling the set-enumer ation tree the prefixes of itemsets in a branch are the same Therefore, in order to save memory, we don\222t need to save all of the itemsets, and instead just saving the same prefix and the list of last items is enough For example, consider the tree in Figure 2, to present the class of itemsets DA  DE  DB we need only save the prefix D and the list of last items A  E  B   Figure 2  The set-enumeration tree of QDB in Table 3 Applying the definitions and theorems presented in the previous section, we propose the WUN-Miner algorithm for mining FWUI from QDB, as shown in Algorithm 2 Algorithm 2  WUN-Miner algorithm  Input  The weighted database QDB and a threhold minwus Output FWUI the set of all frequent weighted utility itemsets Method name WUN-Miner_Algorithm  QDB  minwus  1  Call Construction_WUN_Tree  QDB  minwus generate Tree and I 1 2  Scan Tree to generate WUN-sets of items in I 1 3  Let FWUI I 1 4  Create WUS_2FWUI float I 1 size I 1 size 5  Scan the WUN-tree by the pre-order traversal 6  for each node N registering item i x do 7  for each ancestor of N  N a registering item i y do 8    N  weight 9  for x = I 1 size downto 2 do 10  Pre 2   i x  11  L 2   12  for y =x1 downto  1  do 13  if     minwus sumtwu   then 14  L 2   i y 15  FWUI   i x i y 16   1-FWUI_Intersection    17  if |L 2 0 then 18  Call Find_FWUI  Pre 2  L 2   19  return FWUI  Function 1-FWUI_Intersection  WS1  WS 2  20  WS3   21  x 1 22  while x   WS1 do 23  check false 24  y 1 25  while y   WS2   check false\do 26  if WS1 y  pre  WS2 x pre and WS1 y pos  WS2 x pos hen 27  check true 28  y  29  if check true then 30  WS3   WS1 x pre  WS1 x weight  31  x  32  return WS3  Procedure Find _ F W U I  Pre k  L k  S k  33  Pre next  Pre k 34  for i  L k size downto 2 do 35   Pre next  i 36   L next  37   S next  L k 38  for j  i 1 downto 1 do 39   WS ij  WS i   WS j 40  if wus  WS ij  minwus then 41  if wus  WS ij  wus  WS i  42   S next  j 2016 IEEE International Conference on Systems, Man, and Cybernetics € SM\C 2016 | October 9-12, 2016 € Budapest, Hungary SMC_2016    001368 


 43  if wus  W S ij  wus  W S i  44   FWUI  Pre k   L i   L j  45   L next L j 46  if S next  then Find_FWUI_notWS  Pre next  S next  47  if L next  then Find_FWUI  Pre next L next  S next  48   remove last item of Pre next  49  Pre next L 1 50  if S k then Find_FWUI_notWS  Pre next  S k  Procedure Find_FWUI_notWS  Pre  S  51  Childs all subset of S  52  for each s Childs do FWUI  Pre s   The WUN-Miner algorithm works as follows: First, build WUN-tree and generate WUN-sets of 1-FWUIs. Next generate WUN-sets of 2-FWUI s and then travel the setenumeration tree and apply the WUN-sets intersection to determine the WUN-set of k itemset k  3\ from the WUNsets of two associated k 1\msets. In the process of computing the WUN-set, apply Theorem 3 and Theorem 4 to find and update the set of FWUI V  EXPERIMENTAL  RESULTS All experiments presented in this section were performed on a HP laptop with an Intel Core i5 2.5 GHz, and 8GBs of Ram, running on Windows 7 operating system, with the Visual C# 2012 programming language We made experiments on four databases as show in Table 4. In this, three databases Accidents, Connect and Retail were downloaded from http://fimi.cs.helsinki.fi/data and modified by adding a random value in the range of 1 to 10 for each item corresponding to its quantity in each transaction, and creating one table to store the weight values of items \(random values in the range of 1 to 10\. The remaining database Sale_Fact_Sync is from Foodmart2000 in SQL2000. We compared the WUNMiner algorithm with the recent algorithms MWIT-FWUI [2  and MBiS-FWUI [1 with M W ITF WUI bein g  m o re  effective with dense databases, and MBiS-FWUI more effective with sparse databases Table 4  Summary of the databases Database Number of items Number of transactions Average length of transactions Remark Accidents 468 340,183 33.8 Modified Connect 130 67,557 43 Modified Retail 16,470 88,162 10.3 Modified S ale_Fact_Sync 1,559 62,609 4.3 A  Comparison of running time Figure 3  Runtime on Accident database Figure 4  Runtime on Connect database Figure 5 Runtime on Retail database Figure 6 Runtime on Sale_Fact_Sync database  The experimental results in Figures 3-6 show that WUNMiner runs faster than MWIT-FWUI and MBiS-FWUI on all kinds of databases \(dense and sparse B  Comparison of memory usage Figure 7 Memory usage on Acciden t database Figure 8 Memory usage on Connect database Figure 9 Memory usage on Retail database Figure 10 Memory usage on Sale_Fact_Sync database Figures 7-10 show the memory usage of WUN-Miner compared to MWIT-FWUI an d MBiS-FWUI when working with the experimental databases. It can be noticed that WUN0 1000 2000 90 80 70 60 45 35 Time\(s minwus WUN-Miner MWIT-FWUI MBiS-FWUI 0 500 1000 96 94 92 90 85 80 Time\(s minwus WUN-Miner MWIT-FWUI MBiS-FWUI 0 100 200 300 400 2 0.8 0.4 0.2 0.08 0.04 Time\(s minwus WUN-Miner MWIT-FWUI MBiS-FWUI 0 20 40 60 80 100 0.04 0.02 0.01 0.008 0.006 0.004 Time\(s minwus WUN-Miner MWIT-FWUI MBiS-FWUI 0 200000 400000 90 80 70 60 45 35 Memory\(Kb minwus WUN-Miner MWIT-FWUI MBiS-FWUI 0 50000 100000 150000 96 94 92 90 85 80 Memory\(Kb minwus WUN-Miner MWIT-FWUI MBiS-FWUI 0 50000 100000 150000 200000 2 0.8 0.4 0.2 0.08 0.04 Memory\(Kb minwus WUN-Miner MWIT-FWUI MBiS-FWUI 0 20000 40000 60000 0.04 0.02 0.01 0.008 0.006 0.004 Memory\(Kb minwus WUN-Miner MWIT-FWUI MBiS-FWUI 2016 IEEE International Conference on Systems, Man, and Cybernetics € SM\C 2016 | October 9-12, 2016 € Budapest, Hungary SMC_2016    001369 


 Miner uses less memory than MWIT-FWUI and MBiS-FWUI on dense databases Accident and Connect. In contrast, for sparse database, such as Retail and Sale_Fact_Sync, WUNMiner uses more memory than MBiS-FWUI. The reason is that the fragmentation of data on sparse databases leads to an inefficient compression of data on WUN-tree, especially with a very small threshold VI  CONCLUSIONS  AND  FUTURE  WORK In this paper, we develop the WUN-Miner algorithm for fast mining FWUI from QDB based on the WUN-set structure an extension of Nodeset structure  Fi rst we i m pl em ent t h e  compression and representation of data on the WUN-set structure while ensuring the down ward closure property. Then some theorems are proposed for fast computing or determining immediately the wus values of itemsets, and thus mining FWUI by using the set-enumeration tree experimental results on both sparse and dense databases show that the proposed algorithm is more efficient than existing methods of mining FWUI In the future work, we are going to improve and apply the Nodeset structure for mining data on the others types of databases, such as incremental database or hierachical database REFERENCES   1  R. Agraw a l and R. Srikant Fast Algorith m s f o r M i ning Association Rules," in Proceedings of the 20th inte rnational Conference on Very Large Databases 1994, pp. 487-499   Z   Deng  Z  Wang and J. Jiang A new algorithm for fast mining frequent itemsets using N-lists Science China Information Sciences  vol. 55, no. 9, pp. 2008-2030, 2012   Z  Deng and S  L v   F ast m i ning frequent itemsets using Nodesets Expert Systems with Applications vol. 41, no. 10, pp. 4505-4512, 2014   Z Deng and S L v PrePost+: An  efficient N-listb ased algorithm for mining frequent itemsets via Chil dren-Parent Equivalence pruning Expert Systems with Applications vol. 42, no. 13, pp. 5424-5432, 2015   A E r win R P Gopalan and N  R. Achuthan, "CTU-Mine: an efficient high utility itemset mining algorithm us ing the pattern growth approach in Computer and Information Technology, 2007. CIT 2007. 7th IEEE International Conference on 2007, pp. 71-76   G Gr ahne and J. Zhu  F ast algor ithms for frequent itemset mining using FP-trees IEEE Transactions on Knowledge and Data Engineering vol 17, no. 10, pp. 1347-1362, 2005   J Han J. Pei, and Y Yin, "Min ing frequent pattern s without candidate generation," in SIGMOD '00 Proceedings of the 2000 ACM SIGMOD international conference on Management of data 2000, pp. 1-12 8  M. S. Khan M. M u yeba, and F Coenen, "A weighted utility framework for mining association rules," in Computer Modeling and Simulation 2008. EMS '08. Second UKSIM European Symposium on 2008, pp. 8792   G C L a n  T  P  Hong and H Y L ee  A n efficient appr oach for  findi ng  weighted sequential patterns from sequence databases A pplied Intelligence vol. 41, no. 2, pp. 439-452, 2014  G. Lan, T. Hong, a nd V. S. Tseng, "Discovery of high utility itemsets from on-shelf time periods of products Expert Systems with Applications vol. 38, no. 5, pp. 5851-5857, 2011  C L i n  T   Hong and W   L u An e ffective tree structure for mining high utility itemsets Expert Systems with Applications vol. 38, no. 6, pp 7419-7424, 2011  Y  L i u W  L i ao and A  Choud ha ry, "A two-phase algorithm for fast discovery of high utility itemsets," in A dvances in Knowledge Discovery and Data Mining 2005, vol. 3518, pp. 689-695  T  L u B  Vo H T  Nguy en, a nd T. Hong, "A New Method for Mining High Average Utility Itemsets," in Computer Information Systems and Industrial Management 2014, vol. 8838, pp. 33-42  C. Ma and J. Zhang, "DHUI A new algorithm for mining high utility itemsets," in M achine Learning and Cybern etics, 2009 International Conference on vol. 1, 2009, pp. 173-177  H Nguy en, B Vo  M. Nguy en  and T  Hong An I m p r oved Algor ith m  for Mining Frequent Wei ghted Itemsets," in Systems, Man, and Cybernetics \(SMC\, 2015 IEEE International Conference on 2015, pp 2579-2584  H Nguy en B  Vo, M Nguy en  and T. Hong, "MBiS: an efficient method for mining frequent weighted utility itemsets from quantitative databases Journal of Computer Science and Cybernetics vol. 31, 2015  G D Ra m k u m ar   S Ranka and S Tsur, "Weighted Association Rules Model and Algorithm," in Proceedings of the Fourth ACM Int\222l Conference Knowledge Discovery and Data Mining 1998  R Ry m on   S ear c h thr ough sy stem atic set enu m eration  in Proceeding of the Int'l Conference principles of knowledge representation and reasoning 1992, pp. 539-550  F T a o, F  Mur t ag h and M Far i d, "Weighted Association Rule Mining Using Weighted Support and Significance Framework," in K DD '03 Proceedings of the ninth ACM SIGKDD international conference on Knowledge discovery and data mining 2003, pp. 661-666  B Vo, F Coenen and B L e  A new method for mining Frequent Weighted Itemsets based on WIT-trees Expert Systems with Applications vol. 40, no. 4, pp. 1256-1264, 2013  B Vo, L  Hong and B. L e   DBV-Miner: A Dynamic Bit-Vector approach for fast mining fr equent closed itemsets Expert Systems with Applications vol. 39, no. 8, pp. 7196-7206, 2012  B Vo B  L e   and J J Jung  A treeb ased approach for mining frequent weighted utility itemsets," in Computational Collective Intelligence Technologies and Applications. Springer 2012, pp. 114-123  B Vo T   L e  F C o enen and T  Hon g   M ining fr eque nt item s ets using  the N-list and subsume concepts I nternational Journal of Machine Learning and Cybernetics pp. 1-13, 2014  U Yun and J J  L e ggett W FI M Weighted Frequent Itemset Mining with a weight range and a minimum weight," in Proceedings of the 2005 SIAM International Conference on Data Mining 2005, pp. 636-640  U Yun and J J  L e ggett W Span Weighted Sequential pattern mining in large sequence databases," in Proceedings of IEEE International Conference on Intelligent Systems 2006, pp. 512-517  M J  Zaki Scalable algor ithms for association mining I EEE Transactions on Knowledge and Data Engineering vol. 12, no. 3, pp 372-390, 2000  M. J  Z a ki and K. Gouda Fast ver t ical m i ning using diff sets  in K DD 03 Proceedings of the ninth ACM SIGKDD international conference on Knowledge discovery and data mining 2003, pp. 326-335   2016 IEEE International Conference on Systems, Man, and Cybernetics € SM\C 2016 | October 9-12, 2016 € Budapest, Hungary SMC_2016    001370 


114 continuous data stream that contains complex context with unpredictable unbounded volumes. A multi-level pattern mining solution   8 GB of main memory and running Microsoft Windows 7. Each approach was evaluated using a simulated dataset called a Sim which is generated by the open-source OpenMSC real-time emulat   predefined message sequences, correlations and temporal pattern parameters, OpenMSC generates realistic real-time pattern traces obfuscated with a large corpus of random noise events. The dataset consists of a total    205 599  and 12 information event types. Three candidate sequence patterns are  The performance of the NewMoment PrefixSpan, and HTPM algorithms is tested by running them on the test dataset  Results show that all the predefined patterns are found by the NewMoment, PrefixSpan and HTPM algorithms with different pattern forms. The time taken for the algorithms to complete their search given different Min-Sup values is shown in Figs. 9 and 10 The MinSup    Figs. 9 and 10  ferences in the time required for NewMoment  requirements for HTPM are much larger than  than NewMoment. With the decreasing MinSup this difference increases substantially Fig. 9 also shows that for relatively simple streams with a small number of event types and patterns, where streams can be adequately split into smaller transaction sets \(in this case  stream online in a near-real-time manner  C  This paper outlined the challenges that need to be solved to perform pattern mining in a Fig.8 Flowchart of Episode Analyzer Fig.9  Sup 


115 A This work was funded by the Enterprise Ireland Innovation Partnership Programme with   upported by the N ational N atural  Science Foundation of China \(No. 61373131  PAPD and CICAEET funds References   Z. J Fu, X M. Sun, Q Liu, L. Zhou, and J G. Shu 223Achieving Efficient Cloud Search Services Multi-keyword Ranked Search over Encrypted Cloud Data Supporting Parallel Computing,\224 IEICE Transactions on Communications, vol E98-B, no. 1, pp.190-200, 2015   S. D Xie, Y X W ang 223Construction o f T r ee Net work with Limited Delivery Latency in Homogeneous Wireless Sensor Networks,\224 Wireless Personal Communications, 2014, 78\(1 3   P  Gu o  J  W a n g  B L i S Y  L ee  223 A V a r ia b le  Threshold-value Authentication Architecture for Wireless Mesh Networks,\224 Journal of Internet Technology, 2014, 15\(6 4   T H. Ma, J J Zhou, M. L. T ang, Y Tian, A. ALDHELAAN, M. AL-RODHAAN, and S. Y. LEE, \223Social network and tag sources based augmenting collaborative recommender system,\224 IEICE transactions on Information and Systems, vol E98-D, no.4, pp. 902-910, Apr. 2015   B. Gu V  S. Sheng K Y  T ay  W  R omano and S Li, \223Incremental Support Vector Learning for Ordinal Regression,\224 IEEE Transactions on Neural Networks and Learning Systems, 2014, 26\(7 1403-1416 6   Du b lin Cit y U n iv e r sit y a n d E r ic sso n  E S t r e a m  Project, 2014. http:// www.estream-project.com  quency Counts over Data Streams,\224 In: Proceedings of the 28th International Conference on Very Large Databases \(VLDB Endowment 2002 pp. 346-57, 2002   J  H. Chang and W  S Lee 224Finding R ecent Fr equent Itemsets Adaptively over Online Data Streams,\224 In: Proceedings of the ninth ACM SIGKDD international conference on Knowledge discovery and data mining \(SIGKDD 2003 487-492, 2003 9   H. F Li and H. C hen, \224Mi ni ng Non-D eri v abl e  Frequent Item Sets over Data Stream,\224 Data Knowledge Engineering, vol. 68, no. 5, May 2009, pp. 481-498 10   S. K. T anbeer C. F Ahmed, B. S. Jeong and Y   K. Lee, \224Efficient Single-Pass Frequent Pattern  es, 2008, 179\(5 and architecture was presented to support automatic network management by discovering interesting patterns from Telecom Network Monitoring data. The architecture enables discovery or interesting patterns with data from different domains related to Telecom Network Monitoring. The architecture is composed of five sub-modules: Data Analyzer, Mining Controller, Data Miner, Combiner, and Episode Analyzer. Each sub-module is described in detail along with implementation approach  functions in turn. The approach leverages and combines frequent itemset discovery over data streams, association rule learning, frequent sequential pattern mining, and frequent temporal pattern mining techniques while also making use of distributed processing platforms to achieve high-volume throughput. To test the functionality of the model, three classic pattern mining algorithms, namely, NewMoment PrefixSpan, and HTPM, are implemented Their performances are compared in terms of different parameter settings by executing the algorithms with a simulated streaming dataset Fig.10  


116 ings of Second International Conference on Data Warehousing and Knowledge Discovery Springer, London, UK, pp. 317-326, 2000 21    S. de Amo, W P. Junior and A. Giacometti, MIL PRIT*: a constraint-based algorithm for mining temporal relational patterns, International Journal of Data Warehousing and Mining, 2008 4\(4 22    S Y. Wu and Y. L. Chen, Discovering hybrid temporal patterns from sequences consisting of point- and interval-based events, Data and Knowledge Engineering, 2009, 68\(11\: 13091330 23    Y L. Chen, S. Y. Wu and Y. C. Wang, etc, Discov ering multi-label temporal patterns in sequence database, Information Sciences, 2011, 181\(3 398-418 24    Ha doop Map/Reduce tutorial, http://hadoop apache.org/docs/r1.2.1/mapred tutorial.html 25    M Zaharia and M. Chowdhury, Spark: cluster computing with working sets in cloud comput ing, In: Proceeding of HotCloud 2010, \(2010 26    C Lucchese, S. Orlando, R. Perego, Fast and memory efficient mining of frequent closed itemsets, IEEE Transactions on Knowledge and Data Engineering, 2006, 18\(1    MSCgen-Based Control Plane Trace Emulator for Communication Networks, 2014. http openmsc.blogspot.com Biographies Zhiguo Qu received his PhD in Information Security from Beijing University of Posts and Telecommunica tions, China, in 2011. From 2012 to 2014, he worked as a post-doc researcher fellow at Dublin City Univer sity in Ireland. In July 2011, he joined Nanjing Univer sity of Information and Technology in China, where he is currently a lecturer in the College of Computer and Software. His research interests include quantum secure communication, quantum information hiding  hh@126.com    ment: Maintaining Closed Frequent Itemsets over a Stream Sliding Window,\224 In: Proceedings of Data Mining \(ICDM \22204 12    H. F Li, C. C. Ho and S. Y. Lee, \224Incremental Updates of Closed Frequent Itemsets over  Applications, 2009, 36\(2 13    P T. La, B. Le and B. Vo, \224Incrementally Building   2014, 41: 2703-2712 14    S Brin, R. Motwani and C. Silverstein, Beyond  to correlations,\224 In: Proceedings of the 1997 ACM SIGMOD international conference on Management of data \(SIGMOD 1997\, New York, NY, USA, pp. 265-276, 1997 15    R Srikant, R. Agrawal, Mining sequential  improvements, In: Proceedings of the 5th In  Technology, Avignon, France, pp. 3-17, 1996    Dayal, and M.-C. Hsu. Freespan: Frequent pat tern-projected sequential pattern mining, In Proceedings of 2000 International Conference on Knowledge Discovery and Data Mining KDD00\on, MA, pp. 355-359, 2000      pattern growth, In: Proceedings of the 17th International Conference on Data Engineering Heidelberg, Germany, pp. 215-226, 2001 18    M. J Zaki, SPADE: an efficient algorithm for mining frequent sequences, Machine Learning 2001, 42\(1 19    S. Y Wu and Y. L. Chen, Mining non-ambiguous temporal patterns for interval-based events IEEE Transactions on Knowledge and Data Engi neering, 2007, 19\(6 20    P S. Kam and A. W. C. Fu, Discovering temporal patterns for interval-based events, In: Proceed  


1856 IEEE TRANSACTIONS ON INFORMATION FORENSICS AND SECURITY VOL 11 NO 8 AUGUST 2016 TABLE V E XPERIMENTAL S ETTINGS B Security Under Data Owners Attacks Attack Via Chosen Random Ingredients In our solutions data owners are not required to exchange any plaintext or ciphertext i.e encryption of their private data In addition due to the use of the underlying homomorphic encryption scheme and secure comparison scheme the exact supports and conÞdences are concealed from any data owner However there is still a possible attack via chosen random ingredients A data owner may use ERVs random ingredients to tag some transactions and verify whether such a transaction contains a given itemset or not For example the data owner could compute an ERV with a customized random ingredient The random ingredientÕs bit length is longer than any other random ingredientÕs in the preprocessing stage For each received seemingly frequent itemset the data owner decrypts its ESVR and obtains the ESVRÕs random ingredient If the random ingredient matches the pattern of the customized random ingredientÕs most signiÞcant bits it is an indication that the ERV with the customized random ingredient has been used to compute the ESVR Thus the data owner knows the transaction associated with the ERV contains the itemset To prevent such an attack we carefully conÞgure the bit lengths of random ingredients An example is presented in Table V The random ingredients in  1  2  t are used to mask chosen random ingredients in ERVs Also in the preprocessing stage each data owner must verify c s  c z  c e and that ERVs are generated honestly with random ingredients of the right bit lengths In the last step of preprocessing stage the random ingredients of ERVs are veriÞed in an aggregated manner By examining the sum of these random ingredients data owners can be assured that any chosen random ingredient will be masked C Security of Underlying Homomorphic Encryption Scheme The security of underlying homomorphic encryption scheme depends on the hardness of solving nonlinear systems In the proposed mining solutions a number of plaintexts and their corresponding ciphertexts i.e c s  c z    i  t  i  1   are disclosed to the cloud Therefore the underlying homomorphic encryption scheme should be secure under known-plaintext attacks In our homomorphic encryption scheme to encrypt a plaintext m i and obtain the corresponding ciphertext c i  we require the use of two secrets q  s and a random ingredient r i  From a known  m i  c i  pair the attacker can get a nonlinear equation of three unknowns q  s  r i  s  q  r i  m i   c i From w known pairs the attacker can generate an underdetermined nonlinear system of w equations and the number of unknowns are w  2 If the attacker can solve this system he can learn the secret key of the encryption scheme Security Can Be Achieved by Increasing Hardness of Solving Above Nonlinear System Solving underdetermined nonlinear systems is NP-hard while solving overdetermined systems can be done in polynomial time The attacker may attack a nonlinear system by guessing the values of some unknowns  i f gues s i ng t h e c orrect v a l u es i s not v e ry hard The attacker can generate many overdetermined systems from the targeted underdetermined nonlinear system by xing some unknowns 3 unknowns for the system above to all possible values These unknowns will be viewed as constants in the generated systems By solving the generated overdetermined systems the attacker nds the solution to the targeted underdetermined nonlinear system To prevent such attacks we can conÞgure large ranges or bit lengths for q  s  r i to compound the challenges of guessing the correct values An example of the conÞguration is presented in Table V D Security of Underlying Secure Comparison Scheme The proposed secure comparison scheme is used in our solutions to conceal the exact support values and conÞdence values from the data owners From the correctness proof in Section IV-C we know that m i  0   q  1  2     m i  1  q       q  1  2 


LI et al  PRIVACY-PRESERVING-OUTSOURCED ASSOCIATION RULE MINING ON VERTICALLY PARTITIONED DATABASES 1857 Fig 4 Running time comparison  t  4and k  12 If  q  1  2 m could be any value in the range  0    Otherwise m couldbeanyvaluein   0   By observing   a data owner knows whether m  0 or not but m s range cannot be deduced As our design goal is to conceal exact supports it is sufÞcient to conceal m s value in many possible values In other words we do not need a secure comparison scheme to conceal more information VII P ERFORMANCE E VA L UAT I O N In this section we evaluate the computational complexity communication complexity and storage cost of our association rule mining and frequent itemset mining solutions In the evaluation we choose one of s s o l u t i ons and c l a s s i c nonprivacy-preserving algorithms as the baseline The former is chosen because it and our solutions achieve the same privacy level In contrast other solutions achieve lower privacy levels Classic algorithms are chosen as baselines because they are the most efÞcient known solutions A Computational Complexity 1 Comparing With Classic Algorithms We used the running time to evaluate the computational complexity To demonstrate the feasibility of our solutions we compare our solutions with classic non-privacy-preserving algorithms which are the most efÞcient known solutions We evaluated our solutions and three classic non-privacypreserving algorithms Apriori Eclat and FP-growth using two datasets retail and pumsb from 26  T h e r e tail d a taset from Tom Brijs contains anonymous retail market basket data in a Belgian retail store while the pumsb dataset contains census data for population and housing The retail and pumsb datasets contain 88,162 and 49,046 transactions respectively To simulate t data owners we vertically partitioned each dataset into t databases randomly Our solutions are implemented in JAVA and we use a JAVA implementation  of A p ri ori  Ecl a t a nd F P gro w t h algorithms in our experiments All implementations are singlethreaded implementations To ensure a fair comparison in all experiments machines playing the roles of cloud or data owner have the same hardware and software settings The settings and the parameters of our solutions are shown in Table V The results are shown in Figs 4 5 and 6 As the running time of association rule mining is only slightly higher than Fig 5 Running time under different data owner count t  k is xed to 16 Fig 6 Running time under different k  t is xed to 2 that of frequent itemset mining only the results of association rule mining are presented We show our solutions running time at the cloudÕs end i.e running time of mining and data owner owner side i.e running time of preprocessing and decrypting separately As expected our solutions are not as efÞcient as the most efÞcient algorithms  solutions of low privacy levels However they achieve a higher privacy level with an acceptable running time Compared with the fastest algorithmÕs running time the cloudÕs running time is about one order higher for most cases while data ownerÕs running time is very low This is the classic trade-off between privacypreserving and efÞciency From Figs 5 and 6 we also observe that running time changes with increasing values of k and t  The cloudÕs running time increases with t as d max increases with t and a larger d max results in larger ciphertext size and more computations The cloudÕs running time increases with k for the retail dataset but barely changes for the pumsb dataset The increase in running time for retail dataset is due to the increase in ctitious data However the pumsb dataset is very dense and the supports are already very high without including ctitious data Thus adding more ctitious data hardly changes the number of seemingly frequent itemsets and their supports We can also observe that data ownerÕs running time decreases 


1858 IEEE TRANSACTIONS ON INFORMATION FORENSICS AND SECURITY VOL 11 NO 8 AUGUST 2016 TABLE VI E STIMATED R UNNING T IME OF  s S OLUTION when t increases The reason is simple If the same joint database is vertically partitioned to more data owners each data ownerÕs dataset is smaller Preprocessing a smaller dataset requires less time Data ownerÕs running time doesnÕt increase with k either Such a phenomenon can also be explained using 16  s alg o r ith m f o r ad d i n g ctitio u s tr an sactions SpeciÞcally data ownerÕs running time is dominated by the time to run this algorithm which is hardly affected by changes in the values of k  In summary increasing t and k usually results in a higher running time at the cloud end without resulting in an increase in data ownerÕs running time 2 Comparing With the Solution Achieving the Same Privacy Level To the best of our knowledge the only existing privacy-preserving solution that does not leak sensitive information of the raw data is one of s frequent itemset mining solutions hereafter referred to as  s strong solution in this paper This solution cannot be used for association rule mining whilst we have solutions for both association rule mining and frequent itemset mining Similar to our solutions  s s t rong s o l u t i o n u s e s homomorphic encryption However it needs to use asymmetric homomorphic encryption scheme which is computationally expensive Reference  s s t rong s o l u t i o n r equi res a bout n  F encryptions as well as  n  T s   F homomorphic additions and scalar multiplications F is the number of frequent itemsets This solutionÕs running time is dominated by these expensive operations We evaluate its running time by estimating the required time to undertake the operations  see Table VI To estimate the running time we measure the speeds of two popular asymmetric additive homomorphic encryption schemes i.e Paillier Paillier and ElGamal implemented in Java and we r emark that ElGamal is the scheme suggested by T he s p eeds a re meas ured us i n g a machine of the same speciÞcations in our evaluations see Table V and so are the datasets and parameters Compared with the result of our solution in Fig 4 the running time of  s s t rong s o l u t i o n i s s e v eral orders of magnitude B Communication Complexity and Storage Cost Similar to most other solutions our solutions require constant communication rounds In the preprocessing stage some keys and parameters are shared among t data owners These keys and parameters can be sent to data owners in parallel In the mining stage all mining results can be sent to data TABLE VII T RANSACTION C OUNT OF J OINT D ATABASE R ETAIL  TABLE VIII T RANSACTION C OUNT OF J OINT D ATABASE P UMSB  owners in a communication round Therefore the number of communication rounds does not grow if t  frequent itemsets or association rules increases The communication trafÞc and storage cost in our solutions are dominated by the joint database size and the size of all ERVs Let n and n 012 be the transaction count of the joint database with and without ctitious transactions respectively Tables VII and VIII list the joint database size of two datasets under different settings of k and t  The joint database in our solutions contains ctitious transactions while the one in class algorithms does not We can observe from Tables VII and VII that the joint database size in our solutions is a few times larger and the size grows with k and t  The number of ERVs is at most n 012  t  O  n  t   A ciphertextÕs size is O   d max   O   t  where  is the security parameter typically 80 Normally d max can be viewed as a small constant d max is not larger than 4 for most settings in the above experiments and the largest d max observed in the above experiments is 6 Let m be the average transaction size Then the communication trafÞc and and storage cost in our solutions are both O  n  m  n    t  d max   The trafÞc and cost in classic algorithms are O  n  m   For most reasonable transaction sizes our solutions resulted in an in communication trafÞc and storage cost only by a few times The storage cost in  s s t rong solution is O  n  m   while the communication trafÞc is O  T s  t  F  C  where F is the number of frequent itemsets C is the ciphertext size in 13  s str o n g so lu tio n  wh ich i s at least 2048 2048 bits In many settings our solutions trafÞc is not any higher than the trafÞc of s s t rong solution VIII R ELATED W ORK A Privacy-Preserving Association Rule Mining and Frequent Itemset Mining on Vertically Partitioned Databases In t h e  rs t w ork t o i dent i f y a nd addres s p ri v a c y i s s u es in vertically partitioned databases a secure scalar product protocol is presented and used to build a privacy-preserving frequent itemset mining solution Association rules can then be found given frequent itemsets and their supports Since 


LI et al  PRIVACY-PRESERVING-OUTSOURCED ASSOCIATION RULE MINING ON VERTICALLY PARTITIONED DATABASES 1859 the publication of this seminal work a number of privacypreserving association rule mining or frequent itemset mining solutions have been published in the literature see 11   1 3   28]Ð[31 The most relevant work is the privacy-preserving association rule mining solution presented in I n t hi s s ol ut i on a d at a owner known as the master is responsible for the mining The other data owners known as slaves insert ctitious transactions to their respectiv e datasets and send the datasets to the master Each data owner will also send his set of real transactions IDs to a semi-trusted third-party server The third-party server is assumed not to be colluding with any data owner but it cannot be trusted to hold the raw data The master generates association rule candidates from the joint database containing ctitious data For each rule candidate X  Y  the master sends the ID lists of the transactions containing X  Y and the transactions containing X to the third-party server The server veriÞes if the rule is qualiÞed or not Similar to our solutions a semi-trusted third-party is utilized for the mining However unlike our solutions a data owner i.e the master does the majority of the computational work Therefore we can hardly say that such a solution is an outsourced mining solution Though ctitious data are added in datasets to lower data usability the master is able to learn signiÞcant information about other data owners raw data from the received datasets In cont rast our solutions do not leak such information as we do not rely on one particular data owner to undertake the computations and we also encrypt the datasets All existing solutions with the exception of  d o not utilize a third-party server to server to compute the mining result Some solutions  13 us e a s y mmet r i c encryption to compute the supports of itemsets while other solutions 28]Ð[30 us e a s ecure s cal ar product p rot o col  a s et intersection cardinality protocol or a secret sharing scheme to perform these computations A majority of these solutions expose exact supports to all data owners resulting in the leakage of information about the data owners raw data  The only exception is one of s s o l u t i ons  I n  13 t here are two privacy-preserving solutions for frequent itemset mining The rst solution exposes exact supports which is not desirable The second solution does not expose exact supports However association rules cannot be mined based on the result of second solution because conÞdences cannot be computed without the exact supports In addition this solutionÕs method cannot be used to mine association rules because securely computing conÞdence is more complicated than computing support In comparison with this solution our frequent itemset mining solutionÕs computational complexity is signiÞcantly lower Our solutions do not expose exact supports or conÞdences to data owners Different from existing solutions based on homomorphic encryption we use symmetric homomorphic encryption instead of asymmetric homomorphic encryption and the manner in which we use homomorphic encryption also differs from existing solutions In our approach we use homomorphic encryption to create ERVs and build our secure outsourced comparison scheme B Privacy-Preserving Outsour ced Association Rule Mining and Frequent Itemset Mining Privacy-preserving outsourced frequent itemset mining and association rule mining have been studied in the setting of a single data owner  19]Ð[21 I n e xi s t i n g s ol ut i ons  the data owner outsources thei r data and the mining task to the cloud but at the same time wish to keep the raw data secret from the cloud Generally data items in the database are encrypted using a substitution cipher prior to outsourcing Reference  propos ed a s ol ut i o n t o c ount er frequency analysis attack on substitution cipher However a later work demons t r at ed t h at 19 s s o l u t i o n i s not s ecure Giannotti et al proposed a solution based on k anonymity frequency   21 T o c ount er frequenc y a nal y s i s a t t ack the data owner inserts ctitious transactions in the encrypted database to conceal the item frequency After inserting the ctitious transactions any item in the encrypted database will share the same frequency with at least k  1 other items The data owner sends the encrypted database of both the real and ctitious transactions to the cloud The cloud runs a classic frequent itemset mining algorithm and returns the result frequent itemsets and their supports to the data owner The data owner revises these itemsets supports by subtracting them with these itemsets corresponding occurrence counts in the ctitious transactions respectively Finally the data owner decrypts the received itemsets with the revised supports higher than the frequency threshold an d generates association rules based on found frequent itemsets Our solutions use their techniques to conceal the raw data from the cloud and mitigate frequency analysis attack that can be undertaken by the cloud Using these techniques alone however is not sufÞcient to protect data privacy in the vertically partitioned database setting To cancel out ctitious transactions both 21 an d  1 6  require the data owner to count itemset occurrences in ctitious transactions In the vertically partitioned database setting data owners are unable to perform such calculation using the techniques described in and  16 I n our s o l u t i ons  the cloud rather than the data owners cancels out ctitious transactions in a privacy-preserving manner and the underlying techniques are our homomorphic encryption secure comparison and ciphertext tag schemes Another recent work  propos ed a p ri v a c y pres e rving outsourced association rule mining solution based on predicate encryption This solution is resilient to chosen-plaintext attacks on encrypted items but it is vulnerable to frequency analysis attacks Applying this solution to vertically partitioned databases will also result in the leakage of the exact supports to data owners In this paper our adversary model is different We assume the cloud has knowledge of the item frequencies instead of chosen plaintext-ciphertext pairs and our solutions are resilient to frequency analysis attacks C Other Related Work Other than the settings of vertically partitioned databases and cloud/third-party-aided mining privacy-preserving frequent itemset mining and association rule mining have 


1860 IEEE TRANSACTIONS ON INFORMATION FORENSICS AND SECURITY VOL 11 NO 8 AUGUST 2016 been studied in the settings of horizontally partitioned databases   33]Ð[35 d at a publ i s hi ng 36 and d i f ferent i a l privacy  T hes e s e t t i ngs are b e yond t h e s cope of t h i s paper  IX C ONCLUDING R EMARKS In this paper we proposed a privacy-preserving outsourced frequent itemset mining solution for vertically partitioned databases This allows the data owners to outsource mining task on their joint data in a privacy-preserving manner privacypreserving manner Based on this solution we built a privacypreserving outsourced association rule partitioned databases Our solutions protect data ownerÕs raw data from other data owners and the cloud Our solutions also ensure the privacy of the mining results from the cloud Compared with most existing solutions our solutions leak less information about the data owners raw data Our evaluation has also demonstrated that our solutions are very efÞci ent therefore our solutions are suitable to be used by data owners wishing to outsource their databases to the cloud but require a high level of privacy without compromising on performance To realize our solutions an efÞcient homomorphic encryption scheme and a secure outsourced comparison scheme were presented in this paper Both schemes have potential usage in other secure computation applications such as secure data aggregation beyond the data mining solutions described in this paper Demonstrating the u tility of the p roposed homomorphic encryption scheme and outsourced comparison scheme in other settings will be the focus of future research A PPENDIX I NSERTING F ICTITIOUS T RANSACTIONS  s A LGORITHM  An algorithm to counter frequency analysis attacks on the outsourced database encrypted with a substitution cipher was proposed in F or the purpos e o f c oncealing t he item frequency this algorithm inserts ctitious transactions in the database to be oursourced The goal is to ensure that each item share the same frequency with at least k  1 items The algorithm is summarized as follows also see  Firstly the data owner scans the database to count each individual itemÕs support  Secondly the data owner groups items considering the supports and co-occurrence of items The data owner sorts items in decreasing order of support Starting from the rst of the sorted item list i.e the item with the highest support the data owner assigns every k adjacent items to a new created group If there are less than k unassigned items remaining these items will be assigned to the last created group The data owner swaps items from different groups to ensure that all items in the same group do not occur together in the same transaction  Thirdly for each item in each group the data owner calculates the difference between the itemÕs support and the highest support in the group The difference is deÞned as the noise of the item  Fourthly to achieve k anonymity frequency the data owner generates ctitious transactions based on the result of the third step The number of an itemÕs occurrences in the ctitious transactions is equal to its noise calculated in the third step After inserting the ctitious transactions all items in the same group share the same support A CKNOWLEDGMENT The authors would like to thank Quach Vinh Thanh the Associate Editor and the three anonymous reviewers for providing constructive and gen erous feedback Despite their invaluable assistance any erro rs remaining in this paper are solely attributed to the authors R EFERENCES  T  B rijs  G  S winnen K V a nhoof a nd G W e ts   Us ing a s s o ciation r ules for product assortment decisions A case study in Proc SIGKDD  1999 pp 254Ð260  S  E  B ros s e tte A  P  S prague J  M  H ardin K B W a ites  W  T  J ones  and S A Moser Association rules and data mining in hospital infection control and public health surveillance J Amer Med Inform Assoc  vol 5 no 4 pp 373Ð381 1998 3 B  M obas h er  H  D ai T  L uo and M  N akaga w a E f f ecti v e p er s onalization based on association rule discovery from Web usage data in Proc WIDM  2001 pp 9Ð15  C  C reighton and S  H anas h Mining g ene e xpres s i on databas e s f or association rules Bioinformatics  vol 19 no 1 pp 79Ð86 2003 5 X  Y in and J  H an  CP A R  C las s i  cation b as ed on pr edicti v e as s o ciation rules in Proc SIAM SDM  2003 pp 1Ð5 6 R  A gr a w al and R  S r i kant  F a s t algor ithm s f o r m ining a s s o ciation rules in Proc VLDB  1994 pp 1Ð13 7 M  J  Z aki S calable algor ithm s f o r a s s o ciation m ining  IEEE Trans Knowl Data Eng  vol 12 no 3 pp 372Ð390 May/Jun 2000  J  H an J  P ei a nd Y  Y i n Minin g frequent patterns without candidate generation in Proc ACM SIGMOD  pp 1Ð12 2000 9 J  V aidya and C  C lif ton P r i v a c y pr es er ving as s o ciation r ule m ining i n vertically partitioned data in Proc SIGKDD  2002 pp 639Ð644  M Kantarcioglu a nd C Clifton Pri vacy-preserving distributed mining of association rules on horizontally partitioned data IEEE Trans Knowl Data Eng  vol 16 no 9 pp 1026Ð1037 Sep 2004  B Rozenber g and E  G udes   A s s o ciation r ules m i ning in v e rtically partitioned databases Data Knowl Eng  vol 59 no 2 pp 378Ð396 2006  J  Z h an S  M atwin and L  C hang Pri v a c y pres e rving c ollaborati v e association rule mining in Proc DBSEC  2005 pp 153Ð165  S Z hong Pri v a c y pres e rving a lgorithm s for d is trib uted m i ning of frequent itemsets Inf Sci  vol 177 no 2 pp 490Ð503 2007  P  P a illier  P ublick e y cr yptos ys tem s bas e d o n c om pos ite de gr ee r e s i duosity classes in Proc EUROCRYPT  1999 pp 223Ð238  R Cram er  R  G ennaro a nd B Schoenm ak ers   A s ecure and optim ally efÞcient multi-authority election scheme Eur Trans Telecommun  vol 8 no 5 pp 481Ð490 1997  F  G i annotti L  V  S  L a ks hm anan A  M onr eale D  P e dr es chi and H Wang Privacy-preserving mining of association rules from outsourced transaction databases IEEE Syst J  vol 7 no 3 pp 385Ð395 Sep 2013  B Dong R L i u and H  W ang Res ult i nte g rity v e riÞcation o f outsourced frequent itemset mining in Proc 27th Annu IFIP WG Conf Data Appl Secur Privacy DBSec  Newark NJ USA Jul 2013 pp 258Ð265 O A v a ilable http://dx doi o r g 10 1007/978-3-64 239256-6_17  R L i u a nd H W a ng Res ult i nte g rity v e riÞcation o f outs ourced pri v ac ypreserving frequent itemset mining in Proc SIAM Int Conf Data Mining  Vancouver BC Canada Apr./May 2015 pp 244Ð252 Available http://dx.doi.org/10.1137/1.9781611974010.28  W  K W ong D W  Cheung E  Hung B Kao and N  M am oulis  Security in outsourcing of association rule mining in Proc VLDB  2007 pp 111Ð122  I  M o llo y  N  L i  a nd T  L i   O n the  in s ecur ity and  im  p r acticality of outsourcing precise association rule mining in Proc ICDM  Dec 2009 pp 872Ð877  F  G i annotti L  V  S  L a ks hm anan A  M onr eale D  P e dr es chi and W Wang Privacy-preserving data mining from outsourced databases in Proc CPDP  2011 pp 411Ð426 


LI et al  PRIVACY-PRESERVING-OUTSOURCED ASSOCIATION RULE MINING ON VERTICALLY PARTITIONED DATABASES 1861 22 FIPS Publication 180-1 Secure Hash Standard  Nat Inst Standards Technol Gaithersburg MD USA 1995 23 FIPS Publication 180-2 Secure Hash Standard  Nat Inst Standards Technol Gaithersburg MD USA 2002  T  E l Gam a l  A public k e y c ryptos ystem and a signature scheme based on discrete logarithms IEEE Trans Inf Theory  vol 31 no 4 pp 469Ð472 Jul 1985 O A v a ilable http://dx doi o r g 10 1109 TIT.1985.1057074  N  Cour tois  A  K lim o v  J  P atar in a nd A  S h am ir   E f  c ient algor ithm s for solving overdeÞned systems of multivariate polynomial equations in Proc EUROCRYPT  2000 pp 392Ð407  P  F ournier V iger  Real-life Datasets in SPMF Format  accessed on Apr 6 2016 O A v a ilable http://w w w  philippe-fournier viger.com/spmf/index.php?link=datasets.php  P  F ournier V iger  A  G om ariz T  G ueniche A Soltani C  W  W u and V S Tseng SPMF A Java opensource pattern mining library J Mach.Learn.Res  vol 15 no 1 pp 3389Ð3393 2014  J  V a idya and C  C lif ton S ecur e s e t i nter s ection car dinality w ith application to association rule mining J Comput Secur  vol 13 no 4 pp 593Ð622 2005  X Ge L  Y an J  Z hu and W  S hi  Pri v ac y-pres erving dis t rib u ted association rule mining based on the secret sharing technique in Proc SEDM  Jun 2010 pp 345Ð350  R K h ar at M  K um bhar  and P  B ham r e E f  cient p r i v a c y pr es er ving distributed association rule mining protocol based on random number in Intelligent Computing Networking and Informatics  Raipur Chhattisgarh India Springer 2014 pp 827Ð836  C Dong and L  C hen  A f a s t s ecure dot product p rotocol with application to privacy preserving association rule mining in Proc 18th PaciÞc-Asia Conf Adv Knowl Discovery Data Mining PAKDD  Tainan Taiwan May 2014 pp 606Ð617 Available http://dx.doi.o rg/10.1007/978-3-319-06608-0_50  J  L a i Y  L i  R  H  D eng J  W e ng C Guan a nd Q Y a n T o w ards semantically secure outsourcing of association rule mining on categorical data Inf Sci  vol 267 pp 267Ð286 May 2014  T  F ukas a w a  J  W ang T  T a kata a nd M  M i yazaki  A n e f f ecti v e distributed privacy-preserving data mining algorithm in Proc 5th Int Conf IDEAL  2004 pp 320Ð325  C Su and K  S akurai  A d is trib ut ed privacy-preserving association rules mining scheme using frequent-pattern tree in Proc ADMA  2008 pp 170Ð181  M  G  K a os ar  R  P aulet and X  Y i S ecur e tw opar t y a s s o ciation r ule mining in Proc ACSW-AISC  2011 pp 15Ð22  J  L  L in and J  Y  C L i u Pri v a c y pres erving item s et m i ning through fake transactions in Proc ACM Symp Appl Comput SAC  Seoul South Korea Mar 2007 pp 375Ð379 A v a ilable http://doi.acm.org/10.1145/1244002.1244092  B N K e s h a v am urthy  A M Khan a nd D T o s hniw a l Pri v a c y preserving association rule mining over distributed databases using genetic algorithm Neural Comput Appl  vol 22 no 1 pp 351Ð364 2013 Lichun Li received the bachelorÕs degree in information engineering from the Beijing University of Posts and Telecommunications in 2002 the masterÕs degree in communication and information systems from the China Academy of Telecommunication Technology in 2006 and the Ph.D degree in computer science from the Beijing University of Posts and Telecommunications in 2009 He is currently a Postdoctoral Research Fellow with the INFINITUS Laboratory School of Electrical and Electronic Engineering Nanyang Technological University Singapore His research interests include privacy and security in cloud and big data Rongxing Lu SÕ09ÐMÕ11ÐSMÕ15 received the Ph.D degree in computer science from Shanghai Jiao Tong University Shanghai China in 2006 and the Ph.D degree in electrical and computer engineering from the University of Waterloo Waterloo ON Canada in 2012 From 2012 to 2013 he was a Postdoctoral Fellow with the University of Waterloo Since 2013 he has been an Assistant Professor with the School of Electrical and Electronic Engineering Nanyang Technological University Singapore His research interests include computer network security mobile and wireless communication security and applied cryptography He was a recipient of the Ca nada Governor General Gold Metal Kim-Kwang Raymond Choo SMÕ15 received the Ph.D degree in information security from the Queensland University of Technology Australia in 2006 He is currently a Cloud Technology Endowed Associate Professor with the University of Texas at San Antonio an Associate Professor with the University of South Australia and a Guest Professor with the China University of Geosciences He was named one of 10 Emerging Leaders in the Innovation category of The Weekend Australian Magazine MicrosoftÕs Next 100 series in 2009 and is a recipient of the ESORICS 2015 Best Research Paper Award the 2015 Winning Team of GermanyÕs University of Erlangen-Nuremberg Digital Forensics Research Challenge the 2014 Australia New Zealand Policing Advisory AgencyÕs Highly Commende d Award the 2010 Australian Capital Territory Pearcey Award the Fulbright Scholarship in 2009 the 2008 Australia Day Achievement Medallion and the British Computer SocietyÕs Wilkes Award Anwitaman Datta is an Associate Professor with the School of Computer Science and Engineering NTU Singapore He lead s the Self and Algorithmic aspects of Networked Distributed Systems Research Group at NTU Jun Shao received the Ph.D degree from Shanghai Jiao Tong University Shanghai China in 2008 He was a Postdoctoral Fellow with the School of Information Sciences and Technology Pennsylvania State University State College PA USA from 2008 to 2010 He is currently a Full Professor with the Department of Information Security Zhejiang Gongshang University Hangzhou China His research interests include network security and applied cryptography 


