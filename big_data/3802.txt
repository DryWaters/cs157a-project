Proceedings of the Second International Conference on hlachine Learning and Cybernetics Xi 2-5 November 2003 AN EQUIVALENCE-CLASS-BASED ALGORITHM FOR THE MAXIMAL NUMBER OF CANDIDATE ITEMSETS WN-LAN WANG, ZENG-ZHI LI, KE-WEN QU Department of Computer Science and technology, Xi'an Jiaotong University, Xi'an 7 10049, China E-MAIL: wangyunlan@263 .net Abstract Mining association rules is one of the most important problems in the field of data mining 
To devise an algorithm that can reduce the number of database scans and without taking the risk of getting a combinatorial explosion of the number of candidate itemsets we must study what is the maximal number of candidate itemsets that can be generated In this paper the theory of itemset equivalence class is proposed The property of itemset equivalence class is explored and some useful lemmas are presented Based on the 
foregoing theory and Apriori property we derive some theorems about the maximal number of candidate itemsets Based on these theorems we devise an algorithm EC for calculating the maximal number of candidate itemsets Furthermore, the performance study shows that algorithm EC is more accurate than algorithm KK and the cost for computing the maximal number is negligible compared to the cost of the complete algorithm for association rules Keywords Knowledge Discovery 
Databases Data Mining Association Rules Candidate Itemsets 1 Introduction Among the various data mining problems mining of association rules is an important one This problem has been studied substantially with many interesting and efficient data mining algorithms reported. Apriori  11 is the most famous algorithm for association rules Many algorithms for association rules are the improvements on Apriori. Algorithm DHP 2 and IHP 3 use hash tables to prune some of the candidate itemsets and use transaction trimming and pruning method to trim the transaction database But Apriori, DHP and IHP tend to suffer from the inherent problem of need multiple scans of database 
Several algorithms try to reduce the number of database scans. For example, FP-tree 4 proposes a novel frequent pattern tree structure and develops an efficient FP-tree based mining method which only needs to scan the database once but it is only suitable for small databases The Partition algorithm 5 obtains the support of the candidate itemsets by intersecting the TID-lists of the individual items in the candidate itemset. It also only needs to scan the database once However a major problem is that the size of the TID-lists would be too large to maintain when the number of the transactions in the database 
is very large. AprioriHybrid 6 uses Apriori in the initial iterations and switches to AprioriTid when the size of the encoding of the candidate itemsets is small enough to fit in main memory and there are fewer candidate itemsets in the current level than in the previous pass However the decision of switch to AprioriTid may be premature because the number of new candidate itemsets in the afterwards iterations can be growing exponentially FUP2 7 and SWF SI are incremental updating techniques for maintaining the association rules discovered when the database is updated. However, FUP2 tend to suffer from the inherent problem of the need of multiple database scans SWF is a sliding-window filtering algorithm for 
incremental mining which partitions the transactions database into several partitions and only needs to scan the updated database once But it will incur the huge size of the number of candidate itemsets From the describing above we consider that the incremental algorithm which can reduce the number of database cans and without taking the risk of getting a combinatorial explosion of the number of candidate itemsets may possess superior performance So the following combinatorial problem must be studied Given the current set of fiequent itemsets and at a certain iteration of the algorithm, what is the maximal number of candidate itemsets that can be generated in the passes yet to come? As far 
as we know KK algorithm is the one and only algorithm to address this problem, which is derived from the Kruskal-katona theorem lo The contribution of KK is to solve this problem by providing a combinatorial upper bound on the number of candidate itemets It is technical sound However it is not make the most of the Apriori property So the upper bound calculated by KK is not accurate enough The contribution of this paper is as follows 1 The 0-7803-7865-2/03/$17.00 02003 IEEE 272 


Proceedings of the Second International Conference on Machine Learning and Cybernetics Wan 2-5 November 2003 theory of itemset equivalence class is presented 2 An of A on S under R is defined as follows algorithm EC for the maximal number of candidate itemsets is presented which is based on the itemset AI XEsklX k,m A  It is obvious that equivalence class theory Furthermore the performance study shows the results calculated by EC are more accurate than that of KK  The remainder of the paper is organized as follows Lemma 2.2 is derived from lemma 2.1 It is the theory The theory of the itemset equivalence class is presented in for the number Of section 2 The algorithm EC for the maximal number of candidate itemsets is presented in section 3 The Lemma 2.2 Let s be a set of k-itemsets The  A and  sk  foundation Of Our itemsets performance study of the algorithm EC is reported in section 4 The conclusions are presented in section 5 2 Theory of Itemsets Equivalence Class Definition 2.1 k itemset Let I  i,,i  i be a set of items a k-itemset X is a set of items such that X E I and 1x1  k  For convenience the ith item of X is denoted as  and assume that X[i  X[j  when i j Definition 2.2 Relation R Let S be a set of k-itemsets VA,B E S  If llmlk  we define A B if and only if A[i  B[i for 15 i I m  If m  0 we define A Rk9 B Lemma 2.1 Relation Rk,m is an equivalence relation on the set of k itemset S  where 0 I m I k  Proof 1 Reflexive VA E Sk  according to definition 2 Symmetric Suppose A Rk B  If m=O  B Rk,m A  If 1 I m I k  B[i  A[i for 1 I i 5 m  According to definition 2.2 B R A  2.2 A Rk A  3 Transitive Suppose A R B and B Rk,m C If m=O A Rk C If I<mlk A[i]=B[i  C[i for 1 Ii I m  According to definition 2.2 A k,m  Definition 2.3  R equivalence class Let S be a set of k-itemsets VA E S  the Rk equivalence class family of all R equivalence classes on S under Rk,m is a partition of S into disjoint nonempty subsets Proof According to lemma 2.1 and the property of equivalence relation  111 it can be proved easily Definition 2.4  Ck A Suppose S be the set of frequent or candidate k-itemsets is one of the equivalence classes on S under R  Let Ck be the set of candidate k p itemset B is one of the equivalence class on e under Rk+p,m  When m 21  If vx 200[A  vy E[B]k+p,m  X[i  Y[i for 1 I i I m  We define that B]k+p,m is generated from A When m  0 it is obvious that  S and B  C  We define that Ck is generated from S  We denote the set of candidate k  p itemsets that are generated from A as k+p LA   Lemma 2.3 Let s be a set of k-itemsets A is one of the equivalence classes on S under R  VX 200[AIk  We have c AI where 01 m I k-1 Proof VY E[x  if m  o Y E XI c S  A If 1 I m I k  1 according to the definition 2.2 and definition 2.3 Y[i  X[i  41'1 for 1 I i I m  It implies that YE A  So Xlk,m+l c LA]k,m  Lemma 2.4 Suppose Ck is generated from S 273 


VA,B E S  A  B  A and B can be joined to p  1  itemset'generated in the join step Thus we have generate a candidate k p  p 2 1  itemsets only if  B in other words A and B are in the same Rk,k-l equivalence class Proof The candidate generation process of Apriori 11 algorithm works in two steps In the join step we join S with itself to obtain a superset of Ck  dA B E S  They are joinable only if their first k  1  items are in common Hence only the itemsets in the same Rk,k-l equivalence class can be joined to generate candidate k  1 itemsets Furthermore, only the itemsets in the same Rk,k-l equivalence class can be joined to generate candidate k  p  p 2 1  itemsets Definition 2.5  and relation QA,BES,\(A#B if 3m IImSk it is satisfied that A[i  B[i for 1 I i  m and A[m  B[m it is defined that A  B or B A If VB E S B  A or B  A then A is the minimum element in S  3 The algorithm EC for the maximal number of the candidate itemsets Based on the theory of itemset equivalence class we propose the algorithm EC for the maximal number of the candidate itemsets in this section The main idea in EC is the combine of the theory of itemset equivalence class and Apriori property l Apriori property states that all the subsets of a frequent itemset must be frequent We first present the theorems that will be used in algorithm EC Theorem 3.1 Let L be the set of frequent 1 -itemsets Then  L  I 1  Proof t/c E c,+p\(L  according to Apriori property C[m is a frequent 1-itemset for 1 5 m I p  1 Proceedings of the Second International Conference on Mache Learning and Cybernetics Wan 2-5 November 2003 Since there are b I ways to select p  1 items from given lL,l items there are at most p 3 candidate Theorem 3.2 Suppose Ck+p is generated from s Let A be an equivalence class on S under R  if Proof Suppose for the sake of contradiction that candidate k  p itemset C E C,+,\([A  According to Apriori property cS  where X[i  C[i for 1 5 i 5 m X[j E set form  j  k set  C[m  11  C[k  p  According to definition 2.4 i  i for 1 I i I m  It implies that B c A  The number of itemsets in B is la Thus k+p-m we have[A 1 I k-m   It is contradictive to the assumption. Hence IC,+,\([A  0 Theorem 3.3 Suppose A]k,m be an equivalence classon S under R If m k Proof If m  k  A  A According to lemma 2.4 and the process of generating candidate itemsets A can only join with the itemsets in the set of M=\(X\(XEIA]k,m-l AX>A Therefore C[i  A for 1 5 i I k E set for k  j 5 k p where set  Y[k]\(Y E M  Thus we have Theorem class on S 3.4 Suppose A be an equivalence under k,m  xlk,m+llx EIAlk,m  274 


Proceedings of the Second International Conference on Machine Learning and Cybernetics Wan 2-5 November 2003 we have AI  cp XI   where Xl,,..,=F Olml k-1 Proof QC E C,+,\([A  x  ik_ i is one of the k-subset of C  According to Apriori property XES  According to definition 2.4 C[i A[i for 1 I i 5 m  thus X E A  It implies that XI E F  It is obvious that C[i  X[i for 1 I i I m 1  According to definition 2.4 C E C,+p\([X],,m+l  Then Thus we haveJC,+p\(IAli pk+p\(t~lk,m+l  IXII...I~F The above theorems only consider the join step in the candidate generation process of Apriori algorithm We can take the prune step into account to optimize the above results Theorem 3.5 Suppose A be an equivalence class on S under R  where 1 I m I k-1  F  Xlk,,+,1X E A  The following results can be proved a If p  1 AI  5 Cmin\(\(c,+p XI I[x~-I~,~I IXli.m+i~F b p  1 Where X I  yly E AI  nm1  X[m  ll Proof Q[Xl,,m+I E F and QC E Ck+p XI 1  According to Apriori property C  C  C[m must be a candidate k+p-1 itemset It is clear that C"-[m  C[m  11  According to definition 2.4 C[m  11  X[m  11  Thus C"-[m  X[m  11  According to definition 2.4 C"-[i  C[i  A[i for 1 IiIm-1  Based on the discussing above QY E Xm we have Y[i  Cm-[i for 1 I i I m  a If p=l  C is a k itemset We have C E Xm-]k,m  It implies that Ck+p\([Xlk,m+l 5 X"-],,,I Considering the result in theorem 3.4 we get the conclusion that b If p 1  C is a k+p-1 itemset According to definition 2.4 we have C E Ck+p-l X Ik,m  so that Ick+p XI  2 1~kfp-i xm-lk,m   Considering the result in theorem 3.4, we arrive the conclusion that Ick+p l~1k.m  5 C min\(lc,+p XI bIc.+p-l xm-l,,m 11 Xlr.n+ieF Theorem 3.6 is same as proposition 5 and 6 in reference Theorem 3.6 If S is the set of frequent k-itemets the maximal size of the candidate itemset is no more than k  A4  where  k  mi4 ICk+p+l sk O The total number of candidate itemsets that can be generated in the iterations even to come is at most Cp IC s   lo M EC is a recursive algorithm The maximal value of C,+,\(S can be determined by calling EC S k  0 p  where s is the set of frequent or candidate itemsets and p is the level we are predicting The pseudo code of the algorithm EC is as follows Algorithm EC A  k  m  p   Apply theorem 3.1 1 k=l,return ry I Apply theorem 3.2 F={[xI,,~+,IxE[AI upper  0 for each X E F I Apply theorem 3.3 2 if m=k-1 YlY E A A Y  X  bnd-l l;lj  275 


Proceedings of the Second International Conference on Machine Learning and Cybernetics Wan 2-5 November 2003 else end if if m=O or bnd-l=O bnd 1  EC\([Xl  k  m  1 P 1 upper  upper  bnd  1  Apply theorem 3.5 else if p 1 s2  YlY E A]k,m A Y[m  x[m  I  bnd_2=IS21 else bnd-2  EC\([Xm-Ik  k m p  1  end if upper  upper  min{bnd  1 bnd  2  end for return upper 4 Experimental Evaluation To assess the performance of the algorithm EC we performed several experiments on a computer of 2.0GHz and 512 MB of memory The simulation program was coded in C In the experiments, we used synthetic data as the input databases to the algorithms The data are generated using the same technique as that used in reference l We use the notation Tt.Ii.Dm to denote a database in which ID1  m  TI  t and 111  i  where ID1 is the number of transactions in the origin database IT1 is the mean size of the transactions 111 is the mean size of the potentially frequent itemsets s is the minimum support threshold T5 14 DlOk s  1 0 Ill Iteration k Figure 1 Actual and estimated number of candidate itemsets Fig.1 shows, after each iteration k the maximal number of candidate itemsets at the next iteration as well as the actual number ICk+l 1 it turned out to be It is obvious that the result calculated by EC is almost same as the actual number of candidate itemsets EC is more accurate than KK W ll I I Ill 5 I1 I Iteration k Figure 2 Actual and estimated total number of candidate itemsets Fig.2 shows actual and estimated maximal number of candidate itemsets that could still be generated, as well as the actual total number of candidate itemsets It can be seen that the total number of candidate itemsts are still be very large when estimated in the first two passes because at these initial stages, there is not much information yet. From the third pass on however the estimations become almost exact It also be shown that EC is exacter than KK in every pass T5.14.DlOK s  1.0 IIIIII IIill  IIIII 1111 l---T  1   t   1   1 2 3 4 5 6 7 8 9 iteration k Figure 3 Estimated size of the largest possible candidate itemsets Fig.3 shows the estimated maximal size of a candidate itemsets. In this experiment, this maximum turned out to be 9 The maximal size of the candidate itemsets estimated by EC is also more close to the actual number than that of KK 276 


Proceedings of the Second International Conference on Machine Learning and Cybernetics Wan 2-5 November 2003 T5.14.DlOK s  1.0 Iteration k Figure 4 Time needed to compute the number of candidate itemsets Fig.4 shows the time needed to compute the maximal number of candidate itemsets generated in the next level and the actual time to generate the candidate itemsets In the first several passes the time needed by EC is longer than that of KK because it need more time to take into account the prune step In the last several passes the time needed by EC is less than that of KK  The cost for computing the maximal number is about 1 of the cost of generating the candidate itemsets and is negligible compared to the cost of the complete algorithm 5 Conclusion In the level wise algorithm for association rules the strategy to reduce the number of database scans can improve the performance efficiently. But it may incur the combinatorial explosion on the number of candidate itemsets So we must study the problem of how many candidate itemsets can be generated from the current iteration and current frequent itemsets An algorithm EC for the maximal number of candidate itemsets is presented which is based on the itemset equivalence class theory proposed in this paper. The performance study shows that the results calculated by EC are more accurate than that of KK Acknowledgements This paper is supported by the National Natural Science Foundation of China under Grant No.60173066 International Conference on Management of Data  J.S Park M S Chen and P S Yu Using a hash-based method with transaction trimming for mining association rules IEEE Transactions on Knowledge and Data Engineering vol 9 1997 pp 3 John D Holt Soon M Chung Mining association rules using inverted hashing and pruning. Information Processing Letters 83 2002\21 1-220 4 Jiawei Han Jian Pei and Yiwen Yin, Mining frequent pattems without candidate generation Proceeding of ACM SIGMOD Intemational Conference on Management of Data 2000 pp.1-12 5 Savasere E Omiecinski S Navathe An efficient algorithm for mining association rules in large databases in Proc 21st VLDB Conf 1995 pp 43 2444 R Agrawal R Srikant Fast algorithm for mining association rules, IBM Research Report RJ9839 IBM Alamaden Research Center, San Jose, California June 1994 7 D W Cheung, J Han V T Ng and C.Y Wong D W Cheung S.D Lee Benjamin Kao A General Incremental Technique for Maintaining Discovered Association Rules Proceedings of the FiRh International Conference on Database Systems for Advanced Applications, 1997 pp 185-194 SI Chang-Hung Lee Cheng-Ru Lin and Ming-Syan Chen. Sliding window filtering an efficient algorithm for incremental mining Proceedings of the ACM tenth International Conference on Information and Knowledge Management Atlanta Georgia USA 9 F Geerts B Goethals J Van den Bussche A tight upper bound on the number of candidate pattems 2001 IEEE Intemational Conference on Data Mining ICDM'Ol\November 29  December 02, 2001 San Jose Califomia, pp 155-162 lo P Frankl A new short proof for the Kruskal-Katona theorem. Discrete Mathematic 1984,48 327-329 Ill Joe L Mott Abraham Kandel Theodore P Baker Discrete Mathematics for Computer Scientists and Mathematicians 1986 a reston book published by prentice-hall pp 9-15, pp. 349-351 1993, pp.207-2 16 813-825 6 2001 pp.263-270 References I R Agrawal T Imielinski A Swami Mining association rules between sets of items in large databases Proceeding of ACM SIGMOD 277 


has possibilities to be the platform for large scale web mining We have introduced some raw results of data mining on a portal site with focus on mobile users However we have not provided the evaluation of the quality of the results yet We believe that the quality of web mining techniques depends on the application The compari son with other techniques in certain applications such as prefetching and recommendation system will be one of our future work Acknowledgements We would like to thank people from NTT Software in particular Mr Katsumi Takahashi and Dr Atsuhiro Goto for providing the log file of MIS and helpful dis cussions References R Agrawal T Imielinski A Swami 224Mining Association Rules between Sets of Items in Large Databases\224 In Proc of the ACM SIGMOD Con ference on Management of Data 1993 R Agrawal, R Srikant 224Fast Algorithms for Min ing Association Rules\224 In Proc of the VLDB Con ference 1994 R Agrawal R Srikant 223Mining Sequential Pat terns\224 221In Proceedings of Int Conf on Data En gineering March 1995 R Srikant R Agrawal 223Mining Sequential Pat terns Generalizations and performance improve ments\224 221In Proceedings of 5th Int Conf on Ex tending Database Technology March 1996 G 0 Arocena A 0 Mandelzon G A Mihaila 223Applications of a Web Query Language\224 221In Pro ceedings of WWWG April 1997 S Brin L Page 223The Anatomy of a Large Scale Hypertextual Web Search Engine\224 In Proceedings of WWW7 May 1998 A Buchner M D Mulvenna 223Discovering inter net marketing intelligence through online analyti cal Web usage mining\224 In SIGMOD Record 4 1999 R Cooley B Mobasher J Srivistava 223Data preparation for mining World Wide Web browsing patterns\224 In Journal of Knowledge and Informa tion Systems 1 1999 9 E Spertus L A Stein 223Squel A Structured Query Language for the Web In Proceedings of WWW9 May 2000 lo M Houtsma A Swami 224Set-oriented Mining of Association Rules\224 In Proc of International Con ference on Data Engineering March 1995 ll J Kleinberg 223Authoritive sources in s hyper In Proceedings of ACM linked environment\224 SIAM Symposium in Discrete Algorithm 1998 12 S Lawrwence L Giles 224Accessibility of informa tion on the web\224 In Nature Vol 400 pp 107-109 1999 E131 M Perkowitz 0 Etzioni 223Towards Adaptive Web Sites Conceptual Framework and Case Study\224, In Proceedings of WWW8 May 1999 14 Katsumi Takahashi Seiji Yokoji Nobuyuki Miura 224Location Oriented Integration of Internet Infor mation  Mobile Info Search\224 In Designing the Digital City Springer-Verlag, March 2000 15 Takayuki Tamura Masato Oguchi and Masaru Kitsuregawa 223Parallel Database Processing on a 100 Node PC Cluster Cases for Decision Sup port Query Processing and Data Mining\224 In Pro ceedings of SC97 High Performance Networking and Computing\(SuperComputing 22297 November 1997 16 S Thomas S Sarawagi 223Mining Generalized Association Rules and Sequential Patterns Using SQL Queries\224 221In Proceedings of Int Conf on Knowledge Discovery and Data Mining March 1998 17 T Yan M Jacobsen H Garcia-Molina U Dayal 223From user access patterns to dynamic hypertext linking\224 In Proceedings of WWW5 May 1996 134 


267  Feature dimensions  on which the generated rules may be dimensioned such as merchant, time and area  A volume cube C v is sufficient for deriving the instances of rule X 336 Y if it has a base dimension that represents the base of the rule, and the association conditions for qualifying X 331 Y are definable on C v For deriving cross-sale association rules from cube SaleUnits an association condition can be  for each base and feature dimension C v product A\ > 0 331 C v product B\ > 0 If the association conditions used to compute multidimensional P X  307 P Y  are definable on C v then another kind of condition, called antecedent conditions that are used to compute multidimensional  P X    are also definable on C v such as  for each base and feature dimension C v product A\ > 0 Association cube The association cube C a  for rule X 336 Y gives a volume-based measure of multidimensional association relationships that are computed from the volume cube C v and is used to derive the confidence cube and the support cube of association rules. More exactly, it maintains dimensioned P X 307 P Y i.e the number of base elements that satisfy X 331 Y Usually C a is dimensioned differently from C v In the cross-sale association rule example, the association cube is defined as  CrossSales product, product2, customer_group, merchant time, area  A cell of this cube, CrossSales product 221A\222 product2 221B\222  customer_group \221 engineer\222 merchant 221Sears\222 time 221Jan98\222 area 221Los Angeles\222\eans that there are 4,500 customers who are engineers, who bought item A as well as item B, at a Sears store in Los Angeles in Jan98 For an association cube the item dimensions underlie the counts for deriving association rules, such as dimensions product and product2 for the above CrossSales cube. The dimension product2 has the same set of values as product and we call it the mirror dimension  of product We introduce a mirror dimension simply because the cross-sale association rule involves more than one element of the item dimension  The base dimension   such as the customer dimension  underlies the base of rules. Unlike the volume cube, the association cube does not necessarily have to be dimensioned by the base dimension However, we can dimension rules by a derived dimension, each value of which identifies a group of base dimension values at bottom levels. In the cube CrossSales shown above, we introduce the hierarchical dimension customer_group   which has levels customer_profession\222, \221customer_category\222 and 'top'. A relation is also defined for relating customers and customer groups. For example, a value of the derived customer_group dimension, say, \223engineer\224, is used to identify a group of individual customers who are engineers  An association can cube also have underlying feature dimensions  such as merchant, time and area Population cube and base cube The population cube C p and the base cube C b for rule X 336 Y are also derived from the volume cube C v  C p is used to measure dimensioned P X i.e the numbers of base elements satisfying X  C b is used to represent dimensioned B For the above cross-sale rules, the population cube is defined as NumOfBuyers \(product, customer_group, merchant, time area A cell of this cube NumOfBuyers product 221A\222 customer_group \221 engineer\222 merchant 221Sears\222 time 221Jan98\222 area 221Los Angeles\222  10000  means that there are 10,000 customers who are engineers, and who bought item A in Los Angeles in Jan98. The base cube is defined as  NumOfShoppers \(customer_group, merchant, time, area Note that NumOfShoppers is not aggregated from NumOfBuyers as a single customer may buy multiple products Confidence cube and support cube The confidence of rule X 336 Y defined as P X 307 P Y  P X  and the support, defined as P X 307 P Y B are represented as cubes C f  and C s  C f  is derived from C a and C p and C s is derived from C a  and C b They have the same dimensions as C a For the above cross-sale rules the confidence cube and support cube are defined as  Confidence \(product, product2, customer_group, merchant time, area   Support  product, product2, customer_group, merchant time, area Figure 2 shows the cubes related to cross-sale association rules, with one slice of each cube. The volume-cube is generated from transactions; the 


association-cube, base-cube and population-cube are derived from the volume cube; the confidence-cube is derived from the association cube and population cube and the support-cube is derived from the associationcube and base-cube. The slices of these cubes shown in Figure 2 correspond to the same list of values in dimension merchant, time, area and customer_group  Multidimensional and multilevel rules Representing association rules by cubes and underlying cubes by hierarchical dimensions, naturally supports multidimensional and multilevel rules. Also these rules are well organized and can be easily queried  First, the cells of an association cube with different dimension values are related to association rule instances in different scopes. In the association cube CrossSales cell CrossSales product \221A\222, product2 \221B\222  customer_group 221engineer\222, merchant \221Sears\222, area \221Los Angeles\222, time 221Jan98\222 represents the following multidimensional rule x 316 Customers: buy_product\(x, \221A\222 336 buy_product\(x,\221B\222  275 customer_group = \221engineer\222, merchant = \221Sears\222, area 221Los  Angeles\222, time =  \221Jan98\222 If this cell has value 4500, and the corresponding cell in the population cube has value 10000, then this rule has confidence 0.45 Next as the cubes representing rules can have hierarchical dimensions, they represent not only multidimensional but also multi-level association rules. For example, the following cells CrossSales\(product \221A\222, product2 \221B\222, customer_group 221engineer\222, merchant \221Sears\222, area \221 California 222, time 221Jan98\222 CrossSales\(product \221A\222, product2 \221B\222, customer_group 221engineer\222, merchant \221Sears\222, area \221 California 222, time 221 Year98 222 represent association rules at different area levels \(i.e the city level and the state level\d different time levels \(i.e., the month level, the year level x 316 Customers: buy_product\(x, \221A\222 336 buy_product\(x, \221B\222  275 customer_group = \221engineer\222, merchant =  \221Sears\222, area 221 California 222, time =  \221Jan98\222 x 316 Customers: buy_product\(x, \221A\222 336 buy_product\(x, \221B\222  275 customer_group = \221engineer\222, merchant =  \221Sears\222, area 221 California 222, time =  \221 Year98 222 The cell CrossSales\(product \221A\222, product2 \221B\222,  customer_group 221top\222, merchant \221top\222, area \221top\222,  time \221top\222 represents the customer-based cross-sale association rule for all customers, merchants, areas, and times in the given range of these dimensions, expressed as x 316 Customers: buy_product\(x, \221A\222 336 buy_product\(x, \221B\222 4.3  Generating Association Rule Related Cubes The basic task of our OLAP based association rule mining framework, either at the GDOS or at an LDOS is to convert a volume cube i.e. the cube representing the purchase volumes of customers dimensioned by product  area etc, into an association cube a base cube and a population cube These cubes are then used to derive the confidence cube and the support cube of multidimensional association rule instances. The following general steps are involved in cross-sale association rule mining 267  Roll up the volume cube SaleUnits by aggregating it along merchant, time, area dimensions 267  Derive cube NumOfBuyers from SaleUnits based on the antecedent condition SaleUnits 0 267  Populate cube NumOfShoppers by the counts of customers dimensioned by merchant, area  time not by product\at satisfy the antecedent conditions 267  Derive cube CrossSales from SaleUnits based on the association conditions SaleUnits  product  p 1  0 and SaleUnits  product2  p 2 0 267  Derive cube Confidence and cube Support using cell-wise operations 214  Confidence = CrossSales  NumOfBuyers 214  Support  CrossSales  NumOfShoppers  Cubes Confidence  Support  CrossSales are dimensioned by product  product2 customer_group,merchant  time, area NumOfBuyers is dimensioned by product  customer_group, merchant time, area  NumOfShoppers is dimensioned by customer_group, merchant  time, area Rules with confidence and support that exceed specified thresholds  may be considered interesting 4.4. Rules with Conjoint Items Cubes with conjoint dimensions can be used to represent refined multidimensional association rules For example, using OLAP, we can derive association rules across time  Time-variant or temporal association rules such as 


x 316 Customers buy_product\(x,\222 A\222, \221 Jan98\222  336 buy _product\(x, \221B\222, \221 Feb98\222   275 area = \221Los Angeles\222 can be used to answer such questions as \223 How are  the sales of B in Feb98  associated with the sales of A in Jan98 224 The items in this rule are value pairs of dimensions product and time In order to specify this kind of association rule we introduce a conjoint dimension product, time and mirror it with dimension product2, time2 This allows a cell in the association cube to cross two time values. Accordingly, the cubes related to association rule mining are defined as follows Association cube  CrossSales.2 \(<product, time>, <product2, time2 customer_group, merchant, area  Population cube  NumOfBuyers.2  \(<product, time>, customer_group merchant, area Base cube  NumOfShoppers.2  \( customer_group, merchant, area Confidence cube Confidence.2 \(<product, time>, <product2, time2 customer_group, merchant, area Support  cube  Support.2  product, time>, <product2, time2 customer_group, merchant, area  The steps for generating these cubes are similar to the ones described before. The major differences are that a cell is dimensioned by, besides others product, time and product2, time2 and the template of the association condition is  SaleUnit s  product p 1 time t 1  0 and  SaleUnits  product2 p 2 time2 t 2  0 where, in any instance of this condition, the time expressed by the value of time2 is not contained in the time expressed by the value of time The template of the antecedent condition is SaleUnits   product p 1 time t 1  0 In general, other dimensions such as area may be added to the conjoint dimensions to specify more refined rules 4.5. Functional Association Rules A multidimensional association rule is functional if its predicates include variables, and the variables in the consequent are functions of those in the antecedent.  For example, functional association rules can be used to answer the following questions, where a_month and a_year are variables q  What is the percentage of people in California who buy a printer in the next month after they bought a PC x 316 Customer buy_product\(x, \221PC\222, a_ month 336 buy_product\(x, \221printer\222, a_month+1  275 area = \221California\222 q  What is the percentage of people who buy a printer within the year when they bought a PC  x 316 Customer: buy_product\(x, \221PC\222, a_ year 336 buy_product\(x, \221printer\222, a_year 275 area = \221California\222 To be distinct, we call the association rules that are not functional as instance association rules; e.g x 316 Customer: buy_product\(x,\222 PC\222, \221Jan98\222 336 buy_product\(x,\222 printer\222, \221Feb98\222  275 area =  \221California\222 Time variant, functional association rules can be derived from time variant, instance association rules through cube restructuring. Let us introduce a new dimension time_delta that has values one_day, two_day 205, at the day level, and values one_month, two_month, \205, at the month level, etc. Then, let us consider the following functional association rule related cubes Association cube  CrossSales.3 \(product, product2, customer_group merchant, area, time_delta  Population cube  NumOfBuyers.3 \(product, customer_group, merchant area Base cube  NumOfShoppers.3 \( customer_group, merchant, area Confidence cube  Confidence.3 \(product, product2, customer_group merchant, area, time_delta Support cube  Support.3 \(product, product2, customer_group, merchant area, time_delta The association cube CrossSales.3  can be constructed from CrossSales.2   The cell values of CrossSales.2  in the selected time and time2 ranges are added to the corresponding cells of CrossSales.3 For example, the count value in cell  CrossSales.2\(<PC, Jan98>, <printer, Feb98>\205 is added to cell \(bin CrossSales.3\(PC, printer, one_month,\205 


It can also be added to cell CrossSales.3\(PC, printer one_year,\205 5  Distributed and Incremental Rule Mining There exist two ways to deal with association rules 267  Static that is, to extract a group of rules from a snapshot, or a history, of data and use "as is 267  Dynamic that is, to evolve rules from time to time using newly available data We mine association rules from an e-commerce data warehouse holding transaction data. The data flows in continuously and is processed daily Mining association rules dynamically has the following benefits 267  223Real-time\224 data mining, that is, the rules are drawn from the latest transactions for reflecting the current commercial trends 267  Multilevel knowledge abstraction, which requires summarizing multiple partial results. For example association rules on the month or year basis cannot be concluded from daily mining results. In fact multilevel mining is incremental in nature 267  For scalability, incremental and distributed mining has become a practical choice Figure 3: Distributed rule mining Incremental association rule mining requires combining partial results. It is easy to see that the confidence and support of multiple rules may not be combined directly. This is why we treat them as \223views\224 and only maintain the association cube, the population cube and the base cube that can be updated from each new copy of volume cube. Below, we discuss several cases to show how a GDOS can mine association rules by incorporating the partial results computed at LDOSs 267  The first case is to sum up volume-cubes generated at multiple LDOSs. Let C v,i be the volume-cube generated at LDOS i The volume-cube generated at the GDOS by combining the volume-cubes fed from these LDOSs is 345   n i i v v C C 1  The association rules are then generated at the GDOS from the centralized C v  214  The second case is to mine local rules with distinct bases at participating LDOSs, resulting in a local association cube C a,I a local population cube C p,I  and a local base cube C b,i at each LDOS. At the GDOS, multiple association cubes, population cubes and base cubes sent from the LDOSs are simply combined, resulting in a summarized association cube and a summarized population cube, as 345   n i i a a C C 1   345   n i i p p C C 1  and 345   n i i b b C C 1  The corresponding confidence cube and support cube can then be derived as described earlier. Cross-sale association rules generated from distinct customers belong to this case In general, it is inappropriate to directly combine association cubes that cover areas a 1 205, a k to cover a larger area a In the given example, this is because association cubes record counts of customers that satisfy   customer product merchant time area Doe TV Dept Store 98Q1 California Doe VCR Dept Store 98Q1 California customer product merchant time area Doe VCR Sears 5-Feb-98 San Francisco Joe PC OfficeMax 7-Feb-98 San Francisco customer product merchant time area Doe TV Fry's 3-Jan-98 San Jose Smith Radio Kmart 14-Jan-98 San Jose Association   population      base          confidence      support cube               cube                cube         cube                cube LDOS LDOS GDOS 


the association condition, and the sets of customers contained in a 1 205, a k are not mutually disjoint. This can be seen in the following examples 214  A customer who bought A and B in both San Jose and San Francisco which are covered by different LDOSs , contributes a count to the rule covering each city, but has only one count, not two, for the rule A  336  B covering California 214  A customer \(e.g. Doe in Figure 3\who bought a TV in San Jose, but a VCR in San Francisco, is not countable for the cross-sale association rule TV  336 VCR covering any of these cities, but countable for the rule covering California. This is illustrated in Figure 3 6  Conclusions In order to scale-up association rule mining in ecommerce, we have developed a distributed and cooperative data-warehouse/OLAP infrastructure. This infrastructure allows us to generate association rules with enhanced expressive power, by combining information of discrete commercial activities from different geographic areas, different merchants and over different time periods. In this paper we have introduced scoped association rules  association rules with conjoint items and functional association rules as useful extensions to association rules The proposed infrastructure has been designed and prototyped at HP Labs to support business intelligence applications in e-commerce. Our preliminary results validate the scalability and maintainability of this infrastructure, and the power of the enhanced multilevel and multidimensional association rules. In this paper we did not discuss privacy control in customer profiling However, we did address this issue in our design by incorporating support for the P3P protocol [1 i n  ou r data warehouse. We plan to integrate this framework with a commercial e-commerce system References 1  Sameet Agarwal, Rakesh Agrawal, Prasad Deshpande Ashish Gupta, Jeffrey F. Naughton, Raghu Ramakrishnan, Sunita Sarawagi, "On the Computation of Multidimensional Aggregates", 506-521, Proc. VLDB'96 1996 2  Surajit Chaudhuri and Umesh Dayal, \223An Overview of Data Warehousing and OLAP Technology\224, SIGMOD Record Vol \(26\ No \(1\ 1996 3  Qiming Chen, Umesh Dayal, Meichun Hsu 223 OLAPbased Scalable Profiling of Customer Behavior\224, Proc. Of 1 st International Conference on Data Warehousing and Knowledge Discovery \(DAWAK99\, 1999, Italy 4  Hector Garcia-Molina, Wilburt Labio, Jun Yang Expiring Data in a Warehouse", Proc. VLDB'98, 1998 5  J. Han, S. Chee, and J. Y. Chiang, "Issues for On-Line Analytical Mining of Data Warehouses", SIGMOD'98 Workshop on Research Issues on Data Mining and Knowledge Discovery \(DMKD'98\ , USA, 1998 6  J. Han, "OLAP Mining: An Integration of OLAP with Data Mining", Proc. IFIP Conference on Data Semantics DS-7\, Switzerland, 1997 7  Raymond T. Ng, Laks V.S. Lakshmanan, Jiawei Han Alex Pang, "Exploratory Mining and Pruning Optimizations of Constrained Associations Rules", Proc ACM-SIGMOD'98, 1998 8  Torben Bach Pedersen, Christian S. Jensen Multidimensional Data Modeling for Complex Data Proc. ICDE'99, 1999 9  Sunita Sarawagi, Shiby Thomas, Rakesh Agrawal Integrating Association Rule Mining with Relational Database Systems: Alternatives and Implications", Proc ACM-SIGMOD'98, 1998   Hannu Toivonen, "Sampling Large Databases for Association Rules", 134-145, Proc. VLDB'96, 1996   Dick Tsur, Jeffrey D. Ullman, Serge Abiteboul, Chris Clifton, Rajeev Motwani, Svetlozar Nestorov, Arnon Rosenthal, "Query Flocks: A Generalization of Association-Rule Mining" Proc. ACM-SIGMOD'98 1998   P3P Architecture Working Group, \223General Overview of the P3P Architecture\224, P3P-arch-971022 http://www.w3.org/TR/WD-P3P.arch.html 1997 


Plenary Panel Session 30 XML Databases   Moderator: Michael Carey, IBM Almaden Research Center USA Panelists Adam Bosworth, Microsoft Corporation USA David De Witt University of Wisconsin-Madison, USA Alon Levy University of Washington USA Bruce Lindsay IBM Almaden Research Center USA Jennifer Widom Stanford University USA Demo Session 1 Web Query Optimizer  661 V Zadorozhny L Bright L Raschid T Urhan and M Vidal ReQueSS: Relational Querying of Semi-structured Data  664 R Sunderraman The IDEAL Approach to Internet-Based Negotiation for E-Business  666 J Hammer C Huang Y Huang C Pluempitiwiriyawej M Lee H Li L Wang Y Liu and S Su READY A High Performance Event Notification Service  668 R Gruber B Krishnamurthy, and E Panagos A Multimedia Information Server with Mixed Workload Scheduling  670 G Nerjes DISIMA An Object-Oriented Approach to Developing an Image Database System  672 V Oria T Ozsu P Iglinski B Xu and L Cheng Demo Session 2 The Collaboration Management Infrastructure  677 H Schuster D Baker A Cichocki D Georgakopoulos and M Rusinkiewicz Assisting the Integration of Taxonomic Data The LITCHI Toolkit  679 I Sutherland J Robinson S Brandt A Jones S Embury W Gray R White and F Bisby TheaterLoc: Using Information Integration Technology to Rapidly Build Virtual Applications  681 G. Barish Y.4 Chen D Dipasquo, C Knoblock S Minton I Muslea and C Shahabi Lineage Tracing in a Data Warehousing System  683 Y Cui and J Widom xiii 


The Mentor-Lite Prototype A Light-Weight Workflow Management System  685 J Weissenfels M Gillmann 0 Roth, G Shegalov and W Wonner Location Prediction and Queries for Tracking Moving Objects  687 0 Wolfson B Xu and S Chamberlain Semiorder Database for Complex Activity Recognition in Multi-Sensory Environments  689 S Bhonsle A Gupta S Santini and R Jain Tutorial 1 Web Information Retrieval  693 M Henzinger Tutorial 2 Mobile and Wireless Database Access for Pervasive Computing  694 P Chrysanthis and E Pitoura Tutorial 3 Data Mining with Decision Trees  696 J Gehrke Tutorial 4 Directories Managing Data for Networked Applications  697 D Srivastava Tutorial 5 Indexing High-Dimensional Spaces Database Support for Next Decade\222s Applications  698 S Berchtold and D Keim xiv 


 T5.I2.D100K T10.I4.D100K T15.I4.D100K T10.I6.D400K T10.I6.D800K T10.I6.D1600K Optimizations across Databases 5 0 5 10 15 20 25 30 35 40 45 Improvement COMP TREE COMP-TREE 1 2 4 8 1 2 4 8 1 2 4 8 2 4 8 2 4 8 1 2 4 8 Processors Databases Figure 5 Effect of Computation and Hash Tree Balancing good as the COMP optimization The reason that the hash tree balancing is not suf\336cient to offset inherent load imbalance in the candidate generation in this case The most effective approach is to apply both optimizations at the same time COMP-TREE The combined effect is suf\336cient to push the improvements in the 40 range in the multiple-processor case On 1 processor only hash tree balancing is bene\336cial since computation balancing only adds extra cost 5.4 Short-circuited Subset Checking Figure 6 shows the improvement due to the short-circuited subset checking optimization with respect to the unoptimized version The unoptimized version is the Apriori algorithm due to Agrawal et al 5 The results are presented for dif ferent number of processors across dif ferent databases The results indicate that while there is some improvement for databases with small transaction sizes the optimization is most effective when the transaction size is large In this case we get improvements of around 25 r the unoptimized version To gain further insight into this optimization consider 336gure 7 It shows the percentage improvement obtained per iteration on applying this optimization on the T20.I6.D100K database It shows results only for the uni-processor case r similar results were obtained on more processors We observe that as the iteration k increases there is more opportunity for shortcircuiting the subset checking and we get increasing bene\336ts of up to 60 The improvements start to fall off t the high end where the number of candidates becomes small resulting in a small hash tree and less opportunity for short-circuiting It becomes clear that is an extremely effective 15 Proceedings of the 1996 ACM/IEEE Conference on Supercomputing \(SC\22296 0-89791-854-1/96 $ 10.00 ACM 


 T5.I2.D100K T10.I6.D800K T15.I4.D100K T20.I6.D100K procs across Databases 0 5 10 15 20 25 Improvement 1 2 4 8 Figure 6 Effect of Short-circuited Subset Checking 23456789101112 Iterations 0 10 20 30 40 50 60 improvement T20.I6.D100K Figure 7  Improvement per Iteration  proc   16 Proceedings of the 1996 ACM/IEEE Conference on Supercomputing \(SC\22296 0-89791-854-1/96 $ 10.00 ACM 


optimization for larger transaction sizes and in cases where there are large number of candidate k itemsets 6 Conclusions In this paper e presented a parallel implementation of the Apriori algorithm on the SGI Power Challenge shared memory multi-processor We also discussed a set of optimizations which include optimized join and pruning computation balancing for candidate generation hash tree balancing and short-circuited subset checking We then presented experimental results on each of these Improvements of more than 40 were obtained for the computation and hash tree balancing The short-circuiting optimization was found to be extremely effective for databases with large transaction sizes Finally we reported the parallel performance of the algorithm While we d good speed-up we observed a need for parallel I/O techniques for further performance gains References  R Agra wal T  Imielinski and A Swami Database mining A performance perspecti v e  I n IEEE Trans on Knowledge and Data Engg  pages 5\(6 1993  R Agra wal T  Imielinski and A Swami Mining association rules between sets of items in lar ge databases In Proc M SIGMOD Intl Conf Management of Data  May 1993  R Agra wal H Mannila R Srikant H T o i v onen and A I V erkamo F ast disco v ery of association rules In U F et al editor Advances in Knowledge Discovery and Data Mining  MIT Press 1996  R Agra wal and J Shafer  P arallel mining of association rules design implementation and e xperience Technical Report RJ10004 IBM Almaden Research Center San Jose CA 95120 Jan 1996  R Agra wal and R Srikant F ast algorithms for mining association rules In Proc 20th VLDB Conf  Sept 1994  M Cierniak W  Li and M J Zaki Loop scheduling for heterogeneity  I n 4th IEEE Intl Symposium on High-Performance Distributed Computing also as URCS-TR 540 CS Dept Univ f Rochester  Aug 1995  M Holsheimer  M  K ersten H Mannila and H T o i v onen A perspecti v e on databases and data mining In 1st Intl Conf Knowledge Discovery and Data Mining  Aug 1995  M Houtsma and A Swami Set-oriented mining of association rules In RJ 9567  IBM Almaden Oct 1993  H Mannila H T o i v onen and I V erkamo Ef 336cient algorithms for disco v ering association rules In AAAI Wkshp Knowledge Discovery in Databases  July 1994  J S P ark M Chen and P  S Y u  A n e f fecti v e hash based algorithm for mining association rules In Proc M SIGMOD Intl Conf Management of Data  May 1995 17 Proceedings of the 1996 ACM/IEEE Conference on Supercomputing \(SC\22296 0-89791-854-1/96 $ 10.00 ACM 


 J S P ark M Chen and P  S Y u  E f 336cient parallel data mining for association rules T echnical Report RC20156 IBM T J Watson Research Center Aug 1995  G Piatetsk y-Shapiro Disco v ery  presentation and analysis of strong rules In G P S et al editor  KDD  AAAI Press 1991  A Sa v asere E Omiecinski and S Na v athe An ef 336cient algorithm for mining association rules in large databases In Proc 21st VLDB Conf  1995  M J Zaki M Ogihara S P arthasarathy  and W  Li P arallel data mining for association rules on shared-memory multi-processors Technical Report 618 Department of Computer Science University of Rochester 618 1996 18 Proceedings of the 1996 ACM/IEEE Conference on Supercomputing \(SC\22296 0-89791-854-1/96 $ 10.00 ACM 


