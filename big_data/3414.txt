Application of MVNR Algor ithm on Data Analyses of Forest Inventory Han Ning Engineering school Beijing Forestry University Beijing, P.R.CHINA hn217@bjfu.edu.cn   Song Danwa Engineering school Beijing Forestry University Beijing, P.R.CHINA songdanwa@yahoo.cn Chen Chen Engineering school Beijing Forestry University Beijing, P.R.CHINA Chen_chen09@yahoo.cn    Abstract This paper emphasizes particularly on introduction of the application of non-Redundant Rules Algorithm on Data Analyses of Forest Inventory. By establishing the data mining model, MVNR Algorithm is applied to analyzing the relation of species, origin, age, chest, circumference, height and canopy density of trees. The results provide the best valuable information for forestation programming management. The promising prospect of the application of this method in the investigation and analysis of data for the forestry resources has been proved Keywords-data of forest inventory; data mining;  association rules;  non-redundant rules; MVNR algorithm I   I NTRODUCTION  Forest resource data management is the basis of forestry information. In realistic forestry management, data have many characteristics such as complicated operation logic, strong relevance and capriciousness, etc. So far, database system can realize data input, searching, statistics, etc. However it cannot discover the relation and rules among data nor predict the future development trends according to the existing data which result in the phenomenon of “data explosion but low rate of data utilizations This paper provides a scientific basis for operation decisions of forest management and development strategies according to the potential, imp licit and valuable information that is abstracted from current and historical data in forest resources using data mining technology II  T HE CONCEPT OF D ATA M INING AND THE APPLICATION IN DATA ANALYSIS OF FOREST INVENTORY  Data mining is a set of statistical techniques for discovering previously undetected or unknown information and acknowledge from a large quantity of incomplete, noisy, fuzzy and random data. It can make automatic analysis and inductive reasoning and association inference to the data, and discover the internal connections among data. Because it can excavate the patterns which play important roles in information forecasting and decision behavior, data mining is a significant tool in helping decision-maker to make market stratagems and decisions Data mining technology can be applied for discovering the associated relation among data elements of forest inventory and finding out the attributes of some indexes in resource management. It also can be used to predict the future forest growth and alien change tendency according to the time series of the existing data. Data mining system based on forest resource information can well reflect the interactions of forest factors and comprehensive influences, and can thus come to conclusions in accordance with the forest growth law as much as possible. Analyzing these conclusions according to the existing operation rules, people can find out favorable decision bases for forestry practice III  T HE THEORY OF ASSOCIATION RULES ANALYSES  Association rules analysis serves to discover certain correlations or correlative connections among a large number of data items. Cross analyses, single factor and multi-factor comprehensive analyses are often needed, for there are complex relations among forest resource data, when analyzing those data items. Using association rules mining techniques to analyze forest resource data may be useful to full excavating implicit information therein A  The definition and applicability of association rules Suppose that I = {I 1 I 2 I m is a set that consist of m different items. A database of transactions D is a set of transaction T where T is a set of items, namely T 004 I. The number of the transactions is denoted by |D|. Each transaction has a unique mark denoted by TID. An association rule is an implication of the form X 004\010 Y,Y 004 I, and X 002 Y 0013 2 T he ba s i c a l g o r ithm s of a s s o c i a tion  rules include Apriori, partition-based method, Hash-based method FP-tree and so on. The calculation complexity of these algorithms and redundancy among the rules, especially the generated redundant rules, show exponential growth when there are more items, and thus can't ensure the validity of the rules Forest resources management surveys, whose purpose is to meet the demands of forest management schemes, general designs, forestry division and planning design, regards the state forestry bureau\(field nature reserve, forest parks and other forest management units or administrative regions of County-Level Government as the investigation unit. The obtained second class data hold abundant types including tree species, site condition, forestland usage topography and geomorphology data, vegetation distribution and some other attributes. Using non-Redundant Association Rules Algorithm to analyze the associatio n relation, it can calculate some nature factors or human management measures, which have close relevance with the growth of specif ic tree species, and can eliminate a large number of redundant data. In this case, more accurate measures on improving cultivation or tending can be put forward 
2008 International Conference on Computer Science and Software Engineering 978-0-7695-3336-0/08 $25.00 © 2008 IEEE DOI 10.1109/CSSE.2008.947 344 


B  The definition of non-Redundant Association Rules Algorithm Definition1 As for rules A 000 B and C 000 D, if the support\(s\ and the confidence of C 000 D are both greater than or equal to which of A 000 B, then rule C 000 D is the redundant rule of  rule A 000 B Definition2 Rule A is considered obligatory if and only if in relative to any other rules it is neither simple redundancy nor strict redundancy  Definition3 X is a frequent item set, and a set that consists of all the minimal subsets of X is called set of minimal subsets, denoted by F\(X, c Theorem1 X is a frequent item set. X 1 X 2 X k are supersets of set X and X i 001\031 L\(l 000 i 000 k\,Y 001\031 F\(X,c\-U ki 1\(X i c then rule Y 000 X-Y is not strict redundancy in relative to any other rules Definition4 X,Y are frequent item sets, if sup\(Y 000 sup\(X 002 c and there is no frequent item set Z which makes Z 003 Y and sup\(Z 000 sup\(X 002 c, then Y is a minimal subset of X   Theorem2 X is a frequent item set. X 1 X 2 001\002 X m are subsets of X and X i 001\031 L\(l 000 i 000 m\. If sup\(X\/c 003 max_sup \( the maximum support of the frequent item sets as well as the maximum support of all the frequent item sets \hen as for 004 Xi the formula F\(X i c 005 F\(X,c\olds; if sup\(X\max_sup, then as for all Xi which satisfy sup\(X\=sup\(X i e formula F\(X i c 005 F\(X,c\ holds C  The Non-redundant Association Rules Algorithm  The common non-Redundant Association Rules Algorithm includes ADRR Algorithm, MVNR Algorithm Algorithm of non-Redundant Fast Mining Association Rules, GNRR Algorithm, etc. MVNR \(Mining Valid and non-Redundant Association Rules Algorithm\ is a new algorithm. It can excavate not only non-redundant effective association rules but also association rules with negative items. When using this algorithm to excavate association rules among forest resource data, we should first screen for frequent item sets of all the data and eliminate the frequent items that only generate redundant rules, an action which greatly improves the efficiency of generating association rules IV  A PPLICATION  OF MVNR  A LGORITHM ON D ATA A NALYSES OF F OREST I NVENTORY  A  Data collection The survey data selected as the study object are from small classes Forest Inventory in Fujian Province in 2007.They involved nearly 100 kinds of attribute \(e.g. the growth status, growth environment, cultivate measures We selected six attributes: th e species, origin, age, chest circumference, height and canopy density of trees. There are six items random data in Table.1 TABLE I  T HE SURVEY DATA OF F UJIAN PROVINCE IN 2007 Tree Species Origin Chest Circu mference Age Canopy Dens ity Height 111 Self-sown 22 24 0.9 152 230 artificial seed ing 15 23 0.8 11 111 Self-sown 18 24 0.6 112 304 artificial seed ing 2 5 0.8 3 230 artificial seed ing 25 23 0.5 18 111 Self-sown 9 14 0.5 57  B  Data pre-processing During Forest management, owing to regionally diversity, multi-level workers, and improved technical standards, there are sometimes some errors, unusual and repugnant values among recorded data. So, original data integrity and consistency checking, noise data processing and properly filling in lost data must be done Specific measures: Removal of redundant information e.g. blank data rows, repeated rows\n the data .Process continuity data in a discrete way. For example: origin is divided into [Artificial seeding  selfso wn ag e ch est circumference, height are divided respectively per 10 unit interval 000\036\000\003 canopy density is divided per 0.2 unit interval 000\021\000\003 As a typical attribute, tree species do not need grouping Then all groups are marked by unique identifiers, for example: mark tree species with A 1 A 2 A n Artificial  sown n are m a rked by B 1 002 B 2 respectively. The results concluded in this method are filled in Table 2 TABLE II  DATA PRE PROCESSING  Tree Species Origin Chest Circu mference Age Canopy Dens ity Height A1 B2 C3 D3 E4 F7 A2 B1 C2 D3 E3 F1 A1 B2 C2 D3 E2 F6 A3 B1 C1 D1 E3 F1 A2 B1 C3 D3 E2 F2 A1 B2 C1 D2 E2 F6 C  Data mining Programming flowchart based on MVNR algorithm is as follows Figure 1       
345 


 Figure 1. Programming flowchart Input: Information of forest in Table2 \(every row can be seen as a transaction like A1B2C3D3E4F7\ser define minimum support S as 20%, minimum confidence C as 50%, max_sup; Output: Rules result in Table.3 TABLE III  RULES RESULT OF MINING BY MVNR ALGORITHM  Association rules     \(support 002 confidence Association rules     \(support 002 confidence F2 0018 D6 \(31.5 002  002 88.5 002Á\002   F2 0018 B2 002 C3    \(20.9 002  002 100 002   B1 0018 F1      \(18.3 002  002 100 002   F2 0018 C2 002 D5    \(12.1 002Á\002 81.1 002   F2 0018 B2      \(29.3 002 99.3 002  B1 0018 D3      \(12.4 002Á\002 86.9 002Á\002  F2 0018 D6 002 C2    \(11.7 002  002 89.6 002Á\002  F2 0018 D6 002 A3    \(17.5 002Á\002 89.6 002  A1 0018 C2      \(42.4 002  002 8O.2 002   D6 0018 E3 002 A1    \(17.9 002  002 87.4 002Á\002   A2 0018 C3      \(46.7 002  002 83.4 002   F2 0018 D6 002 B1    \(19.3 002  002 82.2 002Á\002   B1 0018 F1 002 C2  \(10.3 002  002 100 002   F2 0018 E2 002 A3    \(15.2 002  002 88.0 002Á\002   A1 0018 C2 002 D5  \(13.1 002  002 83.4 002   B1 0018 C2 002 E3    \(21.6 002  002 81.9 002Á\002   F2 0018 D6 002 C3  \(17.5 002Á\002 89.6 002Á\002   F2 0018 E3 002 C3    \(30.4 002Á\002 8O.5 002Á\002   F2 0018 B2 002 D6  \(11.7 002  002 98 002   F2 0018 B2 002 E3 002 C3 \(17.O 002  002 100 002Á\002   F2 0018 B2 002 E2  \(11.4 002  002 100 002   F2 0018 D6 002 E3 002 A3\(11.6 002  002 86.6 002Á\002   F2 0018 A2 002 E3  \(18.1 002Á\002 98.6 002Á\002 F2 0018 D6 002 E3 002 B1\(1O.3 002  002 8O.5 002Á\002  D  Expression and translate of knowledge evaluate result Based on Rules result in Table3, conclusions are as follows    If height is between\(0,10\ \(F1\ chest circumference is between\(10,20  C 2   t h e n t h e p o s s ib ility o f  Artificial seeding forest \(B1\ is 100 %; For selfsown forest\(B2\ whose chest circumference is between \(20,30 c 3 d c a n o p y  de nsi t y  i s   between[0.8,0.9  E 3   t h e  p o ssi b ility o f  h e i g h t  being  between \(10,20   F 2  i s 100    It i s ob vi ous that in the same situation for chest circumference the growth status of self-sown is better. So, the protection on self-sown forest must be of primary importance   There are 86.9 percent artificial seeding forest \(B1 if age between \(21, 30   D 3  B e c a u se  t h e dat a  analyzed are close to 2007,the seeding time reckoned is 1980s,when the country and district began to grow Artificial seeding forest a lot. The analytical results accord with reality   If adopt confidence>80%,then the forest whose chest circumference is between \(10,20  C 2   or  20,30   C 3 a n d ca n opy de nsi t y  i s b e t w ee n  0.6,0.7 E2  o r  0 8 0 9 E 3   h e i g h t i s b e t w ee n 10,20 F 2 am on g t h e f o r e st i n t h i s r e gi o n t h e  diversification of chest circumference and canopy density is much more than the diversification of height   Among forest in this region, there are 17% that are self-sown forest whose height is between \(10, 20 F2\hest circumference is between \(20, 30  C 3   canopy density is between [0.8, 0.9 E 3 It sh o w s there are quite members of self-sown forest that have become mature and grown well V  CONCLUSION  This paper demonstrates the feasibility of MVNR Algorithm that applies in forest inventory by experiment The mutative tendency of future can be predicted by implied  data relationship The method above provides new theoretical basis and 
346 


scientific processing for management of forest resources and business activity. Thus realizing the development of forest inventory by leaps and bounds and upgrading the level of traditional forest resource management rapidly  R EFERENCES  1  LIU Nai-li, LI Yu-chen and MA Lei, “Efficient algorithm for rapidly mining valid and non-redundant rules”, [J Co m p u t e r A ppl ica t io ns   China, Vol.25 No.6 June2 005, PP.2-3 2  2 A N G  Y u e y u e  D O NG  X i ang j un an d Z H A I  Y a nf u  T he s u r v ey  of non-redundant association rules research”, [J o ur n a l o f S h a ndo ng  institute of light industry, Shandong, V0l.21 No.4 Dec.2007, PP 1-2 3  3 AGR A W A L R  M I E L IN S K I T  S W AM I A  M i n i n g a s s o c i a t i o n  rules between set of items in large databases”, [J  Pro c e e d i n g s o f t h e  ACM SEGMOD Conference on Management of Data, 1993, PP.207 216 4  4 Me hm e d K a nt ar dz ic  D ata M i n i ng Co n c e p t   Mo de l s Me t h o d s  an d  Algorithms”, [M  N e w Je r s ey  I EEE Pr e ss, 2 0 0 2   5  5 Ri ch a r d j R o i g er 9 Michael W Geatz 9 Data Mining—A Tutorial Based Primer, [M L o ndo n, P e ar s o n E d uca t io n I n c 9 2002 9  6  6 a n eeva k i  M  Pa r k in R  Poa l nuk h ov A  T i m oni n V M a gna n M   Demyanov V, and Canu S, “Environmental data mining and modeling based On machine learning algorithms ”,[J  E n v i r o nm e n tal Mo de l i ng  and Software 9 2004,9\(19\ ,PP.845-855 9  7  7 i X i ang J un Me ng Z h iQ i n g   D at a m i ni ng o f te m p o r al s e que nce i n a  temporal space”, [J  M i c r o-el ec t r on i c s a n d  C o m p u t er 200 2 2 9  PP  3 5 36 9  8  8 H a n J i a w ei  M i ch eli n e K a m b er  D a t a M i n i n g C o n c ept s and Techniques”, [M a nF r a n c is co  Mo r g an K a uf m a n P u bl is h  e r s 9 2001, pp. 10-120 9   
347 


Table 3 The generalized association rules generated from above database and taxonomy tree Generalized association rules confidence Generalized association rules confidence A==>T4 0.75 C,W==>T1 1 A==>T3 0.75 C,T1==>W 1 C==>T1 1 W,T1==>C 1 C==>T3 1 T==>W,T1 0.75 T3==>C 0.8 W==>T,T1 0.75 D==>T4 0.75 T,W==>T1 1 D==>T3 0.75 T,T1==>W 0.75 T==>T1 1 W,T1==>T 0.75 W==>T1 1 C==>T1,T3 1 T4==>T1 1 T3==>C,T1 0.8 T1==>T4 0.83 C,T1==>T3 1 T1==>T3 0.83 C,T3==>T1 1 T3==>T1 1 T1,T3==>C 0.8 A==>C,T3 0.75 C==>T,W,T1 0.75 C==>A,T3 0.75 T==>C,W,T1 0.75 A,C==>T3 1 W==>C,T,T1 0.75 A,T3==>C 1 C,T==>W,T1 1 C,T3==>A 0.75 C,W==>T,T1 0.75 C==>T,T1 0.75 C,T1==>T,W 0.75 C==>T,T1 0.75 T,W==>C,T1 1 T==>C,T1 0.75 T,T1==>C,W 0.75 C,T==>T1 1 W,T1==>C,T 0.75 C,T1==>T 0.75 C,T,W==>T1 1 T,T1==>C 0.75 C,T,T1==>W 1 C==>W,T1 1 C,W,T1==>T 0.75 W==>C,T1 1 T,W,T1==>C 1 C,T1==>T,W 0.75 C,T1==>T,W 0.75  4. FCET Index Tree  In this section, we employ a signature tree called the SG-tree [16 5 t o co m b in e m u ltip le FCET s. It is a  dynamic balanced tree similar to R-tree. Here, we call it an FCET index tree. In the tree, each internal node represents a logical OR with all its children, and contains an entry of the form <sig, ptrs>. The root has a “NULL signature and contains all the items in maximal itemsets In the leaf node, sig is the signature of an FCET, and ptrs point to the FCETs sharing the signature. In other words the signature of each internal node contains all signatures in the subtree pointed by itself. The index tree can help in finding maximal itemsets very quickly. As shown in Fig 5, if we want to find itemset {BH} with corresponding bit string 0100000100, we start searching from the root. After comparing with the left child, we find \(1111110000 and 0100000100 006 0100000100, so we compares with the right child \(0100001111 and 0100000100\00000100 Then downgrading to the next level, we continue to compare the left child \(0100001100 and 0100000100\00000100, and finally we reach to the FCET of {BGH}. Then, we can use the hash function expressed in equation \(1\o get the support count of BH} in the FCET of {BGH}. The total time complexity is O\(log2n\+O\(1\where n is the number of maximal itemsets              Fig. 5 FCET index tree   5. FCET Partition Tree for a Long Pattern  In this section, we also propose the partition-andmerge method to solve a long pattern problem t h e  length of a maximal itemset is 40, we may build 2 40 1 cells in an FCET; however, this is unrealistic. Instead, 2 40  cells are partitioned into 2 10 2 10 2 10 2 10 where it is feasible to fit 2 10 cells in the memory. Finally, we merge these cells using an intersection operation. For example, if we want to find the support count of {IJKL}, we reach to the node with signature {11111111111111110000000 Because the length of the maximal itemset is too large here we assume the maximal length within a node is 10 the node is designed to point to a partition tree, as the dotted box shown in Fig. 6. Then the SUB_TID of {IJ will be found in the FCET0_1, and the SUB_TID of KL} found in the FCET0_2. Finally, if 1,2,4,7,9 the return result will be {1,7,9} with support count=3            Fig. 6 FCET partition tree   6. Performance Evaluations           
569 


6.1 Simulation Model  In the section, we evaluate the performances of four data structures for algorithm Ap  E clat  C H A R M [10 an d F C ET on a D E L L G X 270 w i t h  Intel Pentium 4 3.2Ghz and 1 GB main memory running Windows XP. All the experimental data are generated from a normal distribution. The relative simulation parameters are shown in Table 4. To make our dataset representative, we generate two types of databases in the experiments; i.e., DENSE databases and SPARSE databases. Each item in the DENSE database is randomly generated from a pool P called potentially frequent itemsets with size 300, whereas each item in the SPARSE database is randomly generated from a pool N i.e., the set of all the items\ with size 1000. Since the items in the DENSE database are more clustered than those in the SPARSE database, larger frequent itemsets will probably be produced in the DENSE database for the same minimum support. In addition, we use the notations T for the average number of items per transaction I for the average number of items in a frequent itemset, and D for the number of transactions. For example, the experiment labeled with T 10 I 3 D 1K represents the simulation environment with 10 items on the average per transaction 3 items on the average in a frequent itemset, and 1000 transactions in total Table 4 Simulation parameters with default values D Number of transactions 100,000 T Number of the items per transaction 5-40 P Number of potentially frequent itemsets 300 I Number of the items in a frequent itemset 2-5 N Number of items 1000 R Number of taxonomy trees 31-75 L Number of levels in a taxonomy tree 3  6.2 Experimental Results  Experiment 1  In this experiment, we explored the required storage spaces of Apriori, CHARM, MaxEclat and FCET in the environment T10.I5.D10K under different minimum supports in SPARSE databases \(Fig 7\. We found that the FCET saves almost 10 times as much space compared with Apriori, especially under smaller minimum supports. The reason is that the FCET only stores maximal frequent itemsets, rather than the frequent itemsets  T10I5D10K 0 2000 4000 6000 8000 10000 12000 0.02 0.01 0.007 0.005 minimum support stora g e s p ace \(b y tes FCET MaxEclat Apriori CHARM Fig. 7 Required storage spaces in SPARSE databases  Experiment 2 In this experiment, we also explored the required storage spaces of Apriori, CHARM, MaxEclat and FCET in the environment T 40 I 20 D 10K under different minimum supports in DENSE databases \(Fig. 8 We found that the FCET saves almost 20 times as much space compared with Apriori, especially under smaller minimum supports. The reason is that the FCET can store the maximal itemsets generated in DENSE databases more efficiently than those in SPARSE databases  T40I20D10K 0 10000 20000 30000 40000 50000 60000 70000 80000 90000 0.02 0.01 0.005 0.003 0.002 minimum support storage space \(bytes  FCET MaxEclat Apriori CHARM Fig. 8 Required storage spaces in DENSE databases   Experiment 3 In this experiment, we explored the execution time of BASIC [17 Cu m u late [1 7  GMFI [9  and GMAR o rithm s  in t h e env i ronm e n t T10.I5.D10K/T40.I20.D10K under different minimum supports, as shown in Fig. 9 and 10, respectively. From Fig. 9 and 10, we found that GMFI/GMAR m pl o y i n g  the FCET perform better than the other ones in either SPARSE databases or DENSE databases   0 2 4 6 8 10 12 14 16 18 3210.75 minimum support execution time \(minutes GMFI GMAR BASIC Cumulate Fig. 9 Mining time in SPARSE databases  
570 


0 10 20 30 40 50 60 3210.75 minimum support execution time \(minutes GMFI GMAR BASIC Cumulate  Fig. 10 Mining time in DENSE databases  7.  Conclusions  Through several comprehensive experiments, we found that the FCET and IFECT can save a larger amount of storage spaces than Apriori, MaxEclat, and CHARM in both SPARSE databases and DENSE databases. Since the FCET stores fewer elements for a long pattern, when matched with GMFI/GMAR algorithm, it also revealed efficient execution time than BASIC and CUMULATE in mining generalized association rules The time complexity to find the maximal itemsets is O\(log2n\ where n is the total number of maximal itemsets. For a long pattern, we used a partition tree to count the SUB_TID of itemsets, and then got their merged results. Although the memory required for the FCET is still exponentially large, through limiting the size of maximal itemsets and the size of clustering to a reasonable memory requirement, we do save a large amount of storage spaces, especially in dense databases  7.    Conclusions  Through several comprehensive experiments, we found that the FCET and IFECT can save a larger amount of storage spaces than Apriori, MaxEclat, and CHARM in both SPARSE databases and DENSE databases. Since the FCET stores fewer elements for a long pattern, when matched with GMFI/GMAR algorithm, it also revealed efficient execution time than BASIC and CUMULATE in mining generalized association rules The time complexity to find the maximal itemsets is O\(log 2 n\ where n is the total number of maximal itemsets For a long pattern, we used a partition tree to count the SUB_TID of itemsets, and then got their merged results Although the memory required for the FCET is still exponentially large, through limiting the size of maximal itemsets and the size of clustering to a reasonable memory requirement, we do save a large amount of storage spaces especially in dense databases 8. References  1 g ra w a l, T  Im ieli n s k i an d A  S w a m i M in i n g  association rules between sets of items in large databases,” Proc. ACM International Conference on Management of Data \(1993\, pp. 207-216 2 g ra w a l an d R. Srik an t F a s t alg o rit h m s f o r  mining association rules,” Proc. 20th International Conference on Very Large Data Bases \(1994\ pp.487499  J i aW e i Han  J i an  P e i an d YiW en Yi n   Mi n i n g frequent patterns without candidate generation,” Proc ACM International Conference on Management of Data 2000\p. 1-12 4 J  S   Pa r k  M  S  C h en  an d P S  Y u     A n ef f e c t iv e hash-based algorithm for mining association rules,” Proc ACM International Conference on Management of Data 1995\p.175-186 5 A  Sa va se r e  E  O m i e c i ns ki  a n d S N a va t h e    A n  efficient algorithm for mining association rules in large databases,”  Proc. 21st International Conference on Very Large Data Bases \(1995\ pp.432-443 6 Y i n-F u H u a ng a n d  Chi e h M i ng W u   M i n i n g  generalized association rules using pruning techniques Proc. IEEE International Conference on Data Mining 2002\p.227-234 7 a k i a n d C.J  Hsia o   E ff icie n t al g o rith m s f o r  mining closed itemsets and their lattice structure, ”  IEEE Transactions on Knowledge and Data Engineering, vol 17, no. 4, April \(2005\p. 462-478   Bu rdick  M. C a li m l i m  an d J. Geh r k e  M AF I A a maximal frequent itemset algorithm for transactional databases,” Proc. 17th International Conference on Data Engineering, \(2001\p.443-452  a k i S  P a rth a s a rat h y   M. Ogih ara, a n d W. Li   New algorithms for fast discovery of association rules Proc. 3rd ACM International Conference on Knowledge Discovery in Databases and Data Mining, \(1997\pp 283-286 10 M  J  Za ki a n d K  G o ud a  Fa s t ve r t i c a l  mi ni ng usi n g  diffsets,” Proc. 9th ACM International Conference on Knowledge Discovery and Data Mining, Aug. \(2003   Mam o u l i s D  W. C h e u ng an d W. L i a n    Similarity search in sets and categorical data using the signature tree,” Proc. 19th International Conference on Data Engineering, \(2003 12 R. Srik a n t a n d R Ag ra w a l   M i n i n g g e n e ralized  association rules,” Proc. 21st International Conference on Very Large Data Bases, \(1995\.407-419    
571 


Time Complexity and Speed We now evaluate scalability and speed with large high dimensional data sets to only compute the models as shown in Figure 7 The plotted times include the time to store models on disk but exclude the time to mine frequent itemsets We experimentally prove 1 Time complexity to compute models is linear on data set size 2 Sparse vector and matrix computations yield efÞcient algorithms whose accuracy was studied before 3 Dimensionality has minimal impact on speed assuming average transaction size T is small Transactions are clu stered with Incremental Kmeans 26 introduced on Sectio n 3 Large transaction les were created with the IBM synthetic data generator 3 ha ving defaults n 1 M T=10 I=4 Figure 7 shows time complexity to compute the clustering model The rst plot on the left shows time growth to build the clustering with a data set with one million records T10I4D1M As can be seen times grow linearly as n increases highlighting the algorithms efÞciency On the other hand notice d has marginal impact on time when it is increased 10-fold on both models due to optimized sparse matrix computations The second plot on the right in Figure 7 shows time complexity to compute clustering models increasing k on T10I4D100k Remember k is the main parameter to control support estimation accuracy In a similar manner to the previous experiments times are plotted for two high dimensionalities d  100 and d 1  000 As can be seen time complexity is linear on k  whereas time is practically independent from d  Therefore our methods are competitive both on accuracy and time performance 4.5 Summary The clustering model provides several advantages It is a descriptive model of the data set It enables support estimation and it can be processed in main memory It requires the user to specify the number of clusters as main input parameter but it does not require support thresholds More importantly clusters can help discovering long itemsets appearing at very low support levels We now discuss accuracy In general the number of clusters is the most important model characteristic to improve accuracy A higher number of clusters generally produces tighter bounds and therefore more accurate support estimations The clustering model quality has a direct relationship to support estimation error We introduced a parameter to improve accuracy wh en mining frequent itemsets from the model this parameter eliminate spurious itemsets unlikely to be frequent The clustering model is reasonably accurate on a wide spectrum of support values but accuracy decreases as support decreases We conclude with a summary on time complexity and efÞciency When the clustering model is available it is a signiÞcantly faster mechanis m than the A-priori algorithm to search for frequent itemsets Decreasing support impacts performance due to the rapid co mbinatorial growth on the number of itemsets In general the clustering model is much smaller than a large data set O  dk  O  dn  A clustering model can be computed in linear time with respect to data set size In typical transaction data sets dimensionality has marginal impact on time 5 Related Work There is a lot of research work on scalable clustering 1 30 28 a nd ef  c i e nt as s o ci at i o n m i n i n g 24  1 6  40  but little has been done nding relations hips between association rules and other data mining techniques SufÞcient statistics are essential to accelerate clustering 7 30 28  Clustering binary data is related to clustering categorical data and binary streams 26 The k modes algorithm is proposed in 19  t hi s a l gori t h m i s a v a ri ant o f K means  but using only frequency counting on 1/1 matches ROCK is an algorithm that groups points according to their common neighbors links in a hierarchical manner 14 C A C TUS is a graph-based algorithm that clusters frequent categorical values using point summaries These approaches are different from ours since they are not distance-based Also ROCK is a hierarchical algorithm One interesting aspect discussed in 14 i s t he error p ropagat i o n w hen u s i ng a distance-based algorithm to cluster binary data in a hierarchical manner Nevertheless K-means is not hierarchical Using improved computations for text clustering given the sparse nature of matrices has been used before 6 There is criticism on using distance similarity metrics for binary data 12  b ut i n our cas e w e h a v e p ro v e n K means can provide reasonable results by ltering out most itemsets which are probably infrequent Research on association rules is extensive 15 Mos t approaches concentrate on speed ing up the association generation phase 16 S ome o f t hem u s e dat a s t ruct ures t h at can help frequency counting for itemsets like the hash-tree the FP-tree 16 or heaps  18  Others res o rt to s t atis tical techniques like sampling 38 s t at i s t i cal pruni ng 24   I n  34  global association support is bounded and approximated for data streams with the support of recent and old itemsets this approach relies on discrete algorithms for efÞcient frequency computation instead of using machine learning models like our proposal Our intent is not to beat those more efÞcient algorithms but to show association rules can be mined from a clustering model instead of the transaction data set In 5 i t i s s ho wn that according t o s e v eral proposed interest metrics the most interesting rules tend to be close to a support/conÞdence border Reference 43 p ro v e s several instances of mining maximal frequent itemsets a 
616 
616 


constrained frequent itemset search are NP-hard and they are at least P-hard meaning t hey will remain intractable even if P=NP This work gives evidence it is not a good idea to mine all frequent itemsets above a support threshold since the output size is combinatorial In 13 t h e a ut hors d eri v e a bound on the number of candidate itemsets given the current set of frequent itemsets when using a level-wise algorithm Covers and bases 37 21 a re an alternati v e t o s ummarize association rules using a comb inatorial approach instead of a model Clusters have some resemblance to bases in the sense that each cluster can be used to derive all subsets from a maximal itemset The model represents an approximate cover for all potential associations We now discuss closely related work on establishing relationships between association rules and other data mining techniques Preliminary results on using clusters to get lower and upper bounds for support is given in 27  I n g eneral there is a tradeoff between rules with high support and rules with high conÞdence 33 t h i s w o rk propos es an al gorithm that mines the best rules under a Bayesian model There has been work on clustering transactions from itemsets 41  H o w e v er  t hi s a pproach goes i n t he oppos i t e di rection it rst mines associations and from them tries to get clusters Clustering association rules rather than transactions once they are mined is analyzed in 22  T he out put is a summary of association rules The approach is different from ours since this proposal works with the original data set whereas ours produces a model of the data set In 42 the idea of mining frequent itemsets with error tolerance is introduced This approach is related to ours since the error is somewhat similar to the bounds we propose Their algorithm can be used as a means to cluster transactions or perform estimation of query selectivity In 39 t he aut hors explore the idea of building approximate models for associations to see how they change over time 6 Conclusions This article proposed to use clusters on binary data sets to bound and estimate association rule support and conÞdence The sufÞcient statistics for clustering binary data are simpler than those required for numeric data sets and consist only of the sum of binary points transactions Each cluster represents a long itemset from which shorter itemsets can be easily derived The clustering model on high dimensional binary data sets is computed with efÞcient operations on sparse matrices skipping zeroes We rst presented lower and upper bounds on support whose average estimates actual support Model-based support metrics obey the well-known downward closure property Experiments measured accuracy focusing on relative error in support estimations and efÞciency with real and synthetic data sets A clustering model is accurate to estimate support when using a sufÞciently high number of clusters When the number of clusters increases accuracy increases On the other hand as the minimum support threshold decreases accuracy also decreases but at a different rate depending on the data set The error on support estimation slowly increases as itemset length increases The model is fairly accurate to discover a large set of frequent itemsets at multiple support levels Clustering is faster than A-priori to mine frequent itemsets without considering the time to compute the model Adding the time to compute the model clustering is slower than Apriori at high support levels but faster at low support levels The clustering model can be built in linear time on data size Sparse matrix operations enable fast computation with high dimensional transaction data sets There exist important research issues We want to analytically understand the relationship between the clustering model and the error on support estimation We need to determine an optimal number of clusters given a maximum error level Correlation analysis and PCA represent a next step after the clustering model but the challenges are updating much larger matrices and dealing with numerical issues We plan to incorporate constraints based on domain knowledge into the search process Our algorithm can be optimized to discover and periodically refresh a set of association rules on streaming data sets References 1 C  A ggar w al and P  Y u F i ndi ng gener a l i zed pr oj ect ed cl usters in high dimensional spaces In ACM SIGMOD Conference  pages 70Ð81 2000 2 R  A g r a w a l  T  I mie lin sk i a n d A  S w a mi M in in g a sso c i a tion rules between sets of items in large databases In ACM SIGMOD Conference  pages 207Ð216 1993 3 R  A gr a w al and R  S r i kant  F ast a l gor i t h ms f o r m i n i n g a ssociation rules in large databases In VLDB Conference  pages 487Ð499 1994 4 A  A su n c io n a n d D Ne wman  UCI Machine Learning Repository  University of California Irvine School of Inf and Comp Sci http://www.ics.uci.edu 002 mlearn/MLRepository.html 2007 5 R  B a y a r d o a n d R  A g r a w a l  M in in g t h e mo st in te re stin g rules In ACM KDD Conference  pages 145Ð154 1999 6 R  B ekk e r m an R  E l Y a ni v  Y  W i nt er  a nd N  T i shby  O n feature distributional clustering for text categorization In ACM SIGIR  pages 146Ð153 2001 7 P  B r a dl e y  U  F ayyad and C  R ei na S cal i n g c l u st er i n g a l gorithms to large databases In ACM KDD Conference  pages 9Ð15 1998  A  B yk o w sk y a nd C Rigotti A c ondensed representation t o nd frequent patterns In ACM PODS Conference  2001 9 C  C r e i ght on and S  H anash Mi ni ng gene e xpr essi on databases for association rules Bioinformatics  19\(1\:79 86 2003 
617 
617 


 L  C r i s t o f o r a nd D  S i mo vi ci  G ener at i n g a n i nf or mat i v e cover for association rules In ICDM  pages 597Ð600 2002  W  D i ng C  E i ck J  W ang and X  Y uan A f r a me w o r k f o r regional association rule mining in spatial datasets In IEEE ICDM  2006  R  D uda and P  H ar t  Pattern ClassiÞcation and Scene Analysis  J Wiley and Sons New York 1973  F  G eer t s  B  G oet h al s and J  d en B u ssche A t i ght upper bound on the number of candidate patterns In ICDM Conference  pages 155Ð162 2001  S  G uha R  R ast ogi  a nd K  S h i m  R O C K  A r ob ust c l u stering algorithm for categorical attributes In ICDE Conference  pages 512Ð521 1999  J H a n a nd M K a mber  Data Mining Concepts and Techniques  Morgan Kaufmann San Francisco 1st edition 2001  J H a n J P e i  and Y  Y i n  M i n i n g f r e quent pat t e r n s w i t hout candidate generation In ACM SIGMOD Conference  pages 1Ð12 2000 17 T  Ha stie  R  T ib sh ira n i a n d J  F rie d ma n  The Elements of Statistical Learning  Springer New York 1st edition 2001  J H u ang S  C h en a nd H  K uo A n ef  c i e nt i n cr emental mining algorithm-QSD Intelligent Data Analysis  11\(3\:265Ð278 2007  Z  H u ang E x t e nsi ons t o t h e k m eans a l gor i t h m f or cl ust e r ing large data sets with categorical values Data Mining and Knowledge Discovery  2\(3\:283Ð304 1998  M K r yszki e w i cz Mi ni ng w i t h co v e r a nd e x t e nsi o n oper a tors In PKDD  pages 476Ð482 2000  M K r yszki e w i cz R e duci n g bor der s of kdi sj unct i o n f r e e representations of frequent patterns In ACM SAC Conference  pages 559Ð563 2004  B  L e nt  A  S w a mi  a nd J W i dom C l u st er i n g a ssoci at i o n rules In IEEE ICDE Conference  pages 220Ð231 1997 23 T  M itc h e ll Machine Learning  Mac-Graw Hill New York 1997  S  Mori shi t a and J  S ese T r a v ersi ng i t e mset s l at t i ces wi t h statistical pruning In ACM PODS Conference  2000  R  N g  L  L akshmanan J H a n and A  P ang E xpl or at or y mining and pruning optimizations of constrained association rules In ACM SIGMOD  pages 13Ð24 1998  C  O r donez C l ust e r i ng bi nar y dat a st r eams w i t h K means In ACM DMKD Workshop  pages 10Ð17 2003  C  O r donez A m odel f or associ at i o n r ul es based o n c l u st er ing In ACM SAC Conference  pages 549Ð550 2005 28 C Ord o n e z  In te g r a tin g K me a n s c lu ste r in g w ith a r e l a tio n a l DBMS using SQL IEEE Transactions on Knowledge and Data Engineering TKDE  18\(2\:188Ð201 2006  C  O r donez N  E z quer r a  a nd C  S a nt ana C onst r ai ni ng and summarizing association rules in medical data Knowledge and Information Systems KAIS  9\(3\:259Ð283 2006  C  O r donez a nd E  O m i eci nski  E f  ci ent d i s kbased K means clustering for relational databases IEEE Transactions on Knowledge and Data Engineering TKDE  16\(8\:909Ð921 2004 31 S Ro we is a n d Z  G h a h r a m a n i A u n i fy in g r e v ie w o f lin e a r Gaussian models Neural Computation  11:305Ð345 1999  A  S a v a ser e  E  O mi eci nski  a nd S  N a v a t h e A n ef  c i e nt al gorithm for mining association rules In VLDB Conference  pages 432Ð444 September 1995  T  S c hef f er  F i ndi ng associ at i o n r ul es t h at t r ade s uppor t optimally against conÞdence Intelligent Data Analysis  9\(4\:381Ð395 2005  C  S i l v est r i a nd S  O r l a ndo A ppr oxi mat e mi ni ng of f r e quent patterns on streams Intelligent Data Analysis  11\(1\:49Ð73 2007  R  S r i k ant a nd R  A g r a w a l  Mi ni ng gener a l i zed associ at i o n rules In VLDB Conference  pages 407Ð419 1995 36 R Srik a n t a n d R Ag ra w a l M i n i n g q u a n tita ti v e a sso c i a tio n rules in large relational tables In ACM SIGMOD Conference  pages 1Ð12 1996  R  T a oui l  N  Pasqui er  Y  B ast i d e and L  L akhal  Mi ni ng bases for association rules using closed sets In IEEE ICDE Conference  page 307 2000  H  T o i v onen S a mpl i n g l ar ge dat a bases f or associ at i o n r ul es In VLDB Conference  1996  A  V e l o so B  G usmao W  Mei r a M C a r v al o Par t hasar a t h i  and M Zaki EfÞciently mining approximate models of associations in evolving databases In PKDD Conference  2002  K  W a ng Y  H e  a nd J H a n P u shi n g s uppor t c onst r ai nt s into association rules mining IEEE TKDE  15\(3\:642Ð658 2003  K  W a ng C  X u  a nd B  L i u C l ust e r i ng t r ansact i ons usi n g large items In ACM CIKM Conference  pages 483Ð490 1999  C  Y a ng U  Fayyad and P  B r a dl e y  E f  ci ent d i s co v e r y of error-tolerant of frequent itemsets in high dimensions In ACM KDD Conference  pages 194Ð203 2001  G  Y a ng T h e c ompl e x i t y of mi ni ng maxi mal f r e quent i t e msets and maximal frequent patterns In ACM KDD Conference  pages 344Ð353 2004  T  Z h ang R  R a makr i s hnan and M  L i v n y  B I R C H  A n efÞcient data clustering method for very large databases In ACM SIGMOD Conference  pages 103Ð114 1996 
618 
618 


