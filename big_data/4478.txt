Discovering Temporal Similarity Pattern Based on Metamorphosis Data   Yuan Tian Computer and Communi cations Department Hunan Institute of Engineering Xiangtan, 411101, China tianyuan9000@126.com   Abstract  This paper discusses a metamorphosis method for temporal data mining We propose definition of temporal type and time granularity to divide into segments for time, then bu ild an event temporal space which may describe something change of data over time. We give the conception of metamorphosis data in event temporal types space so that it is easier to discover valuable knowledge, but it is  not clear to do it if original data are not metamorphosis. By metamorphosis data, we study a problem of knowledge discovery of temporal similarity pattern based on the temporal type is given  A method based on selforganizing map \(SOM\ to find similarity pattern is proposed  1. Introduction  The temporal data mining has a wide spectrum for knowledge discovery, such as periodic patterns of stock movement, a temporal association rule of the two products, frequent sequences of  car manufacturing to signal jam detection. John and Myra introduced a framework for reviewing research related to temporal mining and have reviewed research contributions related to various aspects of the temporal data mining and knowledge discovery in detail T h e t e m poral  data in the many fields is so complex that it is very difficult to mine useful knowledge. A feasible method is often used to reconstruct phase spaces, which can solve the prediction of complicated time series events  Large amounts of time series data is produced routinely in a number of application areas, such as finance, economy, process industry, experimental sciences, medicine, and monitoring of electrical distribution network disturbances. The analysis of such data is an important task to discover pertinent knowledge in data and hence time series data mining assumes significance and usefulness. There are many researches of similarity patterns in the field of molecular mechanisms \(biology g u a ge  acquisition \(linguistics\4 cer d i ag n o sis  medicine B u t, p a p e rs o f  si m ilarit y p a ttern s o f  temporal data mining are few. Dash, Nayak, Senapati and Lee did data mining for similarities in time series data by using wavelet-based feature vectors and neural networks [6  W a ng a n d M e ga l o o i ko no mo u d i sc u sse d  a dimensionality reduction technique for efficient time series similarity analysis Similarity pattern is a particularly interesting feature that could be used for understanding temporal data and predicting future trends. Similarity pattern mining  should be an active research in the fields of data mining. It has wide applications, such as stock consumption, weather, e-business and so on. In this paper, we define temporal data space as reconstructing phase spaces by metamorphosis data. In the metamorphosis temporal data space, we can discovery similarity pattern for complex time event to extend full or partial periodicity patterns  2. Temporal Type a nd Time Granularity  There exist the temporal record in many real-world databases, and the length of time has a great impact on 
2009 International Conference on Computational Intelligence and Security 978-0-7695-3931-7/09 $26.00 © 2009 IEEE DOI 10.1109/CIS.2009.71 59 


the validity of the temporal association rules, cycle length and similarity sequence patterns Time in the real world is deemed to be limitless without beginning and ending. Time can be regarded as a real number axis, each point of which represents some moment, just like that described in physics. The interval from one point to another point can be viewed as some time. As a result, we call the moment in real world as absolute time tick \(ATT\, all of which constitute a real number set R or time axis\n order to decide the real numbers which represent moment we choose January 1, A.D.1 00:00:00 as the origin of the axis R and precision of every point on R is second or more precise unit. The interval from one point to another is called absolute time interval \(ATI\which is a set of ATTs. For example, February 2, 2000 02:03:50 is an ATT and an ATI can be from February 2, 2000 00:00:00 to February 2,2000 24:00:00 Now, we give a definition of temporal type as follows Definition 2.1 Let  be a mapping from a t to an ATI  t  i.e 2 R R 002  R t 003   2 R t  003 003  tt  002 If all of the following \(1\\(4\are satisfied, then  is called a temporal type and   t  is called the temporal factor of the temporal type   Non-empty  t  004\005 for   t t  003  Monotonous\ For 2 1 t t  and 12    tt  006=\005 003 then arbitrary 1  tt  003  and arbitrary 2  tt  003   tt   holds, which is denoted by     2 1 t t     Identical  tt  003    tt     Limitary  For each  tt  003  007   t  The definition of temporal type in this paper is in several respects more general than the time models used in other papers. Obviously temporal type is clustering to time axis R and each temporal factor is an interval. Second, minute, hour, day, week, month and year which satisfy the above properties  can be used to classify time axis R and thus they are temporal type If   t   R t 003 nly one point \(i.e. time tick\, then   is called atomic temporal type otherwise  is called non-atomic  temporal type The temporal type usually used in our daily life is Non-atomic. The following properties are obtained accord ing to the Definition2.1 Property 2.1 If 2 1 t t 004 then      2 1 005  006 t t    or    2 1 t t     Property 2.2 Let  be a non-atomic temporal type and n an integer   TT is a given absolute time interval. Then there exist n real numbers 12   n tt t 000  with 12 n tt t   000 which satisfy       1 000 n i i t T T  010   therein whenever 1,2 ij n 003 with j i 004  005  006     j t i t    Property 2.3 For any R t 003 sup  t  and inf   t  then inf   t  011 011 i t sup  t   for all  i tt  003  Then, we present the length of temporal factor  t   with the formula   t  sup   inf   tt   Clearly the actual measure of time axis depends on the time unit used in application under consideration. A year may be partitioned into 12 months, and also into 365 days. Which partition is more applicable? For example in a geological database on sediments, days will be too fine as a time unit. So day is used to partition the time interval there Basic temporal type helps to solve the aforementioned problem. Then, we give the definition and properties about basic temporal type  Definition 2.2 Let 012    be two temporal type s. If       t t  012  holds for any tR 003 which is called temporal type  012 less than temporal type  For any temporal factor    t 012 of 012 if there is only one temporal  factor of  noted as    t  such that      t t  012 010 then 012 is called a basic temporal type  of   Obviously second is the basic temporal type of minute, hour, day, week, month, quarter and year. That is, each second falls entirely within one minute, one hour, one day and so on. Likewise hour is the basic 
60 


temporal type of day, week, month, quarter and year The rest may be deduced by analogy. Whereas week is not the basic temporal type of month due to the overlap of temporal factors i.e. a month can start in the middle of a week. For example, the fifth week of January 2003, i.e. from January 26, 2003 to February 1, 2003 falls in January   and February Property 2.4 Let the temporal types 012 be a basic temporal type of  Then for any   t   of  there exist n real numbers 12   n tt t with 12 n tt t   000  such that     1 000 n i i t t   012  where 005  006     j t i t     1 2  ij n 003 with j i 004  000   n i i t v t 1      holds Definition 2.3 Let  be a non-atomic temporal type  and 012 a basic temporal type of  And     1 000 n i i t t   012  therein 12 n tt t   000 and whenever  1 2  ij n 003  with j i 004  005  006     j t i t   So the relative length of  t  to v is n which is denoted by Re    llen t n 012    Definition 2.4 Let   be a non-atomic  temporal type and 012 a basic temporal type of  Then we have the following definitions 1  If the lengths of all temporal factor s of  are equal  is called a time granularity  2  If 012 is a time granularity then 012 is called a basic time granularity of   3  If all temporal factor s  i t  of  can be classified as finite classes in accordance with the length of  i t    is called a coarse time granularity  4  If 012 is a coarse time granularity  012 is called a basic coarse time granularity of   Any time granularity is coarse time granularity  We can conclude the following corollary according to the property 2.2 Corollary 2.1 Any given time interval can be covered by finite time factor s of any coarse time granularity  So, the temporal types often used in our daily life such as second, minute, hour, day and week are time granularities, while the temporal types such as month quarter and year are only coarse time granularities because the lengths of all their temporal factors are different. Obviously second, minute, hour and day are the basic time granularities of month, quarter and year Basic time granularity is often used to measure other time granularities or coarse time granularities. For example, in stock statistic second and day are often used as basic granularities to describe the trend of stock fluctuation. Also we can use coarse time granularity to measure other time granularities or coarse time granularities. Month has four different lengths, i.e. 28 days, 29 days, 30 days and 31 days. A quarter which has four different lengths has three months. A year which has two different lengths has twelve months or four quarters  3. Discovering Temporal Similarity Pattern in Event Temporal Types Space  Let  A be a set of objectives, denoted by      2 1 m A A A A 000  where each i A   i 1,2 m s the same attributes 12    q SSS S  000 and each attribute i S   i 1,2 q cludes many values e The value e may be finite or infinite number \(or symbol\A value i e  i 1,2 q of attribute i S  is called a state of i S All values i e of state are denoted by a set E i  Let       2 1 q e e e e 000   q E E E E     000 2 1 then   i Ae 000\004 called an event. Then A  E  event types space of objective A which consists of all event types  i Ae 000\004 et 012 be a temporal type, then       t v e A i is called a temporal event for objective i A at temporal factor   t 012  A  E  012 alled event temporal types space  For example, some stock  can be defined as objects sets. Each stock has some attributes such as  opening price  closing price, selling deal and so on. Each price has real number       t v e A i Stock A 
61 


10.00,10.12,45000\,20/08/2006\eans that Stock A has  as  opening price 10.00  closing price 10.12 selling deal 45000 on August,20,2006  In fact, a temporal event may be a record in database. We can discover some knowledge by mining these temporal data. But,  there are too many anomalistic data in temporal database so that it is very difficult to discover  valuable knowledge, such as the price of stock. We need change value of attribute into other value so that we can easily find out some valuable knowledge, such as temporal associate rule approximate period.  We give definition the metamorphosis of data Definition 3.1 Let A  E  012 and A  E    event temporal types space, where  is a basic temporal type of 012 Let a map i 013  ii E 014 002  where i 014 is also state value of  each attribute i S All values of state i 014 is denoted by a set E i            2 1 q E E E E 000  Then      2 1 q 013 013 013 013 000  is called a metamorphosis of data from E to E for   012 en v         2 1 q 013 013 013 013 000  is called a metamorphosis of data from E to E  Let A  A 1  A 2    A m be a set of finite attributes Suppose that v is a temporal type, an event that an attribute A i happens in state e at the temporal factor v  t represented as A i  e  v  t  Let a set 11 2 2                    ii i iJJ Aev Aevt Ae vt Ae vt  000G\000G 000  12 J tt t   000 otes an event sequence for state j e  to  attribute A i at v  t j  j 1,2 J All event sequence set is denoted by   ev 000G\000G A   Definition 3.2  Let any two   ii Aev Aev 000J\000G 000J\000G 000J\000G 000J\000G    ev 003 000G\000G A  Let a metamorphosis map 0,1 E 013 002  For given number 015 let 12       x eee 013\013      J e 013 and 12          J x eee e 013\013 013     xe xe 015 011 Then   i Aev 000G\000G is called temporal similarity to   i Aev 000G 000G for 015 Let a set TS J    i Aev 000G 000G  temporal similarity pattern to   i Aev 000G\000G for 015 where each   i Aev 000G 000G in TS J    i Aev 000G 000G mporal similarity to   i Aev 000G 000G for 015 when number of  element in TS J     i Aev 000G 000G s enough big When 12 J ee e  000  each   i Aev 000G 000G in TS J    i Aev 000G 000G a repeated sequence to occur. Each event sequence in TS    i Aev 000G 000G eans similarity law of continuous state under different temporal factors if there is not any temporal factor between  j vt and 1  j vt  for all j 1,2 J 1. If there are all same number of temporal factors between  j vt and 1  j vt   for all j 1,2 J 1 TS J    i Aev 000G\000G a similarly period pattern. On the other hand, let p jj 1  be  number of temporal factors between  j vt and 1  j vt  If p 12  p 23 p J-1J then TS    i Aev 000G 000G a similarity period pattern when all state are same in TS J    i Aev 000G\000G  We propose a method based on self-organizing map \(SOM\ find similarity pattern in   ev 000G 000G A The SOM consists of disciplinarian neuron of two dimensional matrix m 003j m which a weight vector from a input vector X i   x e neuron or connected unit j in output layer is defined as a vector w ij where the dimension value of X i  is equal to that of w ij The number of neuron from ten to thousand decides efficiency and validity of the SOM. The  training algorithm of SOM is as follows   Step 1. Give a training set   ev 000G\000G A and 015  a metamorphosis map 0,1 E 013 002 then we obtain set   x e  a\ each step of the iterative training, choose an event sequence X i   x e 003   as input vector and compute distances from vector X i  to all units of SOM so that  the winner unit, denoted by w i b is obtained 
62 


Here w i b is the closest vector to X i  among all vectors  w ij i.e  X i w i b  min j  X i w i j  1 b\ Select weigh value  of point in the neighborhood of the winner  b to close input vector by training SOM. The iteration equality  is satisfied in grid as follows  w ij  k 1 w ij  k    k  X i w ij  k   2 where k is the number of iteration   k ing rate in \(0,1\dditionally w ij approaches to X i when k  increases c\Then, we repeat  \(a\ and  \(b\ent sequences are trained d\ mapping structure set w ij of all input vector with corresponding to   ev A which is equal to classification C ij  Step 2.  Find all temporal similarity patterns  TS J    i Aev   a\et i 1 j 1 TS ij    i Aev      b\ For all   i Aev  C ij if  ij xe 015  w 2 then   i Aev is added into set TS ij    i Aev   c\or i i  j j repeat  \(b i  j  m  According to the above algorithm TS ij    i Aev  is a temporal similarity to   i Aev for 015 because     ij ij xe xe xe xe 015  ww  Let denote TS J    i Aev    TS ij    i Aev For given different 015 we may obtain different temporal similarity patterns TS J    i Aev   4. Conclusions  This paper proposes definition of temporal type and time granularity to divide into segments for time. We build an event temporal space which may describe something change of data at temporal type, such as similarity pattern. We give the conception of metamorphosis data in event temporal types space so that it is easier to discover valuable knowledge. And we present the similarity pattern on the basis of temporal type. And lastly, we discuss a clustering algorithm based on self-organizing map to detect temporal similarity pattern. The algorithm of this paper has discovered some similarity patterns in the web data. It is very significant in the practical  application in the web page couldnt be commonly found. A future work direction will be to extend the work that looks for other pattern on multi-attribute and multiple time granularities. Another interesting extension of our work will be the development of the algorithm to raise its efficiency  5. References  1  John F. Roddick and Myra Spiliopoulou  A Survey of Temporal Knowledge Discovery Paradigms and Methods IEEE Transactions on Knowledge and Data Engineering Vol. 14, No. 4, JULY/AUGUST 2002 pp 750-767 2  Richard J. Povinelli and Xin Feng  A New Temporal Pattern Identification Method for Characterization and Prediction of Complex Time Series Events IEEE Transactions on Knowledge and Data Engineering Vol.15, No.2, 2003 pp 339-353 3  Nikita N. Khromov-Borisov, Igor B. Rogozin, João Antonio Pêgas Henriques, Frederick J. de Serres  Similarity pattern analysis in mutational distributions Mutation Research/Fundamental and Molecular Mechanisms of Mutagenesis Volume 430, Issue 1, 29 November 1999 pp 55-74 4  Hiroko Kato Solvang, Masanobu Taniguchi, Tomohiro Nakatani, Shigeaki Amano  Classification and similarity analysis of fundamental frequency patterns in infant spoken language acquisition Statistical Methodology Volume 5, Issue 3, May 2008 pp 187208 5  Tae Young Yang  Efficient multi-class cancer diagnosis algorithm using a gl obal similarity pattern Computational Statistics & Data Analysis Volume 53 Issue 3, 15 January 2009 pp 756-765 6  P.K. Dash, Maya Nayak, M.R. Senapati and  I.W.C. Lee Mining for similarities in time series data using wavelet-based feature vectors and neural networks Engineering Applications of Artificial Intelligence  Volume 20, Issue 2, March 2007, pp. 185-201 7  Qiang Wang and Vasileios Megalooikonomou, A dimensionality reduction technique for efficient time series similarity analysis Information Systems Volume 33, Issue 1, March 2008, pp.  115-132  
63 


decreases number of valid candidate generation decreases For this reason, case with 5% MACS takes more time than case with 3% MACS and case with 10 MACS takes more time than case with 5 MACS Figure 7 illustrates accuracy results for our proposed algorithm based on minimum antecedent support The value of minimum antecedent support for each presented result is also indicated The figu re presents MAS has no lead in accuracy as it is not used as a parameter in selecting valid candidate an d rules Figure 8 illustrates accuracy results for our proposed algorithm based on maximum confidence The figure presents maximum confidence has lead in accuracy as it is used as parameter in selecting va lid rules As maximum confidence decreases accuracy increases and the number of discovered rules decreases. It is because less confidence indicates th at antecedent and consequent occurs rarely together  i n the dataset 7 Conclusion Irregular patterns represent wrong decision illegal practice and variability in decision In th is paper, we propose a level wise search algorithm tha t works based on action and non-action type data to find irregular association rule The proposed algorithm has been applied to a real world patient data set. We have shown significant accuracy in the  output of the proposed algorithm. Although we have used level-wise search for finding irregular patter ns each step of our algorithm is different from any ot her level-wise search algorithm Rules generation from desired item sets is also different from conventiona l association mining algorithms 8. References 1 R Agrawal T P L H O L V N L D Q G   Swami Mining Association Rules between Sets of Items in Very Large Databases in Proceedings of the 1993 ACM SIGMOD international conference on Management of data Washington, D.C., 1993, pp. 207-216 2 R Agrawal and R Srikant Fast Algorithms for Mining Association Rules in Large Databases in Proceedings of the 20th International Conference on  Very Large Data Bases  San Francisco CA USA 1994, pp. 487 499 3 S Brin, R Motwani, J D. Ullman, and Shalom Tsur Dynamic Itemset Counting and Implication Rules for Market Basket Data in Proceedings of the 1997 ACM SIGMOD international conference on Management of data Tucson, Arizona, United States 1997, pp. 255-264 4 H Mannila H Toivonen and A I Verkamo Efficient Algorithms for Discovering Association Rules in AAAI Workshop on Knowledge Discovery in Databases 1994, pp. 181-192 5 J S Park M S Chen and P S Yu An Effctive Hash based Algorithm for mining association rules in Prof ACM SIGMOD Conf Management of Data  New York, NY, USA, 1995, pp. 175 186 6 A Savasere E Omiecinski and S B Navathe An Efficient Algorithm for Mining Association Rules in Large Databases in Proceedings of the 21th International Conference on Very Large Data Bases  1995, pp. 432 444 7 B Liu W Hsu and Y Ma Mining Association Rules with Multiple Minimum Supports in SIGKDD Explorations 1999, pp. 337--341 8 H Yun D Ha B Hwang and K H Ryu Mining association rules on significant rare data using relat ive support Journal of Systems and Software archive  vol. 67, no. 3, pp. 181 191, 2003 9 M Hahsler A Model-Based Frequency Constraint for Mining Associations from Transaction Data Data Mining and Knowledge Discovery  vol 13 no 2, pp. 137 166, 2006 10 L Zhou and S Yau Association rule and quantitative association rule mining among infrequent  items in International Conference on Knowledge Discovery and Data Mining  San Jose California 2007, pp. 156-167 11 R. U Kiran and P. K Reddy, "An improved multiple minimum support based approach to mine rare association rules in The IEEE Symposium on Computational Intelligence and Data Mining  Nashville, TN, USA, 2009, pp. 340-347 12 S Brin R Motwani and C Silverstein Beyond Market Baskets Generalizing Association Rules to Correlations in In The Proceedings of SIGMOD  AZ,USA, 1997, pp. 265-276 13 X Wu, C Zhang, and S Zhang, "Efficient Mining of Both Positive and Negative Association Rules ACM Transactions on Information Systems  vol 22 no 3 p. 381  405, 2004 14 M L Antonie and O R. Zaïane, "Mining positive and negative association rules an approach for confined rules in Proceedings of the 8th European Conference on Principles and Practice of Knowledge Discovery in Databases Pisa, Italy, 2004, pp. 27 38 15 P A Ortega C J Figueroa and G A Ruz A Medical Claim Fraud/Abuse Detection System based on Data Mining A Case Study in Chile in DMIN  2006, pp. 224-231 16 W S Yanga and S Y Hwangb A Process-Mining Framework for the Detection of Healthcare Fraud and Abuse Expert Systems with Applications  vol 31 no. 1, p. 56  68, July 2006 68 


 T ABLE 26  C LASSIFICATION  OF T RANSLATION C OUNT  Translation  Count Class Population Percentage one 58,990 76.34 two 14,581 18.87 three or more 3698 4.79 15\  User Interface There are 97,302 OSS Projects \(72.32 of the recorded projects that list the available user interface for the project.  There are 60 distinct values which is then classified into 4 classes as shown in Table 26  T ABLE 26  U SER I NTERFACE CLASSIFICATION FOR OSS  P ROJECT  User Interface Class Population Percentage  Desktop-based 58,136 46.91 Web-based 31,679 25.57 Text-based 21,228 17.13 Other 12,872 10.39 Where  Desktop-based: Win32 \(MS Windows\, X Window System \(X11\, Gnome, GTK+, etc  Text-based: Non-interactive \(Daemon Console/Terminal, etc The classification of the count of User Interface in each OSS Project is shown in Table 27 T ABLE 27  C LASSIFICATION OF U SER I NTERFACE C OUNT  User Interface Count Class Population Percentage one 77,983 80.15 two 14,132 14.52 three or more 5187 5.33 V  R ESULT AND D ISCUSSION  The process of Datamining 2-Itemset Association Rule is using Weka Datamining tool.  The class parameters were the combination of two parameters with the Consequent was always set to parameter Download There are 24 possible combinations of other parameters as the Antecedent and Download as the Consequent The result that have Download Thousands or more as Consequent with Confident  50 and Support  10% are interesting values Table 28 shows all the result of Datamining 2-Itemset Association Rule the has Consequent  Download - Thousands of more  T ABLE 28  R ESULT WITH D OWNLOAD  T HOUSANDS OF MORE AS C ONSEQUENT  Antecedent Analysis Parameter Class Pop. Sup. Conf Audience Common Users 123909 14.91% 51.76  Development Status 5-Production Stable 83422 17.54% 60.12  Antecedent Analysis Parameter Class Pop. Sup. Conf Operating System  Linux-like 129912 19.88% 52.34  Operating System  Windows 129912 18.51% 55.19  Review Count three or more 7822 28.97% 94.10  Review Count two 7822 14.02% 81.32  Review Count one 7822 36.93% 71.07  Size MB 70343 15.46% 55.71  Total Thumb eleven or more 15117 12.17% 98.87  Total Thumb two to three 15117 18.83 75.26  Total Thumb single 15117 29.34% 64.03  Total Thumb four to ten 15117 15.28 90.73  Translation English 73412 30.92% 51.62  Translation European 73412 21.54% 63.97  Note: Pop. - Population, Sup. - Support, Conf. - Confidence Table 28 shows that the success factors of OSS Project with the goal to get the number of download in thousands or more are 1  Project should target for common users as audience 2  Project source code should already in 5  Production Stable development status 3  Project should work on either Linux-like or Windows operating system 4  Project should be reviewed and thumb-reviewed by at least one users 5  Project has filename in zip format with size in MB in magnitude 6  Project should have either English or European language translation Most of the above results are reasonable except for the file size.  Stating Common users as audience will reach wider segment of users.  Users are also more interested in projects that are in reasonable level of maturity so they will select OSS Project which is already in 5  Production / Stable development status.  The selected Operating System in Windows or Linux-like are also reasonable since both are the most popular desktop-based Operating System.  The need for reviews and thumbs by other users seems to have good influence for another users to download and try the OSS The file size in MB magnitude appears with possible explanation that users are more interested in larger scale OSS Project than medium or small one.  Lastly, the English or European language translation is important since many of OSS Projects are originated from this region \(Englishspeaking countries or other European language-speaking countries\. It is also interesting to note that some freedom is still available for project initiator to decide i.e. topic programming language and description of his/her project without affecting the number of download Some caution should be considered relating to these rules The subject being researched is small to medium OSS Projects 


 from sourceforge.net that may not reflect the whole population of OSS Projects that are small, medium and large scale.  These result should also verified using OSS Project data from other portal i.e. launchpad.net, google code, etc. to verify their validity VI  C ONCLUSION  We present the Datamining 2-Itemset Association Rule of 134,549 OSS Projects crawled from sourceforge.net portal This covers about 84% of the total of 160,141 OSS Projects registered at the portal in the month of January 2010.  There are more than 27 parameter being recorded into MySQL database i.e. audience, audience count, database environment database environment count, developer count, development status, development status count, number of download filename and file size, license, license count, operating system, operating system count, programming language programming language count, review count, topic, topic count, translation, translation count, user interface, and user interface count The result of this datamining process are 6 success factors that may be applied by project initiators and developers in order to increase the probability of success of their projects The details of the guidelines is shown in Section V. Future work of this research include expanding the experiment to cover other portal i.e. launchpad.net, google code and freshmeat.net ACKNOWLEDGMENT  The authors would like to thank Maranatha Christian University \(http://www.maranatha.edu\ that provides the funding for this research and Department of Computer Science and Electronics at Gadjah Mada University http://mkom.ugm.ac.id\ which provides guideline and technical assistance for the research R EFERENCES  1  R. Agrawal., R. Srikant, Fast Algorithm for Mining Association Rule Proceeding of 20th International Conference Very Large Database 1994, pp 1 - 32 2  A. Capiluppi, J.F. Ramil, Studying the Evolution of Open Source Systems at Different Levels of Granularity: Two Case Studies Proceeding of the 7th International Workshop of Principles of Software Evolution, 2004, 113 - 118 3  S. Christley, G. Madey, Analysis of Activity in the Open Source Software Development Community, Proceeding of the 40th IEEE Annual Hawaii International Conference on System Sciences, 2007 166b 4  T.T. Dinh-Trong, J.M. Bieman, The FreeBSD Project: A Replication Case Study of Open Source Development, IEEE Transaction on Software Engineering Vol. 31 No. 6,  June 2005, 481  494 5  V.K. Gurbani, A. Garvert, J.D. Herbsleb, A Case Study of Open Source Tools and Practices in Commercial Setting, Proceeding of the fifth Workshop on Open Source Software Engineering, 2006, 1 - 6 6  J.E. Istiyanto, A.W.R. Emanuel, Success Factors of Open Source Software Projects using Datamining Technique, Proceeding of Information Technology and Communication International Seminar ITIS\, June 2009 7  P.L. Li, J. Herbsleb, M. Shaw,  Finding Predictors of Field Defects for Open Source Software Systems in Commonly Available Data Sources a Case Study of OpenBSD, Proceeding of 11th IEEE International Software Metrics Symposium, 2005,  32 8  G. von Krogh, S. Spaeth, S. Haefliger, Knowledge Reuse in Open Source Software: An Exploratory Study of 15 Open Source Projects Proceeding of 38th Hawaii International Conference on System Sciences, 2005, 198b 9  A. Mockus, R.T. Fielding, J. Herbsleb, Two Case Studies of Open Source Software Development: Apache and Mozilla, ACM Transaction on Software Engineering and Methodology Vol. II No. 3 Juli 2002, 309  346 10   A. Mockus, R.T. Fielding, J. Herbsleb, A Case Study of Open Source Software Development: The Apache Server,  ACM ICSE, 2000, 263 272 11   E.S. Raymond, The Cathedral and the Bazaar, version 3, Thyrsus Enterprises \(http://www.tuxedo.org/~esr/\, 2000 12   Sourceforge.net web portal at http://www.sourceforge.net 13   S. Spaeth, M. Stuermer, Sampling in Open Source Development: The Case for Using the Debian GNU/Linux Distribution, Proceedings of the 40th IEEE Hawaii International Conference on System Sciences 2007, 166a 14   Weka website at  http://www.cs.waikato.ac.nz/ml/weka 


Application of Chaotic Particle Swarm Optimization Algorithm in Chinese Documents Classification 763 Dekun Tan Qualitative Simulation Based on Ranked Hyperreals 767 Shusaku Tsumoto Association Action Rules and Action Paths Triggered by Meta-actions 772 Angelina A. Tzacheva and Zbigniew W. Ras Research and Prediction on Nonlinear Network Flow of Mobile Short Message Based on Neural Network 777 Nianhong Wan, Jiyi Wang, and Xuerong Wang Pattern Matching with Flexible Wildcards and Recurring Characters 782 Haiping Wang, Fei Xie, Xuegang Hu, Peipei Li, and Xindong Wu Supplier Selection Based on Rough Sets and Analytic Hierarchy Process 787 Lei Wang, Jun Ye, and Tianrui Li The Covering Upper Approximation by Subcovering 791 Shiping Wang, William Zhu, and Peiyong Zhu Stochastic Synchronization of Non-identical Genetic Networks with Time Delay 794 Zhengxia Wang and Guodong Liu An Extensible Workflow Modeling Model Based on Ontology 798 Zhenwu Wang Interval Type-2 Fuzzy PI Controllers: Why They are More Robust 802 Dongrui Wu and Woei Wan Tan Improved K-Modes Clustering Method Based on Chi-square Statistics 808 Runxiu Wu Decision Rule Acquisition Algorithm Based on Association-Characteristic Information Granular Computing 812 JianFeng Xu, Lan Liu, GuangZuo Zheng, and Yao Zhang Constructing a Fast Algorithm for Multi-label Classification with Support Vector Data Description 817 Jianhua Xu Knowledge Operations in Neighborhood System 822 Xibei Yang and Tsau Young Lin An Evaluation Method Based on Combinatorial Judgement Matrix 826 Jun Ye and Lei Wang Generating Algorithm of Approximate Decision Rules and its Applications 830 Wang Yun and Wu-Zhi Qiang Parameter Selection of Support Vector Regression Based on Particle Swarm Optimization 834 Hu Zhang, Min Wang, and Xin-han Huang T-type Pseudo-BCI Algebras and T-type Pseudo-BCI Filters 839 Xiaohong Zhang, Yinfeng Lu, and Xiaoyan Mao A Vehicle License Plate Recognition Method Based on Neural Network 845 Xing-Wang Zhang, Xian-gui Liu, and Jia Zhao Author Index 849 
xiii 


   C4.2 Open GL has excellent documentation that could help the developer learn the platform with ease C4.3 Developer has very little ex perience in working with Open GL platform  For our case study, alternative B i.e. Adobe Director was the most favorable alternative amongst all the three. It catered to the reusability criteria quite well and aimed at meeting most of the desired operational requirements for the system   6. CONCLUSION & FUTURE WORK  The main contribution of this paper is to develop an approach for evaluating performance scores in MultiCriteria decision making using an intelligent computational argumentation network. The evaluation process requires us to identify performance scores in multi criteria decision making which are not obtained objectively and quantify the same by providing a strong rationale. In this way, deeper analysis can be achieved in reducing the uncertainty problem involved in Multi Criteria decision paradigm. As a part of our future work we plan on conducting a large scale empirical analysis of the argumentation system to validate its effectiveness   REFERENCES  1  L  P Am g o u d  U sin g  A r g u men ts f o r mak i n g an d  ex p lain in g  decisions Artificial Intelligence 173 413-436, \(2009 2 A  Boch m a n   C ollectiv e A r g u men tatio n    Proceedings of the Workshop on Non-Monotonic Reasoning 2002 3 G  R Bu y u k o zk an  Ev alu a tio n o f sof tware d e v e lo p m en t  projects using a fuzzy multi-criteria decision approach Mathematics and Computers in Simualtion 77 464-475, \(2008 4 M T  Chen   F u zzy MCD M A p p r o ach t o Selec t Serv ice  Provider The IEEE International Conference on Fuzzy 2003 5 J. Con k li n  an d  M. Beg e m a n   gIBIS: A Hypertext Tool for Exploratory Policy Discussion Transactions on Office Information Systems 6\(4\: 303  331, \(1988 6 B P  Duarte D e v elo p in g a p r o jec ts ev alu a tio n sy ste m based on multiple attribute value theroy Computer Operations Research 33 1488-1504, \(2006 7 E G  Fo rm an  T h e  A n a l y t ic Hier a rch y P r o cess A n  Exposition OR CHRONICLE 1999 8 M. L ease  an d J L  L i v e l y  Using an Issue Based Hypertext System to Capture Software LifeCycle Process Hypermedia  2\(1\, pp. 34  45, \(1990 9  P e id e L i u   E valu a tio n Mo d e l o f Custo m e r Satis f a c tio n o f  B2CE Commerce Based on Combin ation of Linguistic Variables and Fuzzy Triangular Numbers Eight ACIS International Conference on Software Engin eering, Artificial Intelligence Networking and Parallel Distributed Computing, \(pp 450-454 2007  10  X  F L i u   M an ag e m en t o f an In tellig e n t A r g u m e n tatio n  Network for a Web-Based Collaborative Engineering Design Environment Proceedings of the 2007 IEEE International Symposium on Collaborative Technologies and Systems,\(CTS 2007\, Orlando, Florida May 21-25, 2007 11 X. F L i u   A n In ternet Ba se d In tellig e n t A r g u m e n tatio n  System for Collaborative Engineering Design Proceedings of the 2006 IEEE International Symposium on Collaborative Technologies and Systems pp. 318-325\. Las Vegas, Nevada 2006 12 T  M A sub jec tiv e assess m e n t o f altern ativ e m ission  architectures for the human exploration of Mars at NASA using multicriteria decision making Computer and Operations Research 1147-1164, \(June 2004 13 A  N Mo n ireh  F u zzy De cisio n Ma k i n g b a se d o n  Relationship Analysis between Criteria Annual Meeting of the North American Fuzzy Information Processing Society 2005 14 N  P a p a d ias HERMES Su p p o rti n g A r g u m e n tative  Discourse in Multi Agent Decision Making Proceedings of the 15th National Conference on Artifical Intelligence \(AAAI-98  pp. 827-832\dison, WI: AAAI/MIT Press,  \(1998a 15  E. B T riantaph y llo u   T h e Im p act o f  Ag g r e g atin g Ben e f i t  and Cost Criteria in Four MCDA Methods IEEE Transactions on Engineering Management, Vol 52, No 2 May 2005 16 S  H T s a u r T h e Ev alu a tio n o f airlin e se rv ice q u a lity b y  fuzzy MCDM Tourism Management 107-115, \(2002 1 T  D W a n g  Develo p in g a f u zz y  T O P S IS app r o ach  b a sed  on subjective weights and objective weights Expert Systems with Applications 8980-8985, \(2009 18 L  A  Zadeh  F u z z y Sets   Information and Control 8  338-353, \(1965  152 


                        





