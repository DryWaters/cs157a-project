master task slot split of 
f f 
Xite Wang Derong Shen Ge Yu Tiezheng Nie Yue Kou I I NTRODUCTION Nowadays daily internet access business computing and scienti“c research etc generate a mass of data increasingly The advanced analysis 2  o n B ig-Data h as become a very hot topic in many elds MapReduce  a di s t ri b u t e d data processing framework has been proven to be a powerful technique to process Big-Data analysis Speci“cally the MapReduce system uses a master node to manage the cluster and some slave nodes to provide computing capacity While the system accepts a job the task scheduler on the master splits the job into some tasks and assigns them to slaves automatically Generally users need only provide the simple map and reduce functions to process terabytes of data In the parallel data analysis it is indubitably that task assignment or task scheduling is crucial for the system performance The unbe“tting task scheduler usually causes a lot of network transmission and reduces the system processing capacity For the MapReduce platform there have been plenty of scheduling algorithms which could provide suitable approaches of task assignment in many applications However none of the existing schedulers have considered the job-intensive environment which means in a period of time the system receives a batch of jobs and all the jobs must be completed within the stipulated time Actually the job-intensive environment is quite familiar in many IT companies for example search engines e.g Google would usually choose a period of midnight e.g 3:00 am5:00 am to process some analysis on users web logs and shopping sites e.g Amazon prefer tidying the transaction information while network access is infrequent also in midnight Then the submitted jobs must be accomplished within the stipulated time otherwise the daily work will be in”uenced If the workload gets heavy or the scale of cluster is limited this objective may be dif“cult to achieve 
College of Information Science and Engineering Northeastern University P.R China wangxite@research.neu.edu.cn shenderong yuge nietiezheng kouyue ise.neu.edu.cn 
A Throughput Driven Task Scheduler for Improving MapReduce Performance in Job-intensive Environments 
MapReduce has been proven to be a highly desirable platform for scalable parallel data analysis The task scheduling in MapReduce is very crucial for the job execution and has a marked impact on the system performance To the best of our knowledge the previous scheduling algorithms rarely consider the job-intensive environments and are not able to provide high system throughput Hence this paper proposes a novel technique for job-intensive scheduling to improve the system throughput Firstly by making an in-depth analysis of job-intensive environments we sum up 4 major factors which affect the system throughput Secondly based on the factors an ef“cient technique called throughput driven task scheduler is proposed in which we adopt a series of effective measures to improve the throughput of a MapReduce cluster system Finally plenty of simulation experiments are made and the experimental results show that the scheduler can provide higher throughput than the previous systems and is able to meet the requirements of practical job-intensive applications MapReduce scheduling throughput 
Abstract Keywords 
1 split of 2 
  
s s s s 
1 2 3 4 
a Cluster Status 
assign task request task data transfer 
2 3 4 1 master 
1 2 1 1 2 2 1 2 1 2 2 3 
s s s s 
which are split into several splits Then the system receives 2 jobs related le is  related le is  and both the weights of  are set to 1 which means either of  should obtain 2 slots for processing For the situation described in Figure 1\(b the scheduler would allocate a split of to the idle slot on to ensure the fair principle and lead to more network overhead obviously it is not bene“cial for the system throughput Therefore to provide high system throughput we propose a novel technique called Throughput Driven task TD scheduler for the job-intensive MapReduce environment The sch eduler mostly focuses on the map phase which dominates the computational cost of the most MapReduce applications In particular we make 
f f j f j f j j j j f s 
b Task Assignment for Fairness Figure 1 Example of Scheduling Whereas the existing schedulers have not considered the job-intensive environment and cannot guarantee the system throughput capacity Fi gure 1 illustrates a simple example to explain the problem As Figure 1\(a shows there is a distributed system e.g Hadoop whi c h h as 4 s l a v e nodes and each slave provides 1 task slot for processing and the system adopts the popular Fair task scheduler 6 In the underlying le system there are 2 les 
2013 IEEE International Congress on Big Data 978-0-7695-5006-0/13 $26.00 © 2013 IEEE DOI 10.1109/BigData.Congress.2013.36 211 


the following contributions 1 We describe the scheduling model for job-intensive MapReduce environment and summarize several factors which can impact the system throughput 2 We propose a novel scheduling approach TD scheduler which can guarantee high ratio of local task assignments avoid hotspots and take full advantage of the system resources effectively 3 We evaluate TD scheduler through experiments with real data set The improvement of system throughput is testi“ed by the experimental results The rest of this paper is organized as follows We state the overview of the MapReduce framework and several previous approaches of task scheduling as background knowledge in Section II We de“ne the problem model and state the design requirements in Section III We describe the TD scheduler in detail in Section IV We evaluate the performance of TD scheduler in Section V Finally the conclusion of this paper is stated in Section VI II B ACKGROUND K NOWLEDGE In this section we overview the MapReduce framework and present the related work about pre-existing scheduling strategies in the MapReduce environment As a successful open-source implement of MapReduce the Hadoop system has a ri s e n for s e v e ral y ears  It contains a single master node and several slave nodes The master takes charge of the load balancing and task scheduling the slaves are response for the actual data storage and each slave has a certain number of for data processing Functionally Hadoop is constituted by 2 major subsystems a The underlying le system HDFS  s t ores the data in the form of le for further analysis and due to the huge size les would be split into a number of isometrical for distributed storage the master records the location of each split in  b The data processing system is used to process the MapRedcue jobs In general a MapReduce job uses a speci“c le stored on HDFS as its input While a job is submitted the scheduler will split the job into a number of map and reduce tasks and each map task processes a speci“c split of the input le The tasks would be assigned to the task slots on slaves to be executed in parallel As Figure 2 shows while processing the MapReduce jobs each slave periodically sends a to the master to report the statuses of task slots on it If a task slot is idle the scheduler would assign a suitable task to the slot As the kernel of parallel data a nalysis the task scheduling technique has been studied for years The default scheduling approach of Hadoop Job Queue Task scheduler can afford 
A MapReduce Overview task slots splits block map heartbeat B Related Work 
task slots splits block map task scheduler master slaves h e a r tbe a t r e s p o n s e task slots splits task slots splits 
Figure 2 Hadoop Framework a fundamental and effective way to assign tasks Actually it is a First In First Out FIFO strategy which means all the jobs are sorted into a queue according to the submission time and the later jobs will not be scheduled until the former jobs are nished The Capacity scheduler whi c h i s d es i gned for mul t i users to share one underlying cluster can allocate resources to different users according to the con“guration and avoid individual user monopolizes the system It supports multiple job queues and each queue has a certain proportion of resources In each queue jobs are scheduled with the FIFO strategy and the unoccupied resources would be shared with the other queues Fair scheduler 6 i s a l s o m ot i v at ed by the multi-user situation It has several job pools constituted by some jobs and each job is assigned a speci“c weight The difference is that in Fair scheduler each job expects to obtain the computing resour ces according to the weight and the idle resources would be assigned to the job with the most vacancies Thomas Sandholm et al p res e nted a Scheduling strategy which can adjust the allo cated capacity of users The scheduler allows uses to apply for more computing resources if their submitted jobs are important Besides there are several further studies on task scheduling Jorda Polo et al pres ent e d a met hod appl yi ng t o t h e deadline scheduling Each job is submitted with a speci“c deadline according to the accomp lished tasks the scheduler calculates the end time of the job If there is a job which cannot nish before the deadline with its allocated resources the idle resources will be allotted to it Kamal Kc et al 11 presented a job execution cost model to predict the nish time of a new job If the expectant time can not meet the deadline the job will be rejected In practice the performance of each slave node is not identical some old er machines may be much slower than the others Therefore Matei Zaharia et al pres ented the LATE Scheduler for the heterogeneous environment According to the time cost per task the scheduler estimates the processing ability of each slave and the nish time of the tasks in processing the slower task will be restarted on the slave with good processing capacity YongChul Kwon et al  di s c us s e d t he s k e w probl em i n MapR e duce a ppl i cat i ons  The technique detects the skew through calculating the nish time of tasks the rest of the slower tasks will be split and 
212 


1 2 3 1 2 1 2 1 1 2 2 1 2 1 2 1 2 1 2 3 
sch sch sch sch 
 
A Problem De“nition relaxed restriction B Design Requirements computing-intensive IO-intensive hotspots A Task Assignment for Stable Co-scheduled Jobs 
Q j j j  Q Q j j j j j Q j j j j j.occupied j j.remain j j.demand j j.demand j Q j.demand j.occupied j.demand j T Q Q Q j f j f f f j j j j S s S S T Q j j j  
assigned to the other slaves In brief the previous approaches rarely pay attention to the job-intensive environment In contrast our technique adequately considers the pressure of batch jobs and can provide higher throughput III P RELIMINARIES Based on the MapReduce scheduling framework we will de“ne the problem model in job-intensive environment and illustrate the design requirements for our TD scheduler In the job-intensive environment the job queue  is a set of MapReduce jobs which are sorted in ascending order of submission time Each job in is related to a speci“c input le stored on HDFS For the most general situation of MapReduce we can make the following 2 assumptions 1 Because in a single job all the tasks in the map phase execute the same computing the execution time of the maptasksinasinglejobisalmostthesameifwedo not consider the nonlocal processing 2 For each job in  the map tasks would only read the splits of the input le from HDFS and process their own computings Hence we assume that even if job uses the same input le that the preceding job uses would not get speedup by  For each job in  we denote the size of as which is equal to the split number of the input le of Wealso denote the number of task slots which are occupied by as  the number of remaining untreated tasks of as  Each job is attached with a parameter  which means the slot number that expects to occupy It can re”ect both the size and expected completion time of the related job Based on  we introduce a new conception  which means in jobintensive environment the scheduler can prior consider the system throughput and does not guarantee each scheduled job in can occupy slots but according to the uses requirements the scheduler guarantees will not much smaller than so that will not be nished much later than expected Given a MapReduce cluster with task slots and a job queue with a certain number of jobs throughput is inverse proportional to the completion time of  Hence the goal of TD scheduler is to nish all the jobs in in the shortest possible time under the premise that all the jobs meet relaxed restriction In the job-intensive environment we summarize the following 4 major factors which can impact the system throughput We design the TD scheduler to satisfy the requirements of the 4 factors 1  Nonlocal tasks would lead more network transmission and more execution delay In the distributed environment it is necessary to maintain high ratio of the local processing 2  In practice for the high parallelism nonlocal execution cannot be avoided and choosing a better nonlocal task would be bene“cial for the throughput For instance there are jobs input le is nd input le is  the split sizes of both and are 128MB The map phase of processes some tasks e.g skyline query the average execution time per task is 40s In contrast processes tasks e.g word count and the time is 5s Therefore ideally if we assign a nonlocal task of there would be few performance reduction if the data transmission speed over the network can reach to 128MB/40s 3.2MB/s and 25.6MB/s for nonlocal task of  However we cannot insure the data transmission speed can meet the requirement because the reduce phase or th e other applications could occupy the network resources As a result it is better to non-locally assign computing-intensive tasks for throughput 3  While processing in parallel data stored on each node may be unbalanced in a certain period of time there will be some nodes from which many nonlocal tasks read data and we call the nodes as the hotspot can distinctly imp act system thoughput because a number of nodes read data from it so that the transmission speeds become lower and the performance of hotspot itself decreases 4  Some task schedulers 14   1 5  allo w a sm all jo b to o ccu py th e e n tire c lu ster  and shut down the idle nodes for energy saving However allowing nodes to be idle is undoubtedly inapposite for system throughput Hence it is fundamental to make full use of system resources IV TD S CHEDULER To make TD scheduler more practical we adopt the popular multi-job co-scheduling model which has been used for many scheduling strategies e.g Fair scheduler instead of scheduling the jobs one by one We denote the set of the co-scheduled jobs as  Then in order to facilitate the description in Section IV-A we introduce the scheduling approach in the simple case that is stable corresponding to Factors 1-3 in Section III-B which means each job in has abundant tasks so that no job ends and no new job comes in The update of will be described in Section IV-B corresponding to Factor 4 in Section III-B Finally we describe the process compr ehensively in Section IV-C For the MapReduce cluster with task slots and a job queue  it is very straightforward that 
      
High ratio of the local processing Choosing a be“tting nonlocal task Avoiding hotspots Full use of system resources 
213 


1 Select the Suitable Job sticky slots 2 Select the Task on Suitable Node 
1 2 4 3 1 1 3 1 2 3 2 1 1 2 4   max 
002 003 003 003 003 003 003 003 003 003 003 003 003 003 003 003 003 003 
sch n i j S sch sch sch sch sch sch sch sch sch sch sch sch sch sch sch sch Q j 1 j 2 j 3 j 4 j 5 j.demand amt j S 002 sch sch sch max sch sch 
sch sch 
 m n 1 idle n 2 busy n 3 idle  14 tasks of j 1 17 tasks of j 2  27 tasks of j 5  b Job Selection Figure 3 Example of Basic Method ataskof Figure 4 Sticky Slot For the queue 
 200 300 100 350 350  23 4 10 5  sequence number in 4 1 3 2  possible occupied slots 50 480 70 400  a Jobs in Q  T  1000 
n Q S j.demand T j.demand D s n j S j j S amt j j S amt j j S S S S n S S Q S j j j j n n j j n j S S n j S j j S S L  j S j.occupied L j.demand j j.demand L s j j s j.occupied  j S H H j S j.occupied H j.demand j S T j.demand H D j.demand L j j.demand H D j.demand L H T L D d L d j.demand j S L H S L  H     j 
the rst jobs in can join or be co-scheduled if  We denote as  Then if a slot on node becomes idle and requires task what the scheduler actually do is a to select a suitable job from and then b to select a task of on the suitable node to assign The detailed methods are described as follows For each job in  we denote the average execution time per map task as function  which can be given a default value according to the job type in the beginning and estimated through the average completion time per map task while is in processing Therefore we sort all the jobs in in ascending order of to generate a queue  Obviously in  the former jobs are IOintensive and the latter ones are computing-intensive Hence the basic method for job selection is 1 Considering Factor 1 in Section III-B while a task slot is idle if there is at least one task belonging to the jobs of on node  we make a local assignment Otherwise a nonlocal assignment is unavoidable 2 Based to Factor 2 in Section III-B for the local assignment in  the former jobs which have untreated local tasks will be prior selected For nonlocal assignment the latter jobs in will be prior selected Figure 3 shows an example of basic method As Figure 3\(a shows the rst 4 jobs in can be co-scheduled and the corresponding can be calculated Line 4 The job selection is showed in Figure 3\(b where a slot on node and a slot on are idle There are tasks of and on  hence the former job in will be selected for local assignment In contrast there is no task belonging to on node  so the later job in will be selected for nonlocal assignment However if we only consider the system throughput in the early stages of processing most of the nodes could store a few tasks of the former jobs e.g n  then the former IOintensive jobs may occupy most of the slots Whereas the later computing-intensive jobs can only get a small number of slots for processing Line 5 in Figure 3\(a and the completion time is not guaranteed which is against to the relaxed restriction To avoid the problem we improve the basic method by using the threshold technique For the queue  lower bound means that for each job in  the scheduler ensures  so that all the jobs could be accomplished in satisfactory time If only using the lower bound the scheduling strategy is still not perfect enough because there may be  which means some slots may forcibly execute tasks of the same job for a period of time For example as Figure 4 shows the IO-intensive jobs occupy quite a lot of slots whereas the computing-intensive job only occupies slots for guarantee When slot nishes and requests task for processing a task of will have to be assigned to because  even if there is no local task of  The sticky slots are unsuitable for parallel scheduling and can increase nonlocal assignment potentially Hence we introduce upper bound to reduce the sticky slots master done task of j demand 100 L 0.7 occupied 69 slot s  upper bound   means that for each job in  the scheduler ensures  Through limiting the maximum number of slots which IO-intensive jobs can occupy the upper bound enables the computing-intensive jobs occupy more slots and reduces the probability that sticky slots emerge Note that the upper bound should not be set too high otherwise it will be meaningless Speci“cally  which means if a job occupies slots the other jobs can obtain more than slots In other words 1 where max Givenauser de“ned  the scheduler can compute according to  As Figure 3\(a shows if   Consequently by utilizing the combined action of lower and upper bounds the basic scheduling can select suitable job for high system throughput Then we describe the method for task selection In the previous step we have get the suitable job and determined the assignment is local or not The local assignment is simple so we would not give unnecessary details Whereas the nonlocal assignment could face the hotspot 
     0 1 70 69 70 1        0 7 1000 0 7 950 350  0 7=1 66 
002 002 
002 003   003 004   002  005 003            003    
214 


002 
cur cur n n n j S j n j n j j j j sch sch s s s sen sen j S s a a a a a adu t t t t tee j S S i adu inf inf wait fin w wait inf sen 
Figure 6 Temporal Relations between Statuses In addition job not in processing is either in status 
002 002 002 
002 002 002 004 
n n 002 003 n 003/\002 n n n t n t 004 003/\002 t n t t 002 004/\003 t n count n count 002 n n R amt j rs rs j n j s N j 002 n N j n s S S j 1 j 2 j 3 j 4 j 1 j 1 remain j 1 j 1 j 2 demand j 3 demand j 4 demand H j j remain j occupied S O j occupied j j remain  j demand L j occupied j demand H S j j occupied  j demand L j S D j.demand j L S S S S S j S S O D<T 
actual hotspot potential hotspot hot queue B Update of Co-scheduled Jobs job status senile adult teenaged infantile waiting nished 
problem Hence we will mainly illustrate the method for the nonlocal task selection in the following corresponding to Factor 3 in Section III-B In general a hotspot is the node which occurs data transmission with a number of other nodes simultaneously and it will distinctly affect the system performance To further analyze the problem we rstly divide the hotspots into two categories The node is an if the total number of the nodes which occur data transmission with is larger than the threshold  In other word given the network IO bandwidth  if there is a nonlocal task which reads data from  the performance will not be affected if the data transmission speed can reach to  Besides node is a if the remaining untreated workload of is larger than the others in the f oreseeable future a potential hotspot may become an actual hotspot To avoid actual hotspot a data structure is introduced If there is a new nonlocal task assignment that a slot requires data from node at time  the hot queue appends a tuple to the tail We denote as the size of each split of input le and consider the network I/O speed at  Then for current time and the tuple the tuple is overdue if  Periodically the hot queue inspects the tuples from the head and eliminate the overdue ones In addition there is a corresponding statistical table For each node appears in the hot queue the table records the total number of the tuples which contain if  we forbid more connections to  To avoid potential hotspot We rstly calculate the remaining untreated workload of node  where is the number of the remaining untreated tasks of job on node  Then the potential hotspot with the largest remaining workload has the highest probability to become an actual hotspot we tend to select it and reduce its remaining workload In summarize while the scheduler has selected to make a nonlocal assignment for the idle slot  we rstly get the node set which still have untreated tasks of  and eliminate the nodes which already have connections according to the statistical table Finally we choose the node which has the most remaining workload in and assign ataskof on to  As the processing continues some jobs in will be nished and the following ones join in When updates some idle nodes may obtain no tasks for processing which is not conducive to system throughput Hence in this section we introduce the strategy for full utilization of system resources corresponding to Factor 4 in Section III-B Firstly the scene which can produce idle nodes will be described through an example As Figure 5 shows job are co-scheduled However in last phase of  the remaining untreated tasks and 150 tasks of are still in processing so can only occupy 150 slots although it demands 400 slots For the other jobs maximum slots can be occupied Hence 70 slots would acquire no tasks Figure 5 Example of Idle Nodes To solve the idle-resource problem we introduce a conception for the jobs in processing Speci“cally the job is if it has been scheduled for some time and will be nished soon and  We denote the jobs in status senile as set and Thejob is if it is scheduled steadily and We denote the jobs in status adult as set Thejob is if it has just been allowed to become adult and  then the idle nodes will be prior assigned to to ensure it will become adult in a short time We denote the jobs in status teenaged as set  and rede“ne mentioned in Section IV-A The job is if it is scheduled only for avoiding idle resources it is not restricted by and has lower priority than the jobs in  We denote the jobs in status infantile as set  and note that the size of is no more than 1 waiting processing finished infantile teenaged adult senile PL  1 PL  3 PL  2 priority level 3>2>1 the set is r the set is  The 6 statuses have strict temporal relations As Figure 6 shows each submitted job is in one of the 6 statuses The teenaged jobs have the highest priority to be selected and the priority of infantile jobs is the lowest The status can be transformed only in the order from left to right Then the rst job in can be transformed to status infantile if and 2 
         0      780 0 0  0    
sch s sen adu tee 
 002   006  002 002   007 
215 


002   003 010  006 007 007 006 007    
 002 004  005 002 006 007 005 010  006 007 005 005  002 011     005 005 005 
input output 1 if then 2 3 4 else 5 if then 6 if then 7 8 if then 9 10 if then 11 12 if then 13 14 else 15 16 else if then 17 18 if then 19 20 21 else 22 23 24 if then 25 26 if then 27 28 end 29 input output 1 for do 2 if then 3 4 return 5 if 6 then 7 return 8 for do 9 if then 10 11 12 return 13 14 15 return 16 input if then 1 2 else 3 4 5 
  0           0    
i inf sen i i t t s n s j s j.occupied j S S j.occupied  j.demand L j j j n,s j S j.occupied j S S j S O D j demand T J S J occupied  j demand L j S j S O D<T S S S j S j n,s J AssignT ask n s j occupied j remain j S j occupied j demand L j S S j remain j S adu tee ass ass inf inf tee adu inf wait tee tee ass adu sen n s S amt j S n j j.occupied  j.demand H j n s j n j S j occupied  j demand H j n s j j S j.occupied  j.demand H n j j n s j n j j n s j adu adu inf inf inf inf inf adu ass ass ass inf ass j n s n j j n s n j j n s 
adu tee ass ass sen fin inf inf inf sen inf inf inf inf inf inf tee inf adu sen wait inf tee ass tee ass ass ass ass ass tee ass ass ass tee adu ass ass sen adu adu inf inf inf inf inf inf adu ass ass ass inf inf ass inf ass ass 
anemptyslot on node  the last task of belongs to job  a new task assigned to   AssignTask Speci“cJob  add to  get the infantile job from  remove from  add to  add to  add the rst job of to  get the rst job in  AssignTask Speci“cJob     remove from to  add to    node slot  the job to which the assigned task belongs sort in ascending order of  assign a task of on to   assign a task of on to   GetNonHotspotNode  assign a task of on to   GetNonHotspotNode  assign a task of on to   job  node slot assign a task of on to  GetNonHotspotNode  assign a task of on to  
j S O D j demand T j j occupied  j demand L n j j.occupied j S S j.occupied  j.demand L j j j n j n,s j j j.occupied S S S S S S s S S s n s j j S S n s n s S amt S j n j.occupied  j.demand H j n s j S n j j occupied  j demand H S j j.occupied  j.demand H n n j n s j n j n s 
each job in has untreated tasks of has untreated tasks of in each job in by reverse order has untreated tasks of 
The infantile job can disaf“liate from if 3 Then will become a teenaged job if  else it can become an adult job directly With the formulas above we ensure there are no idle resources in the data processing Thus far our proposed TD Scheduler has been introduced In the next section we will describe the process of TD in more detail  TD Scheduler In practice the primary function of TD scheduler is assigning a untreated task to a task slot while the slot becomes idle until all the submitted jobs are nished We rstly introduce the frame of TD scheduler in Algorithm 1 While a slot on node completes a task of job and the scheduler receives the request line 1 If and  becomes the selected job andataskof will be assigned to lines 2-4 The function AssignTask Speci“cJob  is described in Algorithm 3 Else we will update the job status if is senile lines 6-18 Speci“cally becomes nished if lines 7 8 If we remove the infantile job from if it conforms to Formula 3 lines 10-12 and add it to or according to the slot number it occupies lines 13-16 if we consider whether the rst job in can become infantile according to Formula 2 lines 17 18 Then we assign a task to lines 19-23 If  we assign a task of the rst job in to lines 19-21 Else we choose a task of a suitable job to assign lines 22 23 Function AssignTask  is described in Algorithm 2 Finally we update the variables of line 24 The selected job can be added into or due to the related restrictions lines 25-28 Then the algorithm ends  AssignTask\(node slot  Algorithm 2 describes the details of function AssignTask\(node slot  Firstly we sort the jobs in in ascending order of line 1 we scan the until we get a job of which has untreated tasks and  then assign a task of on to and return lines 2-5 If we do not get a suitable job we select the job in if has untreated tasks of and lines 6-8 If still no suitable job we scan the by reverse order until we get a job that thenwe use the method described in Section IV-A to get a node  has the most untreated remaining workload and it will not become an actual hotspot and we assign a task of on to and return lines 9-13 If we still do not get the suitable job we select and get the related non-hotspot node  then assgin the task and return lines 14-16  AssignTask Speci“cJob\(job  node  slot  
C Algorithm Description 
  1  0     
Algorithm 1 Algorithm 2 Algorithm 3 
216 


100 250 50 300 0 7 0 7 0 7 0 7 1 3 35 1 56 1 1 1  1 3 1 3 
Summary 
ass ass 
  
j n n n j j n s n j n s L  L  L  L  H  j j.demand H  H   H  H  
100s Lower Bound small jobs mix jobs   large jobs   a Completion Time vs Lower Bound 5 5.5 6 6.5 7 7.5 8 8.5 1.1 1.2 1.3 1.4 1.5 Completion Time 100s Upper Bound small jobs mix jobs   large jobs   b Completion Time vs Upper Bound Figure 9 The Effect of Bound 
Algorithm 3 describes the function AssignTask Speci“cJob\(job  node slot  If has untreated tasks of  assign a task of on to lines 1 2 Else get a non-hotspot node  and assign a task of on to lines 4 5 V E XPERIMENTAL E VA L UAT I O N In this section we will evaluate the performance of TD scheduler through comparing to the Hadoop default FIFO scheduler and the popular Fair scheduler In particular we employ the following 4 kinds of applications word count inverted index grep and distributed sort to compose the job queues for testing And we use the real data sets web pages extracted from Wikipedia  to build our experimental data sets To imitate different real applications we also generate 3 types of job queues Small type means each job size or the split number of input le in the queue is small   Large type means each job size is large   Mix type means the job size can be varied   Each t ype of t h e job queue is composed by the 4 kinds of applications and all the split sizes are 64MB The input le sizes of the job queues span 100 GB def aul t 200GB   T he def a ul t value of the lower bound L=0.7 upper bound H=1.3 We adopt a cluster constituted by 1 master and 50 slaves Each node has Core i7 870 CPU 500G disk 8G memory Each slave node has 2 slots for map tasks and 2 for reduce tasks so there are total 100 map task slots We use Hadoop 0.20.1 as our software environment In Section V-A we evaluate the performance of TD through the following 3 aspects completion time of a job queue the ratio of local task assignment the occurrence number of hotspots We evaluate the impact of the threshold in Section V-B In Figure 7 we compare the completion time of the 3 schedulers using different types of job queues To accurately re”ect the performance differences the initialization time of the job queue has not been considered For each type of job queue the completion time of our TD scheduler is signi“cantly shorter than the others in other word TD scheduler can provide better throughput In particular by comparing the 3 experimental results showed in Figure 7 higher ratio of the small jobs in a job queue will markedly lead to more completion time of Fair and FIFO In contrast TD shows better performance We also evaluate the network overhead through calculating the ratio of local task assignment and the results are described in Figure 8 For the large type Fair and FIFO can maintain high ratio of local assignment\(70 for small type the ratio is reduced to a very low level\(35 Whereas TD scheduler can hold a high ratio of local assignment to reduce the network overhead In Table I we divide the process into 5 stages on average and record the the occurrence number of hotspots in each stage then we repeat the sam e process 3 times and calculate the average values as the experimental results As Table I shows the TD scheduler can avoid majority of the hotspots Note that there are still some hotspots which can be caused by 2 reasons a the nonlocal assignment is not allowed to be off-rack considering the network overhead b In the nal stage the distribution of the remaining data may be quite unbalanced hence the hotspots are unavoidable Table I O CCURRENCE N UMBER OF H OTSPOTS Scheduler Job Type Stage in Processing percent Total 1-20 21-40 41-60 61-80 81-100 Fair small 25.3 19.7 23 24.3 29 121.3 mix 17.7 15.3 18.3 15 20 86.3 large 3 6.3 4 4.7 9 27 FIFO small 23 18.3 19.7 22.7 25 108.7 mix 14 13.3 15.7 16.3 19.7 79 large 2 5.7 3.7 4 6.3 21.7 TD small 0 0 0.7 0 2 2.7 mix 0 1 0 0 1.7 2.7 large 0 0 0 0 0.7 0.7 In this section we rstly introduce the impact of the lower bound in TD As Figure 9\(a shows high lower bound leads to lower throughput specially if  the throughput would reduce signally Whereas it would has little decrease if  and this is because when  the restraint of the lower bound is abby enough most of the task assignments will not be forced Therefore we would better to set if there is no strict demand on deadline The upper bound is designed to avoid sticky slots which can impact the system performance We generate a job queue size  200GB and  and Then for each co-scheduled job set Thenweevaluate the impact of upper bound on throughput in Figure 9\(b where  It is straightforward that high upper bound give rise to high throughput however while  the throughput becomes lower because the exorbitant upper bound will lead to numerous sticky slots Hence the upper bound is a suitable choice according to the experimental results 5 5.5 6 6.5 7 7.5 8 8.5 0.5 0.6 0.7 0.8 0.9 Completion Time  The experiments above show that the TD scheduler could provide higher throughput than the previous 
002 004  005 002 003  
A TD-scheduler Performance B Threshold Analysis 
217 


Ef“cient processing of data warehousing queries in a split execution environment SIGMOD Mapreduce for data intensive scienti“c analyses eScience MapReduce simpli“ed data processingonlargeclusters OSDI Apache Hadoop Fair scheduler Delay scheduling A simple technique for achieving locality and fairness in cluster scheduling EuroSys Hadoop HDFS Dynamic proportional share scheduling in hadoop JSSPP Performance-driven task co-scheduling for mapReduce environments NOMS Scheduling hadoop jobs to meet deadlines CloudCom Improving MapReduce performance in heterogeneous environments OSDI SkewTune mitigating skew in mapReduce applications SIGMOD On the energy in ef“ciency of hadoop clusters HotPower Energy management for mapReduce clusters VLDB 
Acknowledgement 
2 4 6 8 10 12 14 16 1 1.5 2 2.5 3 Completion Time 100GB TD FIFO   Fair   a Small Jobs 2 4 6 8 10 12 1 1.5 2 2.5 3 Completion Time 100GB TD FIFO   Fair   b Mix Jobs 2 4 6 8 10 1 1.5 2 2.5 3 Completion Time 100GB TD FIFO   Fair   c Large Jobs Figure 7 Completion Time of TD-scheduler 0 10 20 30 40 50 60 70 80 1 1.5 2 2.5 3 Local Assignment Ratio Data Size 100GB TD FIFO   Fair   a Small Jobs 0 10 20 30 40 50 60 70 80 90 1 1.5 2 2.5 3 Local Assignment Ratio Data Size 100GB TD FIFO   Fair   b Mix Jobs 0 10 20 30 40 50 60 70 80 90 1 1.5 2 2.5 3 Local Assignment Ratio Data Size 100GB TD FIFO   Fair   c Large Jobs Figure 8 Ratio of Local Task Assignment ones Besides we evaluate the impact of the threshold on the throughput and give the best threshold setting VI C ONCLUSIONS Distributed data analysis on Big Data has become a very hot topic and MapReduce is a suitable technique used for this eld Indubitably in the distributed data processing task scheduling is a crucial component and can signally affect the system performance However the previous scheduling algorithms have not considered the job-intensive environment and can not provide high throughput To solve this problem we rstly study on the job-intensive problem and summarize 4 major factors which can impact system throughput Then we propose a novel approach TD scheduler to improve the system throughput for MapReduce processing Finally a large number of experiments verify the performance of TD scheduler The results show our method can provide higher throughput than others and shows excellent performance if the job queue contains a high percentage of small jobs it is very appropriate for practical applications 
   
      
In  Athens Greece Jun 12-16 2011 2 E  J aliy a P  Sh ri deep and F Geoffrey In  Indiana USA Dec 7-9 2008 3 D J ef fre y a n d G San j ay  In  California USA Dec 6-8 2004 4  http://hadoop.apache.org 5  http://hadoop.apache.or g/docs/r0 20.2/fair scheduler.html  Z  M atei B  D hruba and S  J o ydeep In  Paris France Apr 13-16 2010 7  http://hadoop.apache.or g/docs/r0 20.2/hdfs user guide.html  C apacity scheduler  h ttp://ha doop.apache.org/doc s/r0.20.2 capacity scheduler.html  S  T homas and L  K e v in In  Atlanta USA Apr 23 2010  P  Jor d  a C David and B Yolanda In Osaka Japan Apr 19-23 2010  K Kamal and A  K emafor  In  Indianapolis USA Nov 30-Dec 3 2010  Z  Mat e i  K  A ndy and J  A nt hon y  In San Diego USA Dec 8-10 2008  K Y ongChul B  M agdalena and H  B ill In  Scottsdale USA May 20-24 2012  L  Jacob a nd K  C h r i st os In  Montana USA Oct 11-14 2009 15 L W illis an d P  J ig n e sh  In  Singapore Sep 13-17 2010 
 This research was supported by the National Basic Research 973 Program of China under Grant No 2012CB316201 the National Natural Science Foundation of China under Grant Nos 61033007 61003060 the Fundamental Research Funds for the Central Universities under Grant No N100704001 the Na tional Research Foundation for the Doctoral Program of Higher Education of China Grant No 20120042110028 and the MOE-Intel Special Fund of Information Technology under Grant No MOE-INTEL-2012-06 R EFERENCES  B  K amil A Daniel and S  A vi 
100s Data Size 100s Data Size 100s Data Size 
218 


  9  4  R LTS   S 70 a  MS L  E n t r y   D e s c e n t   a n d  l a n d i n g  t o o k  p l a c e  o n  A u g u s t  5  2012 U T C    K e y  to n e s     7  a lo n g  w ith  th e  ex p ect ed  an d  act u al  t i m es  o f  r ecei p t  o n  E ar t h    E x p ect ed  tim e s  a r e  f r o m  th e  n o m in a l c h u te  c a s e    Th e  b a n k  1  t o n e  oc c ur r e d ab o u t  2  s eco n d s  l at er  t h an  t h e n o m i n al  6 D O F  r u n  an d  t h e b an k  an g l e w as  b et w een  4 5   0   as  ex p ect ed    Th e  b a n k  2  t o n e  o c c u r r e d  a b o u t  6  s e c o n d s  l a t e r  t h a n  t h e  nom i na l  t i m e  a nd t he  ba nk a ngl e  w a s  be t w e e n 90    45   as  ex p ect ed    T h e b an k  3  t o n e o ccu r r e d a bout  2 s e c onds  ear l i er  t h an  t h e n o m i n al  t i m e an d  t h e b an k  an g l e w as  be t w e e n 45   0   as  ex p ect ed   T h e  m  de c e l e r a t i on to n e  w a s  r e c e iv e d  a b o u t 9  s e c o n d s  la te r  th a n  th e  n o m in a l tim e  a n d  m a x im u m  d e c e le r a tio n  wa s  b e t we e n  11 a nd 12 G s    7  Ke y  M S L  E DL  T o n e s  t  Ex p e c t e d  Ti m e  fr o m  E n tr y    Ac t u a l    En t r y    t  E 677  E 658  Cr u i s e  s t a g e  se p a r a t i o n  E 600  E 600  Sw i t c h  f r o m  PL G A  A  E 20  E 20  y  0  0  St a r t  o f  b a n k  1  6  4  En d  o f  b a n k  1  8  5   de c e l e r a t i on  0  8  St a r t  o f  b a n k  2  6  9  En d  o f  b a n k  2  1  0  St a r t  o f  b a n k  3  3  1  En d  o f  b a n k  3  1  2  d Up y t  9  0  Pa r a c h u t e  D e p l o y  7  0  He a t  s h i e l d  De p l o y  E 2 7 4  8 9  3  TE co m m u n i cat i o n  3  9      13  MS L  E D L  P c N o P e N o a n d R e s id u a l y  wi t h  S 43  D t t o E h   re c e i v e d  a t  D S S 43 ng  MS L  E D L  is  s h o w n  in  Fi g u r e  13   Ca r r i e r to noi s e  pow e r   P c N o  p l o t t e d  i n  t   me a s u r e d  b y  t h e  E D A   cl o s el y  w i t h  P c N o  me a s u r e d  b y  t h e  c l o s e d lo o p  r e c e iv e r  d a rk  b l u e  Av e r a g e  P c N o  me a s u r e d  b y  t h e  E D A  us  S 43  dur i ng E D L  w a s  27 8  dB Hz  c o n s is te n t w ith  pr e di c t i ons  y   MS L  T e l e c o m mu n i c a t i o n s  t e a m  5    to n e  p o w e r  to  n o is e  s p e c tr a l d e n s ity  r a tio  P e N o  p l o t t e d  in  p u r p le    dB Hz  Cr u i s e  s t a g e  se p a r a t i o n   C S S   c a u se d  a  7  se c o n d  si g n a l  o u t a g e  a s t h e  Pa r a c h u t e  L o w  G a i n  A n t e n n a   PL G A   w a s  b r i e f l y  obs t r uc t e d   T he  a nt e nna  s w a p f r om  P L G A  t o T i l t e d L ow  Ga i n  An t e n n a   T L GA  r e s u l t e d  i n  a  4  s e c o n d  s i g n a l  o u t a g e    Re s i d u a l  f r e q u e n c y  as  m eas u r ed  b y  t h e E D A   p l o t t ed  i n  lig h t r e d   a n d  th e  c lo s e d  lo o p  r e c e iv e r   d a r k  r e d   m a tc h e d  cl o s el y  as  s h o w n  i n   13   Th e  c l o s e d lo o p r e c e iv e r lo s t lo c k  a t th e  f o llo w in g  tim e s  C r u is e  S ta g e  S e p a r a tio n  A to  p  b a n k in g  a n d  p a r a c h u te  d e p lo y m e n t  Th e  c h a n g e s  i n  f r e q u e n c y  o b s e r v e d  d u r i n g  ED L c a n  b e  at t r i b u t ed  t o  t w o  f act o r s   1   D o p p l er  i n d u ced  b y  ev en t s  dur i ng E D L  s uc h a s  a t m os phe r i c  e nt r y  c r ui s e  s t a ge  se p a r a t i o n   a n d  p a r a c h u t e  d e p l o y m e n t   a n d  2   C h  th e  o u tp u t f r e q u e n c y  o f  th e  a u x ilia r y  o s c illa to r   A U X  O S C   in  th e  S m a ll D e e p  S p a c e  T r a n s p o n d e r   S D S T   h  e ch i ef l y  due  t o c ha nge s  i n t e m pe r a t ur e    wa s  p r e d i c t e d  r  33  UT C  i n  t h e  n a v i g a t i o n  pr e di c t s  f i l e  y  d 1 s e c ond l a t e r    34  Th i s  d i f f e r e n c e  b e t w e e n  p r e d i c t e d  a n d  a c t u a l  e n t r y  tim e  a n d  b a n k in g  tim e s  r e s u lte d  in  th e  D o p p le r  s h if t o f  ab o u t  4  k H z b et w een  E  5 0  s eco n d s  an d  E  1 5 0  s eco n d s   Th e  n a v i g a t i o n  p r e d i c t s  f i l e  a l s o  d i d  n o t  i n c l u d e  p a r a c h u t e  p lo y m e n t r e s u ltin g  in  a  la r g e  j u m p  in  r e s id u a l f r e q u e n c y  at  ar o u n d  E  2 6 0  s eco n d s    14  illu s tr a te s  f r e q u e n c y  a s  a  f u n c tio n  o f  A U X  O S C  an d  B as ep l at e  te m p e r a tu r e   C ubi c  pol ynom i a l s  pr ovi de  a  good a ppr oxi m a t i on t o t he  f r e que nc y ve r s us  t e m pe r a t ur e  be ha vi or  of  t he  S D S T  A U X  O S C  c r ys t a l   pa r t i c ul a r l y i n t hi s  te m p e r a tu r e  r e g io n   R 2  va l ue  f or  t he   


  10  te m p e r a tu r e  s e n s o r  pol ynom i a l  i s  0 9977  w hi l e  t he  R 2   fo r  t h e  ba s e pl a t e  t e m pe r a t ur e  s e ns or  pol ynom i a l  i s  0 9984   Ta b l e  8  pr e s e nt s  t he  pol ynom i a l  c oe f f i c i e nt s     Fi g u r e  14  q ue nc y  H z    Te m p e r a t u r e  d  Ce l s i u s   f o r  A u x i l i a r y  O s c i l l a t o r  a n d  Ba s e p l a t e   Ta b l e  8  Co e f f i c i e n t s  fo r  F r e q u e n c y  v s  T e m p e r a t u r e  Po l y n o m i a l s    Al t h o u g h  t h e  h i g h  R 2  va l ue s  s e e m  t o pr ovi de  r e a s on f or  co n f i d en ce i n  t h es e t em p er at u r e p r ed i ct i o n s   t h e E D L  th e r m a l e n v ir o n m e n t d if f e r s  n o ta b ly  f r o m  th a t in  c r u is e  St e a d y  t e m p e r a t u r e s  a n d  t h e r m a l  e q u i l i b r i u m  c h a r a c t e r i z e  th e  c r u is e  th e r m a l e n v ir o n m e n t  T h e  E D L  th e r m a l i ro n m e n t  i s  c h a ra c t e ri z e d  b y  ra p i d  h e a t i n g    A s  a  re s u l t   th e  S D S T  a n d  its  in te r n a l c o m p o n e n ts  w e r e  n o t in  th e r m a l eq u i l i b r i u m  d u r i n g  E D L   In  t h e rm a l  e q ui l i br i um   a s  s how n  Fi g u r e  15  be l ow   t he  A U X  O S C  i s  nor m a l l y s om e w ha t  wa r m e r  t h a n  t h e  b a s e p l a t e    Ho we v e r   a s  Fi g u r e  15   sh o w s  d u r i n g  E D L   t h e  b a se p l a t e  t e m p e r a t u r e  r o se  re l a t i v e l y  q u i c k l y  a n d  ra p i d l y  o v e rs h o t  t h e  A U X  O S C  te m p e r a tu r e   A lth o u g h  A U X  O S C  te m p e r a tu r e  r o s e  s lo w ly  to   c a tc h  u p   w ith  b a s e p la te  te m p e r a tu r e  th e  S D S T  w a s  n o t in  th e r m a l e q u ilib r iu m  d u r in g  E D L   T h is  im p a c ts  th e  accu r acy  o f  an y  f r eq u en cy  p r ed i ct i o n s  b as ed  o n  b as ep l at e te m p e r a tu r e     15  MS L  E D L  S D S T  T e m p e r a t u r e s  S 34 S 45 34 m y  a  As  a  b a c k up t o t he  pr i m e  70 m a n t e n n a   D S S 43   t he  si g n a l s f r o m  a b eam  w av eg u i d e  34 m a n t e n n a s   D S S 34    a h i g h  ef f i ci en cy  3 4 m a n t e n n a   S 45  w e r e  co m b i n ed  an d  r eco r d ed    k up  da t a  w a s  not  ne e de d in r e a l  d  wa s  a n a l y z e d  i n  p o s t ng  Di r e c t to h   re c e i v e d  b y  t h e  D S S S y dur i ng M S L  E D L  i s  s how n i n  Fi g u r e  16   Av e r a g e  c er to noi s e  pow e r   P c N o  p l o t t e d  i n  l i g h t  b l u e  m e a s u re d  by th e  E D A  us i ng t he  D S S S 45 a r r a y dur i ng E D L  w a s  dB     Fi g u r e  16  MS L  E D L  P c N o P e N o a n d R e s id u a l Fr e q u e n c y  w i t h  D SS S y  An t e n n a  se n si t i v i t y  i s m e a su r e d  b y  T  w h e r e  G  is   an t en n a g ai n   an d  T  is  th e  s y s te m   te m p e r a tu r e   G   fu n c t i o n  o f w a v e l e n g t h     phys i c a l  a pe r t ur e  a r e a   A p   ap er t u r e ef f i ci en cy     as  s h o w n  b el o w                    6    Ba s e d  s o l e l y  o n   ap er t u r e  ea  A p    T   a  34 m a n t e n n a  is  a b o u t 1 7  0  1 7  0  3 5  0  3 5    6   T   0   Ho we v e r   t h e  N 70 m a n t e n n a  al s o  h as  b et t er  ap er t u r e ef f i ci en cy     a n d  a  lo w e r  s y s te m  noi s e  t e m pe r a t ur e   T  th a n  th e  D S N  3 4 e    th e s e  f a c to r s  c o n s id e r e d  th e  T  of  a  D S N  34 m a n t e n n a  i s  ab o u t  1 8   t h e T  of  a  D S N  70 m a n t e n n a  8    pr e di c t e d di f f e r e nc e  i n a r r a y ga i n be t w e e n t he  70  an d  t w o  ar r ay ed  3 4 m a n t e n n a s  i s  10 g 10   1 0   18  18    4 44  dB   a s s um i ng no c om bi ni ng l os s   P c N o  is  p r o p o r tio n a l  T   Th e  m e a s u r e d  d i f f e r e n c e  i n  P c N o   S S S n  17   Th e  m e a n  m e a s u r e d  d i f f e r e n c e  f r o m  E 645 s e c onds  t o E 2 9 9  s e c o n d s  w a s  4  2 6  d B   Th e r e f o r e  m e a n  c o m b i n i n g  lo s s d u r in g th is tim e w a s  ab o u t  0  1 8                      0 1 23 45''67626 84  3 6 9 2 7 7    6593 9\(:6 562\(6\(2'47   0        0 1 5'695\(95 87 7 3 5   4 7 5 2  97599 562\(6\(&765 


  11   Fi g u r e  17  e re n c e  i n  D S S 43 a nd D S S S P c N o   Af t e r  E DL   E v e n t  R e c o r d s   E VR s   t h a t  l o g g e d  e a c h  t o n e  is s u e d  d u r in g  E D L  w e r e  obt a i ne d f r om  M S L   Th e s e  l o g s  we r e  c o m p a r e d  wi t h  t h e  r e a l tim e  r e s u lts  p r o v id e d  b y  th e  ED A  t o  d e t e r m i n e  p e r f o r m a n c e    Th e  D TE c o m m u n i c a t i o n s  sy st e m  r e c e i v e d  a n d  c o r r e c t l y  i d e n t i f i e d  1 0 0   o f  ra d i a t e d   i n r e a l tim e  d u r in g  M S L  E D L   Th e s e  r e s u l t s  a r e  co n s i s t en t  w i t h  t h e t h eo r et i cal  pr oba bi l i t i e s  of  c a r r i e r  acq u i s i t i o n  t r ack i n g  an d  d at a t o n e d et ect i o n  co m p u t ed  i n  Se c t i o n  3   5   C ON   Th e  D i r e c t to Ea r t h  X ba nd c om m uni c a t i ons  s ys t e m  ut i l i z e d dur i ng M S L  E D L  s uc c e s s f ul l y de t e c t e d a l l  ra d i a t e d   de s pi t e  c ha l l e ngi ng s i gna l  dyna m i cs  w i t h  l ar g e u n k n o w n  ch an g es  i n  D o p p l er  f r eq u en cy   r at e  an d  accel er at i o n   Fu t u r e  m i s s i o n s  w i t h  p e r i o d s  o f  r a p i d  a n d  u n k n o w n  s i g n a l  dyna m i c s  s uc h a s  Ma r s  o r  i c y  m o o n  la n d e r s  can  l ev er ag e fr o m  t h e  M S L  de s i gn f or  D T E  c om m uni c a t i ons    6   A CK NO W L E DG E M E NT S   T he  a ut hor s  w oul d l i ke  t o a c know l e dge  t he  c ont r i but i on s   Ja n  T a r sa l a   te s tin g  o f  th e  E D A  p r io r  to  M S L  E D L  us i ng a  P R S R  a nd M S L  t e s t be d    Th e  a u t h o r s  w o u l d   th a n k  J e r e m y  S r  fo r  p r o v i d i n g  6 D O F  s i m u l a t i o n  d a t a  th a t w a s  v a lu a b le  in  c o n f ig u r in g  th e  E D A   Th e  a u t h o r s  wo u l d  a l s o  l i k e  t o  t h a n k  t h e  C DS C C  s t a t i o n  p e r s o n n e l  f o r  th e ir  e x c e lle n t s u p p o r t a n d  ope r a t i ons  of  t he  D S N  eq u i p m en t  an d  t h e F u l l  S p ect r u m  P r o ces s o r  A r r ay  i n  u   Th i s  r e s e a r c h  w a s  c a r r i e d  o u t  a t  t h e  J e t  P r o p u l s i o n  La b o r a t o r y   C a l i f o r n i a  I n s t i t u t e  o f  Te c h n o l o g y    Co p y r i g h t  2012 C a l i f or ni a  I ns t i t ut e  of  T e c hnol ogy  Go v e r n m e n t  sp o n so r sh i p  a c k n o w l e d g e d     


  12  R EF ER EN C ES   1  E  S a t o r i u s   P   Es t a b r o o k   J   W i l s o n   D   F o rt    D i re c t to  Ea r t h  c o m m u n i c a t i o n s  a n d  s i g n a l  p r o c e s s i n g  f o r  M a r s  ex p l o r at i o n  r o v er  en t r y   d es cen t  an d  l an d i n g   T h e In t e rp l a n e t a ry  N e t w o rk  P ro g re s s  R e p o rt   IP N  P ro g re s s  Re p o r t  4 2 2003  2 A n d re  J o n g e l i n g  an d  S u s an  F i n l ey     M ar s  S ci en ce La b o r a t o r y  Te l e c o m  S y s t e m  En g i n e e r i n g  P r e  Re v i e w   E D L  D a t a  A n a l y s i s  S i m u l a t i o n s  Re s u l t s     A p r i l  24  2007   3 W   J   H u rd   P   E s t a b ro o k   C   S   R a c h o   a n d  E   S a t o ri u s   C r i t i cal  sp acecr af t to ear t h  co m m u n i cat i o n s   ex p l o r at i o n  r o v er   M E R   en t r y   d es cen t  an d  l an d i n g   Pr o c   I E E E  A e r o s p a c e  C o n f e r e n c e   v o l  3   p p   1 2 8 3  MT   Ma r c h  2 0 0 2    4 M  S o r i a n o   S   F i n l e y   A   J o n g e l i n g   D   F o r t   C   G o o d h a r t   D  R o g s t a d   R   Na v a r r o    Sp a c e c r a f t to Ea r t h  Co m m u n i c a t i o n s  fo r J u n o  a n d  M a rs  S c i e n c e  L a b o ra t o ry  Cr i t i c a l  E v e n t s   P r o c  I E E E  A e r o sp a c e  C o n f e r e n c e   M T   2   5 A   M a k o v s k y   P   Il l o t t   J   T a y l o r    M a rs  S c i e n c e  La b o r a t o r y  Te l e c o m m u n i c a t i o n s  S y s t e m  D e s i g n    D e e p  Sp a c e  C o m m u n i c a t i o n s  a n d  N a v i g a t i o n  Sy s t e m s  C e  of  E xc e l l e nc e  D e s i gn a nd P e r f or m a nc e  S um m a r y S e r i e s   No v e m b e r  2 0 0 9   6 M   S o ri a n o  a n d  P   E s t a b ro o k    M S L  E D L  S i m u l a t i o n s   i n t e rn a l  d o c u m e n t   J e t  P ro p u l s i o n  L a b o ra t o ry   P a s a d e n a   CA   M a y  7   2 0 1 2   7  Sa t o r i u s  R e v i s e d  T h r e s h o l d s  f o r  E D L    i n t e r n  doc um e nt    J e t  P r opul s i on L a bor a t or y  P a s a de na   C A   Ja n u a r y  1 4   2 0 0 3   8 A   K w o k     M o d u l e  2 0 6  Te l e m e t r y  G e n e r a l  In fo rm a t i o n    i n DS N  T e l e c o mmu n i c a t i o n s  L i n k  De s i g n  k B   D S N  N o  8 1 0 005   P a s a de na  Ca l i f o r n i a   J P L   Oc t o b e r  3 1   2 0 0 9  ht t p   e i s  j pl  na s a g o v d e e p s p a c e d s n d o c s 8 1 0 005     


  13  M el i s s a  S o r i a n o  ff f tw a r e  e n g in e e r  in  th e  T r a c k in g  Sy s t e m s  and A ppl i c at i ons  Se c t i on at  t he  J e t  P r opul s i on L abor at or y    She  has  de v e l ope d r e al  so f t w a re  f o r t To  co m m u n i ca t i o n s  w i t h  M a r s  Sc i e nc e  L abor at or y  dur i ng E nt r y   De s c e n t   a n d  L a n d i n g   th e  L o n g  W a v e le n g th  Ar r a y   N AS A s  Br e a d b o a r d  Ar r a y   a n d  t h e  W i d e b a n d  VL BI  S c i e n c e  Re c e i v e r  u s e d  i n  t h e  D e e p  S p a c e  N e t w o r k   Me l i s s a  i s  a l s o  cu r r en t l y t h e s o f t w a r e co g n i z a n t  en g i n eer  f o r  t h e D S C C  Do w n l i n k  A r r a y   She  has  a B  S   fr o m  C a lte c h  d o u b le  m a jo r  in  E le c tr ic a l a n d  C o m p ut e r  E ngi ne e r i ng and B us i ne s s  Ec o n o m i c s  a n d  M a n a g e m e n t    S h e  a l s o  h a s  a n  M  S    Co m p u t e r  S c i e n c e  fr o m G e o r g e M a so n  U n i v e rsi t y   Sus a n F i nl e y  is  a  k e y  s ta ff me mb e r  i n  t h e  P r o c e s s o r  S y s t e ms  De v e l o p me n t  Gr o u p  a t  J P L     is  th e  s u b s y s te m  e n g in e e r  fo r  th e  Fu ll S p e c tr u m  P r o c e s s o r  su b sy st e m  d e p l o y e d  i n  N A S A  s De e p  S p a c e  N e t w o r k     exp er i en ce i n cl u d es  t h e o p er a t i o n  of  t he  E D A  f or  bot h of  t he  M E R  l andi ngs  on M ar s  as  w e l l  as  th e  o p e r a tio n  o f th e  R a d io  S c ie n c e  R e c e iv e r  fo r  th e  la n d in g  o f th e  H u y g e n s  P r o b e  o n  T it an and f or  t he  P hoe ni x  l andi ng on s    Da v i d  t  re c e i v e d  a  B  A  S c  i n  En g i n e e r i n g  Ph y s i c s  a n d  M  S c  i n  As t r o n o m y  f r o m  t h e  U n i v e r s i t y  o f  To r o n t o  a n d  a n  M S c   a n d  P h  D   i n  Ra d i o  As t r o n o m y  f r o m  t h e  U n i v e r s i t y  of  M anc he s t e r    H e  j oi ne d N R C  C a n a d a  i n  1 9 7 2  a n d  w o r k e d  o n  a l l  as pe c t s  of  V L B I  unt i l  1987   H e  su b se q u e n t l y  j o i n e d  J P L  i n  se c t i o n  3 3 5  a n d  w o rk e d  o n  a  num be r  of  har dw ar e  and s of t w ar e  pr oj e c t s  f or  t he   be c am e  s upe r v i s or  of  t he  P r oc e s s or  Sy s t e m s  de v e l opm e nt  Gr o u p  f o r  t h e  t w o  y e a r s  p r i o r  t o  r e t u r n i n g  t o  N R C  i n  2 0 0 2   Un t i l  h i s  r e t i r e me n t  i n  2 0 1 0  h e  w o r k e d  o n   Co r r e l a t o r  P r o j e c t    No w a   G u e s t  W o r k e r    h e  h e l p s  o u t  wi t h  t h e  E V L A  a s  i t  b e c o m e s f u l l y  o p e ra t i o n a l  a n d  w i t h  oc c as i onal  que s t i ons  f r om  J P L    Br i a n  S c h r a t z  is  th e  le a d  e n g in e e r  fo r  th e  E D L  te le c o m m u n ic a tio n s  o n  th e  Ma r s  S c i e n c e  L a b o r a t o r y  m i s s i o n  a n d  a m e m be r  of  J P L  s  C om m uni c at i ons  Sy s t e m s  and O pe r at i ons  gr oup      jo in e d  J P L  th r e e  y e a r s  a g o   B S  E E  a n d  M  S  E E   Pe nns y l v ani a St at e  U ni v e r s i t y    Pe t e r  I l o t t  is  th e  te le c o m m u n ic a tio n s  sy st e m  l e a d  f o r t h e  M S L  m i ssi o n   H e  has  w or k e d on s pac e c r af t  te le c o m m u n ic a tio n s  s y s te m  d e s ig n  fo r  2 5  y e a r s  1 1  y e a r s  o n  c o m m e r c ia l sp a c e c ra f t   a n d  si n c e  2 0 0 0  a t  J P L    wo r k e d  o n  M E R   P h o e a te le c o m m u n ic a tio n s  s y s te m  e n g in e e r  Pe t e r  w o r k e d  o n  a l l  t h e  M a r s  ED L   e n t r y  and la n d in g   e ffo r ts  s in c e  M E R  a n d  in  b e tw e e n  M a r s  m is s io n s  he l pe d out  on t he  D e e p I m pac t  and C l oudat  mi s s i o n s  a t  J P L   He  c u r r e n t l y  s u p p o r t s  t h e  M S L  s u r f a c e  mi s s i o n  p h a s e   a n d  i s  th e  te le c o m m u n ic a tio n s  le a d  fo r  th e  E u r o p a  m is s io n  cu r r en t l y u n d er  s t u d y  I l o t t  h o l d s  B S c  M S c  a n d  P h D  de gr e e s  i n phy s i c s  and e l e c t r i c al  en g i n eer i n g  f r o m  M cG i l l  i st y  o f  M o n t re a l    i  re c e i v e d  t h e  B  S  E  E   and t he  M  S E  E   i n 1997 and t he  Ph  D   i n  El e c t r i c a l  En g i n e e r i n g  i n  2003  al l  f r om  U C L A    He  h a s  b e e n  em p l o yed  a t  t h e Jet  P r o p u l s i o n  La b o r a t o r y  a s  a  Te l e c o m m u n i c  en g i n eer  s i n ce 1 9 9 9  a n d  h a s  s er ved  on t he  M ar s  E x pl or at i on R ov e r   DA W N   C a s s i n i   J u n o   a n d  M a r s  Sc i e nc e  L abor at or y  pr oj e c t s     Po l l y  E s t a b r o o k  is  th e  d e p u ty  ma n a g e r  o f  t h e  C o mmu n i c a t i o n  Ar c h i t e c t u r e s  a n d  Re s e a r c h  S e c t i o n  at  J P L     She  i s  a m e m be r  o f N A S A  s  Spac e  C om m uni c at i on and Na v i g a t i o n  P r o g r a m  s u p p o r t i n g  t h e  de f i ni t i on of  t he  N A SA  s  f ut ur e  In t e g r a t e d  C o m m u n i c a t i o n  a n d  Na v i g a t i o n  Ne t wo r k  a n d  i s  a  m e m b e r  o f  t h e  I n t e g r a t e d  Sy s t e m  E ngi ne e r i ng t e am  f or  t he  M ar s  Sc i e nc e  L abor at or y  r   Fr o m  2 0 0 5  t o 2010  s he  l e d s e v e r al  c om m uni c at i on sy st e m  d e si g n  t e a m s w i t h  t h e  g o a l  o f  d e f i n i n g  t h e  mo d i f i c a t i o n s  t o  N A S A  s  S p a c e  C o mmu n i c a t i o n  a n d  Na v i g a t i o n  i n f r a s t r u c t u r e  n e e d e d  t o  s u p p o r t  t h e  p l a n n e d  hum an m i s s i ons  t o t he  M oon and M ar s   F r om  2000 t o 2004 sh e  w a s t he  l e ad t e l e c om  s y s t e m  e ngi ne e r  f or  t he  M ar s  Ex p l o r a t i o n  Pr o j e c t   r e s p o n s i b l e  f o r  t h e  p e r f o r m a n c e  o f  t h e  en t r y d es cen t  a n d  l a n d i n g  t el eco m m u n i ca t i o n s  s ys t em  a n d  fo r  th e  o v e r a ll d e s ig n  a n d  p e r fo r m a n c e  o f th e  D ir e c t to  Ea r t h  a n d  r e l a y  c o m m u n i c a t i o n s  s y s t e m s   In  2 0 0 4   D r   Es t a b r o o k  r e c e i v e d  t h e  N AS A Ex c e p t i o n a l  Ac h i e v e m e n t  Me d a l  f o r  h e r  w o r k  o n  t h e  Ma r s  E x p l o r a t i o n  R o v e r  T e l e c o m  Sy s t e m   She  has  w r i t t e n ov e r  35 t e c hni c al  pape r s  and ch a i r ed  n u m er o u s  I E E E  a n d  A I A A  co n f er en ce S es s i o n s    Po l l y  Es t a b r o o k  r e c e i v e d  h e r B  A   i n  e n g i n e e ri n g  p h y si c s fr o m  th e  U n iv e r s ity  o f C a lifo r n ia  B e r k e le y  a n d  M S  a n d  Ph  D   d e g r e e s  i n  e l e c t r i c a l  e n g i n e e r i n g  f r o m  S t a n f o r d  Un i v e r s i t y   S t a n f o r d   C A      


  14  Ka m a l  O u d r h i r i  is  a  s e n io r  r  in  th e  R a d io  S c ie n c e  Sy s t e m s  G r oup at  NA S A  s  J e t  Pr o p u l s i o n  L a b o r a t o r y   As  a co n t r a ct  t ech n i ca l  m a n a g er   Ou d r h i r i  lti di s c i pl i nar y  te a m s  th r o u g h  th e  de s i gn  im p le m e n ta tio n  a n d  d e liv e r y  of  flig h t h a r d w ar e  t o t he  r adi o sc i e n c e  c o m m u n i t y   Ov e r  t h e  l a s t  d e c a d e   Ou d r h i r i  se rv e d  i n  key r o l es  o n  m u l t i p l e N A S A  mi s s i o n s   T h e  M a r s  E x p l o r a t i o n  s  M E R   t h e  In t e r n a t i o n a l  C a s s i n i  m i s s i o n  t o  Sat ur n T he  GR A I L  l u n a r  mi s s i o n  a n d  T h e  M a r s  S c i e n c e  La b o r a t o r y     Da n i e l  K a h a n  is  a s e ni or  m e m be r  of  S ci en ce S ys t em s  G r o u p  at  NA S A  s  J e t  Pr o p u l s i o n  La b o r a t o r y   Ov e r  t h e  l a s t  ei g h t  yea r s   h e h a s  pr ov i de d e ngi ne e r i ng s uppor t  f or  t he  i o s c i e nc e  c om m uni t y   NA S A  m i s s i o n s   i n c l u d i n g  M a r s  G l o b a l  Sur v e y or   M ar s  R e c onnai s s anc e  Or b i t e r   th e  G R A I L  lu n a r  m is s io n  th e  In t e r n a t i o n a l  C a s s i n i  mi s s i o n  t o  S a t u r n   a n d  Ma r s  S c i e n c e  La b o r a t o r y   Ed g a r  H   S a t o r i u s  is  a  p r in c ip a l me mb e r  o f  t h e  t e c h n i c a l  s t a f f  i n  th e  F lig h t C o m m u n ic a tio n s  Sy s t e m s  Se c t i on of  t he  J e t  Pr o p u l s i o n  L a b   H e  p e r f o r m s  sy st e m s a n a l y si s i n   de v e l opm e nt  of  di gi t al  s i gnal  e ssi n g  a n d  c o m m u n i c a t i o n s sy st e m s w i t h  sp e c i f i c  a p p l i c a t i o n s t o  b l i n d  d e m o d u l a t i o n   di gi t al  di r e c t i on f i ndi ng and di gi t al  r e c e i v e r s   H e  has  publ i s he d ov e r  90 ar t i c l e s  and hol ds  t w o pat e nt s  i n t he  f i e l d of  di gi t al  s i gnal  pr oc e s s i ng and i t s  appl i c at i ons   I n a ddi t i on  he  i s  an A dj unc t  A s s oc i at e  P r of e s s or  at  t he  U ni v e r s i t y  of  Sout he r n C al i f or ni a w he r e  he  t e ac he s  di gi t al  s i gnal  pr oc e s s i ng c our s e s   H e  r e c e i v e d hi s  B  Sc   i n e ngi ne e r i ng fr o m  th e  U n iv e r s ity  o f C a lifo r n ia  L o s  A n g e le s  a n d  th e  M S  and P h D   de gr e e s  i n  el ect r i ca l  en g i n eer i n g  f r o m  t h e Ca l i f o r n i a  I n s t i t u t e  o f  T e c h n o l o g y   P a s a d e n a   Ca l i f o r n i a   


Example 2: Identifying Causal Factors CAUSAL FACTORS  Indicators – Data Element Methods – Identifying Context and Causes  Time of day  Date range \(month day  Aircraft type  Fix or coordinates  Originating airport  Destination airport  Weather notes We pinpoint the sequencing of flights on the IAH Junction Seven departure \(at CUZZZ\the specified wind conditions to find cases wher e a B737-900 at 20,000 feet precedes by 11 miles a B737-800 at 17,000 feet  Search related data sets including ASDI flight tracks, local traffic and congestion  Weather conditions for alter native causes \(winds aloft shear and convecti ve activity  Airline specific informati on \(repeated occurrence of event in aircraft type Big data gives us visibility into contextual factors even if specific data points are missing such as a specific date or route Big-data analytics gives us insight into unreported factors as well 


Example 3: Correlating Utilization and Delays  60 65 70 75 80 85 90 95 100 7 9 11 13 ONTIME DEPARTURE PERFORMANCE HOURS OF DAILY UTILIZATION 60.0 70.0 80.0 90.0 100.0 7.0 9.0 11.0 13.0 Narrowbodies By Day of Week 60.0 70.0 80.0 90.0 100.0 7.0 9.0 11.0 13.0 Widebodies by Day of Week Daily Utilization vs. On-time Departures January 2013 System Operations Correlation Coefficient -0.53 Includes AA, AC, AS B6 F9, FL, NK, UA, US VX and WN SOURCE masFlight \(masflight.com COMPARING OTP AND UTILIZATION 


 6.2 6.0 5.8 5.8 5.2 4.9 LGB JFK BOS MCO DCA FLL JetBlue Focus Average Daily Deps per Gate Used UTILIZATION BY HUB Example 4: Daily Utilization of Gates, by Hub Big-data analysis of different carriers daily departures per gate used SOURCE masFlight \(masflight.com June 1 through August 31, 2012 Gates with minimum 1x daily use 7.7 7.4 7.2 6.2 6.1 5.8 3.8 3.6 ORD LAX SFO EWR DEN IAH IAD CLE United Airlines Hubs Average Daily Deps per Gate Used 7.8 6.4 5.5 5.4 5.3 4.4 4.3 4.0 SEA SAN PDX ANC SFO GEG LAX SJC Alaska Airlines Hubs Average Daily Deps per Gate Used 7.2 6.9 6.8 6.4 5.0 2.7 ORD DFW LAX LGA MIA JFK American Hubs Average Daily Deps per Gate Used 7.2 6.9 6.6 4.9 4.2 CLT DCA PHL PHX BOS US Airways Hubs Average Daily Deps per Gate Used 6.6 5.9 5.5 4.7 MCO BWI ATL MKE AirTran Hubs Average Daily Deps per Gate Used ne pe 


Conclusions for Big Data in Aviation  Big-data transforms operational and commercial problems that were practically unsolvable using discrete data and on-premises hardware  Big data offers new insight into existing data by centralizing data acquisition and consolidation in the cloud and mining data sets efficiently  There is a rich portfolio of information that can feed aviation data analytics  Flight position, schedules, airport/gate, weather and government data sets offer incredible insight into the underlying causes of aviation inefficiency  Excessive size of each set forces analysts to consider cloud based architectures to store, link and mine the underlying information  When structured, validated and linked these data sources become significantly more compelling for applied research than they are individually  Today’s cloud based technologies offer a solution CONCLUSIONS 


Conclusions:  Our Approach  masFlight’s data warehouse and analysis methods provide a valuable example for others attempting to solve cloud based analytics of aviation data sets  masFlight’s hybrid architecture, consolidating secure data feeds in on-premises server installations and feeding structured data into the cloud for distribution, addresses the unique format, security and scale requirements of the industry  masFlight’s method is well suited for airline performance review competitive benchmarking, airport operations and schedule design and has demonstrated value in addressing real-world problems in airline and airport operations as well as government applications CONCLUSIONS 





