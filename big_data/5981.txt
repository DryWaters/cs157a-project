 Secure Distribution of Big Data Based on BitTorrent  Limin Xiao,Chunjie Xu, Yanfei Wu, Jingchao Qin Guangjun Qin, Mingfa Zhu, Li Ruan State Key Laboratory of Software Development Environment  School of Computer Science and Engineering, Beihang University Beijing, China ruanli@buaa.edu.cn   Zhiyao Wang, Mingquan Li, Dongyu Tan  Space Star Technology Co., Ltd  Beijing, China    Abstract  Recently, big data becomes more and more widespread on the Internet, as various P2P protocols especially BitTorrent, make great contribution. Accompanied 
with BitTorrent spreading, howe ver, malicious activities divulging sensitive data and other security problems arise Relative researches and analyses indicate that existing means of protecting P2P network are sophisticated but intricate when distributing big data, leading inefficiency of implementation In this paper, a scheme to distribute big data securely and efficiently on BitTorrent network is proposed, which can be implemented in server, authorizing peers  admittances and actions, hence protecting sensitive data in the network. To achieve this goal, identity verification and cipher system are embedded into BitTorrent protocol, enabling the server to 
regulate and keep trace of peer s behaviors and sensitive data The experimental results show the functional effectiveness of this scheme, as well as accep table overhead on server Keywords-big data distribution; security; encryption I  I NTRODUCTION  Big data has already been the hot spot in academies and industries in recent years. The Large Hadron Collider at European Organization for Nuclear Research produces approximately 15PB of data every year [1 s an aly zed   th e  amount of data in the world will become 35000EB in 2020 2  Su ch ra pi d d e vel o pm ent c h alleng e s t r a d it ion a l m e ans of  storing, managing and sharing data, introducing higher 
requirements Along with the great progress of transmitting speed security problems attract more and more attentions BitTorrent protocol \(BT\ [3 h as been w i dely im plem ented in big data transmission due to its scalability and efficiency in distribution. However, many P2P systems of data distributing, including BT, have secure loopholes in aspects of nodes communication and data transmission [4  S o m e o f  them lack the mechanism to verify admittances of nodes and data, or to resist malicious activities within the network which may attract various attacks, e.g., anonymous whitewash \(one node pretends to be various nodes with different arbitrary identity\rvice Denial, tamper and conspiracy [5   
Considering BT network, due to its only focus on function and efficiency, users \(or peers\ are optimistically expected to follow the protocol descriptions, and mainly concentrated on various functions of management for applications, and hence are vulnerable to malicious attacks 6  e.g    Sy bil att ack  7    F r e e r i d in g  8   an d B y zan tin e  attack \(fake or lie about individual situation\. Therefore some  selfish  users are able to exploit weakness of protocol and privately violate the rules to get much more benefits than  compliant  users without being punished, even discovered Having no central authority or control mechanism makes 
these problems irresistible Fortunately, with the development of cryptography, there have been many methods, such as digital signature and secure log, to sustain the function of a data transmitting system, even to detect malicious behaviors and punish them 6  Unf o rtu n a tely th es e m etho d s h a v e s o m e issu es o f  efficiency when facing to big data. They are essentially increasing the overhead on both server and peers by key generation and distribution, data track among nodes, or log contrast and lookup To address there disadvantages, this paper will propose a distributing scheme applicable to big data. After furnishing server with proper administrating function, this scheme will 
provide efficient distribution for big data, protect the network, keep peers  actions in tracking and private data in secret, but just require reasonable expense of server resource In Part II, related work in security of P2P network will be discussed. In Part III, the scheme consisting of identity verification and cipher system, is introduced generally at first and then the detailed design and implementation will be demonstrated. In Part IV, to prove the functionality and efficiency, experiment is taken in lab and the results will be 
2013 IEEE 11th International Conference on Dependable, Autonomic and Secure Computing 978-1-4799-3381-5/13 $31.00 © 2013 IEEE DOI 10.1109/DASC.2013.42 82 2013 IEEE 11th International Conference on Dependable, Autonomic and Secure Computing 978-1-4799-3381-5/13 $31.00 © 2013 IEEE DOI 10.1109/DASC.2013.42 82 2013 IEEE 11th International Conference on Dependable, Autonomic and Secure Computing 978-1-4799-3381-5/13 $31.00 © 2013 IEEE DOI 10.1109/DASC.2013.42 82 


 shown and analyzed. After that, the conclusion and some omitted details will be covered in Part V II  R ELATED W ORK  The mechanism in BT to distribute data is the source of the problems being discussed. First of all, in BT network, the server called  tracker  which is responsible to preserve and broadcast the information of pe ers and torrents \(small files that contain address of tracker and hashed data of file\, have no idea about the truths of those peers. In contrast, tracker updating its knowledge fully depends on the regular reports from peers, e.g., which pieces of file are requested or possessed by peer. On the other hand, tracker doesn  t have the original data by itself, so the distribution of data is occurred totally among the peers: peer who needs data \(a downloader\ will send the request to tracker, and be responded by a list of other peers  information \(IP address port, possessed pieces, etc.\; Using this list, downloader initializes the connection by handshaking with  proper  and  nice  peers \(a uploader or seeder who have good network condition\and downloads data from some of them [3   In such a P2P network, behavior of a single peer is hardly controlled. Some little actions will compromise the whole network, e.g., violating the reciprocity \(only downloading and never uploading\ and drawing undeserved attention by lying about possessed pieces of file [5  T h es e ac ti on s ar e  invisible by the tracker, or by other peers in network has no secure considerations. It  s obvious that the overall performance of distribution in such a network full of malicious peers will be impacted seriously There have been many researchers proposing the principle [9  o r  s c hem es to add r ess  th es e ac ti on s an d  problems. M. Kinateder and S. Pearson exploited the trust computing technic to embed a reliable platform on which all peers depend, providing privacy and security in system [1   Damiani and coworkers focused on anonymity in P2P network, designing a reputation-based, self-regulating system in which requester run  polling algorithm  to verify the reliability of resources before initializing download [11   Also, J.K. So proposed a system AntiLiar to help peers independently find out and block attacks from malicious peers. These researchers concentrated on how a single peer can detect unfriend actions independently of others or tracker 6   When it comes to big data distribution, these approaches will somehow complicate the protocol and raise the amount of information needed to be preserved or updated, even though they  re effective in resisting malicious motions Within a network required to distribute big data, the impact of complicated communication becomes significant and reduces the quality of service. It costs more than one can endure to just depress the dependency on central server or authority In the aspect of protecting private data, security and copyright brings more challenges along with widespread application of P2P and big data [4  e v e n  t h o ugh r e l i ab l e  encrypting and signature mech anism have been proposed such as Identity-based signature scheme [12  and El G am al public-key mechanism  als o t r y i n g to d e press th e dependency on trusting third party. Of course, utilizing sophisticated encryption and digital certificate indeed provides high security. Dealing with big data with these schemes, however, has little advantage due to extra overhead on transmission, when dist ributing cipher keys and encrypting/decrypting data, and on storage, when updating and preserving so many keys As we can see, BT provides a good model to distribute data, but gives little concerns about secure problems of nodes permission and sensitive data. Some strategies intending to improve efficiency are proposed [13   bu t p o tenti al  m alici ou s behaviors and data leakages are not taken into consideration First of all, the tracker \(server\ doesn  t verify the authentication of downloader. Any peer, as long as having a torrent file, is permitted to se nd download request and get list of other peers as response. That will expose every peer who possesses parts of the requested file, including their IP addresses, ports, etc. Also, the dissemination of sensitive data is hard to be controlled, causing secondary damage due to the rapid spreading, which is difficult to measure because it might be violation of intellectual property right or reveal of commercial privacy Therefore, the ability of server \(tracker\to verify authentication of peers and data is the key to block malicious peers and inappropriate data distribution. Simply introducing  downloading authority  to every peer and file will address the problems preliminarily: peers who have not enough authority won  t be able to get any peer  s information and the request will be rejected by tracker. But the advantage of BT that the more peers participate, the higher speed they obtain will be significantly weaken, because the wall of authority blocks unauthorized peers to participate in transmission When there is just a small group of peers transmitting data the overall performance of BT network will be reduced. So the efficiency must be sustained while the authority is introduced to prevent some peers from getting data. In other words, the amount of peers participating in transmission cannot drop distinctly, but the range of peers able to get data needs to be restricted. One straightforward and effective method is encryption. Peer is not able to obtain original data until it decrypted the data after getting a cipher key and downloading. Those peers who only play roles of couriers have no abilities to obtain or disseminate original data even the data is transferred by them, because decryption cannot be done without a cipher key III  D ESIGN AND I MPLEMENTATION OF A  S ECURE D ISTRIBUTING S CHEME FOR B IG D ATA  A  Overall Design Base d on BitTorrent For the purpose of enabling tracker, the server, to regulate the admittance of peers and the range of data spreading, protecting sensitive data without reducing the BT property  more participating peers bring more transmitting 83 83 83 


speed, an Identity Verification and Cipher System Distribution \(abbreviated, IVCSD\cheme will be proposed below. Peers will be authorized by the identity verification and data will pass through cipher system which consists of encryption algorithm and key distributing protocol during transmission  Figure 1  a Brief Frame of IVCSD Fig. 1 shows brief frame of distributing big data in IVCSD. Besides preserving and broadcasting information as original BT, tracker in IVCSD also verifies peers  identity and delivers keys that will be used by peers to decrypt downloaded data. Every peer is required to send identity information \(user name and password, or token\ to tracker before downloading or uploading data specified by a torrent file. Only if identity is authenticated, the peer is able to get a list of other peers  information, as well as decrypt-key, and then starts downloading or uploading data Notice there  re intermediaries in the data distributing network. They  re special peers, like  couriers  meaning that no original data will be obtained and only encrypted data will be transferred by them. It should be mentioned that these intermediaries are also authorized to admit the network, but just don  t have enough authorities to get specified data. Any peer may be an intermediary if tracker or some highauthority data centers notify it to be one, usually corresponding to a specified torrent This paper is focusing on secure issues of big data distribution, so the detail or scheme about how to make the  notification  work, which is not security consideration, will not be proposed. However, the distributing scheme of intermediaries will be implemen ted and tested. Here is a brief of ideal behaviors of an intermediary Suppose that peer A becomes an intermediary to transfer file F. It will at first download some pieces of F, which are encrypted before being uploaded. A isn  t able to decrypt them due to no access to decrypt-key, either to verify data integrity. Instead, these pieces will be stored in a map consisting of piece indices as keys and piece data as values When another peer, like B, requests a piece with the existing index, A will immediately retrieve the corresponding piece in the map and send it to B. The integrity of data will be the responsibility of original peer who encrypts data\d the target peer \(who decrypts data\. This distributing scheme suffices to implement and test IVCSD The Cipher System is the significant part to differentiate target peers and intermediaries, by two important functions 1\y generator creates a key for every new uploaded torrent; \(2\only returns key to peers whose request consists of peer  s public key and digital signature which can be used by cipher system to verify authentication of the public key Except intermediary, every peer will only upload data after encrypting them, or get original data after decrypting them with the requested key. Tracker will never send a key to intermediary due to the failure of identity verification Data will be encrypted by symmetric encryption algorithm and keys will be distributed by public-key cryptography. Using high-efficient algorithm \(e.g. stream cipher\o encrypt data helps to avoid huge time expense. It  s a compromise between security and efficiency. The details of key distribution will be discussed later The interaction between tracker and peers are shown in Fig. 2. As indicated, peers send identity information to tracker, obtain specified keys and lists of other peers and initiate connections to download data. On the other hand tracker preserves authority information of all peers and torrent files, makes sure that peers get original data only if they have the enough authority One detail should be mention here: tracker and peers both have their own key generator, but for different purposes Tracker  s generator is for generating key for uploaded torrent files, while peers are for generating pairs of private and public key, which are used in signature and sending authentic request to Cipher System on tracker Figure 2 Interaction between Tracker and Peers  Tracker Center of Data Uploader Itermediary Authorized  Illegal Peer Publish Torrent Encrypt and Send Send file key Downloader Receive and Decrypt Encrypt and Send Send Directly Request Reject Request Encrypt and Send  84 84 84 


B  Identity Verification Identity verification consists of peer filter \(validate the authority of peers\ and author ization \(manage and regulate the authority of peers and torrents\. The admittance of peers will be strictly controlled by filtering anonymous and unauthorized users out. Peers contact tracker with message that has identity information, e.g., username, password and token If tracker receive message that lacks of such information it rejects the request and blocks the requester out from peer pools. Users cannot enter the network arbitrarily without identity and malicious actions will be significantly reduced The detailed procedure is shown in Fig. 4. For presentation in this paper, a XML-format configuring file named  authority.xml  determines the authorities of legal peers  Announce  and  Upload  present requests of downloading files and uploading torrents, respectively. P and T are authority of peer and torrent, respectively. One example of authority configuring file is shown in Fig. 3 To explain, ip, username, psw_hash, authority and updated represents, respectively, IP address, username hashed password authority and last updating time of a peer  Figure 3  An example of configuring peer authority This configuring file is just an example and suffices to propose the idea. When it comes to realistic implementation data base or other more reliable structures should be used The configuration of authority should only exist in tracker meaning that none of peers have the access and only tracker administrator is allowed to exam and edit it As shown in Fig. 4, when tracker receives publish request the  publish  branch in Fig. 4\, the published torrent will be assigned with the highest auth ority, which will prevent any peer broadcasting data beyond its authority. Then administrators or authentic organization will determine the proper authority to this torrent and reset it. On the other hand when dealing with download or upload request \(the  announce  branch in Fig. 4\, tracker will compare the requester  s authority \(P in Fig. 4\ gotten from authority configuration with requested torrent  s authority \(T in Fig. 4 Only when the former authority is not lower than the latter one, a list of other peers  information will be responded back to requester. Otherwise, tracker will reject the downloading or uploading request and return a null list C  Cipher System As discussed before, intermediaries are needed to maintain the transmitting speed by participating into network increasing the number of peers who transfer a specified file They pass pieces of data fro m one peer to another without getting original data. Details of cryptographic procedure and key distribution will be demonstrated below 1  Encryption/Decryption Procedure Data is transmitted in the form of encrypted message rather than raw one in original BT. It will be implemented in two places: \(1\the uploader sends data after encrypting it; \(2 the receiver verifies the integrity and stores data after decrypting it  Figure 4  Procedure of Identity Verification on Tracker   peerAuthority peer ip>192.168.5.253</ip username>wyf1</username  psw_hash>945c7d0dcc876</psw_hash  authority>1</authority updated>1363261627977</updated peer peerAuthority Begin Tracker starts up Load configuring file authority.xml Receive HTTP Request Request Type Set the torrent authority to the highest level Publish Tracker obtains the authority of peer, P Announce Tracker obtains the authority of torrent, T P>=T Reject the request and response with a null list no Finish Responses with a list of peers who possess the file specified by torrent yes Administrator resets the authority of torrent Administrator resets the authority of peer  85 85 85 


    Figure 5  Procedure of Encryption/Decryption The main procedure is shown in Fig. 5 \(the steps different from original BT are written bold and italic\. The numbers in Fig. 5 indicate different steps, including: \(1\peer A requests to download; \(2\racker responses with a list; \(3 peer A initiates connection with peer B to obtain data; \(4 peer B encrypts data; \(5\ peer B transfers encrypted data to peer A; \(6\ peer A decrypts data Notice that intermediaries don  t execute step \(4\r \(6 They just transfer data from one peer to another because of lack of decrypt-key, acting almost the same behavior stated in original BT 2  Key Generation and Distribution Fig. 6 demonstrates the procedure of generating and distributing key. Notice that a new type of request \(called  getcipher  differentiated from  publish  and  announce   will be captured. Tracker retrieves requester  s \(a peer  s public key and digital signature, as well as identity information. After verifying the signature and identity and confirming the requester has enough authority to access the data, tracker will encrypt the corresponding data key with requester  s public key \(shown by RSAE function in Fig. 6 and send the encrypted key back to requester. When receiving such a response, it will decrypt the key with its own private key \(RSAD function in Fig. 6\. This scheme to distribute keys to peers should be safe as long as the security of RSA scheme holds IV  E XPERIMENT AND R ESULT A NALYSIS  To implement the scheme, an open-source Java BitTorrent API is modified and functions of IVCSD are fully achieved. Then the project is compiled on different platforms playing roles of tracker and peers. To simulate the real environment in experiment, the tracker server is running on 64-bits Linux system \(Ubuntu 12.10\ and all peers are running on 32-bits Windows 7 machines, just having slightly differences of CPUs and RAMs. The algorithms used to encrypt data and distribute key are RC4+ \(a modified version of RC4, one kind of stream cipher\ and RSA, respectively  Figure 6  Procedure of Generating and Distributing Key on Tracker The experiment will be separated into two parts: identity verification and cipher system, focusing on comparing behaviors on IVCSD with those on original BT demonstrating the functionality of IVCSD. For identity verification, creating torrent changing authority on server will be simulated. Then peers will try to download or upload  Tracker Downloader Peer 1 Uploader Peer 2 2 Return a list of peers 3 Request one block  1 Request bl oc k 4 Encrypt requested Block 6 Decrypte the Block   lock  5 Send encrypted Block     Begin  Request Type  New Torrent  publish  No  Generate a key to this torrent and store it in database  Yes  Pass Identity Verification  getcipher  no  Obtain the key of requested file, K  Use the peer s public key, P to encrypt file key, K E\(K P,K   Send E\(K   Peer decrypt the file key with its own private key S: K = RSAD\(E\(K   no yes  Return a list of peers  Finish    download  Pass Identity Verification  Pass Signature Verification  yes  yes  no  86 86 86 


 files by sending request to tracker, temporarily omitting the key distribution procedure. All authorized and unauthorized request will be processed by tracker and the responses can prove the functionality of controlling data distribution. When testing cipher system, how a peer generates its own key pairs public and private keys\and si gnature, obtains file-key from tracker and then uploads or downloads data correctly will be shown. At the same time, actions of intermediaries will also be implemented to demonstrate the protection of data After these experiments, examining the efficiency is necessary. The consumption of time in cipher system will be calculated and analyzed A  Identity Verification Experiment Identity verification participates into network when peers send HTTP requests to tracker. During the implementation differences of tracker behaviors between IVCSD and original BT are shown in Table I Fig. 7 shows differences of torrent information saved on tracker between original BT and IVCSD. To specify, torrents in IVCSD has the attribute  authority  which doesn  t exist in original BT By observing the HTTP request sent by peers, three new parameters come out   username = \(user name of peer   psw = \(password of peer   getToken = \(optional, value must be  y  when intending to get a token  Figure 7  Difference in torrent between original BT and IVCSD  TABLE I  T RACKER B EHAVIOURS OF O RIGINAL BT AND I DENTITY V ERIFICATION IN IVCSD Type of Request Original BT IVCSD publish  Only records and saves torrent files  1. Records and saves torrent 2  Assign the highest authority to torrent announce 1  Searches all peers that possess the file with torrent ID  2. Packages these peers into a list and sends it to requester 1. verifies the authority according to identity information provided by peers by comparing the authorities of torrent and requester Verification Passed Verification Failed 2. processes the same actions as original BT 2. notifies the requester and responses with a null list Tracker processes these parameters, treating them as identity information. To avoid repeated using of user names and passwords in request, tracker in IVCSD allows peers to replace them with a  token  It  s also produced by tracker and peers need to send request with three parameters  user name, password and  getToken  to get a token besides a list of other peers. During the valid time \(configured before starting tracker\, peers can use the returned token to pass verification without user name or password Rejecting and approving requests in tracker log are shown in Fig. 8 and Fig. 9, respectively The experimental procedure demonstrates the functionality of identity verification is executed in chronological sequence as Table II, in which less number indicates higher authority. Different responses by tracker are shown TABLE II  P ROCEDURE OF T ESTING I DENTITY V ERIFICATION  Event by Peers File Authority Peer Authority Response by Tracker P ublish Torrent 0 higher 3 Publish successfully Download rejected Requests downloading 0 higher 1 Rejected  Administrator changes authority a  4  No log Requests downloading 4 1 higher Allowed  Requests downloading 4 3 higher Allowed  Requests downloading 4 higher 5 Rejected  a. This event is not done by peers  Figure 8  Tracker rejects the downloading request from a peer  Figure 9  Tracker approves the downloading request of a peer 87 87 87 


First of all, the scheme strictly assigns the highest authority to a torrent when it  s published at the first time avoiding any unexpected distribution of sensitive data Administrator resets the authority after examining the files thereby restricts the range of peers able to get the data Secondly, the configuring authority file \(authority.xml in the presentation, maybe data base in realistic deployment setting authorities to all validated peers, is significant in identity verification. When any peer tries to contact tracker and requests information, this configuration allows tracker to access the authority level of requesting peers and issues proper responses, blocking unauthorized or malicious request. Therefore, the data and corresponding information will be invisible to peers who have not enough authority level What  s more, tracker log keeps track of all actions of torrents and peers, especially the unusual ones, such as low-authority requests or requests without identity information, during the whole experiment. The sources of these requests are correctly recorded in the log, allowing administrators to regularly inspect peers behaviors and data transmitting path B  Cipher System Experiment To test the accuracy of cipher system, mainly encryption and decryption, two videos, sizes of 3.82MB and 959MB, are transmitted in this experiment. Table III shows different transmissions between cipher system in IVCSD and original BT \(in either conditions, data is separated into pieces of identical size TABLE III  T RANSMISSIONS IN O RIGINAL BT AND C IPHER S YSTEM  Role Original BT IVCSD U ploader  1. Retrieves requested pieces in local files 2. Sends out the piece 2. Encrypts the piece with file key obtained from tracker  3. Sends out the en crypted piece Downloader 1. Receives piece   1.1. Decrypts the piece with file key 2. Processes Hash Verification 3. After vali dating the integrity, stores the piece in local files Intermediary  Not exists 1. Receives piece 2. Stores it in RAM or local files directly, acting like a cache  3. When being requested sends out corresponding piece  In the experiment, uploaded and downloaded data are all recorded in separated files. Comparing these records with original data, as shown in Fig. 10, the distinct differences demonstrate the effectiveness of encryption meaning that any receiver isn  t able to get original information before decrypting it. The comparison is done with a tool named  010 Editor  presented by Playboysen  Figure 10  Comparison of encrypted and original data  Figure 11  Procedure of testing accuracy of intermediary transfer The behavior of intermediary is tested by the procedure illustrated in Fig. 11. This procedure makes sure that the intermediary \(C in Fig. 11\ downloads data only from source peer \(A in Fig. 11\, and that target peer \(B in Fig 11\receives data only from intermediary C. Since intermediary C doesn t perform any decryption or integrity verification, if there were mi stakes during the transmission target peer B would not get the correct data. After executing this experiment many times, target peer B always receives correct data by decrypting and hash verifying it, proving the accuracy of intermediate transmission and cipher system. To confirm that, the videos are normally played on peer B  s machine To summary, cipher system experiment performs all necessary procedures, including encryption, uploading downloading and decryption, proving the functionality Comparison and verification of data makes sure the accuracy of these procedures. Also, behavior of  Begin Peer A shares data as a source peer Peer C requests data as an intermediary Peer A encrypts and sends data to Peer C Is the transfer completed no Shut down Peer A, make sure only Peer C active yes Peer B requests data as a target peer Peer C transfers data Peer B receives data and decrypts it Is the transfer completed? \(Hash verification no Compare requested data on Peer A and Peer B yes Finish  88 88 88 


 intermediary is implemented and tested, demonstrating that the intervention of intermediaries won  t affect the performance of cipher system. On the other hand, there  re no obvious reductions in transmitting speed during experiment due to the utility of RC4+ algorithm. The efficiency experiment confirms this conclusion will be presented later in Section D C  Key Generation and Distribution Experiment Generating and distributing keys are, strictly speaking parts of cipher system. Before any actual uploading or downloading actions, peers should obtain the key corresponding to data from tracker by sending  getcipher   request along with identity information, public key and signature. The detail has been covered in Part III In the experiment, key generator on tracker generates keys to new torrents, illustrated in Fig. 12. Also, peers use their own generator to produce key pairs \(public and private keys\ sign their identity information and send required message to tracker in order to obtain file key. The public key will be used in two ways on tracker: \(1\ to verify the signature; \(2\to encrypt the requested file key The identity information which will be signed is arbitrary only if it  s consistent with peer  s identity and has no ambiguities. In this experime nt, it will be produced as  usernam  passw o rd  i p   t o rr ent h ash    An example of parameters to request a file key recoded in experiment, is shown below \(instructions are shown in italic form and not actually contained in HTTP request   info_hash=%BE%86%A0%C7   torrent hash    getCipher=yes indicates to get file key    sign=PCGqKJ0fM4K   signature    key=MIGfMA0GCSqGSIb3DQEBAQUAA4GN ADCBiQKBgQCQO   peer  s public key  The signature and public key are encoded by Base64, a common algorithm to produce HTTP parameters Different from the original BT, peers who  re not intermediary will send the request containing these parameters before uploading or downloading to obtain file key, and then be able to pe rform data transmission through cipher system In the experiment, all the responses of file keys to peers are identical with the keys generated by tracker generator. Hence the encrypting transmission is also correct D  Efficiency Experiment and Analysis IVCSD provides protection to the network and data with cost of time consumed by identity verification procedure and cipher system. Since looking up authority levels of peers and torrents can be processed in parallel with existing functions of original BT \(such as looking up existing torrents or registering new peers\it  s reasonable to argue that new consumption of time occurs in cipher system, especially encryption, decryption and key generation. Therefore, in this section, cost of time will be tested and analyzed 1  Testing Procedure a  Encryption and Decryption  Figure 12  An example of generated key for a torrent A random byte array with the size of 16KB \(16384 bytes, identical to the size of a default piece in BT network is generated and encrypted by RC4+ algorithm. Run this program for 10000 rounds, 100 times per round, and record the cost of time in each round The decryption of stream cipher algorithm \(such as RC4+\ very similar to encryption, typically just reversing the procedure. It  s sure that the time consumed in decryption is nearly the same as that in encryption. So the result and analysis in uploader \(encryption\ will be similar to that in downloader \(decryption b  Key Generation Nowadays, a secure length of key can be 1024 bits 128 bytes\. Recording the time used by random-number generator to produce a 128-bytes array will be crucial to determine the cost of time in key generator. Again, the program will be run for 10000 rounds, 100 times per round 2  Result Analysis After running the programs described above, the averages of encrypting times and key generating times are 31.24 milliseconds per round and 0.11 milliseconds per round, respectively a  Analysis of Encryption and Decryption With simple calculation, it  s easy to have the conclusion that in every second, approximately 3200 arrays \(reciprocal of 0.0003124\an be encrypted, in other words, 50MB data \(multiply 3200 and 16KB As mechanism of parallel and pipeline is so common on today  s machines, the encrypting/decrypting procedure will not really delay any transmission only if the transmitting speed in BT network is no more than 50MB/s defined as  speed bound  here. What  s more, if parallel mechanism is performed in encryption, allowing uploader to encrypt data \(or downloader to decrypt data\ore than one array at a time, the speed bound should be multiplied by the number of parallels, illustrated in Fig. 13 as solid line. 50MB/s is quite acceptable because it s beyond the bandwidth in most of machines today, especially household computers and portable laptops which uses wide bands giving a max transmitting speed of 10MB/s 89 89 89 


 Even using a 2Gbps optical fiber, five parallel encryptions suffice to the requirement of max speed of 250MB/s. The max speeds are also illustrated in Fig. 13 as dot lines Since the speed bound line ascends linearly, it  s easy to determine, as the method above, how many parallels should be deployed to achieve the maximum transmitting speed of bandwidth  Figure 13  Speed bounds comparing to max transmitting speed b  Analysis of Key Generation Since key generation occurs only once for a new torrent file, it  s easy to determine that generating ten thousand keys consumes only 11 seconds \(multiply 0.11 milliseconds to 10,000\. So it  s safe to argue that the cost of time is negligible 3  Efficiency of IVCSD According to the results and analyses above transmission in IVCSD is as efficient as original BT meaning that adding these functions and schemes will not affect the overall performance in BT network V  C ONCLUSION  This paper proposes a scheme, Identity Verification and Cipher System Distribution \(IVCSD\, to address secure problems in distributing big data. Identity verification protects the network in the aspect of peer admittance and data spreading, by assigning authority to torrents and peers, blocking unauthorized behaviors and keeping track of peers  actions. Cipher system protects the transmission in the aspect of data security and transmitting efficiency. With data encryption, intermediaries are allowed to participate into network without getting original data, sustaining the advantage of BT protocol After implementing IVCSD in testing machines experiment is performed and the results are analyzed Functionality and efficiency is positively demonstrated in the experimental results. As a conclusion, IVCSD is a feasible scheme to distribute big data, with some compromises between security and complexity There  re still some imperfect conditions. \(1\lthough behavior of intermediaries are proposed, implemented and tested, details about how or who to trigger or stop these actions are still absent. \(2\ The code implementing IVCSD for experiment in this paper uses Java. It may have some effects on evaluating efficiency. Other languages may be used in realistic deployment to achieve better performance 3\ Restricted by facilities an d environments in lab, all experiments and evaluations are completed within the local area network, instead of wider one such as Internet This fact may result in inaccuracy of experimental results but according to the analyses in Part IV, the functionality won  t be affected and the efficiency will still be acceptable in future implementation A CKNOWLEDGMENT  This paper is supported by the Hi-tech Research and Development Program of China \(863 Program\ under Grant No. 2011AA01A205, the Open Research Fund of The Academy of Satellite Application under grant NO SSTC-YJS-01-03, the National Natural Science Foundation of China under Grant No. 61232009, the Doctoral Fund of Ministry of Education of China under Grant No. 20101102110018,Beijing Natural Science Foundation under Grant No. 4122042, the fund of the State Key Laboratory of Software Development Environment under Grant No. SKLSDE-2012ZX-06 R EFERENCES  1  The Coming Data Deluge, IEEE Spectrum, February 2011 2  The data deluge, www.economist.com/node/15579717, Feb 25 2010 3  Arun Chokkalingam, Firasath Riyaz. BitTorrent Protocol Specification V 1.0. CSI 5321, Dec 12 2004 4  Zhang, X., Liu, D., Chen, S., Zhang, Z., & Sandhu, R. \(2008 Towards digital rights protection in BitTorrent-like P2P systems Proc. 15th SPIE/ACM Multimedia Computing and Networking MMCN 5  Balfe, S., Lakhani, A. D., & Paterson, K. G. \(2005, August Trusted computing: Providing security for peer-to-peer networks In Peer-to-Peer Computing, 2005. P2P 2005. Fifth IEEE International Conference on \(pp. 117-124\. IEEE 6  So, Jung Ki. Defending against Malicious Behaviors in BitTorrent Systems. Diss. NORTH CAROLINA STATE UNIVERSITY 2012 7  Douceur, J. R. \(2002\. The sybil attack. In Peer-to-peer Systems pp. 251-260\ Springer Berlin Heidelberg 8  Jun, S., & Ahamad, M. \(2005, August\. Incentives in BitTorrent induce free riding. In Proceedings of the 2005 ACM SIGCOMM workshop on Economics of peer-to-peer systems \(pp. 116-121 ACM 9  Sit E, Morris R. Security considerations for peer-to-peer distributed hash tables[J   Pe e r t o Peer Sy ste ms 2 0 0 2  2 6 1 2 6 9     Kinateder M, Pearson S. A privacy-enhanced peer-to-peer reputation system[J E Co m m e r ce a n d W e b T e chno l o g i e s  2 0 0 3   206-215   Damiani E, di Vimercati D C, Paraboschi S, et al. A reputationbased approach for choosing reliable resources in peer-to-peer networks[C P r o ce e d ing s o f t h e 9t h A C M co nf e r e n ce o n  Computer and communications security. ACM, 2002: 207-216   Shamir, A. \(1985\. Identity-based cryptosystems and signature schemes. InAdvances in cryptology \(pp. 47-53\. Springer Berlin/Heidelberg   Cohen B. Incentives build robustness in BitTorrent[C  W o r ks ho p  on Economics of Peer-to-Peer systems. 2003, 6: 68-72 90 90 90 


Figure 15  3D model of the patio test site Figure 16  Model of the patio test site combining 2D map data with 3D model data a Largest explored area b Smallest explored area Figure 14  Maps built by a pair of 2D mapping robots Yellow indicates area seen by both robots Magenta indicates area seen by one robot and Cyan represents area seen by the other a 3D point cloud built of the patio environment Figure 16 shows a model built combining 2D map data with 3D model data A four-robot mission scenario experiment was conducted at the mock-cave test site This included two 2D mapping robots a 3D modeling robot and a science sampling robot There was no time limit on the run Figure 17 shows a 3D model of the tunnel at the mock cave Figure 18 shows a model built combining 2D map data with 3D model data 7 C ONCLUSIONS  F UTURE W ORK The multi-robot coordination framework presented in this paper has been demonstrated to work for planetary cave mission scenarios where robots must explore model and take science samples Toward that end two coordination strategies have been implemented centralized and distributed Further a core communication framework has been outlined to enable a distributed heterogenous team of robots to actively communicate with each other and the base station and provide an online map of the explored region An operator interface has been designed to give the scientist enhanced situational awareness collating and merging information from all the different robots Finally techniques have been developed for post processing data to build 2  3-D models of the world that give a more accurate description of the explored space Fifteen 2D mapping runs with 2 robots were conducted The average coverage over all runs was 67 of total explorable area Maps from multiple robots have been merged and combined with 3D models for two test sites Despite these encouraging results several aspects have been identi\002ed that can be enhanced Given the short mission durations and small team of robots in the experiments conducted a simple path-to-goal costing metric was suf\002cient To use this system for more complex exploration and sampling missions there is a need for learning-based costing metrics Additional costing parameters have already been identi\002ed and analyzed for future implementation over the course of this study One of the allocation mechanisms in this study was a distributed system however task generation remained centralized through the operator interface In an ideal system robots would have the capability to generate and auction tasks based on interesting features they encounter Lastly the N P complete scheduling problem was approximated during task generation However better results could potentially 10 


Figure 17  3D model of the tunnel in the mock cave test site Figure 18  Model of the mock cave test site combining 2D map data with 3D model data be obtained by releasing this responsibility to the individual robots A CKNOWLEDGMENTS The authors thank the NASA STTR program for funding this project They would also like to thank Paul Scerri and the rCommerceLab at Carnegie Mellon University for lending hardware and robots for this research R EFERENCES  J C W erk er  S M W elch S L Thompson B Sprungman V Hildreth-Werker and R D Frederick 223Extraterrestrial caves Science habitat and resources a niac phase i study\\224 NASA Innovative Advanced Concepts NIAC Tech Rep 2003  G Cushing T  T itus and E Maclennan 223Orbital obser vations of Martian cave-entrance candidates,\224 in First Intl Planetary Caves Workshop  Carlsbad NM 2011  J W  Ashle y  M S Robinson B R Ha wk e A K Boyd R V Wagner E J Speyerer H Hiesinger and C H van der Bogert 223Lunar caves in mare deposits imaged by the LROC narrow angle camera,\224 in First Intl Planetary Caves Workshop  Carlsbad NM 2011  J W  Ashle y  A K Bo yd H Hiesinger  M S Robinson T Tran C H van der Bogert and LROC Science Team 223Lunar pits Sublunarean voids and the nature of mare emplacement,\224 in LPSC  The Woodlands,TX 2011  S Dubo wsk y  K Iagnemma and P  J Boston 223Microbots for large-scale planetary surface and subsurface exploration niac phase i.\224 NASA Innovative Advanced Concepts NIAC Tech Rep 2006  S Dubo wsk y  J Plante and P  Boston 223Lo w cost micro exploration robots for search and rescue in rough terrain,\224 in IEEE International Workshop on Safety Security and Rescue Robotics Gaithersburg MD  2006  S B K esner  223Mobility feasibility study of fuel cell powered hopping robots for space exploration,\224 Master's thesis Massachusetts Institute of Technology 2007  M T ambe D Pynadath and N Chauv at 223Building dynamic agent organizations in cyberspace,\224 IEEE Internet Computing  vol 4 no 2 pp 65\22673 March 2000  W  Sheng Q Y ang J T an and N Xi 223Distrib uted multi-robot coordination in area exploration,\224 Robot Auton Syst  vol 54 no 12 pp 945\226955 Dec 2006  A v ailable http://dx.doi.or g/10.1016/j.robot 2006.06.003  B Bro wning J Bruce M Bo wling and M M V eloso 223Stp Skills tactics and plays for multi-robot control in adversarial environments,\224 IEEE Journal of Control and Systems Engineering  2004  B P  Gerk e y and M J Mataric 223 A formal analysis and taxonomy of task allocation in multi-robot systems,\224 The International Journal of Robotics Research  vol 23 no 9 pp 939\226954 September 2004  M K oes I Nourbakhsh and K Sycara 223Heterogeneous multirobot coordination with spatial and temporal constraints,\224 in Proceedings of the Twentieth National Conference on Arti\002cial Intelligence AAAI  AAAI Press June 2005 pp 1292\2261297  M K oes K Sycara and I Nourbakhsh 223 A constraint optimization framework for fractured robot teams,\224 in AAMAS 06 Proceedings of the 002fth international joint conference on Autonomous agents and multiagent sys11 


tems  New York NY USA ACM 2006 pp 491\226493  M B Dias B Ghanem and A Stentz 223Impro ving cost estimation in market-based coordination of a distributed sensing task.\224 in IROS  IEEE 2005 pp 3972\2263977  M B Dias B Bro wning M M V eloso and A Stentz 223Dynamic heterogeneous robot teams engaged in adversarial tasks,\224 Tech Rep CMU-RI-TR-05-14 2005 technical report CMU-RI-05-14  S Thrun W  Bur g ard and D F ox Probabilistic Robotics Intelligent Robotics and Autonomous Agents  The MIT Press 2005 ch 9 pp 222\226236  H Mora v ec and A E Elfes 223High resolution maps from wide angle sonar,\224 in Proceedings of the 1985 IEEE International Conference on Robotics and Automation  March 1985  M Yguel O A ycard and C Laugier  223Update polic y of dense maps Ef\002cient algorithms and sparse representation,\224 in Intl Conf on Field and Service Robotics  2007  J.-P  Laumond 223T rajectories for mobile robots with kinematic and environment constraints.\224 in Proceedings International Conference on Intelligent Autonomous Systems  1986 pp 346\226354  T  Kanungo D Mount N Netan yahu C Piatk o R Silverman and A Wu 223An ef\002cient k-means clustering algorithm analysis and implementation,\224 IEEE Transactions on Pattern Analysis and Machine Intelligence  vol 24 2002  D J Rosenkrantz R E Stearns and P  M Le wis 223 An analysis of several heuristics for the traveling salesman problem,\224 SIAM Journal on Computing  Sept 1977  P  Scerri A F arinelli S Okamoto and M T ambe 223T oken approach for role allocation in extreme teams analysis and experimental evaluation,\224 in Enabling Technologies Infrastructure for Collaborative Enterprises  2004  M B Dias D Goldber g and A T  Stentz 223Mark etbased multirobot coordination for complex space applications,\224 in The 7th International Symposium on Arti\002cial Intelligence Robotics and Automation in Space  May 2003  G Grisetti C Stachniss and W  Bur g ard 223Impro ving grid-based slam with rao-blackwellized particle 002lters by adaptive proposals and selective resampling,\224 in Proceedings of the IEEE International Conference on Robotics and Automation  2005  227\227 223Impro v ed techniques for grid mapping with raoblackwellized particle 002lters,\224 IEEE Transactions on Robotics  2006  A Geiger  P  Lenz and R Urtasun 223 Are we ready for autonomous driving the kitti vision benchmark suite,\224 in Computer Vision and Pattern Recognition CVPR  Providence USA June 2012  A N 250 uchter H Surmann K Lingemann J Hertzberg and S Thrun 2236d slam with an application to autonomous mine mapping,\224 in Proceedings of the IEEE International Conference on Robotics and Automation  2004 pp 1998\2262003  D Simon M Hebert and T  Kanade 223Real-time 3-d pose estimation using a high-speed range sensor,\224 in Proceedings of the IEEE International Conference on Robotics and Automation  1994 pp 2235\2262241 B IOGRAPHY  Ammar Husain received his B.S in Mechanical Engineering Robotics from the University of Illinois at Urbana-Champaign He is pursuing an M.S in Robotic Systems Development at Carnegie Mellon University He has previously worked on the guidance and control of autonomous aerial vehicles His research interests lie in the 002eld of perception-based planning Heather Jones received her B.S in Engineering and B.A in Computer Science from Swarthmore College in 2006 She analyzed operations for the Canadian robotic arm on the International Space Station while working at the NASA Johnson Space Center She is pursuing a PhD in Robotics at Carnegie Mellon University where she researches reconnaissance exploration and modeling of planetary caves Balajee Kannan received a B.E in Computer Science from the University of Madras and a B.E in Computer Engineering from the Sathyabama Institute of Science and technology He earned his PhD from the University of TennesseeKnoxville He served as a Project Scientist at Carnegie Mellon University and is currently working at GE as a Senior Cyber Physical Systems Architect Uland Wong received a B.S and M.S in Electrical and Computer Engineering and an M.S and PhD in Robotics all from Carnegie Mellon University He currently works at Carnegie Mellon as a Project Scientist His research lies at the intersection of physics-based vision and 002eld robotics Tiago Pimentel Tiago Pimentel is pursuing a B.E in Mechatronics at Universidade de Braslia Brazil As a summer scholar at Carnegie Mellon Universitys Robotics Institute he researched on multi-robots exploration His research interests lie in decision making and mobile robots Sarah Tang is currently a senior pursuing a B.S degree in Mechanical and Aerospace Engineering at Princeton University As a summer scholar at Carnegie Mellon University's Robotics Institute she researched multi-robot coordination Her research interests are in control and coordination for robot teams 12 


Shreyansh Daftry is pursuing a B.E in Electronics and Communication from Manipal Institute of Technology India As a summer scholar at Robotics Institute Carnegie Mellon University he researched on sensor fusion and 3D modeling of sub-surface planetary caves His research interests lie at the intersection of Field Robotics and Computer Vision Steven Huber received a B.S in Mechanical Engineering and an M.S in Robotics from Carnegie Mellon University He is curently Director of Structures and Mechanisms and Director of Business Development at Astrobotic Technology where he leads several NASA contracts William 223Red\224 L Whittaker received his B.S from Princeton University and his M.S and PhD from Carnegie Mellon University He is a University Professor and Director of the Field Robotics Center at Carnegie Mellon Red is a member of the National Academy of Engineering and a Fellow of the American Association for Arti\002cial Intelligence 13 


