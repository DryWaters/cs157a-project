  Improved Algorithms Research for Association Rule Based on Matrix  LUO XianWen, WANG WeiQing Information Management Department , Southwest University, Rongchang Campus, Chongqing 402460, China   Abstract  In association rules, although Apriori algorithm uses cut-technology when it generates item sets of candidates, it has to scan the entire database while scanning the transaction database each time. The scanning speed is very slow for its large amount of data. The improved Apriori algorithm based on matrix is improved from the Apriori algorithm and the matrix algorithm. Its basic idea is transforming the event database into matrix database so as to get the matrix item set 
of maximum item set. When finding the frequent k-item set from the frequent k-1item set, only its matrix set is found. So only the corresponding data are calculated to get frequent k item set. Therefore the improved Apriori algorithm 000 s computing time is very fast. Simulation data are used in experiments to compare the speeds of the improved Apriori algorithm and the Apriori algorithm. The results of the experiments prove the efficiency of improved Apriori algorithm Key words  Data mining; Apriori 002 Association rule, Market basket analysis 002 KDD Document code: A  TP311 clustering of web search 
results using link analysis TP301 000\003\000\003   1  Introduction Association rules mining finds some interesting associations or relations between the item sets among large amount of data. Apriori algorithm is an influential algorithm to mine association rules. Apriori applies iterative methods named Layer by Layer Search. To search frequent item sets fast Apriori applies Anti-monotonicity of frequent item sets to compress search space. DHP algorithm applies Hash technique and Reduction technique of event database to increase the efficiency of Apriori algorithm. TreeProjection algorithm generates frequent item sets by determining item sets in a lexicographical order. Association rules mine AprioriTid 
optimization algorithm, AprioriTid optimization algorithm optimizes \(1\event compression and item compression; \(2\ key words recognition of candidate item sets. The Association Rule Mining Algorithm on improved market basket analysis introduces interestingness weigh ting. The Association Mining Algorithm based on matrix constructs effective data matrix and effectively cut the data matrix to search frequent item sets which reduces a great amount of search time of higher-frequent item sets. The Mining Association Rulebased on equivalence relation generates candidate frequent item sets based on equivalence and equivalence class, which reduces the expense of the system. Apriori algorithm mentioned in the literature is 
the most influential algorithm to mine Boolean frequent item sets Apriori algorithm applies Reduction technique when it generates its candidate item sets, but it has to scan the entire database each time, which leads to the slow speed. Aiming at the disadvantages of Apriori algorithm and matrix algorithm and combining the advantages of the two algorithms, a new improved algorithm is proposed   1.1  Related Definition Definition 1 Events One transaction of commodity is an event. An event can be shown by a Boolean vector, that is, event I=[I 1 I 2 I n  is an Item set of n different items  
Definition 2 Event Database  D  The item set of Event Ti\(i=1,2,3,…,n in event database D event T can be shown as Ti, < I1, I2, I3 005\020 In 001  Ti is the event sign in it, one event has a unique sign in the database D  I1 I2 005\020 Ii 005\020 Im 001\031 I, 1 0010 i 0010 n 0010 m that is, every event T is an item set, then I T 002 Assume that A is an item set, event T includes A only when T A 002 001  Table 1 is a simplified event database D. T001 is the first 
recorded label in the database, the corresponding transactions of T001 include I1 002 I2 002 I5 The items in the record are listed in the order of the labels  Definition 3 Association Rules Association rules are a logical implication type like A=>B  In it  I A 003  000\003 I B 003 and 004  005 B A When the event with S  Support database D includes 
A 001 B the association rule is shown as A=>B 001  Definition 4 S  Support  001  Support\(A=>B\=P\(A 001 B\=S in it, S is Probability \(the percentage of the event including A 001 B in database D  Definition 5 C \( Confidence 001  Confidence A=>B\=P\(A|B \=Support\(A=>B\/Support\(A\=C that is, C is the percentage of the event including both A and B at the same time P \(B |A is conditional probability   
2010 International Conference on Intelligent Computing and Cognitive Informatics 978-0-7695-4014-6/10 $26.00 © 2010 IEEE DOI 10.1109/ICICCI.2010.55 415 


 Definition 6 Maximum item set P In an event database D, P is the maximum item set of Event Ti\(i=1,2,3 001\002 n that is   P= {Pm|m=1,2,3 001\002  and Pm 001\031 Ti  i=1,2,3 001\002 n  Definition 7 Matrix Library of an Event  Assume that the item set in the event database D is Ti\(i=1,2,3,…,m 002 and the maximum item set is P=[I1,I2, I3 005\020 In 002 assume that item a ij 002 1 0010 i 0010 m and 1 0010\000M\0010\000Q 002Å\000L\000Q\000\003\000W\000K\000H\000\003 000P\000D\000W\000U\000L\000[\000\003 A mxn 000\003 is 1 when event 0007\000L\000\003 000L\000Q\000F\000O\000X\000G\000H\000V\000\003 000,\000M 000\003\000L\000Q\000\003\000W\000K\000H\000\003\000P\000D\000[\000L\000P\000X\000P\000\003 000L\000W\000H\000P\000\003\000V\000H\000W\000\003\0003\000\017\000\003\0002\000W\000K\000H\000U\000Z\000L\000V\000H\000\003\000\023\000\017\000\003\000W\000K\000H\000Q\000\003\000P\000D\000W\000U\000L\000[\000\003 A mxn 000L\000V\000\003\000W\000K\000H\000\003\000P\000D\000W\000U\000L\000[\000\003 000O\000L\000E\000U\000D\000U\000\\\000\003\000R\000I\000\003\000W\000K\000H\000\003\000H\000Y\000H\000Q\000W\000\003\000G\000D\000W\000D\000E\000D\000V\000H\000\003\000'\000\021\000\003 0003\000L\000F\000W\000X\000U\000H\000\003\000\024\000\003\000L\000V\000\003\000W\000K\000H\000\003\000F\000R\000U\000U\000H\000V\000S\000R\000Q\000G\000L\000Q\000J\000\003\000P\000D\000W\000U\000L\000[\000\003\000O\000L\000E\000U\000D\000U\000\\\000\003 A 9x5  of the event database D in Table 1 Table 1 Event Database  Picture 1 Matrix A 9x5  000'\000H\000I\000L\000Q\000L\000W\000L\000R\000Q\000\003\000\033\000\003\0000\000D\000W\000\003\000R\000I\000\003\000,\000W\000H\000P\000V\000\003  000$\000V\000V\000X\000P\000H\000\003\000W\000K\000D\000W\000\003\000W\000K\000H\000\003\000H\000Y\000H\000Q\000W\000\003\000L\000W\000H\000P\000\003\000V\000H\000W\000\003\000L\000Q\000\003\000H\000Y\000H\000Q\000W\000\003\000G\000D\000W\000D\000E\000D\000V\000H\000\003\000'\000\003 000L\000V\000\003 Ti\(i=1,2,3,…,m 002 and the maximum item set P=[I1,I2, I3 005\020 In Assume that in the event Matrix library of database D the matrix is A mxn  then the corresponding BOOL data item set of item Ij 002 1 0010\000M\0010\000Q 002 in P in Matrix A mxn is the mat of Ij, Mat i is items in the mat  In picture 1, the mat of I2 is Mat\(I2\=\(111101111 Mat\(I2\=1 002 Mat\(I2\=0 001 v Definition 9 Moment of Delivery and Item Set Mat Assume that the event item set of event database D is Ti\(i=1,2,3,…,m the maximum item set is P=[I1,I2, I3 005\020 In  the event matrix library of event database D is A mxn then the mats of Ij 001 Ik 002 1 0010\000M\0010\000Q\002 Ik 002 1 0010\000N\0010\000Q 003 000M\001.\000N 002 in P are Mat\(Ij 001 Mat\(Ik\ Assume that i i i Ik Mat Ij Mat Ik Ij Mat          then the computing is moment of cross-operator Mat 002 Ij 002 Ik 002 is the mat of item set IjIk, Mat 002 Ij 002 Ik 002 i is an item  of the mat  In picture 1, the mat of item I2I5 is Mat\(I2 002 I5\=\(111101111 002 100000010 002  002 100000010 002  Mat\(I2 002 I5 2 0 002 Mat\(I2 002 I5 8 1 001   Related Theorem Theorem 1 Assume that the event item set of event database D is Ti\(i=1,2,3,…,m 002 and the maximum item set P=[I1,I2, I3 005\020 In  in the event Matrix library of event database D, the matrix is A mxn the mat of any item set 002 IjIk 002  in P is Mat 002 IjIk 002 002 then the S  Support item set 002 IjIk 002 is m Ik Ij Mat Ik Ij Support m i i          1 000    Proof: From definition 7, the event item set of event database D is Ti\(i=1,2,3,…,m then the event total in event database D is m  1 From definition 7 in event matrix library, item a ij 002 1 0010 i 0010 m  000D\000Q\000G\000\003 1 0010\000M\0010\000Q 002 in matrix Amm 000\003\000L\000V\000\003\000\024\000\003\000Z\000K\000H\000Q\000\003\000H\000Y\000H\000Q\000W\000\003 0007\000L\000\003 000L\000Q\000\003 000G\000D\000W\000D\000E\000D\000V\000H\000\003\000'\000\003\000L\000Q\000F\000O\000X\000G\000H\000V\000\003\000L\000W\000H\000P\000\003 000,\000M\000\003\000L\000Q\000\003 000W\000K\000H\000\003\000P\000D\000[\000L\000P\000X\000P\000\003\000L\000W\000H\000P\000\003\000V\000H\000W\000\003\0003\000\017\000\003 000R\000W\000K\000H\000U\000Z\000L\000V\000H\000\003\000\023\000\021\000\003\0007\000K\000H\000Q\000\003\000W\000K\000H\000\003\000W\000R\000W\000D\000O\000\003\000R\000I\000\003\000H\000Y\000H\000Q\000W\000\003 Ij is 000  m i ij a 1   2  0007\000K\000H\000\003\000W\000R\000W\000D\000O\000\003\000R\000I\000\003\000H\000Y\000H\000Q\000W 000\003 Ik is 000  m i ik a 1   3   From 2\ and \(3 000W\000K\000H\000\003 000W\000R\000W\000D\000O\000\003 000R\000I\000\003 000\003 000L\000W\000H\000P\000\003 000V\000H\000W\000\003 IjIk is  000  m i ik ij a a 0   002 4 002   From definition 8 002 Mat 002 Ij 002  000  m i ij a 1 5 then Mat 002 Ik 002  000  m i ik a 1 6  From definition 9 i i m i m i ik ij m i Ik Mat Ij Mat a a Ik Ij Mat          1 0 1 000 000 000       000\003 7 From 002 2 002 7\ total of item set IjIk of item Ij and item Ik are Mat 002 Ij 002 001 Mat 002 Ik 002 001 Mat 002 Ij 002 Ik 002  002 8 002  From 002Ä\002Í\002 001 002 7 002 and definition 4 m Ik Ij Mat Ik Ij Support m i i          1 000    Example: From 1.1, the event number of event database D in picture 1 is 9, the mat of item set I2I5 is Mat\(I2 002 I5\=\(111101111 002 100000010 002  002 100000010 002 002 then the total of the item set I2I5 is d 2     9 1  000  i i Ik Ij Mat 002 so the S  Support  9  2    5  2    5  2  1   000  m I I Mat I I Support m i i 001   1.4 Principle of the Algorithm  Apriori algorithm applies Reduction technique when it 1 1 0 0 1 0 1 0 1 0 0 1 1 0 0 1 1 0 1 0 1 0 1 0 0 0 1 1 0 0 1 1 0 0 0 1 1 1 0 1 1 1 1 0 0 
416 


   generates its candidate item sets, but it has to scan the entire database each time, which leads to the slow speed. The improved Apriori algorithm based on matrix is improved from the Apriori algorithm. Its basic idea is transforming event database into event matrix library A, finds the maximum item set P while transforming , then finds items in the maximum item set P and the mat of the item set, then finds its S  Support  last all the frequent item sets are found. In this way, scanning the database one time results in frequent item sets directly without the process of finding candidate item sets in Apriori algorithm. Therefore the data amount to be scanned is small and the speed is very fast. In an event database D with m data records, its any event Tk = [ Ik1 , Ik2, , Ik3 000\000 Ikm 002 k=1,2,…,m 002 then Apriori-sort algorithm is dealt with in the following 4 steps  1\ maximum item set: scan all of the event database D find the maximum item set P in event item set Ti\(i=1,2,3 001\002 n that is P= {Pm|m=1,2,3 001\002  and Pm 001\031 Ti  i=1,2,3 001\002 n 000\003 000\025\000\014 Find matrix library A mxn 002 Assume that the event item set in event database D is Ti\(i=1,2,3,…,m 002 and the maximum item set in D is P=[I1,I2, I3 000\000 In 002 Assume that in matrix A mxn item a ij 002 1 0010 i 0010 m  000D\000Q\000G\000\003 1 0010\000M\0010\000Q 002Åind Mat\(Ij,Ik,Id\f any item set IjIkId: Assume that the event item set in event database D is P=[I1,I2, I3 000\000 In and the maximum item set in D is P=[I1,I2, I3 000\000 In 002 the matrix of event matrix library in event database D is A mxn the mat of item set IjIk is Mat\(Ij,Ik\ mat of item Id is Mat\(Id 002 then the mat of item set IjIkId is i i i Id Mat Ik Ij Mat Id Ik Ij Mat            001  4\ Find frequent item sets: From Mat\(Ij,Ik,Id\ of item set IjIkId and Theorem 1, find its S  Support  m Id Ik Ij Mat Id Ik Ij Support m i i            1 000   002 if its S  Support ss than its minimum S  Support en the item set is frequent item set, otherwise delete the non-frequent item set 2. The improved Apriori algorithm based on Matrix    The basic principle of the improved Apriori algorithm based on Matrix is finding the mat of event database. In an event database D with m data records, its any event Tk = [ Ik1 Ik2, , Ik3 000\000 Ikn 002 k=1,2,…,m 002 then the Apriori-sort algorithm is shown as follows    000\003 000\024\000\014\000\003 MaxItemSet\(D,P find the maximum item set P in event database D 2 SwapJuzhen\(D,P,A from the maximum item P, transform transaction database D into the corresponding matrix library A 3 for\(i=0;i<n;i n is the item number of the maximum item set   c1[i  0 002  S  Support an item of initialization is 0 for\(j=0;j<m;j m is the item number of the maximum database c1[i  c1  i   A 002 ij 002 find S  Support f an item if \(c1[i minsup If S  Support an item is more than or equal to the minimum S  Support n the item set is frequent item set l1=l 000\024\001$\000 c1[i 000`\000\022 000\022\000\017\000\003\000D\000G\000G\000\003\000D\000\003\000I\000U\000H\000T\000X\000H\000Q\000W\000\003\000L\000W\000H\000P\000\003\000V\000H\000W\000\003\000\003 003\031\000\022\000\022\000\003\000J\000H\000W\000\003\000D\000\003\000I\000U\000H\000T\000X\000H\000Q\000W\000\003\000L\000W\000H\000P  4 002 while\(lk-1!=null As long as frequent item k-1 is not empty keep finding frequent k item set  JuzhenGen\(lk-1,A,minsump from frequent k-1item set get frequent k item  Function SwapJuzhen\(D,P,A in the algorithm are as follows procedure  SwapJuzhen\(D,P,A  for\(i=0;i<m;i  m is the record number of the maximum database    for\(j=0;j<n;j++\// n is the item number of the maximum item set  003\027   if \(I 000N\001\031\0003\002Ä\000M\002Å\000\014 If item Ik is the j item  of the maximum item set  A\(ij 002     the value of the matrix is 1 else otherwise A\(ij 002     the value of the matrix is 0 003\031\000\003 003\031\000\022\000\022\000W\000U\000D\000Q\000V\000I\000R\000U\000P\000\003\000G\000D\000W\000D\000E\000D\000V\000H\000\003\000'\000\003\000L\000Q\000W\000R\000\003\000P\000D\000W\000U\000L\000[\000\003\000O\000L\000E\000U\000D\000U\000\\\000\003\000$\000\003\000\003\000\003 Function JuzhenGen\(L k-1 A,minsump in the algorithm are as follows 000\003 procedure  JuzhenGen\(L k-1 A,minsump for each I 000\024\001\031\000 000N\000\020\000\024 000\036\000\022\000\022\000O\000\024\000\003 000L\000V\000\003\000D\000Q\000\003\000L\000W\000H\000P\000\003\000V\000H\000W\000\003\000L\000Q\000\003\000I\000U\000H\000T\000X\000H\000Q\000W\000\003 000N\000\020\000\024 000\003\000L\000W\000H\000P\000\003 000V\000H\000W\000\003\000\003  for each I2 001\031\000 000N\000\020\000\024 000\036\000\022\000\022\000O\000\025 000\003\000L\000V\000\003\000D\000Q\000R\000W\000K\000H\000U\000\003\000L\000W\000H\000P\000\003\000V\000H\000W\000\003\000L\000Q\000\003\000I\000U\000H\000T\000X\000H\000Q\000W\000\003 000N\000\020\000\024 000\003 000L\000W\000H\000P\000\003\000V\000H\000W\000\003\000\003\000\003   if\(I1[1  I2  1 000@\001 I1[2  I2  2 000@\001!\001\002\001 I1[k-2  I2  k 2 000@\001 I1[k-1 000@\001 I2[kupport  000R\000I\000\003 an item of initialization 000\003\000L\000V\000\003\000\023\000\003 000I\000R\000U i=0;i<m;i  Mat\(I1[1 001 I1[2 001  001 I1[k-2 001 I1[k-1 001 I2[k-1  i  Mat\(I1[1 001 I1[2 001  001 I1[k-2 001 I1[k-1  i Mat\(I2[k-1  i  form k item set 
417 


 Cl=cl+ Mat\(I1[1 001 I1[2 001  001 I1[k-2 001 I1[k-1 001 I2[k-1  i  find S  Support f k item set  If \(cl>=minsup  S  Support more than or equal to the minimum S  Support   I1=I1 001 I2[k-1  get frequent k item set Lk=L 000N\001$\000^\000,\000\024\000 000\036\000\022\000\022\000D\000G\000G\000\003\000I\000U\000H\000T\000X\000H\000Q\000W\000\003\000L\000W\000H\000P\000\003\000V\000H\000W\000\003\000W\000R\000\003 000N 000\003\000L\000W\000H\000P\000\003\000V\000H\000W\000\003 003\031\000\003 003\031\000\003  3  Simulation Experiment and Analysis Qualitative analysis of complexity of time: The improved Apriori algorithm based on matrix scans the database D once without finding candidate item sets when searching frequent item sets. Therefore the improved Apriori algorithm based on matrix computes much faster than the traditional one does  To prove correctness and effectiveness of the improved Apriori algorithm based on matrix, about 500-5000 sample data are chosen \(the sample data document is standard simulation datasets on association rules provided by the Almaden Center of IBM Company\, under the same hardware configuration, the work efficiencies of Apriori algorithm and the improved Apriori algorithm based on matrix are tested 10 times. In these tests, the computing time of the two algorithms is compared under the same software and hardware configuration, that is, both with the hardware of Intel\(R\ Pentium\(K\ 2.80GHZ CPU 001 1GB memory 001 80GB and Windows XP sp2 operating system. The authors find that the mined results of the two algorithms are the same in all the computing of the simulation data, but the computing time of the improved Apriori algorithm based on matrix is far less than that of Apriori algorithm. The results of the experiments are shown in table 2 and picture2  Table 2 Computing time of the two algorithms  0005\000H\000F\000R\000U\000G\000\003 000Q\000X\000P\000E\000H\000U\000\003 Apriori Computing time 002Ä\000P\000V\002 Improved Apriori Computing time 002Ä\000P\000V\002 000\003 000\030\000\023\000\023\000\003 000\024\000\032\000\033\000\032 000\026\000\030\000\003 000\024\000\023\000\023\000\023\000\003 000\033\000\024\000\033\000\032 000\024\000\023\000\033\000\003 000\024\000\030\000\023\000\023\000\003 000\027\000\027\000\027\000\027\000\027 000\024\000\032\000\033\000\003 000\025\000\023\000\023\000\023\000\003 000\027\000\031\000\025\000\033\000\033 000\025\000\024\000\027\000\003 000\025\000\030\000\023\000\023\000\003 000\034\000\032\000\027\000\031\000\032 000\025\000\034\000\025\000\003 000\026\000\023\000\023\000\023\000\003 000\024\000\034\000\034\000\025\000\030\000\026 000\027\000\023\000\032\000\003 000\026\000\030\000\023\000\023\000\003 000\025\000\025\000\031\000\030\000\030\000\033 000\027\000\031\000\032\000\003 000\027\000\023\000\023\000\023\000\003 000\026\000\024\000\023\000\026\000\032\000\034 000\030\000\031\000\034\000\003 000\027\000\030\000\023\000\023\000\003 000\024\000\030\000\030\000\025\000\027\000\026 000\027\000\032\000\023\000\003 000\030\000\023\000\023\000\023\000\003 000\025\000\023\000\033\000\031\000\033\000\030 000\030\000\032\000\025\000\003 000\023 000\030\000\023\000\023\000\023\000\023 000\024\000\023\000\023\000\023\000\023\000\023 000\024\000\030\000\023\000\023\000\023\000\023 000\025\000\023\000\023\000\023\000\023\000\023 000\025\000\030\000\023\000\023\000\023\000\023 000\026\000\023\000\023\000\023\000\023\000\023 000\026\000\030\000\023\000\023\000\023\000\023 000\024\000\025\000\026\000\027\000\030\000\031\000\032\000\033\000\034\000\024\000\023 000$\000S\000U\000L\000R\000U\000L1k L\011\000$\000S\000U\000L\000R\000U\000L1k   Picture 2 is the curve of the change of computing time of the two algorithms with the change of event amount when the tested record number is 500-5000 The abscissa is the event data amount in event database, the ordinate is the computing time. From this picture, the computing time of the two algorithms becomes longer with the increase of the event data amount, but the computing time of the improved Apriori algorithm does not go up so fast, and the computing time of the improved Apriori algorithm based on matrix is far less than that of Apriori algorithm  4  Conclusion Mining the association rules are of great practical value, it is applied widely in the field of data mining Because of the large scale of event database mined, the working efficiency of mining algorithm of association rules becomes extremely important. The authors have made a deep study on Apriori algorithm and design an improved Apriori algorithm based on matrix. This algorithm only scans the event database once, then transforms an event database into event matrix library shown in binary data and mines the matrix library. The experiments show: the efficiency of mining time of the improved Apriori algorithm based on matrix is higher. At the same time, the improved Apriori algorithm based on matrix can be applied on any occasion when Apriori algorithm is applicable  References 1 Jia Juan Qi Wenfa Hou Xiaohui Chen Kunqiu  Irregular Layout Model Based Region Dividing and Partition Sorting Algorithms J  Computer Engineering and Applications, 2003, 39\(30\: 51-53,61 2  G a t o s B Man t zari s S, Pera n t o n i s S, et al A u t o mat i c Pag e A n al y s i s o f a Digital Library from Newspaper Archives I nte r n a t io na l Jo ur na l o f D i g ita l  Libraries, 2000, 3\(1\: 77-84 3   Ai e llo M  M o n z C  Tod o r a n L  e t a l  Doc u m e nt Und e r s t a n d i n g f o r  aBroad Class of Documents[J  I nte r n a tio na l Jo ur na l o n D o c u m e ntA na l y s i s  and Recognition, 2002, 5\(1\: 1-16 4 P E NG Yip u  XI ONG Y ongjun. Study on Optimization of AprioriTid Algorithm for Mining Association Rules [J  C o m p u t er Engineering,2006,32\(5\55-57 5  W AN G D e x ing H U X u e g ang LI U X i ao-ping  W AN G H a o   Association Rule Mining Algorithm on Improved Market Basket 
418 


   Analysis [J   J ournal of C hongqing U n iv ers i t y N at ural Sc ienc e Edit ion    2006,29\(4\105-141 6  W AN G H ong-m i ng SH EN X i a-j i ong LI Guo-y an Z AN G Guo-qing   An Association Mining Matrix Algorithm Based on Equivalence Class J  C o m p u t er Engineering 2006 32 2 45-47 7 W ang Yan   Algorit hm R e s ear c h  f o r M i ning A s s o c i at ion R u le Ba s e d  on Equivalence RelationJ  C o m p ut er Engineering and Applic at ion s   Computer Engineering and Applications,2006\(8\187-189   RASKES H AG RA W A L T O M A SZ I M I E L INS K I, AR U N  SWA2MI. MiningAssociatio n Rules between Sets of Items in LargeDatabases [ Z  In  P r o c o f  ACM S I G M OD Co n f eren ce  onManagement of Data, Washington DC, 1993. 207 - 216  Contact information of the author Post code: 402460 Address: Luo xianwen, Information management department rongchang campus, Southwest University Rongchang, Chongqing Email xianwenluo@tom.com 002 xianwenl@swu.edu.cn Tele: 023-46751463  13983636465   
419 


 TABLE VIII  T EMPORAL R ELATION RULES FOR THE SECOND FIVE AD LS  SUPP   0.1   Activity Cluster Start Time \(hh:mm 022>\010 010 015F\010 010 000–\000 010 010 015E\010 010 022  Duration \(hh:mm 022>\010 010 015F\010 010 000–\000 010 010 015E\010 010 022  Next Activity Conf 6 Meal Preparation 1 11:59 – 14  2:51 – 3  Eating 0.69 Meal Preparation 0.14 2 07:19 10 0:24 0 Eating 0.55 3 17:38 – 21  0:04 – 0  Eating 0.64 Personal Hygiene 0.25 7 Personal Hygiene 1 06:06 – 11   0 01 0  02  Personal Hygiene 0.50 Meal Preparation 0.24 Leave Home 0.13 2 13:38 – 17   0 05 0  13  Leave Home 0.53 Personal Hygiene 0.21 3 19:23 – 22   0 04 0  16  Personal Hygiene 0.24 Sleeping Not in Bed 0.24 Meal Preparation 0.22 8 Sleeping in Bed 1 13:59 – 22  0:37 – 1  Personal Hygiene 0.60 Meal Preparation 0.40 2 01:02 – 03  4:13 – 6  Bed-Toilet Transition 0.94 3 05:22 – 08  2:22 – 3  Personal Hygiene 0.78 Bed-Toilet Transition 0.22 9 Sleeping Not in Bed 1 20:29 – 23   1 46 2  34  Bed-Toilet Transition 0.50 Personal Hygiene 0.16 Sleeping Not in bed 0.14 2 00:33 – 02   0 32 1  18  Bed-Toilet Transition 1.00 3 13:42 – 18   3 11 4  23  Personal Hygiene 0.59 Meal Preparation 0.19 10 Taking Medication 1 08:37 10 0:02 0 Eating 0.90 2 06:32 – 09  0:06 – 0  Eating 0.81 Meal Preparation 0.11 3 18:56 – 22  0:02 – 0  Personal Hygiene 0.50 Sleeping Not in Bed 0.25 Eating 0.25  I  C ONCLUSION  In this paper, we presented DTFRA for discovering temporal features and relations of activity patterns. Our algorithm is able to discover features and relations, such as the order of the activities, their usual start times and durations by using rule mining and clustering techniques. These discoveries can be used in many applications, such as developing activity reminder and anomaly detection systems, as well as designing activity-aware wireless sensor networks A CKNOWLEDGMENT  The authors would like to thank Robert Bosch LLC for making available the activity datasets and apartment layouts R EFERENCES  1  B. Reisberg, S. Finkel, J. Overall, N. Schmidt-Gollas, S. Kanowski, H Lehfeld, F. Hulla, S. G. Sclan, H.-U. Wilms, K. Heininger, I Hindmarch, M. Stemmler, L. Poon, A. Kluger, C. Cooler, M. Bergener L. Hugonot-Diener, P. H. Robert, and H. Erzigkeit, "The Alzheimer’s disease activities of daily living international scale", International Psychogeriatrics, vol. 13, no. 2, pp. 163-181, 2001 2  M. Philipose, K. Fishkin, M. Perkowitz, D. Patterson, D. Fox, H. Kautz and D. Hahnel, “Inferring activities from interactions with objects IEEE Pervasive Computing, vol. 3, no. 4, pp. 50–57, 2004 3  L. Liao, D. Fox, and H. Kautz, “Location-based activity recognition using relational markov networks,” in Proceedings of the International Joint Conference on Artificial Intelligence, pp. 773–778, 2005 4  J. Yang, B. N. Schilit, and D. W. McDonald, “Activity recognition for the digital home,” Computer, vol. 41, no. 4, pp. 102–104, 2008  
1074 
1074 


5  P. Rashidi and D. J. Cook, “Keeping the resident in the loop: Adapting the smart home to the user”, IEEE Transactions on Systems, Man. and Cybernetics journal, Part A, vol. 39, no. 5, pp. 949–959, Sep. 2009 6  T. Gu, Z. Wu, X. Tao, H. Pung, and J. Lu, “epsicar: An emerging patterns based approach to sequential, interleaved and concurrent activity recognition.” in Proceedings of the IEEE International Conference on Pervasive Computing and Communication, 2009 7  N. A. Campbell, ‘’Mixture models and atypical values’’. Math. Geol vol. 16, pp. 465-477, 1984 8  J. A. Hartigan and M. A. Wong, "Algorithm AS 136: A K-Means Clustering Algorithm", Journal of the Royal Statistical Society, Series C Applied Statistics\ vol. 28, no 1, pp. 100–108, 1979 9  V. Chandola, A. Banerjee, and V. Kumar, “Anomaly detection: A survey”, ACM Comput. Surv, vol. 41,  no. 3, pp. 1-58, Jul. 2009   R. Agrawal, T. Imielinski, and A. Swami, "Mining Associations between Sets of Items in Large Databases", ACM SIGMOD Int'l Conf. on Management of Data, Washington D.C., May 1993   Y. Li, P. Ning, X. S. Wang, and S. Jajodia, "Discovering CalendarBased Temporal Association Rules," Data & Knowledge Engineering vol 44, no. 2, pp. 193-218, 2003   B. Gottfried, H. W. Guesgen, and S. Hubner, “Spatiotemporal reasoning for smart homes”, in Designing Smart Homes, The Role of Artificial Intelligence, pp. 16–34, Springer, 2006   M. Galushka, D. Patterson, and N. Rooney, “Temporal data mining for smart homes”, Designing Smart Homes. The Role of Artificial Intelligence, Springer, pp. 85–108, 2006   V. R. Jakkula and D. J. Cook, ‘Using temporal relations in smart environment data for activity prediction”, in Proceedings of the 24th International Conference on Machine Learning, 2007   J. F. Allen, ‘’Time and time again: The many ways to represent time International Journal. of Intelligent Systems, vol. 6, no. 4, pp. 341-356 July 1991   J. F. Allen and G. Ferguson, “Actions and events in interval temporal logic”, Journal of Logic and Computation, vol. 4, pp. 531–579, 1994   
1075 
1075 


026\027\201\231\026\027\245\202\231\027\233\235\235\301<\027 255\233\210\256 023\027 252\031\021\031 031\020\031\022\034\017\026\027 f\231\021\027 226\037\037\023\032\023\017\021\022\027 231\030{\024\016\023\022\034\\\027 037\024\016\027 205\023\021\023\021{\027 231##\024\032\023\031\022\023\024\021\027 030\017#\027 023\021\027 251\031\016{\017\027 212\031\022\031 232\024\032\034\017\021\027 223\023 016\023\024\016\023\027 037\024\016\027 231##\024\032\023\031\022\023\024\021\027 030\017\027 205\023\021\023\021{\027 226\037\037\023\032\023\017\021\032\035\025\026\027 226!\016\024 231#\034\024  255\264\256 016\023#\034\021\031\021\027\202\016\023 222\222<\027 202 016\023\021{\017\016\246\303\017\016\030\031{\026\027\227\017\016\030\023\021\026\027\273\017\016\\\031\021\035\027\217\206\207\233\207\211<\027 255\233\301\256 031\\\031 031\\\031 205<\027 241\031 031 031\021\022\026\027=\031 031\021\022\027 031#\017\025\026\027 263\016\024\032\017\017\033\023\021{\027 024\037\027 022\034\017\027 206\233 022 027 303\251\212\227\027 201\024\021\037\017\016\017\021\032\017\026\027 273\024\017\022\034\031\030#\026\027\227<\027\031\021\033\027\303\031\021\027\033\017\021\027\227!##\032\034\017\026\027\232<\027 233\235\235\235<\027\231\027\263\016\023\024\016\023\027\303\017\016#!#\027\231\027 263\024#\022\017\016\023\024\016\023\027 023\030\022\017\016\023\021{\027 024\037\027 231##\024\032\023\031\022\023\024\021\027 030\017#<\027 253\021\027 263\016\024\032\017\017\033\023\021{<\027 024\037\027 022\034\017\027 233\235\235\235\026\027 231\201\205\027 202\253\273\205\240\212\027 261\024\016 034\017\023\224\031\033\017\034\026\027 f\231\030{\024\016\023\022\034\\#\027\037\024\016\027\231##\024\032\023\031\022\023\024\021\027=!\030\017\027\205\023\021\023\021{\027 023\026\027 202\034\031 022 027 255\302\256 022\023\\\023\224\017\033\027 231##\024\032\023\031\022\023\024\021\027=!\030\017#\234\027\202\032\034\017\\\017\026\027\231\030{\024\016\023\022\034\\#\026\027\031\021\033\027\303\023#!\031\030\023\224\031\022\023\024\021<\027\253\021\027 263\016\024\032\017\017\033\023\021{<\027 024\037\027 022\034\017\027 233\235\235\210\027 231\201\205\027 246\027 202\253\273\205\240\212\027 253\021\022\017\016\021\031\022\023\024\021\031\030\027 201\024\021\037\017\016\017\021\032\017\027\024\021\027\022\034\017\027\205\031\021\031{\017\\\017\021\022\027\024\037\027\212\031\022\031\026\027 273<\253<\027 261\017 034\024 205\031#\031\031 024\026\027 205\031#\031\037!\\\023\027 223\031{\023\036\031\016\031\026\027 311\202 031#\017\025\026\027\027\205\240\212\027 206\207\207\026\027\212\031\030\030\031#\026\027|\242\027 245\202\231<\027 255\233\222\256 030\017\027\231\030{\024\016\023\022\034\\#\027\037\024\016\027\016\017\254!\017\021\022\027\253\022\017\\\027\202\017\022\027 205\023\021\023\021{\025\026\027\202 202<\263\016\031 027 227\031\036\031\026\027 212\017\020\031\020\016\031\022\027 202\034\031\034\026\027 f|!\016 027 212\023#\032\024\020\017\016\023\021{\027 202\023{\021\023\037\023\032\031\021\022\027 263\031\022\022\017\016\021#<\027 205\031\032\034\023\021\017\027 251\017\031\016\021\023\021{\027 210\302\217\233\211\234\233 027\231\027\273\017\021\017\016\031\030\027\202!\016\020\017\035\027 031\021\033\027\201\024 003 003 003 003 003 003 003 003 003 003 003 003 003 003 027\264\222\206\246\264\264\264\026\027\241!\016\023\032\034\026\027\202\036\023\224\017\016\030\031\021\033\026\027\233\235\235\262<\027\027 027 255\301\256 031#\034\026\027 205<\202<\263\031\016\020\031\022\034\023\027 026\f\231\021\027 226\021\034\031\021\032\017\033\027 202\032\031\030\023\021{\027 231 263\016\017\033\017\017 027 024\021\027 017#\017\031\016\032\034\027 253##!\017#\027 023\021\027 212\031\022\031\027\205\023\021\023\021{\027\031\021\033\027\252\021\024\036\030\017\033{\017\027\212\023#\032\024\020\017\016\035\026\027 016\023#\034\021\031\021\027\202\016\023 024<\206\027\217\206\207\233\207\211\026\027 017\031\021\027 232\024!\016\021\031\030\027 024\037\027\202\032\023\017\021\022\023\037\023\032\027=\017#\017\031\016\032\034\026\027\253\202\202 035\031\\\031\026\027|<\027 233\235\235\210<\027 212\031\022\031\027 205\023\021\023\021{\027 023\021{\027 036\024\246\212\023\\\017\021#\023\024\021\031\030\027 240 026\027 245\030\016\023\032\034\027 273!\021\022\224\017\016\026\027 273\034\024\030\031\\\016\017\224\031\027 027 202\031\020\031#\017\016\017\026\027 226\033\036\031\016\033\027 240\\\023\017\032\023\021 245\033\024\\\027 237\031\023\032\034\016\024\017\021\026\027 f\231 017\017\033\246 030\023\017\033\027 227\024\024\030\017\031\021\027 027 231\030{\017 206\235\210<\027 231\231\231\253\027 263\016\017##\026\027 205\017\021\030\024\027\263\031\016 005\005 005\005 005\005 005\005 002\002 005\005 027\233\264\262\207\246\206\233\210\242\027\303\024\030<\222\235\027 016\031\025\026\027 233\235\302\235\026\027 227\031\021 026\027|\034\031\023\030\031\021\033 027 255\210\256 027 202\034\017\021\024\035\026\027 232\031\035\031\021\022\027 027 223\031\016\023#\022\031\026\027 202<\027 202!\033\031\016#\034\031\021\026\027 273\031!\016\031\020\027 227\034\031\030\024\022\023\031\026\027 205\031\035\031\021 005 003 201\034\016\023#\022\023\031\021\027\227\024\016{\017\030\022\026\027\f\202\023 024  027 017\032\034\021\023\254!\017\027 037\024\016\027 231##\024\032\023\031\022\023\024\021\027 030\017\027 205\023\021\023\021{\027 227\031#\017\033\027 024\021\027 031\021\027 231\016\022\023\037\023\032\023\031\030\027 251\023\037\017\027 231\030{\024\016\023\022\034\\\311\027 207\246\301\210\235\262\246\222\207\222\206\246\242\274\207\301\027 027 206\207\207\301\027 253\226\226\226\027 212\240\253\027\233\207<\233\233\207\235\274\273\016\201<\206\207\207\301<\233\207\222<\217\206\207\207\301\211\027 255\233\264\256 024\246\032\034\031\021{\023\021{\027 303\017\016\022\023\032\031\030\027\205\023\021\023\021{\027\024\037\027\251\031\016{\017\027\212\031\022\031 027\233\222\246\206\222 027 255\235\256 206\262\301\246\206\210\264<\027 027 222 \003 003 003 005 002 003 003 003 003 004 002 005 003 003 005 003 005 005 004 007 005 003 003 003 002 005 003 002 002 003 003 005 005 007 005 004 003 004 004 005 007 003 005 005 003 005 005 004 004 030\017#\025\026\027 202\253\273\205\240\212\027 233\235\235\210\026\027\205\024\021\022\016\017\031\030\026\027\201\031\021\021\031\033\031 027 027 027 027 027 027 027 027 027 027 027 027 027 027 027 027 027 027 027 027 027 027 027 027 027 027 027 027 027 027 027 027 027 027 255\233\206\256 017\016\027\222<\027 255\233\207\256 017#\034\027\231{\031\036\031\030\026\027\f\205\023\021\023\021{\027\273\017\021\017\016\031\030\023\224\017\033\027 231##\024\032\023\031\022\023\024\021\027 030\017#\025\026\027 016\023\021{\017\016\026\027 231\\#\022\017\016\033\031\\\026\027 017\022\034\017\016\030\031\021\033#\027 217\206\207\207\301\211<\027 255\233\262\256 017\036\027 311\231\030{\024\016\023\022\034\\#\027\037\024\016\027\031#\022\027\212\023#\032\024\020\017\016\035\027\024\037\027\231##\024\032\023\031\022\023\024\021\027=!\030\017#\311<\027\263\016\024\032<\027 222\016\033\027 253\021\022<\027 201\024\021\037<\027 024\021\027 252\021\024\036\030\017\033{\017\027 212\023#\032\024\020\017\016\035\027 031\021\033\027 212\031\022\031\026\027 205\023\021\023\021{\027 217\252\212\212^\235\301\026\027 017\036 024\016\022\027 227\017\031\032\034\026\027 201\231\211\026\027 206\302\222 031\016\023#\024\021\025\026\027\231\201\205\027\202\253\273\252\212\212\027\232!\030\035\027\206\207\207\207<\027 255\233\233\256 023\026\027 202<\027 263\031\016\022\034\031#\031\016\031\022\034\035\026\027 205<\027 240{\023\034\031\016\031\026\027 031\021\033\027 261<\027 251\023<\027 033\031\026\027 260\027 205\024\016\023\\\024\022\024\026\027 237<\260\027 205\024\016\023#\034\023\022\031\026\027 202<\260\027 031\021\033\027 024 031\021\022\026\027=\031 031 205<\223<\205\031\016{\031\034\021\035\027 031\021\033\027 231<\231<\205\023\022\036\031\030\035\026\027 f\031#\022\027 231\030{\024\016\023\022\034\\\027 037\024\016\027 205\023\021\023\021{\027 231##\023\032\023\031\022\023\024\021\027 030\017#\025\026\027 231\253\205\251\027 207\262\027 201\024\021\037\017\016\017\021\032\017\026\027 201\031\023\016\024\026\027 226{\035 016\024\032\017\017\033\023\021{\027 024\037\027 206\233\022\034\027 303\251\212\227\027 201\024\021\037\017\016\017\021\032\017\026\027 241!\016\023\032\034\026\027\202\036\023\224\017\016\030\031\021\033\026\027\233\235\235\262 027 255\262\256 002 003 017#\034\027\231{\016\031\036\031\030\026\027\205\023\021\023\021{\027\270!\031\021\035\023\022\031\022\023\020\017\027 f\231##\024\032\023\031\022\023\024\021\027 030\017#\027 023\021\027 251\031\016{\017\027 017\030\031\022\023\024\021\031\030\027 031 


              


   


                        





