A Data Mining Framework for Building Intrusion Detection Models 003 Wenke Lee Salvatore J Stolfo Kui W Mok Computer Science Department Columbia University 500 West 120th Street New York NY 10027 f wenke,sal,mok g cs.columbia.edu Abstract There is often the need to update an installed Intrusion Detection System IDS due to new attack methods or upgraded computing environments Since many current IDSs are constructed by manual encoding of expert knowledge changes to IDSs are expensive and slow In this paper we describe a data mining framework for adaptively building Intrusion Detection ID models The central idea is to utilize auditing programs to extract an extensive set of features that describe each network connection or host session and apply data mining programs to learn rules that accurately capture the behavior of intrusions and normal activities These rules can then be used for misuse detection and anomaly detection New detection models are incorporated into an existing IDS through a meta-learning or co-operative learning process which produces a meta detection model that combines evidence from multiple models We discuss the strengths of our data mining programs namely classi\002cation meta-learning association rules and frequent episodes We report our results of applying these programs to the extensively gathered network audit data for the 1998 DARPA Intrusion Detection Evaluation Program 1 Introduction As network-based computer systems play increasingly vital roles in modern society they have become the target of intrusions by our enemies and criminals In addition to intrusion prevention techniques such as user authentication e.g using passwords or biometrics avoiding programming errors and information protection e.g encryption intrusion detection is often used as another wall to protect 003 This research is supported in part by grants from DARPA F3060296-1-0311 and NSF IRI-96-32225 and CDA-96-25374 computer systems Intrusion detection techniques can be categorized into anomaly detection and misuse detection  Anomaly detection systems for example IDES 14  003 ag observ e d activities that deviate signi\002cantly from the established normal usage pro\002les as anomalies i.e possible intrusions Misuse detection systems for example IDIOT 9 and STAT 5 u s e p attern s o f w ell-k n o wn attack s o r w eak sp o t s of the system to match and identify known intrusion patterns or signatures While accuracy is the essential requirement of an IDS its extensibility and adaptability are also critical in today's network computing environment There are multiple 223penetration points\224 for intrusions to take place in a network system For example at the network level carefully crafted 223malicious\224 IP packets can crash a victim host at the host level vulnerabilities in system software can be exploited to yield an illegal root shell Since activities at different penetration points are normally recorded in different audit data sources an IDS often needs to be extended to incorporate additional modules that specialize on certain components e.g hosts subnets etc of the network systems The large traf\002c volume in security related mailing lists and Web sites suggest that new system security holes and intrusion methods are continuously being discovered Therefore it is imperative that IDSs be updated frequently and timely Currently building an effective IDS is an enormous knowledge engineering task System builders rely on their intuition and experience to select the statistical measures for anomaly detection 13 Experts 002 rst a nalyze and cate gorize attack scenarios and system vulnerabilities and hand-code the corresponding rules and patterns for misuse detection Because of the manual and ad hoc nature of the development process current IDSs have limited extensibility and adaptability Many IDSs only handle one particular audit data source and their updates are expensive and slow Some of the recent research and commercial IDSs have started to provide built-in mechanisms for customization 


and extension For example both Bro 18 and N F R 6  002lter network traf\002c streams into a series of events and execute scripts e.g Bro policy scripts and NFR's N-Codes that contain site-speci\002c event handlers i.e intrusion detection and handling rules The system administration personnel at each installation site must now assume the roles of both security experts and IDS builders because they are responsible for writing the correct event handling functions Our 002rst-hand experience with both Bro and NFR show that while these systems provide great 003exibility writing the scripts involves a lot of effort in addition to learning the scripting languages For example there is no means to 223debug\224 the scripts These systems also handle a 002xed set of network traf\002c event types On a few occasions we were forced to make changes to the source code of the original IDS to handle new event types Our research aims to develop a more systematic and automated approach in building IDSs We are developing a set of tools that can be applied to a variety of audit data sources to generate intrusion detection models We take a data-centric point of view and consider intrusion detection as a data analysis process Anomaly detection is about 002nding the normal usage patterns from the audit data whereas misuse detection is about encoding and matching the intrusion patterns using the audit data The central theme of our approach is to apply data mining programs to the extensively gathered audit data to compute models that accurately capture the actual behavior i.e patterns of intrusions and normal activities This automatic approach eliminates the need to manually analyze and encode intrusion patterns as well as the guesswork in selecting statistical measures for normal usage pro\002les More importantly the same data mining tools can be applied to multiple streams of evidence each from a detection module that specializes on a speci\002c type\(s of intrusion or a speci\002c component e.g a missioncritical host of the network system to learn the combined detection model that considers all the available evidence Thus our framework facilitates the construction of adaptive IDSs The rest of the paper is organized as follows Section 2 outlines the main components of our framework Section 3 brie\003y describes several data mining programs and discusses how they can be applied to discover frequent intrusion and normal activity patterns which are the basis for building misuse detection models and user anomaly detection models Section 4 describes how to construct temporal and statistical features using the frequent patterns mined from audit data Section 5 reports the results of our experiments on building intrusion detection models using the audit data from the DARPA evaluation program Section 6 discusses related research projects Section 7 outlines our future research plans 2 A Systematic Framework A basic premise for intrusion detection is that when audit mechanisms are enabled to record system events distinct evidence of legitimate activities and intrusions will be manifested in the audit data Because of the sheer volume of audit data both in the amount of audit records and in the number of system features 002elds of the audit records ef\002cient and intelligent data analysis tools are required to discover the behavior of system activities Data mining generally refers to the process of extracting descriptive models from large stores of data 4 The r ecent rapid development in data mining has made available a wide variety of algorithms drawn from the 002elds of statistics pattern recognition machine learning and databases Several types of algorithms are particularly useful for mining audit data Classi\002cation maps a data item into one of several prede\002ned categories These algorithms normally output 223classi\002ers\224 for example in the form of decision trees or rules An ideal application in intrusion detection will be to gather suf\002cient 223normal\224 and 223abnormal\224 audit data for a user or a program then apply a classi\002cation algorithm to learn a classi\002er that can label or predict new unseen audit data as belonging to the normal class or the abnormal class Link analysis determines relations between 002elds in the database records Correlations of system features in audit data for example the correlation between command and argument in the shell command history data of a user can serve as the basis for constructing normal usage pro\002les A programmer for example may have 223emacs\224 highly associated with 223C\224 002les Sequence analysis models sequential patterns These algorithms can discover what time-based sequence of audit events are frequently occurring together These frequent event patterns provide guidelines for incorporating temporal statistical measures into intrusion detection models For example patterns from audit data containing network-based denial-of-service DOS attacks suggest that several per-host and per-service measures should be included We are developing a framework 002rst proposed in 11  of applying data mining techniques to build intrusion detection models This framework consists of programs for learning classi\002ers and meta-classi\002cation 2  a ssociation rules 1 for l i n k a nal y s i s  frequent epi s odes  16  f or s e quence analysis and a support environment that enables system builders to interactively and iteratively drive the process of constructing and evaluating detection models The 2 


end product are concise and intuitive rules that can detect intrusions and can be easily inspected and edited by security experts when needed In our approach the learned rules replace the manually encoded intrusion patterns and pro\002les and system features and measures are selected by considering the statistical patterns computed from the audit data Meta-learning is used to learn the correlation of intrusion evidence from multiple detection models and produce a combined detection models It is very important to point out that our framework does not eliminate the need to pre-process and analyze raw audit data e.g tcpdump 7 a nd BSM 22 out put  I n f act  t o b ui l d intrusion detection models for network systems our data mining programs use pre-processed audit data where each record corresponds to a high level event e.g a network connection or host session Each record normally includes an extensive set of features that describe the characteristics of the event for example the duration of a connection the number of bytes transfered etc While analyzing and summarizing raw audit data is an essential task for an IDS we argue that generic utilities should 002rst be developed by network and operating system experts and made available to all IDSs as the lowest level building blocks Bro and NFR can be regarded as examples of such robust and free utilities as they both perform IP packet 002ltering and reassembling and allow event handlers to output summarized connection records Our framework assumes such building blocks are available when constructing IDSs 3 Mining Audit Data In this section we describe our data mining algorithms and illustrate how to apply these algorithms to generate detection models from audit data Here audit data refers to pre-processed timestamped audit records each with a number of features i.e 002elds 3.1 Classi\002cation Intrusion detection can be thought of as a classi\002cation problem we wish to classify each audit record into one of a discrete set of possible categories normal or a particular kind of intrusion Given a set of records where one of the features is the class label i.e the concept classi\002cation algorithms can compute a model that uses the most discriminating feature values to describe each concept For example consider the telnet connection records shown in Table 1 Here hot is the count of access to system directories creation and execution of programs etc compromised is the count of 002le/path 223not found\224 errors and 223Jump to\224 instructions etc RIPPER 3  a classi\002cation r ule l earning program g enerates rules for classifying the telnet connections are displayed in Table 2 Here we see that RIPPER indeed selects the unique feature values in identifying the intrusions These rules can be 002rst inspected and edited by security experts and then be incorporated into misuse detection systems The accuracy of a classi\002cation model depends directly on the set of features provided in the training data For example if the features hot  compromised and root shell were removed from the records in Table 1 RIPPER would not be able to produce accurate rules to identify buffer over\003ow connections In 11 w e s ho w e d t hat due t o t h e temporal nature of network events especially certain intrusions such as probing e.g port-scan ping-sweep etc and denial-of-service e.g ping-of-death teardrop etc adding per-host and per-service temporal statistics resulted in signi\002cant improvement in the accuracy of the classi\002cation models Thus selecting the right set of system features is a critical step when formulating the classi\002cation tasks Our strategy is to 002rst mine the frequent sequential patterns from the network audit data and then use these patterns as guidelines to select and construct temporal statistical features Section 3.3 discusses this process in greater detail 3.1.1 Meta-Classi\002cation There are several important reasons for combining multiple detection models First in order to avoid becoming a performance bottleneck and an easy target of 223subversion\224 an IDS should consist of multiple cooperative lightweight subsystems that each monitor a separate part e.g access point of the entire network environment For example an IDS that inspects the full data contents of each IP packet and keeps track of all opened connections may run out of memory i.e buffers during a DOS attack e.g SYN 003ood and cease to function On the other hand a more lightweight IDS that only inspects the header of each IP packet can detect only those intrusions that are targeted to the network protocols and not those that try to exploit the hosts e.g guess password buffer over\003ow etc A solution is to have one relatively lightweight system on the gateway that checks only the packet headers and several host-based systems that monitor the activities on the mission-critical hosts A 223global\224 detection system can then combine the evidence from these subsystems and take appropriate actions We believe that the best way to make intrusion detection models adaptive is by combining existing models with new models that are trained on new intrusion data or new normal data e.g audit data from a new network component instead of restarting the entire model building process using the aggregate of the archived audit data and new data 3 


label service 003ag hot failed logins compromised root shell su duration  normal telnet SF 0 0 0 0 0 10.2  normal telnet SF 0 0 0 3 1 2.1  guess telnet SF 0 6 0 0 0 26.2  normal telnet SF 0 0 0 0 0 126.2  over\003ow telnet SF 3 0 2 1 0 92.5  normal telnet SF 0 0 0 0 0 2.1  guess telnet SF 0 5 0 0 0 13.9  over\003ow telnet SF 3 0 2 1 0 92.5  normal telnet SF 0 0 0 0 0 1248            Table 1 Telnet Records RIPPER rule Meaning guess failed logins   5 If number of failed logins is greater than 5 then this telnet connection is 223guess\224 a guessing password attack over\003ow hot  3 compromised  2 root shell  1 If the number of hot indicators is 3 the number of compromised conditions is 2 and a root shell is obtained then this telnet connection is a buffer over\003ow attack   normal true If none of the above then this connection is 223normal\224 Table 2 Example RIPPER Rules from Telnet Records We use Meta-learning a s a mechani s m t o i nductively learn the correlation of predictions by a number of base detection models i.e classi\002ers The resulting metaclassi\002er thus combines the detection power of all the base detection models This approach has been extensively studied 21 a n d emp i rically e v alu a ted i n a related d o m ain o f fraud detection and has been shown to be an effective and scalable approach 3.2 Association Rules There is empirical evidence that program executions and user activities exhibit frequent correlations among system features For example certain privileged programs only access certain system 002les in speci\002c directories 8  p rogrammers edit and compile C 002les frequently etc These consistent behavior patterns should be included in normal usage pro\002les The goal of mining association rules is to derive multifeature attribute correlations from a database table Given a set of records where each record is a set of items support  X  is de\002ned as the percentage of records that contain item set X  An association rule is an expression X  Y  c s  1 Here X and Y are item sets and X  Y    s  support  X  Y  is the support of the rule and c  support  X  Y  support  X  is the con\002dence Table 3 shows the shell input commands during one telnet session by a secretary Here we keep only the 002letime hostname command arg1 arg2 am pascal mkdir dir1 am pascal cd dir1 am pascal vi tex am pascal tex vi am pascal mail fredd am pascal subject progress am pascal vi tex am pascal vi tex am pascal mail williamf am pascal subject progress     am pascal vi tex am pascal latex tex am pascal dvips dvi o      am pascal logout Table 3 Shell Command Records name extensions remove the input contents of mail bodies and 002les and use 223am\224 to represent all the morning timestamps Not all associations are relevant in analyzing program or user behavior for example hostname  pascal  arg 1 tex  We utilized the 223schema\224 level information about the audit records to direct the pattern mining process Observe that certain features are essential in describing the data 4 


while others provide only 223auxiliary information\224 For example in shell command data since the combination of the exact time and command uniquely identi\002es each record command is an essential feature likewise in network connection data the combination of the features timestamp source and destination hosts source port and service destination port uniquely identi\002es a connection record Thus they can be the essential features We argue that the 223relevant\224 association rules should describe patterns related to the essential features We call these essential features\(s axis features when they are used as a form of item constraint We restrict the association rules to only output rules that include axis attribute values In practice we need not designate all essential features as the axis features For example some network analysis tasks require statistics about various network services while others may require the patterns related to the hosts We can use service as the axis feature to compute the association rules that describe the patterns related to the services of the connections In the case of shell command records we use command as the axis feature Table 4 shows some example association rules from the shell command data in Table 3 Each of these association rules conveys information about the user's behavior The rules mined from each telnet/login session of the same user can be merged into an aggregate rule set to form the user's normal pro\002le Section 5.3 details our experiments of using association rules for anomaly detection 3.3 Frequent Episodes There is often the need to study the frequent sequential patterns of network events in order to understand the nature of many attacks We use frequent episodes to represent the sequential audit record patterns Given a set of timestamped event records where each record is a set of items an interval  t 1 t 2  is the sequence of event records that starts from timestamp t 1 and ends at t 2  The width of the interval is de\002ned as t 2 000 t 1 Let X be a set of items an interval is a minimal occurrence of X if it contains X and none of its proper sub-intervals contains X De\002ne support  X  as the ratio between the number of minimum occurrences that contain X and the total number of event records A frequent episode rule is the expression X Y  Z  c s w  15  H ere X  Y and Z are item sets and they together form an episode s  support  X  Y  Z  is the support of the rule and c  support  X  Y  Z  support  X  Y  is the con\002dence The width of each of the occurrences must be less than w  We introduced several extentions to the original frequent episodes algorithm Our extended algorithm computes frequent sequential patterns in two phases First it 002nds the frequent associations using the axis features\(s as previously described Then it generates the frequent serial patterns from these associations Thus our approach combines the associations among features and the sequential patterns among the records into a single rule Another interesting schema-level fact about audit records is that some essential features can be the references of other features These reference features normally carry information about some 223subject\224 and other features describe the 223actions\224 that refer to the same 223subject\224 For example if we want to study the sequential patterns of connections to the same destination host then dst host is the 223subject\224 and service is the action In this case we can designate dst host as the reference feature When forming an episode our program tests the condition that within the episode's minimal occurrences the event records covered by its constituent item sets have the same reference feature value 4 Feature Construction We use the mined frequent episodes from network connection records as guidelines to construct temporal statistical features for building classi\002cation models Raw tcpdump output are 002rst summarized into network connection records using pre-processing programs where each record has a set of 223intrinsic\224 features For example the duration  service  src host and dst host source and destination hosts src port source port src bytes and dst bytes number of data bytes a flag indicating normal or error status according to the protocols etc are intrinsic features of a single connection Table 5 shows examples of connection records Note that these 223intrinsic\224 features are for general network analysis purposes and not speci\002c to intrusion detection We apply the frequent episodes program to both normal connection data and intrusion data and compare the resulting patterns to 002nd the 223intrusion only\224 patterns The details of the pattern comparison algorithm is described in 12  B ri e\003 y  s i nce t he number o f p at t e rns m ay be v e ry l a r g e and there are rarely exactly matched patterns from two data sets this heuristic algorithm considers two episodes related to two different sets of axis features as more different and outputs the user-speci\002ed top percentage of the most 223intrusion only\224 patterns As an example consider the syn 003ood attack records shown in Table 5 Here the attacker used many spoofed source addresses to send a lot of S0 connections i.e only the 002rst SYN packet is sent to a port e.g http  of the victim host in a very short time span e.g all in timestamp 1.1 Table 6 shows the top intrusion only pattern produced using service as the axis feature and dst host as the reference feature Each of these intrusion patterns is used as a guideline 5 


Association rule Meaning command  vi  time  am  hostname  pascal  arg 1 tex  1  0  0  28 When using vi to edit a 002le the user is always i.e 100 of the time editing a tex 002le in the morning and at host pascal and 28 of the command data has this pattern command  subject  time  am  hostname  pascal  arg 1 progress  1  0  0  11 The subject of the user's email is always i.e 100 of the time about 223progress\224 in the morning and at host pascal  and 11 of the command data has this pattern Table 4 Example Association Rules from Shell Command Data timestamp duration service src host dst host src bytes dst bytes 003ag  1.1 0 http spoofed 1 victim 0 0 S0  1.1 0 http spoofed 2 victim 0 0 S0  1.1 0 http spoofed 3 victim 0 0 S0  1.1 0 http spoofed 4 victim 0 0 S0  1.1 0 http spoofed 5 victim 0 0 S0  1.1 0 http spoofed 6 victim 0 0 S0  1.1 0 http spoofed 7 victim 0 0 S0           10.1 2 ftp A B 200 300 SF  12.3 1 smtp B D 250 300 SF  13.4 60 telnet A D 200 12100 SF  13.7 1 smtp B C 200 300 SF  15.2 1 http D A 200 0 REJ           Table 5 Network Connection Records for adding additional features into the connection records to build better classi\002cation models We use the following automatic procedure for parsing a frequent episode and constructing features 017 Assume F 0 e.g dst host  is used as the reference feature and the width of the episode is w seconds 017 Add the following features that examine only the connections in the past w seconds that share the same value in F 0 as the current feature 226 A count of these connections 226 Let F 1 be service  src dst or dst host other than F 0 Ifthesame F 1 value e.g 223http\224 is in all the item sets of the episode add a percentage of connections that share the same F 1 value as the current connection otherwise add a percentage of different values of F 1  226 Let V 2 be a value e.g 223S0\224 of a feature F 2 e.g flag  other than F 0 and F 1 If V 2 is in all the item sets of the episode add a percentage of connections that have the same V 2  otherwise if F 2 is a numerical feature add an average of the F 2 values This 223syn 003ood\224 pattern results in the following additional features a count of connections to the same dst host in the past 2 seconds and among these connections a percentage of those that have the same service  and percentage of those that have the 223S0\224 flag  An open problem here is how to decide the right time window value w  We mine sequential patterns using different w values for example from 0.1 to 20 with an increment of 1 and plot the number of patterns generated at each run Our experience show that this plot tends to stabilize after the initial sharp jump We call the smallest w in the stable region w 0  In 11 w e report e d e xperi ment s o f u s i ng di fferent w values to calculate temporal statistical features for classi\002cation models Our results showed the plot of accuracy of the classi\002er also stabilizes after w 025 w 0 and tend to taper off Intuitively a requirement for a good window size is that its set of sequential patterns is stable that is suf\002cient patterns are captured and noise is small We therefore use w 0 for adding temporal statistical features In order to construct the appropriate features to detect an intrusion we need to select the right axis and reference features to generate the most distinguishing and useful intrusion patterns This could be a bottleneck in building effective models since it requires empirical evaluation We have implemented a feature construction system described 6 


Frequent episode Meaning  service  http  flag  S 0  dst host  victim    service  http  flag  S 0  dst host  victim    service  http  flag  S 0  dst host  victim  0  93  0  03  2 93 of the time after two http connections with S 0 003ag are made to host victim  within 2 seconds from the 002rst of these two the third similar connection is made and this pattern occurs in 3 of the data Table 6 Example Intrusion Pattern in 12  t o s upport t he i t e rat i v e procedure o f p at t e rn mi ning and comparison feature construction from patterns and model building and evaluation In each iteration we choose a different data mining strategy regarding the choices of axis and reference features These choices are limited among the 223essential\224 features see Section 3.2 that is service  dst host  src dst or src port  Since intrusions are generally targeted to some victim host\(s in the network the system starts with service and dst host  5 Experiments We participated in the DARPA Intrusion Detection Evaluation Program prepared and managed by MIT Lincoln Labs The objective of this study was to survey and evaluate the state of the art in research in intrusion detection A standard set of extensively gathered audit data which includes a wide variety of intrusions simulated in a military network environment is provided by DARPA Each participating site was required to build intrusion detection models or tweak their existing system parameters using the training data and send the results i.e detected intrusions on the test data back to DARPA for performance evaluation We report our experience here 5.1 The DARPA data We were provided with about 4 gigabytes of compressed tcpdump data of 7 weeks of network traf\002c This data can be processed into about 5 million of connection records of about 100 bytes each The data contains content i.e the data portion of every packet transmitted between hosts inside and outside a simulated military base BSM audit data from one UNIX Solaris host for some network sessions were also provided Four main categories of attacks were simulated they are 017 DOS denial-of-service for example ping-of-death teardrop smurf syn 003ood etc 017 R2L unauthorized access from a remote machine for example guessing password 017 U2R unauthorized access to local superuser privileges by a local unprivileged user for example various of buffer over\003ow attacks 017 PROBING surveillance and probing for example port-scan ping-sweep etc In addition there were anomalous user behavior such as 223a manager becomes i.e behaves like a system administrator\224 5.1.1 Data Pre-processing We used Bro as the packet 002ltering and reassembling engine We extended Bro to handle ICMP packets and made changes to its packet fragment inspection modules since it crashed when processing data that contains teardrop or ping-of-death attacks We implemented a Bro 223connection 002nished\224 event handler to output a summarized record for each connection Each connection record includes these 223intrinsic\224 features its time  duration  service  src host  dst h ost  src port  wrong fragment fragmentation error e.g fragment size is not multiple of 8 bytes or the offsets are overlapped etc flag how the connection is established and terminated We used Bro event handlers to examine the telnet sessions and extract the shell commands of the users We further pre-processed the shell commands by replacing timestamps with am pm and nt for night and eliminated the input i.e contents of edit and sendmail commands and kept only the 002lename extensions Table 3 shows examples of the processed command data These shell command records were used for user anomaly detection to be discussedinSection5.3 5.2 Misuse Detection The training data from DARPA includes 223list 002les\224 that identify the timestamp source host and port destination host and port and the name of each attack We used this information to select intrusion data to perform pattern mining and feature construction and to label each connection record with 223normal\224 or an attack type to create training data for building classi\002cation models Since the amount of audit data is huge for example some days have several millions of connection records due 7 


to the nasty DOS attacks we did not aggregate all the connection records into a single training data set Instead we extracted all the connection records that fall within a surrounding time window of plus and minus 5 minutes of the whole duration of each attack to create a data set for each attack type We also randomly extracted sequences of normal connections records to create the normal data set 5.2.1 Manual and Automatic Feature Construction Following the feature construction approach described in Section 4 for each attack type e.g syn 003ood port-scan etc we performed pattern mining and comparison using its intrusion data set and the normal data set We constructed appropriate features according to the intrusion only patterns Here we summarize the temporal and statistical features automatically constructed by our system 017 The 223 same host 224 feature that examine only the connections in the past 2 seconds that have the same destination host as the current connection 226 the count of such connections the percentage of connections that have the same service as the current one the percentage of different services the percentage of the S0 003ag and the percentage of the REJ i.e rejected connection 003ag 017 The 223same service\224 features that examine only the connections in the past 2 seconds that have the same service as the current connection 226 the count of such connections the percentage of different destination hosts the percentage of the S0 003ag and the percentage of the REJ 003ag We call these the time-based 223traf\002c\224 features for connection records There are several 223slow\224 PROBING attacks that scan the hosts or ports using a much larger time interval than 2 seconds for example one in every minute As a result these attacks did not produce intrusion only patterns with the time window of 2 seconds We sorted these connection records by the destination hosts and applied the same pattern mining and feature construction process In stead of using a time window of 2 seconds we now used a 223connection\224 window of 100 connections and constructed a mirror set of 223host-based traf\002c\224 features as the timebased 223traf\002c\224 features We discovered that unlike most of the DOS and PROBING attacks the R2L and U2R attacks don't have any 223intrusion only\224 frequent patterns This is because most of the DOS and PROBING attacks involve sending a lot of connections to some host\(s in a very short period of time and therefore can have frequent sequential patterns that are different from the normal traf\002c The R2L and U2R attacks are embedded in the data portions of the packets and normally involve only a single connection Therefore it is unlikely that they can have any unique frequent traf\002c patterns In other words our automatic feature construction process failed to produce any features for these attacks After studying the outcome of this mining process we focussed our attention to the content of the connections In the Bro event handlers we added functions that inspect data exchanges of interactive TCP connections e.g telnet ftp smtp etc These functions assign values to a set of 223content\224 features to indicate whether the data contents suggest suspicious behavior These features are number of failed logins successfully logged in or not whether logged in as root whether a root shell is obtained whether a su command is attempted and succeeded number of access to access control 002les e.g 223/etc/passwd\224 223.rhosts\224 number of compromised states on the destination host e.g 002le/path 223not found\224 errors and 223Jump to\224 instructions etc number of hot indicators e.g access to system directories creation and execution of programs etc and number of outbound connections during a ftp session Our approach here is to include an extensive set of indicators and then let classi\002cation programs decide which minimal set of discriminating features should be used to identify intrusions 5.2.2 Detection Models It is evident that different categories of intrusions require different sets of constructed features in order to be detected We therefore built classi\002cation models using different feature sets 017 The 223traf\002c\224 model each connection record contains the 223intrinsic\224 and the 223traf\002c\224 features Table 7 shows some example labeled connection records The resultant RIPPER classi\002er detects the DOS and PROBING attacks Table 8 shows some example RIPPER rules 017 The host-based 223traf\002c\224 model each connection record contains the 223intrinsic\224 and the host-based 223traf\002c\224 features The resultant RIPPER classi\002ers detect the slow PROBING attacks 017 The 223content\224 model each connection record contains the 223intrinsic\224 and the 223content\224 features Table 1 shows some example labeled connection records The resultant RIPPER classi\002er detects the R2L and U2R attacks Table 2 shows some example RIPPER rules These classi\002cation models each specialize to a certain type of intrusion We then constructed a meta-level classi\002er to combine these detection models Each meta-level training record consists of four features the three predictions each from one of the base models plus the true class label i.e 223normal\224 and an attack type RIPPER was then 8 


label service 003ag host count srv count host REJ  host diff srv  duration  normal ecr i SF 1 1 0 1 0  smurf ecr i SF 350 350 0 0 0  satan user-level REJ 231 1 85 89 0  normal http SF 1 0 0 1 3           Table 7 Example 223Traf\002c\224 Connection Records RIPPER rule Meaning smurf service=ecr i host count 025 5  host srv count 025 5  If the service is icmp echo request and for the past 2 seconds the number of connections that have the same destination host as the current one is at least 5 and the number of connections that have the same service as the current one is at least 5 then this is a smurf attack a DOS attack satan host REJ  025 83  host diff srv  025 87  If for the connections in the past 2 seconds that have same the destination host as the current connection the percentage of rejected connections are at least 83 and the percentage of different services is at least 87 then this is a satan attack a PROBING attack Table 8 Example RIPPER Rules for DOS and PROBING attacks applied to learn the rules that combine the evidence from the 223traf\002c\224 host-based 223traf\002c\224 and 223content\224 classi\002ers to make a 002nal prediction on a connection The resulting meta-level rules basically use the predictions from the 223content\224 model to detect R2L and U2R attacks and the combination of 223traf\002c\224 and host-based 223traf\002c\224 models to detect the DOS and fast and slow PROBING attacks That is the meta-classi\002er predicts a connection as an attack of R2L or U2R whenever the 223content\224 model does so and an attack of DOS or PROBING whenever the 223traf\002c\224 model does so or whenever the 223traf\002c\224 model predicts 223normal\224 but the host-based model predicts a PROBING attack Model  of features  of rules  of features in records in rules content 22 55 11 traf\002c 20 26 4 9 host traf\002c 14 8 1 5 Table 9 Model Complexities Table 9 summarizes the complexity of the base models in terms of the number of features in a connection record the number of RIPPER rules produced and the number of distinct features actually used in the rules The numbers in bold for example 9  indicate the number of automatically constructed temporal and statistical features being used in the RIPPER rules We see that for both the 223traf\002c\224 and host-based 223traf\002c\224 models our feature construction process contribute the majority of the features We should point out that not all features in the connection records were selected by RIPPER This is because RIPPER like most classi\002cation algorithms has a built-in 223feature selection\224 process to select the most discriminating and generalizable features according to their statistical signi\002cance and performance e.g in a hold-out test dataset that simulates the 223unseen/future\224 data Because of the large amount of audit data a human expert is not able to manually gather and test various statistics and thus tend to do a poor job in selecting the features As a result hand crafted 223signature\224 rules tend to be very speci\002c to a small intrusion data set Alternative classi\002cation algorithms that compute underlying probability distributions may indeed require all features be evaluated in their resultant models A crucial issue here is the tradeoff between model accuracy and model cost The RIPPER output indicates that some features are irrelevant and hence we need not compute these at run-time thus reducing the cost of detection This is the subject matter of our ongoing research 5.2.3 Results We report the performance of our detection models as evaluated by MIT Lincoln Labs We trained our intrusion detection models i.e the base models and the meta-level classi\002er using the 7 weeks of labeled data and used them to make predictions on the 2 weeks of unlabeled test data i.e we were not told which connection is an attack The test data contains a total of 38 attack types with 14 types in test data only i.e our models were not trained with instances 9 


  0 10 20 30 40 50 60 70 0 0.05 0.1 0.15 0.2 Detection Rate False Alarm Rate Columbia  Group1   Group2   Group3  a DOS   0 10 20 30 40 50 60 70 80 90 100 0 0.05 0.1 0.15 0.2 Detection Rate False Alarm Rate Columbia  Group1   Group2   Group3  b PROBING   0 10 20 30 40 50 60 70 80 0 0.05 0.1 0.15 0.2 Detection Rate False Alarm Rate Columbia U2R  Group3 U2R   Group3 R2L   Group1 R2L   Columbia R2L  c U2R and R2L   0 10 20 30 40 50 60 70 0 0.05 0.1 0.15 0.2 Detection Rate False Alarm Rate Columbia  Group1   Group3  d Overall Figure 1 ROC Curves on Detection Rates and False Alarm Rates of these attack types Figure 1 shows the ROC curves of the detection models by attack categories as well as on all intrusions In each of these ROC plots the x-axis is the false alarm rate calculated as the percentage of normal connections classi\002ed as an intrusion the y-axis is the detection rate calculated as the percentage of intrusions detected A data point in the upper left corner corresponds to optimal performance i.e high detection rate with low false alarm rate We compare here our models with other participants denoted as Group 1 through 3 in the DARPA evaluation program The tested systems produced binary output hence the ROC's are not continuous These plots are duplicated from the presentation slides of a report given by Lincoln Labs in a DARPA PI meeting The slides can be viewed on line via http://www.cs.columbia.edu 230 sal/JAM/PROJECT/MIT/mitindex.html These participating groups used knowledge engineering approaches to build their intrusion detection models We can see from the 002gure that our detection model has the best overall performance and in all but one attack category our model is one of the best two However it is also clear that all models performed very poorly on R2L attacks For all intrusions an overall detection rate of below 70 is hardly satisfactory in a mission critical environment Category Old New DOS 79.9 24.3 PROBING 97.0 96.7 U2R 75.0 81.8 R2L 60.0 5.9 Overall 80.2 37.7 Table 10 Comparing Detection Rates in  on Old and New Attacks 10 


Although our models were intended for misuse detection we had hoped that the features we constructed would be general enough so that the models can detect new variations of the known intrusions Table 10 compares the detection rates of old intrusions and new intrusions Here new intrusions refer to those that did not have corresponding instances in the training data We see that our models were able to detect a large percentage of new PROBING and U2R attacks but not as effective for new DOS and R2L attacks 5.2.4 Discussion PROBING attacks have relatively limited variance because they all involve making connections to a large number of hosts or ports in a given time frame Likewise the outcome of all U2R attacks is that a root shell is obtained without legitimate means e.g login as root su to root etc Thus for these two categories of attacks given some representative instances in the training data our data mining system was able to construct features that capture their general behavior patterns As a result our detection models can detect a high percentage of old and new PROBING and U2R attacks On the other hand DOS and R2L have a wide variety of behavior because they exploit the weaknesses of a large number of different network or system services The features constructed based on the available attack instances are very specialized to the known attack types Our detection models therefore missed a large number of new DOS and R2L attacks The results here are not entirely surprising since our models are misuse detection models We need to use anomaly detection models on network traf\002c or system programs to guard against the new and diversi\002ed attacks Anomaly detection is much more challenging than misuse detection For example we need to 002rst decide whether we should build normal pro\002le for each network service or a group of services and for each host or a groups of hosts The feature construction process will likely to be more complex since unlike a relatively small number of 223intrusion only\224 patterns normal network traf\002c can have a large number of variations Network anomaly detection is an important problem and an active area of research 5.3 User Anomaly Detection 223Insiders\224 misusing their privileges can be hard to detect since they don't normally need to break-in and IDSs and security personnel tend to focus on guarding outside attacks Insider problems are some of the most vexing problems for security personnel Indeed who checks the checkers i.e the person to whom the IDS reports It is often very dif\002cult to classify a single event by a user as normal or abnormal because the unpredictable nature of most people A user's actions during a login session needs to be studied as a whole to determine whether he or she is behaving normally Our initial exploratory approach is to mine the frequent patterns from user command data and merge or add the patterns into an aggregate set to form the normal usage pro\002le of a user A new pattern can be merged with an old pattern if they have the same left-hand-sides and right-hand-sides their support values are within a 5 of each other and their con\002dence values are also within 5 of each other To analyze a user login session we mine the frequent patterns from the sequence of commands during this session This new pattern set is compared with the pro\002le pattern set and a similarity score is assigned Assume that the new set has n patterns and among them there are m patterns that have 223matches\224 i.e rules that they can be merged with in the pro\002le pattern set then the similarity score is simply m n  Obviously a higher similarity score means a higher likelihood that the user's behavior agrees with his or her historical pro\002le User Normal Activities sysadm logs in as root cats the password 002le and runs commands such as top programmer1 writes public domain C code use a vi editor compiles the C code reads and sends mail and executes unix commands programmer2 a similar user pro\002le but works in afternoons and evenings secretary edits latex 002les runs latex reads mail and sends mail manager1 reads and sends mail manager2 reads mail Table 11 User Descriptions The DARPA data also includes user anomaly data to evaluate anomaly detection systems Table 11 describes the consistent behavior of the 6 users for anomaly analysis Note that since we were the only group that performed anomaly detection on the test data Lincoln Labs did not evaluate our results We report our experiments on the training data here We apply our frequent episode algorithms to the command data from each login session of the same user with command as the axis feature and w 5 i.e we look for patterns within the range of 5 consecutive commands to mine the frequent sequential patterns on the associations among user commands their arguments time segments and hosts We treat the 002rst 4 weeks as a data gathering period during which we simply merge the patterns into each user's pro\002les Each user has 3 pro\002les one for the ac11 


User Anomaly Description programmer2 logs in from beta secretary logs in at night sysadm logs in from jupiter programmer1 becomes a secretary secretary becomes a manager programmer1 logs in at night sysadm becomes a programmer manager1 becomes a sysadm manager2 logs in from pluto Table 12 User Anomaly Description User Normal Anomaly programmer2 0.58 0.79 0.00 secretary  1  1  0.00 sysadm 0.84 0.95 0.00 programmer1 0.31 1.00 0.04 secretary 0.41 0.98 0.17 programmer1  1  1  0.00 sysadm 0.64 0.95 0.00 manager1 0.57 1.00 0.00 manager2 1.00 1.00 0.00 Table 13 Similarity with User's Own Pro\002le tivities of each time segment am pm and nt We treat the 5th week as the training period during which we compare the patterns from each session to the pro\002le of the time segment We record the normal range of the similarity scores during this week The data in the 6th week has some user anomalies as described in Table 12 For each of the anomalous sessions we compare its patterns against the original user's pro\002le and then compare the resulting similarity score against the recorded normal range of the same time segment In Table 13 the column labeled 223Normal\224 is the range of similarity of each user against his or her own pro\002le as recorded during the 5th week A 1 here means that the user did not login during the time segment in the 5th week The column 223Anomaly\224 is the similarity measure of the anomalous session described Table 12 We see that all anomalous sessions can be clearly detected since their similarity scores are much smaller than the normal range For example when the sysadm becomes programmer see Table 12 his/her patterns have zero matches with the sysadm's pro\002le while for the whole 5th week the pm similarity scores are in the range of 0.64 to 0.95 Unfortunately formal evaluation statistics are not available to determine the error rates of this approach However this initial test indicates a path worthy of future study 6 Related Work Network intrusion detection has been an on-going research area 17  M ore r ecent s ystems e g B ro 18   NFR 6  a n d EMERALD  1 9  a ll mad e e x ten s ib ility th eir primary design goals Our research focuses on automatic methods for constructing intrusion detection models The meta-learning mechanism is designed to automate the extention process of IDSs We share the same views discussed in 20 t h at an ID S s houl d b e b ui l t us i n g s t a ndard components We believe that the operating system and networking community should be responsible for building a robust 223Event\224 box In 10  a l gori t h ms for a nal y zi ng us er s h el l c ommands and detecting anomalies were discussed The basic idea is to 002rst collapse the multi-column shell commands into a single stream of strings and then string matching techniques and consideration of 223concept drift\224 are used to build and update user pro\002les We believe that our extended frequent episodes algorithm is a superior approach because it considers both the association among commands and arguments and the frequent sequential patterns of such associations 7 Conclusions and Future Directions In this paper we outline a data mining framework for constructing intrusion detection models The key idea is to apply data mining programs to audit data to compute misuse and anomaly detection models according to the observed behavior in the data To facilitate adaptability and extensibility we propose the use of meta-learning as a means to construct a combined model that incorporate evidence from multiple lightweight base models This mechanism makes it feasible to introduce new ID components in an existing IDS possibly without signi\002cant re-engineering We extend the basic association rules and frequent episodes algorithms to accommodate the special requirements in analyzing audit data Our experiments show that the frequent patterns mined from audit data can be used as reliable user anomaly detection models and as guidelines for selecting temporal statistical features to build effective classi\002cation models Results from the 1998 DARPA Intrusion Detection Evaluation Program showed our detection models performed as well as the best systems built using the manual knowledge engineering approaches Our future work includes developing network anomaly detection strategies and devising a mechanical procedure to translate our automatically learned detection rules into modules for real-time IDSs A preliminary project in collaboration with NFR has just started 12 


8 Acknowledgments We wish to thank our colleagues at Columbia University Chris Park Wei Fan and Andreas Prodromidis for their help and encouragement References 1 R  A g r a w a l  T  I m i e lin sk i a n d A  S w a m i  M in in g a sso c i a tion rules between sets of items in large databases In Proceedings of the ACM SIGMOD Conference on Management of Data  pages 207\226216 1993 2 P  K  C han a nd S  J S t ol f o  T o w ar d p ar al l e l a nd di st r i b u t e d learning by meta-learning In AAAI Workshop in Knowledge Discovery in Databases  pages 227\226240 1993 3 W  W  C ohen Fast ef f ect i v e r ul e i nduct i on I n Machine Learning the 12th International Conference  Lake Taho CA 1995 Morgan Kaufmann 4 U  F ayyad G P i at et sk yS h api r o and P  S myt h  T he KDD process of extracting useful knowledge from volumes of data Communications of the ACM  39\(11\:27\22634 November 1996 5 K  I l gun R  A K e mmer e r  and P  A  P or r a s S t at e t r a nsition analysis A rule-based intrusion detection approach IEEE Transactions on Software Engineering  21\(3\:181\226 199 March 1995 6 N  F  R  I n c  N etw o rk 003ig h t reco rd er  h ttp www n fr co m  1997 7 V  J acobson C  L e r e s and S  M cC anne t cpdump a v ai l a bl e via anonymous ftp to ftp.ee.lbl.gov June 1989 8 C  K o  G Fin k  a n d K  L e v itt Au to m a te d d e t e c tio n o f v u l nerabilities in privileged programs by execution monitoring In Proceedings of the 10th Annual Computer Security Applications Conference  pages 134\226144 December 1994 9 S  K umar and E  H  S paf f or d A s of t w ar e a r c hi t ect ur e t o support misuse intrusion detection In Proceedings of the 18th National Information Security Conference  pages 194\226 204 1995  T  L a ne and C  E  B r odl e y  S equence m at chi n g a nd l ear ni ng in anomaly detection for computer security In AAAI Workshop AI Approaches to Fraud Detection and Risk Management  pages 43\22649 AAAI Press July 1997  W  L e e a nd S  J S t ol f o  D at a m i n i n g a ppr oaches f o r i nt r u sion detection In Proceedings of the 7th USENIX Security Symposium  San Antonio TX January 1998  W  L ee S  J S t ol f o  a nd K W  Mok Mi ni ng i n a d at a\003 o w environment Experience in intrusion detection submitted for publication March 1999  T  L unt  D et ect i n g i nt r uder s i n comput er syst ems I n Proceedings of the 1993 Conference on Auditing and Computer Technology  1993  T  L unt  A  T amar u F  Gi l h am R  J agannat h an P  N eumann H Javitz A Valdes and T Garvey A real-time intrusion detection expert system IDES 002nal technical report Technical report Computer Science Laboratory SRI International Menlo Park California February 1992  H Manni l a and H  T oi v onen Di sco v e r i ng gener a l i zed episodes using minimal occurrences In Proceedings of the 2nd International Conference on Knowledge Discovery in Databases and Data Mining  Portland Oregon August 1996  H Manni l a  H  T oi v onen and A  I  V er kamo D i s co vering frequent episodes in sequences In Proceedings of the 1st International Conference on Knowledge Discovery in Databases and Data Mining  Montreal Canada August 1995  B M ukherjee L T  Heberlein and K  N  L e v itt Netw ork intrusion detection IEEE Network  May/June 1994  V  Paxon B r o  A syst em f o r d et ect i n g n et w o r k i n t r uder s in real-time In Proceedings of the 7th USENIX Security Symposium  San Antonio TX 1998  P  A P o r r a s a nd P  G Neumann E m er al d E v ent m oni t o r i ng enabling responses to anomalous live disturbances In National Information Systems Security Conference  Baltimore MD October 1997  S  S t ai nf or dC h en C ommon i nt r u si on det ect i o n f r a me w o r k  http://seclab.cs.ucdavis.edu/cidf  S  J S t ol f o  A  L  P r odr omi d i s  S  T sel e pi s W  L ee D W  Fan and P K Chan JAM Java agents for meta-learning over distributed databases In Proceedings of the 3rd International Conference on Knowledge Discovery and Data Mining  pages 74\22681 Newport Beach CA August 1997 AAAI Press  S unS of t  Mount ai n V i e w  C A  SunSHIELD Basic Security Module Guide  13 


 30 40 50 60 70 80 90 100 110 120 30 40 50 60 70 80 90 10 0 Execution Time [s Number of Nodes Figure 13 Execution time of HPA program pass 2 on PC cluster 2 Scan the transaction database and count the support count Each processing node reads the transaction database from its local disk 000 itemsets are generated from that transaction and the same hash function used in phase 1 s applied to each of them Each of the 000 itemsets is sent to certain processing node according the hash value For the itemsets received from the other nodes and those locally generated whose ID equals the node\220s ID the hash table is searched If hit its support count value is incremented 3 Determine the large itemset After reading all the transaction data each processing node can individually determine whether each candidate 000 itemset satisfy user-specified minimum support or not Each processing node sends large 000 itemsets to the coordinator where all the large 000 itemsets are gathered 4 Check the terminal condition If the large 000 itemsets are empty the algorithm terminates Otherwise the coordinator broadcasts large 000 itemsets to all the processing nodes and the algorithm enters the next iteration 4.2 Performance evaluation of HPA algorithm The HPA program explained above is implemented on our PC cluster Each node of the cluster has a transaction data file on its own hard disk Transaction data is produced using data generation program developed by Agrawal designating some parameters such as the number of transaction the number of different items and so on The produced data is divided by the number of nodes and copied to each node\220s hard disk The parameters used in the evaluation is as follows The number of transaction is 5,000,000 the number of different items is 5000 and minimum support is 0.7 The size of the data is about 400MBytes in total The message block size is set to be 16KBytes according to the results of communication characteristics of PC clusters discussed in previous section The disk I/O block size is 64KBytes which seems to be most suitable value for the system Note that the number of candidate itemset in pass 2 s substantially larger than for the other passes which relatively frequently occurs in association rules mining Therefore we have been careful to parallelize the program effectively especially in pass 2 so that unnecessary itemsets to count should not be generated 14 Proceedings of the ACM/IEEE SC97 Conference \(SC\22297 0-89791-985-8/97 $ 17.00 \251 1997 IEEE 


The execution time of the HPA program pass 2 is shown in figure 13 as the number of PCs is changed The maximum number of PCs used in this evaluation is 100 Reasonably good speedup is achieved in this application as the number of PCs is increased 5 Conclusion In this paper we presented performance evaluation of parallel database processing on an ATM connected 100 node PC cluster system The latest PCs enabled us to obtain over 110Mbps throughput in point-to-point communication on a 155Mbps ATM network even with the so-called 217\217heavy\220\220 TCP/IP This greatly helped in developing the system in a short period since we were absorbed in fixing many other problems Massively parallel computers now tend to be used in business applications as well as the conventional scientific computation Two major business applications decision support query processing and data mining were picked up and executed on the PC cluster The query processing environment was built using the results of our previous research the super database computer SDC project Performace evaluation results with a query of the standard TPC-D benchmark showed that our system achieved superior performance especially when transposed file organization was employed As for data mining we developed a parallel algorithm for mining association rules and implemented it on the PC cluster By utilizing aggregate memory of the system efficiently the system showed good speedup characteristics as the number of nodes increased The good price/performance ratio makes PC clusters very attractive and promising for parallel database processing applications All these facts support the effectiveness of the commodity PC based massively parallel database servers Acknowledgment This project is supported by NEDO New Energy and Industrial Technology Development Organization in Japan Hitachi Ltd technically helped us extensively for ATM related issues References  R Agrawal T Imielinski and A Swami Mining association rules between sets of items in large databases In Proceedings of ACM SIGMOD International Conference on Management of Data  pages 207--216 1993  R Agrawal and R Srikant Fast algorithms for mining association rules In Proceedings of International Conference on Very Large Data Bases  1994  A C Arpaci-Dusseau R H Arpaci-Dusseau D E Culler J M Hellerstein and D A Patterson High-performance sorting on Networks of Workstations In Proceedings of International Conference on Management of Data  pages 243--254 1997  D.S Batory On searching transposed files ACM TODS  4\(4 1979  P.A Boncz W Quak and M.L Kersten Monet and its geographical extensions A novel approach to high performance GIS processing In Proceedings of International Conference on Extending Database Technology  pages 147--166 1996 15 Proceedings of the ACM/IEEE SC97 Conference \(SC\22297 0-89791-985-8/97 $ 17.00 \251 1997 IEEE 


 R Carter and J Laroco Commodity clusters Performance comparison between PC\220s and workstations In Proceedings of IEEE International Symposium on High Performance Distributed Computing  pages 292--304 1995  D.J DeWitt and J Gray Parallel database systems  The future of high performance database systems Communications of the ACM  35\(6 1992  J Gray editor The Benchmark Handbook for Database and Transaction Processing Systems  Morgan Kaufmann Publishers 2nd edition 1993  J Heinanen Multiprotocol encapsulation over ATM adaptation layer 5 Technical Report RFC1483 1993  M Kitsuregawa M Nakano and M Takagi Query execution for large relations on Functional Disk System In Proceedings of International Conference on Data Engineering  5th pages 159--167 IEEE 1989  M Kitsuregawa and Y Ogawa Bucket Spreading Parallel Hash:A new parallel hash join method with robustness for data skew in Super Database Computer SDC In Proceedings of International Conference on Very Large Data Bases  16th pages 210--221 1990  M Laubach Classical IP and ARP over ATM Technical Report RFC1577 1994  D.A Schneider and D.J DeWitt Tradeoffs in processing complex join queries via hashing in multiprocessor database machines In Proceedings of International Conference on Very Large Data Bases  16th pages 469--480 1990  T Shintani and M Kitsuregawa Hash based parallel algorithms for mining association rules In Proceedings of IEEE International Conference on Parallel and Distributed Information Systems  pages 19--30 1996  T Sterling D Saverese D.J Becker B Fryxell and K Olson Communication overhead for space science applications on the Beowulf parallel workstaion In Proceedings of International Symposium on High Performance Distributed Computing  pages 23--30 1995  T Tamura M Nakamura M Kitsuregawa and Y Ogawa Implementation and performance evaluation of the parallel relational database server SDC-II In Proceedings of International Conference on Parallel Processing  25th pages I--212--I--221 1996  TPC TPC Benchmark 000\001 D Decision Support Standard Specification Revision 1.1 Transaction Processing Performance Council 1995 16 Proceedings of the ACM/IEEE SC97 Conference \(SC\22297 0-89791-985-8/97 $ 17.00 \251 1997 IEEE 


In accordance with 1910.97 and 1910.209 warning signs are required in microwave areas For work involving power line carrier systems this work is to be conducted according to requirements for work on energized lines Comments s APPA objects to the absolute requirement implied by the word ensure regarding exposure to microwave radiation and recommends revision of s l iii to read when an employee works in an area where electromagnetic radiation levels could exceed the levels specified in the radiation protection guide the employer shall institute measures designed to protect employees from accidental exposure to radiation levels greater than those permitted by that guide  I1 an employee must be stationed at the remote end of the rodding operation Before moving an energized cable it must be inspected for defects which might lead to a fault To prevent accidents from working on the wrong cable would require identification of the correct cable when multiple cables are present Would prohibit an employee from working in a manhole with an energized cable with a defect that could lead to a fault However if the cable cannot be deenergized while another cable is out employees may enter the manhole but must protect against failure by some means for example using a ballistics blanket wrapped around cable Requires bonding around opening in metal sheath while working on cable Underaround EIectrical Installations t Comments t This paragraph addresses safety for underground vaults and manholes The following requirements are contained in this section Ladders must be used in manholes and vaults greater than four feet deep and climbing on cables and hangers in these vaults is prohibited Equipment used to lower materials and tools in manholes must be capable of supporting the weight and should be checked for defects before use An employee in a manhole must have an attendant in the immediate vicinity with facilities greater than 250 volts energized An employee working alone is permitted to enter briefly for inspection housekeeping taking readings or similar assuming work could be done safely Duct rods must be inserted in the direction presenting the least hazard to employees and APPA recommends that OSHA rewrite section 7\regarding working with defective cables This rewrite would include the words shall be given a thorough inspection and a determination made as to whether they represent a hazard to personnel or representative of an impending fault As in Subsection \(e EEI proposes the addition of wording to cover training of employees in emergency rescue procedures and for providing and maintaining rescue equipment Substations U This paragraph covers work performed in substations and contains the following requirements Requires that enough space be provided around electrical equipment to allow ready and safe access for operation and maintenance of equipment OSHA's position A2-16 


is that this requirement is sufficiently performance oriented to meet the requirements for old installations according to the 1987 NEW Requires draw-out circuit breakers to be inserted and removed while in the open position and that if the design permits the control circuits be rendered inoperative while breakers are being inserted and removed stated in the Rules and requests that existing installations not be required to be modified to meet NESC APPA recommends that Section u 4 i which includes requirements for enclosing electric conductors and equipment to minimize unauthorized access to such equipment be modified to refer to only those areas which are accessible to the public Requires conductive fences around substations to be grounded Power Generation v Addresses guarding of energized parts  Fences screens, partitions or walls This section provides additional requirements and related work practices for power generating plants  Entrances locked or attended Special Conditions w  Warning signs posted  Live parts greater than 150 volts to be guarded or isolated by location or be insulated  Enclosures are to be according to the 1987 NESC Sections llOA and 124A1 and in 1993 NESC  Requires guarding of live parts except during an operation and maintenance function when guards are removed barriers must be installed to prevent employees in the area from contacting exposed live parts Requires employees who do not work regularly at the substation to report their presence Requires information to be communicated to employees during job briefings in accordance with Section \(c of the Rules Comments U APPA and EEI provide comments as follows Both believe that some older substations \(and power plants would not meet NESC as This paragraph proposes special conditions that are encountered during electric power generation, transmission and distribution work including the following Capacitors  Requires individual units in a rack to be short circuited and the rack grounded  Require lines with capacitors connected to be short circuited before being considered deenergized Current transformer secondaries may not be opened while energized and must be bridged if the CT circuit is opened Series street lighting circuits with open circuit voltages greater than 600 volts must be worked in accordance with Section q\or t and the series loop may be opened only after the source transformer is deenergized and isolated or after the loop is bridged to avoid open circuit condition Sufficient artificial light must be provided where insufficient naturals illumination is present to enable employee to work safely A2-17 


US Coast Guard approved personal floatation devices must be supplied and inspected where employees are engaged in work where there is danger of drowning Required employee protection in public work areas to include the following  Warning signs or flags and other traffic control devices  Barricades for additional protection to employees  Barricades around excavated areas  Warning lights at night prominently displayed Lines or equipment which may be sub to backfeed from cogeneration or other sources are to be worked as energized in accordance with the applicable paragraphs of the Rules Comments w APPA submits the following comments regarding this Special Conditions section Recommends that the wording regarding capacitors be modified to include a waiting period for five minutes prior to short circuiting and grounding in accordance with industry standards for discharging of capacitors For series street light circuits, recommends that language be added for bridging to either install a bypass conductor or by placement of grounds so that work occurs between the grounds Recommends modification of the section regarding personal floatation devices to not apply to work sites near fountains decorative ponds swimming pools or other bodies of water on residential and commercial property Definitions x This section of the proposed Rules includes definitions of terms Definitions particularly pertinent to understanding the proposal and which have not previously been included are listed as follows Authorized Employee  an employee to whom the authority and responsibility to perform a specific assignment has been given by the employer who can demonstrate by experience or training the ability to recognize potentially hazardous energy and its potential impact on the work place conditions and who has the knowledge to implement adequate methods and means for the control and isolation of such energy CZearance for Work  Authorization to perform specified work or permission to enter a restricted area Clearance from Hazard  Separation from energized lines or equipment Comments x The following summarizes the changes in some of the definitions which APPA recommends Add to the definition for authorized employee It the authorized employee may be an employee assigned to perform the work or assigned to provide the energy control and isolation function  Recommends that OSHA modify the definition for a line clearance tree trimmer to add the word qualified resulting in the complete designation as a qualified line clearance tree trimmer Recommends that OSHA modify the definition of qualified employee" to remove the word construction from the definition since it is felt that knowledge of construction procedures is beyond the scope of the proposed rule resulting in APPA's new A2-18 I 


wording as follows more knowledgeable in operation and hazards associated with electric power generation transmission and/or distribution equipment Recommends that OSHA add a definition for the word practicable and replace the word feasible with practicable wherever it appears in the proposed regulations and that practicable be further defined as capable of being accomplished by reasonably available and economic means OTHER ISSUES Clothing OSHA requested comments on the advisability of adopting requirements regarding the clothing worn by electric utility industry employees EEI has presented comments which indicates research is underway prior to establishing a standard for clothing to be worn by electric utility employees However EEI's position is that this standard has not developed to the extent that it could be included in the OSHA Rules Both APPA and EEI state that they would support a requirement that employers train employees regarding the proper type of clothing to wear to minimize hazards when working in the vicinity of exposed energized facilities Grandfathering Due to the anticipated cost impact on the utility industry of the proposed Rules requiring that existing installations be brought to the requirements of the proposed Rules both APPA and EEI propose that the final Rules include an omnibus grandfather provision This provision would exempt those selected types of facilities from modification to meet the new rules EEI states that if the grandfathering concept is incorporated that electric utility employees will not be deprived of proper protection They propose that employers be required to provide employees with a level of protection equivalent to that which the standard would require in those instances in which the utility does not choose to modify existing facilities to comply with the final standard Rubber Sleeves OSHA requests comments from the industry on whether it would be advisable to require rubber insulating sleeves when gloves are used on lines or equipment energized at more than a given voltage EEI states its position that utilities should continue to have the option of choosing rubber gloves or gloves and sleeves to protect employees when it is necessary to work closer to energized lines than the distances specified in the clearance tables Preemuting State Laws EEI requests that the final Rules be clear in their preempting state rules applicable to the operation and maintenance work rules for electric power systems. This is especially critical since some states now have existing laws which are more stringent than the proposed OSHA Rules Examples are 1 in California and Pennsylvania where electric utility linemen are prohibited from using rubber gloves to work on lines and equipment energized at more than certain voltages and 2 in California and Connecticut where the live line bare hand method of working on high voltage transmission systems is prohibited One utility Pacific Gas  Electric has obtained a variance from the California OSHA to perform live line bare-hand transmission maintenance work on an experimental basis Coiiflicts Between the Rilles and Part 1926 Subpart V Since many of the work procedures in construction work and operation and maintenance work are similar and difficult to distinguish between EEI requests that the final order be clear in establishing which rule has jurisdiction over such similar work areas A2-19 v 


IMPACTS ON COSTS AND ASSOCIATED BENEFITS In its introduction to the proposed rules OSHA has provided an estimate of the annual cost impact on the electric utility industry for the proposed des of approximately 20.7 million OSHA estimates that compliance with this proposed standard would annually prevent between 24 and 28 fatalities and 2,175 injuries per year The utilities which have responded to this proposed standard through their respective associations have questioned the claims both of the magnitude of the cost involved and the benefit to the industry in preventing fatalities and lost-time injuries Both EEI and APPA feel that the annual cost which OSHA estimates are significantly lower than would be realized in practice Factors which APPA and EEI feel were not properly addressed include the following OSHA has not accurately accounted for cost of potential retroactive impacts including retrofitting and modifying existing installations and equipment OSHA has not consistently implemented performance based provisions in proposed rules  many portions require specific approaches which would require utilities to replace procedures already in place with new procedures Estimates were based on an average size investor-owned utility of 2,800 employees and an average rural cooperative of 56 employees, which are not applicable to many smaller systems such as municipal systems OSHA has not adequately addressed the retraining which would be necessary with modifying long-established industry practices to be in accordance with the OSHA rules EEI claims that OSHA's proposed clearance requirements would not allow the use of established maintenance techniques for maintaining high voltage transmission systems and thus would require new techniques For an example of the cost which is estimated to be experienced as a result of the new Rules one of the EEI member companies has estimated that approximately 20,000 transmission towers would need to be modified to accommodate the required step bolts in the Rules at an estimated cost of 6,200,000 Additionally this same company estimates that the annual cost of retesting live line tools for its estimated 1,000 tools would be 265,000 Additionally, both EEI and APPA question the additional benefits which OSHA claims would result from implementation of the new Rules APPA questions the estimates of preventing an additional 24 to 28 fatalities annually and 2,175 injuries per year in that it fails to account for the fact that the industry has already implemented in large part safety measures which are incorporated in the Rules EEI and APPA also point out that many preventable injuries cannot be eliminated despite work rules enforcement and safety awareness campaigns since many such accidents which result in fatalities are due to employee being trained but not following the employer's training and policies PRESENT STATUS OF RULES According to information received from the OSHA office in February 1993 the final Rules are to be published no later than July 1993 and possibly as soon as March 1993 OSHA closed their receipt of comments in March 1991 and no further changes in the rules are thought possible A2-20 


CONCLUSION The OSHA 1910.269 which proposes to cover electric utility operation and maintenance work rules affects a multitude of working procedures as are summarized in this paper It is not possible at the present time to assess the final structure of the Rules as may be proposed in 1993 or subsequent years Since the comments from the utility associations APPA and EEI were made following the initial release of the proposed OSHA Rules in 1989 a significant amount of time has elapsed where other events have occurred which may affect the form of the final Rules The 1993 NESC went into effect in August 1992 and includes some of the requirements to which the commenters objected For example a significant requirement in the Part 4 of the 1993 NESC requires that rubber gloves be utilized on exposed energized parts of facilities operating at 50 to 300 volts This requirement is in conflict with EEl\222s proposed change to the OSHA Rules which would still allow working such secondary facilities without the use of rubber gloves Electric utilities are advised to review the January 31 1989 proposed operation and maintenance Rules as summarized in this paper and to review their procedures which would be affected by application of the Rules Many of the procedures proposed in the Rules provide valuable guidance in electric utilities\222 operation and maintenance activities Where the cost impact is not significant, it is recommended that utilities consider implementing such procedures in expectation of the Rules being published in the next few months Also it would be appropriate for electric utilities to review the 1993 edition of the NESC since there are portions of the Rules which have resulted in changes in the NESC These changes mainly occur in Part 4 Rules for the Operation of Electric Supply and Communications Lines and Equipment The concerns which the commenters have addressed regarding the cost impact and the resulting benefits experienced as a result of the promulgation of the Rules are real ones and must be addressed in the final Rules As a result this paper cannot present a conclusion regarding the full impact of the Rules The development of such Rules continue to be an ongoing matter and will undoubtedly require later analysis when the final rules are published A2-21 


