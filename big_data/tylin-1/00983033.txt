Mining Cases in the Optimization of GSM Network Wding Lain Department of Electronic Engineering Beiling University of Posts and Telecommunications Mail Box 117 Zip Code: 100876 BeiTing China Phone 86-10-62282747,86-13910614659 Email silenta263.net Abstract Optimization is becoming increasingly When the engineers do the optimization, they important to both operators and venders of GSM 
begin with data from OMC Operation and network When the engineers do the optimization they Maintenance Center and analyze them with their begin with data from OMC Operation and knowledge and experience till they have found the Maintenance Center and analyze them with their reasons causing the low guideline Data in OMC knowledge and experience till they have found the record the status of the network But the amount of the 
reasons causing the low guideline But the amount of data is very vast and there exist some information the data is very vast, and there exist some information even the experienced engineers do not know yet So even the experienced engineers do not know yet So how to make the best of the data and obtain more how to make the best of the 
data and obtain more information of the network became an interesting information of the network became an interesting investigation investigation In this thesis we dejined the purpose of KDD in the optimization as cases The algorithms to jind the cases are described in detail And the future 1.2 KDD Overview work is also given Key Words GSM KDD, CBR 
I Introduction KDD Knowledge Discovery from Database is the process of identifying valid novel potentially useful and ultimately understandable structure in data It is a powerful new technology with great potential to help people get more important knowledge fiom their data repository Data mining tools scour databases for hidden patterns finding predictive information that  Optimization Of GSM network experts may miss because it lies outside their From 
the description we know that KDD is the very technique to find potential knowledge in the data In recent years mobile telecommunication has expectations pi grown with surprising speed and the network has become la%er and larger In the first Period People mostly focus on the network planning and fromo~c optimization was not an important thing But now how to efficiently use the current network becomes the care 
of operators and vendors Operators hope to dig the potential of current network and try their best to decrease investment Vendors Such as Ericsson Nokia, Motorola\must provide better post support for competition accordingly I GSM is the widely used system in the whole world Optimization of GSM network is the main point of this thesis 0-7803-70 10-4/0 l/$10.000200 1 IEEE 
38 In fact KDD has been used in the telecommunication network before for example to see 3 In this domain, KDD has been mostly used to find the relationship among alarm sequence, and the association rules was the most concerned model But to find the knowledge for optimization of GSM network what kind of knowledge should be considered It is not the association rule but the case 


1.3 Case in the optimization of GSM network When the engineers do the optimization to GSM network they often use experience from past work CBR case based reasoning\technology can be used to model their way of thinking CBR is based on a memory-centered cognitive model 4 The basic idea is that past experiences can be remembered and adapted to guide solving problem In CBR, rather than creating a solution from scratch cases similar to the current problem are retrieved from memory The best match is selected and adapted to fit the current case based on the differences and similarities between the two cases In CBR system knowledge is represented with cases so the target of KDD for the optimization should be the cases In the optimization case means that when something is wrong which guidelines are abnormal and what degree these guidelines result in the error And it should be noted that every optimization task is for some cells For example when the Call Drop Rate is high there are simultaneously three abnormal guidelines 1 The quality of Up-Link is bad 2.The interference in the Up-Link is high 3.The quality of Down-Link is good The simplest case is to just list all the problems and reasons as follow Cuse I    problem  Call Dro reason3 Qual-Down In the simple representation all the reasons react on the problem in the same degree, but it is not true So we use several levels to denote the degrees, the less the number of level the stronger the relation of this reason  39 On the other hand most guideline is continuous data and it can\222t be decided to 221\221wong\224 or 223correct\224 simply It is normal or abnormal and the degree must be judged through fuzzy logic 6 Its abnormal degree obtained through fuzzy logic is named by 223degree\224 So the value and its subjection must be recorded in the case Only the degree is not adequate Look at that the Qual-Up is abnormal when the value is too 223low\224 though the Interf-Down is abnormal when the value is too 223high\224 So the flag must be introduced into each reason The final case is as follow 2 Denotations For the convenience of description a set of denotation is defined In the domain of optimization for GSM network the problems concerned is finite for example Call Drop Rate High TCH Traffic Channel Congestion Rate 222 High and so on Formally let P  p pz   p be the problems For each problem there is a function to judge it Let F  fi f f be the functions in which f 1 S i I n is the judge function of pi where n is the number of problems The result of functions will be 223correct\224 or 223wrong\224 and represented by R  yj in which 


C means correct, and W means wrong For each cell, there may be different number of problems. Let S  isij 1 be the status matrix coming from P  When problem q\(1 li 5n exists in cell  then S  1 else S  0 When try to solve problems there are many reasons to be considered Let R  rl r er be the reasons where m is the number of reasons For each cell all the reasons should be judged Let G  g  g g  be the functions and task to fmd problems of each cell can be described as follows Input  p F Output s The algorithm1 is to go through P of each cell once and record the problems A Ig orithml  i I While  i I cellnumber j=1 While j I n  gj\(lIi-<m is the judge function of ri  Let CS  CSij be the reasons of cells. When reason is correct in celli CS  1 else CS  0 represented by The purpose of KDD is case which can be cAsE={rk,rk+l r,}~\(P,,P,+1,...P where t is the number of problem in this case, and s is the number of reason causing the problems k and 1 are both integer 3.AlgoriQhm for Mining Cases Because the number of problems is finite and will not be large we focus on finding the reasons. Notice that we can regard the case as some special association rule so we design the basic algorithm referring to classic algorithm to find association rules and adapt it to find cases 3.1 Finding problems of each cell First of all which cells has problems must be found Maybe there is one problem in a cell Also maybe there is more than one problem in a cell The if fj\(pj of cellj C else s o Y j  itt 3.2 Finding reasons Only the reasons of the cell with problems should be found. The task to find problems of each cell can be described as follows Input  P F S Output cs A lg orithm2  i l while i I number of cell if  there are at least one problem in celli  j I While j I m 40 


if gj\(pj of cell C  cs 1 cs o else j  i  3.3 Clustering to decrease the reason list It often happens that once some reason exists several other reasons also exist because not all relations of the reasons have been known yet So using clustering to find these relations can decrease the reason list and make the result clearer and more useful Traditional clustering method is to define a distance function, and for each item find which items are clearest to it 5 The key idea can be seen as 223from little to more\224 It will go through database for several times equal to the number of final subsets Considering that in most situations going through database will take much time this method is time expensive To decrease the spent time a new algorithm is proposed Generally the reasons and the problems of one cell are recorded in one row that is to say one row corresponds all records of one cell Following description will use cell and row by the same meaning The algorithm\222s key idea is to suppose all the items in the first cell belong to the same subset and use the later rows to validate it It can go through the database only once In algorighm3, the idea of \223suppose and prove\224 is used. The result of this algorithm is a non-crossing subsets list named 223 s List 224 in which each subset include one or more reasons and each reason only belongs to one subset The subset in S-List was expressed by 221\221 Subset 224 plus its serial number 221\221 tmpSubSet 222\222 and 221\221 NewSubSet 224 both represent temporary subset which maybe dropped or added into S  List First of all, suppose that all the reason1 in the row 1 exists altogether and put them into Subset Then go to following row and prove all the former subsets. When some reasons of one subset are in the new row and others are not in, divide this subset into two subsets A Ig ovithm3  i I j I While j I m  DO\(put Rj into Subset DO put Subset into S List  j 1 While i I number of cells with problems   i j l While  j I number of problems incell   DO put pi into NewSubSet  j  1 k-1 Khile k I Subsets number in S  List   j=1 While  j lproblem number in NewSubSet   if SubSet existsin cell  DO  Remove the problem from NewSubSet  41 


else DO  Remove the problem from Subset  DO Add the problem into tmpSubSet 1 if  number of problems in Subset  0  3 DO\(Remove Subset  00000000 410011110 if  number of problems in tmpSubSet  0  in the first of each row represent that the reasons of the corresponding cell has been considered 1 rl  rz r3  Initialization r3exist simultaneously in the second row but rl does not exist 3 No change happens because the cell has no problem 4 5  rz 3 r3  2214 Y 2215  DO  Add tmpSubSet into S  List  if  number of problems in NewSubSet  0  DO Add NewSubSet into S List  1 3.4 An example For an instance, look at follow table 1 21 I1 I1 lo Io I1 lo lo obtained Through algorithm2 cs  221I 3 221ziY3 2217 9 2213  Y rl 3 2214 Y 2215 1 2212 9 2213 9 2214 I is obtained Now see the process of algorighm3 the number 3.5 Extract cases After above algorithms S CS S  List have already been known Now the cases can be extracted from them through algorithm4 A lg orithm4  i 1 While i number of cells  if  the very problems of cell is not already in all CASE  DO Add problems into j 1 while j number of reasons in NewCase  cell  if all the reasons in the subset which reason j belongs to are not in NewCase  42 


DO Add reason into NewCase  j  i  4 Conclusion and future network How to mine cases in the optimization of GSM network is showed in this paper The four algorithms concerned are listed The finished experiment indicated that these methods are able to help people find the cases exist among vast data from OMC and use these cases in the optimization Currently work is ongoing to develop a Knowledge-Mining module in the 10s Intelligent Optimization System for GSM network that is being developed 10s is mainly based on concept of expert system But its knowledge comes from real expert until now When the mining module is integrated 10s will be more useful and easer to upgrade There are still some problems remained 1.Currently the F is defined in advance. But in practice it will cause more overload to user and imprecise It is needed to decide it by some way 2.Now the cases are all \223positive\224 whereas the 223negative\224 cases will also be in demand 3.Current algorithm has not considered the 223dimensionality\224 But there do exist dimensionality For instance when the handover success rate is considered, there will be many values since there are many adjacent cells of one cell These problems are being researched and will be solved soon Reference 2 P.S.Bradley Usama M.Fayyad 0.L.Mangasarian 223Mathematical Programming for Data Mining Formulations and Challenges\224 January 1998 3 K.Hatonen,M.Klemettinen H.Mannila P.Ronkainen H.Toivonen Knowledge Discovery from Telecommunication Network Alarm Databases The 12th International Conference on Data Engineering\(ICDE\22296\New Orleans, Louisiana Februarymarch 1996 4 Li D.Xu Case-Based Reasoning IEEE potentials the magazine for up-and-coming engineers 5 George H John Enhancements to the Data Mining Process, March 1997, pp8-18 6 Yager R.R., and Zadeh L A 223An Introduction to Fuzzy Logic: Applications in Intelligent Systems\224 Kluwer Academic Publishers 1991 PP4-5 DECEMBER 1994 pp 10-13 I WuJing Junde.Song Intelligent System for Optimization of Mobile Telecommunication Mobile Telecommunications, May 2000 43 


Lines 3-9 loop selects an item for the next node and solve it More specifically it selects an item ifm for next node as show in line 3 If there is no node selected it goes to line 10 Otherwise it enters the loop body A new base is calculated at line 4 the infDoIfem method is called and the new-tail is set Then line 7 solves the sub node Upon returning from the sub node it adds the updated newsinfinto the infat line 8 and also saves the new-mf by method AddMf;/nf at line 9 It returns the mfi of the node at line IO I  Recursively find mfi  param base The tidSet for Current head  param tail The possible extension of the head  Bparam ginf The global information return The local maximal frequent itemsets I private Vector infMfi\(int[l base Shorts tails Vector ginfl 1  pep  voata.calSuglbase.tails 2 TInf inf  new TInfrainf oeo tails  3 while\(\(itm=inf.selectill~=Ol 4 int[l newbase  vOata.getBaSeiba5e.itml 5 Vector newginf=inf.DoItem\(itml 6 Shorts newtail=new Shorts\(inf.tail1 7 Vector newmfi=infMfiinewbase,newtail,newginfl 8 inf AddInfa\(newginfl  9 inf AddMfiInf newmfil  10 return inf.mfi Figure 10 The infMfi method For the node at the level 0 the local new-mf is actually maximal frequent itemsets and can output directly into a file Since its information for future searching is saved by the method inJAddMfilnf in line 9 there is no need to keep the new-mfi and the memory of new-mfi can he released 5 Experimental Results 10 1 0.1 0.01 Mnirmrn Support  Figure 11 Running time on Mushroom We compare SmartMiner with Mafia and GenMax All of them are implemented in Java JDK1.3 For fair comparison the three methods use the same vertical data model VData As we discussed before there are many ways to implement the vertical data model In this paper our purpose is to study the efficiency of different search strategies We choose VData because it takes less memory and is easy to implement The experiment was done on a lGhr Celeron with 512 MB of memory A detailed comparison of SmartMiner with Mafia and GenMax was conducted on two datasets Connect-4 and Mushroom Figure 11 shows the performance comparison of the three methods on Mushroom All three methods use the PEP pruning technique Our running time does not include the input time but does include the output time The horizontal axis shows minimum support in percentage The vertical axis is the running time in seconds In general SmartMiner is one order of magnitude faster than both Mafia and Genmax When minimal support is high Mafia is faster than Genmax Low minimal support increase the number of MFI, then Genmax performs better than Mafia 1000 10 1 0.1 0.01 Mnirmrn Support  Figure 12 Search tree size on Mushroom Figure 12 compares the sizes number of nodes in a tree of the search trees for the three methods From the figure we noticed that Genmax generates 10 times more nodes than SmartMiner and also much more than Mafia This indicates that the static ordering in GenMax is not as efficient as the dynamic reordering used by both SmartMiner and Mafia Moreover we noticed that SmartMiner generates less nodes than Mafia which is due to the heuristic select function used the SmarMiner 10000 I 1 5 1000   a 100 0 10 1 0.1 0.01 Minimum Support  Figure 13 the  of counting on Mushroom Figure 13 compares the number of support counti.ng which shows the number of times that the private method  base short item in VData is called As shown in Figure 13, Genmax calls the calSup methods significantly more than both SmartMiner and Mafia 576 


Further SmartMiner needs less number of support counting than Mafia Since GenMax introduces a fast superset checking algorithm the performance gain of dynamic reordering of Mafia is mitigated by the increasing time for superset checking when the set of MFI becomes large This is the reason we see in Figure 10 and Figure 13 that Mafia is better than Genmax when minimal support is high and the reverse when minimal support is low 10000 P I    smrtMinx 95 90 80 70 60 50 40 30 20 10 Mnirmm Support X Figure la Running time on Connect Figure 14 shows the performance comparison of the three methods for the Connect dataset Again we noticed the significant performance improvements of SmartMiner than Mafia and GenMax 6 Conclusion In this paper we propose the SmartMiner algorithm to find exact maximal frequent itemsets for large datasets The SmartMiner algorithm is able to take advantage of the information gathered from previous steps to search for MFI First it gathers global and local tail information and uses an heuristic select function to reduce the search tree Second the passing oftail information eliminates the need of known MFllfor supersel checking Smartminer does not require superset checking which can be very expensive Finally SmartMiner also reduces the number of support counting for determining the frequency of tail items and thus greatly saves counting time Our experiments reveal that the SmartMiner algorithm yields an order of magnitude improvement over Mafia and GenMax in generating the MFI on the two datasets Acknowledgements The authors wish to thank Professor Mohammed J Zaki for stimulating discussion in the performance study References I R Agrawal and R Srikant Fast algorithms for mining association des In Proceedings of the 20th VLDB Conference Santiago, Chile, 1994 2 R Agarwal C Agganval and V Prasad A tree projection algorithm for generation of frequent itemsets. Journal of Parallel and Distributed Computing 2001 3 Roberta Bayardo Efficiently mining long patterns from databases In ACM SIGMOD Conference 1998 4 D Burdick M. Calimlim, and J Gehrke MAFIA a maximal frequent itemset algorithm for transactional databases In Intl. Conf on Data Engineering Apr 2001 5 K Gouda and M J Zaki Efftciently Mining Maximal Frequent Itemsets Proc of the IEEE Int Conference on Data Mining, San Jose 2001 6 J Han I Pei and Y Yin Mining Frequent Patterns without Candidate Generation, Proc 2000 ACM-SIGMOD Int Conf on Management of Data SIGMODOO Dallas TX May 2000 7 Heikki Mannila Hannu Toivonen and A Inken Verkanw Eflicient algorithms for discovering association rules In KDD 94 AAAl Workshop on Knowledge Discovery in Databases pages 181-192, Seattle Washington July 1994 8 I S Park M Chen, and P S Yu An effective hash based algorithm for mining association rules In Proc ACM SIGMOD Intl Conf Management of Data May 1995 9 N Pasquier Y Bastide R Taouil and L Lakhal Discovering frequent closed itemsets for association rules In 7th Intl Conf on Database Theory January 1999 IO 1 Pei, J Han, and R Mao Closet An efficient algorithm for mining frequent closed itemsets In SIGMOD Int'l Workshop on Data Mining and Knowledge Discovery May 2000 ll]Brin,S.;Mohvani,R.;Ullman,J.;andTsur,S 1997 Dynamic Itermet Counting and Implication Rules for Market Basket Data In Proc of the 1997 ACM-SIGMOD Conf On Management of Data 255-264  121 Ashok Sarasere Mward Omiecinsky, and Shamkant Navathe An eflicient algorithm for mining association rules in large databases In 21st Int'l Conf on Very Large Databases VLDB ZTrich, Switzerland, Sept. 1995  131 Hmu Toivonen. Sampling large databases for association rules In Proc of the VLDB Conference Bombay India September 1996 14]M I Zaki S Parthasarathy M Ogihara and W Li New algorithms for fast discovery of association rules In 3rd Intl Cod on Knowledge Discovery and Data Mining August 1997  151 M J Zaki and C. Hsiao Charm An efficient algorithm for closed association rule mining In Technical Report 99-1 0 Computer Science, Rensselaer Polytechnic Institute, 1999  161 Q Zou W Chu D Johnson and H Chiu A Panern Decomposition \(PD\Algorithm for Finding All Frequent Panems in Large Datasets Proc of the IEEE Int. Conference on Data Mining, San lose 2001 17]Q Zou W Chu D Johnson and H Chiu Panern Decomposition Algorithm for Data Mining of Frequent Patterns Joumal of Knowledge and Information System Volume 4 page 466482.2002 577 





BAT841 CAR881 I COD701 COD721 COL891 871 LAM89 J LEC88 MAC851 W861 Alashqur A.M Su S.Y.W and Lam H A Rule-based Language for Deductive Object Oriented Databases Proceedings of the 6th Inter national Conference on Data Engineering Los Angeles CA Feb 5-9 1990 Bancilhon F et al FAD a Powerful and Si ple Database Language Proceedings of the 13th VLDB Conference Brighton 1987 Banerjee J et al Queries in 8ject-oriented Databases Proceedings of the 4th Intl Confer ence on Data Encrineerine Los Angeles CA  97-105 I I  1988 pp 31-38 Batory D.S and Buchmann A.P Molecular Obiects Abstract Abstract Data Tvws and Data M6deIsi A Framework Proceedings Intl Confer ence on VLDB 1984, pp 172-184 Carey M J et al A Data Model and Query Language for EXODUS ACM-SIGMOD Confer ence 1988, pp. 413-423 Chuang H S Operational Role Processing in a Prototype OSAM KBMS Master's thesis University of Florida 1990 Codd E A Relational Model of Data for Large Shared Data Bank CACM Vol 13 No 6 1970 pp 377-387 Codd E R:lational Completeness of Database Sublanguages in Data Base Systems Rustin R ed Prentice-Hall Inc Englewook Cliffs NJ Colby L S A Recursive Algebra and Query Optimization for Nested Relations ACM SIGMOD Conference 1989 pp 273-283 Fishman D H et al Iris An Object-Oriented Database Management System ACM Transaction on Office Infomation Systems 51 1987 pp49 69 Goldberg A Introducing the Smalltalk-80 Sys tem Byte Aug 1981. pp.14-26 Hammer M and Mcleod D Database Descrip tion with SDM A Semantic Association Model Kim W et al Composite Object Support in an Object-oriented Database System Proceedings of King R Sembase A Semantic DBMS the Proceedings of the First Intemational Workshop on Expert Database Systems Oct 1984, pp.151 171 Lam H et al Prototype Implementation of an Object-oriented Knowledge Base Management System Proceedings of PROCIEM 89 Orlando Lecluse C Richard P and Velez F 02 an Object-Oriented Data Model ACM-SIGMOD Conference 1988, pp 425-433 MacGregor R ARTEL--A Semantic Front-End to Relational DBMSs Proceedings of VLDB 85 Atlanta GA April 1988 Maier D et al Development of an Object oriented DBMS Proc of OOPSLA 86 Confer ence Sept 29  Oct 2 Portland Oregon pp 472-482 1971 pp.65-98 ACM TODS Vol 6 NO 3 1981 pp 351-368 OOPSLA, Oct 4-8 1987 FL pp 118-125 FL NOV 13-15, 1989 SU86 SUSS SU89 ZD087 Manola F and Dayal U PDM An Object Oriented Model Int'l Workshop On Object Oriented Database Systems 1986, pp 18-25 Pant S An Intelligent Schema Design Tool for OsAM Master's thesis University of Florida 1990 Rowe L A and Stonebraker M R The POSTGRES Data Model Proceedings of the 13th VLDB Conference Brighton 1987 pp 83-96 Shaw G M and ZdoNc S B A Query Alge bra for Object-Oriented Databases IEEE Trans on Data Engineering 12\(3 pp 154-162 Feb 1990 Shipan D The Functional Data Model and the Data Language DAPLAX ACM Trans Database System ql March 1918 Singh M Transaction Oriented Rule Processing in an Object-Oriented Knowledge Base Manage ment System Master's thesis University of Florida 1990 Su S.Y.W Modeling Integrated Manufacturing Data With SAM IEEE Computer January Su S.Y.W et al An Object-oriented Comput ing Environment for Productivity Jmprovement in Automated Design and Manufacturing Project Summary PROCIEM 88,Orlandq E Nov 14-15 1988 Su S.Y.W Kxishnamurthy V and Lam H An Object-oriented Semantic Association Model OsAM AI in Industrial Engineering and Manufacturing Theoretical Issues and Applica tions Kumara S Soyster A.L and Kashyap R.L eds American Institute of Industrial Engineering 1989 Su S.Y.W Guo M and Lam H Association Algebra A Mathematical Foundation for Object Oriented Databases to be submitted to Trans on Knowledge and Data Engineering Tsurt S and Zaniolo C An Implementation of GEM  Supporting a Semantic Data Model on a Relational Back End Proceedings of the ACM SIGMOD Jntl Conference on the Management of Data 1984 pp 286-295 Frederick Ty The Design and Implementation of a Graphics Interface for an Object-oriented Language Master's thesis University of Florida 1988 Zaniolo C The Database language GEM Proceedings of the ACM SIGMOD Intl Confer ence on the Management of Data 1983 Zdonik S B Skarra A H and Reiss S P An Object Server for an Object-oriented Database System Intemational Workshop on Object oriented Database Systems Pacific Grove CA Sept 1986 Zdonik S.B The implementation of a Shared Clustered Memory System for an 0-0 Database System ACM Trans on Office Information Sys tems Apr 1987 1986 pp.34-49 32 I 


It can also be added to cell CrossSales.3\(PC, printer one_year,\205 5  Distributed and Incremental Rule Mining There exist two ways to deal with association rules 267  Static that is, to extract a group of rules from a snapshot, or a history, of data and use "as is 267  Dynamic that is, to evolve rules from time to time using newly available data We mine association rules from an e-commerce data warehouse holding transaction data. The data flows in continuously and is processed daily Mining association rules dynamically has the following benefits 267  223Real-time\224 data mining, that is, the rules are drawn from the latest transactions for reflecting the current commercial trends 267  Multilevel knowledge abstraction, which requires summarizing multiple partial results. For example association rules on the month or year basis cannot be concluded from daily mining results. In fact multilevel mining is incremental in nature 267  For scalability, incremental and distributed mining has become a practical choice Figure 3: Distributed rule mining Incremental association rule mining requires combining partial results. It is easy to see that the confidence and support of multiple rules may not be combined directly. This is why we treat them as \223views\224 and only maintain the association cube, the population cube and the base cube that can be updated from each new copy of volume cube. Below, we discuss several cases to show how a GDOS can mine association rules by incorporating the partial results computed at LDOSs 267  The first case is to sum up volume-cubes generated at multiple LDOSs. Let C v,i be the volume-cube generated at LDOS i The volume-cube generated at the GDOS by combining the volume-cubes fed from these LDOSs is 345   n i i v v C C 1  The association rules are then generated at the GDOS from the centralized C v  214  The second case is to mine local rules with distinct bases at participating LDOSs, resulting in a local association cube C a,I a local population cube C p,I  and a local base cube C b,i at each LDOS. At the GDOS, multiple association cubes, population cubes and base cubes sent from the LDOSs are simply combined, resulting in a summarized association cube and a summarized population cube, as 345   n i i a a C C 1   345   n i i p p C C 1  and 345   n i i b b C C 1  The corresponding confidence cube and support cube can then be derived as described earlier. Cross-sale association rules generated from distinct customers belong to this case In general, it is inappropriate to directly combine association cubes that cover areas a 1 205, a k to cover a larger area a In the given example, this is because association cubes record counts of customers that satisfy   customer product merchant time area Doe TV Dept Store 98Q1 California Doe VCR Dept Store 98Q1 California customer product merchant time area Doe VCR Sears 5-Feb-98 San Francisco Joe PC OfficeMax 7-Feb-98 San Francisco customer product merchant time area Doe TV Fry's 3-Jan-98 San Jose Smith Radio Kmart 14-Jan-98 San Jose Association   population      base          confidence      support cube               cube                cube         cube                cube LDOS LDOS GDOS 


the association condition, and the sets of customers contained in a 1 205, a k are not mutually disjoint. This can be seen in the following examples 214  A customer who bought A and B in both San Jose and San Francisco which are covered by different LDOSs , contributes a count to the rule covering each city, but has only one count, not two, for the rule A  336  B covering California 214  A customer \(e.g. Doe in Figure 3\who bought a TV in San Jose, but a VCR in San Francisco, is not countable for the cross-sale association rule TV  336 VCR covering any of these cities, but countable for the rule covering California. This is illustrated in Figure 3 6  Conclusions In order to scale-up association rule mining in ecommerce, we have developed a distributed and cooperative data-warehouse/OLAP infrastructure. This infrastructure allows us to generate association rules with enhanced expressive power, by combining information of discrete commercial activities from different geographic areas, different merchants and over different time periods. In this paper we have introduced scoped association rules  association rules with conjoint items and functional association rules as useful extensions to association rules The proposed infrastructure has been designed and prototyped at HP Labs to support business intelligence applications in e-commerce. Our preliminary results validate the scalability and maintainability of this infrastructure, and the power of the enhanced multilevel and multidimensional association rules. In this paper we did not discuss privacy control in customer profiling However, we did address this issue in our design by incorporating support for the P3P protocol [1 i n  ou r data warehouse. We plan to integrate this framework with a commercial e-commerce system References 1  Sameet Agarwal, Rakesh Agrawal, Prasad Deshpande Ashish Gupta, Jeffrey F. Naughton, Raghu Ramakrishnan, Sunita Sarawagi, "On the Computation of Multidimensional Aggregates", 506-521, Proc. VLDB'96 1996 2  Surajit Chaudhuri and Umesh Dayal, \223An Overview of Data Warehousing and OLAP Technology\224, SIGMOD Record Vol \(26\ No \(1\ 1996 3  Qiming Chen, Umesh Dayal, Meichun Hsu 223 OLAPbased Scalable Profiling of Customer Behavior\224, Proc. Of 1 st International Conference on Data Warehousing and Knowledge Discovery \(DAWAK99\, 1999, Italy 4  Hector Garcia-Molina, Wilburt Labio, Jun Yang Expiring Data in a Warehouse", Proc. VLDB'98, 1998 5  J. Han, S. Chee, and J. Y. Chiang, "Issues for On-Line Analytical Mining of Data Warehouses", SIGMOD'98 Workshop on Research Issues on Data Mining and Knowledge Discovery \(DMKD'98\ , USA, 1998 6  J. Han, "OLAP Mining: An Integration of OLAP with Data Mining", Proc. IFIP Conference on Data Semantics DS-7\, Switzerland, 1997 7  Raymond T. Ng, Laks V.S. Lakshmanan, Jiawei Han Alex Pang, "Exploratory Mining and Pruning Optimizations of Constrained Associations Rules", Proc ACM-SIGMOD'98, 1998 8  Torben Bach Pedersen, Christian S. Jensen Multidimensional Data Modeling for Complex Data Proc. ICDE'99, 1999 9  Sunita Sarawagi, Shiby Thomas, Rakesh Agrawal Integrating Association Rule Mining with Relational Database Systems: Alternatives and Implications", Proc ACM-SIGMOD'98, 1998   Hannu Toivonen, "Sampling Large Databases for Association Rules", 134-145, Proc. VLDB'96, 1996   Dick Tsur, Jeffrey D. Ullman, Serge Abiteboul, Chris Clifton, Rajeev Motwani, Svetlozar Nestorov, Arnon Rosenthal, "Query Flocks: A Generalization of Association-Rule Mining" Proc. ACM-SIGMOD'98 1998   P3P Architecture Working Group, \223General Overview of the P3P Architecture\224, P3P-arch-971022 http://www.w3.org/TR/WD-P3P.arch.html 1997 


Plenary Panel Session 30 XML Databases   Moderator: Michael Carey, IBM Almaden Research Center USA Panelists Adam Bosworth, Microsoft Corporation USA David De Witt University of Wisconsin-Madison, USA Alon Levy University of Washington USA Bruce Lindsay IBM Almaden Research Center USA Jennifer Widom Stanford University USA Demo Session 1 Web Query Optimizer  661 V Zadorozhny L Bright L Raschid T Urhan and M Vidal ReQueSS: Relational Querying of Semi-structured Data  664 R Sunderraman The IDEAL Approach to Internet-Based Negotiation for E-Business  666 J Hammer C Huang Y Huang C Pluempitiwiriyawej M Lee H Li L Wang Y Liu and S Su READY A High Performance Event Notification Service  668 R Gruber B Krishnamurthy, and E Panagos A Multimedia Information Server with Mixed Workload Scheduling  670 G Nerjes DISIMA An Object-Oriented Approach to Developing an Image Database System  672 V Oria T Ozsu P Iglinski B Xu and L Cheng Demo Session 2 The Collaboration Management Infrastructure  677 H Schuster D Baker A Cichocki D Georgakopoulos and M Rusinkiewicz Assisting the Integration of Taxonomic Data The LITCHI Toolkit  679 I Sutherland J Robinson S Brandt A Jones S Embury W Gray R White and F Bisby TheaterLoc: Using Information Integration Technology to Rapidly Build Virtual Applications  681 G. Barish Y.4 Chen D Dipasquo, C Knoblock S Minton I Muslea and C Shahabi Lineage Tracing in a Data Warehousing System  683 Y Cui and J Widom xiii 


The Mentor-Lite Prototype A Light-Weight Workflow Management System  685 J Weissenfels M Gillmann 0 Roth, G Shegalov and W Wonner Location Prediction and Queries for Tracking Moving Objects  687 0 Wolfson B Xu and S Chamberlain Semiorder Database for Complex Activity Recognition in Multi-Sensory Environments  689 S Bhonsle A Gupta S Santini and R Jain Tutorial 1 Web Information Retrieval  693 M Henzinger Tutorial 2 Mobile and Wireless Database Access for Pervasive Computing  694 P Chrysanthis and E Pitoura Tutorial 3 Data Mining with Decision Trees  696 J Gehrke Tutorial 4 Directories Managing Data for Networked Applications  697 D Srivastava Tutorial 5 Indexing High-Dimensional Spaces Database Support for Next Decade\222s Applications  698 S Berchtold and D Keim xiv 


 T5.I2.D100K T10.I4.D100K T15.I4.D100K T10.I6.D400K T10.I6.D800K T10.I6.D1600K Optimizations across Databases 5 0 5 10 15 20 25 30 35 40 45 Improvement COMP TREE COMP-TREE 1 2 4 8 1 2 4 8 1 2 4 8 2 4 8 2 4 8 1 2 4 8 Processors Databases Figure 5 Effect of Computation and Hash Tree Balancing good as the COMP optimization The reason that the hash tree balancing is not suf\336cient to offset inherent load imbalance in the candidate generation in this case The most effective approach is to apply both optimizations at the same time COMP-TREE The combined effect is suf\336cient to push the improvements in the 40 range in the multiple-processor case On 1 processor only hash tree balancing is bene\336cial since computation balancing only adds extra cost 5.4 Short-circuited Subset Checking Figure 6 shows the improvement due to the short-circuited subset checking optimization with respect to the unoptimized version The unoptimized version is the Apriori algorithm due to Agrawal et al 5 The results are presented for dif ferent number of processors across dif ferent databases The results indicate that while there is some improvement for databases with small transaction sizes the optimization is most effective when the transaction size is large In this case we get improvements of around 25 r the unoptimized version To gain further insight into this optimization consider 336gure 7 It shows the percentage improvement obtained per iteration on applying this optimization on the T20.I6.D100K database It shows results only for the uni-processor case r similar results were obtained on more processors We observe that as the iteration k increases there is more opportunity for shortcircuiting the subset checking and we get increasing bene\336ts of up to 60 The improvements start to fall off t the high end where the number of candidates becomes small resulting in a small hash tree and less opportunity for short-circuiting It becomes clear that is an extremely effective 15 Proceedings of the 1996 ACM/IEEE Conference on Supercomputing \(SC\22296 0-89791-854-1/96 $ 10.00 ACM 


 T5.I2.D100K T10.I6.D800K T15.I4.D100K T20.I6.D100K procs across Databases 0 5 10 15 20 25 Improvement 1 2 4 8 Figure 6 Effect of Short-circuited Subset Checking 23456789101112 Iterations 0 10 20 30 40 50 60 improvement T20.I6.D100K Figure 7  Improvement per Iteration  proc   16 Proceedings of the 1996 ACM/IEEE Conference on Supercomputing \(SC\22296 0-89791-854-1/96 $ 10.00 ACM 


optimization for larger transaction sizes and in cases where there are large number of candidate k itemsets 6 Conclusions In this paper e presented a parallel implementation of the Apriori algorithm on the SGI Power Challenge shared memory multi-processor We also discussed a set of optimizations which include optimized join and pruning computation balancing for candidate generation hash tree balancing and short-circuited subset checking We then presented experimental results on each of these Improvements of more than 40 were obtained for the computation and hash tree balancing The short-circuiting optimization was found to be extremely effective for databases with large transaction sizes Finally we reported the parallel performance of the algorithm While we d good speed-up we observed a need for parallel I/O techniques for further performance gains References  R Agra wal T  Imielinski and A Swami Database mining A performance perspecti v e  I n IEEE Trans on Knowledge and Data Engg  pages 5\(6 1993  R Agra wal T  Imielinski and A Swami Mining association rules between sets of items in lar ge databases In Proc M SIGMOD Intl Conf Management of Data  May 1993  R Agra wal H Mannila R Srikant H T o i v onen and A I V erkamo F ast disco v ery of association rules In U F et al editor Advances in Knowledge Discovery and Data Mining  MIT Press 1996  R Agra wal and J Shafer  P arallel mining of association rules design implementation and e xperience Technical Report RJ10004 IBM Almaden Research Center San Jose CA 95120 Jan 1996  R Agra wal and R Srikant F ast algorithms for mining association rules In Proc 20th VLDB Conf  Sept 1994  M Cierniak W  Li and M J Zaki Loop scheduling for heterogeneity  I n 4th IEEE Intl Symposium on High-Performance Distributed Computing also as URCS-TR 540 CS Dept Univ f Rochester  Aug 1995  M Holsheimer  M  K ersten H Mannila and H T o i v onen A perspecti v e on databases and data mining In 1st Intl Conf Knowledge Discovery and Data Mining  Aug 1995  M Houtsma and A Swami Set-oriented mining of association rules In RJ 9567  IBM Almaden Oct 1993  H Mannila H T o i v onen and I V erkamo Ef 336cient algorithms for disco v ering association rules In AAAI Wkshp Knowledge Discovery in Databases  July 1994  J S P ark M Chen and P  S Y u  A n e f fecti v e hash based algorithm for mining association rules In Proc M SIGMOD Intl Conf Management of Data  May 1995 17 Proceedings of the 1996 ACM/IEEE Conference on Supercomputing \(SC\22296 0-89791-854-1/96 $ 10.00 ACM 


 J S P ark M Chen and P  S Y u  E f 336cient parallel data mining for association rules T echnical Report RC20156 IBM T J Watson Research Center Aug 1995  G Piatetsk y-Shapiro Disco v ery  presentation and analysis of strong rules In G P S et al editor  KDD  AAAI Press 1991  A Sa v asere E Omiecinski and S Na v athe An ef 336cient algorithm for mining association rules in large databases In Proc 21st VLDB Conf  1995  M J Zaki M Ogihara S P arthasarathy  and W  Li P arallel data mining for association rules on shared-memory multi-processors Technical Report 618 Department of Computer Science University of Rochester 618 1996 18 Proceedings of the 1996 ACM/IEEE Conference on Supercomputing \(SC\22296 0-89791-854-1/96 $ 10.00 ACM 


