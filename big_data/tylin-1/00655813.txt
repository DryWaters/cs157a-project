 0.0001 0.001 0.01 0.1 1 10 100 1000 10000 0.002 0.0022 0.0024 0.0026 0.0028 0.003 0.0032 0.0034 0.0036 0.0038 Execution Time\(s minSup m=4, k=20, n=10, w1=1 Opt, w2=0 Opt, w2=100 Opt, w2=500  Int, w2=0   Int, w2=100   Int, w2=500  1 10 100 1000 10000 100000 0.1 0.15 0.2 0.25 0.3 0.35 Execution Time \(s minSup k=5, m=1, n=200 w1=1.0, w2=0.0 w1=1.0, w2=0.75 w1=1.0, w2=1.25 w1=1.0, w2=2.0 a U  U 0 b U  U 00 Figure 4 Sensitivit yto w 1 and w 2 optimized con\014dence sets paths that cannot result in the optimized rule F or n umeric attributes w e dev elop ed an algorithm for pruning instan tiated rules prior to p erforming the searc h for the optimized con\014dence rule Finally w e rep orted the results of our exp erimen ts that demonstrate the practicalit y of the prop osed algorithms Ac kno wledgmen ts W ew ould lik e to thank Phil Gibb ons and Je\013 Vitter for their v aluable insigh ts that led to Theorem 4.2 and its pro of W ew ould also lik e to thank Narain Gehani Hank Korth and Avi Silb ersc hatz for their encouragemen t and for their commen ts on earlier drafts of this pap er Without the supp ort of Y eso ok Shim it w ould ha v e b een imp ossible to complete this w ork References  R Agra w al T Imielinski  and A Sw ami Mining association rules b et w een sets of items in large databases In Pr o c of the A CM SIGMOD Confer enc e on Management of Data  pages 207{216 W ashington D.C Ma y 1993  R Agra w al and R Srik an t F ast algorithms for mining asso ciation rules In Pr o c of the VLDB Confer enc e  San tiago Chile Septem b er 1994  U M F a yy ad G Piatetsky-Shapiro P Sm yth and R Uth urusam y  A dvanc es in Know le dge Disc overy and Data Mining  AAAI Press/The MIT Press Menlo P ark CA 1996  T F ukuda Y Morimoto S Morishita and T T okuy ama Data mining using t w o-dimensional optimized asso ciation rules Sc heme algorithms and visualizatio n In Pr o c of the A CM SIGMOD Confer enc e on Management of Data  June 1996  T F ukuda Y Morimoto S Morishita and T T okuy ama Mining optimized asso ciation rules for n umeric attributes In Pr o c of the A CM SIGA CT-SIGMOD-SIGAR T Symp osium on Principles of Datab ase Systems  June 1996  J Han and Y F u Disco v ery of m ultiple-lev el asso ciation rules from large databases In Pr o c of the VLDB Confer enc e  Zuric h Switzerland Septem b er 1995  H Mannila H T oiv onen and A I V erk amo E\016cien t algorithms for disco v ering asso ciation rules In KDD-94 AAAI Workshop on Know le dge Disc overy in Datab ases  pages 181{192 Seattle W ashington July 1994  G Piatetsky-Shapiro Disco v ery  analysis and presen tation of strong rules In G Piatetsky-Shapiro and W F ra wley  editors Know le dge Disc overy in Datab ases  pages 229{248 AAAI/MIT Press Menlo P ark CA 1991  R Rastogi and K Shim Mining optimized asso ciation rule for categorical and n umeric attributes T ec hnical Rep ort 0112370-970217-03 Bell Lab oratories Murra y Hill 1997  R Srik an t and R Agra w al Mining generalized asso ciation rules In Pr o c of the VLDB Confer enc e  Zuric h Switzerland Septem b er 1995  R Srik an t and R Agra w al Mining quan titativ e association rules in large relational tables In Pr o c of the A CM SIGMOD Confer enc e on Management of Data  June 1996 


in Section 5 and the detailed algorithm and exp erimental result can b e found in 9  In our exp erimen t the b est execution time for the algorithm without prior pruning is greater than the b est execution time for the prior pruning algorithm As a result in subsequen t exp erimen ts w e only use the prior pruning algorithm 6.2 Sensitivit yto w 1 and w 2 Optimized Con\014dence Sets F or optimized con\014dence sets w e\014x w 1 at 1 and v ary w 2  When U  U 0  the supp ort of eac h instan tiation is v ery lo w the a verage supp ort of an instan tiation is 1 n m  In con trast when U  U 00  instan tiations with larger rectangles ha v e larger supp orts  as a matter of fact the instantiation with the largest rectangle has supp ort 1 Th us for U  U 0 1 only lo wv alues for minSup are meaningful and 2 only large v alues for w 2 impact the p erformance of our searc h algorithms W e 014rst describ e the results for U  U 0  Figure 4\(a presen ts the execution times for b oth the depth 014rst as w ell as the graph searc h algorithms for v alues of minSup bet w een 0.002 and 0.0038 F or most minSup v alues b oth algorithms p erform the b est when w 2 0  that is when instan tiations are sorted b y con\014dence only  When minSup is v ery high e.g 0.00038 the algorithms with w 2 of 500 that is the highest v alue for w 2 that w e selected p erform as w ell or b etter The reason for this is that for a ma jorit y of the supp ort v alues the optimized con\014dence set comprises mainly of instan tiations with high con\014dences When instArra y is sorted b y con\014dence these instan tiations are considered 014rst b y the algorithms allo wing a rapid con v ergence to the optimized con\014dence set As w e increase the v alue of w 2  instan tiations with higher con\014dences are pushed to the end of instArra yb y instan tiations with larger supp orts and p ossibly smaller con\014dences Th us the algorithms need to en umerate more sets b efore the optimized set is reac hed and this mak es them p erform p o orly  Higher v alues of w 2  ho w ev er are b etter for large minSup v alues when the optimized con\014dence set con tains instan tiations with b oth high supp orts and high con\014dences Once instan tiations are sorted suc h that those b elonging to the optimized set are to w ard the fron tof instArra y  then the graph searc h algorithm that uses in termediate sets for pruning is faster than the depth 014rst algorithm that uses only the curren t optimized set One of the reasons for this is that the graph searc h algorithm prunes the searc h space more e\013ectiv ely  The other reason is that the graph searc h algorithm initially concen trates on 014nding the optimized set using instan tiations at the fron t of instArra y and gradually considers instan tiations to w ard the end In con trast the depth 014rst searc h algorithm ma yha v e to generate sets con taining instan tiations lo cated at the end of instArra y b efore all of the instan tiations at the fron tof instArra yha v e b een considered No w w e turn our atten tion to U  U 00  In Figure 4-\(b w e plot execution times for the depth 014rst algorithm with prior pruning as minSup is v aried from 0.1 to 0.35 F or U  U 00 t ypically instan tiations with large supp orts ha v e small con\014dences and the ones with high con\014dences ha v elo w supp orts This explains wh y 1 for all v alues of w 2  execution times for the algorithm increases with minSup  and 2 for w 2 0  75 the algorithm p erforms the b est As minSup is increased the supp orts for instan tiations that are p ossible candidates for the optimized set increases Th us with increasing minSup  a larger n um b er of instan tiations need to b e considered b y the searc h algorithms and their p erformance degrades F urthermore for small v alues of w 2 e.g 0 instArra y is sorted b y con\014dence and instan tiations with lo w supp orts and high con\014dences are at the fron tofinstArra y  These instan tiations ho w ev er cannot b e in the optimized set if minSup is large  th us the algorithm p erforms the w orst when w 2  0 and minSup is high On the other hand for large v alues of w 2 e.g 2 instan tiations with v ery high supp orts and lo w con\014dences mo v e up in instArra y causing the algorithm p erform p o orly for smaller v alues of minSup  The algorithm p erforms the b est for a wide range of minSup v alues when w 2 0  75 since this results in instan tiations with mo derately high v alues for b oth supp orts and con\014dences making it to the top in instArra y  6.3 Sensitivit y to size of domain F or U  U 0 w e found that for a giv en k  increasing the size of the domain n for attributes actually causes the searc h times to decrease since there are a lot more instan tiations with higher supp orts and con\014dences supp orts and con\014dences are uniformly distributed across the instan tiations Ho w ev er when U  U 00 ev en though the n um b er of instan tiations with high supp orts and con\014dences increases a disprop ortionately larger n um b er of instan tiations 1 with high con\014dences ha v elo w supp orts e.g p oin ts and 2 with high supp orts ha v elo w con\014dences e.g instan tiations with large rectangles The detailed result can b e found in 9  6.4 Sensitivit yto k Due to the lac k of space w e presen t results in 9  7 Concluding Remarks In this pap er w e generalized the optimized asso ciation rules problem prop osed in 5  i n three w a ys  1 asso ciation rules are p ermitted to con tain disjunctions o v er uninstan tiated attributes 2 asso ciation rules are allo w ed to con tain an arbitrary n um b er of uninstantiated attributes and 3 uninstan tiated attributes can b e either categorical or n umeric Since the problem of computing optimized rules is in tractable w e had to dev elop e\013ectiv e mec hanisms for b oth exploring as w ell as pruning the searc h space W e assigned a weight to eac h instan tiation and our searc h algorithms considered instan tiations in the decreasing order of their w eigh ts Th us based on input parameters e.g minim um supp ort n um b er of disjunctions b y appropriately assigning w eigh ts to instan tiations the exploration of the searc h space can b e guided to b e e\016cien t In addition w e prop osed a general depth 014rst algorithm that k eeps trac k of the curren t optimized rule and uses it to prune the searc h space F or categorical attributes w e also prop osed a graph searc h algorithm that uses in termediate results to eliminate 


stan tiated attributes A 1  A 2    A m in conditions of the form A i 2  l i u i  and the domain of A i ranges b et w een 1 and n i  then the total n um b er of instan tiations is n 1 C 2 003 n 2 C 2 003\001\001\001\003 n m C 2  In con trast the n um ber of p ossible instan tiations if ev ery attribute w as categorical w ould b e n 1 001 n 2 003 001\001\001 003 n m Th us the n um ber of instan tiations to b e examined b y our searc h algorithms increases dramatically for optimized asso ciation rules with uninstan tiated conditions of the form A i 2  l i u i  In the remainder of this section w e prop ose a pruning tec hnique for the optimized con\014dence problem that reduces the n um b er of instan tiations stored in instArra y  but still guaran tees optimalit y  Reducing the n um b er of instan tiations allo ws us to lo w er the o v erhead of storing that is app ending the instan tiations to instArra y  and to incur smaller costs when sorting the instan tiations in the decreasing order of their w eigh ts More imp ortan tly  it can also considerably reduce the input size to our searc h algorithms Key Observ ation As w e men tioned earlier the n um ber of instan tiations for n umeric attributes increases signi\014can tly as the n um ber of uninstan tiated attributes increases An instan tiation for m n umeric attributes can b e represen ted as  x 1 x 2 x m    y 1 y 2 y m  where the in terv al for the uninstan tiated n umeric attribute A i is b ounded b y x i b elo w and y i ab o v e Th us the x i y i pairs determine the b ounds for the rectangle for the instan tiation along eac h of the m axis F or instantiations I 1  x 1 x 2 x m    y 1 y 2 y m  and I 2  u 1 u 2 u m    v 1 v 2 v m  w esa y that I 1 is con tained in I 2 if u i 024 x i 024 y i 024 v i for all i that is the rectangle for I 1 is con tained in the rectangle for I 2  The follo wing theorem pro vides the basis for pruning instan tiations in instArra y when computing optimized con\014dence sets Theorem 5.1  L et I 1 and I 2 b e two instantiations such that I 1 is c ontaine din I 2 Ifb oth I 1 and I 2 have supp ort at le ast minSup and conf  I 1  025 conf  I 2   then ther e exists an optimize dc on\014denc e set that do es not c ontain I 2  Instan tiation I 2 can b e deleted since I 2 s rectangle is the outer rectangle Th us if the optimized set w ere to con tain I 2  then replacing I 2 with I 1 results in an optimized set with at least the same con\014dence and no o v erlapping instan tiations Ho w ev er the ab o v e pruning rule do es not w ork for optimized supp ort sets since that w ould require I 1 to b e pruned when I 1 s rectangle is con tained in I 2 s rectangle and conf  I 2  025 conf  I 1  025 minCo nf  Th us if the optimized set w ere to con tain I 1  then replacing I 1 with I 2 results in an optimized set with as high con\014dence and supp ort  ho w ev er it could con tain o v erlapping instan tiations Due to lac k of space w e do not rep ort in this pap er the details of the algorithm that uses the ab o v e pruning rule for pruning instan tiations from instArra y b efore optConfPruneOpt is executed The algorithm including an analysis of its time and space complexit y  can b e found in 9  In 9  w e sho w that the time complexit y of the algorithm is O  m 003 n 2 1 003 001\001\001\003 n 2 m  where m is the n um berofn umeric attributes considered and n i is the n um ber of v alues for attribute A i  6 Exp erimen tal Results In this section w e study the p erformance of our algorithms for computing optimized con\014dence and supp ort sets F rom our exp erimen tal results w e establish that 017 Our pruning tec hniques impro v e the p erformance of b oth depth 014rst and graph searc h algorithms signi\014can tly  017 The v alues for w 1 and w 2 pla y an imp ortan t role in reducing the searc h times of our algorithms 017 Pruning instan tiations prior to p erforming searc h whenev er p ossible can result in further impro v emen ts in p erformance 017 The lo w execution times of our algorithms in a large n um b er of cases mak e them suitable to b e used in practice Since naiv e algorithms that exhaustiv ely en umerate all p ossible sets are ob viously to o exp ensiv e w e do not consider them Also the data 014le is read only once at the b eginning of eac h algorithm in order to generate instan tiations The time for this in most cases constitutes a tin y fraction of the total execution time of our algorithms Th us w e do not include the time sp en t on reading the data 014le in our results F urthermore note that the p erformance of our algorithms do es not dep end on the n um b er of tuples in the data 014le  it is more sensitiv e to the n um b er of attributes and the sizes of their domains W e p erformed extensiv e exp erimen ts using a Sun Ultra-2/200 mac hine with 512 MB of RAM and running Solaris 2.5 Ho w ev er due to lac k of space w edo not rep ort all our exp erimen tal results  these can b e found in 9  Syn thetic Datasets The asso ciation rule that w e exp erimen ted with has the form U  C 1  C 2 where U con tains m uninstan tiated attributes see Section 3 F or simplicit y w e assume that the domains of the uninstan tiated attributes consist of in tegers ranging from 1 to n W e consider t w o forms for U  The 014rst U 0  has the form A 1  v 1    A m  v m  and can b e used for b oth categorical and n umeric attributes The second U 00  has the form A 1 2  l 1 u 1     A m 2  l m u m  and can b e used only for n umeric attributes Ev ery instan tiation of U 0  C 1  C 2 and th us ev ery p oin t in m dimensional space is assigned a randomly generated con\014dence b et w een 0 and 1 with uniform distribution Eac h instan tiation of U 0  C 1  C 2 is also assigned a randomly generated supp ort b et w een 0 and 2 n m with uniform distribution 6.1 Pruning Prior to Searc h W e b egin b y studying the e\013ectiv eness of pruning instan tiations from instArra y prior to p erforming searc h This tec hnique applies only to optimized con\014dence sets when U has the form U 00 it w as in tro duced 


pro cedure optConfPruneIn t\(in tList curLo c 1 newList   2 foreac h S 1   and S 1 2 in tList do f 3 S 2  S 1 f instArra y[curLo g 4 App end S 2 to the end of newList 5 if sup  S 2  025 minSup and conf  S 2   conf optSet 6 optSet  S 2 7 g 8 if curLo c  n 9 return 10 App end elemen ts in newList to in tList 11 foreac h S 1 2 in tList from head to tail do f 12 minS  optConfRange S 1  curLo c+1 13 if numI nst  S 1  k and minS 024 maxS 14 foreac h S 2 preceding S 1 2 in tList do f 15 if optConfCanPrune S 2  S 1 curLo c+1  true f 16 Delete S 1 from in tList 17 break out of inner for lo op 18 g 19 else if optConfCanPrune S 1  S 2 curLo c+1  true 20 Delete S 2 from in tList 21 g 22 else 23 Delete S 1 from in tList 24 g 25 minW eigh t w 1  conf optSet  w 2 003 minSup k 26 if in tList 6   or w instArra y[curLo 025 minW eigh t 27 optConfPruneIn t\(in tList curLo c+1 Figure 3 Graph searc h alg for optimized con\014dence set solving the quadratic inequalit y equation Due to lac k of space the pro cedure optConfCanPrune to decide whether an in termediate set S 1 can prune another intermediate set S 2 with the next instan tiation to extend b oth in termediate sets is presen ted in The o v erall pro cedure for computing optimized con\014dence sets is describ ed in Figure 3 The pro cedure accepts as input parameters in tList whic h is a list of in termediate sets for the 014rst curLo c-1 instan tiations in instArra y  and curLo c whic h is the index of the instan tiation in instArra y to b e considered next for extending the in termediate sets in in tList The procedure is initially in v ok ed with argumen ts in tList  and curLo c=1 and it recursiv ely in v ok es itself with successiv ely increasing v alues for curLo c The pro cedure b egins b y extending ev ery set in in tList with instArra y[curLo and forms a new list newList con taining f instArra y[curLo g and the extended sets steps 1{7 F urthermore if an extended set in newList is found to ha v e supp ort at least minSup and higher con\014dence than the curren tly stored optimized set then optSet is set to the extended set In steps 10{24 those in termediate sets that cannot b e extended further to result in the optimized set are deleted from in tList These include sets already con taining k instan tiations and sets S for whic h optConfRange S  curLo c+1 returns an empt y range In addition for an yt w oin termediate sets S 1 and S 2 in in tList that can b e extended to result in an optimized set if one can prune the other then the other is deleted steps 14 21 Finally  steps 25{27 con tain conditions that enable the algorithm to terminate early  ev en though curLo c ma y b e less than n  This o ccurs when there are no in termediate sets to expand that is in tList    and the w eigh t of instArra y[curLo is less than minW eigh t the minim um w eigh t required to generate the optimized set follo ws from Theorem 4.2 5 Numeric A ttributes In this section w e presen t algorithms for computing optimized sets when asso ciation rules con tain uninstan tiated conditions of the form A i 2  l i u i  and A i is an umeric attribute Th us unlik e the previous section in whic h an instan tiation w as obtained b y instan tiating eac h uninstan tiated attribute with a single v alue in its domain in this section eac h uninstan tiated attribute is instan tiated with an in terv al in its domain Th us eac h instan tiation corresp onds to a rectangle in m dimensional space in the previous section eac h instan tiation corresp onded to a p oin tin m dimensional space P ermitting asso ciation rules to con tain uninstantiated n umeric attributes in conditions of the form A i 2  l i u i  complicates the problem of computing optimized sets in sev eral w a ys First unlik e the categorical attribute case in whic ht w o distinct instan tiations had no o v erlap since eac h instan tiation corresp onded to a p oin t t w o distinct instan tiations ma yo v erlap This mak es it imp ossible to use in termediate sets for pruning as describ ed in Section 4.4 F or instance when computing optimized con\014dence sets consider t w o intermediate sets S 1 and S 2 suc h that for ev ery set S of instan tiations that can b e used to extend S 2 to result in a set with con\014dence at least that of optSet and supp ort at least minSup  sup  S 1  S  025 minSup and conf  S 1  S  025 conf  S 2  S  Ev en though conf  S  S 1  025 conf  S  S 2  S  S 1 ma y not qualify to b e the optimized set since instan tiations in S ma y o v erlap with instan tiations in S 1 Ho w ev er there ma y b e no o v erlap b et w een S and S 2  and th us it ma y still b e p ossible to extend S 2 to result in the optimized set As a result S 1 cannot prune S 2  This is not a problem for categorical attributes since there is no o v erlap bet w een an y pair of instan tiations The depth 014rst algorithm in Section 4.3 ho wev er can b e mo di\014ed to compute optimized con\014dence sets Since the optimized set can con tain only non-o v erlapping instan tiations w em ust not extend curSet with an o v erlapping instan tiation instArra y i   this cannot result in the optimized set F or a set S of instan tiations and an instan tiation I  let the function ov er l ap  S I  return true if the rectangle for some instan tiation in S and the rectangle for I o v erlap Then the mo di\014cation to optConfPruneOpt is to ha v e the statemen t if ov er l ap curSet instArra y i   false bet w een steps 1 and 2 and the b o dy of this if-statemen t includes the steps 2{8 The next complication is that if there are m unin 


Optimized Supp ort Set F or optimized supp ort sets constrain ts on s are similar to constrain ts 1 7 except that conf optSet and minSup are replaced with minCo nf and sup optSet resp ectiv ely  In other w ords the con\014dence of curSet  S m ust b e at least minConf and the supp ort of curSet  S should b e no smaller than that of optSet Th us optSupRange the pro cedure to compute the range of v alues for s that satisfy constrain ts 7 is similar to optConfRange with all o ccurrences of conf optSet and minSup replaced with minConf and sup optSet Also optSupPruneOpt the pro cedure for computing optimized sets in v ok es optSupRange instead Note that if minConf  maxCo nf  then optSupRange alw a ys returns for con v enience Ho w ev er this is a sp ecial case for whic h the optimized supp ort set can b e computed directly and is simply the set of all instan tiations with con\014dence maxConf  4.4 Pruning using In termediate Sets The pruning tec hnique presen ted in the previous subsection used the curren t optimized set to reduce the searc h space of the depth-\014rst algorithm for computing optimized sets A di\013eren t class of algorithms gr aph se ar ch algorithms main tain a list of in termediate sets and in eac h step extend one of them In this case not only the curren t optimized set but also the in termediate sets can b e used for pruning The graph searc h algorithms ho w ev er do incur additional storage o v erhead since they ha v etok eep trac kofin termediate sets In this section w e presen t new tec hniques for pruning using in termediate sets Optimized Con\014dence Set The algorithm after the p th step k eeps trac k of for the p instan tiations with the highest w eigh t 1 the curren t optimized set and 2 in termediate sets in v olving some subset of the p instan tiations The in termediate sets are those that ha v e the p oten tial to b e further extended with the remaining instan tiations to yield the optimized set In the p 1 th step it extends ev ery in termediate set using the instan tiation with the next highest w eigh t th us generating new in termediate sets If an y of the new in termediate sets is b etter than the curren t optimized set then optSet is replaced Next since instan tiations in instArra y are stored in the decreasing order of their w eigh ts pro cedure optConfRange from the previous subsection that used the curren t optimized set for pruning is used to eliminate those in termediate sets that can nev er b e candidates for the optimized set F urthermore consider t w oin termediate sets S 1 and S 2 for whic h numI nst  S 1  024 numI nst  S 2  and for every set S of instan tiations that can b e used to extend S 2 to result in a set with con\014dence at least that of optSet and supp ort at least minSup  sup  S 1  S  025 minSup and conf  S 1  S  025 conf  S 2  S  Due to numI nst  S 1  024 numI nst  S 2  it is the case that S 1  S con tains no more instan tiations than S 2  S  Th us since there is no o v erlap b et w een an yt w o arbitrary instan tiations for some set S if S 2  S could b e an optimized con\014dence set then S 1  S is also an optimized set Consequen tly  it follo ws that deleting S 2 from the list of in termediate sets do es not a\013ect the abilit yof our algorithm to disco v er the optimized con\014dence set The range of supp orts for a set S that can b e used to extend S 2 to result in a set with supp ort minSup and con\014dence as go o d as the curren t optimized set can b e obtained using the pro cedure optConfRange F urthermore if s and c are the supp ort and con\014dence of set S  resp ectiv ely  l  k 000 numI nst  S 2  and i is the index of the next instan tiation to b e considered for extending the in termediate sets then due to constrain ts 1 and 5 from the previous section the con\014dence of S satis\014es the follo wing inequalit y  conf optSet   conf optSet 000 conf  S 2  003 sup  S 2  s 024 c 024 w instArra y i  003 l 000 w 2 003 s l 003 w 1 8 Supp ose in addition w e compute the range of supp orts for a set S whic h when used to extend S 1 causes its supp ort to b e at least minSup and for all v alues of c satisfying Constrain t 8 the con\014dence of S 1  S is at least that of S 2  S No w if the former range of supp orts for set S is con tained within the latter then it implies that for ev ery set S with supp ort s and con\014dence c satisfying Constrain t 8 ab o v e that can b e used to extend S 2 to yield an optimized set the same set S can also b e used to extend S 1 resulting in a set with supp ort at least minSup and con\014dence greater than or equal to that of S  S 2 Th us S 2 can b e pruned The c hallenge is to determine the latter range whic hw e compute b elo w as follo ws W e required the supp ort of S 1  S to b e at least minSup  this translates to the follo wing constrain ton s  minSup 024 sup  S 1  s 9 In addition w e required that for all v alues of c satisfying Constrain t 8 conf  S 1  S  025 conf  S 2  S  Th us s m ust satisfy the follo wing constrain t for all v alues of c satisfying Constrain t 8 sup  S 1  003 conf  S 1  s 003 c sup  S 1  s 025 sup  S 2  003 conf  S 2  s 003 c sup  S 2  s 10 It can b e sho wn that if sup  S 1  024 sup  S 2  then for a giv en v alue of s  the ab o v e constrain t holds for all v alues of c satisfying Constrain t 8 if it holds for s and c  c min  the leftmost term in Constrain t 8 Similarly if sup  S 1   sup  S 2  then for a giv en v alue of s  Constrain t 10 holds for all v alues of c satisfying Constrain t 8 if it holds for s and c  c max  the righ tmost term in Constrain t 8 Th us the range of v alues for s that w e are in terested in are those that satisfy Constrain t 9 and either Constrain t 10 with c replaced with c min if sup  S 1  024 sup  S 2  or Constrain t 10 with c  c max otherwise Constrain t 10 with c  c min and c  c max results in t w o separate equations of the form A 003 s 2  B 003 s  C 024 0 with v alues of A  B and C  The range of v alues for s that satisfy the equations can b e determined b y 


set S that could b e used to extend curSet suc h that conditions 1 and 2 hold Due to the condition 2 w eha v e the follo wing constrain t c 003 s  conf curSet 003 sup curSet  s  sup curSet  025 conf o ptS et  Re-arranging the terms yields the follo wing constrain t c 025 conf optSet   conf optSet 000 conf curSet 003 sup curSet  s 1 Also since the set curSet  S m ust satisfy minim um supp ort and a set S can consist of at most l instantiations w e require s to satisfy the follo wing t w o constrain ts minSup 024 s  sup curSet  024 1 2 0 024 s 024 l 003 maxSup 3 Note that since the con\014dence of set S can b e at most maxConf w eha v e the follo wing constrain t c 024 maxCo nf  Com bining this constrain t with Constrain t 1 results in the follo wing constrain t whic h if satis\014ed b y s  ensures that there exists a c that do es not exceed maxC onf and at the same time causes the con\014dence of curSet  S to b e at least conf optSet sup curSet  003  conf optSet  000 conf curSet maxConf 000 conf optSet  024 s 4 Finally w e exploit the fact that instan tiations are sorted in the decreasing order of their w eigh ts and only instan tiations that follo w instArra y i  are used to extend curSet W e utilize the follo wing prop ert y of sets of instan tiations Theorem 4.2  F or an arbitr ary set of instantiations S  ther e exists an instantiation I 2 S such that w  I  025 w 1 003 conf  S  w 2 003 sup  S  numI nst  S  Th us since S con tains only instan tiations with w eigh ts at most w instArra y i  and S can con tain at most l instan tiations due to Theorem 4.2 w e obtain the follo wing constrain ton s and c  w 1 003 c  w 2 003 s l 024 w instArra y i  Re-arranging the terms w e get c 024 w instArra y i  003 l 000 w 2 003 s l 003 w 1 5 Since c  the con\014dence of S m ust b e at least 0 substituting 0 for c in the ab o v e equation results in the follo wing constrain t that prev en ts s from getting so pro cedure optConfPruneOpt\(curSet curLo c 1 for i  curLo c to n do f 2   optConfRange\(curSet i  3 if minS  maxS 4 break 5 S  curSet f instArra y i  g 6 if sup S 025 minSup and conf S  conf optSet 7 optSet  S 8 if numI nst S k 9 optConfPruneOpt\(S i 1 10 g Figure 2 Depth 014rst alg for optimized con\014dence set large that c w ould ha v e to b ecome negativ e to satisfy the ab o v e constrain t s 024 w instArra y i  003 l w 2 6 Finally  constrain ts 1 and 5 can b e com bined to limit s to v alues for whic h a corresp onding v alue of c can b e determined suc h that the con\014dence of curSet  S do es not drop b elo w conf optSet and the w eigh ts of instan tiations in S do not exceed w instArra y i  w instArra y i  003 l 000 w 2 003 s w 1 003 l 025 conf optSet   conf optSet 000 conf curSet 003 sup curSet  s 7 An y set S used to extend curSet to pro duce a b etter set for optimized con\014dence m ust satisfy the constrain ts 7 on its supp ort Th us if there exists av alue of s satisfying constrain ts 7 then curSet m ust b e extended Otherwise it can b e pruned without extending it further The pro cedure for computing the optimized con\014dence set illustrated in Figure 2 is similar to the naiv e algorithm except that it in v ok es optConfRange to determine if there exists an S that curSet can b e extended with to yield the optimized set It stops extending curSet if the range of v alues minS for the supp ort of suc h a set is empt y whic h happ ens when minS  maxS The pro cedure optConfRange computes the range minS whic h is the range of v alues for s that satisfy the ab o v e constrain ts If there do es not exist an s that satis\014es constrain ts 7 then a range for whic h minS  maxS is returned for con v enience Th us if minS  maxS for the returned range from optConfRange w e can stop extending curSet The pro cedure tak es as input curSet and the index i in instArra y of the next instan tiation b eing considered to extend curSet A detailed deriv ation of the ranges satisfying the ab o v e constrain ts and a description of the pro cedure optConfRange can b e found in 


pro cedure optConfNaiv e\(curSet curLo c 1 for i  curLo c to n do f 2 S  curSet f instArra y[i g 3 if sup S 025 minSup and conf S  conf optSet 4 optSet  S 5 if numI nst S k 6 optConfNaiv e\(S i 1 7 g Figure 1 Naiv e Alg for Optimized Con\014dence Set 4.2 Naiv e Algorithm Optimized Con\014dence Set W e b egin b y presen ting a naiv e algorithm for determining the optimized con\014dence set of instan tiations see Figure 1 In a n utshell the algorithm emplo ys depth 014rst se ar ch to en umerate all p ossible sets con taining k or less instantiations and returns the set with the maxim um con\014dence and supp ort at least mi nSup  The algorithm assumes that instan tiations are stored in the arra y instArra y  The n um b er of instantiations is n  n 1 003 n 2 003 001\001\001\003 n m  where n i is the n umber of v alues in the domain of A i  The algorithm is initially in v ok ed with argumen ts curSet   and curLo c=1 The v ariable optSet is used to k eep trac k of the optimized set of instan tiations encoun tered during the execution of the algorithm The algorithm en umerates all p ossible subsets of size k or less b y recursiv ely in v oking itself Step 6 and sets optSet to a set with a greater con\014dence than the curren t optimized set steps 3 and 4 Eac hin v o cation accepts as input curSet the set of instan tiations to b e further extended and curLo c the index of the 014rst instan tiation in instArra ytobe considered for extending curSet all instan tiations b et w een curLo c and n are considered The extended state is stored in S and if the n um b er of instan tiations in S is less than k  the algorithm calls itself recursiv ely to further extend S with instan tiations whose index is greater than the index of all the instan tiations in S The complexit y of the naiv e algorithm is 006 k i 1 nC i  When k 034 n  the complexit y of the algorithm b ecomes O  n k  Ho w ev er as w e sho w ed earlier if there is no restriction on the size of the optimized set that is k  n  the problem is NP-hard Optimized Supp ort Set The naiv e algorithm for computing the optimized supp ort set is similar to optConfNaiv e except that the condition in Step 3 whic h tries to maxim ize con\014dence is replaced with the follo wing condition if conf S 025 minCo nf and sup S  sup optSet 4.3 Pruning Using the Curren t Optimized Set The naiv e algorithm exhaustiv ely en umerates all p ossible sets with at most k instan tiations  this results in high complexit y Ho w ev er in the naiv e algorithm illustrated in Figure 1 if w e kno w that the con\014dence of an y set satisfying minim um supp ort and obtained as a result of extending curSet cannot exceed the con\014dence of the curren t optimized set that is optSet then w e can stop extending curSet immedia tely and reduce the searc h space signi\014can tly  In this section w e dev elop br anch and b ound pruning tec hniques that with the aid of the curren t optimized set considerably reduce the o v erhead of exploring the en tire searc h space F or our pruning tec hniques to b e e\013ectiv e it is imp erativ e that w e 014nd a set close to the optimized set early  since it can then b e used to eliminate a larger n um b er of sub-optimal sets It ma y seem logical that for the optimized con\014dence problem since w e are trying to maxim ize con\014dence considering instan tiations with high con\014dences 014rst ma y cause the searc h to conv erge on the optimized set more rapidly Ho w ev er this ma y not b e the case since the supp ort of the optimized con\014dence set has to b e at least minSup F or a high minim um supp ort it ma y b e b etter to explore instan tiations in the decreasing order of their supp orts Th us the order in whic h instan tiations m ust b e considered b y the searc h algorithm is a non-trivial problem In order to in v estigate this idea of pruning curSet early w e in tro duce the notion of the w eigh t of an instan tiation I denoted b y w  I  and de\014ne it b elo w w  I  w 1 003 conf  I  w 2 003 sup  I  In the de\014nition w 1 and w 2 are p ositiv e real constan ts Th us the w eigh t of an instan tiation is the w eigh ted sum of b oth its con\014dence and supp ort Our searc h algorithms can then consider instan tiations with higher w eigh ts 014rst and b y using di\013eren tv alues of w 1 and w 2 v ary the strategy for en umerating sets In the remainder of this section w e prop ose algorithms that store instan tiations in instArra y in the decreasing order of their w eigh ts and explore instan tiations with higher w eigh ts 014rst W e also presen t tec hniques that exploit the sort order of instan tiations to prune the searc h space The v ariables maxC onf and maxSup are used to store the maxim um con\014dence and maxim um supp ort of all the instan tiations in instArra y  resp ectiv ely  Optimized Con\014dence Set Supp ose the curren t set of instan tiations curSet is only extended with instan tiations b elonging to the set comprising of instArra y i  for some i  and instan tiations follo wing it in instArra y  The k ey idea is that w e can stop extending curSet if among instan tiations b eing considered to extend curSet there do es not exist a set of instan tiations S suc h that 1 sup curSet  S  025 minSup  and 2 conf curSet  S  025 conf optSet In order to determine whether a set S satisfying the ab o v e conditions 1 and 2 exists w e 014rst deriv e the constrain ts that suc h a set S m ust satisfy If the constrain ts are unsatis\014able with the remaining instan tiations that are candidates for extension a set S satisfying the conditions 1 and 2 do es not exist and w e can stop extending curSet immediately  Let v ariables s and c denote sup  S  and conf  S  resp ectiv ely  and l  k 000 numI nst curSet In the follo wing w e deriv e the constrain ts on s that m ust b e satis\014ed b yan y 


A tomic conditions can b e com bined using op erators  or _ to yield more complex conditions Instan tiated asso ciation rules that w e study in this pap er ha v e the form C 1  C 2  where C 1 and C 2 are arbitrary instan tiated conditions Let the supp ort for an instan tiated condition C  denoted b y sup  C  b e the ratio of the n um b er of tuples satisfying the condition C and the total n um b er of tuples in the relation Then for the asso ciation rule R  C 1  C 2  sup  R  is de\014ned as sup  C 1  and conf  R  is de\014ned as sup  C 1  C 2  sup  C 1   Note that our de\014nition of sup  R  is di\013eren t from the de\014nition in 1  where sup  R  as de\014ned to b e sup  C 1  C 2  Instead w eha v e adopted the de\014nition used in 5  and 4 Also let minSup and minConf denote the user-sp eci\014ed minim um supp ort and minim um con\014dence resp ectiv ely  The optimized asso ciation rule problem requires optimal instan tiations to b e computed for an uninstan tiated asso ciation rule whic h has the form U  C 1  C 2  where U is a conjunction of m uninstan tiated atomic conditions o v er m distinct attributes and C 1 and C 2 are arbitrary instan tiated conditions Let U i denote an instantiation of U th us U i is obtained b y replacing v ariables in U with v alues An instan tiation U i can b e mapp ed to a rectangle in m dimensional space  there is a dimension for eac h attribute and the co-ordinates for the rectangle in a dimension are iden tical to the v alues for the corresp onding attribute in U i Tw o instan tiations U 1 and U 2 are said to b e non-overlapping if the t w o m dimensional rectangles de\014ned b y them do not o v erlap that is the in tersection of the t w o rectangles is empt y Ha ving de\014ned the ab o v e notation for asso ciation rules w e presen t b elo w the form ulations of the optimized asso ciation rule problems 017 Optimized Con\014dence Problem Giv en k and an uninstan tiated rule U  C 1  C 2  determine non-o v erlapping instan tiations U 1 U l of U with l 024 k suc h that sup  R  025 minSup and conf  R  is maximi zed  where R is the rule  U 1 _ 001\001\001 _ U l   C 1  C 2  017 Optimized Supp ort Problem Giv en k and an uninstan tiated rule U  C 1  C 2  determine non-o v erlapping instan tiations U 1 U l of U with l 024 k suc h that conf  R  025 minConf and sup  R  is maxim ized  where R is the rule  U 1 _ 001\001\001 _ U l   C 1  C 2  The problem of computing optimized asso ciation rules required instan tiations U 1 U l to b e determined suc h that the rule R  U 1 _\001\001\001_ U l   C 1  C 2 satis\014es user-sp eci\014ed constrain ts Supp ose for an instan tiation U i of U  I i is the instan tiated rule U i  C 1  C 2  and for a set S  f I 1 I j g of instan tiated rules sup  S  and conf  S  are de\014ned as follo ws sup  S   sup  I 1  001\001\001  sup  I j  conf  S   sup  I 1  001 conf  I 1  001\001\001  sup  I j  001 conf  I j  sup  I 1  001\001\001  sup  I j  Then w eha v e sup  S  sup  R  and conf  S  conf  R  Th us since 1 for ev ery instan tiated rule or alternativ ely  instan tiation I i  sup  I i  and conf  I i  can b e computed b y p erforming a single pass o v er the relation and 2 these in turn can b e used to compute supp orts and con\014dences for sets of instan tiations the optimized asso ciation rule problem reduces to the follo wing 017 Optimized Con\014dence Problem Giv en k  and sup  I i  and conf  I i  for ev ery instantiation I i  determine a set S con taining at most k non-o v erlapping instan tiations suc h that sup  S  025 minSup and conf  S  is maxim ized 017 Optimized Supp ort Problem Giv en k  and sup  I i  and conf  I i  for ev ery instan tiation I i  determine a set S con taining at most k nono v erlapping instan tiations suc h that conf  S  025 minConf and sup  S  is maximi zed In the remainder of the pap er w e use the ab o v e form ulations instead to dev elop algorithms for the optimized asso ciation rule problems 4 Categorical A ttributes In this section w e presen t algorithms for computing optimized supp ort and con\014dence sets when rules con tain only uninstan tiated conditions of the form A i  v  Th us the results of this section are only applicable to categorical attributes and n umeric attributes restricted to A i  v 1 conditions of the form A i 2  l i u i  where A i is a n umeric attribute are dealt with in the next section An example of suc h a rule is  date  v   src cit y  NY  dst country  F rance in the rule date isan umeric attribute while src cit y is categorical Due to the ab o v e restriction an yt w o arbitrary instan tiations are alw a ys non-o v erlapping This prop ert y is essen tial for the correctness of the pruning tec hnique used b y the graph searc h algorithm presen ted in Section 4.4 4.1 NP-Hardness Result The problem of computing optimized sets giv en sup  I i  and conf  I i  for ev ery instan tiation I i  can b e sho wn to b e in tractable and follo ws from the follo wing theorem Theorem 4.1  Given sup  I i  and conf  I i  for every instantiation I i  determining if ther eisa set S c ontaining an arbitr ary numb er of instantiations such that conf  S  025 mi nConf and sup  S  025 minSup is NP-har d In the follo wing subsections w e presen tsc hemes for computing optimized sets that emplo y tec hniques for pruning the searc h space in order to o v ercome the complexit y of the problem In eac h subsection w e 014rst presen t the sc heme for computing optimized con\014dence sets and then brie\015y describ e the mo di\014cations to the sc heme in order to compute optimized supp ort sets 1 Note that if the domain of the n umeric attribute A i is large then it can b e partitioned in to a sequence of n i in terv als and successiv ein terv als can b e mapp ed to consecutiv ein tegers in the in terv al b et w een 1 and n i  


a minim um supp ort of 0.03 the optimized con\014dence rule results in the p erio d for whic h calls from NY in the p erio d are at least 3 of the total n um b er of calls and the p ercen tage of calls from NY that are directed to F rance is maxim um  With a minim um con\014dence of 0.5 the optimized supp ort rule results in the p erio d during whic h at least 50 of the calls from NY are to F rance  and the n um b er of calls originating in NY is maxim um  A limitatio n of the optimized asso ciation rules dealt with in is that only a single optimal in terv al for a single n umeric attribute can b e determined Ho wev er in a n um b er of applications a single in terv al ma y b e an inadequate description of lo cal trends in the underlying data F or example supp ose the telecom service pro vider is in terested in doing upto k promotions for customers in NY calling F rance F or this purp ose w e need a mec hanism to iden tify upto k p erio ds during whic h a sizable n um b er of calls from NY to F rance are made If asso ciation rules w ere p ermitted to con tain disjunctions of uninstan tiated conditions then w e could determine the optimal k or few er p erio ds b y 014nding optimal instan tiations for the rule  date 2  l 1 u 1  _\001\001\001 _  date 2  l k u k   src cit y  NY  dst country  F rance  The ab o v e framew ork can b e further strengthened b y enric hing asso ciation rules to con tain more than one uninstan tiated attribute and p ermitting attributes to b e b oth n umeric e.g date and duration sw ell as categorical e.g src cit y  dst country  Th us optimal instan tiations for the rule  src cit y  v 1  date 2  l 1 u 1  _ 001\001\001 _  src cit y  v k  date 2  l k u k   dst country  F rance w ould yield v aluable information ab out cities and p erio ds with a fairly high out w ard call v olume a substan tial p ortion of whic h is directed to F rance  Alternately  information ab out cities and sp e ci\014c dates can b e obtained from the rule  src cit y  v 1  date  u 1  _ 001\001\001 _  src cit y  v k  date  u k   dst country  F rance  This information can b e used b y the telecom service pro vider to determine the most suitable geographical regions and dates for o\013ering discoun ts on in ternational long distance calls to F rance  In this pap er w e generalize the optimized asso ciation rules problem describ ed in 5  in three w a ys{1 asso ciation rules are p ermitted to con tain disjunctions o v er uninstan tiated attributes 2 asso ciation rules are allo w ed to con tain an arbitrary n um b er of uninstan tiated attributes and 3 uninstan tiated attributes can b e either categorical or n umeric W e 014rst sho w that the problem of computing optimized supp ort and optimized con\014dence asso ciation rules in our framew ork is NP-hard W e then presen t a general depth 014rst se ar ch algorithm for exploring the searc h space The algorithm searc hes through the space of instan tiated rules in the decreasing order of the w eigh ted sums of their con\014dences and supp orts and uses br anch and b ound tec hniques to prune the searc h space e\013ectiv ely F or categorical attributes w e also presen ta gr aph se ar ch algorithm that in addition uses in termediate results to reduce the searc h Finally  for n umeric attributes w e dev elop tec hniques to eliminate certain instan tiated rules prior to searc hing through them Exp erimental results indicate that our sc hemes p erform w ell for a large n um b er of uninstan tiated attributes disjunctions and v alues in the domain of the uninstan tiated attributes Pro ofs of theorems presen ted in the pap er can b e found in 9  2 Related W ork Asso ciation rules for a set of transactions in whic h eac h transaction is a set of items b ough tb y a customer w ere 014rst studied in 1  These asso ciation rules for sales transaction data ha v e the form X  Y  where X and Y are disjoin t sets of items E\016cien t algorithms for computing them can b e found in 2 7  6 10 11 In 10 6  the generalization of asso ciation rules to m ultiple lev els of taxonomies o v er items is studied Asso ciation rules con taining quantitative and c ate goric al attributes are studied in and 11  The w ork in 8  restricts asso ciation rules to b e of the form A 1  v 1  A 2  v 2 only  They suggest w a ys to extend their framew ork to ha v e a range that is A 1 2  l 1 u 1  rather than a single v alue in the left hand side of a rule T oac hiev e this they partition n umeric attributes in to in terv als Ho w ev er they do not consider merging neigh b oring in terv als to generate a larger in terv al In 11  the authors use a p artial c ompleteness measure in order to determine the partitioning of n umeric attributes in to in terv als The optimized asso ciation rule problem w as in troduced in 5  The authors p ermit asso ciation rules to con tain a single uninstan tiated condition A 1 2  l 1 u 1  on the left hand side and prop ose sc hemes to determine v alues for v ariables l 1 and u 1 suc h that the con\014dence or supp ort of the rule is maximi zed In the authors extend the results in 5  t o the case in whic h rules con tain t w o uninstan tiated n umeric attributes on the left hand side They prop ose algorithms that disco v er optimized gain supp ort and con\014dence asso ciation rules for t w o classes of regions  rectangles and admissible regions for admissible regions the algorithms compute appro ximate not optimized supp ort and con\014dence rules Ho w ev er their sc hemes only compute a single optimal region In con trast our algorithms are general enough to handle more than t w o uninstan tiated attributes whic h could b e either categorical or n umeric F urthermore our algorithms can generate an optimal set of rectangles rather than just a single optimal rectangle note that w e do not consider admissible regions or the notion of gain in this pap er This enables us to 014nd more in teresting patterns 3 Preliminaries In this section w e de\014ne the optimized asso ciation rule problem addressed in the pap er The data is assumed to b e stored in a relation de\014ned o v er categorical and n umeric attributes Asso ciation rules are built from atomic conditions eac h of whic h has the form A i  v i  A i could b e either categorical or n umeric and A i 2  l i u i  only if A i is n umeric F or the atomic condition A i  v i if v i isav alue from the domain of A i  the condition is referred to as instantiate d  else if v i isav ariable w e refer to the condition as uninstantiate d  Lik ewise the condition A i 2  l i u i  s referred to as instan tiated or uninstan tiated dep ending on whether l i and u i are v alues or v ariables 


Mining Optimize d Asso ciation Rules with Categorical and Numeric A ttributes Ra jeev Rastogi Kyuseok Shim Bell Lab oratories Bell Lab oratories Murra y Hill NJ 07974 Murra y Hill NJ 07974 rastogi@researc h.b ell-labs.com shim@researc h.b ell-labs.com Abstract Asso ciation rules ar e useful for determining c orr elations b etwe en attributes of a r elation and have applic ations in marketing 014nancial and r etail se ctors F urthermor e optimized asso ciation rules ar e an e\013e ctive way to fo cus on the most inter esting char acteristics involving c ertain attributes Optimize d asso ciation rules ar ep ermitte dto c ontain uninstantiate d attributes and the pr oblem is to determine instantiations such that either the supp ort or c on\014denc e of the rule is maximize d In this p ap er we gener alize the optimize d asso ciation rules pr oblem in thr e e ways  1 asso ciation rules ar e al lowe dtoc ontain disjunctions over uninstantiate d attributes 2 asso ciation rules ar ep ermitte dtoc ontain an arbitr ary numb er of uninstantiate d attributes and 3 uninstantiate d attributes c an b e either c ate goric al or numeric Our gener alize d asso ciation rules enable us to extr act mor e useful information ab out se asonal and lo c al p atterns involving multiple attributes We pr esent e\013e ctive te chniques for pruning the se ar ch sp ac e when c omputing optimize d asso ciation rules for b oth c ate goric al and numeric attributes Final ly we r ep ort the r esults of our exp eriments that indic ate that our pruning algorithms ar e e\016cient for a lar ge numb er of uninstantiate d attributes disjunctions and values in the domain of the attributes 1 In tro duction Asso ciation rules in tro duced in 1  pro vide a useful mec hanism for disco v ering correlations among the underlying data In its most general form an asso ciation rule can b e view ed as b eing de\014ned o v er attributes of a relation and has the form C 1  C 2  where C 1 and C 2 are conjunctions of conditions and eac h condition is either A i  v i or A i 2  l i u i  v i  l i and u i are v alues from the domain of the attribute A i  Eac h rule has an asso ciated supp ort and c on\014denc e  Let the supp ort of a condition C i b e the ratio of the n um b er of tuples satisfying C i and the n um b er of tuples in the relation The supp ort of a rule of the form C 1  C 2 is then the same as the supp ort of C 1  C 2  while its con\014dence is the ratio of the supp orts of conditions C 1  C 2 and C 1  The asso ciation rules problem is that of computing all asso ciation rules that satisfy user-sp eci\014ed minim um supp ort and minim um con\014dence constrain ts and sc hemes for this can b e found in 1  2 6 10 11  F or example consider a relation in a telecom service pro vider database that con tains call detail information The attributes of the relation are date  time  src cit y  src country  dst cit y  dst country and duration  A single tuple in the relation th us captures information ab out the t w o endp oin ts of eac h call as w ell as the temp oral elemen ts of the call The asso ciation rule  src cit y  NY    dst country  F rance  ould satisfy the user-sp eci\014ed minim um supp ort and minim um con\014dence of 0.05 and 0.3 resp ectiv ely  if at least 5 of total calls are from NY to F rance  and at least 30 of the calls that originated from NY are to F rance  The optimize d asso ciation rules problem motiv ated b y applications in mark eting and adv ertising w as intro duced in 5  An asso ciation rule R has the form  A 1 2  l 1 u 1   C 1  C 2  where A 1 is a n umeric attribute l 1 and u 1 are uninstan tiated v ariables and C 1 and C 2 con tain only instan tiated conditions that is the conditions do not con tain uninstan tiated v ariables The authors prop ose algorithms for determining v alues for the uninstan tiated v ariables l 1 and u 1 for eac h of the follo wing cases 017 Con\014dence of R is maxim ized and supp ort of the condition  A 1 2  l 1 u 1   C 1 is at least the usersp eci\014ed supp ort referred to as the optimize dc on\014denc e rule 017 Supp ort of the condition  A 1 2  l 1 u 1   C 1 is maximi zed and con\014dence of R is at least the usersp eci\014ed con\014dence referred to as the optimize d supp ort rule Optimized asso ciation rules are useful for unra v eling ranges for n umeric attributes where certain trends or correlations are strong that is ha v e high supp ort or con\014dence F or example supp ose the telecom service pro vider men tioned earlier w as in terested in offering a promotion to NY customers who mak e calls to F rance  In this case the timing of the promotion ma y b e critical  for its success it w ould b e adv an tageous to o\013er it close to a p erio d of consecutiv eda ys in whic h at least a certain minim um n um b er of calls from NY are made and the p ercen tage of calls from NY to F rance is maxim um  The framew ork dev elop ed in 5  can b e used to determine suc h p erio ds Consider for example the asso ciation rule  date 2  l 1 u 1   src cit y  NY  dst country  F rance  With 


It can also be added to cell CrossSales.3\(PC, printer one_year,\205 5  Distributed and Incremental Rule Mining There exist two ways to deal with association rules 267  Static that is, to extract a group of rules from a snapshot, or a history, of data and use "as is 267  Dynamic that is, to evolve rules from time to time using newly available data We mine association rules from an e-commerce data warehouse holding transaction data. The data flows in continuously and is processed daily Mining association rules dynamically has the following benefits 267  223Real-time\224 data mining, that is, the rules are drawn from the latest transactions for reflecting the current commercial trends 267  Multilevel knowledge abstraction, which requires summarizing multiple partial results. For example association rules on the month or year basis cannot be concluded from daily mining results. In fact multilevel mining is incremental in nature 267  For scalability, incremental and distributed mining has become a practical choice Figure 3: Distributed rule mining Incremental association rule mining requires combining partial results. It is easy to see that the confidence and support of multiple rules may not be combined directly. This is why we treat them as \223views\224 and only maintain the association cube, the population cube and the base cube that can be updated from each new copy of volume cube. Below, we discuss several cases to show how a GDOS can mine association rules by incorporating the partial results computed at LDOSs 267  The first case is to sum up volume-cubes generated at multiple LDOSs. Let C v,i be the volume-cube generated at LDOS i The volume-cube generated at the GDOS by combining the volume-cubes fed from these LDOSs is 345   n i i v v C C 1  The association rules are then generated at the GDOS from the centralized C v  214  The second case is to mine local rules with distinct bases at participating LDOSs, resulting in a local association cube C a,I a local population cube C p,I  and a local base cube C b,i at each LDOS. At the GDOS, multiple association cubes, population cubes and base cubes sent from the LDOSs are simply combined, resulting in a summarized association cube and a summarized population cube, as 345   n i i a a C C 1   345   n i i p p C C 1  and 345   n i i b b C C 1  The corresponding confidence cube and support cube can then be derived as described earlier. Cross-sale association rules generated from distinct customers belong to this case In general, it is inappropriate to directly combine association cubes that cover areas a 1 205, a k to cover a larger area a In the given example, this is because association cubes record counts of customers that satisfy   customer product merchant time area Doe TV Dept Store 98Q1 California Doe VCR Dept Store 98Q1 California customer product merchant time area Doe VCR Sears 5-Feb-98 San Francisco Joe PC OfficeMax 7-Feb-98 San Francisco customer product merchant time area Doe TV Fry's 3-Jan-98 San Jose Smith Radio Kmart 14-Jan-98 San Jose Association   population      base          confidence      support cube               cube                cube         cube                cube LDOS LDOS GDOS 


the association condition, and the sets of customers contained in a 1 205, a k are not mutually disjoint. This can be seen in the following examples 214  A customer who bought A and B in both San Jose and San Francisco which are covered by different LDOSs , contributes a count to the rule covering each city, but has only one count, not two, for the rule A  336  B covering California 214  A customer \(e.g. Doe in Figure 3\who bought a TV in San Jose, but a VCR in San Francisco, is not countable for the cross-sale association rule TV  336 VCR covering any of these cities, but countable for the rule covering California. This is illustrated in Figure 3 6  Conclusions In order to scale-up association rule mining in ecommerce, we have developed a distributed and cooperative data-warehouse/OLAP infrastructure. This infrastructure allows us to generate association rules with enhanced expressive power, by combining information of discrete commercial activities from different geographic areas, different merchants and over different time periods. In this paper we have introduced scoped association rules  association rules with conjoint items and functional association rules as useful extensions to association rules The proposed infrastructure has been designed and prototyped at HP Labs to support business intelligence applications in e-commerce. Our preliminary results validate the scalability and maintainability of this infrastructure, and the power of the enhanced multilevel and multidimensional association rules. In this paper we did not discuss privacy control in customer profiling However, we did address this issue in our design by incorporating support for the P3P protocol [1 i n  ou r data warehouse. We plan to integrate this framework with a commercial e-commerce system References 1  Sameet Agarwal, Rakesh Agrawal, Prasad Deshpande Ashish Gupta, Jeffrey F. Naughton, Raghu Ramakrishnan, Sunita Sarawagi, "On the Computation of Multidimensional Aggregates", 506-521, Proc. VLDB'96 1996 2  Surajit Chaudhuri and Umesh Dayal, \223An Overview of Data Warehousing and OLAP Technology\224, SIGMOD Record Vol \(26\ No \(1\ 1996 3  Qiming Chen, Umesh Dayal, Meichun Hsu 223 OLAPbased Scalable Profiling of Customer Behavior\224, Proc. Of 1 st International Conference on Data Warehousing and Knowledge Discovery \(DAWAK99\, 1999, Italy 4  Hector Garcia-Molina, Wilburt Labio, Jun Yang Expiring Data in a Warehouse", Proc. VLDB'98, 1998 5  J. Han, S. Chee, and J. Y. Chiang, "Issues for On-Line Analytical Mining of Data Warehouses", SIGMOD'98 Workshop on Research Issues on Data Mining and Knowledge Discovery \(DMKD'98\ , USA, 1998 6  J. Han, "OLAP Mining: An Integration of OLAP with Data Mining", Proc. IFIP Conference on Data Semantics DS-7\, Switzerland, 1997 7  Raymond T. Ng, Laks V.S. Lakshmanan, Jiawei Han Alex Pang, "Exploratory Mining and Pruning Optimizations of Constrained Associations Rules", Proc ACM-SIGMOD'98, 1998 8  Torben Bach Pedersen, Christian S. Jensen Multidimensional Data Modeling for Complex Data Proc. ICDE'99, 1999 9  Sunita Sarawagi, Shiby Thomas, Rakesh Agrawal Integrating Association Rule Mining with Relational Database Systems: Alternatives and Implications", Proc ACM-SIGMOD'98, 1998   Hannu Toivonen, "Sampling Large Databases for Association Rules", 134-145, Proc. VLDB'96, 1996   Dick Tsur, Jeffrey D. Ullman, Serge Abiteboul, Chris Clifton, Rajeev Motwani, Svetlozar Nestorov, Arnon Rosenthal, "Query Flocks: A Generalization of Association-Rule Mining" Proc. ACM-SIGMOD'98 1998   P3P Architecture Working Group, \223General Overview of the P3P Architecture\224, P3P-arch-971022 http://www.w3.org/TR/WD-P3P.arch.html 1997 


Plenary Panel Session 30 XML Databases   Moderator: Michael Carey, IBM Almaden Research Center USA Panelists Adam Bosworth, Microsoft Corporation USA David De Witt University of Wisconsin-Madison, USA Alon Levy University of Washington USA Bruce Lindsay IBM Almaden Research Center USA Jennifer Widom Stanford University USA Demo Session 1 Web Query Optimizer  661 V Zadorozhny L Bright L Raschid T Urhan and M Vidal ReQueSS: Relational Querying of Semi-structured Data  664 R Sunderraman The IDEAL Approach to Internet-Based Negotiation for E-Business  666 J Hammer C Huang Y Huang C Pluempitiwiriyawej M Lee H Li L Wang Y Liu and S Su READY A High Performance Event Notification Service  668 R Gruber B Krishnamurthy, and E Panagos A Multimedia Information Server with Mixed Workload Scheduling  670 G Nerjes DISIMA An Object-Oriented Approach to Developing an Image Database System  672 V Oria T Ozsu P Iglinski B Xu and L Cheng Demo Session 2 The Collaboration Management Infrastructure  677 H Schuster D Baker A Cichocki D Georgakopoulos and M Rusinkiewicz Assisting the Integration of Taxonomic Data The LITCHI Toolkit  679 I Sutherland J Robinson S Brandt A Jones S Embury W Gray R White and F Bisby TheaterLoc: Using Information Integration Technology to Rapidly Build Virtual Applications  681 G. Barish Y.4 Chen D Dipasquo, C Knoblock S Minton I Muslea and C Shahabi Lineage Tracing in a Data Warehousing System  683 Y Cui and J Widom xiii 


The Mentor-Lite Prototype A Light-Weight Workflow Management System  685 J Weissenfels M Gillmann 0 Roth, G Shegalov and W Wonner Location Prediction and Queries for Tracking Moving Objects  687 0 Wolfson B Xu and S Chamberlain Semiorder Database for Complex Activity Recognition in Multi-Sensory Environments  689 S Bhonsle A Gupta S Santini and R Jain Tutorial 1 Web Information Retrieval  693 M Henzinger Tutorial 2 Mobile and Wireless Database Access for Pervasive Computing  694 P Chrysanthis and E Pitoura Tutorial 3 Data Mining with Decision Trees  696 J Gehrke Tutorial 4 Directories Managing Data for Networked Applications  697 D Srivastava Tutorial 5 Indexing High-Dimensional Spaces Database Support for Next Decade\222s Applications  698 S Berchtold and D Keim xiv 


 T5.I2.D100K T10.I4.D100K T15.I4.D100K T10.I6.D400K T10.I6.D800K T10.I6.D1600K Optimizations across Databases 5 0 5 10 15 20 25 30 35 40 45 Improvement COMP TREE COMP-TREE 1 2 4 8 1 2 4 8 1 2 4 8 2 4 8 2 4 8 1 2 4 8 Processors Databases Figure 5 Effect of Computation and Hash Tree Balancing good as the COMP optimization The reason that the hash tree balancing is not suf\336cient to offset inherent load imbalance in the candidate generation in this case The most effective approach is to apply both optimizations at the same time COMP-TREE The combined effect is suf\336cient to push the improvements in the 40 range in the multiple-processor case On 1 processor only hash tree balancing is bene\336cial since computation balancing only adds extra cost 5.4 Short-circuited Subset Checking Figure 6 shows the improvement due to the short-circuited subset checking optimization with respect to the unoptimized version The unoptimized version is the Apriori algorithm due to Agrawal et al 5 The results are presented for dif ferent number of processors across dif ferent databases The results indicate that while there is some improvement for databases with small transaction sizes the optimization is most effective when the transaction size is large In this case we get improvements of around 25 r the unoptimized version To gain further insight into this optimization consider 336gure 7 It shows the percentage improvement obtained per iteration on applying this optimization on the T20.I6.D100K database It shows results only for the uni-processor case r similar results were obtained on more processors We observe that as the iteration k increases there is more opportunity for shortcircuiting the subset checking and we get increasing bene\336ts of up to 60 The improvements start to fall off t the high end where the number of candidates becomes small resulting in a small hash tree and less opportunity for short-circuiting It becomes clear that is an extremely effective 15 Proceedings of the 1996 ACM/IEEE Conference on Supercomputing \(SC\22296 0-89791-854-1/96 $ 10.00 ACM 


 T5.I2.D100K T10.I6.D800K T15.I4.D100K T20.I6.D100K procs across Databases 0 5 10 15 20 25 Improvement 1 2 4 8 Figure 6 Effect of Short-circuited Subset Checking 23456789101112 Iterations 0 10 20 30 40 50 60 improvement T20.I6.D100K Figure 7  Improvement per Iteration  proc   16 Proceedings of the 1996 ACM/IEEE Conference on Supercomputing \(SC\22296 0-89791-854-1/96 $ 10.00 ACM 


optimization for larger transaction sizes and in cases where there are large number of candidate k itemsets 6 Conclusions In this paper e presented a parallel implementation of the Apriori algorithm on the SGI Power Challenge shared memory multi-processor We also discussed a set of optimizations which include optimized join and pruning computation balancing for candidate generation hash tree balancing and short-circuited subset checking We then presented experimental results on each of these Improvements of more than 40 were obtained for the computation and hash tree balancing The short-circuiting optimization was found to be extremely effective for databases with large transaction sizes Finally we reported the parallel performance of the algorithm While we d good speed-up we observed a need for parallel I/O techniques for further performance gains References  R Agra wal T  Imielinski and A Swami Database mining A performance perspecti v e  I n IEEE Trans on Knowledge and Data Engg  pages 5\(6 1993  R Agra wal T  Imielinski and A Swami Mining association rules between sets of items in lar ge databases In Proc M SIGMOD Intl Conf Management of Data  May 1993  R Agra wal H Mannila R Srikant H T o i v onen and A I V erkamo F ast disco v ery of association rules In U F et al editor Advances in Knowledge Discovery and Data Mining  MIT Press 1996  R Agra wal and J Shafer  P arallel mining of association rules design implementation and e xperience Technical Report RJ10004 IBM Almaden Research Center San Jose CA 95120 Jan 1996  R Agra wal and R Srikant F ast algorithms for mining association rules In Proc 20th VLDB Conf  Sept 1994  M Cierniak W  Li and M J Zaki Loop scheduling for heterogeneity  I n 4th IEEE Intl Symposium on High-Performance Distributed Computing also as URCS-TR 540 CS Dept Univ f Rochester  Aug 1995  M Holsheimer  M  K ersten H Mannila and H T o i v onen A perspecti v e on databases and data mining In 1st Intl Conf Knowledge Discovery and Data Mining  Aug 1995  M Houtsma and A Swami Set-oriented mining of association rules In RJ 9567  IBM Almaden Oct 1993  H Mannila H T o i v onen and I V erkamo Ef 336cient algorithms for disco v ering association rules In AAAI Wkshp Knowledge Discovery in Databases  July 1994  J S P ark M Chen and P  S Y u  A n e f fecti v e hash based algorithm for mining association rules In Proc M SIGMOD Intl Conf Management of Data  May 1995 17 Proceedings of the 1996 ACM/IEEE Conference on Supercomputing \(SC\22296 0-89791-854-1/96 $ 10.00 ACM 


 J S P ark M Chen and P  S Y u  E f 336cient parallel data mining for association rules T echnical Report RC20156 IBM T J Watson Research Center Aug 1995  G Piatetsk y-Shapiro Disco v ery  presentation and analysis of strong rules In G P S et al editor  KDD  AAAI Press 1991  A Sa v asere E Omiecinski and S Na v athe An ef 336cient algorithm for mining association rules in large databases In Proc 21st VLDB Conf  1995  M J Zaki M Ogihara S P arthasarathy  and W  Li P arallel data mining for association rules on shared-memory multi-processors Technical Report 618 Department of Computer Science University of Rochester 618 1996 18 Proceedings of the 1996 ACM/IEEE Conference on Supercomputing \(SC\22296 0-89791-854-1/96 $ 10.00 ACM 


