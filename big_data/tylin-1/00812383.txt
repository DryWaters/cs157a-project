Discovering Web Access Orders with Association Rules Charles Lo and Vincent Ng lDepartment of Computing, Hong Kong Polytechnic University Hong Kong China cschamlo@comp.polyu.edu.hk cstyng@comp.polyu.edu.hk ABSTRACT In the past few years the use of World-Wide-Web WWW has grown exponentially It is important for companies to analyze the behaviors of their customers so as to have better profit and services This paper ex plores the technique of association rules to discover the access patterns of WWW users In order to support our proposed algorithms there is a pre-mining phase which filters and transforms WWW access logs into 
a database of access transactions Our first algorithm Extended Apriori algorithm EAA is a variant of the infamous Apriori algorithm This algorithm is modi fied to handle the item order in the counting and gener ation steps of the candidate access patterns However the EAA does not deal with the minimal viewing time constraint directly In the OPM algorithm we propose to consider how to reduce the number of database scans and exploit the minimal viewing time constraint during the candidate itemset generation In our experiments the results showed that the OPM algorithm took less than half of the time required 
by by the EAA  1 INTRODUCTION The problem of discovering association rules was first introduced in l It is to find the possible associations between items when a user specifies a minimum sup port s and a minimum confidence c For example one possible association rule can be there are 10 of customers who buy bread and 20 of them also buy butter Those rules are usually used to make better stocking and discounting decisions Recently, different knowledge discovery techniques have been attempted in the area of WWW because of its rapid growth and popularity In 21 the 
original sequence of log data is converted into a set of max imal forward references From these references the full-scan and selective-scan algorithms are developed to determine the large traversal patterns of users In the selective-scan algorithm it can reduce the number of database scans by utilizing the candidate reference sequences Borges and Levene proposed to use an in cremental approach to find out the traversal patterns of users 3 In their work the concept of confidence and support for composite associate rules are redefined 3 Two algorithms Modified Depth-First Search Al lThe work of the authors were 
supported in part by the Hong Kong RGC Grant QlZO 3 0-7803-573 1 0 95 10.00 0 1999 IEEE Iv-99 gorithm and Incremental Step Algorithm are proposed There may be many traversal patterns of our WWW users Not all results are interesting One sug gestion in measuring a user's interest in the web pages is the viewing time of the pages 4 Shahabi introduced a novel path clustering method based on the similarity of the history of user navigation Therefore instead of generating all the frequent patterns we propose to allow users to define 
their own interests the number of web pages in a pattern and the minimum viewing time of the pages in the pat By exploiting, these information it would improve the mining efficiency significantly The two new parameters above can be considered as new constraints in mining association rules The first parameter is the size constraint which limits the number of items pages in each pattern The sec ond parameter is the viewing constraint which is an inequality of quantitative values associated with the items Recently Srikant et al lo have proposed the 
MuZtzpleJoin algorithm and the Direct algorithm to discover association rules which satisfy a given boolean expression over the items of a database The expres sion is used to indicate the existence or non-existence of the items Only association rules satisfying the ex pression are output However quantitative items are not supported In 9 the CAP algorithm is developed to deal with the constrainted association queries The algorithm shows how to optimize the mining process when the input constraints are either anti-monotone or succinct or both In this paper we suggest two approaches in ap plying association mining 
to discover WWW access patterns The first approach is to modify the infa mous Apriori algorithm to handle the item order in the counting step and the candidate itemset generation step However the Extended Apriori algorithm \(EAA cannot deal with the minimal viewing constraint for the access patterns effectively In the OPM algorithm we propose to consider how to reduce the number of database scans and exploiting the minimal constraint during itemset generation tern 2 ACCESS TRANSACTIONS For most WWW servers there are access logs to keep track of their utilizations An example of such as a log 


158.132.24.196  C07/0ct:12:37:34 158.132.24.196   07/0ct:12:37:34 158.132.24.196   07lO~t:I2:37:34 158.132.24.196   07/0ct:12:37:34 158.132.24.196   07/0ct:I2:37:34 158.132.24.198   01/Ocf:12:42:43 158.132.24.196   07fOct:l2:42:57 158.132.24.196   Co7fOct:12:45:12 158.132.24.198  COlIOst  12:45 15 158.132.24.187   07fOct:l4:12:59 158.132.24.181   C07/0ct:14:13:00 168.132.24.187   0710st:l4:13:00 158.132.24.196   07/0st:l4:28:38 158.132.24.196   0710ct:14:28:39 Wij O\(i j GET ficmsfblank.gii HTTPfI.0 200 148 GET 1iconsfback.gii HTTPf1.0 200 216 GET lisonalfoldsr.gii HTTPII.0" 200 225 GET ficonsftext.gir HTTPf1.0 200 229 GET fyuan.htm HTTPII.0 403 288 GET findex.htm1 HTTPII.0 403 290 GET lindsx.htm1 HTIPfI.0 403 290 GET Iyuen.htm HTTPI1.0 403 288 GET /-vti-ini.html HTTPfI.0 403 293 GET f-vti-inf.htm1 HTTPI1.0 403 293 GET f HTTPIl.0 403 280 GET f HTTPf 1 O 200 7122 GET fImagasfnsvs.jpg HTTPfl.0" 200 3507 GET ficonsfinaga2.gii Hnpfi.o 200 309 entries of Ti as PO dij function to find the page label of the ith element of transaction T Figure 1 WWW access log di,j S AP\(Si is shown in Figure 1 It is difficult to apply any mining technique directly on these logs as their formats may vary More importantly each line in the log file only indicates one access of a particular Web page This is only interesting from a single server view but not for individual users It is more useful if we can identify Web pages that are accessed by an individual user or even a session done by an individual user A normal WWW access log records the information of client IP address name of html pages and the access time on those pages Based on these information our identifi cation method is based on the followings assumptions viewing time of the page in Wij a subsequence of size k in Ti set of access patterns page labels equivalent to SZ The server can be a WWW server or a proxy server as long as access logs can be recorded Only one user is active on a single IP address at a time Ak Lk CI 0 When a user has been idle for a long time say 1 hour\the current session ends 0 Local cache in the client machines have been disable and every Web page access will need to be served by the server an acess pattern of size k set of frequent patterns of size k set of candidate Datterns of size k Step I S1ep 2 p2  p   7 6 Figure 2 An access pattern p 6 Each session of a user is transformed into an access transaction For example, in Figure 2 User A accessed the web pages in the sequence of P2  P4  Ps  P4  Ps  P7 The access sequence forms a list of order pairs in the format of Pi dij where Pi is the page label number and dij the viewing time of the page Each order pair of Ti is represented as Wij For the example in Figure 2 the sequence of the access transaction is 2,7\\(4,5 6,5 4,5 5,2 7,9 From the access log we identify the sessions trans form them into access transactions and then prepare for mining of user behaviors Suppose that there are two access transactions Ti and Z and Si and Sk are two sub-sequences of size k in the transactions respec tively We can then have the following definition Definition 1 Si and Si are are access equivalent iff 3x,y such that PO  Po\(l,y+a where a  0,1,2    k  1 and O\(i x represent the page label for wix  In Figure 3 we define the terminologies which will be used in later sections p 2 T T II ith access transaction 11 all access transaction in the database Step 5  p D Figure 3 Some definitions 3 PROBLEM DESCRIPTION The support count of an access pattern is the number of the access equivalent patterns in the access transac tions As in l when the count exceeds the minimum support s it is called as a frequent access pattern That is Definition 2 APk E AP\(Si is frequent if I AP\(Si  sx I T I Next we formally define our first problem statement Problem 1 Consider a database of access transac tions as Tl,T2    We would like to extract all the frequent access patterns APk for all k s As discussed in the Introduction section, not all access patterns are interesting Our second problem state w 100 


ment is to allow a user in specifying two constraints The first one is the number of web pages in a pattern and the other is the minimum viewing time of the pages in the pattern With a given size of a pattern, it allows us to avoid the generation of non-interesting itemset Hence there will be less database scans The view ing time constraint reveals the interest of users in the pages and allow us to prune away unnecessary candi date sets With these constraints we define our second problem below Problem 2 As in the first problem statement con sider the following access transactions Ti  Wil    Wi Wij  Po\(i,j dij in a database We would like to extract all the frequent patterns of size k APk 222s where for each equivalent access pattern si of a APk we have F is a threshold value representing the minimal viewing time of the pattern In fact Problem 2 is the same as Problem 1 except with the introduction of the viewing time constraint 4 EXTENDED APRIORI ALGORITHM We first present the Extended Apriori Algorithm EAA for finding all frequent access patterns It is a modified version of Apriori which considers the or dering of the pages during the mining The viewing constraint will only be applied after all the frequent pattern are generated The EAA has two phases Find all the access patterns S\222s whose supports are greater than the minimum support s and these pat terns are called frequent access pattern Evaluate the total viewing time of the mined pat terns and check if they satisfy the viewing con straint Obviously the first phase is the core of the algorithm In order to generate the large patterns Lk we need to consider the order of pages items in generating the candidate set ck In the original Apriori algorithm the order of items within a itemset is ignored The candidate set generation part of the algorithm is mod ified as in Figure 4 In the procedure, it ensures that ck is the superset of Lk with the consideration of the pages ordering within the pattern After ck+l is generated we have to prune those pattern whose support is less than the minimum re quirements So we have to scan the database to count Given a set of Lk we want to form the candidate item set Ch+l 1 For each pair of access patterns in Lk as Ak and Ak7 where Figure 4 Candidate pattern generation the number of support of each pattern in ck+l by stor ing them into a hash tree After the hashing we get the desired pattern in Lk+l The algorithm stops when reaching the size constraint set by the user The sec ond phase is simply done by checking the dij of each pattern sk in Lk+l if they exceed F 5 OPM ALGORITHM In our work only patterns of size k which is speci fied by users and their viewing times longer than F are useful We try to exploit these two constraints to achieve better efficiency This is done by looking into the following aspects 1 Reduce the number of scanning the entire database 2 Reduce the number of candidate pattern viewing size constraint\and time constraint With the new constraints we developed the generat ing sequence and max-man pruning techniques respec tively These techniques are embedded in our second algorithm Order Pattern Mining OPM 5.1 Generating Sequence The idea is to generate ck from Lk/2 if ever possible With this approach we can skip the generation steps of Lk/2+1 Lk/2+2   and Lk-1 In the best case it takes only log2 k steps in finding Lk instead of the k steps in Apriori When IC is not a multiple of 2 we first find out the L\222s up to L where 2\224  k  2\224+l We then find Lk by utilizing L LWl2 Lw/4   etc For example if k is 31 instead of taking 31 steps to find out L31 we will only take 9 steps Iv-101 


Given the generating sequence GS  gsl gs2    and let L be the current large itemset 0 if gsi  gsi-1  1 then  For any two patterns A A E L  if A n ASi7  4 then  c  A U A 222 Insert c into CSi   else  Apply the candidate generation procedure as in Figure 4 Figure 5 Mining under generating sequence GS For a given integer value k the generating sequence GS gsl gs2    is obtained by the following formula gs if gsi is even gsi-1 otherwise gsi-1  where gsl equals to 1 initially The resultant sequence GS is then used to guide the generation of the can didate pattern The algorithm which make use of the generate sequence is shown in Figure 5 5.2 MaxNin Pruning The performance of the Apriori algorithm is mainly depended on two integers X and Y where X is the number of the database scanning and Y is the number of candidate itemsets in each iteration. In the previous section we have discussed how to reduce the value of X rapidly Here we will discuss how to reduce the value of Y There are two pruning possibilities in reducing the size of the candidate pattern The first situation is when ck is generated from Lk-1 In this case for any candidate pattern c if one of its k  1 is not in Lk-1 c should be removed from ck The second situation is when ck is generated from Lk/2 Similarly for any pattern that some of its k/Zsubsets is not in Lk/2 c should be removed also There is a trade off when C2k is generated by Lk In general the number of candidate patterns is larger when compare to the case that C2k is generated by L2k-1 To offset the problem we can utilize the viewing time constraint in our pruning In the first database scanning to find L1 we can obtain the maximum viewing time of individual pages and form the list maxlstl After we obtained L2 the maximum viewing time of each pattern is the maxi mum sum of the viewing times of these two pages in dif ferent transactions The list maxlstz V21  Vz2   is then re-sorted in a descending order according to the maximum values This procedure is repeated at the end of each iteration and forms one maxlsti ev erytime The idea of MaxMin pruning is to allow us Given maxlsti as  vi vi     1 if the sum of the Vil      Vi is greater than F then 0 set counter c  k  i  1 0 set maxsumi equal to the sum of V      0 Repeat Vic items  increase c by 1 until V maxsumi 5 F  remove all the items whose index is larger than c from Li and form Li\222 Figure 6 Min-pruning for Li at iteration i to remove a candidate access pattern whose maximum is less than the minimum viewing time set F even before the database scanning The pruning procedure of MaxMin is shown in Figure 6 6 EXPERIMENTS In this section we compare the two proposed algo rithms EAA and OPM We notice that it is not suffi cient to determine the efficiency of the algorithms by only counting the number of steps in generating the candidate itemsets For the OPM, it takes fewer steps to find Lki but at the same time, it takes extra effort for MaxMin pruning process of the large itemsets at each step For example in pruning Lk we need to ver ify if all of the k/2 for an element in ck are in Lk/2 If items are totally associated with each other the number of comparisons will be kckp x ckp at each mining step On the other hand for EAA there will only be kck-1 x ck-1 comparisons at each step However EAA generates the frequent patterns incre mentally and a post-mining process for the evaluating of the viewing time inequality is required Obviously the OPM algorithm will out-perform EAA by exploit ing the two new constraints In order to assess the performance of the algo rithms we have implemented the EAA and the OPM algorithm in C We ran our preliminary experi ments on a SUN SPARC workstation with 32 Mbytes of main memory There are two sets of experiments The first set is based on a fixed number of transac tions 1000 generated by a program modified from the pseudo-data generation program in l The spe cific pattern size is 8 the minimum threshold of the viewing time is 30 minutes and support is set to be 5 We are interested in measuring the time to dis cover the constrainted access pattern under different numbers of pages among the transactions The results are shown in Figure 7 The second set of experiments is similar to the first N 102 


0 0 500 1000 1500 2000 2500 Number of items \(pages Figure 7 Discovery time for a database of lo4 access transactions but varying number of pages set except that we have fixed the number of pages and experimented with different database sizes The cor responding results is shown in Figure 8 The results show that the OPM algorithm are more efficient and also the number of transactions has a larger impact than the number of pages in the access log database This is expected since we have to scan the whole database everytime for each iteration The OPM al gorithm skips many unnecessary iterations Therefore the more transactions in the database the better the algorithm can save the computational effort This can easily observed in Figure 8 and the OPM algorithm generally speeds up the mining process for more 100 when compared with OAA 7 CONCLUSIONS In this paper we present two algorithms for the mining of access patterns in WWW pages Before the mining process there is a pre-mining phase which filters and transforms WWW access logs into a database of ac cess transactions Our first approach is to modify the infamous Apriori algorithm to handle the item order in the counting and generation steps of the candidate access patterns However the Extended Apriori algo rithm does not deal with the minimal time constraint for each access pattern effectively In the OPM algo rithm we propose to consider how to reduce the num ber of database scans and exploiting the minimal con straint during itemset generation In our experiments the results showed the OPM algorithm took less than half of the time required by by the EAA x 10 Number of Transactions Figure 8 database transaction Discovery time for different number of REFERENCES R Agrawal R Srikant Fast Algorithm for Min ing Association Rules in Large Databases In Proc VLDB'94 Santiago Chile September 1994 Ming-Syan Chen Jong So0 Oark Philip S.Yu Data Mining for path Trversal Patterns in a Web Envi ronment In Proc ICDCS'96 pp 385  392 Jose Borges Mark Levene Mining Association Rules in Hypertext Databases In KDD'98 pp 149  153 Cyrus Shahabi Amir M.Zarkesh Jafar Adibi Vishal Shah Knowledge Discovery from Web-Page Navigation In IEEE RIDE'1997 Roberto J Bayardo Jr Efficiently Mining Long Patterns from Databases In Proc of the ACM SIGMOD R Agrawal R Srikant Mining Sequential Patterns In Proc. International Conference on Data Engi neering 1995, pp 3-14 R Agrawal T Imielinski A Swami Mining As sociation Rules between Sets of Items in Large Databases In Proc ACM-SIGMOD International Conference on Management of Data 1993 pp 207 216 RJ Miller and Y Yang Association Rules over In terval Data In Proc ACM-SIGMOD 1997 pp 452 461 R Ng L Lakshmanan J Han A Pang Exploratory Mining and Pruning Optimizations of Constrained Association Rules In Proc ACM-SIGMOD 1998 IV 103 


lo R Srikant Q Vu and R Agrawal Mining Asso ciation Rules with Item Constraints KDD\22297 pp 67-73 ll R Srikant and R Agrawal Mining Quantitative Association Rules in Large Relational Tables In Proc ACM-SIGMOD 1996 I121 T Zhang R Ramakrishnan and M Livny BIRCH An Eficient Data Clustering Method for Very Large Databases In Proc of the ACM-SIGMOD Montreal Canada 1996 IV-104 


4.1 Generation of synthetic workload 500 8 400 s 2 300 i h E 4 200 0 s 100 W o For obtaining reliable experimental results the method to generate synthetic transactions we employed in this study is similar to the ones used in prior works 2 131 These transactions mimic the publication items in a publication database Each database consists of ID1 transactions and on the average, each transaction has IT1 items To simu late the characteristic of the exhibition period in each item transaction items are uniformly distributed into database 73 with a random selection In accordance with the exhibition periods of items database 2 is divided into n partitions Ta ble 2 summarizes the meanings of various parameters used in the experiments The mean of the correlation level is set to 0.25 for our experiments. Without loss of generality we use the notation Tx  Iy  Dm to represent a database in which D  m thousands IT1  x and 111  y We compare relative performance of Apriori and PPM    T 10-14-DI 00    Apriori A PPM   i    ____  _     I 1731 I Number of transactions in the database  ____   1 IT1 I Average size of the transactions  1 I I Average size of the maximal frequent itemsets ILI 1 Number of maximal potentially frequent itemsets N I Number of items IP;I I Number of transactions in the Dartition database Pi Table 2 Meanings of various parameters 4.2 Relative performance We first conducted several experiments to evaluate the relative performance of Apriori and PPM Since the ex  perimental results are consistent for various values of n ILI and N for interest of space we only report the results on ILI  2000 and N  10000 in the following experiments Figure 4 shows the relative execution times for both two algorithms as the minimum support threshold is decreased from 1 support to 0.1 support. When the support thresh old is high there are only a limited number of frequent item sets produced. However as the support threshold decreases the performance difference becomes prominent in that PPM significantly outperforms Apriori Explicitly PPM is in orders of magnitude faster than Apriori and the margin grows as the minimum support threshold decreases 4.3 Scaleup performance In this experiment we examine the scaleup performance of algorithm PPM The scale-up results for different se lected datasets are obtained. Figure 5 shows the scaleup per formance of algorithm PPM as the values of ID1 increase 0.1 0.3 0.5 0.7 0.9 Minimum Support  g2400 E1800 i i v 20-16-D 100  Appriori A PPM I Figure 4 Relative performance studies Three different minimum supports are considered We ob tained the results for the dataset T10  I4  Dm when the number of customers increases from 100,000 to one mil lion The execution times are normalized with respect to the times for the 100,000 transactions dataset in the Fig ure 5 Note that as shown in Figure 5 the execution time only slightly increases with the growth of the database size showing good scalability of PPM 5 Conclusion In this paper we not only explored a new model of mining general temporal association rules i.e X  Y XY in a publication database but also developed algorithm PPM to generate the temporal association rules as well as conducted related performance studies Un der PPM the cumulative information of mining previous partitions is selectively carried over toward the generation of candidate itemsets for the subsequent partitions Algo rithm PPM is particularly powerful for efficient mining for a publication-like transaction database, such as bookstore transaction databases video rental store records library book rental records and transactions in electronic com merce One extension to our proposed model in this paper is to mine general temporal association rules with different 343 


9 2 1 100 300 500 700 900 ID transaction number K Figure 5 Scaleup performance of PPM start and end points of items This is an interesting yet chal lenging issue since the levelwise property does not hold in this situation, and will be a matter of future research 6 Acknowledgment The authors are supported in part by the Ministry of Ed ucation Project No 89-E-FA06-2-4-7 and the National Sci ence Council Project No NSC 89-2219-E-002-028 and NSC 89-22 18-E-002-028, Taiwan, Republic of China References I R Agrawal T Imielinski and A Swami Mining Association Rules between Sets of Items in Large Databases Proc of ACM SIGMOD pages 207-216 May 1993 2 R. Agrawal and R. Srikant Fast Algorithms for Min ing Association Rules in Large Databases Proc of the 20th International Conference on Very Large Data Bases pages 478-499 September 1994 3 J.M. Ale and G. Rossi An Approach to Discovering Temporal Association Rules ACMSymposium on Ap plied Computing 2000 4 M.4 Chen J Han and P S.Yu Data Mining An Overview from Database Perspective IEEE Transac tions on Knowledge and Data Engineering 8\(6 883, December 1996 5 X Chen and I Petr Discovering Temporal Associa tion Rules: Algorithms, Language and System Proc of 2000 Int Con on Data Engineering 2000 6 D Cheung J Han V Ng and C.Y Wong Main tenance of Discovered Association Rules in Large Databases An Incremental Updating Technique Proc of 1996 Int'l Conj on Data Engineering pages 106-1 14, February 1996 7 J Han and Y Fu Discovery of Multiple-Level Asso ciation Rules from Large Databases Proc of the 21th International Conference on Very Large Data Bases pages 420-431 September 1995 8 J Han J Pei, and Y Yin Mining Frequent Patterns without Candidate Generation Proc of 2000 ACM SIGMOD Int Con on Management of Data pages 486-493 May 2000 9 J Hipp U Giintzer and G Nakhaeizadeh Algo rithms for association rule mining  a general survey and comparison SIGKDD Explorations 2 1 July 2000 Sliding Window Filtering An Efficient Algorithm for Incre mental Mining Proc of the ACM 10th Intern I Conf on Information and Knowledge Management Novem ber 200 1 Mining Association Rules Anti-Skew Algorithms Proc of 1998 Int'l Conj on Data Engineering pages 486-493 1998 12 B Liu W Hsu and Y Ma Mining Association Rules with Multiple Minimum Supports Proc of I999 Int Con on Knowledge Discovery and Data Mining Au gust 1999 13 J.-S Park M.-S. Chen, and P S Yu Using a Hash Based Method with Transaction Trimming for Mining Association Rules IEEE Transactions on Knowledge and Data Engineering 9\(5 13-825 October 1997 14 R Srikant and R Agrawal Mining Generalized As sociation Rules Proc of the 21th International Con ference on Very Large Data Bases pages 407-419 September 1995  151 R. Srikant and R Agrawal Mining quantitative asso ciation rules in large relational tables Proc of I996 ACM-SIGMOD Con on Management of Data 1996  161 A K H Tung J Han, L V S Lakshmanan, and R T Ng Constraint-Based Clustering in Large Databases Proc of 2001 Int Conj on Database Theory January 2001  171 K Wang Y He, and J Han. Mining Frequent Itemsets Using Support Constraints Proc of2000 Int Con on Very Large Data Bases September 2000 18 C Yang U Fayyad and P Bradley Efficient dis covery of error-tolerant frequent itemsets in high di mensions The Seventh ACM SIGKDD International Conference on Knowledge Discovery and Data Min ing 200 1 lo C.-H Lee C.-R Lin and M.-S Chen ll J.-L Lin and M.H Dunham 344 


n I31 41 51 61 71 8 I 9 Graph diameter q5\(SCCn Average number of lateral links E Average number of MI local links MI\(loc Average number of MB local links MB\(Zoc I Graph size n  1 e n I 12 I 72 I 480 I 3,600 I 30,240 I 282,240 I 2,903,040 6 8 16 19 1.500 2.583 3.683 4.783 0.667 1.500 3.200 5.000 0.833 1.222 1.925 2.337 1.500 3.000 Average number of local links L Average distance d\(SCC 2.722 5.125 7.337 5.306 8.808 12.121 Table 1 Average distance of SCC graphs under minimal routing 300000 250000 g 200000 3 E L 150000   100000 50000 0 erage number of MB local links is concerned. Also observe that for 3 5 n 5 4 the greedy routing algorithm performs as well as the minimal routing algorithm Besides, our re sults indicate that the performance of these algorithms is quite similar for 5 5 n 5 9 which makes the less complex greedy routing algorithm particularly attractive Average costs of paths produced by the three routing al gorithms are summarized in Table 2 The random routing algorithm has a complexity of O\(n and performs reason ably well on the average Utilization of such an algorithm may however result in variations in the average cost of routes up to the worst-case values shown in Table 2  Minimal routing  andom rout. \(worst case     n 3 Minimal Greedy Random routing rout rout Theor Simul Worst-case 3.000 3.000 3.000 3.084 3.167 I1 I I I I I 4 5 I I I I I 5.306 5.305 5.500 5.514 5.694 8.808 8.812 9.261 9.264 9.775 Table 2 Average costs vs routing algorithms Figure 6 shows distribution curves comparing the three routing algorithms in the case of an SCC graph A point 01 NI in one of these curves indicates that the corre sponding routing algorithm will compute a route of cost DI to the identity for NI nodes in the SCC graph The aver age distribution for the random routing algorithm is shown but the results for that algorithm may actually vary from the minimal to the worst-case distributioncurves due to the non deterministic nature of the algorithm It is also interesting to observe that the greedy routing algorithm provides a dis tribution curve which is close to that of the minimal routing algorithm presenting however a smaller complexity 6 Considerations on wormhole routing 3 In this section we briefly describe how the algorithms presented in the paper cam be combined with wormhole routing 6 which is a popular switching technique used in parallel computers All three algorithms can be used with wormhole routing when implemented as source-based routing algorithms  111 In source-based routing tlhe source node selects the entire path before sending the packet Because the processing delay for the routing algorithm is incurred only at the source node it adds only once to the communication latency and can be viewed as part of the start-up latency Source-based routing however has two disadvantages 1 each packet must carry complete information about its path in the header which increases the packet length and 2 the path cannot be changed while the packet is being routed which precludes incorporating adaptivity into the routing algorithm Distributed routing eliminates the disadvantages of source-based routing by invoking the routing algorithm in each node to which the packet is forwarded ll Thus the decision on whether a packet should be delivered to the local processor or forwarded on an outgoing link is done 451 


locally by the routing circuit of a node Because the routing algorithm is invoked multiple times while a packet is being routed the routing decision must be taken as fast as pos sible From this viewpoint it is important that the routing algorithm can be easily and efficiently rendered in hardware which favors the random routing algorithm over the greedy and minimal routing algorithms Besides being the most complex algorithm discussed in this paper the minimal routing algorithm includes a feature which precludes its distributed implementation in associa tion with wormhole routing namely its backtracking mech anism Distributed versions of the random and greedy al gorithms, however, can be used in combination with worm hole routing A near-minimal distributed routing algorithm which supports wormhole routing can be obtained by re moving the backtracking mechanism from Alg 3 Such an algorithm is likely to have computational complexity and average cost that lie between those of the greedy and the minimal routing algorithm Due to its non-deterministic nature the random routing algorithm also seems to be a good candidate for SCC net works employing distributed adaptive routing  1 I Adap tivity is desirable for example if the routing algorithm must dynamically respond to network conditions such as conges tion and faults Some degree of adaptivity is also possible in the greedy and minimal routing algorithms which in some cases can decide between paths of equal cost 7 Conclusion This paper compared the average cost and the complex ity of three different routing algorithms for the SCC graph We divided routes into three components \(lateral links MI local links and MB local links and showed that only the number of MB local links may be affected by the routing algorithm being considered Exact expressions for the aver age number of lateral links and the average number of MI local links were presented Also an upper bound for the average number of MZ local links was derived considering a random routing algorithm As a result a tight upper bound on the average distance of the SCC graph was obtained Simulation results for a random a greedy and a minimal routing algorithm were presented and compared with theo retical values The complexity of the proposed algorithms is respectively O\(n O\(n2 and O\(n3 where n is the dimensionality of the SCC grap.h The results under mini mal routing produce exact numerical values for the average distance of SCC for 3 5 n 5 9 Results for the greedy algorithm match those of the min imal algorithm for 3 2 n 5 4 The greedy algorithm also performs close to minimality for 5 5 n 5 9 and is an in teresting choice due to its O\(n2 complexity The random routing algorithm has an O\(n complexity and performs fairly well on the average but may introduce additional MB local links in the route under worst-case conditions Finally we discussed how each of the routing algorithms can be used in association with the wormhole routing switch ing technique Directions for future research in this area in clude an evaluation of requirements for deadlock avoidance e.g number of virtual channels References l S B Akers,D. HarelandB Krishnamurthy,\223TheStarGraph An Attractive Altemative to the n-Cube,\224 Proc Int\222l Con Pal Proc 1987 pp 393-400 2 M M Azevedo N Bagherzadeh and S Latifi 223Broadcasting Algorithms for the Star-Connected Cycles Interconnection Network,\224 J Pal Dist Comp 25,209-222 1995 3 M M Azevedo N Bagherzadeh and S Latifi 223Embed ding Meshes in the Star-Connected Cycles Interconnection Network,\224 to appear in Math Mod. and Sci Comp 4 M M Azevedo N Bagherzadeh and S Latifi 223Fault Diameter of the Star-Connected Cycles Interconnection Net work,\224 Proc 28th Annual Hawaii Int\222l Con5 Sys Sci Vol 11 Jan. 3-6 1995 pp 469-478 SI W.-K Chen M F M Stallmann andE E Gehringer 223Hy percube Embedding Heuristics An Evaluation,\224 Int\222l J Pal Prog Vol 18 No 6 1989 pp 505-549 6 W J Dally and C I Seitz 223The Torus Routing Chip,\224 Dist Comp Vol 1 No 4 1986 pp 187-196 7 K Day and A Tripathi,\223A Comparative Study ofTopologica1 Properties of Hypercubes and Star Graphs,\224 IEEE Trans. Pal Dist Sys Vol 5 No 1 Jan. 1994 pp 31-38 8 D E Knuth The Art of Computer Programming Vol I Addison-Wesley 1968 pp 73 pp 176-177 9 S Latifi 223Parallel Dimension Permutations on Star Graph,\224 IFIP Trans A Comp Sei Tech 1993 A23 pp 191-201 lo S Latifi M M Azevedo and N Bagherzadeh 223The Star Connected Cycles A Fixed-Degree Interconnection Net work for Parallel Processing,\224 Proc Int\222l Con5 Pal Proc  1 11 L M Ni and P K McKinley 223A Survey of Wormhole Rout ing Techniques in Direct Routing Techniques,\224 Computer Feb 1993 pp 62-76  121 E P Preparata and J Vuillemin 223The Cube-Connected Cy cles A Versatile Network for Parallel Computation,\224 Comm ACM Vol 24 No 5 May 1981 pp 300-309  131 Y Saad and M H Schultz 223Topological Properties of Hy percubes,\224IEEE Trans Comp Vol 37 No 7 July 1988 pp 14 S Shoari and N Baghenadeh 223computation of the Fast Fourier Transform on the Star-Connected Cycle Network,\224 to appear in Comp  Elec. Engl 1996 15 P Vadapalli and P K Srimani 221\223ho Different Families of Fixed Degree Regular Cayley Networks,\224 Proc Int\222l Phoenix Con Comp Comm Mar 28-31,1995 pp 263-269 1993 Vol 1 pp 91-95 867-872 452 


It can also be added to cell CrossSales.3\(PC, printer one_year,\205 5  Distributed and Incremental Rule Mining There exist two ways to deal with association rules 267  Static that is, to extract a group of rules from a snapshot, or a history, of data and use "as is 267  Dynamic that is, to evolve rules from time to time using newly available data We mine association rules from an e-commerce data warehouse holding transaction data. The data flows in continuously and is processed daily Mining association rules dynamically has the following benefits 267  223Real-time\224 data mining, that is, the rules are drawn from the latest transactions for reflecting the current commercial trends 267  Multilevel knowledge abstraction, which requires summarizing multiple partial results. For example association rules on the month or year basis cannot be concluded from daily mining results. In fact multilevel mining is incremental in nature 267  For scalability, incremental and distributed mining has become a practical choice Figure 3: Distributed rule mining Incremental association rule mining requires combining partial results. It is easy to see that the confidence and support of multiple rules may not be combined directly. This is why we treat them as \223views\224 and only maintain the association cube, the population cube and the base cube that can be updated from each new copy of volume cube. Below, we discuss several cases to show how a GDOS can mine association rules by incorporating the partial results computed at LDOSs 267  The first case is to sum up volume-cubes generated at multiple LDOSs. Let C v,i be the volume-cube generated at LDOS i The volume-cube generated at the GDOS by combining the volume-cubes fed from these LDOSs is 345   n i i v v C C 1  The association rules are then generated at the GDOS from the centralized C v  214  The second case is to mine local rules with distinct bases at participating LDOSs, resulting in a local association cube C a,I a local population cube C p,I  and a local base cube C b,i at each LDOS. At the GDOS, multiple association cubes, population cubes and base cubes sent from the LDOSs are simply combined, resulting in a summarized association cube and a summarized population cube, as 345   n i i a a C C 1   345   n i i p p C C 1  and 345   n i i b b C C 1  The corresponding confidence cube and support cube can then be derived as described earlier. Cross-sale association rules generated from distinct customers belong to this case In general, it is inappropriate to directly combine association cubes that cover areas a 1 205, a k to cover a larger area a In the given example, this is because association cubes record counts of customers that satisfy   customer product merchant time area Doe TV Dept Store 98Q1 California Doe VCR Dept Store 98Q1 California customer product merchant time area Doe VCR Sears 5-Feb-98 San Francisco Joe PC OfficeMax 7-Feb-98 San Francisco customer product merchant time area Doe TV Fry's 3-Jan-98 San Jose Smith Radio Kmart 14-Jan-98 San Jose Association   population      base          confidence      support cube               cube                cube         cube                cube LDOS LDOS GDOS 


the association condition, and the sets of customers contained in a 1 205, a k are not mutually disjoint. This can be seen in the following examples 214  A customer who bought A and B in both San Jose and San Francisco which are covered by different LDOSs , contributes a count to the rule covering each city, but has only one count, not two, for the rule A  336  B covering California 214  A customer \(e.g. Doe in Figure 3\who bought a TV in San Jose, but a VCR in San Francisco, is not countable for the cross-sale association rule TV  336 VCR covering any of these cities, but countable for the rule covering California. This is illustrated in Figure 3 6  Conclusions In order to scale-up association rule mining in ecommerce, we have developed a distributed and cooperative data-warehouse/OLAP infrastructure. This infrastructure allows us to generate association rules with enhanced expressive power, by combining information of discrete commercial activities from different geographic areas, different merchants and over different time periods. In this paper we have introduced scoped association rules  association rules with conjoint items and functional association rules as useful extensions to association rules The proposed infrastructure has been designed and prototyped at HP Labs to support business intelligence applications in e-commerce. Our preliminary results validate the scalability and maintainability of this infrastructure, and the power of the enhanced multilevel and multidimensional association rules. In this paper we did not discuss privacy control in customer profiling However, we did address this issue in our design by incorporating support for the P3P protocol [1 i n  ou r data warehouse. We plan to integrate this framework with a commercial e-commerce system References 1  Sameet Agarwal, Rakesh Agrawal, Prasad Deshpande Ashish Gupta, Jeffrey F. Naughton, Raghu Ramakrishnan, Sunita Sarawagi, "On the Computation of Multidimensional Aggregates", 506-521, Proc. VLDB'96 1996 2  Surajit Chaudhuri and Umesh Dayal, \223An Overview of Data Warehousing and OLAP Technology\224, SIGMOD Record Vol \(26\ No \(1\ 1996 3  Qiming Chen, Umesh Dayal, Meichun Hsu 223 OLAPbased Scalable Profiling of Customer Behavior\224, Proc. Of 1 st International Conference on Data Warehousing and Knowledge Discovery \(DAWAK99\, 1999, Italy 4  Hector Garcia-Molina, Wilburt Labio, Jun Yang Expiring Data in a Warehouse", Proc. VLDB'98, 1998 5  J. Han, S. Chee, and J. Y. Chiang, "Issues for On-Line Analytical Mining of Data Warehouses", SIGMOD'98 Workshop on Research Issues on Data Mining and Knowledge Discovery \(DMKD'98\ , USA, 1998 6  J. Han, "OLAP Mining: An Integration of OLAP with Data Mining", Proc. IFIP Conference on Data Semantics DS-7\, Switzerland, 1997 7  Raymond T. Ng, Laks V.S. Lakshmanan, Jiawei Han Alex Pang, "Exploratory Mining and Pruning Optimizations of Constrained Associations Rules", Proc ACM-SIGMOD'98, 1998 8  Torben Bach Pedersen, Christian S. Jensen Multidimensional Data Modeling for Complex Data Proc. ICDE'99, 1999 9  Sunita Sarawagi, Shiby Thomas, Rakesh Agrawal Integrating Association Rule Mining with Relational Database Systems: Alternatives and Implications", Proc ACM-SIGMOD'98, 1998   Hannu Toivonen, "Sampling Large Databases for Association Rules", 134-145, Proc. VLDB'96, 1996   Dick Tsur, Jeffrey D. Ullman, Serge Abiteboul, Chris Clifton, Rajeev Motwani, Svetlozar Nestorov, Arnon Rosenthal, "Query Flocks: A Generalization of Association-Rule Mining" Proc. ACM-SIGMOD'98 1998   P3P Architecture Working Group, \223General Overview of the P3P Architecture\224, P3P-arch-971022 http://www.w3.org/TR/WD-P3P.arch.html 1997 


Plenary Panel Session 30 XML Databases   Moderator: Michael Carey, IBM Almaden Research Center USA Panelists Adam Bosworth, Microsoft Corporation USA David De Witt University of Wisconsin-Madison, USA Alon Levy University of Washington USA Bruce Lindsay IBM Almaden Research Center USA Jennifer Widom Stanford University USA Demo Session 1 Web Query Optimizer  661 V Zadorozhny L Bright L Raschid T Urhan and M Vidal ReQueSS: Relational Querying of Semi-structured Data  664 R Sunderraman The IDEAL Approach to Internet-Based Negotiation for E-Business  666 J Hammer C Huang Y Huang C Pluempitiwiriyawej M Lee H Li L Wang Y Liu and S Su READY A High Performance Event Notification Service  668 R Gruber B Krishnamurthy, and E Panagos A Multimedia Information Server with Mixed Workload Scheduling  670 G Nerjes DISIMA An Object-Oriented Approach to Developing an Image Database System  672 V Oria T Ozsu P Iglinski B Xu and L Cheng Demo Session 2 The Collaboration Management Infrastructure  677 H Schuster D Baker A Cichocki D Georgakopoulos and M Rusinkiewicz Assisting the Integration of Taxonomic Data The LITCHI Toolkit  679 I Sutherland J Robinson S Brandt A Jones S Embury W Gray R White and F Bisby TheaterLoc: Using Information Integration Technology to Rapidly Build Virtual Applications  681 G. Barish Y.4 Chen D Dipasquo, C Knoblock S Minton I Muslea and C Shahabi Lineage Tracing in a Data Warehousing System  683 Y Cui and J Widom xiii 


The Mentor-Lite Prototype A Light-Weight Workflow Management System  685 J Weissenfels M Gillmann 0 Roth, G Shegalov and W Wonner Location Prediction and Queries for Tracking Moving Objects  687 0 Wolfson B Xu and S Chamberlain Semiorder Database for Complex Activity Recognition in Multi-Sensory Environments  689 S Bhonsle A Gupta S Santini and R Jain Tutorial 1 Web Information Retrieval  693 M Henzinger Tutorial 2 Mobile and Wireless Database Access for Pervasive Computing  694 P Chrysanthis and E Pitoura Tutorial 3 Data Mining with Decision Trees  696 J Gehrke Tutorial 4 Directories Managing Data for Networked Applications  697 D Srivastava Tutorial 5 Indexing High-Dimensional Spaces Database Support for Next Decade\222s Applications  698 S Berchtold and D Keim xiv 


 T5.I2.D100K T10.I4.D100K T15.I4.D100K T10.I6.D400K T10.I6.D800K T10.I6.D1600K Optimizations across Databases 5 0 5 10 15 20 25 30 35 40 45 Improvement COMP TREE COMP-TREE 1 2 4 8 1 2 4 8 1 2 4 8 2 4 8 2 4 8 1 2 4 8 Processors Databases Figure 5 Effect of Computation and Hash Tree Balancing good as the COMP optimization The reason that the hash tree balancing is not suf\336cient to offset inherent load imbalance in the candidate generation in this case The most effective approach is to apply both optimizations at the same time COMP-TREE The combined effect is suf\336cient to push the improvements in the 40 range in the multiple-processor case On 1 processor only hash tree balancing is bene\336cial since computation balancing only adds extra cost 5.4 Short-circuited Subset Checking Figure 6 shows the improvement due to the short-circuited subset checking optimization with respect to the unoptimized version The unoptimized version is the Apriori algorithm due to Agrawal et al 5 The results are presented for dif ferent number of processors across dif ferent databases The results indicate that while there is some improvement for databases with small transaction sizes the optimization is most effective when the transaction size is large In this case we get improvements of around 25 r the unoptimized version To gain further insight into this optimization consider 336gure 7 It shows the percentage improvement obtained per iteration on applying this optimization on the T20.I6.D100K database It shows results only for the uni-processor case r similar results were obtained on more processors We observe that as the iteration k increases there is more opportunity for shortcircuiting the subset checking and we get increasing bene\336ts of up to 60 The improvements start to fall off t the high end where the number of candidates becomes small resulting in a small hash tree and less opportunity for short-circuiting It becomes clear that is an extremely effective 15 Proceedings of the 1996 ACM/IEEE Conference on Supercomputing \(SC\22296 0-89791-854-1/96 $ 10.00 ACM 


 T5.I2.D100K T10.I6.D800K T15.I4.D100K T20.I6.D100K procs across Databases 0 5 10 15 20 25 Improvement 1 2 4 8 Figure 6 Effect of Short-circuited Subset Checking 23456789101112 Iterations 0 10 20 30 40 50 60 improvement T20.I6.D100K Figure 7  Improvement per Iteration  proc   16 Proceedings of the 1996 ACM/IEEE Conference on Supercomputing \(SC\22296 0-89791-854-1/96 $ 10.00 ACM 


optimization for larger transaction sizes and in cases where there are large number of candidate k itemsets 6 Conclusions In this paper e presented a parallel implementation of the Apriori algorithm on the SGI Power Challenge shared memory multi-processor We also discussed a set of optimizations which include optimized join and pruning computation balancing for candidate generation hash tree balancing and short-circuited subset checking We then presented experimental results on each of these Improvements of more than 40 were obtained for the computation and hash tree balancing The short-circuiting optimization was found to be extremely effective for databases with large transaction sizes Finally we reported the parallel performance of the algorithm While we d good speed-up we observed a need for parallel I/O techniques for further performance gains References  R Agra wal T  Imielinski and A Swami Database mining A performance perspecti v e  I n IEEE Trans on Knowledge and Data Engg  pages 5\(6 1993  R Agra wal T  Imielinski and A Swami Mining association rules between sets of items in lar ge databases In Proc M SIGMOD Intl Conf Management of Data  May 1993  R Agra wal H Mannila R Srikant H T o i v onen and A I V erkamo F ast disco v ery of association rules In U F et al editor Advances in Knowledge Discovery and Data Mining  MIT Press 1996  R Agra wal and J Shafer  P arallel mining of association rules design implementation and e xperience Technical Report RJ10004 IBM Almaden Research Center San Jose CA 95120 Jan 1996  R Agra wal and R Srikant F ast algorithms for mining association rules In Proc 20th VLDB Conf  Sept 1994  M Cierniak W  Li and M J Zaki Loop scheduling for heterogeneity  I n 4th IEEE Intl Symposium on High-Performance Distributed Computing also as URCS-TR 540 CS Dept Univ f Rochester  Aug 1995  M Holsheimer  M  K ersten H Mannila and H T o i v onen A perspecti v e on databases and data mining In 1st Intl Conf Knowledge Discovery and Data Mining  Aug 1995  M Houtsma and A Swami Set-oriented mining of association rules In RJ 9567  IBM Almaden Oct 1993  H Mannila H T o i v onen and I V erkamo Ef 336cient algorithms for disco v ering association rules In AAAI Wkshp Knowledge Discovery in Databases  July 1994  J S P ark M Chen and P  S Y u  A n e f fecti v e hash based algorithm for mining association rules In Proc M SIGMOD Intl Conf Management of Data  May 1995 17 Proceedings of the 1996 ACM/IEEE Conference on Supercomputing \(SC\22296 0-89791-854-1/96 $ 10.00 ACM 


 J S P ark M Chen and P  S Y u  E f 336cient parallel data mining for association rules T echnical Report RC20156 IBM T J Watson Research Center Aug 1995  G Piatetsk y-Shapiro Disco v ery  presentation and analysis of strong rules In G P S et al editor  KDD  AAAI Press 1991  A Sa v asere E Omiecinski and S Na v athe An ef 336cient algorithm for mining association rules in large databases In Proc 21st VLDB Conf  1995  M J Zaki M Ogihara S P arthasarathy  and W  Li P arallel data mining for association rules on shared-memory multi-processors Technical Report 618 Department of Computer Science University of Rochester 618 1996 18 Proceedings of the 1996 ACM/IEEE Conference on Supercomputing \(SC\22296 0-89791-854-1/96 $ 10.00 ACM 


