Finding Cross-Object Relationships from Large Databases Ling Feng Eric Tsang Department of Computing Hong Kong Polytechnic University Hong Kong, China cslfeng csetsang}@comp.polyu.edu.hk abstract While traditional association rules demonstrate strong potential values such as to improve market strategies for retail industry they are limited to finding associations among items within the same transaction Consider a database of supermarket transactions the traditional association rules can represent such knowledge as 22380 of customers who buy 
Chinese tea also buy teapot at the same time.\224 However they fail to represent some more interesting rules like 223If a customer buys Chinese tea s/he may most likely buy teapot within 3 days\224 where the association may span across different transactions To capture this contextual semantics which are also vital to the validation of associations in this study we introduce the notion of cross-object relationships Two algorithms for mining cross-object association rules from 
large databases are developed by extension of Apriori algorithm We show that traditional associations can be treated as a special case of cross-object relationships from both conceptual and algorithmic point of view 1 INTRODUCTION Since the problem of mining association rules was introduced in l a large amount of work has been done in various directions, including ef ficient Apriori-like mining methods 2 9 18, 15 16 22 24 51 mining generalized, multi-level 
or quantitative association rules 19 20 6 12 10 81 association rule mining query languages  11 231 constraint-based rule mining 13, 21 23 3 71 incremental maintenance of discovered associ ation rules 4 cyclic and interesting association rule mining 14 171 etc Despite these efforts there is an important form of association rules which are useful but could not be discovered with existing association rule mining framework Consider a database of 
supermarket trans actions the traditional association rules can 0-7803-5731-0/9!&$10.00 01999 IEEE represent such knowledge as 221lSO of customers who buy Chinese tea also buy teapot at the same time.\224 However they fail to represent some more interesting rules like 223If a customer buys Chinese tea s/he may most likely buy teapot within 3 days\224 where the association may span across different transactions In order to capture this contextual semantics 
into the association rules in this paper we introduce the notion of cross-object association rules Two algorithms for mining cross-object relationships from large databases are developed by extension of Apriori algorithm The remainder of the paper is organized as fol lows In section 2 we give a formal definition of cross-object association rules Two algorithms for mining such association rules from databases are described in section 3 We evaluate the per formance of the algorithms on both 
synthetic and real-life data sets in section 4 Section 5 concludes the paper 2 CROSS-OBJECT ASSOCIATION RULES 2.1 Preliminaries In the traditional association rule mining the database to be mined is organized as a set of records based on transaction time Except being largely used as record partition measurement such transaction time has received less explo ration In reality many real-world associations do happen in certain context Transaction time here 
is one kind of contextual information Taking supermarket as an example we may find rules like 223if a customer buys Chinese tea s/he will most likely buy teapot 3 days later.\224 Here besides items the intervals of transactions also play equally important role in the occurrence of associations We refer to such interval as one kind of context In addition to time property we can integrate other contextual information like location into V 8776 


TID dimensional attribute item list a b, c c d e T3 day3 a b Table 1 A single-dimensional database association rule mining as well Virtually we can enhance the traditional transaction model by a set of dimensional attributes describing the con text where the transaction happens The dimen sional attributes can be any kind of attributes as long as they are meaningful to the applications Time distance temperature, latitude etc are typical dimensional attributes In this paper we focus on single-dimensional context where only one dimensional attribute is used Assume that the domain of the dimen sional attribute is ordinal and can be divided into equal-sized intervals For instance, time can be divided into day week month, etc., and dis tance into meter mile etc We use a to describe the relative difference between two transactions represented by the dimensional attribute such as a day a kilometer etc When a=O the cross object association rules become the traditional association rules 2.2 Definitions Let Z  il is    is denote a set of literals called items Let C  1~~2  cm be the domain of the dimensional attribute Each element of C can be thought of as an address in the context A transaction Ti is defined to be a set of items Ii Ii 2 Z happening in ci ci E C denoted by Ti.\(ci I For example the price of stock A rises on January 4 shop B is opened in the suburb plant C blooms 2500 metres above sea level etc A simple one-dimensional database is shown in Table 1 For each item we can similarly attach an ad dress stating where the item occurs Here, item address can be in two different formats 1 ab solute address denoted by i.\(c indicates that item i appears at the address c 2 relative ad dress denoted by i\(Ai indicates that i appears Ai away from a reference base point If the base address is a the absolute address of i is  Ai In the following we refer to an item with its rel ative address as an extended item Note that with the same base address a two extended items a\(0 and 42 are different although both of them have the same item a We use Z\222 to represent the set of all the possible extended items Similarly we call a set of extended items as extended itemset For simplicity we use extended itemset and itemset interchangeably With the above notations we are now in a posi tion to define the cross-object association rules Definition 1 Given a set of transactions T  Ti-\(ci,Ii T2.\(Cz712     Tk.\(Ck,In and an extended itemset X  il\(Al i2\(A2  im\(Am T is said to contain X if and only if there exists a base address Q Q E C such that for every i,\(A E 2\222 there exists Tj.\(cj Ij E T SO that 1 CO  A  Cj and 2 i E Ij In the example database shown in Table 1 the transaction set T2 T3 T4 contains extended itemset c\(O a\(l a\(2 with respect to the reference base address day2 Definition 2 A cross-object association rule is an implication of the form X  Y where X c Z\222 Y c Z\222 and X n Y  8 Based on this definition a rule that predicts the stock price movement 223if the price of stock A increases one day and the price of stock C in creases the following day then most probably the price of stock B will increase on the third day\224 can be expressed by a cross-object association rule as a\(O l  b\(2 Similar to traditional association rules we use support and confidence as two major cross-object association rule measurements Definition 3 Let T be the set of transaction sets containing extended itemsets X U Y T be the set of transaction sets containing X and 101 be the total number of transactions in the database The support and confidence of a cross-object association rule are defined as cmfidence\(X  Y  lTz,l/lT,l s2lppart\(X  Y  lTzyl/l~l 3 MINING CROSS-OBJECT ASSOCIATION RULES Similar to the traditional association rule mining we first discover the frequent itemsets which have transaction support above a pre determined minimum support and then use the frequent itemsets to generate cross-object association rules V 877 


Under the framework of cross-object as sociation rules a k-itemset is of the form ii\(A1 A2    ik\(hk where item ij 1 5 j 5 k is attached by a non-negative value Aj indicating the relative address with respect to the base address of the set For example a 3-itemset a\(O b\(l 3 contains three items expressed in relative addresses along the dimension That is taking a transaction containing item a as the base transaction b\(1 denotes an item b contained in a transaction with 1 unit distance away from the base transaction and c\(3 represents an item c in a transaction 3 unit distances away from the base transaction This is quite different from the classical definition of itemset il i    ik in which all items lie within the same transactions To find the frequent itemsets two algorithms E-Apriori and EH-Apriori were implemented which are extensions of Apriori-based algorithms 2 151 Let Lk represent the set of frequent k itemsets and ck the set of candidate k-itemsets Both algorithms make multiple passes over the database Each pass consists of two phases First the set of all frequent \(Ic-1 Lk-1 found in the k-1\pass is used to generate the candidate itemset ck The candidate generation procedure ensures that ck is a superset of the set of all frequent k-itemsets The algorithms now scan the database For each list of consecutive transactions they determine which candidates in ck are contained and increment their counts At the end of the pass ck is examined to check which of the candidates are actually frequent yielding Lk The algorithms terminate when Lk becomes empty As previously reported in 15 the processing cost of the first two iterations i.e obtaining L1 and L2 dominates the total mining cost The reason is that for a given minimum support we usually have a very large L1 which in turn results in a huge number of itemsets in C2 to process In the cross-object association rules this situation becomes much more serious as a lot of additional 2-itemsets like a\(O l may be added into C2 thus leading to a huge amount of IC2 I In order to construct a significantly smaller C2 EH-Apriori adopts a similar technique of hashing as 15 to filter out unnecessary candi date 2-itemsets When the support of candidate C1 is counted by scanning the database EH Apriori accumulates information about candi date 2-itemsets in advance in such a way that all possible 2-itemsets are hashed to a hash table Each bucket in the hash table consists of a num ber to represent how many itemsets have been hashed to this bucket thus far Such resulting hash table can be used to greatly reduce the number of 2-itemsets in C2 4 PERFORMANCE STUDY To assess the performance of the mining algo rithms we conducted a series of experiments on both synthetic data and real-life data 4.1 Generation of Synthetic Data The method used by this study to generate syn thetic data is similar to the one used in 2 with some modifications noted below Table 2 sum marizes the parameters used and their settings We first generate a set L of the potentially frequent itemsets which may span several transactions e.g a\(O b\(l c\(2 and then assign a frequent itemset from L to transactions Items and their relative addresses intervals in the first frequent itemset are chosen randomly where item is picked up from 1 to N and its interval is picked up from 0 to W To model the phenomenon that frequent itemsets often have common items and intervals some fraction of items and their intervals in subsequent itemsets are chosen from the previous itemset generated We use an exponentially distributed random variable with mean equal to the correlation level to decide this fraction for each itemset The remaining items and their intervals are picked at random After generating all the items and intervals for a frequent itemset we revise each of its intervals by subtracting the minimum interval value of this frequent itemset In this way the minimum interval of each potentially frequent itemset is always 0 After generating the set L of potentially fre quent itemsets we then generate transactions in the database Each transaction is assigned a series of potentially frequent itemsets How ever upon the generation of one transaction we need consider a list of consecutive ones start ing from this transaction as items in a frequent itemset may span across different transactions For example after selecting the frequent itemset a\(O b\(l 42 for current transaction T we should assign item a to T item b to its next transaction Tc+l and item c to Tc+2 If the frequent itemset picked on hand does not fit in the current or any one of its successive transac tions this itemset is put in these transactions v 878 


Parameter Meaning number of transactions average size of the transactions maximum size of the transactions number of potentially frequent itemsets average size of the potentially frequent itemsets maximum size of the potentially frequent itemsets PI IT1 IMTl ILI 111 lMIl N number of items R maximum interval of itemsets anyway in half the cases and the itemset enters an unfit queue for the next transaction the rest of the cases Each time we pick itemsets from this queue first according to the first-in-first-out principle Only when the queue is empty do we perform random selection from the set L 4.2 Experiments on Synthetic Figure 1 shows the basic behavior of the algo rithms when the minimum support changes When the minimum support increases the execution times of both E-Apriori and EH Apriori decrease because of reduction in the total number of candidate and frequent itemsets Throughout the experiments EH Apriori is always far superior over E-Apriori For example in Figure l\(a when minimum support is 0.7 the mining time of EH-Apriori is about 23 seconds while that of E-Apriori is about 226 seconds The former only needs to spend 10 time of the latter in getting the same cross-object association rules This is due to the fact that although the execution time of the first pass of EH-Apriori is slightly longer than that of E-Apriori due to the extra overhead required for building HashTabZe it incurs significantly smalled execution time than E-Apriori in later Pass 2 as IC21 is decreased greatly By checking the detailed experimental records we find that the number of candidate 2-itemsets reduces from 305283 to 17403 by means of hash filtering at T5-13-W3-N500-D10K7 minimum support=0.7 Less IC21 results in much less time to test against each transaction of the database Because the execution time of the first two passes dominates the total execution time for mining cross-object association rules we employ hash techniques only in the early Pass 2 to achieve performance improvement Data Setting 5000  25000 4-8 7 11 1000 1.5 3 4 7 300  500 0-3 From this preliminary experiment we note that strategies aiming at pruning unnecessary candidates for the cross-object association rules can offer much more benefits than for the traditional association rules 4.3 Experiments on Real Data To test the applicability of cross-object association rules we run the algorithms against a data set collected from Singapore Stock Exchange SSE from which we create a LOSER set that contains the counters whose closing prices are less than the previous closing prices We like to have the complete data set for every trading day of 1996 As the result we have 250 records corresponding to 250 trading days in 1996 Although there are a few hundred counters in SSE we only have complete data for 84 counters Furthermore as the major trend for SSE in 1996 is down side the average transaction size of LOSER is pretty large more than 70 Figure 2 shows the experimental results on the LOSER data set from which one example rule found is UOL\(O l j DBS\(2 It says that if UOL goes down and SIA goes down the following day, DBS will go down on the third day with confidence more than 99 Here UOL stock represents lands market SIA stock repre sents loans and debentures and DBS represents banking market This rule reveals the closely causal relationships among three major stocks in Singapore As known the land properties in Singapore play an important role in national economic development The decaying of land properties inevitably leads to bad performance of loans and debentures and bank From such discovered rule we may get to know some char acteristics of economic structure in Singapore more or less v 879 


0.6 0.7 0.8 0.9 1 Minimum Suppm  a T5-13-W3-N500-D10K EH-Apriori E-Apriori  9 0.6 0.7 0.8 0.9 1 Minimum Support  d T8-11.5-W3-N500-D10K Figure 1 Minimum support versus execution time 70 60 50 I 40 30 20 10 0 Separate Joint Pass 1 Pass 2 OPass 2 m0 Pass 4 98 96 Separate Joint Figure 2 Execution time on LOSER data set, support=98 Our study using stock movement data is on going The results obtained so far do indicate  that with cross-object association rules we can discover more comprehensive and interesting knowledge and EH-Apriori algorithm can always achieve better performance than E Apriori algorithm regardless of large or small average transaction size 5 CONCLUSION In this paper we introduce the notion of cross-object association rules These rules can represent not only the associations of items within transactions but also associations of items among different transactions The classical association rules can be viewed as a special case of the cross-object association rules We implement two algorithms for finding such association rules by extension of Apriori Our performance studies on both synthetic and real life data sets show that the strategies to prune unnecessary 2-itemsets from the candidate set C is more beneficial to the overall performance than it is in the case of traditional association rules As we only consider single-dimensional mining context in this paper one future work is to incor porate multiple dimensional attributes into the mining process Performing distributed and/or parallel cross-ob ject association rules mining is another further work we are interested in Acknowledge This work is supported by Hong Kong Govern ment University Grants Council  CERG PolyU 50741983 References l R Agrawal T Imielinski and A Swami Min ing association rules between sets of items in large databases In Proe ACM SIGMOD Id Conf Management of Data pages 207-216 Washington D.C USA May 1993 V 880 


R Agrawal and R Srikant Fast algorithms for mining association rules In Proc. 20th Intl Conf Very Large Data Bases pages 478-499 Santiago, Chile September 1994 E Baralis and G Psaila Designing tem plates for mining association rules Journal of Intelligent Information Systems Volume 9 Number 1 pages 7-32 1997 D Cheung J Han V Ng and C.Y Wong Maintenance of discovered association rules in large databases an incremental updating tech nique In Proc Intl Conf Data Engineering pages 106-114 New Orleans Louisiana USA February 1996 M Fang N Shivakumar H Garcia-Molina R Motwani and J.D Ullman Computing iceberg queries efficiently In Proc 24th IntI Conf Very Large Data Bases pages 299-310 New York USA August 1998 J Han and Y Fu Discovery of multiple-level association rules from large databases In Proc 21st Intl Conf Very Large Data Bases pages 420-431 Zurich Switzerland September 1995 J Han and Y Fu Meta-rule-guided mining of association rules in relational databases In Proc 1st Intl Workshop on Integration of Knowledge Discovery with Deductive and Object Oriented Databases pages 39-46 Singa pore December 1995 M Kamber J Han and J.Y Chiang Metarule guided mining of multi-dimensional association rules using data cubes In Proc Intl Conf Knowledge Discovery and Data Mining pages 207-210 California USA August 1997 M Klemettinen H Mannila P Ronkainen H Toivonen and A.I Verkamo Finding inter esting rules from large sets of discovered associ ation rules In Proc 3rd Intl Conf Information and Knowledge Management pages 401-408 Gaithersburg Maryland November 1994 B Lent A Swami and J Widom Clustering association rules In Proc Intl Conf Data Engineering pages 220-231 Birmingham, Eng land April 1997 R Meo G Psaila and S Ceri A new sql-like operator for mining association rules In Proc 22th Intl Conf Very Large Data Bases pages 122-133 Mumbai India September 1996 Proc ACM SIGMOD Intl Conf Management of Data pages 13-24 Seattle Washington June 1998 14 B Ozden A Ramaswamy and A Silberschatz Cyclic association rules In Proc Intl Conf Data Engineering 1998 15 J.3 Park M.-S Chen and P.S Yu An effective hash based algorithm for mining association rules In Proc ACM SIGMOD Intl Conf Management of Data pages 175-186 San Jose CA May 1995 Min ing association rules with adjustable accuracy Technical Report IBM Research Report 1995 17 S Ramaswamy S Mahajan and A Silber schatz On the discovery of interesting patterns in association rules In Proc 24th Intl Conf Very Large Data Bases pages 368-379 New York USA August 1998 18 A Savasere, E. Omiecinski and S Navathe An efficient algorithm for mining association rules in large databases In Proc 2lst Intl Conf Very Large Data Bases pages 432-443 Zurich Switzerland September 1995 19 R Srikant and R Agrawal Mining generalized association rules In Proc 2lst Intl Conf Very Large Data Bases pages 409-419 Zurich Switzerland September 1995 20 R Srikant and R Agrawal Mining quantitative association rules in large relational tables In Proc ACM SIGMOD Intl Conf Management of Data pages 1-12 Montreal Canada June 1996 Mining association rules with item constraints In Proc 3rd Intl Conf Knowledge Discovery and Data Mining pages 67-73 Newport Beach California August 1997 Sampling large databases for association rules In Proc 22th Intl Conf Very Large Data Bases pages 134-145 Mumbai India September 1996 23 D Tsur J.D Ullman S Abitboul C Clifton R Motwani and S Nestorov Query flocks a generalization of association-rule mining In Proc ACM SIGMOD Intl Conf Management of Data pages 1-12 Seattle Washington June 1998 16 J.-S Park M.4 Chen and P.S Yu 21 R Srikant Q Vu and R Agrawal 22 H Toivonen R.J over Intl 461 Miller and Y Yang Association rules 24 M.J Zaki S Parthasarathy M Ogihara and interval data In Proc ACM SIGMOD W Li New algorithms for fast discovery of Conf Management of Data pages 452 association rules In Proc 3rd Intl Conf Tucson, Arizona USA June 1997 Knowledge Discovery and Data Mining pages 13 R Ng L.V.S Lakshmanan J Han and 283-286 Newport Beach CA USA August 1997 A Pang Exploratory mining and pruning op timizations of constrained association rules In V 881 


has possibilities to be the platform for large scale web mining We have introduced some raw results of data mining on a portal site with focus on mobile users However we have not provided the evaluation of the quality of the results yet We believe that the quality of web mining techniques depends on the application The compari son with other techniques in certain applications such as prefetching and recommendation system will be one of our future work Acknowledgements We would like to thank people from NTT Software in particular Mr Katsumi Takahashi and Dr Atsuhiro Goto for providing the log file of MIS and helpful dis cussions References R Agrawal T Imielinski A Swami 224Mining Association Rules between Sets of Items in Large Databases\224 In Proc of the ACM SIGMOD Con ference on Management of Data 1993 R Agrawal, R Srikant 224Fast Algorithms for Min ing Association Rules\224 In Proc of the VLDB Con ference 1994 R Agrawal R Srikant 223Mining Sequential Pat terns\224 221In Proceedings of Int Conf on Data En gineering March 1995 R Srikant R Agrawal 223Mining Sequential Pat terns Generalizations and performance improve ments\224 221In Proceedings of 5th Int Conf on Ex tending Database Technology March 1996 G 0 Arocena A 0 Mandelzon G A Mihaila 223Applications of a Web Query Language\224 221In Pro ceedings of WWWG April 1997 S Brin L Page 223The Anatomy of a Large Scale Hypertextual Web Search Engine\224 In Proceedings of WWW7 May 1998 A Buchner M D Mulvenna 223Discovering inter net marketing intelligence through online analyti cal Web usage mining\224 In SIGMOD Record 4 1999 R Cooley B Mobasher J Srivistava 223Data preparation for mining World Wide Web browsing patterns\224 In Journal of Knowledge and Informa tion Systems 1 1999 9 E Spertus L A Stein 223Squel A Structured Query Language for the Web In Proceedings of WWW9 May 2000 lo M Houtsma A Swami 224Set-oriented Mining of Association Rules\224 In Proc of International Con ference on Data Engineering March 1995 ll J Kleinberg 223Authoritive sources in s hyper In Proceedings of ACM linked environment\224 SIAM Symposium in Discrete Algorithm 1998 12 S Lawrwence L Giles 224Accessibility of informa tion on the web\224 In Nature Vol 400 pp 107-109 1999 E131 M Perkowitz 0 Etzioni 223Towards Adaptive Web Sites Conceptual Framework and Case Study\224, In Proceedings of WWW8 May 1999 14 Katsumi Takahashi Seiji Yokoji Nobuyuki Miura 224Location Oriented Integration of Internet Infor mation  Mobile Info Search\224 In Designing the Digital City Springer-Verlag, March 2000 15 Takayuki Tamura Masato Oguchi and Masaru Kitsuregawa 223Parallel Database Processing on a 100 Node PC Cluster Cases for Decision Sup port Query Processing and Data Mining\224 In Pro ceedings of SC97 High Performance Networking and Computing\(SuperComputing 22297 November 1997 16 S Thomas S Sarawagi 223Mining Generalized Association Rules and Sequential Patterns Using SQL Queries\224 221In Proceedings of Int Conf on Knowledge Discovery and Data Mining March 1998 17 T Yan M Jacobsen H Garcia-Molina U Dayal 223From user access patterns to dynamic hypertext linking\224 In Proceedings of WWW5 May 1996 134 


267  Feature dimensions  on which the generated rules may be dimensioned such as merchant, time and area  A volume cube C v is sufficient for deriving the instances of rule X 336 Y if it has a base dimension that represents the base of the rule, and the association conditions for qualifying X 331 Y are definable on C v For deriving cross-sale association rules from cube SaleUnits an association condition can be  for each base and feature dimension C v product A\ > 0 331 C v product B\ > 0 If the association conditions used to compute multidimensional P X  307 P Y  are definable on C v then another kind of condition, called antecedent conditions that are used to compute multidimensional  P X    are also definable on C v such as  for each base and feature dimension C v product A\ > 0 Association cube The association cube C a  for rule X 336 Y gives a volume-based measure of multidimensional association relationships that are computed from the volume cube C v and is used to derive the confidence cube and the support cube of association rules. More exactly, it maintains dimensioned P X 307 P Y i.e the number of base elements that satisfy X 331 Y Usually C a is dimensioned differently from C v In the cross-sale association rule example, the association cube is defined as  CrossSales product, product2, customer_group, merchant time, area  A cell of this cube, CrossSales product 221A\222 product2 221B\222  customer_group \221 engineer\222 merchant 221Sears\222 time 221Jan98\222 area 221Los Angeles\222\eans that there are 4,500 customers who are engineers, who bought item A as well as item B, at a Sears store in Los Angeles in Jan98 For an association cube the item dimensions underlie the counts for deriving association rules, such as dimensions product and product2 for the above CrossSales cube. The dimension product2 has the same set of values as product and we call it the mirror dimension  of product We introduce a mirror dimension simply because the cross-sale association rule involves more than one element of the item dimension  The base dimension   such as the customer dimension  underlies the base of rules. Unlike the volume cube, the association cube does not necessarily have to be dimensioned by the base dimension However, we can dimension rules by a derived dimension, each value of which identifies a group of base dimension values at bottom levels. In the cube CrossSales shown above, we introduce the hierarchical dimension customer_group   which has levels customer_profession\222, \221customer_category\222 and 'top'. A relation is also defined for relating customers and customer groups. For example, a value of the derived customer_group dimension, say, \223engineer\224, is used to identify a group of individual customers who are engineers  An association can cube also have underlying feature dimensions  such as merchant, time and area Population cube and base cube The population cube C p and the base cube C b for rule X 336 Y are also derived from the volume cube C v  C p is used to measure dimensioned P X i.e the numbers of base elements satisfying X  C b is used to represent dimensioned B For the above cross-sale rules, the population cube is defined as NumOfBuyers \(product, customer_group, merchant, time area A cell of this cube NumOfBuyers product 221A\222 customer_group \221 engineer\222 merchant 221Sears\222 time 221Jan98\222 area 221Los Angeles\222  10000  means that there are 10,000 customers who are engineers, and who bought item A in Los Angeles in Jan98. The base cube is defined as  NumOfShoppers \(customer_group, merchant, time, area Note that NumOfShoppers is not aggregated from NumOfBuyers as a single customer may buy multiple products Confidence cube and support cube The confidence of rule X 336 Y defined as P X 307 P Y  P X  and the support, defined as P X 307 P Y B are represented as cubes C f  and C s  C f  is derived from C a and C p and C s is derived from C a  and C b They have the same dimensions as C a For the above cross-sale rules the confidence cube and support cube are defined as  Confidence \(product, product2, customer_group, merchant time, area   Support  product, product2, customer_group, merchant time, area Figure 2 shows the cubes related to cross-sale association rules, with one slice of each cube. The volume-cube is generated from transactions; the 


association-cube, base-cube and population-cube are derived from the volume cube; the confidence-cube is derived from the association cube and population cube and the support-cube is derived from the associationcube and base-cube. The slices of these cubes shown in Figure 2 correspond to the same list of values in dimension merchant, time, area and customer_group  Multidimensional and multilevel rules Representing association rules by cubes and underlying cubes by hierarchical dimensions, naturally supports multidimensional and multilevel rules. Also these rules are well organized and can be easily queried  First, the cells of an association cube with different dimension values are related to association rule instances in different scopes. In the association cube CrossSales cell CrossSales product \221A\222, product2 \221B\222  customer_group 221engineer\222, merchant \221Sears\222, area \221Los Angeles\222, time 221Jan98\222 represents the following multidimensional rule x 316 Customers: buy_product\(x, \221A\222 336 buy_product\(x,\221B\222  275 customer_group = \221engineer\222, merchant = \221Sears\222, area 221Los  Angeles\222, time =  \221Jan98\222 If this cell has value 4500, and the corresponding cell in the population cube has value 10000, then this rule has confidence 0.45 Next as the cubes representing rules can have hierarchical dimensions, they represent not only multidimensional but also multi-level association rules. For example, the following cells CrossSales\(product \221A\222, product2 \221B\222, customer_group 221engineer\222, merchant \221Sears\222, area \221 California 222, time 221Jan98\222 CrossSales\(product \221A\222, product2 \221B\222, customer_group 221engineer\222, merchant \221Sears\222, area \221 California 222, time 221 Year98 222 represent association rules at different area levels \(i.e the city level and the state level\d different time levels \(i.e., the month level, the year level x 316 Customers: buy_product\(x, \221A\222 336 buy_product\(x, \221B\222  275 customer_group = \221engineer\222, merchant =  \221Sears\222, area 221 California 222, time =  \221Jan98\222 x 316 Customers: buy_product\(x, \221A\222 336 buy_product\(x, \221B\222  275 customer_group = \221engineer\222, merchant =  \221Sears\222, area 221 California 222, time =  \221 Year98 222 The cell CrossSales\(product \221A\222, product2 \221B\222,  customer_group 221top\222, merchant \221top\222, area \221top\222,  time \221top\222 represents the customer-based cross-sale association rule for all customers, merchants, areas, and times in the given range of these dimensions, expressed as x 316 Customers: buy_product\(x, \221A\222 336 buy_product\(x, \221B\222 4.3  Generating Association Rule Related Cubes The basic task of our OLAP based association rule mining framework, either at the GDOS or at an LDOS is to convert a volume cube i.e. the cube representing the purchase volumes of customers dimensioned by product  area etc, into an association cube a base cube and a population cube These cubes are then used to derive the confidence cube and the support cube of multidimensional association rule instances. The following general steps are involved in cross-sale association rule mining 267  Roll up the volume cube SaleUnits by aggregating it along merchant, time, area dimensions 267  Derive cube NumOfBuyers from SaleUnits based on the antecedent condition SaleUnits 0 267  Populate cube NumOfShoppers by the counts of customers dimensioned by merchant, area  time not by product\at satisfy the antecedent conditions 267  Derive cube CrossSales from SaleUnits based on the association conditions SaleUnits  product  p 1  0 and SaleUnits  product2  p 2 0 267  Derive cube Confidence and cube Support using cell-wise operations 214  Confidence = CrossSales  NumOfBuyers 214  Support  CrossSales  NumOfShoppers  Cubes Confidence  Support  CrossSales are dimensioned by product  product2 customer_group,merchant  time, area NumOfBuyers is dimensioned by product  customer_group, merchant time, area  NumOfShoppers is dimensioned by customer_group, merchant  time, area Rules with confidence and support that exceed specified thresholds  may be considered interesting 4.4. Rules with Conjoint Items Cubes with conjoint dimensions can be used to represent refined multidimensional association rules For example, using OLAP, we can derive association rules across time  Time-variant or temporal association rules such as 


x 316 Customers buy_product\(x,\222 A\222, \221 Jan98\222  336 buy _product\(x, \221B\222, \221 Feb98\222   275 area = \221Los Angeles\222 can be used to answer such questions as \223 How are  the sales of B in Feb98  associated with the sales of A in Jan98 224 The items in this rule are value pairs of dimensions product and time In order to specify this kind of association rule we introduce a conjoint dimension product, time and mirror it with dimension product2, time2 This allows a cell in the association cube to cross two time values. Accordingly, the cubes related to association rule mining are defined as follows Association cube  CrossSales.2 \(<product, time>, <product2, time2 customer_group, merchant, area  Population cube  NumOfBuyers.2  \(<product, time>, customer_group merchant, area Base cube  NumOfShoppers.2  \( customer_group, merchant, area Confidence cube Confidence.2 \(<product, time>, <product2, time2 customer_group, merchant, area Support  cube  Support.2  product, time>, <product2, time2 customer_group, merchant, area  The steps for generating these cubes are similar to the ones described before. The major differences are that a cell is dimensioned by, besides others product, time and product2, time2 and the template of the association condition is  SaleUnit s  product p 1 time t 1  0 and  SaleUnits  product2 p 2 time2 t 2  0 where, in any instance of this condition, the time expressed by the value of time2 is not contained in the time expressed by the value of time The template of the antecedent condition is SaleUnits   product p 1 time t 1  0 In general, other dimensions such as area may be added to the conjoint dimensions to specify more refined rules 4.5. Functional Association Rules A multidimensional association rule is functional if its predicates include variables, and the variables in the consequent are functions of those in the antecedent.  For example, functional association rules can be used to answer the following questions, where a_month and a_year are variables q  What is the percentage of people in California who buy a printer in the next month after they bought a PC x 316 Customer buy_product\(x, \221PC\222, a_ month 336 buy_product\(x, \221printer\222, a_month+1  275 area = \221California\222 q  What is the percentage of people who buy a printer within the year when they bought a PC  x 316 Customer: buy_product\(x, \221PC\222, a_ year 336 buy_product\(x, \221printer\222, a_year 275 area = \221California\222 To be distinct, we call the association rules that are not functional as instance association rules; e.g x 316 Customer: buy_product\(x,\222 PC\222, \221Jan98\222 336 buy_product\(x,\222 printer\222, \221Feb98\222  275 area =  \221California\222 Time variant, functional association rules can be derived from time variant, instance association rules through cube restructuring. Let us introduce a new dimension time_delta that has values one_day, two_day 205, at the day level, and values one_month, two_month, \205, at the month level, etc. Then, let us consider the following functional association rule related cubes Association cube  CrossSales.3 \(product, product2, customer_group merchant, area, time_delta  Population cube  NumOfBuyers.3 \(product, customer_group, merchant area Base cube  NumOfShoppers.3 \( customer_group, merchant, area Confidence cube  Confidence.3 \(product, product2, customer_group merchant, area, time_delta Support cube  Support.3 \(product, product2, customer_group, merchant area, time_delta The association cube CrossSales.3  can be constructed from CrossSales.2   The cell values of CrossSales.2  in the selected time and time2 ranges are added to the corresponding cells of CrossSales.3 For example, the count value in cell  CrossSales.2\(<PC, Jan98>, <printer, Feb98>\205 is added to cell \(bin CrossSales.3\(PC, printer, one_month,\205 


It can also be added to cell CrossSales.3\(PC, printer one_year,\205 5  Distributed and Incremental Rule Mining There exist two ways to deal with association rules 267  Static that is, to extract a group of rules from a snapshot, or a history, of data and use "as is 267  Dynamic that is, to evolve rules from time to time using newly available data We mine association rules from an e-commerce data warehouse holding transaction data. The data flows in continuously and is processed daily Mining association rules dynamically has the following benefits 267  223Real-time\224 data mining, that is, the rules are drawn from the latest transactions for reflecting the current commercial trends 267  Multilevel knowledge abstraction, which requires summarizing multiple partial results. For example association rules on the month or year basis cannot be concluded from daily mining results. In fact multilevel mining is incremental in nature 267  For scalability, incremental and distributed mining has become a practical choice Figure 3: Distributed rule mining Incremental association rule mining requires combining partial results. It is easy to see that the confidence and support of multiple rules may not be combined directly. This is why we treat them as \223views\224 and only maintain the association cube, the population cube and the base cube that can be updated from each new copy of volume cube. Below, we discuss several cases to show how a GDOS can mine association rules by incorporating the partial results computed at LDOSs 267  The first case is to sum up volume-cubes generated at multiple LDOSs. Let C v,i be the volume-cube generated at LDOS i The volume-cube generated at the GDOS by combining the volume-cubes fed from these LDOSs is 345   n i i v v C C 1  The association rules are then generated at the GDOS from the centralized C v  214  The second case is to mine local rules with distinct bases at participating LDOSs, resulting in a local association cube C a,I a local population cube C p,I  and a local base cube C b,i at each LDOS. At the GDOS, multiple association cubes, population cubes and base cubes sent from the LDOSs are simply combined, resulting in a summarized association cube and a summarized population cube, as 345   n i i a a C C 1   345   n i i p p C C 1  and 345   n i i b b C C 1  The corresponding confidence cube and support cube can then be derived as described earlier. Cross-sale association rules generated from distinct customers belong to this case In general, it is inappropriate to directly combine association cubes that cover areas a 1 205, a k to cover a larger area a In the given example, this is because association cubes record counts of customers that satisfy   customer product merchant time area Doe TV Dept Store 98Q1 California Doe VCR Dept Store 98Q1 California customer product merchant time area Doe VCR Sears 5-Feb-98 San Francisco Joe PC OfficeMax 7-Feb-98 San Francisco customer product merchant time area Doe TV Fry's 3-Jan-98 San Jose Smith Radio Kmart 14-Jan-98 San Jose Association   population      base          confidence      support cube               cube                cube         cube                cube LDOS LDOS GDOS 


the association condition, and the sets of customers contained in a 1 205, a k are not mutually disjoint. This can be seen in the following examples 214  A customer who bought A and B in both San Jose and San Francisco which are covered by different LDOSs , contributes a count to the rule covering each city, but has only one count, not two, for the rule A  336  B covering California 214  A customer \(e.g. Doe in Figure 3\who bought a TV in San Jose, but a VCR in San Francisco, is not countable for the cross-sale association rule TV  336 VCR covering any of these cities, but countable for the rule covering California. This is illustrated in Figure 3 6  Conclusions In order to scale-up association rule mining in ecommerce, we have developed a distributed and cooperative data-warehouse/OLAP infrastructure. This infrastructure allows us to generate association rules with enhanced expressive power, by combining information of discrete commercial activities from different geographic areas, different merchants and over different time periods. In this paper we have introduced scoped association rules  association rules with conjoint items and functional association rules as useful extensions to association rules The proposed infrastructure has been designed and prototyped at HP Labs to support business intelligence applications in e-commerce. Our preliminary results validate the scalability and maintainability of this infrastructure, and the power of the enhanced multilevel and multidimensional association rules. In this paper we did not discuss privacy control in customer profiling However, we did address this issue in our design by incorporating support for the P3P protocol [1 i n  ou r data warehouse. We plan to integrate this framework with a commercial e-commerce system References 1  Sameet Agarwal, Rakesh Agrawal, Prasad Deshpande Ashish Gupta, Jeffrey F. Naughton, Raghu Ramakrishnan, Sunita Sarawagi, "On the Computation of Multidimensional Aggregates", 506-521, Proc. VLDB'96 1996 2  Surajit Chaudhuri and Umesh Dayal, \223An Overview of Data Warehousing and OLAP Technology\224, SIGMOD Record Vol \(26\ No \(1\ 1996 3  Qiming Chen, Umesh Dayal, Meichun Hsu 223 OLAPbased Scalable Profiling of Customer Behavior\224, Proc. Of 1 st International Conference on Data Warehousing and Knowledge Discovery \(DAWAK99\, 1999, Italy 4  Hector Garcia-Molina, Wilburt Labio, Jun Yang Expiring Data in a Warehouse", Proc. VLDB'98, 1998 5  J. Han, S. Chee, and J. Y. Chiang, "Issues for On-Line Analytical Mining of Data Warehouses", SIGMOD'98 Workshop on Research Issues on Data Mining and Knowledge Discovery \(DMKD'98\ , USA, 1998 6  J. Han, "OLAP Mining: An Integration of OLAP with Data Mining", Proc. IFIP Conference on Data Semantics DS-7\, Switzerland, 1997 7  Raymond T. Ng, Laks V.S. Lakshmanan, Jiawei Han Alex Pang, "Exploratory Mining and Pruning Optimizations of Constrained Associations Rules", Proc ACM-SIGMOD'98, 1998 8  Torben Bach Pedersen, Christian S. Jensen Multidimensional Data Modeling for Complex Data Proc. ICDE'99, 1999 9  Sunita Sarawagi, Shiby Thomas, Rakesh Agrawal Integrating Association Rule Mining with Relational Database Systems: Alternatives and Implications", Proc ACM-SIGMOD'98, 1998   Hannu Toivonen, "Sampling Large Databases for Association Rules", 134-145, Proc. VLDB'96, 1996   Dick Tsur, Jeffrey D. Ullman, Serge Abiteboul, Chris Clifton, Rajeev Motwani, Svetlozar Nestorov, Arnon Rosenthal, "Query Flocks: A Generalization of Association-Rule Mining" Proc. ACM-SIGMOD'98 1998   P3P Architecture Working Group, \223General Overview of the P3P Architecture\224, P3P-arch-971022 http://www.w3.org/TR/WD-P3P.arch.html 1997 


Plenary Panel Session 30 XML Databases   Moderator: Michael Carey, IBM Almaden Research Center USA Panelists Adam Bosworth, Microsoft Corporation USA David De Witt University of Wisconsin-Madison, USA Alon Levy University of Washington USA Bruce Lindsay IBM Almaden Research Center USA Jennifer Widom Stanford University USA Demo Session 1 Web Query Optimizer  661 V Zadorozhny L Bright L Raschid T Urhan and M Vidal ReQueSS: Relational Querying of Semi-structured Data  664 R Sunderraman The IDEAL Approach to Internet-Based Negotiation for E-Business  666 J Hammer C Huang Y Huang C Pluempitiwiriyawej M Lee H Li L Wang Y Liu and S Su READY A High Performance Event Notification Service  668 R Gruber B Krishnamurthy, and E Panagos A Multimedia Information Server with Mixed Workload Scheduling  670 G Nerjes DISIMA An Object-Oriented Approach to Developing an Image Database System  672 V Oria T Ozsu P Iglinski B Xu and L Cheng Demo Session 2 The Collaboration Management Infrastructure  677 H Schuster D Baker A Cichocki D Georgakopoulos and M Rusinkiewicz Assisting the Integration of Taxonomic Data The LITCHI Toolkit  679 I Sutherland J Robinson S Brandt A Jones S Embury W Gray R White and F Bisby TheaterLoc: Using Information Integration Technology to Rapidly Build Virtual Applications  681 G. Barish Y.4 Chen D Dipasquo, C Knoblock S Minton I Muslea and C Shahabi Lineage Tracing in a Data Warehousing System  683 Y Cui and J Widom xiii 


The Mentor-Lite Prototype A Light-Weight Workflow Management System  685 J Weissenfels M Gillmann 0 Roth, G Shegalov and W Wonner Location Prediction and Queries for Tracking Moving Objects  687 0 Wolfson B Xu and S Chamberlain Semiorder Database for Complex Activity Recognition in Multi-Sensory Environments  689 S Bhonsle A Gupta S Santini and R Jain Tutorial 1 Web Information Retrieval  693 M Henzinger Tutorial 2 Mobile and Wireless Database Access for Pervasive Computing  694 P Chrysanthis and E Pitoura Tutorial 3 Data Mining with Decision Trees  696 J Gehrke Tutorial 4 Directories Managing Data for Networked Applications  697 D Srivastava Tutorial 5 Indexing High-Dimensional Spaces Database Support for Next Decade\222s Applications  698 S Berchtold and D Keim xiv 


 T5.I2.D100K T10.I4.D100K T15.I4.D100K T10.I6.D400K T10.I6.D800K T10.I6.D1600K Optimizations across Databases 5 0 5 10 15 20 25 30 35 40 45 Improvement COMP TREE COMP-TREE 1 2 4 8 1 2 4 8 1 2 4 8 2 4 8 2 4 8 1 2 4 8 Processors Databases Figure 5 Effect of Computation and Hash Tree Balancing good as the COMP optimization The reason that the hash tree balancing is not suf\336cient to offset inherent load imbalance in the candidate generation in this case The most effective approach is to apply both optimizations at the same time COMP-TREE The combined effect is suf\336cient to push the improvements in the 40 range in the multiple-processor case On 1 processor only hash tree balancing is bene\336cial since computation balancing only adds extra cost 5.4 Short-circuited Subset Checking Figure 6 shows the improvement due to the short-circuited subset checking optimization with respect to the unoptimized version The unoptimized version is the Apriori algorithm due to Agrawal et al 5 The results are presented for dif ferent number of processors across dif ferent databases The results indicate that while there is some improvement for databases with small transaction sizes the optimization is most effective when the transaction size is large In this case we get improvements of around 25 r the unoptimized version To gain further insight into this optimization consider 336gure 7 It shows the percentage improvement obtained per iteration on applying this optimization on the T20.I6.D100K database It shows results only for the uni-processor case r similar results were obtained on more processors We observe that as the iteration k increases there is more opportunity for shortcircuiting the subset checking and we get increasing bene\336ts of up to 60 The improvements start to fall off t the high end where the number of candidates becomes small resulting in a small hash tree and less opportunity for short-circuiting It becomes clear that is an extremely effective 15 Proceedings of the 1996 ACM/IEEE Conference on Supercomputing \(SC\22296 0-89791-854-1/96 $ 10.00 ACM 


 T5.I2.D100K T10.I6.D800K T15.I4.D100K T20.I6.D100K procs across Databases 0 5 10 15 20 25 Improvement 1 2 4 8 Figure 6 Effect of Short-circuited Subset Checking 23456789101112 Iterations 0 10 20 30 40 50 60 improvement T20.I6.D100K Figure 7  Improvement per Iteration  proc   16 Proceedings of the 1996 ACM/IEEE Conference on Supercomputing \(SC\22296 0-89791-854-1/96 $ 10.00 ACM 


optimization for larger transaction sizes and in cases where there are large number of candidate k itemsets 6 Conclusions In this paper e presented a parallel implementation of the Apriori algorithm on the SGI Power Challenge shared memory multi-processor We also discussed a set of optimizations which include optimized join and pruning computation balancing for candidate generation hash tree balancing and short-circuited subset checking We then presented experimental results on each of these Improvements of more than 40 were obtained for the computation and hash tree balancing The short-circuiting optimization was found to be extremely effective for databases with large transaction sizes Finally we reported the parallel performance of the algorithm While we d good speed-up we observed a need for parallel I/O techniques for further performance gains References  R Agra wal T  Imielinski and A Swami Database mining A performance perspecti v e  I n IEEE Trans on Knowledge and Data Engg  pages 5\(6 1993  R Agra wal T  Imielinski and A Swami Mining association rules between sets of items in lar ge databases In Proc M SIGMOD Intl Conf Management of Data  May 1993  R Agra wal H Mannila R Srikant H T o i v onen and A I V erkamo F ast disco v ery of association rules In U F et al editor Advances in Knowledge Discovery and Data Mining  MIT Press 1996  R Agra wal and J Shafer  P arallel mining of association rules design implementation and e xperience Technical Report RJ10004 IBM Almaden Research Center San Jose CA 95120 Jan 1996  R Agra wal and R Srikant F ast algorithms for mining association rules In Proc 20th VLDB Conf  Sept 1994  M Cierniak W  Li and M J Zaki Loop scheduling for heterogeneity  I n 4th IEEE Intl Symposium on High-Performance Distributed Computing also as URCS-TR 540 CS Dept Univ f Rochester  Aug 1995  M Holsheimer  M  K ersten H Mannila and H T o i v onen A perspecti v e on databases and data mining In 1st Intl Conf Knowledge Discovery and Data Mining  Aug 1995  M Houtsma and A Swami Set-oriented mining of association rules In RJ 9567  IBM Almaden Oct 1993  H Mannila H T o i v onen and I V erkamo Ef 336cient algorithms for disco v ering association rules In AAAI Wkshp Knowledge Discovery in Databases  July 1994  J S P ark M Chen and P  S Y u  A n e f fecti v e hash based algorithm for mining association rules In Proc M SIGMOD Intl Conf Management of Data  May 1995 17 Proceedings of the 1996 ACM/IEEE Conference on Supercomputing \(SC\22296 0-89791-854-1/96 $ 10.00 ACM 


 J S P ark M Chen and P  S Y u  E f 336cient parallel data mining for association rules T echnical Report RC20156 IBM T J Watson Research Center Aug 1995  G Piatetsk y-Shapiro Disco v ery  presentation and analysis of strong rules In G P S et al editor  KDD  AAAI Press 1991  A Sa v asere E Omiecinski and S Na v athe An ef 336cient algorithm for mining association rules in large databases In Proc 21st VLDB Conf  1995  M J Zaki M Ogihara S P arthasarathy  and W  Li P arallel data mining for association rules on shared-memory multi-processors Technical Report 618 Department of Computer Science University of Rochester 618 1996 18 Proceedings of the 1996 ACM/IEEE Conference on Supercomputing \(SC\22296 0-89791-854-1/96 $ 10.00 ACM 


