An Web Content Based Data Mining for Car Consumption Preference in China Xiaoshu Hang\224 Honghua Dai\224, Youhua Zhangb School oflnformation Technology, Deakin Universiy Australia Institute ofhtelligent Machines the Chinese Academy of Sciences, Hefei,China xhan hdai adeakin edu au b Abstract This paper introduces an incremental FP-Growth approach for web content based data mining and its application in solving a real worldproblem The problem is solved in the following ways Firstly we obtain the semi-structured data from the 
web pages of Chinese car market and structure them and save them in local database Secondly we use an incremental FP-Growth algorithm for mining association rules to discover Chinese consumers\222 car consumption preference To find more general regularities, an attribute-oriented induction method is also utilized to find customer\222s consumption preference among a range of car categories Experimental results have revealed some interesting consumption preferences that are useful for the decision makers to make the policy to encourage and guide car consumption Although the current data we used may 
not be the best representative ofthe actual market in practice it is still good enough for the decision making purpose in terms of reflecting the real situation of car consumption preference under the two assumptions in the context 1 Introduction The majority of the research has been done so far in the area of data mining is mainly focused the studies on the theow and approaches of data mining only a few have explored the real applications of data mining 
that can be seen from literatures One of the bottlenecks is the difficulty of obtaining real-life data With the explosive growth of information sources available on the World Wide Web it has become increasingly significant for users to acquire knowledge from WWW Web mining can be generally classified into content-based mining and usage-based mining Content-based Web mining can he reclassified into two sub-categories agent-based and database-based Agent-based Web content mining includes intelligent search agent and information filter agent Database-based Web content mining includes multilevel database and 
Web query system Database based approach focuses on the techniques for organizing the semi-shuctured data into structured ones and save them into database for later data mining[Cooley R et al 19991 When the data for knowledge discovery are obtained from web pages by some ways then it become a dynamic data source because the web pages are usually unexpectedly updated The mining algorithm designed for such a dynamic data source should be incremental for the purpose of efficiency We present an incremental FP Growth algorithm for mining association rules 
and apply it to a Chinese car market database Car consumption is viewed as a new potential power to the growth of Chinese economy and has been paid a great attention by the Chinese govemment Many car dealers release the car market information via Internet for the convenience of the customers to acquire the updated information It is quite natural that the customers access to the web pages to find their favorite cars before they actually go to the market to purchase it Therefore it is safe to assume that the more a web page of introducing 
a type of car is accessed the higher that model of car is preferred by customers Thus we have the following two assumptions on which our research is based a Generally a potential customer can obtain car market information via internet b The more a web page of introducing a particular model of car is visited the higher preference this type of car is given by the customers The semi-structured data retrieved from Web page are distributed by Chinese largest car market in URL 
httn://www.cheshi.com.cn The web-based database includes various kinds of cars from lower price cars to much higher ones from Chinese cars from foreign cars The number of customers\222 daily access to a type of car ranges from less than one hundred to several thousands which shows customers\222 different preference The remainder of this paper is arranged as fellows In section 2 the techniquc about retrieving semi-structured data on web page is introduced In section 3 an 0-7803-8242-0/03 17.00 Q 2003 IEEE 235 


incremental FP-Growth algorithm for mining association rules are introduced An attribute-oriented induction is utilized to find some more general regularities e.g customers\222 preference among different car categories in section 4 Some experimental results and analysis are given in section 5 Section 6 is the conclusions 2 Data retrieval from web pages In this section we discuss how to retrieve the interesting data embedded in web pages such as HTML pages XML pages or text files Reorganized the semi-structured data into more structured data is the first step of Web content based mining The popular method is to write a program called\223Wrapper\224[Kushmeri ck N e tal 1997 Ade 1 berg B 19981 to extract data from web page and then store them in database 2.1 Preprocessing The preprocessing includes Input interesting URL and key words Fetching the Web page Trimming and normalizing the source file In this phase our input is interesting URL and key words and the output is the wanted and normalized data block Sometimes a web page includes more than 100 data blocks e.g http://newssina.com.cn.We usually focus on the interesting region see Fig.2.1 For instance we are interested with foreign exchange rate so we can pick up the URL and some keywords such as 223Sale Price\224 223Purchase Price\224 etc The URL and keywords are viewed as parameters of the preprocessing function which retums the wanted HTML or XML source file This raw data is then normalized to facilitate the next phase of processing Note that most of the valuable data embedded between table pairs so we can expurgate some senseless block such as javascript block head block and convert all source to lowercase or uppercase and then replace the continuous spaces with one blank character which will improve the efficiency of extraction Since some documents are irregularly written such as ASP and the HTML document and only the interesting region of the web page is retrieved a check function is needed to analyze the structure of the document and determine whether to fetch or skip the document to avoid disordering the hierarchy of the document In this paper we present a method which does not need the integrity of html document hut the wanted information should be within the fragment 2.2 Getting the wanted block A module called hook is designed to identify the interesting region or wanted block from a normalized document. The hook algorithm is described as follows Algorithm Hook Input: keywords a normalized document Output the interesting block Begin For i=to m llm is the number of keywords Calculating the frequency ni and position p i pil pil p in of ith keyword in the normalized document if q  1 then retum this table pair block else find the minimum nk=min\(ni for j=l to nk Calculating the kth keyword\222s table pair\222s positions tbegin rend which must satisfy ibegin pph<rend Test all other keywords\222 position If one of these keywords has no position with this region\(tbegin tend continue next j or if all of them bas at least one position in region\(tbegin tend return this region as the wanted block Endfor Endfor End 2.3 Generating structured data Inside the wanted data block we are mainly concemed the three kinds of tags 223table\224 223tr\224 and 223td\224 All other tags can be trimmed to obtain a skeleton of the data block These tags reflect the hierarchy of data As an example a hierarchy can be generated as follows table tr td currency td> <td buy </td td sale td tr td US td td 826.47 td td 828.95 </td tr table Then we pick up the data between td and Utd pair store them in a pre-defined structured array and save them in local database for data mining tr  3 An incremental FP-Growth algorithm 3.1 Problem description FP-Growth has been known as a highly efficient algorithm due to its striking characteristics such as using compact data structure eliminating repeated database scan and basic counting as well as FP-tree building operation FP-growth includes two-step process In the 236 


first step a FP-tree is created by scanning the database twice and I the second step the algorithm FP-Growth is used to mine iteratively the frequent patterns from the FP tree in the bottom-up order In the real world however we can hardly apply a mining algorithm directly to an application without any modification In a dynamic data environment where new data flow arrives unexpectedly the present FP-Growth can not be used to directly mine association rules if it does not re-run every time the database is updated The alternative is an incremental FP-Growth algorithm Such dynamic data environments are easily found in the area of the web-content based data mining where the data for mining frequent patterns are usually retrieved by the wrapper program Every time the web pages are updated a new date set is retrieved and he appended into the database by the wrapper program The incremental FP-Growth approach can be described as fellows Let FTo be a FP-tree built by FP-Growth algorithm from data set Do at time to and a new data flow AD are retrieved from web page in the time interval At the problem is how to update FTo to a new FP-tree FT with data flow AD at time stamp t  h+At so that FT is exactly the same as that built from data set Do+AD We have known that in FP-Growth algorithm a header table is created for keeping the each item\222s frequency in database So the first step for the incremental FP-Growth algorithm to do is to update this header table with the new coming data set AD This can be done just by scanning data set AD one time and by resorting the items\222 frequency And next the algorithm need to scan data set AD again to create an initial FP-Tree FT\222 so that we have two FP-trees in memory and the FT\222 is much smaller than FTo because its data set AD is much smaller The next is to grow FP-Tree FT\222 by dismantling FTa a Multi-traversing FP-Tree FTo to generate all the item sets and their frequencies An itemset\222s frequency is defined as the frequency of the terminal node in the itemset b Dismantling FP-Tree FT by deleting the sub trees in which the frequencies of all nodes become zero Growing FT-Trce FT\222 with the itemsets got from c a Note that the new data set AD may cause such a problem Such problem must be resolved before the mining process For a given minimal support an item that is frequent in D may become infrequent in DuAD On the other hand an item which is infrequent in D may be highly frequent in AD All the possible situations due to the new increased data set AD are described as follows An item is frequent in both D and AD therefore it is frequent in DuAD An item is frequent in D but not frequent in AD therefore it is either frequent or not in DuAD An item is not frequent in D but frequent in AD therefore it is either frequent or not in DuAD An item is neither frequent in D nor in AD therefore it is not freauent in DuAD Since the present FP-Growth can not deal with the last three cases the header table in FP-Growth is modified to hold not only the frequent items but also some infrequent ones Definition 1 The marginal frequency of an item X in dynamic data environment is defined as where rx and rD represent the growth rates of item X and database D, respectively Note that the marginal frequency of an item reflects its growth trend in the dynamic database Higher marginal frequency implies potentially higher frequency of an item in the dynamic database Definition 2 For a given marginal frequency threshold a an item X is said to be potentially frequent if X sup 2 a Lemma 1 If item X is frequent in D then it must be frequent in DuAD if its marginal frequency X,,-sup>l Proof let X,,,,and X,,p-o donate the supports of item X in D and DuAD respectively Since X is frequent in D that is for a given minimal support threshold 6 we have X,,,D>6 then in the case that X,a,-sup>l which means X grow faster that D we have Xrup_~u X,,,O therefore X is frequent in DuAD 0 We are highly concerned with whether the header table Ht rearranges its item frequency order due to the increment data set AD In the cases that Ht keeps the same item order after AD is added into D the update problem can be easily resolved simply by inserting each new item into the FP-Tree built from the previously accumulated database and in this sense the conventional FP-Growth approach is incremental But in the cases that Ht reorders its item order since the database D receives some new data the previously created FP-Tree can not be simply updated by the same conducts because the tree by this way will have the different structure from that built from the total data set The alternative is to build a new FP-tree with AD and then break up the previously built FP-Tree into frequent itemsets such that we can insert each frequent itemset into the new FP-Tree 237 


In this paper, the header table is updated based on both the minimal support threshold and the minimal marginal frequency threshold so that it holds not only the frequent items in database but also some infrequent but potentially frequent items 3.2 Algorithm Incremental FP-Growth Algorithm for Mining Association Before we introduce the algorithm description of the incremental FP-Growth we give a demonstration by a simple example As we have discussed above, we focus on how to update the header table and then update the previously created FT-Tree with the new coming data With respect to updating the header table we need scan the increment data set AD once and calculate each items both frequency in DuAD and marginal frequency If the header table does not rearrange its item order then each frequent item in AD is directly inserted into the FP-tree Otherwise a new FP-Tree FTA is built from AD and then the previously built FP-Tree FT is broken up into frequent itemsets so that each of which is inserted into the new FP-Tree FTA Example 3.1 Suppose that the initial database D contains five transaction itemsets A,C,D F B,F},{A,B,C,F}and{A,C,F After two scans of the transaction database, the FP-Tree FT and the header table Ht are generated as shown in Figure 1 IOI 4    D B   Figurel traversing a FP-Tree to get all the frequent itemsets Suppose that a new data set AD=\({D C B},\(D A C C E arrives then the frequency and marginal frequency of each item are computed The header table Ht is thus rearranged in the order of C:7 F:6 D:4 A:4,B:3 and E:l with respect to the given support threshold S=2 and the marginal frequency threshold o=l In this case a new FP-Tree FTA is constructed with AD and the updated Ht see figure 2 We now extract frequent itemsets from FP-Tree FT by traversing it twice After the first traverse we get itemsets F, C A D  F C, A B F B Their frequencies in the database are 2 I and I respectively which are subtracted from the frequencies of the corresponding nodes in the tree The tree becomes smaller by deleting the nodes whose frequency becomes zero So node D and B are deleted from FT<,,,,J after the first traverse The frequency of an itemset in the database is determined by the frequency of the terminal node in the path The tree FT now contains only three nodes F:l C:l and A:l in one the path so the itemset F C, A with frequency 1 is obtained by the second traverse See figure 1    Figure 2 FP-Tree FTA built with AD Figure 3 a new FT-tree by merging FT and FT The new created FP-Tree FTA continues to grow up by absorbing itemsets from FT,,,rcn Meanwhile the FP-Tree FT,,,,e is quickly contracting and completely disappeared when FTA ends its growth We can prove that the tree FTA built by this method is exactly the same as that built from the total dataset DuAD if both the support threshold and the marginal frequency threshold are small enough 238 


Example 3.2 Suppose the database D and incremental one AD be the sizes of 1000 and 100 respectively There are four items I 12 13 I4 and their frequencies 56,48,21,36 respectively in the header table Ht In the incremental data set AD the four items 11 12.13 I4 occur 16 28 18 and 3 respectively Assume that the given minimal support is 640 and the minimal marginal frequency is o=l We firstly calculate the marginal frequency of each item The four marginal frequencies for 11 12 13 I4 are 2.587 5.823 6.207 and 0.833 respectively and each item\222s frequency in DuAD is 11:72, 12:76 13:39 and 1,:39 The header table Hi then resort the four items in the new order of 12:76 I,:72 13:39 14:39 I3 and I4 are infrequent both in D and Dum but I3 is potentially frequent and thus kept in the header table Ht whereas I4 is deleted from Ht since it is neither frequent in D and nor infrequent in DuAD and nor potentially frequent Algorithm Incremental FP-Grow fro Mining Association Rules Input a FP-Tree FT,,,en a new arrived data set AD min-supp and min-mar-frequency Output a group of frequent patterns and association rules Begin Scan AD once to update each item\222s count in Ht Calculate each item\222s frequency in Dum Calculate each item\222s marginal frequency Re-sorting the header table Ht Delete the items from Ht that are neither frequent and nor potentially frequent If the order of items in Ht is rearranged then Delete all the links between the header table and the FP-Tree FT Create a new FP-Tree FTA from I AD 1  While  FT has child nodes  Depth-first traversing FT to get a set of itemsets IS For k=l to I IS I  for each itemset ISk in IS Rearrange the items in ISk according to the order of items in the header table Insert each item in ISk into FP-Tree FTa as the child of current node Update the frequency of the nodes in FTA with the frequency of ISx  Connect the new tree FTA to the header table Subtract the frequency of ISk from of its each node in the path of FT Delete a node and its subtree If its that frequency becomes 0 End for End while Call FP-Growth FT   Else  the order of the header table keeps as before Fori 1 to IAD Rearrange the order of items in ADi For each item in itemset ADi according to that of the header table Insert item into FP-Tree FTcu,,cn as a child of the current node Connect the new tree node to the header table Endfor j Endfor i Call FP-Growth FT   Endif End 3.3 Performance test There is no report or accurate analysis so far on the complexity of FP-Growth It is difficult to give an accurate expression of the time complexity of the above algorithm We provide an estimation of the time complexity of the algorithm Some experimental results about the performance of the above algorithm are provided in Figure 4 The data for performance test are retrieved from web pages so the database is dynamic We are concerned with the efficiency of the algorithm when compared with then conventional FP-Growth and its effectiveness to the dynamic data environment. Since the convention FP-Growth algorithm always re-run to find all the frequent patterns when new data flow arrives the first curse diagram in figure 4 shows that the conventional FP Growth algorithm is less efficient than our extending one after the database becomes item-frequency-order stable extending FP-Growth vs FP-Growth time\(seconds 25  m    2500 5700 12000 3300 8000 17500 database size FP-Growth  FP-Growth 239 


time consumption at different min-supports time\(sec elsecl Time consumption compared with FP-Growth  50  20 10  FP-Growth 0.01 0.2 0.4 0.6 0.8 1 min-support mles mined at different mi-suppoN rule number 2500 sire:26000 5 size:l775 1000 500 0.01 0.2 0.4 0.6 0.8 1 min-supportp Figure 4 Experimental results of performance test 4 Obtaining more general information Many data mining approaches search for interesting information in database at low levels That is the language of the mined rules is composed of the terms occurring in the database itself However people sometimes expect to get some high levels of knowledge abstraction which give them a clearer expression of information ahout the database. Generating a less number of the final rules by inducing the discovered rules which are similar at low level can help people better understand the domain problem In our application we pay more attention to finding the difference of customers preferences between Chinese cars and foreign cars or between expensive cars and inexpensive ones and etc than to finding the differences between each type of cars Generally an attribute-oriented induction takes as a database relation and a concept hierarchy for each attributes A concept hierarchy is a concept tree that forms a taxonomy of concepts ranging from a most general concept at the root to some representation of all attribute values at the leaves A concept hierarchy is actually the representation of background knowledge and therefore is built with the support of domain experts. In a concept tree a higher concept is formed by integrating the related lower concepts or attribute values into a symbol which may be highly abstract In this paper, three concept hierarchies see figure 5 are designed in our mining task The continuous attribute price is discreted into 9 intervals and 5 higher level concepts are designed for concept induction The attribute model-name is a category one and has a quite number of values which are classified into Chinese car and foreign car The attribute daik-access is also a continuous one that is discreted into six intervals and is further generalized three concepts Our purpose focus on finding the difference of customers preferences between Chinese cars and foreign cars the expensive cars and inexpensive cars and etc mice Figure 5 Concept hierarchies for the attributes price I I low-access mid-access high-access SO 50-100 Figure 6 Concept hierarchies for the attributes Access 240 


hinese cars Figure 7 Concept hierarchies for the attributes car-model 4 Applied to the Web-content based data mining In this section we present a real-world application of our approach In applying it to the Chinese largest car market whose Web site is located at htto://www.cheshi.com.cn  we found some interesting results about Chinese car consumption preference The data that are retrieved by a wrapper from the web pages contain 11 attributes among which the attributes model-name sub-category price pricing-date and daily-access are valuable to our mining task wramer incremental FP-Growth Figure 8 Frame of incremental FP-Growth applied to Web-content based data minine The association rules in table 1-3 are mined when the database incrementally reaches the size of about 17750 instances Table1 lists some rules that have strong association between the attributes prices daily_access and model-name The rules reflect the customers\222 higher preference to Chinese cars with price in the range of 100,000-200,000\(RMB than to those in other price ranges and Satana and Shenglong are the two major models that Chinese people prefer most Table 2 shows that Chinese customers are most interested in foreign cars of moderate price ranging from 300,000 to 500,00O\(RMB The association between price and daily_access is shown in table 3 from which we can see that inexpensive cars are highly associated with frequent daily access whereas expensive cars have strong relation with less daily access But the cars with price under 50,00O\(RMB is an exception because they show no attraction to customers Moderate price cars are moderately preferred by Chinese peoples Table I Preference to main models of Chinese cars Association rules Supp Conf Price:l&20 A Access:100-500  Santana 2.749 18.937 Price:IO-20 Access 50-100 Santana 7.489 53.415 PricclO-20 A Access 100-500 Shenglong 16S75 Price:lO-20 A Access 50.100 3 Shenglong Price:lO-20 A Access 100-500 2 FAW 2.441 32.757 0.621 22.581 Pricc-lO A Access 100-500 2 Xiali Priee:lO-20 A Access 50-100 3 Citroen 0.272 4.483 0.313 11.389 Price:5-lO A Access 100-500 a Changan 0.786 10.497 Price:IO-20 A Access 100-500 2 Chew 0.130 4.264 Price:30-50 A Access 50-100 2 Audi Table 2 Preferences to main models of foreign cars Association rules Supp Conf Price:30-~O~Access 50-100  Toyota 0.426 13.953 Price:30-5O~Access 50-100 3 Buick 0.414 13.566 Price:30-5O~Access 50-100 j Nissan 0.278 9.109 Price:30-5O~Access 50-100 3 Lexus o.102 3.295 0.012 0.388 Price:30-SO~Access 50-100  Benz 0.035 0.517 Access 50-100  BMW Table 3 Association between price and access Association rules Supp Conf Price 5 Access 100-500 0.898 1 1.428 Price 5-10 Access 100-500 2.749 83.937 Price 10-20 3 Access 100-500 7.489 53.415 Price 20-30  Access 100-500 2.353 29.926 Price 20-30  Access 50-100 2.737 39.879 Price 20-30 3 Access SO 8.884 13.519 Price 30-50 Access 50-100 3.050 80.000 Price 50-70  Access 60 11.319 17.224 Price 70-90  Access 50 5.426 8.311 Price 90-120 Access  50 1.608 2.446 Price I20  Access 50 2.994 4.416 241 


Table 4 More general rules induced with min supp=l O Association rules Supp  Conf Price low Access x mid 3.889 89.437 P\224ce\(x low-mid a Aceess\(x mid 18.648 92.875 Priee\(r mid  Access\(x mid 13.718 87.097 Price\(x mid-high Access x low 9.453 90.099 China_car\(x,\224Yes\224  mid 72.125 46.021 Foreign_car\(x,\224Yes\224 x law 26.389 89.882 Price\(x,low_mid x,\224Yes\224 17.203 61.223  x mid 12.568 94.018 Price\(x mid A Foreigr_car\(x 223Yes\224  Accessfx low   5.219 98.914 Priee\(x.high 224Y~~\222 3 Access\(x low 5 Conclusion An incremental FP-Growth algorithm for mining association rules is proposed in this paper It extends the FP-Growth algorithm to dynamic data environments. The web-content based data mining is a typical example of such kind dynamic environments Both experimental results on performance testing and the real-world application have shown its high effectiveness The web content based application discovered some interesting results about Chinese customers\222 car consumption preference This extended FP-Growth algorithm has demonstrated its great potential in discovering usual association rules from dynamic environments which placed the algorithm in a position to be a strong candidate as a good data mining tool among the other algorithms such as classification clustering sequential patterns mining etc The system is implemented with VC 6.0 under the platform of windows 98/2000 and has been put into practical use One of the important issues which can be investigated in the future is the reliability of the discovered association rules References I Cooley R Mobasher B  Srivastava, J\(1999 Web Mining Information and Pattern Discovery on the WorldWideWeb,htto://wwwusers.cs.umn.edu/-moha sher/webminer/survevsurve~.html Doorenbos,R.,\( 1997 Wrapper induction for 2 Kushmerick,N Daniel Weld  information extraction Proceeding of the 15th International Joint Conference on Artificial Intelligence. \(pp. 729-737 3 Kushmerick,N.\(1997 Wrapper induction for information extraction Ph.D Dissertation Dept of Computer Science Univ of Washington TR UW CSE-97-11-04 4 Adelberg,B.,\(1998  A tool for semi automatically extracting structured and semistructured data from text documents Proceedings of SIGMOD\22298.\(pp. 283-294 5 Liu,L Pu,C  Han,W 2000 Xwrap An XML enabled Wrapper Construction System for Web Information Sources  International Conference on Data Engineering, San Diego, CA 6 J Han J Pei and Y. Yin, \223Mining Frequent Patterns without Candidate Generation\224 SIGMOD Conference 2000 1-12 7 Webb, Geoffrey L 223Efficient search for association rules\224 In Proceedings of the Sixth ACM SIGKDD International Conference on Knowledge Discovery and Data Mining pages 99-107 2000 SI Zheng, Zijian, Kohavi, Ron, and Mason, Llew, \223Real World Performance of Association Rule Algorithms\224 In proceedings of the Seventh ACM SIGKDD International Conference on Knowledge Discovery and Data Mining San Francisco Califomia, August 2001 9 Ashoka Savasere, Edward Omiecinski, and Shamkant B Navathe 223An Efficient Algorithm for Mining Association Rules in Large Databases\224 VLDB 1995 432-444 10]R Agrawal and R Srikant Fast algorithms for mining association rules VLDB94 487-499 Santiago, Chile I 1]R I Bayardo Efficiently mining long patterns from databases SIGMOD98.85-93 Seattle Washington  Brin R Motwani J D Ullman and S Tsur Dynamic itemset counting and implication rules for market basket analysis SIGMOD97 255-264 Tucson, Arizona, May 1997  W Cheung  H.Y.Hwang ADA W Fu and J Han. Efficient rule-based attribute-oriented induction for data mining Journal of intelligent information systems 15,175-200,2000 14]Colin L.Carter and Howard I Hamiton Efficient Attribute-oriented generalization for knowledge discovely from large database IEEE transaction on knowledge and data engineering Vol  IO,No.2,March/April 1998 242 


association-cube, base-cube and population-cube are derived from the volume cube; the confidence-cube is derived from the association cube and population cube and the support-cube is derived from the associationcube and base-cube. The slices of these cubes shown in Figure 2 correspond to the same list of values in dimension merchant, time, area and customer_group  Multidimensional and multilevel rules Representing association rules by cubes and underlying cubes by hierarchical dimensions, naturally supports multidimensional and multilevel rules. Also these rules are well organized and can be easily queried  First, the cells of an association cube with different dimension values are related to association rule instances in different scopes. In the association cube CrossSales cell CrossSales product \221A\222, product2 \221B\222  customer_group 221engineer\222, merchant \221Sears\222, area \221Los Angeles\222, time 221Jan98\222 represents the following multidimensional rule x 316 Customers: buy_product\(x, \221A\222 336 buy_product\(x,\221B\222  275 customer_group = \221engineer\222, merchant = \221Sears\222, area 221Los  Angeles\222, time =  \221Jan98\222 If this cell has value 4500, and the corresponding cell in the population cube has value 10000, then this rule has confidence 0.45 Next as the cubes representing rules can have hierarchical dimensions, they represent not only multidimensional but also multi-level association rules. For example, the following cells CrossSales\(product \221A\222, product2 \221B\222, customer_group 221engineer\222, merchant \221Sears\222, area \221 California 222, time 221Jan98\222 CrossSales\(product \221A\222, product2 \221B\222, customer_group 221engineer\222, merchant \221Sears\222, area \221 California 222, time 221 Year98 222 represent association rules at different area levels \(i.e the city level and the state level\d different time levels \(i.e., the month level, the year level x 316 Customers: buy_product\(x, \221A\222 336 buy_product\(x, \221B\222  275 customer_group = \221engineer\222, merchant =  \221Sears\222, area 221 California 222, time =  \221Jan98\222 x 316 Customers: buy_product\(x, \221A\222 336 buy_product\(x, \221B\222  275 customer_group = \221engineer\222, merchant =  \221Sears\222, area 221 California 222, time =  \221 Year98 222 The cell CrossSales\(product \221A\222, product2 \221B\222,  customer_group 221top\222, merchant \221top\222, area \221top\222,  time \221top\222 represents the customer-based cross-sale association rule for all customers, merchants, areas, and times in the given range of these dimensions, expressed as x 316 Customers: buy_product\(x, \221A\222 336 buy_product\(x, \221B\222 4.3  Generating Association Rule Related Cubes The basic task of our OLAP based association rule mining framework, either at the GDOS or at an LDOS is to convert a volume cube i.e. the cube representing the purchase volumes of customers dimensioned by product  area etc, into an association cube a base cube and a population cube These cubes are then used to derive the confidence cube and the support cube of multidimensional association rule instances. The following general steps are involved in cross-sale association rule mining 267  Roll up the volume cube SaleUnits by aggregating it along merchant, time, area dimensions 267  Derive cube NumOfBuyers from SaleUnits based on the antecedent condition SaleUnits 0 267  Populate cube NumOfShoppers by the counts of customers dimensioned by merchant, area  time not by product\at satisfy the antecedent conditions 267  Derive cube CrossSales from SaleUnits based on the association conditions SaleUnits  product  p 1  0 and SaleUnits  product2  p 2 0 267  Derive cube Confidence and cube Support using cell-wise operations 214  Confidence = CrossSales  NumOfBuyers 214  Support  CrossSales  NumOfShoppers  Cubes Confidence  Support  CrossSales are dimensioned by product  product2 customer_group,merchant  time, area NumOfBuyers is dimensioned by product  customer_group, merchant time, area  NumOfShoppers is dimensioned by customer_group, merchant  time, area Rules with confidence and support that exceed specified thresholds  may be considered interesting 4.4. Rules with Conjoint Items Cubes with conjoint dimensions can be used to represent refined multidimensional association rules For example, using OLAP, we can derive association rules across time  Time-variant or temporal association rules such as 


x 316 Customers buy_product\(x,\222 A\222, \221 Jan98\222  336 buy _product\(x, \221B\222, \221 Feb98\222   275 area = \221Los Angeles\222 can be used to answer such questions as \223 How are  the sales of B in Feb98  associated with the sales of A in Jan98 224 The items in this rule are value pairs of dimensions product and time In order to specify this kind of association rule we introduce a conjoint dimension product, time and mirror it with dimension product2, time2 This allows a cell in the association cube to cross two time values. Accordingly, the cubes related to association rule mining are defined as follows Association cube  CrossSales.2 \(<product, time>, <product2, time2 customer_group, merchant, area  Population cube  NumOfBuyers.2  \(<product, time>, customer_group merchant, area Base cube  NumOfShoppers.2  \( customer_group, merchant, area Confidence cube Confidence.2 \(<product, time>, <product2, time2 customer_group, merchant, area Support  cube  Support.2  product, time>, <product2, time2 customer_group, merchant, area  The steps for generating these cubes are similar to the ones described before. The major differences are that a cell is dimensioned by, besides others product, time and product2, time2 and the template of the association condition is  SaleUnit s  product p 1 time t 1  0 and  SaleUnits  product2 p 2 time2 t 2  0 where, in any instance of this condition, the time expressed by the value of time2 is not contained in the time expressed by the value of time The template of the antecedent condition is SaleUnits   product p 1 time t 1  0 In general, other dimensions such as area may be added to the conjoint dimensions to specify more refined rules 4.5. Functional Association Rules A multidimensional association rule is functional if its predicates include variables, and the variables in the consequent are functions of those in the antecedent.  For example, functional association rules can be used to answer the following questions, where a_month and a_year are variables q  What is the percentage of people in California who buy a printer in the next month after they bought a PC x 316 Customer buy_product\(x, \221PC\222, a_ month 336 buy_product\(x, \221printer\222, a_month+1  275 area = \221California\222 q  What is the percentage of people who buy a printer within the year when they bought a PC  x 316 Customer: buy_product\(x, \221PC\222, a_ year 336 buy_product\(x, \221printer\222, a_year 275 area = \221California\222 To be distinct, we call the association rules that are not functional as instance association rules; e.g x 316 Customer: buy_product\(x,\222 PC\222, \221Jan98\222 336 buy_product\(x,\222 printer\222, \221Feb98\222  275 area =  \221California\222 Time variant, functional association rules can be derived from time variant, instance association rules through cube restructuring. Let us introduce a new dimension time_delta that has values one_day, two_day 205, at the day level, and values one_month, two_month, \205, at the month level, etc. Then, let us consider the following functional association rule related cubes Association cube  CrossSales.3 \(product, product2, customer_group merchant, area, time_delta  Population cube  NumOfBuyers.3 \(product, customer_group, merchant area Base cube  NumOfShoppers.3 \( customer_group, merchant, area Confidence cube  Confidence.3 \(product, product2, customer_group merchant, area, time_delta Support cube  Support.3 \(product, product2, customer_group, merchant area, time_delta The association cube CrossSales.3  can be constructed from CrossSales.2   The cell values of CrossSales.2  in the selected time and time2 ranges are added to the corresponding cells of CrossSales.3 For example, the count value in cell  CrossSales.2\(<PC, Jan98>, <printer, Feb98>\205 is added to cell \(bin CrossSales.3\(PC, printer, one_month,\205 


It can also be added to cell CrossSales.3\(PC, printer one_year,\205 5  Distributed and Incremental Rule Mining There exist two ways to deal with association rules 267  Static that is, to extract a group of rules from a snapshot, or a history, of data and use "as is 267  Dynamic that is, to evolve rules from time to time using newly available data We mine association rules from an e-commerce data warehouse holding transaction data. The data flows in continuously and is processed daily Mining association rules dynamically has the following benefits 267  223Real-time\224 data mining, that is, the rules are drawn from the latest transactions for reflecting the current commercial trends 267  Multilevel knowledge abstraction, which requires summarizing multiple partial results. For example association rules on the month or year basis cannot be concluded from daily mining results. In fact multilevel mining is incremental in nature 267  For scalability, incremental and distributed mining has become a practical choice Figure 3: Distributed rule mining Incremental association rule mining requires combining partial results. It is easy to see that the confidence and support of multiple rules may not be combined directly. This is why we treat them as \223views\224 and only maintain the association cube, the population cube and the base cube that can be updated from each new copy of volume cube. Below, we discuss several cases to show how a GDOS can mine association rules by incorporating the partial results computed at LDOSs 267  The first case is to sum up volume-cubes generated at multiple LDOSs. Let C v,i be the volume-cube generated at LDOS i The volume-cube generated at the GDOS by combining the volume-cubes fed from these LDOSs is 345   n i i v v C C 1  The association rules are then generated at the GDOS from the centralized C v  214  The second case is to mine local rules with distinct bases at participating LDOSs, resulting in a local association cube C a,I a local population cube C p,I  and a local base cube C b,i at each LDOS. At the GDOS, multiple association cubes, population cubes and base cubes sent from the LDOSs are simply combined, resulting in a summarized association cube and a summarized population cube, as 345   n i i a a C C 1   345   n i i p p C C 1  and 345   n i i b b C C 1  The corresponding confidence cube and support cube can then be derived as described earlier. Cross-sale association rules generated from distinct customers belong to this case In general, it is inappropriate to directly combine association cubes that cover areas a 1 205, a k to cover a larger area a In the given example, this is because association cubes record counts of customers that satisfy   customer product merchant time area Doe TV Dept Store 98Q1 California Doe VCR Dept Store 98Q1 California customer product merchant time area Doe VCR Sears 5-Feb-98 San Francisco Joe PC OfficeMax 7-Feb-98 San Francisco customer product merchant time area Doe TV Fry's 3-Jan-98 San Jose Smith Radio Kmart 14-Jan-98 San Jose Association   population      base          confidence      support cube               cube                cube         cube                cube LDOS LDOS GDOS 


the association condition, and the sets of customers contained in a 1 205, a k are not mutually disjoint. This can be seen in the following examples 214  A customer who bought A and B in both San Jose and San Francisco which are covered by different LDOSs , contributes a count to the rule covering each city, but has only one count, not two, for the rule A  336  B covering California 214  A customer \(e.g. Doe in Figure 3\who bought a TV in San Jose, but a VCR in San Francisco, is not countable for the cross-sale association rule TV  336 VCR covering any of these cities, but countable for the rule covering California. This is illustrated in Figure 3 6  Conclusions In order to scale-up association rule mining in ecommerce, we have developed a distributed and cooperative data-warehouse/OLAP infrastructure. This infrastructure allows us to generate association rules with enhanced expressive power, by combining information of discrete commercial activities from different geographic areas, different merchants and over different time periods. In this paper we have introduced scoped association rules  association rules with conjoint items and functional association rules as useful extensions to association rules The proposed infrastructure has been designed and prototyped at HP Labs to support business intelligence applications in e-commerce. Our preliminary results validate the scalability and maintainability of this infrastructure, and the power of the enhanced multilevel and multidimensional association rules. In this paper we did not discuss privacy control in customer profiling However, we did address this issue in our design by incorporating support for the P3P protocol [1 i n  ou r data warehouse. We plan to integrate this framework with a commercial e-commerce system References 1  Sameet Agarwal, Rakesh Agrawal, Prasad Deshpande Ashish Gupta, Jeffrey F. Naughton, Raghu Ramakrishnan, Sunita Sarawagi, "On the Computation of Multidimensional Aggregates", 506-521, Proc. VLDB'96 1996 2  Surajit Chaudhuri and Umesh Dayal, \223An Overview of Data Warehousing and OLAP Technology\224, SIGMOD Record Vol \(26\ No \(1\ 1996 3  Qiming Chen, Umesh Dayal, Meichun Hsu 223 OLAPbased Scalable Profiling of Customer Behavior\224, Proc. Of 1 st International Conference on Data Warehousing and Knowledge Discovery \(DAWAK99\, 1999, Italy 4  Hector Garcia-Molina, Wilburt Labio, Jun Yang Expiring Data in a Warehouse", Proc. VLDB'98, 1998 5  J. Han, S. Chee, and J. Y. Chiang, "Issues for On-Line Analytical Mining of Data Warehouses", SIGMOD'98 Workshop on Research Issues on Data Mining and Knowledge Discovery \(DMKD'98\ , USA, 1998 6  J. Han, "OLAP Mining: An Integration of OLAP with Data Mining", Proc. IFIP Conference on Data Semantics DS-7\, Switzerland, 1997 7  Raymond T. Ng, Laks V.S. Lakshmanan, Jiawei Han Alex Pang, "Exploratory Mining and Pruning Optimizations of Constrained Associations Rules", Proc ACM-SIGMOD'98, 1998 8  Torben Bach Pedersen, Christian S. Jensen Multidimensional Data Modeling for Complex Data Proc. ICDE'99, 1999 9  Sunita Sarawagi, Shiby Thomas, Rakesh Agrawal Integrating Association Rule Mining with Relational Database Systems: Alternatives and Implications", Proc ACM-SIGMOD'98, 1998   Hannu Toivonen, "Sampling Large Databases for Association Rules", 134-145, Proc. VLDB'96, 1996   Dick Tsur, Jeffrey D. Ullman, Serge Abiteboul, Chris Clifton, Rajeev Motwani, Svetlozar Nestorov, Arnon Rosenthal, "Query Flocks: A Generalization of Association-Rule Mining" Proc. ACM-SIGMOD'98 1998   P3P Architecture Working Group, \223General Overview of the P3P Architecture\224, P3P-arch-971022 http://www.w3.org/TR/WD-P3P.arch.html 1997 


Plenary Panel Session 30 XML Databases   Moderator: Michael Carey, IBM Almaden Research Center USA Panelists Adam Bosworth, Microsoft Corporation USA David De Witt University of Wisconsin-Madison, USA Alon Levy University of Washington USA Bruce Lindsay IBM Almaden Research Center USA Jennifer Widom Stanford University USA Demo Session 1 Web Query Optimizer  661 V Zadorozhny L Bright L Raschid T Urhan and M Vidal ReQueSS: Relational Querying of Semi-structured Data  664 R Sunderraman The IDEAL Approach to Internet-Based Negotiation for E-Business  666 J Hammer C Huang Y Huang C Pluempitiwiriyawej M Lee H Li L Wang Y Liu and S Su READY A High Performance Event Notification Service  668 R Gruber B Krishnamurthy, and E Panagos A Multimedia Information Server with Mixed Workload Scheduling  670 G Nerjes DISIMA An Object-Oriented Approach to Developing an Image Database System  672 V Oria T Ozsu P Iglinski B Xu and L Cheng Demo Session 2 The Collaboration Management Infrastructure  677 H Schuster D Baker A Cichocki D Georgakopoulos and M Rusinkiewicz Assisting the Integration of Taxonomic Data The LITCHI Toolkit  679 I Sutherland J Robinson S Brandt A Jones S Embury W Gray R White and F Bisby TheaterLoc: Using Information Integration Technology to Rapidly Build Virtual Applications  681 G. Barish Y.4 Chen D Dipasquo, C Knoblock S Minton I Muslea and C Shahabi Lineage Tracing in a Data Warehousing System  683 Y Cui and J Widom xiii 


The Mentor-Lite Prototype A Light-Weight Workflow Management System  685 J Weissenfels M Gillmann 0 Roth, G Shegalov and W Wonner Location Prediction and Queries for Tracking Moving Objects  687 0 Wolfson B Xu and S Chamberlain Semiorder Database for Complex Activity Recognition in Multi-Sensory Environments  689 S Bhonsle A Gupta S Santini and R Jain Tutorial 1 Web Information Retrieval  693 M Henzinger Tutorial 2 Mobile and Wireless Database Access for Pervasive Computing  694 P Chrysanthis and E Pitoura Tutorial 3 Data Mining with Decision Trees  696 J Gehrke Tutorial 4 Directories Managing Data for Networked Applications  697 D Srivastava Tutorial 5 Indexing High-Dimensional Spaces Database Support for Next Decade\222s Applications  698 S Berchtold and D Keim xiv 


 T5.I2.D100K T10.I4.D100K T15.I4.D100K T10.I6.D400K T10.I6.D800K T10.I6.D1600K Optimizations across Databases 5 0 5 10 15 20 25 30 35 40 45 Improvement COMP TREE COMP-TREE 1 2 4 8 1 2 4 8 1 2 4 8 2 4 8 2 4 8 1 2 4 8 Processors Databases Figure 5 Effect of Computation and Hash Tree Balancing good as the COMP optimization The reason that the hash tree balancing is not suf\336cient to offset inherent load imbalance in the candidate generation in this case The most effective approach is to apply both optimizations at the same time COMP-TREE The combined effect is suf\336cient to push the improvements in the 40 range in the multiple-processor case On 1 processor only hash tree balancing is bene\336cial since computation balancing only adds extra cost 5.4 Short-circuited Subset Checking Figure 6 shows the improvement due to the short-circuited subset checking optimization with respect to the unoptimized version The unoptimized version is the Apriori algorithm due to Agrawal et al 5 The results are presented for dif ferent number of processors across dif ferent databases The results indicate that while there is some improvement for databases with small transaction sizes the optimization is most effective when the transaction size is large In this case we get improvements of around 25 r the unoptimized version To gain further insight into this optimization consider 336gure 7 It shows the percentage improvement obtained per iteration on applying this optimization on the T20.I6.D100K database It shows results only for the uni-processor case r similar results were obtained on more processors We observe that as the iteration k increases there is more opportunity for shortcircuiting the subset checking and we get increasing bene\336ts of up to 60 The improvements start to fall off t the high end where the number of candidates becomes small resulting in a small hash tree and less opportunity for short-circuiting It becomes clear that is an extremely effective 15 Proceedings of the 1996 ACM/IEEE Conference on Supercomputing \(SC\22296 0-89791-854-1/96 $ 10.00 ACM 


 T5.I2.D100K T10.I6.D800K T15.I4.D100K T20.I6.D100K procs across Databases 0 5 10 15 20 25 Improvement 1 2 4 8 Figure 6 Effect of Short-circuited Subset Checking 23456789101112 Iterations 0 10 20 30 40 50 60 improvement T20.I6.D100K Figure 7  Improvement per Iteration  proc   16 Proceedings of the 1996 ACM/IEEE Conference on Supercomputing \(SC\22296 0-89791-854-1/96 $ 10.00 ACM 


optimization for larger transaction sizes and in cases where there are large number of candidate k itemsets 6 Conclusions In this paper e presented a parallel implementation of the Apriori algorithm on the SGI Power Challenge shared memory multi-processor We also discussed a set of optimizations which include optimized join and pruning computation balancing for candidate generation hash tree balancing and short-circuited subset checking We then presented experimental results on each of these Improvements of more than 40 were obtained for the computation and hash tree balancing The short-circuiting optimization was found to be extremely effective for databases with large transaction sizes Finally we reported the parallel performance of the algorithm While we d good speed-up we observed a need for parallel I/O techniques for further performance gains References  R Agra wal T  Imielinski and A Swami Database mining A performance perspecti v e  I n IEEE Trans on Knowledge and Data Engg  pages 5\(6 1993  R Agra wal T  Imielinski and A Swami Mining association rules between sets of items in lar ge databases In Proc M SIGMOD Intl Conf Management of Data  May 1993  R Agra wal H Mannila R Srikant H T o i v onen and A I V erkamo F ast disco v ery of association rules In U F et al editor Advances in Knowledge Discovery and Data Mining  MIT Press 1996  R Agra wal and J Shafer  P arallel mining of association rules design implementation and e xperience Technical Report RJ10004 IBM Almaden Research Center San Jose CA 95120 Jan 1996  R Agra wal and R Srikant F ast algorithms for mining association rules In Proc 20th VLDB Conf  Sept 1994  M Cierniak W  Li and M J Zaki Loop scheduling for heterogeneity  I n 4th IEEE Intl Symposium on High-Performance Distributed Computing also as URCS-TR 540 CS Dept Univ f Rochester  Aug 1995  M Holsheimer  M  K ersten H Mannila and H T o i v onen A perspecti v e on databases and data mining In 1st Intl Conf Knowledge Discovery and Data Mining  Aug 1995  M Houtsma and A Swami Set-oriented mining of association rules In RJ 9567  IBM Almaden Oct 1993  H Mannila H T o i v onen and I V erkamo Ef 336cient algorithms for disco v ering association rules In AAAI Wkshp Knowledge Discovery in Databases  July 1994  J S P ark M Chen and P  S Y u  A n e f fecti v e hash based algorithm for mining association rules In Proc M SIGMOD Intl Conf Management of Data  May 1995 17 Proceedings of the 1996 ACM/IEEE Conference on Supercomputing \(SC\22296 0-89791-854-1/96 $ 10.00 ACM 


 J S P ark M Chen and P  S Y u  E f 336cient parallel data mining for association rules T echnical Report RC20156 IBM T J Watson Research Center Aug 1995  G Piatetsk y-Shapiro Disco v ery  presentation and analysis of strong rules In G P S et al editor  KDD  AAAI Press 1991  A Sa v asere E Omiecinski and S Na v athe An ef 336cient algorithm for mining association rules in large databases In Proc 21st VLDB Conf  1995  M J Zaki M Ogihara S P arthasarathy  and W  Li P arallel data mining for association rules on shared-memory multi-processors Technical Report 618 Department of Computer Science University of Rochester 618 1996 18 Proceedings of the 1996 ACM/IEEE Conference on Supercomputing \(SC\22296 0-89791-854-1/96 $ 10.00 ACM 


