Mining Quan titativ e Asso ciation Rules under Inequalit y Constrain ts Charles Lo and Vincen t Ng Departmen t of Computing Hong Kong P olytec hnic Univ ersit y  Hong Kong China csc hamlo@comp.p olyu.edu.hk cst yng@comp.p olyu.edu.hk Abstract In the past sev eral y ears there has b een m uc h activ e w ork in dev eloping algorithms for mining asso ciation rules Ho w ev er in man y real-life situations not all asso ciation rules are of in terest to the users An user ma y w an t to 014nd asso ciation rules whic h satisfy a giv 
en inequalit y constrain t for a set of quan titativ e items In other w ords users are more in terested in the subsets of those asso ciations In this pap er w e presen tho wtointegrate the inequalit y constrain ts in to the mining process and reduce the n um b er of database scanning The algorithm w e presen t generates the large itemsets b y building the expression tree and prunes a w a y the undesired one b yc hec king the acceptance range In our w ork w e consider constrain ts of arithmetic inequalities whic h are comp osed of common op erators suc has 
  000  003   Preliminary exp erimen tal results of the algorithm in comparison with the classical Apriori algorithm are also rep orted 1  1 Ov erview of our w ork The problem of disco v ering asso ciation rules w as 014rst in tro duced in 1 It is to 014nd the p ossible asso ciations bet w een items when a user sp eci\014es a minim um supp ort  s  and a minim um con\014dence  c  F or example one p ossible asso ciation rule can be there are 10 of customers who made long distance 
calls to England last mon th and 80 of those customers also called USA In this example the supp ort is 10 and the con\014dence is 80 Ho w ev er the items in the ab o v e rule are binary attributes and do es not p osses an y quan titativ e v alues It merely rev eals the existence of di\013eren t items in transactions but not the p ossible quantitativ e relationships b et w een them Di\013eren t extensions on the binary asso ciation rules ha v e b een app eared in the past sev eral y ears 2 3  4  5 6 8  In Section 2 w ein tro duce the imp ortan 
t researc h w ork of mining asso ciation rules and a clear problem is stated in Section 3 Later in Section 4 w e will discuss our new algorithm In Section 5 pre1 The w ork of the authors w ere supp orted in part b y the Hong Kong R GC Gran t Q120 liminary exp erimen tal results are presen ted whic h is follo w ed b y a conclusion of our w ork 2 Related W ork Database mining has recen tly attracted tremendous amoun t of atten tion in database researc hbecause of its applicabilit y in man y areas Man y 
in teresting and e\016cien t asso ciation mining algorithms ha v e b een prop osed One of the most imp ortan tw ork w as written in 1993 2.1 Mining Asso ciation Rules bet w een Sets of Items in Large Database Although this pap er w as written in 1993 it provides the fundamen tal idea for mining asso ciation rules 1 It prop osed the famous Apriori algorithm whic h can b e divided in to t w o steps 017 Find all itemsets whose supp orts are greater than the minim um supp ort s and these item 
sets are called lar ge itemsets  017 Generate the asso ciation rules If f ABC g and f AB g are b oth in the large itemsets w e compute its con\014dence whic h is the supp ort of f ABC g  the supp ort of f AB g  If the ratio is higher than a preset threshold c  the rule is established Apriori giv es the fundamen tal idea of ho w to 014nd out all the large itemsets e\013ectiv ely among thousands of transactions Ho w ev er the algorithm is only dealing 
with binary attributes In practice w e usually deal with transactions con taining items with p ositiv ev alues instead of 0 or 1 Also Apriori only fo cuses on the existence of items without p erforming an y manipulation on the input Later on man y di\013eren t algorithms 5  6 7 9 w ere in tro duced to enric h the mining metho dology  In general they impro v e the mining pro cess b y t w o w a ys 1 014nding the more useful asso ciation rules or 2 sp eeding up the mining pro cess of asso ciation rules In this pap er w e presen t the 1 


QMIC algorithm whic h also enhances the mining pro cess in the similar w a ys 3 Problems Statemen t In practice not all asso ciation rules are of interest to the users In addition databases contain quan titativ e attributes instead of binary attributes A user ma yw an t to 014nd asso ciation rules whic h satisfy a giv en inequalit y constrain t for a set of quan titativ e items W e consider the constrain ts of arithmetic inequalities whic h are comp osed of   000  003   Let V  I 1 I 2  I M be a set of quan titativ e items and T be the transactions of a database D  F or eac h transaction t  t[k  0 means that t con tains item I k with the v alue t[k and t[k]=0 means that I k do es not exist in t  In our w ork w e are in terested in 014nding all quan titativ e asso ciation rules that satisfy the user sp eci\014ed constrain t S whic h consist of an ar ithmetic expr ession  E  an ineq ual ity oper ator  r  and a constant  C  Therefore a giv en constrain t can be sp eci\014ed as E r C  where 017 E is an y arithmetic expression comp osing of a n um b er of unkno wn quan titativ e items and the op erators   000  002   with or without brac kets 017 r 017 f     024  025g  017 C is a scalar v alue Some examples of the inequalit y constrain ts are giv en b elo w 1 A  B  C 100 Find an y three items in the database where their sum of v alues is smaller than 100 2 A 000 2 003 B 0 Find an y pair of items where one's v alue is the double of the other 4 The QMIC Approac h F requency constrain t whic h considers the supp ort coun t of an itemset is a common criterion widely used in to da y's asso ciation mining algorithm In our in terest mining asso ciation rules in a database of quan titativ e items w e lik e to consider the v alue constrain t of the itemsets as the second criterion in the pruning pro cess Our strategy is to divide the pruning pro cess in to t w o stages Stage 1 de\014nes the acceptance range AR for the candidate itemsets in eac h iteration Whenev er the v alue         A B C D E F G H I J A + B C - D G * H I * J A + B C D E * F G * H I * J A + B C - D A + B C - D G * H I * J a        A B C D E F G H I J A + B C - D G * H I * J A + B C D E * F G * H I * J A + B C - D A + B C - D G * H I * J b Bottom Up Process 5, 10 5, 10 10,20        A B C D E F G H I J A + B C - D G * H I * J A + B C D E * F G * H I * J A + B C - D A + B C - D G * H I * J c childs are \(0,100 2,30 Top Down Process 2,10 5,100 8 10  Figure 1 Building an IET 2 


range VR 2 of a candidate itemset is o v erlapp ed with an y AR it can b e passed to stage 2 Otherwise it will b e pruned a w a y without the supp ort coun ting Stage 2 is simply the original supp ort coun ting whic h mak es use of the frequency constrain t The QMIC algorithm implemen ts stage 1 b y constructing the IET 4.1 Inequalit y Expression T ree IET 4.1.1 Expression T ree There are three steps in constructing an IET The 014rst step is to conv ert an expression E of the user sp eci\014ed constrain t in to the expression tree structure There are t w oin teresting prop erties ab out an expression tree built in QMIC 017 A leaf no de represen ts an y p ossible item in the database 017 Eac hin ternal no de represen ts a sub-expression ro oted at itself The itemset size of the no de represen ts the n um ber of items that this subexpression has F or example an in ternal no de ro oted with the expression x  y 000 z has no de size equal to three A more detail example is sho wn in Figure 1a whic h sho ws the expression tree with size equals to 10 An arithmetic expression can be represen ted b y di\013eren t expression trees In constructing the expression tree w eha v e adopted a simple heuristic The expression is separated in to terms and the   000  op erators Eac h term is either comp osed of  002   op erators and/or brac k ets Amongst the   000  op erators in the expression w ec ho ose the cen ter one as the ro ot and recursiv ely selected the t w o middle ones in the left and righ t hand side The same heuristic is applied to eac h term un til the tree is completely done The details of ho w the heuristic w ork will be giv en in our complete pap er 4.1.2 Minim um and Maxim um Range The second step is to assign eac h no de a minmax r ange   Ei min Ei max  whic h represen ts the minim um and maxim um v alues of the asso ciated expression of the no de The calculation of the min-max ranges is a b ottom-up pro cess That is it starts at the leaf lev el and pro cesses up un til the 2 The VR represen ts the p ossible v alues after ev aluating the itemset with the sub-expression asso ciated with the no de ro ot The min-max ranges of the leaf no des whic h represen t the single items are all the same and it can b e simply obtained b y scanning the database once Based on the op erators in the in termediate no des all the min-max ranges of the in termediate no des can be calculated In Figure 2 w e sho w the four general form ulae to calculate the ranges under the b ottom-up pro cess All min-max ranges of the leaf no des size equals to 1 are the same at the b eginning The example of an expression tree with min-max ranges is sho wn in Figure 1b 4.1.3 Acceptance Range The third step is the assignmen ts of the acceptance range AR  E low E up  to the no des The AR of a no de is the v alid range of v alues that an itemset can be accepted after ev aluating with the sub-expression at the no de Unlik e the min-max range the AR assignmen t is a top-do wn pro cess whic h starts from the ro ot this time The AR of the ro ot can be found easily since it represen ts the whole lefthand-side expression of the input constrain t In our con tin uing example it is 10  1  Once the ro ot's AR is de\014ned other AR's can b e calculated Because of space limitation w e omit the detail of the calculation pro cedure but sho w the four general form ulae for the  025  condition in Figure 3 The other four form ulae for the  024  is skipp ed here After the calculation of the ARs the initial IET for the expression in Figure 1a is completed as in Figure 1c It has a n um b er of prop erties 1 If the v alue range of a candidate itemset o v erlaps with an y AR's of the leaf no de it is passed to stage 2 for supp ort coun ting 2 If the v alue range of a candidate itemset do es not o v erlap an y AR's it is pruned a w a y  3 During mining eac h leaf no de is asso ciated with a set of large itemsets whose size is the same length as of the sub-expression 4 Both min-max range and AR's in terv als will b e adjusted after eac h iteration will b e discussed in Section 4.2 5 The structure esp ecially the depth information of the IET determines the Generating Mining Sequence GMS whic h will be discussed next 3 


  E1 E2 min E2 max  E1 min E1 max  The min-max range of the parent node p is E1 m in E2 min E1 max E2 max respectively p E2  E1 E2 min E2 max  E1 min E1 max  p E2 The min-max range of the parent node p is E1 m in E2 min E1 max E2 max respectively E1 E2 min E2 max  E1 min E1 max  The min-max range of the parent node p is E1 m in E2 max E1 max E2 min respectively p E2  E1 E2 min E2 max  E1 min E1 max  p E2 The min-max range of the parent node p is E1 m in E2 max E1 max E2 min respectively Figure 2 The four general form ulae in the b ottom-up pro cess  E1 E low E up  E2 min E2 max  E1 min E1 max  The AR range of E1 and E2 are E low E2 max E1 max  E low E1 max E2 max  p E2  E1 E low E up  E2 min E2 max  E1 min E1 max  The AR range of E1 and E2 are E low E2 max E 1 max  E low E1 max E2 max  p E2 E1 E low E up  E2 min E2 max  E1 min E1 max  The AR range of E1 and E2 are E low E2 min E1 max  E2 min E1 max E low  p E2  E1 E low E up  E2 min E2 max  E1 min E1 max  The AR range of E1 and E2 are E low E2 min E 1 max  E2 m in E1 max E l ow  p E2 Figure 3 The AR calculations for the 025 condition 4 


The 014rst t w o prop erties are guaran teed b y the general form ulae The rest will b e useful in de\014ning the GMS of the mining pro cess 4.2 Generating Mining Sequence GMS is resp onsible to determine the sizes of the iterations during the mining pro cess In the Apriori algorithm the generation sequence is simply as 1  2  3   Ho w ev er this is not necessary in our case since w e can skip the generation of the itemset with certain size That is w e can shorten the generating sequence of mining In QMIC the depth of the IET determines the GMS This is b ecause QMIC generates the large itemsets b y tra v ersing from the leaf no des of IET to its ro ot F or the example in Figure 1c the sequence from GMS is f 1  2  4  6  10 g and it is only half of the length of the one in Apriori f 1  2  3   10 g  4.2.1 AR Pruning In the iteration k of Apriori the candidate itemset C k is generated from the large itemset L k 000 1  F or those itemsets in C k whic hha v e su\016cien t supp ort coun ts they will b e in L k  Then the iteration is completed and mo v e to iteration k 1 In the QMIC algorithm w e start from the leaf no des of IET and use the sequence from GMS to guide the candidate itemset generation steps A t eac h iteration once the candidate itemsets with C k are generated their itemsets VRs are v eri\014ed with AR's in eac h leaf no de If the VRs of the itemsets in C k do es not o v erlap with an y ARs it should b e pruned a w a y b ecause it fails to satisfy the inequalit y constrain t By 014nding the supp ort coun ts of the rest w e can determine L k  Unlik e Apriori the next iteration of QMIC is not necessary L k 1  It will be L k  l where l is the size of the siblings of the curren t no de In other w ords if b oth large itemsets asso ciated with c hild no des are a v ailable the next iteration is to generate the large itemsets to b e asso ciated with their paren t That is wh y the depth of the IET de\014nes the GMS 4.2.2 The QMIC Algorithm In this section w e sho w the complete QMIC algorithm belo w Note that the notations used are sho wn in Figure 5 The details of candidate itemset generation and its supp ort coun ting is omitted b ecause their functions are similar to those in Apriori 5 Exp erimen ts T o ev aluate the p erformance of QMIC w e compare it to a mo di\014ed Apriori algorithm whic h has 1 Giv en the database D and the completed IET scan the database for L 1 and VR 1  2 Itemset generation of C 2 from L 1 3 i:=2 4 Rep eat f 017 delete the LN i from the IET 017 for x  1 to sizeof C i  for y 1 to sizeof LN i   if  VR ix  AR iy  6  036  app end C ix in to C 0 i 017 supp ort coun ting of the C 0 i to obtain the large itemsets L i 017 adjust the AR of the paren tnode of LN i   for an y no de asso ciated with the L i 003 up date the min-max range of their paren tnode 003 up date AR of paren t since their minmax range has b een up dated 017 up date the IET and its parameter  for an y pair of leaf no des  LN i LN j  whic h are siblings 003 i min sum of the no de size of eac h pair 017 itemset generation of C i from the large itemsets whic h are represen ted b y LN i and LN j g while depth of the IET  1 Figure 4 The QMIC Algorithm 5 


Notation Meaning LN m leaf no des with no de size equal to m LN mn sp ecify n th leaf no de in LN m AR m acceptance range set of the leaf no des LN m AR mn acceptance range of the sp eci\014ed leaf no de LN mn VR i v alue range set of all the itemsets with size i VR ij v alue range of a sp ecify jth itemset in VR i L i large itemsets with size i C i candidate itemsets with size i C ij jth candidate itemset in C i C 0 i candidate itemsets whic h satisfy the user constrain t N k tree no de whic h represen t the large itemsets Figure 5 Notations for the QMIC Algorithm b een enhanced to handle the constrain t mining The exp erimen t w as conducted under the constrain t size of 5 10 and 15 And the result of the size 10 is sho wn in follo wing 014gures W e notice that it is not su\016cien t to determine the e\016ciency of the algorithms b y only coun ting the n um ber of steps in generating the candidate itemsets In order to assess the p erformance of the algorithms w e ha v e implemen ted the Apriori algorithm and the QMIC algorithm in C W e ran our preliminary exp erimen ts on a Solaris w orkstation with 32 Mb ytes of main memory  There are t w o sets of exp erimen ts The 014rst set of exp erimen ts 014xed the n um ber of items as 1000 and exp erimen ted with di\013eren t database sizes The corresp onding results is sho wn in Figure 6 The second set exp erimen ts is also based on a 014xed n um ber of items 1000 but with a more complicated user sp eci\014ed constrain t whic h in v olv ed more than 15 di\013eren t items The results are sho wn in Figure 7 The results sho w us that the n um ber of transactions has a large impact to the database This is reasonable since w eha v e to scan the whole database once for eac h size-k of the large itemset L k  The prop osed algorithm skipp ed the generation of man y unnecessary candidate itemsets So the more transactions in the database the b etter the algorithm can sa v e time As w e can see from the result the QMIC w orks b etter for larger database In other w ords it b ecomes ev en more e\013ectiv e when the size of the database is getting bigger 6 Conclusion In this pap er w e presen t ho w an inequalit y constrain t can b e in tegrated in to the mining of asso ciation rules The QMIC algorithm is prop osed It impro v es the asso ciation mining algorithm in t w o areas 1 reduce the size of the candidate itemsets in eac h iteration 2 reduce the n um ber of database scans These are done b y in tro ducing the concept of IET and GSM The preliminary  1 2 3 4 5 6 7 8 9 10 x 10 4 0 100 200 300 400 500 600  Number of Transactions Time \(seconds QMIC" ---"Apriori Figure 6 Disco v ery time for di\013eren t n um ber of transactions 1 2 3 4 5 6 7 8 9 10 x 10 4 0 100 200 300 400 500 600  Number of Transactions Time \(seconds QMIC" ---"Apriori Figure 7 Disco v ery time for di\013eren t n um ber of transactions exp erimen tal results sho w ed that the QMIC outp erformed the Apriori algorithm more than 100 when there are more than 100 thousand transactions in the database REFERENCES 1 R Agra w al R Srik an t F ast A lgorithm for Mining Asso ciation R ules in L ar ge Datab ases  In Pro c VLDB'94 San tiago Chile Septem b er 1994 2 R Agra w al R Srik an t Mining Se quential Patterns In Pro c In ternational Conference on Data Engineering 1995 pp 3-14 3 R Agra w al T Imielinski A Sw ami Mining Asso ciation R ules b etwe en Sets of Items in L ar ge Datab ases  In Pro c A CM-SIGMOD In ternational Conference on Managemen t of Data 1993 pp 207216 4 D W Cheung J Han VT Ng CY W ong Maintenanc e of Disc over e d Asso ciation R ules in L ar ge Datab ases A n Incr emental Up dating T e chnique  In Pro c In ternational Conference on Data Engineering New Orleans USA 1996 pp 106-114 5 M Klemettinen H Mannila P Ronk ainen H T oiv onen AI V erk amo Finding inter esting rules fr om lar ge sets of disc over e d asso ciation rules Pro c 3rd In ternational Conference on Information and 6 


Kno wledge Managemen t pp 401-408 Gaithersburg Maryland No v em b er 1994 6 M Houstma A Sw ami Set-Oriente d Mining of Asso ciation R ules  T ec hnical Rep ort RJ 8567 IBM Almaden Researc h Lab San Jose CA Octob er 1993 7 RJ Miller and Y Y ang Asso ciation R ules over Interval Data  In Pro c A CM-SIGMOD 1997 pp 452-461 8 R Ng L Lakshmanan J Han A P ang Explor atory Mining and Pruning Optimizations of Constr aine d Asso ciation R ules  In Pro c A CM-SIGMOD 1998 9 R Srik an t Q V u and R Agra w al Mining Asso ciation R ules with Item Constr aints  KDD'97 pp 67-73 10 R Srik an t and R Agra w al Mining Quantitative Asso ciation R ules in L ar ge R elational T ables  In Pro c A CM-SIGMOD 1996 7 


as the number of candidate tuples and the number of these tuples that survived each pruning phase figure on the right The thresholdis set to0.07 and we mine 8,335 5-tuples Al though the sizes initially grow significantly they fall fast at subsequent iterations This is consistent with the observa tions in 2         e  Figure 8 Statistics for SHORT-WAM 4.5 Sample associations At http://www.cs.toronto.edu/^.tsap~ex~inin~~ere is a full list of the associations. Table 5 shows a sample of as sociations from all three corpora that attracted our interest  deutsche telekom hong kong chevron fexaco department justice mci waddcom aol warner france telecom greenspan tar oats quaker chap ten indigo nestle putina oil opec books indigo leaf maple states united germany west arahia Saudi gas oil exxon juzy capriati hingis chaleau empress frontmac indigo reisman schwmz del monte sun-rype cirque du soleil bribery economics scandal fuel spills lanker, escapes hijack yemen SI hall mcguire baker james secretary, chancellor lawson nigel community ec eumpean arahia ope Saudi chief executive off cer child famering jesse ncaa seth tournament eurabond issuing priced falun gong self-immolation doughnuts kreme krispy laser lasik vision leaf maple schneider Mpls Table 5 Sample associations 5 Conclusions In this paper we introduced a new measure of interest ingness for mining word associations in text and we pro posed new algorithms for pruning and mining under this non-monotone measure We provided theoretical and em pirical analyses of the algorithms The experimental evalua tion demonstrates that our measure produces interesting as sociations and our algorithms perform well in practice We are currently investigating applications of our pruning tech niques to other non-monotone cases Furthermore we are interested in examining if the analysis in Section 4.1 can he applied IO other settings References I R Agrawal T Imielinski A N Swami Mining Associa tion Rules between Sets of Items in Large Databases SIGMOD 1993  R Agrawal R Srikant. Fast Algorithms for Mining Associa tion Rules in Large Databases VLDB 1994 31 H Ahonen 0 Hein0nen.M. Klemettinen A Inkeri Verkamo Applying Data Mining Techniques for Descriptive Phrase Ex traction in Digital Document Collections ADL 1998 41 R Bayardo R Agrawal, D. Gunopulos, Constraint-based rule mining in large, dense databases ICDE 1999 5 S Brin R Motwani I D Ullman S Tsur. Dynamic ltemset Counting and Implication Rules for Market Basket Data SIG MOD 1997 6 S Brin R Motwani C Silventein Beyond Market Bas kets Generalizing Association Rules to Correlations SIGMOD 1997 I71 E Cohen M Datar S Fujiwara A Gionis P Indyk R Motwani I Ullman, C Yang Finding Interesting Associations without Support Pruning ICDE 2ooO 181 D.R Cutting D Karger I Pedenen and J.W Tukey. Scat tedGather A cluster-based approach to browsing large docu ment collections 15th ACM SIGIR, 1992 91 W DuMouchel and D Pregibon, Empirical Bayes Screening for Multi-Item Associations KDD ZOO1 IO R Feldman 1 Dagan and W Klosgen. Efficient algorithms for mining and manipulating associations in texts 13rh Euro pean meering on Cybernaricsand Systems Research 1996 Ill R Feldman W Klosgen and A Zilberstein Document ex plorer Discovering knowledge in document collections IOrh lnurnarional Symposium on Methodologies for Inrelligenr Sys rems Springer-Verlag LNCS 1325,1997 1121 R Feldman I Dagan H Hirsh Mining text using keyword distributions Journal of Intelligent InJormation Systems IO 1998 13 B.Lent R AgrawalandR.Srikant Discoveringtrends in text databases KDD, 1997 I41 D.D Lewis and K Sparck Jones Natural language pro cessing for information retrieval Communicorions of the ACM 39\(1 1996.92-101 I51 A I Lolka The frequency distribution of scientific produc tivity J of the Washingron Acad of Sci 16:317, 1926 I161 H Mannila and H Toivonen Discovering generalized episodes using minimal occurrences KDD 1996 171 C Manning and H Schulze Foundalions oJSratistical Nar ural Language Processing 1999 The MIT Press, Cambridge MA I 81 E. Riloff Little words can make a big difference for text clas sification 18th ACM SIGIR, 1995 1191 E Smadja. Retrieving collocationsfrom text Xtract Compu rariomILiflguisrics 19\(1 1993 143-177 I201 G Webb Efficient Search for association rules KDD 2000 21 1 Witten A.Moffat andT Bell Managing Gigabytes Mor 1221 G K Zipf Human behavior and the principle of least effort gan Kaufman, 1999 New York Hafner 1949 409 


Figure 3 Alternatives to this paper's ZIT2 timing not mnsidered here a Measurements are taken at random times b A more sophisticated periodic scheme with inter-scan intervals TI T2 and T3 Figure 1  Illustration of uniform and nonuniform sampling timing schemes l F  I Figure 2 Possible tig of measurements from two F igUre 4 Overlay of true and false detections from two con secutive scans Notice that the false measurements are unlikely to coincide However given that the inter-scan time is not to great the true measure ments are close chronous but equal-period sensors At fusion cen ter the effect is the same as in Figure 1 4-1605 


Figure 5 Notional uncertainties with uniform and nonuni form sampling In the former case the uncer tainties \(illustrated by covariance ellipses are rel atively constant in size In the latter nonuni form case the ellipses increase significantly in size between pairs of samples and allow more false alarms to enter Figure 6 Representation of the one-step tracking as per formed by the PDAF Figure 7 Procedure of track split filter a Uniform sampling scheme  Nom sampling shew 0.W OW 0.W 0.WB 0.01 0.012 0.014 0.016 0.018 Fabe Alarm Density 2 Figure 8 Uniform and nonuniform sampling schemes in PDAF with Tl  O.ls T2  1.9s and T  1s PD  0.9 4  10 0  1 4-1606 


OM OM 006 OD8 01 012 014 016 018 02 022 False alarm demity Figure 9 Percentage of tracks lost within 200 seconds using three-scan assignment with PD  0.9 TI  O.ls Figure 11 T2  1.9s and T  Is ij  20 and 0  0.1 24 1 22  20  E fls 0  8l 16 0 n 14  12  0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 T1/12 PD Average track life of three-scan assignment with PD varying TI  0-ls T2  1.9s T  Is X  0.02 ij LO and   0.1 mareuvenng index Figure 12 Percentage of lost tracks of 4-D assipment in 200 seconds with maneuvering index varying X  0.01 Ti  0.1 T2  1.9s and T  IS PD  0.98 Figure 10 Percentage of lost tracks of 4-D assignment in 200 SeoDllCls with TI and T2 varying PD  0.98 X  0.02 q 20 and 0  0.1 4-1607 


Figure 13 Average gate size for Kalman filter Figure is relative as compared to nq and curves are parametrized by ij/r with unit-time between each pair of samples 1.2 Iy I 1.1 0.5 I A CRLB for he unifm samiina I  0.4 0.35 d 3 03 i7 3 0.25 0 0.M 0.04 0.06 008 0.1 0.12 0.14 0.16 0.18 0.2 False A!am DemW V I    Figure 14 CramerRao Lower Boundfor Mean Square Error of uniform and nonuniform sampling schemes with Ti  O.ls T2  1.9s T  IS PD  0.9 ij  5 and U  0.25 1 unifon sampling r-ls ked i non-uniform sampling loge inlewi I ti non-uniform sampling shod interva I 0.9 0.8 I Figure 15 MSE comparison of three-scan assignment with Ti and T2 varying I'D  1 X  0.01 ij  20 and U  0.1 4-1608 


Plenary Panel Session 30 XML Databases   Moderator: Michael Carey, IBM Almaden Research Center USA Panelists Adam Bosworth, Microsoft Corporation USA David De Witt University of Wisconsin-Madison, USA Alon Levy University of Washington USA Bruce Lindsay IBM Almaden Research Center USA Jennifer Widom Stanford University USA Demo Session 1 Web Query Optimizer  661 V Zadorozhny L Bright L Raschid T Urhan and M Vidal ReQueSS: Relational Querying of Semi-structured Data  664 R Sunderraman The IDEAL Approach to Internet-Based Negotiation for E-Business  666 J Hammer C Huang Y Huang C Pluempitiwiriyawej M Lee H Li L Wang Y Liu and S Su READY A High Performance Event Notification Service  668 R Gruber B Krishnamurthy, and E Panagos A Multimedia Information Server with Mixed Workload Scheduling  670 G Nerjes DISIMA An Object-Oriented Approach to Developing an Image Database System  672 V Oria T Ozsu P Iglinski B Xu and L Cheng Demo Session 2 The Collaboration Management Infrastructure  677 H Schuster D Baker A Cichocki D Georgakopoulos and M Rusinkiewicz Assisting the Integration of Taxonomic Data The LITCHI Toolkit  679 I Sutherland J Robinson S Brandt A Jones S Embury W Gray R White and F Bisby TheaterLoc: Using Information Integration Technology to Rapidly Build Virtual Applications  681 G. Barish Y.4 Chen D Dipasquo, C Knoblock S Minton I Muslea and C Shahabi Lineage Tracing in a Data Warehousing System  683 Y Cui and J Widom xiii 


The Mentor-Lite Prototype A Light-Weight Workflow Management System  685 J Weissenfels M Gillmann 0 Roth, G Shegalov and W Wonner Location Prediction and Queries for Tracking Moving Objects  687 0 Wolfson B Xu and S Chamberlain Semiorder Database for Complex Activity Recognition in Multi-Sensory Environments  689 S Bhonsle A Gupta S Santini and R Jain Tutorial 1 Web Information Retrieval  693 M Henzinger Tutorial 2 Mobile and Wireless Database Access for Pervasive Computing  694 P Chrysanthis and E Pitoura Tutorial 3 Data Mining with Decision Trees  696 J Gehrke Tutorial 4 Directories Managing Data for Networked Applications  697 D Srivastava Tutorial 5 Indexing High-Dimensional Spaces Database Support for Next Decade\222s Applications  698 S Berchtold and D Keim xiv 


 T5.I2.D100K T10.I4.D100K T15.I4.D100K T10.I6.D400K T10.I6.D800K T10.I6.D1600K Optimizations across Databases 5 0 5 10 15 20 25 30 35 40 45 Improvement COMP TREE COMP-TREE 1 2 4 8 1 2 4 8 1 2 4 8 2 4 8 2 4 8 1 2 4 8 Processors Databases Figure 5 Effect of Computation and Hash Tree Balancing good as the COMP optimization The reason that the hash tree balancing is not suf\336cient to offset inherent load imbalance in the candidate generation in this case The most effective approach is to apply both optimizations at the same time COMP-TREE The combined effect is suf\336cient to push the improvements in the 40 range in the multiple-processor case On 1 processor only hash tree balancing is bene\336cial since computation balancing only adds extra cost 5.4 Short-circuited Subset Checking Figure 6 shows the improvement due to the short-circuited subset checking optimization with respect to the unoptimized version The unoptimized version is the Apriori algorithm due to Agrawal et al 5 The results are presented for dif ferent number of processors across dif ferent databases The results indicate that while there is some improvement for databases with small transaction sizes the optimization is most effective when the transaction size is large In this case we get improvements of around 25 r the unoptimized version To gain further insight into this optimization consider 336gure 7 It shows the percentage improvement obtained per iteration on applying this optimization on the T20.I6.D100K database It shows results only for the uni-processor case r similar results were obtained on more processors We observe that as the iteration k increases there is more opportunity for shortcircuiting the subset checking and we get increasing bene\336ts of up to 60 The improvements start to fall off t the high end where the number of candidates becomes small resulting in a small hash tree and less opportunity for short-circuiting It becomes clear that is an extremely effective 15 Proceedings of the 1996 ACM/IEEE Conference on Supercomputing \(SC\22296 0-89791-854-1/96 $ 10.00 ACM 


 T5.I2.D100K T10.I6.D800K T15.I4.D100K T20.I6.D100K procs across Databases 0 5 10 15 20 25 Improvement 1 2 4 8 Figure 6 Effect of Short-circuited Subset Checking 23456789101112 Iterations 0 10 20 30 40 50 60 improvement T20.I6.D100K Figure 7  Improvement per Iteration  proc   16 Proceedings of the 1996 ACM/IEEE Conference on Supercomputing \(SC\22296 0-89791-854-1/96 $ 10.00 ACM 


optimization for larger transaction sizes and in cases where there are large number of candidate k itemsets 6 Conclusions In this paper e presented a parallel implementation of the Apriori algorithm on the SGI Power Challenge shared memory multi-processor We also discussed a set of optimizations which include optimized join and pruning computation balancing for candidate generation hash tree balancing and short-circuited subset checking We then presented experimental results on each of these Improvements of more than 40 were obtained for the computation and hash tree balancing The short-circuiting optimization was found to be extremely effective for databases with large transaction sizes Finally we reported the parallel performance of the algorithm While we d good speed-up we observed a need for parallel I/O techniques for further performance gains References  R Agra wal T  Imielinski and A Swami Database mining A performance perspecti v e  I n IEEE Trans on Knowledge and Data Engg  pages 5\(6 1993  R Agra wal T  Imielinski and A Swami Mining association rules between sets of items in lar ge databases In Proc M SIGMOD Intl Conf Management of Data  May 1993  R Agra wal H Mannila R Srikant H T o i v onen and A I V erkamo F ast disco v ery of association rules In U F et al editor Advances in Knowledge Discovery and Data Mining  MIT Press 1996  R Agra wal and J Shafer  P arallel mining of association rules design implementation and e xperience Technical Report RJ10004 IBM Almaden Research Center San Jose CA 95120 Jan 1996  R Agra wal and R Srikant F ast algorithms for mining association rules In Proc 20th VLDB Conf  Sept 1994  M Cierniak W  Li and M J Zaki Loop scheduling for heterogeneity  I n 4th IEEE Intl Symposium on High-Performance Distributed Computing also as URCS-TR 540 CS Dept Univ f Rochester  Aug 1995  M Holsheimer  M  K ersten H Mannila and H T o i v onen A perspecti v e on databases and data mining In 1st Intl Conf Knowledge Discovery and Data Mining  Aug 1995  M Houtsma and A Swami Set-oriented mining of association rules In RJ 9567  IBM Almaden Oct 1993  H Mannila H T o i v onen and I V erkamo Ef 336cient algorithms for disco v ering association rules In AAAI Wkshp Knowledge Discovery in Databases  July 1994  J S P ark M Chen and P  S Y u  A n e f fecti v e hash based algorithm for mining association rules In Proc M SIGMOD Intl Conf Management of Data  May 1995 17 Proceedings of the 1996 ACM/IEEE Conference on Supercomputing \(SC\22296 0-89791-854-1/96 $ 10.00 ACM 


 J S P ark M Chen and P  S Y u  E f 336cient parallel data mining for association rules T echnical Report RC20156 IBM T J Watson Research Center Aug 1995  G Piatetsk y-Shapiro Disco v ery  presentation and analysis of strong rules In G P S et al editor  KDD  AAAI Press 1991  A Sa v asere E Omiecinski and S Na v athe An ef 336cient algorithm for mining association rules in large databases In Proc 21st VLDB Conf  1995  M J Zaki M Ogihara S P arthasarathy  and W  Li P arallel data mining for association rules on shared-memory multi-processors Technical Report 618 Department of Computer Science University of Rochester 618 1996 18 Proceedings of the 1996 ACM/IEEE Conference on Supercomputing \(SC\22296 0-89791-854-1/96 $ 10.00 ACM 


