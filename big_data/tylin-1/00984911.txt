Fast Data Association Algorithm for Passive Multisensors Zi-Liang Feng Zhi-Sheng You Ming-Hui Wang Institute of Image and Graphics, Sichuan University, Chengdu 6 10064 P.R.China Abstract A data association algorithm for multiple passive sensors is presented in this paper The algorithm is based on the intensity of space intersection made by measurements Dividing the set of all possible targets into several subset starting with 
the subset which has the best probability under the restraint of data association rule the real target can be found quickly The numerical simulation with perfect detection probability and zero false alarm has been made the result appears the algorithm has excellent performance on computation time Keyword passive multisensors algorithm data association, sightline, intensity of intersection I Introduction In the multiple passive sensors data association problem several bearings-only sensors observe one common surveillance area 
With each detection of a sensor, the associated measurement is the sightline from the sensor to the target The target position can be obtained by the bearing measurements from at least two sensors and should be the intersection of the sightlines 1,3 However the set of intersections include not only the targets but also a large number of ghosts which can't be delimited very well As 
the increasing of the sensors and targets the number of sightlines and intersections will increase exponentially The measurement-target association problem can be shown to be NP hard[2 even under the assumption of zero false alarm and perfect detection probabilities This paper concerns a fast algorithm based on the intensity of space intersection for multiple passive sensors The intensity of a space position indicates the probability of which the position is a real target The 
algorithm showed excellent performance in the case of 3 sensors[3 The case of inultisensor up to 20 will be argued in the following 2 Problem Formulation For simplicity of presentation we consider the static problem of associating measurements from multiple passive sensors and suppose the surveillance area is a planar region in front of all sensors and that the field of view 
of each sensor is 2n There are m passive sensors numbered as s  1,2,3  rn  For the sensor s there are n measurements at a given time they are numbered as i  0,1,2,...n  where the value 0 means missed detection and is added to simplify the notation for incomplete measurement-target 
associations caused by missed detections The number of measurements for each sensor may be unequal In fact a measurement is the sightline from the sensor to the possible target which results in the detection A possible target position is the intersection of the sightlines froin all rn passive sensors we denote it as Z  m and note it rn tuple 
of measurements For example when there are 4 passive sensors position Z indicates that the position is the intersection of the measurement sightline 3 from sensor 1 the Supported by National Natural Science Foundation of China No.69732010 0-7803-7000-7/0 1 lO.OO 0200 1 IEEE 1136 


measurement 4 from sensor 3 and the measurement 2 from sensor 4 sensor 2 is a missed detection. The set of candidate position is the collection of all the possible target position The likelihood function of the m tuple measurement Zili being the set of measurements that originated from the same target at location xj,yj is the mixed probability density function I s  1 where PD is the detection probability of sensor s the probability function f z Ix j y   N 6   8 indicate the direction of position xj,yj and the sensor s u\(i is a delta function defined by I i5#0 0 otherwise  The target position can be u\(i  solved by maximizing the generalized likelihood ratio 3 3 The algorithm based on the intensity of space ititersection 3.1 Conception of the intensity of space intersection Although the association problem can be solved by means of maximization likelihood method it is still difficult because the set of candidates is very large and the likelihood function can't indicate if the position is a real target Even if the problem is solved we still can't acquire the perfect result For data association quickly we need to separate those intersections which has quite different probability of being a real target from the candidate set 2 We suppose that each sensor measurement belongs to a target or a false alarm each target belongs to a m  tuple measurement only and that a real target can be detected by most of the sensors Firstly in the set of candidates if a space intersection has been detected by more sensors than other intersections have been, the probability of it being a real target is greater than that of other intersections We define the number of sensors which detected the intersection possible target as the intensity of the  The intensity of the intersection is equal to the number of sightlines across the intersection it's range of value is from 0 to m  Based on the conception of the intensity of intersection collecting the intersections that have the same intensity in one subset we can get a partition for the candidate set Z  z=z"'uz U...UZ'UZ uzo 4 where 2 is the set of all the intersection whose intensity is m and so on An intersection in the set Zo is a missed detection for all the sensors in other words it is not exist we can ignore all of them in the set 2 An intersection in the set Z  is detected by only one sensor we still ignore it because a real target should be detected by most of the sensors The set 2 in the partition is very important because it is the starting point to solve the problem of association of the measurement and the target Suggesting there are 3 sensors and the probability of detection is 0.95 for all the sensors then 85.7 of targets will be detected by all the sensors, it means that 85.7 of targets is in the set Z3 Although the scale of the set 2 increases very fast as the increasing of the number of sensors and targets those sets with strong intensity such as the set Z  Z  increase very slowly We can give more weight to those sets in the process of association Secondly the rule of data association makes some restraints to the measurement and the target Mathematically it is a maximization problem by those 1137 


restraints to the set 2 Za   z2 for the set Z   indicates that the 1 if Zili  im E Z 0 otherwize where al:2,,.jn  maximize function is towards Z   All of those restraint 1 0 otherwise if TI 2 E Z p   I  lnr rules mean each sensor measurement belongs to a target or a false alarm each measurement belongs to one target only Finally using the rule listed above we can decrease the scale of each subset beginning with the subset Z step by step The possible target set Z  Zm  2 will be changed into 2  z  z2 At last the real target is the union of them 3.2 Algorithm Outline and Analysis We present a brief outline of the algorithm in the following Step I Initializing Each sensor is numbered as s  1,2,3  m  Each measurement of a sensor at a given time is numbered asi  0,1,2  TZ Step 2 Obtaining the set ofpossible targets Calculating the sightlines from each sensor the intersection Zjlj2 can be obtained respectively the set of candidates is the collection of all of these intersections Z  ZIlj   i,v  0,1,2  n  s  L2  m  Step 3 Partitioning of the set Z Based on the intensity of space intersection and collecting all the intersection that have the same intensity into one subset we can obtain a partition of set Z z  z UZ U...Uz2 Step 4 Checking the set Z  reducing the scale oftheset Z Based on the restrain rule and the probability of each intersection in the set Z  the intensity of other intersections correlated will be degraded the scale of the set Z and Z will be reduced respectively Step 5 Checking the set Z till Z2 reducing the scale of the set Z According the same rule above the scale of the candidate set Z will be reduced continually Step 6 Final Results The final results are the remains in all the subsets  Z To decrease the complexity oQpe algorithm and to speed up the process of the algorithm a preprocessing can be used in advance. In a system whose sensors have perfect detect probability a real target will be detected by more than m/2 sensors If a intersection whose intensity is less than 50 in the process of association it means that the intersection may be a false alarm and can be ignored The threshold can be changed as the case may be On the other hand it is important to give a valid range where a real target will be in at the _   1138 


beginning of the algorithm We need only to think about the intersection whose position is in fiont of all sensors because the suggested surveillance area is from 0 to 27r for all sensors If the position of intersection is too far the intersection will be ignored It is reasonable in the dynamic case for example in the case of a real target far from all sensors, we can ignore it until it is in the surveillance area 24444 25432 25555 When we search for target in all subsets the starting point is important because each intersection is dependent on one another We should give a scan in the subset beforehand to find the intersection whose probability of being a real target is larger, and let it be the starting point In general the intersection that is by the side of the surveillance area is a better starting point In the process of data association if we confirm that a intersection is a real target the intensity of the intersection on the line across the real target will be decreased the candidate set will be decreased corresponsively At last, the remains in all subsets are the real targets 24444 24444 24444 24444 25432 25430 25400 25555 25555 25555 25555 4 Nunierical Simulation 4 I Illustration for the scenario with 4 sensors We illustrate the algorithm via a simple scenario with 4 sensors and 5 targets see fig.1 and suggest that all sensors have perfect detect probability and zero false alarm We number the sensors as s  1  4 by order and the sightline from each sensor as 1  5 clockwise In the scenario we have ignored all the intersections whose intensity is less than 2 There are 73 candidates in set Z where there are 9 intersections whose intensity is 4 6 intersections whose intensity is 3 and 58 intersections whose intensity is 2 To simplify the presentation we just illustrate the set Z4  By scanning all the intersections in the set Z4 from the left side we find that the intersection Z and Z have the same probability and their probability is greater than other intersections We use the intersection Z as the starting point. For a line across 2   which belongs to the sensor 2 there are only one intersection whose intensity is 4 it means the probability which Z is a false alarm and at the same time it can be detected by the sensor 2 is 0 we can confirm that the intersection Z  is a real target then the related intersection will be degraded in the set Z such as in the set Z4  the measurement Z is degraded to Z  the point Z is degraded to Z4320  it is illustrated in the row 2 of table 1 s1 s2 s3 s4 Figure 1 A scenario for 4 sensors and 5 targets Table 1 Illustration of process 1139 


In the remains of Z4 we use the intersection Z2222 Z  Z as starting point respectively the data association result is illustrated in rows 3,4 and 5 of table 1 At last there are only 5 intersections in the set Z4 and no intersection in the set Z3 and z2 Th final association result is that the real targets are Z     22'22 7 z 7 z4444 and z5555  4.2 Numerical simulation in the case of multisensors and multitargets The numerical simulation test has been made on a PC\(Ce1eron 300A 64M RAM with the platform of Windows 98 We suppose that all sensors have perfect detect probability and zero false alarm and the surveillance area is in front of all sensors The number of sensors is up to 20 and the number of target is up to 50 the computation time from calculating the coordinate of all intersections to the end of algorithm is listed in table 2 In the process of computing, most time is spent in the calculation of the coordinate of all intersection, less time is spent in the calculation of data association Compared with other algorithm the algorithm has excellent performance in the case of up to 20 sensors and up to 50 targets Takle 2 Computation time of algorithm in seconds Sensor 15 20 I Number of targets I 0.24 10.48 1.1 I 2.7 I 5.6 50 0.45  1.6 3.7 11.7 69.9    282 5 Conclusion This paper concerns a fast data algorithm the core of the algorithm is the partition of the candidate set based on the intensity of the space intersection If the intensity of a intersection is more strong than those of others it means that the probability of the space intersection being a real target is larger than that of others According to the data association rule and the intensity of the intersection we can get the result of the data association quickly The numerical simulation has been made in the case of up to 20 sensors and 50 target it appears that the algorithm may be have more potential in the real time system References  11 K.R.Pattipati S.Deb Y.Bar-Shalom et.al A new relaxation algorithm and passive sensor data association IEEE Trans. on Auto Control 1992,37\(2 198-213 2 M.R.Garey and D.S.Johnson Computers and intractability a guide to the theory of NP-completeness San Francisco, CA: Freeman 1979 3 M.H Wang 2.S You R.C Zhao et.al A fast data association algorithm of passive sensor tracking Acta Electronica Sinica Tien Tzu Hsueh Pao 2000 28\(12 45-47 1140 


we used simple homogeneous fuzzy partitions with no membership tuning our fuzzy rule-based system with a 100 classification rate in Fig 7 outperformed the reported result in 9 Castillo et al lo reported a 96.76 average classification rate on test data 30 of the wine data where the average number of fuzzy rules was 5.2 over five independent trials Since their SLAVE algorithm used a union i.e disjunction of multiple linguistic values as a single antecedent fuzzy set fuzzy rules in IO are more complicated than our fuzzy rules in Fig 6 and Fig 7 That is more fuzzy rules with higher complexity were obtained in lo than our fuzzy rule-based systems in Fig 6 and Fig 7 From computer simulations using the LV1 procedure we obtained a 96.1 average classification rate on test data by three fuzzy rules of the average length 2.33 and a 97.2 average classification rate on test data by three fuzzy rules of the average length 2.67 I I XI x7 47 lconseauent I Fig 6 Three fuzzy rules with a 94.9 classification rate Fig 7 Three fuzzy rules with a 100 classification rate V CONCLUSIONS In this paper we examined four heuristic definitions of rule weights in fuzzy rule-based classification systems First we proposed two heuristic definitions using the confidence of fuzzy association rules Next we described the characteristic feature of each definition Through computer simulations on an artificial test problem we illustrated the drawback of each of the two existing definitions Then we compared the four definitions with one another through computer simulations on the wine data We also examined the case with no rule weights by assigning the same rule weight to all fuzzy rules Simulation results showed that the use of rule weights improved the classification performance of fuzzy rule-based systems Among the four definitions the best results were obtained from a proposed one where the rule weight of each fuzzy rule was defined by the difference between the largest and the second largest confidence Finally we demonstrated that very simple fuzzy des with rule weights have high classification ability as well as high interpretability We used a genetic algorithm-based rule selection method for finding non-dominated rule sets with respect to three objectives to maximize the classification accuracy to minimize the number of fuzzy rules and to minimize the total rule length Since the number of fuzzy rules and the total rule length were minimized very simple rule sets were obtained by a three objective genetic algorithm While those rule sets were very simple, they had high classification ability This is because an appropriate rule weight was specified for each fuzzy rule by the proposed definition Reference I H Ishibuchi and T Nakashima 223Effect of rule weights in fuzzy rule-based classification systems,\224 IEEE Trans on Fuzzy Systems vol 9 no 4 pp 506-5 15 August 2001 2 0 Cordon M J del Jesus and F Herrera 223A proposal on reasoning methods in fuzzy rule-based classification systems,\224 International Journal of Approximate Reasoning vol 20 pp 21-45 January 1999 3 H Ishibuchi K Nozaki and H Tanaka 223Distributed representation of fuzzy rules and its application to pattem classification,\224 Fuzzy Sets and Systems vol 52 no 1 pp 2 1-32 November 1992 4 H Ishibuchi, T Yamamoto and T Nakashima 223Fuzzy data mining Effect of fuzzy discretization,\224 Proc of 1st IEEE International Conference on Data Mining pp 000400 November 2001 5 R Agrawal and R Srikant 223Fast algorithms for mining association rules,\224 Proc of 20th International Conference on Very Large Data Bases pp 487-499 September 1994 Expanded version is available as IBM Research Report RJ9839 June 1994 6 H Ishibuchi T Nakashima and T Morisawa 223Voting in fuzzy rule-based systems for pattem classification problems,\224 Fuzzy Sets andsystem vol 103 no 2 pp 223-238 April 1999 7 S M Weiss and C A Kulikowski Computer Systems That Learn Morgan Kaufmann Publishers San Mateo 1991 8 H Ishibuchi T Nakashima and T Murata 223Three-objective genetics-based machine learning for linguistic rule extraction,\224 Information Sciences vol 136 no 1-4 pp 109-133 August 2001 9 M Setnes and H Roubos 223GA-based modeling and classification Complexity and performance,\224 IEEE Trans on Fuzzy Systems vol 8 no 5 pp 509-522, 2000 IO L Castillo A Gonzalez and P Perez 223Including a simplicity criterion in the selection of the best rule in a genetic hzzy learning algorithm,\224 Fuzzy Sets and Systems vol 120 vol 2 pp 309-32 1,200 1 0-7803-7280-8/02/$10.00 a2002 IEEE 913 


    f      I i    0 0 m m 100 10 am 1m 1110 lam m am m n am a0 la0 IBO Eo Im 1100 am a minl  10 b mind  20 Figure 6 Performance on Connect-4 11 Figure 7 shows the running time of the three algorithms on the mushroom and pumsb datasets with K set to 500 and mind ranges from 0 to 25 For the mushroom dataset when minl is less than 6 all three algorithm have simi lar low running time TFP keeps its low running time for the whole range of mind and starts to outperform CHARM when minl is as low as 6 and starts to outperform CLOSET when minl is equal to 8 Pumsh has very similar results as connect-4 and mushroom datasets i 1 m j i s 21 di I 2 U  0 I IO I3 1 1 I IO I I 1l ndWRI YUdWR a Mushrwm b Pumsb Figure 7 Performance on Mushroom and Pumsb Sparse Dataset Experiments show that TFP can effi ciently mine sparse datasets without minsupport It has comparable performance with CHARM and CLOSET for low mid and outperforms both on higher mind Figure 8a shows the running times of TFP CHARM and CLOSET on T1014D100K with K fixed at 100 and minl ranges from 1 to 10 Again it demonstrates TFP's strength in dealing with long minl At minl  8 the performance of CHARM and CLOSET starts deteriorating while TFP re tains its good performance Figure 8b shows the perfor mance on the same dataset but with minl fixed at 8 and varying K from 200 to 2000 The curves show that when K is above 400 the running times of CHARM and CLOSET are around 3 times slower than TFP The experiments on the gazelle dataset are shown in Fig ure 9 For smaller K TFP outperforms both CHARM and CLOSET for minl greater than or equal to 5 For K  500 TFP continues to outperform CLOSET for mind greater than or equal to 5 and has similar performance as CHARM Rom this performance study we conclude that TFP has good overall performance for both dense and sparse datasets Its running time is nearly constant over a wide range of K and mind values for dense data Unlike CHARM and CLOSETwhose performance deteriorates as mind increases b L=8 Figure 8 Performance on T1014D100K a K  inn b K  500 Figure 9 Performance on Gazelle TFP's running time stays low The reason is inherent from the mining strategy of TFP CHARM and CLOSET In mast time the support for long patterns is lower than that of short patterns Thus even with the optimal support given both CLOSET and CHARM are unable to prune short fre quent patterns early thus causing much time spent on min ing useless patterns On the other hand TFP is able to use the minl length restriction to cut many short frequent patterns early thus improves its running time instantly In addition TFP does not include any nodes that reside above minl level to participate in the mining process As mind increases more nodes reside above the minie level of the tree means that less conditional FP-trees need to he built thus keeps the running time low Besides the good performance over long minl values the performance of TFP over short minl values even when mind  1 i.e no length constraint is still comparable to that of CLOSET and CHARM In such cases the run ning times between the three do not differ much and both CLOSET and CHARM were run with the optimal support threshold while TFP was not given any support threshold Scalability Test Our performance tests showed that the running time of TFP increases linearly with increased dataset size 5 DISCUSSION In this section we discuss the related work how to gener ate association rules from the mined topk frequent patterns and how to push constraints into the mining process 5.1 Related work Recent studies have shown that closed patterns are more desirable 5 and efficient methods for mining closed pat 217 


terns such as CLOSET 7 and CHARM B have been de veloped However these methods all require a user-specified support threshold Our algorithm does not need the user to provide any minimum support and in most cases runs fater than two efficient algorithms CHARM and CLOSET which in turn outperform Apriori substantially 7 81 Fu et al Z studied mining N most interesting item sets for every length 1 which is different from our work in several aspects 1 they mine all the patterns instead of only the closed ones  2 they do not have minimum length constraintssince it mines patterns at all the lengths some heuristics developed here cannot be applied and 3 their philosophy and methodology of FP-tree modification are also different from ours To the best of our knowledge this is the first study on mining topk frequent closed patterns with length constraint therefore we only compare our method with the two best known and well-performed closed pattern mining algorithms 5.2 Generation of association rules Although topk frequent itemsets could he all that a user wants in some mining tasks in some other cases sjhe wants to mine strong association rules from the mined topk fre quent itemsets We examine how to do this efficiently Items in the short transactions, though not contributing to the support of a topk itemset of length no less than mind may contribute to the support of the items in it Thus they need to be included in the computation which has minimal influence on the performance To derive cor rect confidence we have the following observations 1 The support of every Liternset is derived at the start of min ing 2 The set of topk closed itemsets may contain the items forming subsetjsuperset relationships and the rules involving such itemsets can be automatically derived 3 For rules in other forms, one needs to use the derived topk itemsets as probes and the known minsupport as threshold and perform probe constrained mining to find the support only related to those itemsets 4 As an alternative to the above one can set mind 2 which will derive the patterns readily for all the combinations of association rules 5.3 Pushing constraints into TFP mining Constraint-based mining 14.61 is essential to topk mining since users may always want to put constraints on the data and rules to be mined We examine how different kinds of constraints can be pushed into the topk frequent closed pattern mining deep into the TFP-mining process he succint constraints should be pushed deep to select only those itemsets hefore mining starts and the anti-monotonic Constraint should be pushed into the iterative TFP-mining process in a similar way as FP-growth Second for monotone constraints the rule will also be similar to that in traditional frequent pattern mining is if an itemset mined so far e.g okd satisfies a constraint sum 2 loo adding more items such as e still satisfies it and thus the constraints checking can be avoided in further expansion Third for convertible constraints one can arrange items in an appropriate order so that the constraint can be trans formed into an anti-monotone one and the anti-monotone constraint pushing can he applied First succinct and anti-monotone constraints can be pushed Interested readers can easily prove such properties for top k frequent closed pattern mining 6 CONCLUSIONS We have studied a practically interesting problem mining top-k frequent closed patterns of length no less than mind and proposed an efficient algorithm TFP with several opti mizations 1 using closednodexcount and descendantsum to raise mindupport before tree mining 2 exploring the topdown and bottom-up combined FP-tree mining to first mine the most promising parts of the tree in order to raise rninsupport and prune the unpromising tree branches and 3 using a special indexing structure and a novel closed pattern verification scheme to perform efficient closed pat tern verification Our experiments and performance study show that TFP has high performance In most cases it out performs two efficient frequent closed pattern mining algo rithms CLOSET and CHARM even when they are running with the best tuned minsuppwt Furthermore the method can be extended to generate association rules and to incor porate user-specified constraints Based on this study we conclude that mining topk fre quent closed patterns without minsupport should be more preferable than the traditional minsuppwt-based mining for frequent pattern nuning More detailed study along this direction is needed including further improvement of the performance and flexibility at mining topk frequent closed patterns as well as mining topk frequent closed sequential patterns or structured patterns Acknowledgements We are grateful to Dr Mohammed Zaki for providing the code and data conversion package of CHARM and promptly answering many questions 7 REFERENCES I R Agrawal and R Srikant Fast algorithm for mining 2 A W.-C. Fu R W.-W Kwong and J Tang Mining 3 J Han J Pei and Y Yin Mining frequent patterns 4 R Ng L V S Lakshmanan J Han and A Pang association rules VLDB'94 n-most interesting itemsets ISMIS'W without candidate generation SIGMOD'OO Exploratory mining and pruning optimizations of constrained esociations rules SIGMOD'SR Discovering frequent closed itemsets for association rules ICDT'99 161 J Pei J Ha and L V S Lakshmanan Mining frequent itemsets with convertible constraints ICDE'O1 7 J Pei J Han and R Mao CLOSET An efficient algorithm for mining frequent closed itemsets DMKD'OO 8 M J Zaki and C J Hsiao CHARM An efficient algorithm for closed itemset mining SDM'O2 5 N Pasquier Y Bastide R Taouil and L Lakhal 218 


I Plenary Panel Session J Future Directions in Database Research  456 Chair Surajit Chaudhuri Microsoft Corporation Panelists Hector Garcia-Molina Stanford University Hank Korth, Bell Laboratories Guy Lohman IBM Almaden Research Center David Lomet Microsoft Research David Maier Oregon Graduate Institute I Session 14 Query Processing in Spatial Databases I Chair Sharma Chakravarthy University of Florida Processing Incremental Multidimensional Range Queries in a Direct Manipulation Visual Query Environment  458 High Dimensional Similarity Joins Algorithms and Performance Evaluation  466 S Hibino and E Rundensteiner N Koudas and K.C Sevcik Y Theodoridis E Stefanakis and T Sellis Cost Models for Join Queries in Spatial Databases  476 Mining Association Rules Anti-Skew Algorithms  486 J.-L Lin and M.H Dunham Mining for Strong Negative Associations in a Large Database of Customer Transactions  494 A Savasere E Omiecinski and S Navathe Mining Optimized Association Rules with Categorical and Numeric Attributes  503 R Rastogi and K Shim Chair: Anoop Singhal AT&T Laboratories S Venkataraman J.F Naughton and M Livny Remote Load-Sensitive Caching for Multi-Server Database Systems  514 DB-MAN A Distributed Database System Based on Database Migration in ATM Networks  522 T Hara K Harumoto M Tsukamoto and S Nishio S Banerjee and P.K Chrysanthis Network Latency Optimizations in Distributed Database Systems  532 I Session 17 Visualization of Multimedia Data I Chair Tiziana Catarci, Universita di Roma 223La Sapienza\224 W Chang D Murthy A Zhang and T.F Syeda-Mahmood Global Integration of Visual Databases  542 X 


The Alps at Your Fingertips Virtual Reality and Geoinformation Systeps  550 R Pajarola l Ohler P Stucki K Szabo and P Widmayer C Baral G. Gonzalez and T.C Son Design and Implementation of Display Specifications for Multimedia Answers  558 1 Session 18 Management of Objects I Chair: Arbee Chen National Tsing Hua University P Boncz A.N Wilschut, and M.L. Kersten C Zou B Salzberg, and R Ladin 0 Wolfson S Chamberlain S Dao L Jiang, and G. Mendei Flattening an Object Algebra to Provide Performance  568 Back to the Future Dynamic Hierarchical Clustering  578 Cost and Imprecision in Modeling the Position of Moving Objects  588 ROL A Prototype for Deductive and Object-Oriented Databases  598 A Graphical Editor for the Conceptual Design of Business Rules  599 The Active HYpermedia Delivery System AHYDS using the M Liu W Yu M Guo and R Shan P Lang W Obermair W Kraus and T Thalhammer PHASME Application-Oriented DBMS  600 F Andres and K. Ono S Chakravarthy and R Le S Mudumbai K Shah A Sheth K Parasuraman and C Bertram ECA Rule Support for Distributed Heterogeneous Environments  601 ZEBRA Image Access System  602 Author Index  603 xi 


11  251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02  data bindings domain-specific metric for assessing module interrelationship  interface errors errors arising out of interfacing software modules  Porter90 Predicting software  faults 251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02 From decision trees to association rules  Classifiers  223this and this\224 goes with that \223class\224  conclusions \(RHS\ limited to one class attribute  target very well defined  Association rules  223this and this\224 goes with \223that and that\224  conclusions \(RHS\ may be any number of attributes  But no overlap LHS and RHS  target wide open  Treatment learning  223this and this\224 goes with \223less bad and more good\224  223less\224,  \223more\224: compared to baseline  223bad\224, \223good\224: weighted classes Proceedings of the 27th Annual NASA Goddard Software Engineering Workshop \226 Tutorial Notes \(SEW\22202 0-7695-1854-0/02 $17.00 \251 2002 IEEE 


12  251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02 Association rule learning  www.amazon.com  Customers who bought this book also bought  The Naked Sun by Isaac Asimov  The Caves of Steel by Isaac Asimov  I, Robot by Isaac Asimov  Robots and Empire by Isaac Asimov 251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02 Support and confidence  Examples = D , containing items I  1: Bread, Milk 2: Beer Diaper Bread, Eggs 3: Beer Coke, Diaper Milk 4: Beer Bread, Diaper Milk 5: Coke, Bread, Diaper Milk  LHS  RHS = {Diaper,Milk  Beer  Support       =   | LHS U RHS|  / | D |       = 2/5 = 0.4  Confidence  =   | LHS U RHS |  / | LHS |    = 2/3 = 0.66  Support-based pruningreject rules with s < mins  Check support before checking confidence Proceedings of the 27th Annual NASA Goddard Software Engineering Workshop \226 Tutorial Notes \(SEW\22202 0-7695-1854-0/02 $17.00 \251 2002 IEEE 


13  251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02 Example of supportbased pruning 4 Bread 1 Eggs 4 Diaper 3 Beer 4 Milk 2 Coke Count 1Item 3 Beer,Diaper 3 Milk, Diaper 2 Milk,Beer 3 Bread, Diaper 2 Bread,Beer 3 Bread,Milk Count 2Item 2 Milk, Diaper Beer 3 Bread,Milk Diaper Count 3Item Support-based pruning 225 Min support =3 Ignore subsets of items of size N 225 only if N-1 support > min-support Without pruning 6 C 1  6 C 2  6 C 3 41 With pruning: 6 + 6 + 2 = 14 251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02 Classifiers versus Association rules \(again  Classifiers  Assume entire example set can fit into RAM  Association rule learners  can handle very big data sets  Agraw  t he APRIORI alg o r i t h m   very large data sets  10,000,000 examples  843MB Proceedings of the 27th Annual NASA Goddard Software Engineering Workshop \226 Tutorial Notes \(SEW\22202 0-7695-1854-0/02 $17.00 \251 2002 IEEE 


14  251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02 The Data Mining Desiderata Bradley  Require one scan \(or less\ of the database if possible  On-line \223anytime\224 behavior  223best\224 is always available, with status information on progress, expected remaining time, etc. provided  Suspendable, stoppable, resumable  incremental  progress saved to resume a stopped job  Ability to incrementally incorporate additional data with existing models efficiently  Work within confines of a given limited RAM buffer  Ooops, good-bye traditional classifiers e.g. C4.5  Argued against by some  223Memory is cheap\224: [W A R2 251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02 Conf1  outlo o k overc a s t   1 0   82  40    84  40   4 0 0  Treatment learning sunny, 85 86 false none \(2 1 2 sunny, 80 90 true none sunny, 72 95 false none rain 65 70 true,          none rain, 71 96 true none rain 70  false some \(2 2 4 rain, 68 80 false,  some rain, 75 80 false some sunny,      69 70 false lots    \(2 3 8 sunny,      75 70 true lots overcast,     83  false lots overcast,     64  true lots overcast,     72  true lots overcast,     81 75 false lots outlook temp humidity wind hours on course A good attribute range 225 More frequent in good that bad 225 Weighted by 223distance\224good to bad 225 Normalized by total count 225 Summed for all good/bad class pairs Lots  none Lots  some Proceedings of the 27th Annual NASA Goddard Software Engineering Workshop \226 Tutorial Notes \(SEW\22202 0-7695-1854-0/02 $17.00 \251 2002 IEEE 


15  251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02 sunny, 85 86 false none \(2 1 2 sunny, 80 90 true none sunny, 72 95 false none rain 65 70 true,           none rain, 71 96 true none rain 70  false some \(2 2 4 rain, 68 80 false,  some rain, 75 80 false some sunny,      69 70 false lots    \(2 3 8 sunny,      75 70 true lots overcast,     83  false lots overcast,     64  true lots overcast,     72  true lots overcast,     81 75 false lots 0 1 2 3 attribute ranges with deltaf 4-2024681 conf1 225 treatments 002 attribute.range.conf1 > X 225 treatments|=N 225TAR2 = O\(2 N  225 fails for large N outlook temp humidity wind hours on course Conf1  outlo o k overc a s t   1 0   82  40    84  40   4 0 0  Lots  none Lots  some 251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02 Treatments for golf 0 1 2 3 4 none some lots I f outl ook o verc as t Th en l o t s o f go l f  4 4  0 Least monitor watch the humidityalert if rising over 90 Least change pick a vacation location with overcast weather I f h u m i d i t y  90  97 Th en l o t s o f go l f  1 4  0 1 2 3 none some lots 0 1 2 3 4 5 6 none some lots If n o ch an ge Th en l o t s o f go l f  6 6 3 5  3  Proceedings of the 27th Annual NASA Goddard Software Engineering Workshop \226 Tutorial Notes \(SEW\22202 0-7695-1854-0/02 $17.00 \251 2002 IEEE 


16  251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02 6.7 <= RM < 9.8 And 12.6 <= Ptratio 15.9 BEST ACTION 0.6 <= NOX < 1.9 and 17.16 <= LSTAT < 39 WORST ACTION BASELINE 500 examples  of bad--, bad, ok, good Stop staring at the scenery and tell me where to steer or what to dodge 251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02 Require overall require2 require3 require5 require4     action1 action1, action2, action3,  \205   Cost,    Benefit 1 Y              Y             N,        \205   23200,  250 2           N              N             Y ,       \205   11400,  150 205..       \205             \205            \205        \205   \205         \205 action2 fault2 fault3 fault1 JPL requirements Feather&Menzie Proceedings of the 27th Annual NASA Goddard Software Engineering Workshop \226 Tutorial Notes \(SEW\22202 0-7695-1854-0/02 $17.00 \251 2002 IEEE 


17  251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02 Case study 99 proposed actions for deep space satellite design; 2 99 10 30 options Each row is one project plan action1, action2, action3,  \205   Cost,    Benefit 1 Y              Y             N,        \205   23200,  250 2           N              N             Y ,       \205   11400,  150 205..       \205             \205            \205        \205   \205         \205 Learnt 225 Do 16 225 Don\222t do 14 225 Ignore 66 options 225 c.f. genetic algorithms Each dot  is one randomly generated project plan 251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02 Pr of tampering 0.02 Pr of fire 0.01 Pr of smoke  given [fi  0.90 Pr of smoke  given [fi  0.01 Pr of report given [exodus=ye 0.75 Pr of report given [exodus=no 0.01 Pr of exodus given [alarm=yes 0.88 Pr of exodus given [alarm=no 0.001 etc tampering fire alarm smoke exodus run away report hello, operator I want to report a fire 0.02 0.01 Use Bayesian analysis to update probabilities given new information Use Bayesian analysis to update probabilities given new information Bayesian Tuning Proceedings of the 27th Annual NASA Goddard Software Engineering Workshop \226 Tutorial Notes \(SEW\22202 0-7695-1854-0/02 $17.00 \251 2002 IEEE 


18  251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02 tampering fire alarm smoke NO exodus report YES 0.50 was 0.02 0.03 was 0.01 Q1: What if there is a report, but no smoke Q1: What if there is a report, but no smoke Q2: What if there is a report, and smoke Q2: What if there is a report, and smoke tampering fire alarm smoke YES exodus 0.03 was 0.02 0.97 was 0.01 report YES Example from : [Poole98   p37 1 Source = http:// www.swi.psy.uva.nl/projects/SWI-Prolog/download.html http://www.cs.ubc.ca/spider/poole/ci/code.tar.gz Files    = code/acp/bnet.pl code/acp/bnet_t1.pl Bayesian Tuning 251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02 Non-na\357ve model bayesian network Proceedings of the 27th Annual NASA Goddard Software Engineering Workshop \226 Tutorial Notes \(SEW\22202 0-7695-1854-0/02 $17.00 \251 2002 IEEE 


19  251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02 Low testing effort EXPLAINS 1\ some observed operational defects  and 2\ low pre-release defects 251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02  Ancestors  ancestor\(X,Y\:-parent\(X,Y  ancestor\(X,Y\:-parent\(X,Z\ancestor\(Z,Y  Lists  member\(X,[X|Z   member\(X,[Y|Z me mb er X Z   append X X   append\([X|X Y s X Z s  a ppe nd X s Ys Z s  Example Example action action hypothesis hypothesis p\(b,[b add clause p\(X,Y   specialize p\(X,[V p\(x,[a specialize p\(X,[X p\(b,[a add clause p\(X,[X p\(X,[V p\(X W Inductive Logic Programming Proceedings of the 27th Annual NASA Goddard Software Engineering Workshop \226 Tutorial Notes \(SEW\22202 0-7695-1854-0/02 $17.00 \251 2002 IEEE 


20  251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02 East-West trains 1. TRAINS GOING EAST 2. TRAINS GOING WEST 1 2 3 4 5 1 2 3 4 5 1. TRAINS GOING EAST 2. TRAINS GOING WEST 1 2 3 4 5 1 2 3 4 5 251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02 ILP representation  Example eastbound\(t1  Background theory car\(t1,c1\      car\(t1,c2\       car\(t1,c3\.      car\(t1,c4 rectangle\(c1\  rectangle\(c2\     rectangle\(c3\.   rectangle\(c4 short\(c1\      long\(c2\.          short\(c3\       long\(c4 none\(c1\.        none\(c2\.          peaked\(c3\.      none\(c4 two_wheels\(c1\  three_wheels\(c2\two_wheels\(c3\two_wheels\(c4 load\(c1,l1\.     load\(c2,l2\       load\(c3,l3\    load\(c4,l4 circle\(l1\      hexagon\(l2\       triangle\(l3\    rectangle\(l4 one_load\(l1\  one_load\(l2\.      one_load\(l3\    three_loads\(l4  Output ne\(C Proceedings of the 27th Annual NASA Goddard Software Engineering Workshop \226 Tutorial Notes \(SEW\22202 0-7695-1854-0/02 $17.00 \251 2002 IEEE 


21  251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02 Predicting Correctness Almei NewID CN2 C4.5 C4.5_rule FOIL Accuracy 52 54 66 68 73 251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02 FOIL\222s best rule high\(A executable\(A,B maximum_statement_nesting_depth\(A,C lines_of_comments\(A,B commentsdivsize\(A,E n1\(A,F n2\(A,G less_or_equal\(E,F not less_or_equal\(B,G C <> 4 C <> 43 less_or_equal\(C,D High faults when comment density <= #operators and executable statements > #operators and max nesting <= number of lines of comments and max nesting is not 4 or 43 High faults when comment density <= #operators and executable statements > #operators and max nesting <= number of lines of comments and max nesting is not 4 or 43 Proceedings of the 27th Annual NASA Goddard Software Engineering Workshop \226 Tutorial Notes \(SEW\22202 0-7695-1854-0/02 $17.00 \251 2002 IEEE 


22  251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02 Inside  some learners  neural nets  genetic algorithms  decision tree learners  association rule learners  treatment learners  bayesian tuning  inductive logic programming 225 sub-symbolic locally guided descent symbolic, global search 225 recursive diversity reduction 225 this goes with that CLASS 225 this goes with that 225 asses 225 a little model goes a long way 225 Horn clauses  251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02 Case studies predicting effort \(45 predicting faults \(51 model-based ML \(54 early lifecycle project planning \(60 Proceedings of the 27th Annual NASA Goddard Software Engineering Workshop \226 Tutorial Notes \(SEW\22202 0-7695-1854-0/02 $17.00 \251 2002 IEEE 


23  251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02 Case study How can we estimate earlier in the life cycle  251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02 Predicting development times in months\Srinivasan95 Proceedings of the 27th Annual NASA Goddard Software Engineering Workshop \226 Tutorial Notes \(SEW\22202 0-7695-1854-0/02 $17.00 \251 2002 IEEE 


24  251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02 Bayes for effort Chulani99  The COCOMO-II project  Open-source software cost estimation  Reuse vs effort XH : multiple product lines VH : across product lines H : across program N : across project L  : none  Regression over data from 83 software projects  Regression conflicted with \223Delphi values\224  Tune regression values using Delphi expectations 0.8 0.9 1 1.1 1.2 1.3 1.4 1.5 1.6 Low N H VH XH Delphi Regression Adjusted Da ta   reus e low e rs effo r t Ex pe ct e d  reus e incre a se  effo r t    251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02 COCOMO-II \(1998\COCOMO-II \(1997 Pred\(30 Pred\(25 Pred\(20 Pred\(X 52 49 46 83 projects 63 59 54 161 projects 7561 68 55 63 48 161 projectsbased on Bayesian 161 projectsbased on Delphi Percentage of estimated effort within X of actual Conclusion data + delphi tuning\a Proceedings of the 27th Annual NASA Goddard Software Engineering Workshop \226 Tutorial Notes \(SEW\22202 0-7695-1854-0/02 $17.00 \251 2002 IEEE 


25  251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02 Neural Network Count the wi dge ts in the I n te r f ace to es ti m a te e f f o r t  Labels Edit Boxes Grid Boxes Check Boxes Buttons 251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02 Neural Network Subsystem Pred\(25 MARE Buyer Admin 80 17.6 Buyer Client 80 14.6 Distribution Server 20 96.7 Supplier Client 90 12.2  12 Different Widgets Counted and associated with effort Proceedings of the 27th Annual NASA Goddard Software Engineering Workshop \226 Tutorial Notes \(SEW\22202 0-7695-1854-0/02 $17.00 \251 2002 IEEE 


26  251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02 Case study: Predicting software 251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02 Predicting software  faults Khoshgoftaar99 Whi c h d o g s di d not ba r k  225 42 attri b ute s  in dat a s e t 225 Only 6 in the l e arnt th e o ry Diffe re nt attri b ute s than b e fore 225 223c au se s f a u l t 224  do m a in s pec i f i c 225 Me thod for fin d ing fa ult s  gen e r a l Whi c h d o g s di d not ba r k  225 42 attri b ute s  in dat a s e t 225 Only 6 in the l e arnt th e o ry Diffe re nt attri b ute s than b e fore 225 223c au se s f a u l t 224  do m a in s pec i f i c 225 Me thod for fin d ing fa ult s  gen e r a l Proceedings of the 27th Annual NASA Goddard Software Engineering Workshop \226 Tutorial Notes \(SEW\22202 0-7695-1854-0/02 $17.00 \251 2002 IEEE 


27  251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02 Issue of generality  Specific conclusions may not apply to general projects  Proposal one  Intra-project learning  Lessons should generalize across the same developer methodology, application and tool set  Proposal two  Inter-project learning  Need larger training set  COCOMOII uses 161 projects  Note: two = N * one Khoshgoft good bad Tia bad good  251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02 Model-based ML Bratko89,Pearc Proceedings of the 27th Annual NASA Goddard Software Engineering Workshop \226 Tutorial Notes \(SEW\22202 0-7695-1854-0/02 $17.00 \251 2002 IEEE 


28  251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02 Model-based ML simple e.g sum\(X,  Y Z sum   sum   sum\(0 0 0 sum 0  sum 0  sum\(0   sum\(0   sum  Any sum  Any if X >0 X\222=      if X < 0 0 if X= 0  switch\(State,Volts,Amps switch\(on,       0,     Any switch\(off,      Any,   0 blub\(Mode,Light,Volts,Amps bulb\(blown,dark, Any 0 bulb\(ok,     light   bulb\(ok,    light   bulb\(ok,    dark 0 0 251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02 A qualitative circuit go  :tell\('circ.data'\ go1, told go1 :functor\(X,circuit,9\ forall\(X, example\(X example\(circuit\(Sw1,Sw2,Sw3,B1,B2,B3,L1,L2,L3\classification\(B1,B2,B3,Class format\('~a,~a,~a,~a,~a,~a,~a~n Sw1,Sw2,Sw3,L1,L2,L3,Class  classification\(B1, B2, B3,Class needs 2 our of three bulbs working classification\( ok, ok, B3,   good classification\( ok, B2, ok,   good classification\( B1, ok, ok,   good classification\( B1, B2, B3,   bad Proceedings of the 27th Annual NASA Goddard Software Engineering Workshop \226 Tutorial Notes \(SEW\22202 0-7695-1854-0/02 $17.00 \251 2002 IEEE 


29  251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02 Results from > 700 examples circ.names good,bad switch1: on, off switch2: on, off switch3: on, off bulb1: light, dark bulb2: light, dark bulb3: light, dark Command line c4.5 -f circ -m 2 W a t c hing bulb1 tells us th e rest Insight f ul  Or dull W a t c hing bulb1 tells us th e rest Insight f ul  Or dull 251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02 More Model-based ML Proceedings of the 27th Annual NASA Goddard Software Engineering Workshop \226 Tutorial Notes \(SEW\22202 0-7695-1854-0/02 $17.00 \251 2002 IEEE 


30  251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02 ca n we r e v i s i t thos e warranti e s   Run 1 35,000 tions  Learn 1  Run 2 if Sw2c=off then 3264 tions  Learn 2  Run 2 if Sw2c=off n then 648 tions  Learn 3 Ca n\222t clos e  Sw3c warranty issu es No b u d g e t  for e x p e ns i v e ha rd wa r e 251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02 3 \223tunings\224 5 SLOC guesstimates 150,000 runs Treatments for software projects Proceedings of the 27th Annual NASA Goddard Software Engineering Workshop \226 Tutorial Notes \(SEW\22202 0-7695-1854-0/02 $17.00 \251 2002 IEEE 


31  251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02 flex=1 pmat=3 sced=2 rest anything from kc1 150,000 runs 150,000 runs Treatments for software projects \(ii 251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02 pmat=2 acap=2 sced=2 rest anything from kc1 30,000 runs 30,000 runs Treatments for software projects \(iii Proceedings of the 27th Annual NASA Goddard Software Engineering Workshop \226 Tutorial Notes \(SEW\22202 0-7695-1854-0/02 $17.00 \251 2002 IEEE 


32  251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02 ons discussion \(64 downloads \(69 further reading \(71 references \(72 251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02 Will you try ML  Have we motivated you  Will you rush home and do ML on your data  Clearly  ML algorithms work  Caution  you may find it harder than you think Proceedings of the 27th Annual NASA Goddard Software Engineering Workshop \226 Tutorial Notes \(SEW\22202 0-7695-1854-0/02 $17.00 \251 2002 IEEE 


33  251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02 Many ways to learn numerous case studies but there is still a problem Theme Learning is a solved problem \(sort of Data collecting and modeling is not 251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02 Be warned match your ML goals to your software process level Project metrics coarse-grain conclusions Product metrics product learning Process metrics process learning Proceedings of the 27th Annual NASA Goddard Software Engineering Workshop \226 Tutorial Notes \(SEW\22202 0-7695-1854-0/02 $17.00 \251 2002 IEEE 


34  251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02 Also, match your tool to task Task ML Tool Assembly line robot deciding what to reject Decision tree learner Repair robot trying to do the least to fix the rejected parts Treatment learner Predicting the life of a robot Neural Network Optimizing the assembly line Genetic Algorithm If clustering when no classes iation rule learning If simple background knowledge Bayesian If complex relational background knowledge ILP 251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02 Have we learnt enough  Not yet  But wait Proceedings of the 27th Annual NASA Goddard Software Engineering Workshop \226 Tutorial Notes \(SEW\22202 0-7695-1854-0/02 $17.00 \251 2002 IEEE 


35  251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02 Cost = $0  WEKA  E.g. http://www.cs.waikato.ac.nz/~ml/weka/: ML in JAVA 003 decision tree inducers,rule learners, naive Bayes, decision tables locally weighted regression  GDB_Net  http://nas.cl.uh.edu/boetticher/gdb_net.zip  TAR2  http://www.ece.ubc.ca/twiki/bin/view/Softeng/TreatmentLearner  APRIORI  http://fuzzy.cs.uni-magd eburg.de/~borgelt/apriori/apriori.html#download  And many others  E.g. ML  A public domain \223C\224 library of common algorithms  Naive Bayes, ID3, MC4 , Decision Tables ,   Holte's OneR CN2,\205  http://www.sgi.com/tech/mlc/utils.html 251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02 Cost > $0  C4.5  Comes with the book Quinlan  C5.0  http://www.rulequest.com/download.html  Microsoft SQL SERVER 2000\231  Comes with numerous machine learning tools  Proprietary algorithms  Etc  223data mining\224 \223commercial software\224 in Google  3,340 links  223data mining consultancy\224 in Google  850 links Proceedings of the 27th Annual NASA Goddard Software Engineering Workshop \226 Tutorial Notes \(SEW\22202 0-7695-1854-0/02 $17.00 \251 2002 IEEE 


36  251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02 Further reading  Mendonca  great rev i e w art i cl e on ML  Large list of available tools  All the things you can do with a decision tree [Menzies0  Treatment learning: [Menzies01a  Michalski\222s excellent survey of ML types [Michalski  Neural nets: [Boetticher01  Special issue SEKE journal, knowledge discovery Morasca99  Inductive logic programming [Bergadano95,Cohen95  Come by IJCAI 2011 and I\222ll tell you all about it\222s applications  Genetic algorithms: [Goldberg8  Bayesian learning [Cheeseman88 251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02 References  Agrawal  Agrawal, R., and T.Imeilinski and A.Swami \223Mining Association Rules between Sets of Items in Large Databases,\224 Proceedings of the 1993 ACM SIGMOD Conference Washington DC, USA  Bergadan  Bergadano, F., and D.Gunetti Inductive Logic Programming: From Machine Learning to Software Engineering The MIT Press, 1995  B  Berry, M. J. A., and G., Linoff Data Mining For Marketing, Sales, and Customer Support John Wiley Sons, Inc., New York, 1997  Boetticher01  Boetticher, G., "An Assessment of Metric Contribution in the Construction of a Neural Network-Based Effort Estimator Second International Workshop on Soft Computing Applied to Software Engineering  Enschade, NL, 2001 Available from http://nas.cl.uh.edu/boetticher/publications.html  Boetticher01  Boetticher, G., "Using Machine Learning to Predict Project Effort: Empirical Case Studies in Data-Starved Domains First International Workshop on Model-based Requirements Engineering San Diego, 2001 Available from http://nas.cl.uh.edu/boetticher/publications.html  Bradley  Bradley, P., U. Fayyad, and C. Reina. \223Scaling clustering algorithms to large databases\224. In KDD'98  B  Bratko, I., I. Mozetic, and N. Lavrac KARDIO: a Study in Deep and Qualitative Knowledge for Expert Systems MIT Press, 1989  Breim  Breiman, L., J. Friedman, R. Olshen, C. Stone, \223Classification and Regression Trees,\224 Wadsworth International Group, 1984 Proceedings of the 27th Annual NASA Goddard Software Engineering Workshop \226 Tutorial Notes \(SEW\22202 0-7695-1854-0/02 $17.00 \251 2002 IEEE 


37  251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02 References  Burgess  Burgess, C.J., and Martin Lefley. \223Can genetic programming improve software effort estimation? A comparative evaluation,\224 Information and Software Technology er 2001  Cheesem  P. Cheeseman, D. Freeman, J. Kelly, M. Self, J. Stutz, and W. Taylor. \223Autoclass: a bayesian classification system,\224 In Proceedings of the Fifth International Conference on Machine Learning  Morgan Kaufman, 1988  Chulani  S.Chulani,  B. Boehm, and B. Steece 223Bayesian analysis of empirical software engineering cost models,\224 IEEE Transaction on Software Engineering 25\(4\ly/August  1999  Cohe  W. W. Cohen, \223Inductive specification recovery: Understanding software by learning  from example behaviors,\224 Automated Software Engineering 2:107-129, 1995  DeJon  DeJong, K.A., and Spears, W.M. "An Analysis of the Interacting Roles of Population Size and Crossover in Genetic Algorithms Proc. First Workshop Parallel Problem Solving from Nature  Springer-Verlag, Berlin, 1990  Dietteric  Dietterich, T. G., \223Machine Learning  Research: Four Current Directions,\224 AI Magazine 18 \(4\97 Pp. 97-136. Available from ftp://ftp.cs.orst.edu/pub/tgd/papers/aimag-survey.ps.gz  s  Feather, M.S., and T. Menzies: \223Converging on the Optimal Attainment of Requirements IEEE Joint Conference On Requirements Engineering  ICRE'02 and  RE'02 9-13th September, University of Essen, Germany, 2002. Available from http://tim.menzies.com/pdf/02re02.pdf 251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02 References  Fenton00  Fenton, N., and  M. Neil \223Software Metrics: A Roadmap,\224 International Conference on Software Engineering, 2000. Available from http://www.dcs.qmul.ac.uk/~norman/papers/metrics_roadmap.pdf  Goldberg  Goldberg, D.E Genetic Algorithms in Search, Optimization, and Machine Learning Addison-Wesley Reading, Massachusetts, 1989  Khoshgoftaar  Khoshgoftaar, T.M., and E.B. Allen. \223Model software quality with classification trees,\224 in H. Pham, editor 223Recent Advances in Reliability and Quality  Engineering\224, World Scientific, 1999  Mendonc  Mendonca, M., and N.L. Sunderhaft, \223Mining Software Engineering Data: A Survey,\224 A DACS State-ofthe-Art Report September 1999. Available from http://www.dacs.dtic.mil/techs/datamining  Menzie  Menzies, T., \223Practical Machine Learning for Software Engineering and Knowledge Engineering,\224 ftware Engineering and Knowledge Engineering volume 1, 2001\vailable from http://tim.menzies.com/pdf/00ml.pdf  Menzies01a  Menzies, T., and Y. Hu, \223Reusing models for requirements engineering,\224 First International Workshop on Model-based Requirements Engineering 2001. Available from http://tim.menzies.com/pdf/01reusere.pdf  Menzies01b  Menzies, T., and Y. Hu, \223Constraining discussions in requirements engineering,\224 First International Workshop on Model-based Requirements Engineering San Diego, 2001. Available from http://tim.menzies.com/pdf/01lesstalk.pdf  Menzie  Menzies. T., and J. Kiper, \223Better reasoning about software engineering activities,\224 Automated Software Engineering 2001. Available from http://tim.menzies.com/pdf/01ml4re.pdf Proceedings of the 27th Annual NASA Goddard Software Engineering Workshop \226 Tutorial Notes \(SEW\22202 0-7695-1854-0/02 $17.00 \251 2002 IEEE 


38  251 2002 Tim Menzies, Gary D. Boetticher Page  SEW-27 Tutorials '02  Michalski90   Michalski, R.S., \223Toward a unified theory of learning,\224  In B.G. Buchanan and D.C. Wilkins, editors 223Reading in Knowledge  Acquisition and Learning\224, pages 7--38. Morgan Kaufmann, 1993  Mitchell  Mitchell, T Machine Learning McGraw-Hill, 1997  Morasca99  Morasca, S., and Gunther Ruhe, Guest editors' introduction of the Special issue on \223Knowledge Discovery from Software Engineering Data,\224 International Journal of Software Engineering and Knowledge Engineering October, 1999  Pearce  Pearce, D., \223The induction of fault diagnosis systems from qualitative models,\224 in Proc. AAAI-88 1988  Poole9  Poole, D. L.,  A. K. Mackworth, and R. G. Goebel Computational Intelligence: A Logical Approach  Oxford University Press, New York, 1998  Porter9  Porter, A.A., and R.W. Selby  \223Empirically guided software development using metric-based classification trees,\224 IEEE Software Pp. 46-54, March 1990  Quinla  Quinlan, R C4.5: Programs for Machine Learning Morgan Kaufman, 1992  Srinivasa  Srinivasan, K., and D. Fisher,  \223Machine learning approaches to estimating software development effort,\224 IEEE Transactions on Software Engi neering Pp. 126-137, February 1995  Tian9  Tian, J., and M.V. Zelkowitz 223Complexity measure evaluation and selection,\224 IEEE Transactions on Software Engineering 21\(8\p. 641-649,  August 1995  Webb0  Webb, G., \223Efficient search for association rules,\224 Proceeding of KDD-2000 Boston, MA,  2000  Zhang0  Zhang, Du, \223Applying Machine Learning Algorithms in Software Development,\224 Modelling Software System Structures in a fastly moving scenario Santa Margherita Ligure, Italy, 2000 References Proceedings of the 27th Annual NASA Goddard Software Engineering Workshop \226 Tutorial Notes \(SEW\22202 0-7695-1854-0/02 $17.00 \251 2002 IEEE 


