Data Visualization for Supporting Query-Based Data Mining Kentarou Kichiyoshi Hidehiko Iwasa Haruo Takemura and Naokazu Yokoya Graduate School of Information Science Nara Institute of Science and Technology 8916-5 Takayama Ikoma Nara 630-0101 Japan kentar-k iwasa takemura yokoya ABSTRACT This paper proposes a methodology for supporting the process of a query-based data mining by using visu alization techniques The query-based data mining is one of the important tasks of Knowledge Discovery in Databases KDD In the process of a query-based data mining, users hypothesize about patterns in a database and make a query 
to confirm the hypothesis The pro posed method supports the two aspects of the process i.e proposing an initial hypothesis as a query and modifying the hypothesis based on the query result In the method an instance in a database which has several attributes with numerical or nominal values is visualized as a color bar with several color parts which correspond to attribute values Values of a function which evaluates the utility of a hypothesis are also vi sualized by using colors These visualization technique helps users find an initial hypothesis and modify the hypothesis in order to increase the usefulness of it inter actively Experimental results show that the 
proposed method really helps a user find interesting rules in real world databases 1 INTRODUCTION An informal definition of Knowledge Discovery in Databases KDD is to find useful and interesting pat terns in data Data mining is one of the tasks of KDD and is defined as a method to find a part of data which has interesting common features and to ac quire the description of the characteristics of the data 5 6 8 19 251 Most of data mining methods that have been pro posed to achieve the task try to find interesting pat terns in databases automatically In these methods several functions that evaluate the usefulness score of 
patterns are employed and the results of the methods strongly depend on such evaluation functions To design appropriate evaluation functions is not an easy task In l two functions called support and confidence are used to find association rules SupporB represents the wideness of a rule the percentage of instances that satisfy the rule in a database Con fidence indicates the strength of a rule the percent age of instances that satisfy the rule within the in stances that satisfy the condition part of the associa tion rule Since these functions are not domain spe cific they are widely used in many data mining tools 0-7803-5731-0/99/$10.00 01999 
IEEE 4 9 10 11 12 18 21 22 241 However these general purpose evaluation func tions are not always useful in the scene of the data mining Data mining systems using these functions often discover trivial patterns in databases that are not interesting for users of the system simply because users of the database have already known these rules that widely and strongly appear especially when users are specialist of the contents of the database To avoid the problem above query-based data mining systems have been proposed[2 Users of a query-based data mining system give a query to the database system as a hypothesis of useful patterns in the 
database The database system returns a data set which satisfies the given query conditions to users and users confirm that how strongly and widely the hypo thetical pattern exists in the database If the strength or generality of an initial hypothesis is not sufficient users modify the query and give it to the database sys tem again In the query-based data mining it is important to support users to have a good inspiration of initial queries and to modify a query adequately so as to in crease the utility of the hypothesis based on the replied data set To make an initial query as a candidate of a useful 
pattern users have to know-which part of the given data is dense or which of attributes are cor relate closely with each other If users can grasp the distribution of data at a glance users can find interest ing patterns with taking into account the background knowledge such as the meaning of attributes How ever most of user interfaces of existing database sys tems are character-based it is almost impossible for users to grasp the distribution of data at a glance This paper proposes a methodology for support ing the process of the query-based data mining[2 by using visualization techniques[3 13 17 20 261 In the method, an 
instance in a database is represented as a bar with multiple colors and each color repre sents the value of a corresponding attribute defined in a database Users can grasp the distribution of data at a glance by using this visualization method Modifications of the generated hypothesis are carried out in two ways by changing ranges of attribute val ues in the query and by adding a new attribute to the query Therefore it becomes important to grasp the distribution of data in a multi-dimensional data space The color bar representation is also used to help users understand how the utility score of the descrip v 8888 


tion changes by relaxing or strengthening conditions which represent the present query Histograms of at tribute values are also used to find attributes which have strong correlation with other attributes included in the query This paper is structured as follows In the next section details of the visualization techniques are de scribed In Section 3 demonstration of the proposed method with a real world data set is shown and the usefulness of the proposed method is confirmed Sec tion 4 will conclude the paper with discussions about current problems of the system and future works 2 VISUALIZATION METHODS FOR SUPPORTING QUERY-BASED DATA MINING 2.1 Query Representation In this paper we treat databases which have pre defined attributes that take nominal or numerical val ues For nominal attributes possible values for the attribute are also given To make the system sim ple we employ a simple query representation so called range query[7 In the range query users of database system specify the possible range for a nu merical attributes and specify the value for a nom inal attribute If a user want to get a set of data which have values between 100 and 150 for an at tribute AI the user gives an query 100<A1<150 to the database Users can make complex range queries by using AND and OR operators and nested queries are permitted such as GENDER  MALE  160<HEIGHT<18O  185AGE 2.2 Visualization of Database for Finding Ini tial Queries In the first stage of query-base data mining, users want to have an inspiration of useful patterns in a database To have a good inspiration it is important to under stand distributions of data Since users of database know the meaning of attributes they can easily find candidates of useful patterns if they can grasp correla tions among values of attributes at a glance To help users grasp distributions of values values of attributes are transformed into colors in our visualiza tion method The Munsell color system[23 is employed for the transformation Numerical values are normal ized and mapped to the corresponding colors on the color wheel from puqde\(value=O to blue value=l as shown in Fig 1 In the case of nominal attributes the color wheel is divided into arcs and colors at the bor der between arcs are assigned to each value After the transformation an instance in the database is visual ized as a color bar with multiple colors that represent the values of attributes Figure 2 illustrates the trans formation of a database which has four attributes In this case an instance of the database becomes a colum 0 Figure 1 Transformation of values into colors using Munsell color system Datal Data2 Data3 Date4 Figure 2 Visualization of a database with transform ing numerical values into colors nar bar with four colors With this visualized database users can grasp the distribution of values interactively by sorting the values of each attribute In Fig 3 data are sorted based on the values of the attribute Al As can be seen there exists a region with similar colors in the middle part of the attribute A2 i.e two attributes A1 and A2 may have correlation in the region If the range of A1 where the colors of A2 are similar is al a1,2 the query can be specified by al,lIA Ia1,2 az,l IA2<a2,2 where a2,1 and a2,2 are the maximum and minimum values for attribute A2 in the range of data A culster of similar colors Figure 3 Finding a similar color region with the visu alized database V 889 


2.3 Finding Additional Attributes with His tograms of Attribute Values Another promising way of finding attributes which have correlations with other attributes is to investigate distributions of values directly using histograms of val ues Users can grasp the distribution of values of an attribute Especially histograms are useful as a sup plemental tool of visualized databases When a user find a color cluster in the visualized database the den sity of instances can be confirmed using the histogram of them In our method two histograms of an attribute are superimposed one is a histogram of all data and the ohter is that of data in the specified range If there exists a mountain in the first histogram and the second histogram is flat user can confirm that a cluster of instances exists in the specified region of the attribute and can add the attribute to the current query Figure 4 Superimposed two histograms of several at tributes 2.4 Visualization of Values of Evaluation Function for Modifying Query-Ranges After users find an initial query by browsing the visual ized database and histograms the next step is to refine the query The region of the initial query is roughly determined by directly specifying the area which has similar colors Therefore the range of specified area may be too wide or too narrow to appropriately cap ture the group of data which have similar values in the attributes These mis-specifications of ranges decrease the strength or generality of the pattern To increase the strength and generality of the patterns represented by a query, users have to narrow the range of the query as much as possible without decreasing the number of instances included in the query In order to navigate users to refine a query to sat isfy the requirement we employ two functions called distance and relevance[l4 15 161 Distance is a simple distance function between a specified range al,a2 and a value z of an attribute defined as follows z a2 z  a2 z-a1 z  al distance q Q  a1 52 I a2 Relevance is a function that represents the distance between an instance and a query and is calculated by using dinsance values of attributes that appears in the query Two distance values are integrated into relevance in the following manner according to the connection operators dl  d2 dl x d2 in the case of AND in the case of OR relevance\(d1 de  In order to support users to change ranges of at tributes to increase the strength and generality of the query values of distance and relevance are trans formed into colors in the same manner as values of data are transformed Values of distance and relevance are normalized to I 11 In the Munsell color wheel purple yellow and blue are assigned to 1 0 and 1 respectively Figure 5 shows an example of vi sualized relevance and distance values with a query IJ SA1 a1,2 a2,1 IAz<a2,2 With the visualized relevance and distance values users can understand how the strength and general ity of the query change by modifying the ranges In Fig 5 instances are sorted based on relevance Val ues There exist instances whose values for A1 are in the range of the query yellow but values for A2 are not The color of distance values of these instances in A2 are yellow-green i.e the distance between the specified range and the attribute value of each instance is short This means that the generality of the query i.e the number of instances in the query ranges will increase by slightly moving the upper limit of A2 to widen the range On the other hand if there exist in stances whose disntance colors of A1 are yellow and colors of A2 are not close to yellow the range for A1 may too wide Users have to investigate the appro priate range for A1 by sorting data based on distance values of Al V 890 


Instances that satisfy the current query    Attribute name CFUM ZN INDUS NOX RM AGE PTRATIO LSTAT relevance CRIM Meaning per capita crime rate by town proportion of residential land zoned for lots over 25,000 sq.ft proportion of non-retail business acres per town nitric oxides concentration parts per 10 million average number of rooms per dwelling proportion of owner-occupied units built prior to 1940 pupil-teacher ratio by town  lower status of the population Specified range for ZN H Figure 5 Visualization of distance and relevance val ues 3 DEMONSTRATION OF QUERY-BASED DATA MINING WITH THE PROPOSED VISUALIZATION METHODS 3.1 Data specification To demonstrate the proposed visualization meth ods in the process of the query-based data min ing a real world dataset called boston which con tains information collected by the U.S Census Ser vice concerning housing in the area of Boston Mass It was obtained from the StatLib archive http://lib.stat.cmu.edu/datasets/boston The dataset includes 506 instances and has 14 attributes We use eight of them as shown in Table 1 to reduce the size of figures in this paper The following demon strates the proposed method with a sequence of exam ple queries 3.2 Demonstration of Query-Based Data Min ing with boston dataset In the demonstration it is assumed that a user want to know the property of exclusive residential districts Therefore the user firstly sets the range for the at tribute ZN In our visualization method the user can set the range by sorting instances with ZN values and select a region in which instances have relatively high ZN values as shown in Fig 6 In this case the user ZN INDUS NOX RM AGE PTRATIO LSTAT Figure 6 Visualized database with eight attributes sorted by ZN set the range as 12.25ZN5100 In regions of other attributes corresponding to 125ZN5100 the user can find clusters of colors in attributes CRIM INDUS NOX and LSTAT The user can easily set the ranges for these at tributes by using their histograms On the other hand in attributes RM AGE and PTRATIO the user can not find any color clusters Figure 7 shows histograms of these attributes From these his tograms the user can confirm that the distribution of values in then specified range is not different from that of all instances In this case user can make a query 12.2<ZN5100 AND\(0.05CRIM50.006 AND 0.46  INDUS 5 6.88 AND 0.39 5 N OX 5 0.47 AND\(1.87<LSTAT<9.40 The percentage of in stances that satisfy the query within all instances i.e support of the query are 18 and the percentage of in stances that satisfy the query within instances that are included in the range 12.25ZN5100 i.e confidence of the query are 69 To increase the values of support and confidence V 891 


Figure 7 Histograms of RM AGE and PTRATIO without losing the strength of the pattern the user modified the range of the query by using visualized relevance and distance values The user can find two yellow-green regions easily as shown in Fig.8\(a Figure 8\(b illustrates the way of widening the range of NOX as the range includes the yellow-green region After the refinement the query became 12.2~ZN~100 0.0~CRIM~0.006 0.46 1INDUS<6.88 0.39<NOX<0.49  1.87 ILSTAT19.62 As a result support and confi dence became 20 and 70 respectively As demon strated above the user can find a strong pattern in the database only with his/her perceptual capability 4 CONCLUSION Data mining in very large databases is one of the most important challenges in the research area of databases The task is to efficiently find interesting data sets i.e clusters of similar data or correlations between several parameters Our approach to support the data mining process enhances the capability of traditional database querying by visualizing database itself and giving users visual feedbacks of queries Since our method is inde pendent of any specific domain area and requires no knowledge of statistics such as cluster analysis users with perceptual capabilities and general knowledge are responsible for doing the analysis and interpretation As we demonstrated the proposed method in Section 3 users of the system can explore databases by incremen tally refining queries guided by the visualized database and visual feedbacks of previous queries We will im prove the method by extending the capability of the query language The visualization techniques for relevance CRIM ZN INDUS NOX RM AGE PTRATIO LSTAT b Modification of the range of NOX Figure 8 Modification of ranges based on visualized relevance and distance values displaying a numbers of attributes and data should be further investigated REFERENCES R Agrawal H Mannila R Srikant, and H Toivonen Fast discovery of association rules In Advances in Knowledge Discovery and Data Mining chapter 12 pp 307-328 AAAI/MIT Press 1996 T M Anwar H W beck and S B Navathe Knowl edge mining by imprecise querying A classification based approach In Proceedings 8th International Con ference on Data Engineering pp 622-630 1992 V 892 


B G. Becker Using mineset for knowledge discovery IEEE Computer Graphics and Applications pp 75 78, 1997 S Brin R Motwani J D Ullman and S Tsur Be yond market baskets Generalizing association rules to correlations In Proceedings of the 1997 ACM SIGMOD International Conference on Management of Data pp 265-276, 1997 P Cheeseman and J Stutz Bayesian classification autoclass  Theory and results In Advances in Knowledge Discovery and Data Mining chapter 6 pp 153-180 AAAI/MIT Press 1996 M Chen J Han and P S Yu Data mining An overview from a database perspective IEEE Trans actions on Knowledge and Data Engeneering Vol 8 No 6 pp 866-881 1996 C Faloutsos and K I Lin FastMap A fast alge rithm for indexing data-mining and visualization of traditional and multimedia datasets In Proceedings of the 1995 A CM SIGMOD International Conference on Management of Data pp 163-174, 1995 U M Fayyad G P-Shapiro and P Smith From data mining to knowledge discovery An overview In Advances in Knowledge Discovery and Data Mining chapter 1 pp 1-34 AAAI/MIT Press 1996 T Fukuda Y Morimoto and S Morishita. Construct ing efficient decision trees by using optimized numeric association rules In Proceeding of the 22nd VLDB Conference pp 146-155 1996 T Fukuda Y Morimoto S Morishita and T Tokuyama Data mining using twedimensional op timized association rules Scheme algorithms and vi sualization. In Proceedings of the 1996 ACM SIGMOD International Conference on Management of Data pp Takeshi Fukuda Yasuhiko Morimoto Shinichi Mor ishita and Takeshi Tokuyama Mining optimized as sociation rules for numeric attributes In Proceedings of the 15th ACM SIGACT-SIGMOD-SIGART Sympo sium on Principles of Database Systems pp 182-191 1996 J Han and Y Fu Discovery of multiple-level associ ation rules from large database In Proceedings of the 21st VLDB Conference pp 420-431 1995 Y Iizuka H Shiohara T Iizukam and S Isobe Au tomatic visualization method for visual data mining In Research and Development in Knowledge Discovery and Data Mining pp 174-185 Springer 1998 D A Keim and H.-P Kriegel VisDB Database ex ploration using multidimensional visualization IEEE Computer Graphics and Applications pp 40-49 1994 D A Keim and H.-P Kriegel Visualization tech niques for mining large databases A comparison IEEE Transactions on Knowledge and Data Engeneer ing Vol 8 No 6 pp 923-938 1996 D A Keim H.-P Kriegel and M Ankerst Recur sive pattern A technique for visualizing very large amounts of data In proceedings of Visualization 95 pp 279-286 1995 13-23 1996 17 D A Keim H.-P Kriegel and T Seidl Support ing data mining of large databases by visual feedback queries In IEEE 10th International Conference on Data Engeneering pp 302-313, 1994 18 W Klosgen Explora A multipattern and multistrat egy discovery assistant In Advances in Knowledge Discovery and Data Mining chapter 10 pp 249-271 AAAI/MIT Press 1996 19 W Klosgen and J M Zytkow Knowledge discovery in databases terminology In Advances in Knowledge Discovery and Data Mining chapter A pp 573-592 AAAI/MIT Press 1996 20 H Y Lee and H L Ong Visualization support for data mining IEEE Ezpert Intelligent Systems and Their Application Vol 11 No 5 pp 69-75, 1996 21 B Lent A Swami and J Widom Clustering asso ciation rules In Proceedings of the 13rd International Conference on Data Engeneering pp 220-231, 1997 22 Ramakrishnan Srikant Rekesh Agrawal Mining se quential patterns In Proceedings of the list Inter national Conference on Data Engeneering pp 3-14 1995 23 S J Sangwine and R E N Horne The Colour Image Processing Handbook CHAPMAN&HALL 1998 241 R Srikant and R Agrawal Mining generalized asso ciation rules In Proceedings of the 21st VLDB Con ference pp 407419 1995 251 R Uthurusamy From data mining to knowledge dis covery Current challenges and future directions In Advances in Knowledge Discovery and Data Mining chapter 23 pp 561-569 AAAI/MIT Press 1996 26 P C Wong and R D Bergeron 30 years of multi dimensional multivariate visualisation In Scientific Visualization Overviews Methodologies and Tech niques IEEE Computer Society Press 1997 V 893 


 t  Fig 3 Average run time vs minp of minp e.g minp  7 there is little impact on CPU con sumption This is because minp is sufficiently large compared to the fraction of \223noise\224 transactions However, when minp is small pruning provides significant benefits In fact, when minp is 6.5 a typical run generates about 3730 candidates at the third level With pruning the number of candidates reduces to 2550 B Production Data This section applies our algorithms for discovering m patterns in data from a production computer network. Here our evaluation criteria are more subjective than the last section in that we must rely on the operations staff to detect whether we have false positives or false negatives Two temporal data sets are considered The first was collected from an insurance company that has events from over two thou sand network elements e.g routers hubs and servers The second was obtained from an outsourcing center that supports multiple application servers across a large geographical region Events in the second data set are mostly server-oriented \(e.g the CPU utilization of a server is above a threshold and those in the first relate largely to network events e.g 223link down\224 events Each data set consists of a series of records describing events received by a network console An event has three attributes of interest here host name which is the source of the event alarm type which specifies what happened e.g a connection was lost port up and the time when the event message was received at the network console We preprocess these data to convert events into items, where an item is a distinct pair of host and alarm type. The first data set contains approximately 70,000 events for which there are over 2,000 distinct items during a two week period The second data set contains over 100,000 events for which there are over 3,000 distinct items across three weeks We apply our algorithm for m-pattern discovery to both data sets, and compare the results to those for mining frequent item sets We fix minsup to be 3 so as to eliminate a pattern with only one or two instances, and we vary minp Our results are reported in Figures 4 and 5 for data sets 1 and 2 respectively These figures plot the total number of m-patterns the solid line and the number of border m-patterns the dashed line against minp Here a border pattern refers to a pattern that is not a sub set of any other pattern The x-axis is minp and the y-axis is the number of m-patterns discovered on a log scale Clearly minp provides a very effective way to select the strongest patterns in that the number of m-patters discovered drops dramatically as 14 0.1 0 0 0 0 0 J Fig 4 M-patterns of the first data set 223-\224 the number of m-patterns in the log scale 223..\224 the number of border m-patterns in the log scale x-axis is minp Fig 5 M-patterns of the second data set 222-\224 the number of m-patterns in the log scale 223..\224 the number of border m-patterns in the log scale x-axis is minp minp increases Many of these patterns have very low support levels For example we found 59 border m-patterns with length from 2 to 5 in the first data set when minp  0.7 Half of these patterns have support levels below 10 To compare with frequent patterns it suffices to set minp  0 since the algorithm reduces to mining frequent patterns Figure 6 reports frequent patterns found in the first data Here the x-axis is minsup and the y-axis is the log of the number of patterns found Note that the number of frequent patterns is huge-in ex cess of 1 veri when when minsup is 20 Examining the frequent patterns closely we find that most are related to items that occur frequently, not necessarily items that are causally re lated This is not surprise since the marginal distribution of items in our data is highly skewed Indeed a small set of items account for over 50 of total events and consequently these items tend to appear in many frequent patterns Beyond the quality of the results produced by mining for fre t no U a man Fig 6 Frequent patterns of the first data set 223-\224 the number of frequent patterns in the log scale 223..\224 the number of border frequent patterns in the log scale; x-axis is minp 415 


quent itemsets, there is an issue with scalability as well In Fig ures 4 and 5 minp 2 0.1 and minsup  3 Suppose we have minp  0 and minsup  3 so that we are mining for frequent itemsets but with a very low support threshold When we at tempt to run this case more than 30k candidates are generated at the third level. Not only does this result in very large compu tation time, we ultimately run out of memory and so are unable to process the data We reviewed the m-pattern found with the operations staff Many patterns are related to installation errors \(e.g a wrong parameter setting of a monitoring agent and redundant events e.g 11 events are generated to signal a single problem In addition a couple of correlations were discovered that are being studied for incorporating into event correlation rules for the real time monitoring We emphasize that over half of the m-patterns discovered have very low support levels Why are m-patterns common in these data One reason is a result of physical dependence that manifests itself as a set of events when a problem arises For example when a local area network LAN fails ail hosts connected to the LAN gen erate 223lost connection\224 events. Further, the same hosts generate these events if the same failure occurs This results in the mu tual dependence of these events This observation suggests that m-patterns can be used to construct signatures for problematic situations A second cause of m-patterns is redundant information For example a device may generate an event to report a problem it detects However, there may also be several management agents that monitor the same device and report the same problem This results in an m-pattern consisting of redundant events Identify ing such m-patterns can aid in constructing filtering rules that re move redundant events More details and insights can be found in 13][10 VI CONCLUSION Motivated by the need to discover infrequent but strongly correlated patterns we propose a new pattern a mutual depen dence pattern or a m-pattern M-patterns are defined in terms of minp the minimum probability of mutual occurrence of items in the pattern In contrast to one-way dependence as in asso ciation rules an m-pattern is characterized by a strong mutual dependency between any two of its subsets. That is if any part of an itemset occurs, the other part is very likely to occur as well Our results suggest that such strong mutual dependencies are common in computer networks such as due to interrelated components that are impacted by the same failure We develop an efficient algorithm for discovering m-patterns This is accomplished in three steps First we develop a linear algorithm to qualify an m-pattern based on an equivalence we prove Second we show that a level-wise search can be used for m-pattern discovery a technique that is possible since we prove that m-patterns are downward closed Last, we develop an effec tive technique for candidate pruning by establishing a necessary condition for the presence of an m-pattern A significant impact of the resulting algorithm is that it discovers strongly correlated itemsets that may occur with low support levels something that is difficult to do with existing mining algorithms Using synthetic data we demonstrate that our algorithm scales well as the data set increases in size We also show that the pruning algorithm provides considerable benefit, especially for small values of minp We apply our algorithm to data collected from two produc tion computer networks The results show that there are many m-patterns, many of which of have very low support levels \(e.g fewer than 10 occurrences\Attempting to discover these pat terns using A-priori requires a very small value for support lev els, which results in an explosion of candidates that overruns the memory of the computer we used We further develop frequent m-patterns that are defined in terms of both minsup and minp We show that this is a more general pattern That is, when minp  0 this pattern is equiv alent to frequent itemsets and when minsup  0 frequent m patterns become m-patterns ACKNOWLEDGMENT The authors would like to thank Chang-shing Pemg for help ful discussions REFERENCES C Agganval C Agganval and V.V.V Parsad Depth first generation of long patterns In lnt\222l Conf on Knowledge Discover rind Drm Mining 2000 R Agrawal T Imielinski and A Swami Mining association rules be tween sets of items in large databases In Proc fj\222VLDB pages 207-216 1993 R Agrawal and R. Srikant Fast algorithms for mining association rules In Proc of VLDB 1994 R. Agrawal and R Srikant Mining sequential patterns In Proc of the I Ith Int 221I Conference on Datu Engineering Taipei Taiwan 1995 R Bayardo, R. Agrawal and D Gunopulos Constraint-based rule mining in large dense database In ICDE 1999 R.J Bayardo. Efficiently mining long patterns from database In SIGMOD pages 85-93 1998 S Brin, R. Motiwani and C Silverstein Beyond market baskets Gen eralizing association rules to correlations Datu Mining and Knowledge Discovery pages 39-68 1998 Edith Cohen Mayur Datar Shinji Fujiwara Aristides Gionis Piotr Indyk Rajeev Motwani, Jeffrey D Ullman and Cheng Yang Finding interesting associations without support pruning In ICDE pages 489-499 2000 J Han J Pei and Y Yin Mining frequent patterns without candidate generation \(pdf In Proc 2000 ACM-SIGMOD Int Cunf on Munugement of Data SIGMOD\222OO Dallas TX 2000 J.L Hellerstein and S Ma Mining event data for actionable patterns In lnternutional Conference for the resource manugement  perfiormance evaluation of enterprive computing systems 2000 B Liu and W Hsu Post-analysis of learned rules In AAA/-96 pages 828-834 1996 Bing Liu Wynne Hsu and Yiming Ma Pruning and summarizing the dis covered associations In Proceedings of the ACM SICKDD International Conjerence on Knowledge Discovery  Datu Mining pages 15 18 1999 S Ma and J.L Hellerstein Eventbrowser A flexible tool for scalable analysis of event data In DSOM\22299 1999 S Ma and J.L Hellerstein Mining partially periodic event patterns In ICDE pages 205-214,2001 H Mannila H Toivonen and A Verkamo. Discovery of frequent episodes in event sequences Data Mining mid Knowledge Discover 1\(3 1997 B Padmanabhan and A Tuzhilin A belief-driven method for discovering unexpected patterns In KDD-98 1998 J Pei and J Han Can we push more constraints into frequent pattern mining In CorS on Knowledge Discover rind Datu Mining KDD\222OO Boston MA 2000 H Toivonen Discovery of frequent patterns in large data collections 1996 Technical Report A-1996-5 Department of Computer Science Uni versity of Helsinki 416 


In Figures 10 and 11 we see MAFIA is approximately four to five times faster than Depthproject on both the Connect-4 and Mushroom datasets for all support levels tested down to 10 support in Connect-4 and 0.1 in Mushroom For Connect-4 the increased efficiency of itemset generation and support counting in MAFIA versus Depthproject explains the improvement Connect 4 contains an order of magnitude more transactions than the other two datasets 67,557 transactions amplifying the MAFIA advantage in generation and counting For Mushroom the improvement is best explained by how often parent-equivalence pruning PEP holds especially for the lowest supports tested The dramatic effect PEP has on reducing the number of itemsets generated and counted is shown in Table 1 The entries in the table are the reduction factors due to PEP in the presence of all other pruning methods for the first eight levels of the tree The reduction factor is defined as  itemsets counted at depth k without PEP   itemsets counted at depth k with PEP In the first four levels Mushroom has the greatest reduction in number of itemsets generated and counted This leads to a much greater reduction in the overall search space than for the other datasets since the reduction is so great at highest levels of the tree In Figure 12 we see that MAFIA is only a factor of two better than Depthproject on the dataset Chess The extremely low number of transactions in Chess 3196 transactions and the small number of frequent 1-items at low supports only 54 at lowest tested support muted the factors that MAFIA relies on to improve over Depthproject Table 1 shows the reduction in itemsets using PEP for Chess was about an order of magnitude lower compared to the other two data sets for all depths To test the counting conjecture we ran an experiment that vertically scaled the Chess dataset and fixed the support at 50 This keeps the search space constant while varying only the generation and counting efficiency differences between MAFIA and Depthproject The result is shown in Figure 13 We notice both algorithms scale linearly with the database size but MAFIA is about five times faster than Depthproject Similar results were found for the other datasets as well Thus we see MAFIA scales very well with the number of transactions 5.3 Effects Of Compression To isolate the effect of the compression schema on performance experiments with varying rebuilding threshold values we conducted The most interesting result is on a scaled version of Connect-4, displayed in Figure 14 The Connect-4 dataset was scaled vertically three times so the total number of transactions is approximately 200,000 Three different values for rebuilding-threshold were used 0 corresponding to no compression 1 compression immediately and all subsequent operations performed on compressed bitmaps\and an optimized value determined empirically We see for higher supports above 40 compression has a negligible effect but at the lowest supports compression can be quite beneficial e.g at 10 support compression yields an improvement factor of 3.6 However the small difference between compressing immediately and finding an optimal compression point is not so easily explained The greatest savings here is only 11 at the lowest support of Conenct-4 tested We performed another experiment where the support was fixed and the Connect-4 dataset was scaled vertically The results appear in Figure 15 The x-axis shows the scale up factor while the y-axis displays the running times We can see that the optimal compression scales the best For many transactions \(over IO6 the optimal re/-threshold outperforms compressing everywhere by approximately 35 In any case both forms of compression scale much better than no compression Compression on Scaled ConnectAdata Compression Scaleup Connectldata ALL COMP 0 5 10 15 20 25 30 100 90 80 70 60 50 40 30 20 10 0 Min Support  Scaleup Factor Figure 14 Figure 15 45 1 


6 Conclusions We presented MAFIA an algorithm for finding maximal frequent itemsets Our experimental results demonstrate that MAFIA consistently outperforms Depthproject by a factor of three to five on average The breakdown of the algorithmic components showed parent-equivalence pruning and dynamic reordering were quite beneficial in reducing the search space while relative compressiodprojection of the vertical bitmaps dramatically cuts the cost of counting supports of itemsets and increases the vertical scalability of MAFIA Acknowledgements We thank Ramesh Agarwal and Charu Aggarwal for discussing Depthproject and giving us advise on its implementation We also thank Jayant R Haritsa for his insightful comments on the MAFIA algorithm and Jiawei Han for providing us the executable of the FP-Tree algorithm This research was partly supported by an IBM Faculty Development Award and by a grant from Microsoft Research References I R Agarwal C Aggarwal and V V V Prasad A Tree Projection Algorithm for Generation of Frequent Itemsets Journal of Parallel and Distributed Computing special issue on high performance data mining to appear 2000 2 R Agrawal T Imielinski and R Srikant Mining association rules between sets of items in large databases SIGMOD May 1993  R Agrawal R Srikant Fast Algorithms for Mining Association Rules Proc of the 20th Int Conference on Very Large Databases Santiago Chile, Sept 1994  R Agrawal H Mannila R Srikant H Toivonen and A 1 Verkamo Fast Discovery of Association Rules Advances in Knowledge Discovery and Data Mining Chapter 12 AAAVMIT Press 1995 5 C C Aggarwal P S Yu Mining Large Itemsets for Association Rules Data Engineering Bulletin 21 1 23-31 1 998 6 C C Aggarwal P S Yu Online Generation of Association Rules. ICDE 1998: 402-41 1 7 R J Bayardo Efficiently mining long patterns from databases SICMOD 1998: 85-93 8 R J Bayardo and R Agrawal Mining the Most Interesting Rules SIGKDD 1999 145-154 9 S Brin R Motwani J D Ullman and S Tsur Dynamic itemset counting and implication rules for market basket data SIGMOD Record ACM Special Interest Group on Management of Data 26\(2\1997 IO B Dunkel and N Soparkar Data Organization and access for efficient data mining ICDE 1999 l 11 V Ganti J E Gehrke and R Ramakrishnan DEMON Mining and Monitoring Evolving Data. ICDE 2000: 439-448  121 D Gunopulos H Mannila and S Saluja Discovering All Most Specific Sentences by Randomized Algorithms ICDT 1997: 215-229 I31 J Han J Pei and Y Yin Mining Frequent Pattems without Candidate Generation SIGMOD Conference 2000 1  12 I41 M Holsheimer M L Kersten H Mannila and H.Toivonen A Perspective on Databases and Data Mining I51 W Lee and S J Stolfo Data mining approaches for intrusion detection Proceedings of the 7th USENIX Securiry Symposium 1998 I61 D I Lin and Z M Kedem Pincer search A new algorithm for discovering the maximum frequent sets Proc of the 6th Int Conference on Extending Database Technology EDBT Valencia Spain 1998 17 J.-L Lin M.H Dunham Mining Association Rules: Anti Skew Algorithms ICDE 1998 486-493 IS B Mobasher N Jain E H Han and J Srivastava Web mining Pattem discovery from world wide web transactions Technical Report TR-96050 Department of Computer Science University of Minnesota, Minneapolis, 1996 19 J S Park M.-S Chen P S Yu An Effective Hash Based Algorithm for Mining Association Rules SIGMOD Conference 20 N Pasquier Y Bastide R Taouil and L Lakhal Discovering frequent closed itemsets for association rules ICDT 99 398-416, Jerusalem Israel January 1999 21 J Pei J Han and R Mao CLOSET An efficient algorithm for mining frequent closed itemsets Proc of ACM SIGMOD DMKD Workshop Dallas TX May 2000 22 R Rastogi and K Shim Mining Optimized Association Rules with Categorical and Numeric Attributes ICDE 1998 Orlando, Florida, February 1998 23 L Rigoutsos and A Floratos Combinatorial pattem discovery in biological sequences The Teiresias algorithm Bioinfomatics 14 1 1998 55-67 24 R Rymon Search through Systematic Set Enumeration Proc Of Third Int'l Conf On Principles of Knowledge Representation and Reasoning 539 550 I992 25 A Savasere E Omiecinski and S Navathe An efficient algorithm for mining association rules in large databases 21st VLDB Conference 1995 26 P Shenoy J R Haritsa S Sudarshan G Bhalotia M Bawa and D Shah: Turbo-charging Vertical Mining of Large Databases SIGMOD Conference 2000: 22-33 27 R Srikant R Agrawal Mining Generalized Association Rules VLDB 1995 407-419 28 H Toivonen Sampling Large Databases for Association Rules VLDB 1996 134-145 29 K Wang Y He J Han Mining Frequent Itemsets Using Support Constraints VLDB 2000 43-52 30 G I Webb OPUS An efficient admissible algorithm for unordered search Journal of Artificial Intelligence Research 31 L Yip K K Loo B Kao D Cheung and C.K Cheng Lgen A Lattice-Based Candidate Set Generation Algorithm for I/O Efficient Association Rule Mining PAKDD 99 Beijing 1999 32 M J Zaki Scalable Algorithms for Association Mining IEEE Transactions on Knowledge and Data Engineering Vol 12 No 3 pp 372-390 May/June 2000 33 M. J. Zaki and C Hsiao CHARM An efficient algorithm for closed association rule mining RPI Technical Report 99-10 1999 KDD 1995: 150-155 1995 175-186 3~45-83 1996 452 


