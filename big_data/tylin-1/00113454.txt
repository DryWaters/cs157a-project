A Rule-based Language for Deductive Object-Oriented Databases A M Alashqur S.Y.W su H Lam Database Systems Research and Development Center Computer and Information Sciences Department University of Florida Gainesville FL 3261 1 ABSTRACT The object-oriented view of an application world can be represented in the form of a network of chses and associations which can be aggregation or generalization associations At the exlensional level objects of merent classes can be related associated with each other forming patterns of object associations In this paper we present a deductive rule-baed language for Object-oriented dorabases A deductive rule in this language derives new 
patterns of associations among objects of some selected classes these objects fall in cenain base or other derived patterns The patterns of object associations derived by a rule are held in a subdatabase whose intension consists of some selected classes and their associarions In other wordr the structure of a derived subdatabase is represented using the structural constructs provided by the object-oriented data model and hence can be un@ormly operated on by other rules to further derive new subdatabases Therefore the world of subdatabases is closed under this rule-baed language 1 Introduction Merging expert systems ES and database management systems DBMS technologies has drawn much 
interest in recent years GAL84 ULL85 ST087 RASSS MAISS This interest is motivated mainly by the need for future ESs that deal with large amounts of data as well as the need for future DBMSs that have deduction capabilities and therefore can support many of the new database application areas such as CAD/CAM office automation and multi-media databases Several efforts have been made to design and integrate a deductive PROLOG-based rule language with a relation4 DBMS JAR84 CHAM VAS84 ULL85 CER86 ST087 MAI88 DEL881 In this approach deductive rules are declared in the form of a logic program against base relations in the database Each rule defines a virtual relation that is derived from other base 
and/or virtual relations The integration of such PROLOG-based languages with relational databases is facilitated mainly by the fact that a relational database is closed under PROLOG-like deductive rules in the sense that the input to a deductive rule i.e the relations that the rule operates on can be one or more relations and its output is always a relation In other words the output of a rule still belongs to the world of relations i.e it is modeled using the relational data model and therefore can be uniformly operated on by other deductive rules to further derive new relations and so on It is our belief that a deductive rule-based language that is designed for any data model has to preserve the closure property with respect to that 
data model meaning that the derived data CH2840-7/oooo/oos8$01.00 0 1990 IEEE must be structured and modeled using the same data model with which the base data are modeled Along a diffexent research line the database technology itself has been actively moving towards the Object-oriented 00 approach which is more appropriate than the relational approach for supporting the new database application areas mentioned above HAMII BAT85 BAN87 FIS87 I FOR88 SU891 Semantic and 00 data models can capture much more of the semantics of these application domains in a natural way The term 00 data model is used in this paper to refer to a data model 
that is structurally and/or behaviorally object-oriented DIT861 A structurally 00 data model is one that encompasses at least the following characteristics 1 It allows for defining aggregation hierarchies 2 It allows for defining generalization hierarchies and 3 It supports the unique identification of objects that is each object is assumed to have a unique object identifier OD The 00 view of an application world is represented in the form of a network of classes and associations which can be aggregation or generalization associations. Object classes can be either primitive classes whose instances are of simple data types e.g integer, string real 
or non-primitive classes whose instances represent real world objects e.g Part Employee At the extensional level instances of different classes can be related associated with each other forming patterns of object associations In a previous work ALA89al we introduced the 00 query language OQL which is a high-level non-procedural and set-oriented language that allows the users to query the database by specifying the desired patterns of object associations in their queries A behaviorally object-oriented data model on the other hand is one in which operations that describe the behavior of the objects of a class can be defied and registered with that Class For a database system 
to be more appropriate for supporting the new database application areas cited above the two so far independent, research lines i.e deductive databases and 00 databases\need to be merged leadiig to deductive 00 databases This can best be done by designing a deductive rule-based language that preserves the closure property with respect to 00 data models i.e models that support aggregation, generalization and the unique identification of objects In this case the output of a rule must be represented using the constructs of the 00 data model in order to make it possible for such an output to be operated on uniformly by other rules to further produce other derived data and thus form inference chains 58 


In this paper we present the design and implementation techniques of a deductive rule-based language for 00 databases A deductive rule in this language derives new patterns of associations among objects of some selected classes if these objects fall in certain 223base\224 or other derived patterns The pattems of object associations derived by a rule are held in a subdatabase see Sections 3 and 4 whose intension i.e structure consists of some selected classes and their associations In other words the structure of a derived subdatabase is represented using the structural constructs provided by an 00 data model and hence can be unifomly operated on by other rules to further derive new subdatabases Therefore the world of subdatabases is closed under this rule-based language To our knowledge work on deductive rule-based languages of this kind for 00 databases has not been reported in the literature This paper is organized as follows After this introduction we briefly describe the 00 view of a University application domain which will be used in later sections for defining some example deductive rules In Section 3 we briefly describe the notion of a subdatabase and the 00 query language OQL Some of the constructs of OQL are used by the deductive rule-based language to be introduced in Section 4 In Section 5 we describe the transitive closure operation as can be performed in our language. The control strategies used for evaluating deductive rules are described in Section 6 Some concluding remarks are given in Section 7 2 The Object-oriented View of Databases We shall describe first the 00 view of a university database as modeled by the 00 semantic association model OSAM SU89 The university schema shown in Figure 2.1 is then used in the remainder of this paper as the application domain for which example deductive rules are given The concepts introduced in this paper are applicable to any 00 data model and not limited to the OSAM model A database schema is represented in OSAM as a network of associated \(inter-related\object classes. Graphically, object classes are represented as nodes and associations among object classes are represented as links The resulting diagram is called the Semantic Diagram or S-diagram In OsAM there are two types of object classes Entity object classes E-class and Domain object classes Dclass which are represented in the schema of Figure 2.1 as rectangular and circular nodes respectively. The sole function of a D-class is to form a domain of values of a simple data type e.g integers strings etc from which descriptive attributes of objects draw their values An E-class on the other hand forms a domain of objects which occur in an application\222s world e.g Faculty Department etc Each object of an E class is represented by a system-generated unique object identifier OD There are five types of links associations in OSAM Two of these association types appear in Figure 2.1 namely Aggregation A and Generalization G which are also recognized in several other semantic and 00 data models A class can have several types of links and more than one link of each type emanating from it In the S-diagram links of the same type that emanate from a class are grouped together and labeled by the letter that denotes the association type As an example in Figure 2.1 the Eclass Person has two types of links Aggregation links connecting Person to the D classes SS and Name and Generalization links to the E classes Student and Teacher i.e Student and Teacher are subclasses of the superclass Person An aggregation link represents an attribute and has the same name as the class it COM~CU to unless specified otherwise e.g the link labeled Major which emanates from the class Student has a different name from the class it COM~C~S to Aggregation links that emanate from an Eclass and connect to D-classes are referred to as the scriDtive attributes of that class e.g the attribute section of the class Section A class inherits all the aggregation associations that connect to or emanate from its superclasses Figure 2.2 shows the actual view of the class Research Assistant RA in which all the associations inherited by RA from its super classes are explicitly represented A detailed description of the OSAM model can be found in SU89 3 Subdatabases and the 00 Query Language OQL In this section we first give the definition of a subdatabase as presented in in Section 4 we extend this definition by introducing the induced generalization association construct which enables a deductive rule to operate on a set of subdatabases rather than on a single subdatabase Next we briefly describe the object-oriented query language OQL The motivation behind presenting OQL here is that some of the OQL constructs will also be used as part of the deductive rule-based language to be introduced in Section 4 and an example OQL query against the derived data will be given in that section 3.1 Subdatabases A subdatabase is a portion of the original database and consists of two parts an intensional association pattern and a set of extensional association patterns The intensional association pamm of a subdatabase is represented as a network of E-classes and their associations For example Figure 3.1 shows a certain subdatabase SDB of the original database of Figure 2.1 Figure 3.la represents the intensional association pattern of this subdatabase which consists of the classes Teacher, Section and Course and their associations An extensional association pattern is a network of instances and their associations that belong to the classes and association types of the intensional association pattem The set of extensional patterns of a subdatabase can be represented in the fom of an extensional diagram Figure 3.lb shows a possible extensional diagram for the subdatabase SDB where the t\222s s\222s and c\222s are the OIDs for objects from the classes Teacher Section and Course respectively The intexconnection of t3 and s4 in the figure is an example of an extensional pattem which records the fact that object t3 is associated with object s4 Teacher t3 is teaching Section s4 In addition to the graphical representation an extensional pattem can be represented as a tuple of OIDs For example tls2,cl c3 and s5,c4 are some of the extensional pattems that appear in the subdatabase SDB Figure 3.lb The two extensional patterns a2,s3,cl and t2,s3,c2 contain the same Teacher and Section instances but different 59 


Figure 2.1  University Schema 221p Fgue 22 Class RA with all lhe inherited As\224 WY RW-d Fgw 3.la The Intmskd Patlern Ot a Wxkt&a8e SDB 


Course instances In the definition of a subdatabase as given in ALA89a it was assumed that 9 the descriptive attributes of a class that appears in a subdatabase also appear with it by default in the subdatabase However the descriptive attributes are not shown in Figure 3.la to keep the figure simple An extensional pattern type is defined as the common template that is shared by several extensional patterns in a subdatabase A pattem type is denoted by a tuple of class names For example aeacher Section Course is one of the extensional pattem types that exist in Figure 3.lb which has as instances all the extensional patterns that contain Teacher Section and Course objects i.e the extensional patterns tl,s2,cl t2,s3,cl and t2,s3,cb On the other hand the extensional pattem t3,s4 whose Course component is Null since the pattem does not contain any Course object is of the type Oeacher,Section The five extensional pattem types present in the extensional diagram of Figure 3.lb are Teacher,Section Course 4eacher,Section Section,Course Teacher and coufie 3.2 The Object-oriented Query Language OQL The philosophy underlying OQL is to allow the user to specify first the desired subdatabase by specifying its intensional pattem and the set of extensional pattem p that are of interest and then the operation\(s to be performed on the classes of the subdatabase. The search engine of the underlying 00 DBMS would establish the subdatabase by identifying all the extensional patterns that belong to the specified types and then perform the operation\(s The implementation of OQL on a SUN workstation is reported in a master's thesis TY88 A query block in OQL consists of a Context clause and an Operation clause The Context clause has two optional subclauses: a Where subclause and a Select subclause This structure is shown below context association pattern expression operation\(s object clasges where conditions select object classes and/or attributes In the context clause the user specifies a desired subdatabase by specifying its intensional pattem and extensional pattem types of interest both are specified in the association pattem expression A linear association pattem expression has the form Class1 intra-class op Class2 intra-class conditions op Class3 inua-class I where op is one of the association pa operators Each operator separates two Eclasses that are directly associated in a schema The intra-class conditions enclosed in brackets following a class name are optional and are expressed in the form of predicates that involve the descriptive attributes of that class 1 We note that Section 53 is related to more than one Course instance and Section s4 is not related to any Coursc instance Naturally thae is a constraint on the daubase that restricts thc mapping beoreen Section and Course to Nl and another Non-null constraint on the agpgstMn sssociation of Course with Section We sume that these dts M waived here m order to describe themostgdase The Where subclausg further causes the extensional patterns that do not satisfy some conditions to be dropped from the Context subdatabase the subdatabase defined by the Context expression The conditions that can be specified in the Where subclause are inter-class comparison conditions which are comparisons between some descriptive attributes of two classes if these attributes are type comparable and/or comparison conditions that involve aggregation functions e.g COUNT The Select subclause identifies the descriptive attributes and/or classes in the Context subdatabase that are to be operated on by the operation\(s specified in an operation clause It eliminates attributes and classes that are not relevant to the operations An operation in the 0-Deration can be either a system-defined data manipulation operation e.g Display Update or Print or a user-defined operation e.g Rotate Order-part or Hireemployee If the Display Print operation is specified in the operation clause it causes the values of the descriptive attributes identifed by the Select subclause to be displayed printed in a tabular form The operators that can be used in the association pattem expression of the Context clause are the association operator and the non-association operator In the following we give a brief description of the association operator only which will be used by the rule-based language to be introduced in Section 4 In the remainder of this paper capital letters are used to denote E-classes A B  and small letters with an integer appended to each letter are used to denote objects e.g al a2  and bl b2  are objects that belong to the classes A and B respectively When the association operator  is applied to two directly associated E-classes A and B in a database i.e the expression A  B it rems a subdatabase whose intensional pattem consists of the two classes A and B and their association The resulting subdatabase contains also the set of extensional pattems drawn from the operand database such that each extensional pattem contains objects of A and B Le extensional patterns that are of the type A,B B objects that are not associated with any A object and A objects that are not associated with any B object in the operand database are not retained in the result. The following example queries illustrate the use of the association operator Queq 3.1 Display the names of the teachers who teach some sections and the section#'s of these sections context Teacher  Section display If the Context expression of this query is applied to the subdatabase SDB of Figure 3.1 it will return the subdatabase shown in Figure 3.2 The intensional pattem of this subdatabase consists of the classes Teacher and Section and their association the descriptive attributes of the classes Teacher and Section are also represented in the figure The set of extensional patterns of the resulting subdatabase is tl,sb t2,s3 t3,s4 The extensional pattem t4 or t4 Nub is not included in the result because its Section component is Null similarly the pattem s5 is not included The result of the Display operation is a binary select name section 61 


table in which each tuple contains a name value and a seCtio value The finition of the association operator can be easily generalized to the case when the association paaem expression contains more than two classes For example the expression A  B  C returns the extensional patterns that are of the type A$,C It is noted here that one can defii a single extensional pattem type using the association operator A mechanism for defining a richer variety of extensional pattem types in a single expression is described in Section 5 Query 3.2 Print the Department names for all departments that offer 6OOO level courses that have current offerings sections Also print the titles of these courses and the textbooks used in each section context Depamnent  Course aooO  c c 70001  Section select name title textbook print In this query the intra-class condition on the C attribute of Course is enclosed in brackets following the class name in the Context expression We note here that the association operator can be used between any two classes whether they are connected by a generalization or an aggregation association The types of associations between classes are explicitly defined in the schema and restating these association types in queries is unnecessary The query processor of an 00 DBMS can make use of the type information stored in the dictionary to properly interpret the queries and enforce the relevant semantics and constraints For example a link that exists between an instance of the class TA and an instance of the class Grad of Figure 2.1 is an identity link In other words the semantics implied by the generalization association here is that the two instances are actually two diffmnt perspectives of the same real world object OQL makes full use of the inheritance property of the generalization association Therefore the expression RA Section is a legal expression since the class RA inherits the zggregation association with Section Figure 2.2 along a unique generalization path However in some cases a class inherits the status of being related to another class along different generalization paths For example the class TA inherits the status of being related to Section from both Teacher and Grad with each of them having its distinctive meaning In this case at least one of the classes along the intended generalization path has to be explicitly referenced in the association pattem expression to resolve the ambiguity Thus the ambiguity in the expression TA  Section is resolved by using either one of the two expressions TA  Grad  Section or TA  Teacher  Section 4 The 00 Deductive Rule-based Language Our rule-based language can be used to derive new subdatabases from other existing or derived subdatabases and therefore the world of subdatabases is closed under this language A derived subdatabase is called the target subdatabase and the subdatabases used to derive it are called the source subdatabases A target subdatabase that is derived by a rule can be a source subdatabase of another rule We refer to a class in a target subdatabase as a target class The class in the sou~ce subdatabase from which a target class is derived is called the source class The set of instances of a target class is a subset of the set of instances of the source class from which it is derived Before introducing our deductive rule-based language we first extend the definition of a subdatabase as given in ALA89al see Section 3 by introducing the induced generalization association construct Our objective is to provide a conceptual description for the relationships associations that may exist between classes even if they belong to different subdatabases This enables using the association operator between any two associated classes that belong to two different subdatabases and therefore a rule can derive a new subdatabase out of more than one source subdatabases 4.1 The Induced Generalization Association Between every target class and its source class there is a generalization association that is induced by the deductive rule which emanates from the source class and connects to the target class Therefore a target class inherits all the aggregation associations of its source class which establishes the inter-subdatabase connections as shown in the following example Let SD be a subdatabase whose intensional pattem is as shown in Figure 4.1 SD could have been derived from the original database by a deductive rule Let SDI and SD2 be two subdatabases \(Figure 4.1 that are derived from SD by two rules Class A that appears in SDI which we refer to as SD1:A i.e by qualifying the class name with the subdatabase name using a colon is derived from the corresponding class in SD i.e SD:A Therefore there is an induced generalization association that emanates from the source class SDA and connects to the target class SDI:A as shown in the figure Similarly there is an induced generalization association emanating from SD:D and connecting to SDTD and two induced generalization associations emanating from SD:C and connecting to the classes SD1:C and SD2:C Each of the classes of SDI and SD2 inherits all the aggregation associations of its superclass in SD For example SD1:A inherits the links that connect to and the links that emanate from its superclass SD:A which effectively means that there are aggregation associations between SD1:A and each of the classes SD:B and SD:C The inherited association that connects SDI:A to SD:C is further inherited by SD1:C which is a subclass of SD:C Since this association that connects SD1:A to SD1:C is local intemal to the subdatabase SDI it is explicitly represented in its intensional pattem thus an intensional association pattem of a subdatabase consists of the classes that appear in the subdatabase and their associations Similarly the inherited association that emanates from SD1:A and connects to SD:C is further inherited by SDTC This means that there is an inherited association between the two classes SDI:A and SD2:C which belong to two different subdatabases Thus the inheritance property of the induced generalization association establishes the connections between classes from 62 


different subdatabases Figure 4.2 shows an equivalent representation to that of Figure 4.1 where all the aggregation associations that the class SD1:A inherits from its superclass SD:A an explicitly represented By considering the definition of the induced generalization association construct as introduced above, each of the classes of the subdatabase SDB of Figure 3.1 inherits all the aggregation associations of its source classes in the original database of Figure 2.1 For example the class SDB:Course inherits the aggregation associations to the Eclasses Department Transcript and Course through the F'rereq association and to the Dclasses C Title and Credit-hours from its super class Course in the original database In the remainder of this paper if a class name is referenced in any expression without qualifying it by a subdatabase name the base class i.e the class that appears in the original database is assumed The functionality of the association operator  can now be extended in such a way that it can be used to operate on two classes even if they belong to two different subdatabases provided that there is an inherited association between them For example the expression SD1:A  SD2C is a legal association pattern expression against the classes of Figure 4.2 which creates a new subdatabase say X that consists of the classes A and C The classes X.A and X:C are subclasses of the classes SD1:A and SD2:C respectively Only the instances of the classes A and C that are associated and that appear in the subdatabases SD1 and SD2 respectively will appear in the subdatabase X 4.2 Syntax and Semantics of Deductive Rules A rule in OUT 00 rule-based language has an If-Then structure as follows if context association pattern expression then subdatabase-id \(classes The Context clause and its optional Where subclause are the same as described in Section 3 above The subdatabase-id in the Then clause is a unique name to be given to the derived subdatabase The intensional pattern of the derived subdatabase consists of the classes referenced in the argument list following the subdatabase-id in the Then clause These classes should be a subset of the classes referenced in the association pattern expression of the If clause Other unreferenced classes will not be retained in the derived subdatabase The extensional pattems on the other hand are derived from the extensional panems that satisfy the conditions of the If clause and its Where subclause In other words the Then clause derives new patterns of object associations among objects of some specified classes if these objects exist in some base or other derived association patterns The following rule provides a simple example Derive the subdatabase Teachercourse in which only the classes Teacher and Course appear such that a Teacher instance teaches a Course instance i.e teaches one of the sections of the course If context Teacher  Section  Course then Teacher-course \(Teacher, Course where conditions If this rule is applied to the Subdatabase SDB of Figure 3.1 it returns the subdatabase Teacher-course whose intensional pattem and set of extensional patterns are shown in Figure 4.3 The intensional pattem of Teacher-course consists of the classes Teacher and Course only The class Section is not rerained in this subdatabase because it is not referenced in the argument list following the subdatabase name in the Then clause Since Teacher and Course in the operand database are not directly associated but are associated through Section a new direct association is derived between them in the resulting subdatabase \(Figure 4.3a At the extensional level new direct links are inferred between the instances of Teacher and Course In other words the derived subdatabase contains a set of extensional pattems such that an extensional pattem consists of a Teacher instance and a Course instance with a direct link between them provided that the two instances satisfy the associativity condition that is specified in the If clause i.e the two instances must coexist in the operand database in an extensional pattem that also contains a Section instance For example a direct association is derived between the instances tl and cl as shown in Figure 4.3b because tl and cl are associated through s2 in the operand subdatabase SDB of Figure 3.1 If a target class in a derived subdatabase is to inherit only a subset of the descriptive attributes of its source class then these attributes should be listed in brackets following the class name in the Then clause otherwise all attributes are inherited i.e the default is all atmbutes For example if the class Teacher in the subdatabase Teachercourse is to inherit only the attributes SS and Degree the above rule will be expressed as If context Teacher  Section  Course then Teacher-course \(Teacher SS Degree Course In this case the amibute Name will not be accessible from the class Teachercourse:Teacher The following are some additional rules defined for the University database of Figure 2.1 Each of these rules derives a new subdatabase and illustrates certain aspects of the semantics of our rule-based language R2 If the total number of students who are enrolled in a se that belongs to the CIS department is greater than 39 then suggest offering the course in the next semester If context Department name  CIS  Course  where COUNT Student by Course  39 then Suggest-offer Course COUNT is an aggregation function that returns the number of students associated with each course i.e via some sections The If clause identifies the set of extensional patterns that satisfy the association pattem expression and the condition stated in the Where subclause In other words this set of extensional pattems does not include the extensional pattems that contain courses with less than forty enrolled students The derived subdatabase Suggest-offer contains only the class Course together with the Course instances that Section  Student 63 


I._  I    I     I    l._-.l---..l"l-"l Figure 4.2 The AuwcWonr inherksd by SDI A frwn SDA 64 


satisfy the conditions stated in the If clause i.e the instances that appear in the extensional patterns identifii by the If clause\Because the closure property is preserved this subdatabase can be operated on by other deductive rules in the same manner to further derive new subdatabases as shown by the following rule If for any department the number of courses that are suggested to be offered next semester is pater than 20 courses then the department needs more resources i.e budget rooms, labs etc If context Department  Suggest-0ffer:Course then Deps-need-res \(department COUNT here reaun for each department the number of courses that belong to it and that are suggested to be offered as determined by the previous rule Since the class Course of the subdatabase Suggest-offer is a subclass of the base class Course i.e there is an induced generalization association between them it inherits the aggregation link to the base class Department hence the expression Department  Suggest-0ffer:Course is a legal expression This rule derives a new subdatabase called Deps-need-res departments that need resources The source subdatabases from which this subdatabases is derived are the original database and the Suggest-offer subdatabase  R4 If a graduate student is currently teaching a course that is suggested to be offered then he/she may teach the same course in the next semester where COUNT Suggest-0ffer:Course by Depamnent  U If context TA  Teacher  Section  Suggest-0ffer:Course then may-teach TA Course A graduate student may teach an undergraduate course i.e c c 5OOO if hdshe has taken the course and got a grade of B or more if context Grad  Transcript grade  B  Course c c 50001 then may-teach \(Grad, Course Rules R4 and R5 derive extensional patterns into the same subdatabase May-teach but based on different conditions Thus if both rules are applied May-teach will contain the union of the two sets of extensional patterns derived by the two rules 4.3 Querying the Derived Data Once the deductive rules that derive new subdatabases are defined the classes of the derived subdatabases can be referenced inlissociatl on pattern expressions in any OQL query in the normal way For example the following is an OQL query that operates on the base classes Faculty and Advising and on the class TA of the subdatabase May-teach hey 4.1 For the teaching assistants who may teach a  course in the next semester, have advisors and whose GPA's are less than 3.5 display their names and their advisors names context Faculty  Advising  May-Teach:TA GPA  3.51 select TA name Faculty display The class May-teach:TA is a subclass of the base class TA which in tun is a subclass of the class Grad Thus May teach:TA inherits the aggregation association with Advising from Grad and consequently the expression Advising  May-teach:TA in the above query is legal As is the case in the above query an attribute that appears in the Select subclause has to be qualified by its class name if it is not unique among the attributes of the classes that are referenced in the Context clause This is done by enclosing the attribute name in brackets following the class name e.g TA  in the above query In the backward chaining strategy backward and forward chaining strategies are described in Section 6 this query is evaluated as follows Since TA is referenced in the query in the context of May-teach, rules R4 and R5 will be triggered for execution to derive the subdatabase May-teach But in order to derive May-teach the subdatabase Suggest-offer which is referenced by rule R4 must be derived This causes rule R2 that derives Suggest-offer to be triggered for execution R2 does not refer to any other derived subdatabase hence the expressions of R2 are evaluated against the base classes The result is then fed to rule R4 that participates in deriving May-teach similarly the expressions of R5 are evaluated against the base classes The subdatabase May-teach is then used to evaluate the given query 5 Transitive Closure The transitive closure operation is expected to be a fundamental operation in future database systems and knowledge systems Before describing how it can be performed in our language we describe a mechanism for defining several extensional pa types in a single association pattern expression This mechanism is then used in deductive rules that perform the transitive closure operation 5.1 Association Pattern Subexpressions We allow more than one extensional pattern type to be identified by a single association pattern expression by enclosing a subexpression of it inside braces This subexpression identifies a certain extensional pattem type For example the expression A  B  C  D returns the subdatabase whose intensional pattern consists of the referenced four classes and whose set of extensional patterns includes all patterns that are of the types A,B,C,D and dC In other words this expression means to select both the instances of A,BC and D classes that are connected associated all the way through as well as those instances of B and C that are connected to each other but not necessarily connected to the instances of A and/or B The braces around B  C capture the semantics of the Outerjoin concept introduced in COD79 If in the above expression an extensional pattem of the type d.C appears in the resulting subdatabase as part of a larger pattern of the type A,B,C,D it will not appear independently in that resulting subdatabase For example if the original database contains only the two patterns 65 


al.b5,c5,d5 and a3,b2,c2 then the expression A  B  C  D returns the extensional paaerns al,b5,cS,d5 and cb2,cb The extensional pattem b5,c5 will not appear independently in the result since it already appears as a part of the extensional pattem al,b5,c5,d5 In gem?ral an extensional paaem of acertain specified type will not appear indepen&.ntly in the result if it is part of a larger extensional pa Subexpressions can be nested to several levels For example the expression A  B  C  D identifies the extensional pattern types A AB AB,c and ABCD Query 5J Display the SM's of dl graduate students whether they have advisors or not and for dmsg graduate students who have advisors display their advisors names context  Grad   Advising  Faculty select Grad SM Faculty name display The result of the display operation is a binary table each tuple of which contains a Grad's Ss and either a faculty name or a Null value if the student has no advisor 5.2 Transitive Clasure operntion Different aliases range or iteration variables of a class can be automatidy generated in OQL by appending an association pattem expression e.g Grad-1 is a an alias of Grad This featlne is used in the clefition of the transitive underscore and an integer to the class name in tbe closure operation that follows The Wtive closure opetation is performed in our language by iterating over some classes and associations that form a cycle Let A B and C be three classes in a schema that form a cycle i.e A has associations with both B and C and B has an association with C The following Iule derives a subdatabase X that contains pairs of instances of the class A that are Bssociated with each other via some B and C instances In other words each extensional pattern in this subdatabase contains two objects from the class A if context A  B  C  A-1 then X A A-1 By extending the Context expression in this rule to form a second iteration i.e the expression A  B  C  A-1  B-1 C-1  A-2 one can derive a subdatabase that contains a three-level hierarchy of A instances The braces are used in this expression to keep the first and second level A instances that are associated with each other even if they ace not associated with third level A instances This iteration can be expressed in our language by adding the I sign as a superscript at the end of an association pattem expression that forms a cycle An optional number N Number of iterations following the sign causes the underlying system to traverse the cycle N fimes For a certain hierarchy of instances iteration stops when Null values are encounted or at the bP iteration i.e IP descendant from the root of the hierarchy If such a number is not present the cycle is mversexl until Null values am obtained for all the hierarchies of instancm Le the transitive closure operation is performed Using this technique the two expressions A  B  C  A-1 J  B-1  C-1  A-2 and A  B  C  AA  B-1  C-1  A-2  B-3  C-3  A-3 are represented as A  B  C and A  B  Cy respectively Our approach as scribed above allows for representing the transitive closure operation in the form of looping rather than in a recursive form which is a simpler representation especially for end users The following are two example deductive rules a graduate student may be taught by other graduate students in some sections and also may teach other graduate students in some other sections Derive the Grad-teaching grd hierarchy It is Bssumed here that the relationship between the instances of the class Grad is not cyclic Le if Grad gl teaches Grad g2 or teaches any of the teachers of g2 then g2 cannot teach gl nor any of the teachers of gl if context Grad TA  Teacher  section  Student then Grad-teaching-grad Grad Grad_ Tk intensional pattem of the resulting subdalabase Grad tcaching-grad consists of the classes Grad Grad-1 Grad_  until Null values in all the hierarchies are encountered tbe second argument to Grad-teaching-grad i.e Grad stands for Gd-1 Grad-2  Ia words the intensional patkm of tbe rived subdatabase is determined atruntime Derive a subdatabase which contains only the 1st level and 3rd level in the grad-teaching-grad hierarchy if context Grad TA  Teacher  Section  Sturknt 1&0 firsl-and-third Grad Grad-2 a Coatrol strategies The two control strategies used in inferencing are forward and backward chaining of rules In the backward chaining strategy the evaluation of a derived subdatabase is delayed until a retrieval query that needs the derived data is issued date copy of the derived subdatabase is always kept available which improves the performance of retrieval opaations Whenever the data that is used to derive a subdatabase is updated e.g by assockm ng dissociating immiug objects etc the relevant deductive rules am run to maintain the ncy between the derived subdatabase and the original database In the relational system POSTGRES STO87 only one of these two control strategies i.e farward and backwad chaining of rules is assigned to each rule in the system A rule that is defined to follow the forward chaining strategy i.e a forward chaining rule will be executed whenever the data that is read by the rule is updated also an up-to-date copy of the derived data is explicitly stored A rule that is defined to follow the backward chaining strategy i.e a backward chaining rule will be triggemd for execution whenever the data that the rule derives is requested i.e in a query but the derived data is not preserved after the query session In this de-oriented control strategy a rule is restricted to follow only one of the two control strategies at all times on the contrary in the forward chaining sbrategy an Up 66 


The disadvantage of this rule-oriented control strategy is that it imposes a restriction on the mixing of forward and backward chaining rules such that a forward chaining rule cannot read any data written by backward chaining rules STO87 To describe this problem let the following be a series of rules Ra to Rd and the resuls REa to REd derived by these rules Ra Rb Rc Rd DB  R  REb  R  REd Also let Ra and Rb be defined as backward chaining rules and Rc and Rd as forward chaining rules If the original database DB is updated rules Rc and Rd though they are forward chaining rules will not be triggered to update the result REd until someone requests the data of REb Thus REd may be iriconsistent with the base data To overcome this problem we use a result-oriented control strategy in which we specify for each result derived subdatabase whether it is to be pre-evaluated or post evaluated The same rule may follow the forward or backward chaining strategy depending on whether the derived subdatabae is to be pre or post-evaluated To illustrate by the example above assume that REd is defined as pre-evaluated and REb is defined as post evaluated Whenever the database DB is updated the rules Ra Rb Rc and Rd will be triggered in the forward chaining fashion to keep REM which is explicitly stored up-to-date REb on the other hand will be evaluated whenever a retrieval operation is issued against it In this case the rules Ra and Rb that derive REb are applied in the backward chaining fashion Thus Ra and Rb follow one control strategy when deriving RFxl and the other control straregy when deriving REb This technique offers more flexibility and alleviates the restriction in POSTGRES described above 7 Conclusion In this paper we have introduced the induced generalization association construct and presented a deductive rule-based language for object-oriented databases The world of subdatabases is closed under this language which facilitates defining inference chains in which each rule derives a new subdatabase based on the subdatabases derived by previous rules in the chain The transitive closure operation can be specified in our language in the form of looping rather than in a recursive form A result-oriented control strategy to be used as the underlying implementation technique has also been introduced in this paper ACKNOWLEDGEMENTS Research on the rule-based language was supported by the U.S West Advanced Technologies grant number UPN 88071315 Work on the Object-Oriented Query Language OQL was supported by the Navy Manufacturing Technology Program through the National Institute of Standards and Technology formerly the National Bureau of Standards grant number 60NANB4wO17 and by the National Science Foundation grant number DMC-8814989 The development efforts are supported by the Florida High Technology and Industry Council grant number UPN 85100316 BIBLIOGRAPHY ALA89a A.M Alashqur S.Y.W Su and H Lar OQL A Quy Language for Manipulating Object-onented Datah Accepted for Publication the 15th VLDB Int Con 1989 ALA89b A.M Alashqur A Query Model and Query and Knowledge Definition Langwi~es for Object-oriented Databases a Ph.D BAN87 BAT85 cER86 CHA84 COD79 DEL88 DIT86 HS87 FOR88 GAL84 HAM81 m7 JAR84 LAM89 MAI88 RAS88 STO87 SU89 TY88 U85 VAS84 Thesis Univedty if Florida 1989 Jay Banerjee et al Data Model Issues for Object-Oriented Aplications ACM Trans on Ofice Information Systems January 1987 D Batory and W Kim Modeling Concepts for VLSI CAD objects ACM TODS September 1985, pages 322-346 Stefan0 Ceri George Gottlob and Gio Wiederhold Interfacing Relational Databases and Prolog Efficiently Roc of the 1st Intl Con on Expert Database Systems 1986 C L Chang and A Walker PROSQL a PROLOG Programming Interface with SQLDS F'mxdngs of the 1st Intl Workshop on Expert Database Systems 1984 E Codd Extend~ng the Database Relational Model to Capture More Meaning ACM TODS Vol 4 No 4 1979 Lois ML Delcambre and James N Etheredge A self Controlling Interpreter for the relational Production Language Roceedings of ACM SIGMOD Conference on Management of Data 1988, pages 396403 KR Dimich Object-oriented Database Systems the Notion and Issues Roc of rhe Intl Workshop on Object-Oriented Database Systems califomia September 1986 D.H Fishman et al Iris An Object-Oriented Database Management System ACM Transaction on Oftixe Informarion Systems January 1987 Pages 4869 S Ford et al Zeitgeist Database support for object-oriented rogramming in the F  gs of the Second International Workshq on Object-oriented Database Systems 1988 Heme Gallaire Jack Mier and Jean-Marie Nicolas Logic and Databases A Deductive Approach ACM Computing Surveys June 1984 Pages 153-185 M Hammer and D McLeod Database Description with SDM A Semantic Associon Model ACM TODS Sepember 1981 R Hull and R King Semantic Database Modeling Survey Applications and Research Issues ACM Computing Surveys September 1987 Mauhias Jark Jim Clifford and Yannis Vassiliou An Optimizing hlog Front-End to a Relational Query System Roc of ACM SIGMOD Con on Management of Data 1984 H.M Lam S Su and A.M Alashqur Integrating the Concepts and Techniqws of Semantic Data Modeling and the Objectdented wradigm Roc of the 13th Intl Computex Software and ApptiCationS Conference COMSAC 89 1989 Christcphe de Maindreville and Eric Simon A Production Rule Based Approach to Deductive Databases Roc of the 4th Intl Con on Data Engineering California 1988 L Raschid and S.Y.W Su A Transaction-oriented Mechanism to Control Precessing in a Knowledge Base Management System Pmc of the Intl Con on Expert Database Systems 1988 Michael Stonebraker Eric Hanson and Chin-Heng Hong The Design of the POSTGRES Rules System Roc of the 3rd Intl Con on Data Engineering California 1987 S.Y.W Su V KrishnamurIhy and H Lam An Object oriented Semantic Association Model OsAM appearing in A.I in Indus&l Engineering and Manufacturing Theoretid Issues and Applications S Kumara et al eds American Institute of Industrial Engineering 1989 Frederick Ty G-OQL Graphics Interface to the Object Oriented Query Language OQL Master thesis University of Florida 1988 Jeffrey ullman Implementation of Logical Query Languages for Databases ACM TODS September 1985 Y Vassiliou J Clifford and M Jark Access to Specific Declarative Knowledge by Expert Systems The Impact of hg"'ning Decision Suppat Systems 1 1 1984 67 


 s_suppkey s_nationkey ps_partkey ps_suppkey ps_supplycost p_partkey p_name   l_partkey l_discount l_quantity l_orderkey l_suppkey l_extendedprice o_orderkey o_orderdate n_nationkey n_name p_partkey p_name   246\262 1 2 3 4 5 7 6 8 9 10,#11,#12,#13 14 15 16 17 18 1 2 Figure 11 Execution plan of TPC-D query 9 for transposed files 2 0 20 40 60 80 100 0 50 100 150 200 Time [s CPUusage NetSend NetRecv Disk 10 8 6 4 0 Throughput [MB/s CPU usage 8 9 10 13 Figure 12 Execution trace of TPC-D query 9 with transposed files 11 Proceedings of the ACM/IEEE SC97 Conference \(SC\22297 0-89791-985-8/97 $ 17.00 \251 1997 IEEE 


of I/O But the resulting speedup compared with the previous plans exceeds 2 which is quite satisfactory Table 3 shows the results of above right-deep rd left-deep ld and transposed file tp methods along with the reported results of other commercial systems for 100GB TPC-D query 9 Because our system lacks the software and maintenance price metrics the overall system price can\220t be determined accurately Hardware components themselves cost less than 0.5M We can observe that our system achieves fairly good performance Above all the execution time with the transposed files is twelve times as short as the most powerful commercial platform These results strongly support the effectiveness of the commodity PC based massively parallel relational database servers  System Exec Time Price Teradata on NCR 5100M 160 000 133MHz Pentium 20GB Main Memory 400 Disk Drives 953.3 17M Oracle 7 n DEC AlphaServer 8400 12 000 437MHz DECchip 21164 24GB Main Memory 84 Disk Drives 1884.9 1.3M Oracle 7 n SUN UE6000 24 000 167MHz UltraSPARC 5.3GB Main Memory 300 Disk Drives 2639.3 2.1M IBM DB2 PE on RS/6000 SP 306 96 000 112MHz PowerPC 604 24GB Main Memory 96 Disk Drives 2899.4 3.7M Oracle 7 n HP9000 EPS30 12 000 120MHz PA7150 3.75GB Main Memory 320 Disk Drives 7154.8 2.2M Our Pilot System 100 000 200MHz Pentium Pros 6.4GB Main Memory 100 Disk Drives rd 193.7 ld 177.2 tp 77.1 see text Table 3 Execution time of 100 GB TPC-D Q9 on several systems 12 Proceedings of the ACM/IEEE SC97 Conference \(SC\22297 0-89791-985-8/97 $ 17.00 \251 1997 IEEE 


4 Data mining 4.1 Association rule mining Data mining which is a recent hot research topic in the database field is a method of discovering useful information such as rules and previously unknown patterns existing behind data items It enables more effective utilization of transaction log data which have been just archived and abandoned Among the major applications of data mining is association rule mining so called 217\217basket analysis.\220\220 Each of the transaction data typically consists of a set of items bought in a transaction By analyzing them one can derive some association rule such as 217\21790 of the customers who buy both A and B also buy C.\220\220 In order to improve the quality of obtained rules a very large amount of transaction data have to be examined requiring quite a long time to complete First we introduce some basic concepts of association rule Let 000 000 001 000 1 001\000 2 001\002\002\002\001\000 000 002 be a set of items and 003 000 001 003 1 001\003 2 001\002\002\002\001\003 001 002 be a set of transactions where each transaction 003 002 is a set of items such that 003 002 004\000  n itemset 004 has support 005 in the transaction set 003 if 005  f transactions in 003 contain 004  here we denote 005 000 005\006\007\007\b\t 003 001 004 002 An association rule is an implication of the form 004 005 n  where 004\001 n 004 000  and 004 006 n 000 007  Each rule has two measures of value support and confidence  The support of the rule 004 005 n is 005\006\007\007\b\t 003 001 004 b n 002  The confidence 013 of the rule 004 005 n in the transaction set 003 means 013 of transactions in 003 that contain 004 also contain n  which can be written as 005\006\007\007\b\t 003 001 004 b n 002 f\005\006\007\007\b\t 003 001 004 002  For example let r 1 000 001 1 001 3 001 4 002  r 2 000 001 1 001 2 001 3 001 5 002  r 3 000 001 2 001 4 002  r 4 000 001 1 001 2 002  r 5 000 001 1 001 3 001 5 002 be the transaction database Let minimum  support and minimum confidence be 60 and 70 respectively First all itemsets that have support above the minimum support called large itemsets  are generated In this case the large itemsets are 001 1 002 001 001 2 002 001 001 3 002 001 001 1 001 3 002  Then for each large itemset 004  n association rule 004 t n 005 n 001 n 004 004 002 is derived if 005\006\007\007\b\t 003 001 004 002 f\005\006\007\007\b\t 003 001 004 t n 002 n minimum confidence  The results are 1 005 3 001 005\006\007\007\b\t 003 000 60 001 b\016\017 000\020\021\016\013\021 000 75 002 and 3 005 1 001 005\006\007\007\b\t 003 000 60 001 013\b\016\017 000\020\021\016\013\021 000 100 002  The most well known algorithm for association rule mining is the Apriori algorithm[1 We have studied several parallel algorithms for mining association based on Apriori One of these algorithms called HPA Hash Partitioned Apriori is discussed here Apriori first generates candidate itemsets and then scans the transaction database to determine whether each of the candidates satisfies the user specified minimum support and minimum confidence Using these results the next candidate itemsets are generated This continues until no itemset satisfies the minimum support and confidence The most naive parallelization of Apriori would copy the candidates over all the processing node and make each processing node scan the transaction database in parallel Although this works fine when the number of candidates is small enough to fit in the local memory of a single processing node memory space utilization efficiency of this method is very poor For large scale data mining the storage required for the candidates exceeds the available memory space of a processing node This causes memory overflow which results in significant performance degradation due to an excessive amount of extra I/Os HPA partitions the candidate itemsets among the processing nodes using a hash function as in the parallel hash join which eliminates broadcasting of all the transaction data and can reduce the comparison workload significantly Hence HPA works much better than the naive parallelization for large scale data mining The 022 th iteration pass 022  f the algorithm is as follows 1 Generate the candidate itemsets Each processing node generates new candidate itemsets from the large itemsets of the last  001 022 t 1 002 th iteration Each of the former itemsets contains 022 items while each of the latter itemsets contains 001 022 t 1 002 items They are called 022 itemsets and 001 022 t 1 002 itemsets respectively The processing node applies the hash function to each of the candidates to determine the destination node ID If the candidate is for the processing node itself it is inserted into the hash table otherwise it is discarded 13 Proceedings of the ACM/IEEE SC97 Conference \(SC\22297 0-89791-985-8/97 $ 17.00 \251 1997 IEEE 


 30 40 50 60 70 80 90 100 110 120 30 40 50 60 70 80 90 10 0 Execution Time [s Number of Nodes Figure 13 Execution time of HPA program pass 2 on PC cluster 2 Scan the transaction database and count the support count Each processing node reads the transaction database from its local disk 000 itemsets are generated from that transaction and the same hash function used in phase 1 s applied to each of them Each of the 000 itemsets is sent to certain processing node according the hash value For the itemsets received from the other nodes and those locally generated whose ID equals the node\220s ID the hash table is searched If hit its support count value is incremented 3 Determine the large itemset After reading all the transaction data each processing node can individually determine whether each candidate 000 itemset satisfy user-specified minimum support or not Each processing node sends large 000 itemsets to the coordinator where all the large 000 itemsets are gathered 4 Check the terminal condition If the large 000 itemsets are empty the algorithm terminates Otherwise the coordinator broadcasts large 000 itemsets to all the processing nodes and the algorithm enters the next iteration 4.2 Performance evaluation of HPA algorithm The HPA program explained above is implemented on our PC cluster Each node of the cluster has a transaction data file on its own hard disk Transaction data is produced using data generation program developed by Agrawal designating some parameters such as the number of transaction the number of different items and so on The produced data is divided by the number of nodes and copied to each node\220s hard disk The parameters used in the evaluation is as follows The number of transaction is 5,000,000 the number of different items is 5000 and minimum support is 0.7 The size of the data is about 400MBytes in total The message block size is set to be 16KBytes according to the results of communication characteristics of PC clusters discussed in previous section The disk I/O block size is 64KBytes which seems to be most suitable value for the system Note that the number of candidate itemset in pass 2 s substantially larger than for the other passes which relatively frequently occurs in association rules mining Therefore we have been careful to parallelize the program effectively especially in pass 2 so that unnecessary itemsets to count should not be generated 14 Proceedings of the ACM/IEEE SC97 Conference \(SC\22297 0-89791-985-8/97 $ 17.00 \251 1997 IEEE 


The execution time of the HPA program pass 2 is shown in figure 13 as the number of PCs is changed The maximum number of PCs used in this evaluation is 100 Reasonably good speedup is achieved in this application as the number of PCs is increased 5 Conclusion In this paper we presented performance evaluation of parallel database processing on an ATM connected 100 node PC cluster system The latest PCs enabled us to obtain over 110Mbps throughput in point-to-point communication on a 155Mbps ATM network even with the so-called 217\217heavy\220\220 TCP/IP This greatly helped in developing the system in a short period since we were absorbed in fixing many other problems Massively parallel computers now tend to be used in business applications as well as the conventional scientific computation Two major business applications decision support query processing and data mining were picked up and executed on the PC cluster The query processing environment was built using the results of our previous research the super database computer SDC project Performace evaluation results with a query of the standard TPC-D benchmark showed that our system achieved superior performance especially when transposed file organization was employed As for data mining we developed a parallel algorithm for mining association rules and implemented it on the PC cluster By utilizing aggregate memory of the system efficiently the system showed good speedup characteristics as the number of nodes increased The good price/performance ratio makes PC clusters very attractive and promising for parallel database processing applications All these facts support the effectiveness of the commodity PC based massively parallel database servers Acknowledgment This project is supported by NEDO New Energy and Industrial Technology Development Organization in Japan Hitachi Ltd technically helped us extensively for ATM related issues References  R Agrawal T Imielinski and A Swami Mining association rules between sets of items in large databases In Proceedings of ACM SIGMOD International Conference on Management of Data  pages 207--216 1993  R Agrawal and R Srikant Fast algorithms for mining association rules In Proceedings of International Conference on Very Large Data Bases  1994  A C Arpaci-Dusseau R H Arpaci-Dusseau D E Culler J M Hellerstein and D A Patterson High-performance sorting on Networks of Workstations In Proceedings of International Conference on Management of Data  pages 243--254 1997  D.S Batory On searching transposed files ACM TODS  4\(4 1979  P.A Boncz W Quak and M.L Kersten Monet and its geographical extensions A novel approach to high performance GIS processing In Proceedings of International Conference on Extending Database Technology  pages 147--166 1996 15 Proceedings of the ACM/IEEE SC97 Conference \(SC\22297 0-89791-985-8/97 $ 17.00 \251 1997 IEEE 


 R Carter and J Laroco Commodity clusters Performance comparison between PC\220s and workstations In Proceedings of IEEE International Symposium on High Performance Distributed Computing  pages 292--304 1995  D.J DeWitt and J Gray Parallel database systems  The future of high performance database systems Communications of the ACM  35\(6 1992  J Gray editor The Benchmark Handbook for Database and Transaction Processing Systems  Morgan Kaufmann Publishers 2nd edition 1993  J Heinanen Multiprotocol encapsulation over ATM adaptation layer 5 Technical Report RFC1483 1993  M Kitsuregawa M Nakano and M Takagi Query execution for large relations on Functional Disk System In Proceedings of International Conference on Data Engineering  5th pages 159--167 IEEE 1989  M Kitsuregawa and Y Ogawa Bucket Spreading Parallel Hash:A new parallel hash join method with robustness for data skew in Super Database Computer SDC In Proceedings of International Conference on Very Large Data Bases  16th pages 210--221 1990  M Laubach Classical IP and ARP over ATM Technical Report RFC1577 1994  D.A Schneider and D.J DeWitt Tradeoffs in processing complex join queries via hashing in multiprocessor database machines In Proceedings of International Conference on Very Large Data Bases  16th pages 469--480 1990  T Shintani and M Kitsuregawa Hash based parallel algorithms for mining association rules In Proceedings of IEEE International Conference on Parallel and Distributed Information Systems  pages 19--30 1996  T Sterling D Saverese D.J Becker B Fryxell and K Olson Communication overhead for space science applications on the Beowulf parallel workstaion In Proceedings of International Symposium on High Performance Distributed Computing  pages 23--30 1995  T Tamura M Nakamura M Kitsuregawa and Y Ogawa Implementation and performance evaluation of the parallel relational database server SDC-II In Proceedings of International Conference on Parallel Processing  25th pages I--212--I--221 1996  TPC TPC Benchmark 000\001 D Decision Support Standard Specification Revision 1.1 Transaction Processing Performance Council 1995 16 Proceedings of the ACM/IEEE SC97 Conference \(SC\22297 0-89791-985-8/97 $ 17.00 \251 1997 IEEE 


In accordance with 1910.97 and 1910.209 warning signs are required in microwave areas For work involving power line carrier systems this work is to be conducted according to requirements for work on energized lines Comments s APPA objects to the absolute requirement implied by the word ensure regarding exposure to microwave radiation and recommends revision of s l iii to read when an employee works in an area where electromagnetic radiation levels could exceed the levels specified in the radiation protection guide the employer shall institute measures designed to protect employees from accidental exposure to radiation levels greater than those permitted by that guide  I1 an employee must be stationed at the remote end of the rodding operation Before moving an energized cable it must be inspected for defects which might lead to a fault To prevent accidents from working on the wrong cable would require identification of the correct cable when multiple cables are present Would prohibit an employee from working in a manhole with an energized cable with a defect that could lead to a fault However if the cable cannot be deenergized while another cable is out employees may enter the manhole but must protect against failure by some means for example using a ballistics blanket wrapped around cable Requires bonding around opening in metal sheath while working on cable Underaround EIectrical Installations t Comments t This paragraph addresses safety for underground vaults and manholes The following requirements are contained in this section Ladders must be used in manholes and vaults greater than four feet deep and climbing on cables and hangers in these vaults is prohibited Equipment used to lower materials and tools in manholes must be capable of supporting the weight and should be checked for defects before use An employee in a manhole must have an attendant in the immediate vicinity with facilities greater than 250 volts energized An employee working alone is permitted to enter briefly for inspection housekeeping taking readings or similar assuming work could be done safely Duct rods must be inserted in the direction presenting the least hazard to employees and APPA recommends that OSHA rewrite section 7\regarding working with defective cables This rewrite would include the words shall be given a thorough inspection and a determination made as to whether they represent a hazard to personnel or representative of an impending fault As in Subsection \(e EEI proposes the addition of wording to cover training of employees in emergency rescue procedures and for providing and maintaining rescue equipment Substations U This paragraph covers work performed in substations and contains the following requirements Requires that enough space be provided around electrical equipment to allow ready and safe access for operation and maintenance of equipment OSHA's position A2-16 


is that this requirement is sufficiently performance oriented to meet the requirements for old installations according to the 1987 NEW Requires draw-out circuit breakers to be inserted and removed while in the open position and that if the design permits the control circuits be rendered inoperative while breakers are being inserted and removed stated in the Rules and requests that existing installations not be required to be modified to meet NESC APPA recommends that Section u 4 i which includes requirements for enclosing electric conductors and equipment to minimize unauthorized access to such equipment be modified to refer to only those areas which are accessible to the public Requires conductive fences around substations to be grounded Power Generation v Addresses guarding of energized parts  Fences screens, partitions or walls This section provides additional requirements and related work practices for power generating plants  Entrances locked or attended Special Conditions w  Warning signs posted  Live parts greater than 150 volts to be guarded or isolated by location or be insulated  Enclosures are to be according to the 1987 NESC Sections llOA and 124A1 and in 1993 NESC  Requires guarding of live parts except during an operation and maintenance function when guards are removed barriers must be installed to prevent employees in the area from contacting exposed live parts Requires employees who do not work regularly at the substation to report their presence Requires information to be communicated to employees during job briefings in accordance with Section \(c of the Rules Comments U APPA and EEI provide comments as follows Both believe that some older substations \(and power plants would not meet NESC as This paragraph proposes special conditions that are encountered during electric power generation, transmission and distribution work including the following Capacitors  Requires individual units in a rack to be short circuited and the rack grounded  Require lines with capacitors connected to be short circuited before being considered deenergized Current transformer secondaries may not be opened while energized and must be bridged if the CT circuit is opened Series street lighting circuits with open circuit voltages greater than 600 volts must be worked in accordance with Section q\or t and the series loop may be opened only after the source transformer is deenergized and isolated or after the loop is bridged to avoid open circuit condition Sufficient artificial light must be provided where insufficient naturals illumination is present to enable employee to work safely A2-17 


US Coast Guard approved personal floatation devices must be supplied and inspected where employees are engaged in work where there is danger of drowning Required employee protection in public work areas to include the following  Warning signs or flags and other traffic control devices  Barricades for additional protection to employees  Barricades around excavated areas  Warning lights at night prominently displayed Lines or equipment which may be sub to backfeed from cogeneration or other sources are to be worked as energized in accordance with the applicable paragraphs of the Rules Comments w APPA submits the following comments regarding this Special Conditions section Recommends that the wording regarding capacitors be modified to include a waiting period for five minutes prior to short circuiting and grounding in accordance with industry standards for discharging of capacitors For series street light circuits, recommends that language be added for bridging to either install a bypass conductor or by placement of grounds so that work occurs between the grounds Recommends modification of the section regarding personal floatation devices to not apply to work sites near fountains decorative ponds swimming pools or other bodies of water on residential and commercial property Definitions x This section of the proposed Rules includes definitions of terms Definitions particularly pertinent to understanding the proposal and which have not previously been included are listed as follows Authorized Employee  an employee to whom the authority and responsibility to perform a specific assignment has been given by the employer who can demonstrate by experience or training the ability to recognize potentially hazardous energy and its potential impact on the work place conditions and who has the knowledge to implement adequate methods and means for the control and isolation of such energy CZearance for Work  Authorization to perform specified work or permission to enter a restricted area Clearance from Hazard  Separation from energized lines or equipment Comments x The following summarizes the changes in some of the definitions which APPA recommends Add to the definition for authorized employee It the authorized employee may be an employee assigned to perform the work or assigned to provide the energy control and isolation function  Recommends that OSHA modify the definition for a line clearance tree trimmer to add the word qualified resulting in the complete designation as a qualified line clearance tree trimmer Recommends that OSHA modify the definition of qualified employee" to remove the word construction from the definition since it is felt that knowledge of construction procedures is beyond the scope of the proposed rule resulting in APPA's new A2-18 I 


wording as follows more knowledgeable in operation and hazards associated with electric power generation transmission and/or distribution equipment Recommends that OSHA add a definition for the word practicable and replace the word feasible with practicable wherever it appears in the proposed regulations and that practicable be further defined as capable of being accomplished by reasonably available and economic means OTHER ISSUES Clothing OSHA requested comments on the advisability of adopting requirements regarding the clothing worn by electric utility industry employees EEI has presented comments which indicates research is underway prior to establishing a standard for clothing to be worn by electric utility employees However EEI's position is that this standard has not developed to the extent that it could be included in the OSHA Rules Both APPA and EEI state that they would support a requirement that employers train employees regarding the proper type of clothing to wear to minimize hazards when working in the vicinity of exposed energized facilities Grandfathering Due to the anticipated cost impact on the utility industry of the proposed Rules requiring that existing installations be brought to the requirements of the proposed Rules both APPA and EEI propose that the final Rules include an omnibus grandfather provision This provision would exempt those selected types of facilities from modification to meet the new rules EEI states that if the grandfathering concept is incorporated that electric utility employees will not be deprived of proper protection They propose that employers be required to provide employees with a level of protection equivalent to that which the standard would require in those instances in which the utility does not choose to modify existing facilities to comply with the final standard Rubber Sleeves OSHA requests comments from the industry on whether it would be advisable to require rubber insulating sleeves when gloves are used on lines or equipment energized at more than a given voltage EEI states its position that utilities should continue to have the option of choosing rubber gloves or gloves and sleeves to protect employees when it is necessary to work closer to energized lines than the distances specified in the clearance tables Preemuting State Laws EEI requests that the final Rules be clear in their preempting state rules applicable to the operation and maintenance work rules for electric power systems. This is especially critical since some states now have existing laws which are more stringent than the proposed OSHA Rules Examples are 1 in California and Pennsylvania where electric utility linemen are prohibited from using rubber gloves to work on lines and equipment energized at more than certain voltages and 2 in California and Connecticut where the live line bare hand method of working on high voltage transmission systems is prohibited One utility Pacific Gas  Electric has obtained a variance from the California OSHA to perform live line bare-hand transmission maintenance work on an experimental basis Coiiflicts Between the Rilles and Part 1926 Subpart V Since many of the work procedures in construction work and operation and maintenance work are similar and difficult to distinguish between EEI requests that the final order be clear in establishing which rule has jurisdiction over such similar work areas A2-19 v 


IMPACTS ON COSTS AND ASSOCIATED BENEFITS In its introduction to the proposed rules OSHA has provided an estimate of the annual cost impact on the electric utility industry for the proposed des of approximately 20.7 million OSHA estimates that compliance with this proposed standard would annually prevent between 24 and 28 fatalities and 2,175 injuries per year The utilities which have responded to this proposed standard through their respective associations have questioned the claims both of the magnitude of the cost involved and the benefit to the industry in preventing fatalities and lost-time injuries Both EEI and APPA feel that the annual cost which OSHA estimates are significantly lower than would be realized in practice Factors which APPA and EEI feel were not properly addressed include the following OSHA has not accurately accounted for cost of potential retroactive impacts including retrofitting and modifying existing installations and equipment OSHA has not consistently implemented performance based provisions in proposed rules  many portions require specific approaches which would require utilities to replace procedures already in place with new procedures Estimates were based on an average size investor-owned utility of 2,800 employees and an average rural cooperative of 56 employees, which are not applicable to many smaller systems such as municipal systems OSHA has not adequately addressed the retraining which would be necessary with modifying long-established industry practices to be in accordance with the OSHA rules EEI claims that OSHA's proposed clearance requirements would not allow the use of established maintenance techniques for maintaining high voltage transmission systems and thus would require new techniques For an example of the cost which is estimated to be experienced as a result of the new Rules one of the EEI member companies has estimated that approximately 20,000 transmission towers would need to be modified to accommodate the required step bolts in the Rules at an estimated cost of 6,200,000 Additionally this same company estimates that the annual cost of retesting live line tools for its estimated 1,000 tools would be 265,000 Additionally, both EEI and APPA question the additional benefits which OSHA claims would result from implementation of the new Rules APPA questions the estimates of preventing an additional 24 to 28 fatalities annually and 2,175 injuries per year in that it fails to account for the fact that the industry has already implemented in large part safety measures which are incorporated in the Rules EEI and APPA also point out that many preventable injuries cannot be eliminated despite work rules enforcement and safety awareness campaigns since many such accidents which result in fatalities are due to employee being trained but not following the employer's training and policies PRESENT STATUS OF RULES According to information received from the OSHA office in February 1993 the final Rules are to be published no later than July 1993 and possibly as soon as March 1993 OSHA closed their receipt of comments in March 1991 and no further changes in the rules are thought possible A2-20 


CONCLUSION The OSHA 1910.269 which proposes to cover electric utility operation and maintenance work rules affects a multitude of working procedures as are summarized in this paper It is not possible at the present time to assess the final structure of the Rules as may be proposed in 1993 or subsequent years Since the comments from the utility associations APPA and EEI were made following the initial release of the proposed OSHA Rules in 1989 a significant amount of time has elapsed where other events have occurred which may affect the form of the final Rules The 1993 NESC went into effect in August 1992 and includes some of the requirements to which the commenters objected For example a significant requirement in the Part 4 of the 1993 NESC requires that rubber gloves be utilized on exposed energized parts of facilities operating at 50 to 300 volts This requirement is in conflict with EEl\222s proposed change to the OSHA Rules which would still allow working such secondary facilities without the use of rubber gloves Electric utilities are advised to review the January 31 1989 proposed operation and maintenance Rules as summarized in this paper and to review their procedures which would be affected by application of the Rules Many of the procedures proposed in the Rules provide valuable guidance in electric utilities\222 operation and maintenance activities Where the cost impact is not significant, it is recommended that utilities consider implementing such procedures in expectation of the Rules being published in the next few months Also it would be appropriate for electric utilities to review the 1993 edition of the NESC since there are portions of the Rules which have resulted in changes in the NESC These changes mainly occur in Part 4 Rules for the Operation of Electric Supply and Communications Lines and Equipment The concerns which the commenters have addressed regarding the cost impact and the resulting benefits experienced as a result of the promulgation of the Rules are real ones and must be addressed in the final Rules As a result this paper cannot present a conclusion regarding the full impact of the Rules The development of such Rules continue to be an ongoing matter and will undoubtedly require later analysis when the final rules are published A2-21 


