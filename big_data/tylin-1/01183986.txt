On the Mining of Substitution Rules for Statistically Dependent Items Wei-Guang Teng, Ming-Jyh Hsieh and Ming-Syan Chen Department of Electrical Engineering National Taiwan University Taipei, Taiwan ROC E-mail eev mink arbor.ee.ntu.edu.tw mschen@cc.ee.ntu.edu.tw Abstract In this paper a new mining capabiliiy, called mining of substitution rules is explored A substitution refers to the choice ma by a customer to replace the purchase of some items with that of others The process of miningsubstitution rules can be decomposed into twoprocedures Thejirstpm cedure is 
to identrfv concrete itemsets among a large num ber of frequent itemsets, where a concrete itemset is a fre quent itemset whose items am statistically dependent The second procedure is then on the substitution rule genera tion Two concrete itemsets X and Y form a substitution rule, denoted by XD Y to mean that Xis a substitute for L ifand only I X and Yare negatively correlated and 2 the negative association rule X 7 exists In this papec we derive theoretical properties for the model of substitu 
tion rule mining Then in light of these properties algo rithm SFM standing for substitution rule mining is de signed and implemented to discover the substitution rules efficiently while attaining goodstatistical sign$cance Em piricalstudies ampeformedto evaluate thepeformance of algorithm SRMpmposed It is shown that algorithm SRM produces substitution rules of very high qualify 1 Introduction Various data mining capabilities have been explored in the literature S 7 141 Among them the one receiving a significant amount of research attention 
is on mining as sociation rules 2 Given a database of sales transactions the goal of mining an association rule is to discover the rela tionship that the presence of some items in a transaction will imply the presence of other items in the same transaction Note that in addition to the association rules the data in a transaction database also possesses some other consumer purchase behaviors Specifically it is important to under stand the choice made hy consumers, which, corresponding to the purchase of some items instead of that of others is termed substitution in this paper For example, in a grocery store the 
purchase of apples may be substituted for that of pears Intuitively the substitutes are of analogous proper ties and therefore are often possible choices for customers However in some cases the substitutes could be formed due to purchasing purposes For example the purchase of roses may be substituted for that of a Teddy bear and a box of chocolates The mining of substitution rules in a transac tion database, same as that of association rules will lead to very valuable knowledge in various aspects, including mar ket prediction, user behavior analysis and decision support to name a few Despite of its impoltance 
the mining of substitution rules, unlike that of association rules has been little explored in the literature Mining negative association rules of the form X  y where means the absence of itemset Y is useful for the mining of substitutive itemsets since in a negative associa tion rule the presence of the antecedent itemset implies the absence of the positive counterpart of the consequent item set meaning that X could be a substitute for Y It is noted that some efforts were elaborated upon the mining of nega tive association rules 
In IS the taxonomy of items is in troduced and a heuristic of using similarity among items in the same category is utilized to facilitate the mining of nega tive association rules On the other hand, a constraint-based approach is adopted in 3 Notice however, that in the neg ative association rule mining the dependency of items in an itemset is not considered since the itemset frequency is the only measurement when generating frequent itemsets In contrast to discover substitution rules one should first de termine possible itemsets which could be choices for cus tomers The purchasing frequency i.e support 
of an item set is not adequate to identify these possible substitutes The dependency of items has to be examined to identify concrete sets of items which are really purchased together by customers Specifically, a frequent itemset whose items are statistically dependent is called a concrete itemset in this paper Note that if a frequent itemset is not concrete that itemset is likely to consist of frequent items which though appearing together frequently due to their high in dividual occurrence counts do not possess adequate depen 0-7695-1754-402 17.00 Q 2002 IEEE 442 


dency among themselves and are thus of little practical im plication to be used as a whole in either the antecedent or the consequent of a substitution rule In addition the neg ative correlation of two itemsets should be verified if these two itemsets are considered to be substitutes for each other Without considering these aspects the mining of negative association rules is not applicable to the mining of substitu tion rules Consequently we develop in this paper a new model of mining substitution rules The process of mining substitu tion rules can be decomposed into two procedures The first procedure is to identify concrete itemsets among a large number of frequent itemsets The second procedure is on the substitution rule generation Two concrete itemsets X and Y form a substitution rule denoted by XDY to mean that X is a substitute for Y if and only if I X and Y are negatively correlated and 2 the negative association rule X 7 exists Without loss of generality the chi-square test 8 is employed to identify concrete itemsets by statistically evaluating the dependency among items in individual item sets Moreover the Pearson product moment correlation coefficient 8 1 I is utilized to measure the correlation be tween two itemsets Explicitly we derive theoretical prop erties for the model of mining substitution rules Then in light of these properties, algorithm SRM standing for sub stitution rule mining\is designed and implemented to dis cover the substitution rules efficiently while attaining good statistical significance For comparison purposes a com panion method which is extended from algorithm Apriori called algorithm Apriori-Dual is also implemented Extensive experimental studies have been conducted to provide many insights into algorithm SRM proposed The quality of substitution rules in terms of statistical measure ments is also evaluated It is shown by experiments that al gorithm SRM significantly outperforms algorithm Apriori Dual It is noted that algorithm SRM produces substitution rules of very high quality as measured by the correlation and the violation ratio I The advantage of SRM is even more prominent when the transaction database is sparser The rest ofthe paper is organized as follows The frame work of mining negative association rules is explored and the model of substitution rule mining is presented in Section 2 Algorithm SRM and an illustrative example are described in details in Section 3 Several experiments are conducted in Section 4 This paper concludes with Section 5 2 Model of Substitution Rule Mining To facilitate OUT discussion we shall first review the framework of negative association rules mining in Section 2.1 The model of substitution rule mining is then presented in Section 2.2 2.1 Mining of Negative Association Rules Same as in most prior work on mining association rules 12 51 an itemset is a set containing one or many items The support of an itemset X denoted by SX is the hction of transactions containing X in the whole dataset The item sets which meet the minimum suppolt constraint are called frequent itemsets or large itemsets SI An association rule is an implication ofthe form X+Y with XnY=o where X and Y are both frequent itemsets The support of the rule X-Y i.e Sup\(X-+Y is SxUy and the confidence of the rule X-+Y i.e ConG-tY is w Given a large data base of transactions the goal of dining association rules is to generate all rules that satisfy the user-specified con straints of minimum support and the minimum confidence i.e Sup\(X-+Y and Conf\(X+Y Definition 1 An itemset X is positive if and only if it con tains no complement items i.e X=\(il i  ik where ij is an item for 1 _ j 5 IC On the other hand the negative itemset is an itemset containing one or more complement items If a negative itemset is composed by complement items only i.e il i _ ib then this itemset is pure negative and can be denoted by x A negative association rule refers to an association rule of which either the antecedent itemset the consequent item set or both are negative An example of mining negative itemsets through a naive approach is given below for illus trative purposes Example 1 Consider the transaction database in Table l\(a We first append the complement items to each trans action as shown in Table I\(b For example the transaction with TID=l i.e a c d in Table l\(a becomes {a 6 c d E 9 in Table I\(b The resulting database in Table I is the input to the itemset generation algorithm Table I a The original transaction database b __  After complement items are added Given that MinSum.3 all the frequent itemsets can then be discovered from Table l\(b as summarized in Ta ble 2 Note that we are only interested in those complement items whose positive counterparts are frequent for market basket analysis As a result the complement item T is not shown in Table 2 since the item e is not frequent 443 


Table 2 Frequent iternsets generated from the database in Table lfb fMinSu~=0.3 Clearly with this straightforward addition of comple ment items into the database the mining of negative asso ciation rules can be performed by directly using methods devised for mining conventional association rules How ever this benefit may not be able to justify several draw backs of this naive approach in practice First excessive storage space is required to store complement items and also the additional itemsets resulted Next many of the frequent itemsets generated are composed of complement items only These itemsets are usually of little use in real applications Finally, extra database scans are needed for the mining process. In real applications, this naive approach will suffer a prolonged execution time and make mining of negative association rules an infeasible task Once the negative itemsets are generated one can dis cover all negative association rules in a straightforward manner For two itemsets X and Y where YCX the rule Y+\(X-Y is output if the required MinConf is satisfied However for our purpose of discovering substiMion rules two positive itemsets are required to form a substitute pair Thus the algorithm Apriori-Dual i.e a companion method extended from algorithm Apriori is proposed to generate only rules whose antecedent is positive and consequent is pure negative i.e X  7 whereX and Y are positive item sets Algorithm Apriori-Dual I Input MinSup and MinConf I Procedure of generating allfrequent itemsets, including I the negative ones 1 append the complement items whose positive counterpart 2 generate the set of frequent positive and negative\items 3 remove the negative items whose positive counterpart is 4 fork 2 2 do 5 generate the candidate set of k-itemsets from Lk.1 i.e 6 if Ck is empty then break 7 scan the transactions to calculate supports of all candi is not original present to each transaction i.e LI not frequent from LI ck  Lk.1 M Lk.1 date k-itemsets 8 Lk   C\200Ck 1 sc 2 MinSup  9 I 11 Procedure ofnegative association rule generation 10.foreach negative itemset X in Lks do 11 let Y be the largest pure negative itemset that Y c X 12 if X-Y is not an empty set  X-Y\is positive 13 14 15 if Conf\(\(X-y  7 2 MinCont output the rule X-7  7 As pointed out before the problem formulation of the negative association rule mining is different from that of the substitution rule mining In addition since complement items are appended to the original transaction database the computation cost of algorithm Apriori-Dual is as con formed by OUT experimental results very high These draw backs reduce the practicability of using algorithm Apriori Dual for identifying substitute itemsets Consequently a new algorithm for mining substitution rules is proposed and will be described in later sections 2.2 Mining of Substitution Rules As mentioned before the process of mining substitution rules can be decomposed into two procedures The first one is to identify concrete itemsets among large amounts of itemsets The second one is on the substitution rule gen eration The chi-square test SI is employed to identify concrete itemsets by statistically evaluating the dependency among items in individual itemsets Also the Pearson prod uct moment correlation coefficient S I I is utilized to mea sure the correlation between two itemsets 2.2.1 Identification of Concmte Itemsets Concrete item sets are those possible itemsets which could be choices for customers with some purchasing purposes To qualify an itemset as a concrete one not only the purchasing fre quency i.e support of an itemset but also the dependency of items has to be examined to declare that these items are purposely purchased together by customers One common approach is to evaluate the dependence among items in an itemset by the chi-square test 14 10 131 Specifically the chi-square value for an itemset can be derived in terms of supports and expected supports of its corresponding item sets as stated in Theorem 1 below Theorem 1 Let X={xl xz  xk be a positive k-itemset the chi-square value for X is computed as where n is the number of total transactions Y denotes the positive itemset where all complement items in item set Y are replaced by their positive counterparts e.g a,6Pft={a,b,c where a b and c are positive items and EI  n S is the expected support of I E I 444 


Pmfi Since the itemset X is of size k and the presence of an item in each transaction is 0-1 valued a correspond ing 2x2   x2 k-dimensional contingency table can be constmcted Each dimension of this contigency table cor responds to the presence of an item i.e xi 200 X in each transaction The values of these cells are exactly the sup ports of itemsets  s  Zi  4  xk  XI x2  xk and the summation ofthese values is n i.e the number of transactions Also the corresponding itemsets above can be formulated as Y I Y\222=X The chi-square value is then computed by 0 E Chi\(X  c cEEcll E 222 where 0 is the observed value and E is the expected value of cell c in the contingency table For any itemset I and its corresponding cell c that I+=X we have 0 n x WandE n x nS El With some algebraic manipulations we have nx  Q.E.D I\200 IY 1V.X To utilize the chi-square test to verify whether the oc currences of given items are dependent two contradictive hypotheses are made H The occurrences of all items\(xl-xk are independent  HI  is rejected With Theorem 1 to declare the dependency among items in an itemset X or to support hypothesis HI the chi-square value for X is required to be no less than a threshold i.e In addition it follows from advanced statistics and infor mation theory 9 that corresponding degree of freedom for this test can be denoted by CWX 2 x:f\(x 222 df\(X  n\(u  vi  11  1  2  k  I where c\(v is the number of categories in dimension i i.e c\(v for all dimensions since the presence of an item in each transaction is 0-1 valued We comment that the results derived in Theorem 1 are essential for our mining of substitution rules and are not subsumed by the work in 4 In 141 it was stated that \223if S is correlated with significance level a any superset of S is also correlated with significance level a.\224 From Theorem 1 in 141 one may mistakenly assume that the chi-square test for itemsets at a given significance level is upward closed as stated in Theorem I in 4 However as also noted in 6 this upward closure property is not fully correct Ex plicitly the first statement of the proof of Theorem 1 in 141 223The key observation in proving this is that not matter what k is, the chi-squared statistic has only one degree of free dom\224 which its subsequent proof is based upon is not true thereby leading to incorrect conclusions A counterexample of Theorem 1 in 4 is given in the Appendix for interested readers Specifically as opposed to what Thwrem 1 in 4 suggests, all correlated itemsets, rather than only minimally correlated ones should be discovered This in hun justifies the necessity of our development of the process to identify concrete itemsets in this paper Without loss of generality a concrete itemset is thus de fined to be a frequent iternset which is positively correlated given a significance level Y usually a  0.05 if it con tains more than one item Note that the significance level of a concrete itemset is expected to be at least no less than that of its subsets For example if the itemset flashlight battery has a quite high chi-quare value then its super set e.g flashlight battery, pencil\could still have a high chi-square value x even though pencil is not so correlated with the other items Definition 2 A positive frequent itemset X={xl x2  xk is called a concrete itemset if and only if I k=l or 2 k22 Sx  Sz and Cht\(X t x;m where n S corresponds to the expected support for itemset X and x is the value of chi-square distrib ution with degree of freedom df\(X at probability a Note that SX  n Sz is required to ensure that all x E X are positively correlated The value of x&xp can be obtained by the table look up As mentioned ear ier the usual value a  0.05 is used in this study for statistical significance Considering itemset a d in Table 2 for example Sod  0.3  S x sd  0.6 x 0.3 Also the chi-square value for a d is EX EX EX 0.5\222 0.22 0.3\222 IO x  O I 0.5 x 0.7 0.5 x 0.7 0.5 x 0.3 445 


Thus, {a d is a concrete itemset 2.2.2 Testing of Negative Correlation To evaluate the correlation between two concrete itemsets we adopt the measurement of Pearson product moment correlation coef ficient SI Theorem 2 states that the correlation coefficient of two itemsets can be determined by their supports Theorem 2 Let X and Y be two itemsets with XnY=0 The correlation coefficient of X and Y can be formulated in terms of their supports. Explicitly Proofi Since variables corresponding to occurrence of items in a transaction database are all 0-1 valued, it follows that EX=EX'=Sx, EY=EY2=Sy and E\(XY where E stands for the expected value According to the definition of correlation coefficient we have c4x Y JVar\(X Var\(Y  E[\(X  EX Y  EY JE[\(X EX E[\(Y  E\(XY  EX EY EX2  EX EY  EY SXY  sx  SY    J[Sx  SX  Note that when both variables to be correlated are binary as in this case we may use the phi coefficient of correlation as stated in ll 121 instead ofp\(X,Y in Theorem 2 How ever the phi coefficient of correlation and the Pearson prod uct moment correlation coefficient are in fact algebraically equivalent and give identical numerical results Therefore for notational simplicity we employ p\(X,Y to express the results of Theorem 2 Consequently a substitution rule can be defined as be low Definition 3 Given two itemsets X and Y and XnY=0 X is a substitute for Y denoted by XDY if and only if I both X and Y are concrete 2 andY arenegatively correlated i.e p\(X,Y 5 0 usually pmi,=0 for simplicity and Sup\(X y and Conf\(X y 3 the negative association rule X V is valid i.e 3 SRiW Substitution Rule Mining Given the definitions of concrete itemsets and substitu tion rules a detailed description of algorithm SRM for min ing substitution rules is given Algorithm SRM I Input MiiSup MinConf and pmi I Procedure of identifving concrete itemsets 1 generate the set of all frequent \(positive\items i.e Li and assign Lt to the set of concrete itemsets 2 fork 33 ddf 3 generate the candidate set ofk-itemsets from Lk.1 i.e  Lk.1 w Lk.1 4 5 if 4 is empty then break scan the transactions to calculate supports of all candi  date k-itemsets Lk   C\200ck I s 2 MinSup.1 foxtach frequent itemset X in Lk do 6 1 8 9 10  11 13 if\(p\(X Y  p,3 if Sx  n SZi  Chi\(X 2 X&~,J EX add X to the set of concrete itemsets I Procedure of substifution rule generation 12.foreach pair of concrete itemsets X Y do 14 15 16 The execution of algorithm SRM can be best understood by the example below Example 2 Consider the transaction database in Table I\(a Algorithm SRM first performs the procedure of iden tifying concrete itemsets i.e operations from line 1 to line I1 in algorithm SRM Given MinSup=0.2 and Min Conf=0.7, the frequent itemsets can be first obtained as in Table 3 The dependency among items in these frequent itemsets is then evaluated By Definition 2 chi-square tests of con creteness are performed on each k-itemset for k>2 The chi-square values of these frequent itemsets are also shown in Table 3 where only two frequent 2-itemsets are found concrete Note that a c d} fails to pass the test since @\({a c d and Chi\({a,c,d  6.38  x~,o.os  9.49 Table 3 Frequent positive itemsets their supports and chi-square values generated from Table l\(a if Sup\(X  v  MinSup  Conf\(X Y 2 MinConf 11 X  7 is valid output the substitution rule X D Y concrete 0.2 a c d 0.2 Next in the procedure of substiMion rule generation i.e operations from line 12 to line 16 in algorithm SRM the candidate substitution pairs can then be generated by 446 


0.85 0.9 0.95 1 1.m 1.1 Viobtion Ratio a Violation ratio distribution curve for results of Dba M 0.85 0.9 0.95 1 l.M 1.1 Viobtion Ratio b Violation ratio distribution curve for results of Dspm Figure 1 Violation ratio distribution curves joining on these concrete itemsets By examining the sup port confidence and correlation of these candidate pairs substitution rules can be generated as in Table 4 Table 4 Substitution rules discovered with MinSup=0.2 MinConf=0.7 and pmin=-O.5 0.65 0.65 0.65 4 Experimental Results The simulation model of our experimental studies is de scribed in Section 4 l The quality of substitution rules gen erated is evaluated in Section 4.2 4.1 Simulation Model As mentioned in Section 2.1 mining negative associa tion rules by appending complement items to the original transaction database incur both an excessive storage space and a huge computational cost Without the process of gen erating rules with the required form as adopted by Apriori Dual the computation time of the naive approach for gen erating negative association NI is shown by our exper iments to be longer in several orders than those of both the algorithms Apriori-Dual and SRM Therefore, only the algorithms Apriori-Dual and SRM are being compared in following experiments We use two synthetic datasets i.e Ddenae and DapVae generated by a randomized transaction generation algorithm in 16 The values of parameters used to generate the datasets are summarized in Table 5 where both the dense and the sparse dataset distributions are considered Table 5 Parameter settings of the synthetic datasets TI IO I 5 I Average size of transactions I Ddenac I D I Meaning 11 50 I 100 I Number of items D I 10,000 I 10,000 I Numberoftransactions 4.2 Evaluation of Rule Quality To evaluate the quality of a substi&tion rule we may count the number of transactions which contain only one of the substitutive itemsets in the rule i.e the antecedent or the consequent Hence the violation ratio proposed in I is adopted Specifically a pair of substitutive itemsets is said to be in violation if exactly only one of them is present in a bansaction. The violation ratio is defined as the ratio of the number of real violations to the expected number of vi olations Thus the latgerthe value ofthe violation ratio of a rule the more likely its antecedent and consequent itemsets are substitutes for each other Note that the violation ratio of an interesting substitution rule should be lager than one 447 


SRM D-"sa mi 61 m 0  5 0.8 0.1 0 0 I 0.1 0 0.1 Correlation Correlation Figure 2 Quality matrix in the dense dataset Apriori-Dual Dswe 1.2 61 61 0 m 5 5 0.8 0.8 0.1 0 0.1 0.1 0 0.1 Correlation Correlation Figure 3 Quality matrix in the sparse dataset Experiments on the two datasets are conducted with MinSup=15 Ddenee MinSup=lO Dsprse and Min Conl%O The distribution curves for results of both sparse and dense datasets are depicted in Figure 1 Note that the percentage of population rather than the actual num ber of rules is used as the measurement for vertical axes in both cham Also to provide a remarkable index for eval uating the quality of rules, proportions of interesting rules i.e whose violation ratios are largerthan I to uninteresting ones are also presented as pie charts in Figure 1 Note that more than half ofrules generated by algorithm Apriori-Dual in both datasets have a violation ratio less than one In con trast more than 98 of rules generated by algorithm SRM are interesting for both datasets Also note that algorithm Apriori-Dual favors dense databases while algorithm SRM performs well in each dataset, showing that algorithm SRM is more adaptive and robust The resulting rules by Apriori-Dual and SRM for both datasets are plotted in Figure 2 and Figure 3 where each point corresponds to a rule produced The y-axis indicates the violation ratio and the x-axis shows the correlation ofthe antecedent and the consequent itemsets of the rule Each figure is divided into four areas In the upper right area the rules are the most interesting ones among those in all areas due to the negative correlation of the antecedent and the consequent of each rule and high violation ratios Note that rules generated by algorithm Apriori-Dual and algorithm SRM are subsets of negative association rules It can be seen from Figure 2 and Figure 3 that algorithm SRM can generate the most appropriate ones on the basis of neg ative association rules 5 Conclusions In this paper, a new mining capability, called mining of substitution rules is explored The notion of evaluating the dependency among items in a concrete itemset proposed in this paper offers another dimension for itemset selection \(in addition to the one of using the support threshold\thereby being able to lead to more interesting results in the suhse quent rule derivation based on these itemsets We have de rived theoretical properties for the model of substitution rule mining and devised a technique on the induction of positive itemset supports to improve the efficiency of support count ing for negative itemsets In light of these properties al gorithm SRM is proposed to discover the substitution rules 448 


efficiently while attaining good statistical significance It is shown by empirical studies that algorithm SRM not only has very good execution efficiency but also produces sub stitution rules of very high quality Acknowledgement The authors are supported in part by the National Science Council Project No NSC 91-2213-E-002-034 and NSC 91-2213-E-002-045 Taiwan Republic ofChina References I C C Agganval and P S Yu A New Framework for Item set Generation Proceedings of he 17th ACM SIGACT SICMODSICART Symposiwn on Principles of Dalabase Sysrems pages 1M4 June 1998 121 R Agrawal T Imielinski and A Swami Mining Associa tion Rules between Sets of hems in Large Databases Pm ceedings of he 1993 ACM SIGMOD In:ermtio~l Confir ence on Mamgement o/Do:a pages 207-216 May 1993 31 I.-E Boulicaut A Bykowski and B Jeudy Towards the Tractable Discovery of Association Rules with Negations Proceedings of he 4:h Inlerndional Conference on Flexible Query Awering Syslems pages 425-434 October 2000 41 S Brin R Motwani, and C. Silverstein Beyond Market Bas kets Generalizing Association Rules W Correlations Pro ceedings of he 1997 ACM SIGMOD In1erna:ionol Confer ence on he Monagemen oJDala pages 265-276 May 1997 151 M.-S Chen I Han and P S Yu Data Mining An Overview fiom Database Perspective IEEE Tmns0c:ionr on Knowl edge ondDa1a Engineering 8\(6 December 1996 61 W DuMouchel and D Pregibon Empirical Bayes Screening for Multi-Item Associations Pmceedings 0f:he 7:h ACM SlGKDD Imernalional Confirence on Knowledge Discovery andData Mining pages 67-76 August 2001 71 I Han and M Kamber Data Mining Concepfs and Tech niques Morgan Kaufmann Publishers 2000 E R V Hogg and E A Tanis Probability adS:a:is:ica In ference 6/e Prentice-Hall International Inc 2001 9 1 C Hosseini R R Harmon and M Zwick An Infoma iion Theoretic Framework for Exploratory Multivariate Mar ket Segmentation Research Decision Sciences 22:663-617 1991 IO C Iermaine The Computational Complexity of High Dimensional Correlation Search Proceedings of he 1st IEEE Inlemlional Conference on Dolo Mining pages 249 256 November 2001 I I R A Johnson and D W Wichern App/iedMul:ivario:e 910 is:icolAnalysis 5/e Prentice-Hall International Inc 2002 1121 M G Kendall and G U Yule Jo~rno/o/R~~a/S:a:istical Society 115 pages 15&161 1952 131 B. Liu W Hsu and Y Ma IdentifyingNon-Actionable As sociation Rules Proceedings ofrhe 7:h ACM SIGKDD In lermlional Conference on Knowledge Discovery ad Data Mining pages 329-334 August 2001 1141 S Ma and I L Hellerstein Mining Mutually Dependent Pat terns Proceedings ofthe Is IEEE In:erm:ioml Conference on Dora Mining November 2001 1151 A Savasere E Omiecinski and S Navathe Mining for Sbong Negative Associations in a Large Database of Cus tomer Transactions Pmceeding of he 14:h In:erno:ioml Conference on Dola Engineering pages 494-502 February 1998 1161 R Srikant and R. Agrawal Mining Generalized Association Rules Proceedings ofrhe 2l:h 1n:ernationaI Conference on F\221erybrge Dara Bores pages 407419 September 1995 Appendix A Counterexample to Theorem 1 in 4 Theorem 1 in 141 In the binomial case the chi-square sta tistic is upward closed This theorem means that 223if S is correlated with signifi cance level a any superset of S is also correlated with sig nificance level a.\224 Consider a contingency table which is slightly modified kom the one provided in 4 Table 6 An example contingency table of market basket data for coffee c tea t and doughnuts d 10 2 From Theorem 1 in this paper we have 3.98 and As mentioned in Section 2.2 the corresponding degrees of freedom should increase with k i.e df\({c t and df\({d c t respectively Given a significance level a=0.05 it can be verified that Chi\({c t  3.98  X:,O.OS  3.84 and Chi\({d c t  4.49  x~,o.os  9.49 Note that c t passed the chi-square test and d c t did not meaning that the chi-square test is not upward closed This leads to a counterexample to Theorem 1 in 4 449 


However such methods are only applicable for the tasks for which they were designed and may not help the developer's fundamental understanding of the library Also there is no guarantee that the developers of the library would foresee all typical applications of that library Finally these methods simply generate skeleton code they do not present the user with examples on how to 002ll in and extend this skeleton code While there has been other research on the use of examples to illustrate software reuse 10 1 t h e w o rk m o st closely related with our own as far as we know is that on 223exemplars\224 12 Speci\002cally  a n e x e mplar i s a n e xecutable visual model consisting of one or more instances of at least one concrete class for each abstract class in a library By browsing these classes as well as their static relationships and dynamic interactions one can get a general understanding of how the framework works For example a GUI library might have an exemplar that consists of a window object together with its menu bar tool palette canvas and some widgets on the canvas Since libraries have only a few abstract classes a small number of instances suf\002ce in creating an exemplar The developer would not only explore the structural relationships in the exemplar but also the collaborative relationships among objects by observing message passing among these objects While exemplars may be helpful they are pre-selected and not representative of any particular class of applications Moreover they place an extra burden on the developers of the software library In contrast our approach allows the user to examine a particular aspect of the library that is of interest Moreover the tool is fully automated and works on any existing code Finally we note that our approach is also top-down One starts out with some fundamental library components as inferred by inspecting the reuse boundaries and then queries/browses association rules for such components Returning to the Jigsaw puzzle analogy observe that puzzle pieces are designed to 002t an outline Consequently it would be easier to start out with the outline and place pieces accordingly Top-down approaches identify those essential components in the library that one can extend and modify in an application 227 in essence the outline to the Jigsaw puzzle 7 Conclusions and Future Work In this paper we have shown how data mining can be used to discover library reuse patterns in user-selected applications This can be helpful in building and debugging applications that use a particular library by observing how other developers have used that library in their applications As an example we have shown how a developer might use our tool CodeWeb to identify reuse patterns in the ET application framework In our approach we mine association rules that identify library components that are often reused in combination by application components By querying and/or browsing such association rules a developer can discover patterns for reusing library components Moreover the association rules can be used to automatically warn developers when their application reuses library components in a way that differs from characteristic usage in applications written by others An important aspect of our approach is that it requires no extra effort on the part of the library developer and can be used with any existing software library Also it is important to note that our method is not intended to replace current techniques for learning to use libraries but rather to complement them While we have used the ET framework as a running example throughout this paper it is actually not the best candidate to demonstrate data mining While ET is elegant and well-known in the research literature which is partly why we used it here few applications have been written using it Our data mining approach works better with more applications We do not see this as a major shortcoming since most developers are interested in learning those libraries that are widely used in practice Currently we are carrying out a case study using the popular KDE libraries and over one hundred real-life applications based on them 1 In this paper we mined association rules at a reasonably high level of abstraction by considering classes functions and various reuse relationships between For some relationships such as method calls we have completely abstracted away the order in which they occur In future work it would be interesting to take into account ordering when generating association rules For example with an I/O library one might 002nd that 002les are typically processed by calling functions open  read\(\/write and close in that order Currently we extract all information statically from the source code However it may be interesting to incorporate dynamic information from running applications that use a particular library For example when determining method call relationships we may include only those that occur with a high frequency In this way it may be possible to abstract away non-essential calls thus focusing the user's attention to particularly fundamental association rules Finally one can view the approach described in this paper as learning from positive experience  That is library reuse that has worked in practice Presumably one would select 223stable\224 applications to demonstrate reuse patterns in 1 The KDE project aims to build a graphical desktop environment for Unix workstations that rivals Microsoft Windows See http://www.kde.org for details We have mined KDE reuse patterns by analyzing over 100 applications The resulting association rules are available at http://www.cs.washington.edu/research/projects/se/www/kde/reuse patterns 


a library However one can also mine negative experience  That is misunderstandings and problems that came up when reusing components from a software library For future work it would be interesting to determine if one can mine negative experience in an automated way 227 perhaps by analyzing application CVS logs for reuse patterns that were problematic and later corrected References 1 R  A g r a w al T  I m i elin sk i an d A  S w a m i  M in ing association rules between sets of items in large databases In SIGMOD  pages 207\226216 1993  R  A gra w al and R  S ri kant  F as t a l gori t h ms for m i n i n g association rules In Proceedings of the 20th VLDB Conference  pages 487\226499 1994  R  J  B ayardo Ef 002 c i e nt l y mi ni ng l ong pat t e rns from databases In SIGMOD 98  pages 85\22693 1998  R  J  B ayardo R  Agra w a l  and D  G unopulos Constraint-based rule mining in large dense databases In 15th International Conference on Data Engineering  1999 5 F  B er g a d a n o an d D  G u n e tti T e stin g b y m ean s o f i n ductive program learning ACM Transactions on Software Engineering and Methodology  5\(2\119\226145 1996  T  J  B iggers taf f  D es ign r eco v e ry for m aintenance and reuse Computer  22\(7\36\22649 1989  W  W  C ohen Induct i v e s p eci 002 cat i o n r eco v e ry U nderstanding software by learning from example behaviors Automated Software Engineering  2\(2\107\226129 1995  C  M ont es de Oca a nd D L C a rv er  I dent i 002 cat i o n of data cohesive subsystems using data mining techniques In Proceedings of the International Conference on Software Maintenance  pages 16\22623 1998  C  M ont es de Oca a nd D L C a rv er  A vi s u al repres entation model for software system decomposition In Proceedings of the 5th International Working Conference on Reverse Engineering  pages 231\226240 1998  G F i s c her  S  Henni nger  and D  R edmi l e s  Int e rt wi ning query construction and relevance evaluation In CHI 91  pages 55\22662 1991  W  B  Frak es and B  A  N ejmeh Softw a re reus e through information retrieval In 20th Hawaii International Conference on System Sciences  pages 530\226 535 IEEE 1987  D Gangopadhyay a nd S  Mi t r a Des i gn by frame w o rk completion Automated Software Engineering  3:219\226 237 1996  J  Ges s a rol i  Dat a mi ni ng A p o w erful t echnol ogy for database marketing Telemarketing  13\(11\64\22668 1995  R  Kazman and S  J  C arriere V i e w e x traction a nd view fusion in architectural understanding In 5th International Conference on Software Reuse  IEEE 1998 15 C D Kri v d a  B o o m in g b u s in ess i n t ellig en ce Midrange Systems  8\(12\32\22634 1995  C  D Kri vda U neart h i n g under g round dat a  LAN  May 1996 17 A Mich ail a n d D No tk in  I llu stratin g o b j ect-o rien ted library reuse by example A tool-based approach In 13th IEEE International Conference on Automated Software Engineering  pages 200\226203 1998  A Moormann-Zarems ki and J  M  W i ng S p eci 002 cation matching of software components ACM Transactions on Software Engineering and Methodology  6\(4\333\226369 1997  L R  Neal A s y s t em for e xample-bas ed programming In CHI 89  pages 63\22668 1989  W  P r ee G P o mber ger  A S c happert  a nd P  S o mmerlad Active Guidance of Framework Development Software-Concepts and Tools  16\(3\136\22645 1995 21 R Prieto Diaz a n d P  Freem an  C lassify in g s o f tw are for reusability IEEE Software  4\(1\6\22616 1987 22 G Sn eltin g a n d F  T i p  Reen g i n eerin g c lass h i erar chies using concept analysis In 6th ACM SIGSOFT International Symposium on the Foundations of Software Engineering  pages 99\226110 1998  S Sparks  K  B enner  and C  F aris  Managing objectoriented framework reuse Computer  29\(9\52\22661 1996  R  S r i k ant a nd R  Agra w a l  Mi ni ng general i zed as s o ciation rules In Proceedings of the 21st VLDB Conference  1995  A W e i n and E Gamma a nd R  Mart y  ET++\227 an object oriented application framework in C In OOPSLA  pages 46\22657 1988  A S  Y e h D R  Harri s  and M  P  C has e  Mani pulating recovered software architecture views In Proceedings of the International Conference on Software Engineering  pages 184\226194 1997 


CMP A Fast Decision Tree Classifier Using Multivariate Predictions  449 H Wang and C Zaniolo Mining Recurrent Items in Multimedia with Progressive Resolution Refinement  461 0 Zai'ane J Hun and H Zhu Panel Session 22 Is E-Commerce a New Wave for Database Research Moderator Anant Jhingran IBM T.J Watson Research Center USA Panelists Sesh Murthy IBM T.J Watson Research Center USA Sham Navathe, Georgia Institute of Technology USA Hamid Pirahesh IBM Almaden Research Center USA Krithi Ramamrithan University of Massachusetts-Amherst USA Industrial Session 23 Java and Databases Pure Java Databases for Deployed Applications  477 N Wyatt Database Technology for Internet Applications  700 A Nori Session 24 Association Rules and Correlations Finding Interesting Associations without Support Pruning  489 E Cohen M Datar S Fujiwara A Gionis P Indyk R Motwani J Ullman and C. Yang Dynamic Miss-Counting Algorithms Finding Implication and Similarity Rules with Confidence Pruning  501 S Fujiwara J Ullman and R Motwani Efficient Mining of Constrained Correlated Sets  512 G Grahne L Lakshmanan and X Wang Session 25 Spatial and Temporal Data Analyzing Range Queries on Spatial Data  525 J Jin N An and A Sivasubramaniam Data Redundancy and Duplicate Detection in Spatial Join Processing  535 J.-P Dittrich and B Seeger Query Plans for Conventional and Temporal Queries Involving Duplicates and Ordering  547 G Slivinskas C Jensen, and R Snodgrass xi 


Industrial Session 26 XML and Databases Oracle  The XML Enabled Data Management System  561 S Banerjee V Krishnamurthy M Krishnaprasad, and R Murthy XML and DB2  569 J Cheng and J Xu Session 27 High-Dimensional Data Independent Quantization An Index Compression Technique for High-Dimensional Data Spaces  577 S Berchtold, C Bohm H Jagadish H.-P. Kriegel and J Sander Deflating the Dimensionality Curse Using Multiple Fractal Dimensions  589 B.-U Pagel F Korn and C. Faloutsos Similarity Search for Multidimensional Data Sequences  599 S.-L Lee S.-J Chun D.-H Kim, J.-H Lee and C.-W Chung Session 28 Web-Based Systems WRAP An XML-Enabled Wrapper Construction System for Web Information Sources  611 L Liu C Pu and W. Hun Self-Adaptive User Profiles for Large-scale Data Delivery  622 U Cetintemel M Franklin and C. Giles Industrial Session 29 Main Memory and Small Footprint Databases In-Memory Data Management in the Application Tier  637 The TimesTen Team SQLServer for Windows CE -A Database Engine for Mobile and Embedded Platforms  642 P Seshadri and P. Garrett Join Enumeration in a Memory-Constrained Environment  645 I Bowman and G Paulley xii 


Plenary Panel Session 30 XML Databases   Moderator: Michael Carey, IBM Almaden Research Center USA Panelists Adam Bosworth, Microsoft Corporation USA David De Witt University of Wisconsin-Madison, USA Alon Levy University of Washington USA Bruce Lindsay IBM Almaden Research Center USA Jennifer Widom Stanford University USA Demo Session 1 Web Query Optimizer  661 V Zadorozhny L Bright L Raschid T Urhan and M Vidal ReQueSS: Relational Querying of Semi-structured Data  664 R Sunderraman The IDEAL Approach to Internet-Based Negotiation for E-Business  666 J Hammer C Huang Y Huang C Pluempitiwiriyawej M Lee H Li L Wang Y Liu and S Su READY A High Performance Event Notification Service  668 R Gruber B Krishnamurthy, and E Panagos A Multimedia Information Server with Mixed Workload Scheduling  670 G Nerjes DISIMA An Object-Oriented Approach to Developing an Image Database System  672 V Oria T Ozsu P Iglinski B Xu and L Cheng Demo Session 2 The Collaboration Management Infrastructure  677 H Schuster D Baker A Cichocki D Georgakopoulos and M Rusinkiewicz Assisting the Integration of Taxonomic Data The LITCHI Toolkit  679 I Sutherland J Robinson S Brandt A Jones S Embury W Gray R White and F Bisby TheaterLoc: Using Information Integration Technology to Rapidly Build Virtual Applications  681 G. Barish Y.4 Chen D Dipasquo, C Knoblock S Minton I Muslea and C Shahabi Lineage Tracing in a Data Warehousing System  683 Y Cui and J Widom xiii 


The Mentor-Lite Prototype A Light-Weight Workflow Management System  685 J Weissenfels M Gillmann 0 Roth, G Shegalov and W Wonner Location Prediction and Queries for Tracking Moving Objects  687 0 Wolfson B Xu and S Chamberlain Semiorder Database for Complex Activity Recognition in Multi-Sensory Environments  689 S Bhonsle A Gupta S Santini and R Jain Tutorial 1 Web Information Retrieval  693 M Henzinger Tutorial 2 Mobile and Wireless Database Access for Pervasive Computing  694 P Chrysanthis and E Pitoura Tutorial 3 Data Mining with Decision Trees  696 J Gehrke Tutorial 4 Directories Managing Data for Networked Applications  697 D Srivastava Tutorial 5 Indexing High-Dimensional Spaces Database Support for Next Decade\222s Applications  698 S Berchtold and D Keim xiv 


 T5.I2.D100K T10.I4.D100K T15.I4.D100K T10.I6.D400K T10.I6.D800K T10.I6.D1600K Optimizations across Databases 5 0 5 10 15 20 25 30 35 40 45 Improvement COMP TREE COMP-TREE 1 2 4 8 1 2 4 8 1 2 4 8 2 4 8 2 4 8 1 2 4 8 Processors Databases Figure 5 Effect of Computation and Hash Tree Balancing good as the COMP optimization The reason that the hash tree balancing is not suf\336cient to offset inherent load imbalance in the candidate generation in this case The most effective approach is to apply both optimizations at the same time COMP-TREE The combined effect is suf\336cient to push the improvements in the 40 range in the multiple-processor case On 1 processor only hash tree balancing is bene\336cial since computation balancing only adds extra cost 5.4 Short-circuited Subset Checking Figure 6 shows the improvement due to the short-circuited subset checking optimization with respect to the unoptimized version The unoptimized version is the Apriori algorithm due to Agrawal et al 5 The results are presented for dif ferent number of processors across dif ferent databases The results indicate that while there is some improvement for databases with small transaction sizes the optimization is most effective when the transaction size is large In this case we get improvements of around 25 r the unoptimized version To gain further insight into this optimization consider 336gure 7 It shows the percentage improvement obtained per iteration on applying this optimization on the T20.I6.D100K database It shows results only for the uni-processor case r similar results were obtained on more processors We observe that as the iteration k increases there is more opportunity for shortcircuiting the subset checking and we get increasing bene\336ts of up to 60 The improvements start to fall off t the high end where the number of candidates becomes small resulting in a small hash tree and less opportunity for short-circuiting It becomes clear that is an extremely effective 15 Proceedings of the 1996 ACM/IEEE Conference on Supercomputing \(SC\22296 0-89791-854-1/96 $ 10.00 ACM 


 T5.I2.D100K T10.I6.D800K T15.I4.D100K T20.I6.D100K procs across Databases 0 5 10 15 20 25 Improvement 1 2 4 8 Figure 6 Effect of Short-circuited Subset Checking 23456789101112 Iterations 0 10 20 30 40 50 60 improvement T20.I6.D100K Figure 7  Improvement per Iteration  proc   16 Proceedings of the 1996 ACM/IEEE Conference on Supercomputing \(SC\22296 0-89791-854-1/96 $ 10.00 ACM 


optimization for larger transaction sizes and in cases where there are large number of candidate k itemsets 6 Conclusions In this paper e presented a parallel implementation of the Apriori algorithm on the SGI Power Challenge shared memory multi-processor We also discussed a set of optimizations which include optimized join and pruning computation balancing for candidate generation hash tree balancing and short-circuited subset checking We then presented experimental results on each of these Improvements of more than 40 were obtained for the computation and hash tree balancing The short-circuiting optimization was found to be extremely effective for databases with large transaction sizes Finally we reported the parallel performance of the algorithm While we d good speed-up we observed a need for parallel I/O techniques for further performance gains References  R Agra wal T  Imielinski and A Swami Database mining A performance perspecti v e  I n IEEE Trans on Knowledge and Data Engg  pages 5\(6 1993  R Agra wal T  Imielinski and A Swami Mining association rules between sets of items in lar ge databases In Proc M SIGMOD Intl Conf Management of Data  May 1993  R Agra wal H Mannila R Srikant H T o i v onen and A I V erkamo F ast disco v ery of association rules In U F et al editor Advances in Knowledge Discovery and Data Mining  MIT Press 1996  R Agra wal and J Shafer  P arallel mining of association rules design implementation and e xperience Technical Report RJ10004 IBM Almaden Research Center San Jose CA 95120 Jan 1996  R Agra wal and R Srikant F ast algorithms for mining association rules In Proc 20th VLDB Conf  Sept 1994  M Cierniak W  Li and M J Zaki Loop scheduling for heterogeneity  I n 4th IEEE Intl Symposium on High-Performance Distributed Computing also as URCS-TR 540 CS Dept Univ f Rochester  Aug 1995  M Holsheimer  M  K ersten H Mannila and H T o i v onen A perspecti v e on databases and data mining In 1st Intl Conf Knowledge Discovery and Data Mining  Aug 1995  M Houtsma and A Swami Set-oriented mining of association rules In RJ 9567  IBM Almaden Oct 1993  H Mannila H T o i v onen and I V erkamo Ef 336cient algorithms for disco v ering association rules In AAAI Wkshp Knowledge Discovery in Databases  July 1994  J S P ark M Chen and P  S Y u  A n e f fecti v e hash based algorithm for mining association rules In Proc M SIGMOD Intl Conf Management of Data  May 1995 17 Proceedings of the 1996 ACM/IEEE Conference on Supercomputing \(SC\22296 0-89791-854-1/96 $ 10.00 ACM 


 J S P ark M Chen and P  S Y u  E f 336cient parallel data mining for association rules T echnical Report RC20156 IBM T J Watson Research Center Aug 1995  G Piatetsk y-Shapiro Disco v ery  presentation and analysis of strong rules In G P S et al editor  KDD  AAAI Press 1991  A Sa v asere E Omiecinski and S Na v athe An ef 336cient algorithm for mining association rules in large databases In Proc 21st VLDB Conf  1995  M J Zaki M Ogihara S P arthasarathy  and W  Li P arallel data mining for association rules on shared-memory multi-processors Technical Report 618 Department of Computer Science University of Rochester 618 1996 18 Proceedings of the 1996 ACM/IEEE Conference on Supercomputing \(SC\22296 0-89791-854-1/96 $ 10.00 ACM 


