Creating Adaptive Web Sites Through Usage-Based Clustering of URLs Bamshad Mobasher Dept. of Computer Science, DePaul University, Chicago, IL mobasher@cs.depaul.edu Robert Cooley, Jaideep Srivastava Dept. of Computer Science, University of Minnesota, Minneapolis, MN cooley@cs.umn.edu  srivasta@cs.umn.edu Abstract In this paper we describe an approach to usage-based Web personalization taking into account both the offline tasks related to the mining of usage data, and 
the online process of automatic Web page customization based on the mined knowledge Specifically, we propose an effective technique for capturing common user profiles based on associationrule discovery and usage-based clustering. We also propose techniques for combining this knowledge with the current status of an ongoing Web activity to perform real-time personalization. Finally, we provide an experimental evaluation of the proposed techniques using real Web usage data 1 Introduction Web personalization has quickly moved from an 
added value feature to a necessity, particularly for large information services and sites that generate revenue by selling products. Web personalization can be viewed as using user preferences profiles to dynamically serve customized content to particular users. User preferences may be obtained explicitly, or by passive observation of users over time as they interact with the system. Principal elements of Web personalization include modeling of Web objects pages, etc.\d subjects \(users\matching between and across objects and/or subjects, and determination 
of the set of actions to be recommended for personalization Existing approaches to Web personalization often rely heavily on human input for determining the personalization actions. For example the use of static profiles obtained through user registration is the predominant techniques used by many Web-based companies. Collaborative filtering techniques \(e.g GroupLens d F i ref l y 18 s u a ll y  inv o lv e explicit ratings of objects by users. Content-based filtering techniques such as those used by 
WebWatcher [12 and L e tizia [1 3  rely o n clie nt s id e personal profiles and content similarity of Web documents to these profiles This type of input is often a subjective description of the users by the users themselves, and thus prone to biases. Furthermore, the profile is static, and its performance degrades over time as the profile ages Furthermore, using content similarity alone as a way to obtain aggregate profiles may result in missing important relationships among Web object based on their usage Recently, a number of approaches have been 
developed dealing with specific aspects of Web usage mining for the purpose of automatically discovering user profiles. For example, Perkowitz and Etzioni proposed the idea of optimizing the structure of Web sites based co-occurrence patterns of pages within usage data for the site. Schechter et al [17 have developed techniques for using path profiles of users to predict future HTTP requests, which can be used for network and proxy caching. Spiliopoulou Cooley d Bu ch n e r an d M u lv e n n a 3 h a v e 
applied data mining techniques to extract usage patterns from Web logs, for the purpose of deriving marketing intelligence. Shah  et al  an d Nas r aou i et al 1 4] h a v e propos ed cl u s t e ri n g of user sessions to predict future user behavior In this paper we describe an approach to usagebased Web personalization taking into account both the offline tasks related to the mining of usage data and the online process of automatic Web page customization based on the mined knowledge. First we discuss the data preparation in order to transform 
Web log entries into meaningful semantic units of navigation called user transactions. We then present an effective technique for capturing common user profiles based on association-rule discovery and usage-based clustering. The clustering technique employed, called Association-Rule Hypergraph Partitioning is capable of clustering URL references directly, hence eliminating the need for discovering clusters of user transactions as the starting point for 


obtaining aggregate profiles. We also propose techniques for combining this knowledge with the current status of an ongoing Web activity to perform real-time personalization. Finally, we provide an experimental evaluation of the proposed techniques using real Web usage data 2 Mining Usage Data for Web Personalization The overall process of usage-based Web personalization can be divided into two components The offline component is comprised of the data preparation tasks resulting in a user transaction file and the specific usage mining tasks, which in our case include the discovery of association rules and the derivation of URL clusters based on user access patterns. Once the mining tasks are accomplished, the frequent itemsets and the URL clusters are used by the online component of the architecture to provide dynamic recommendations to users based on their current navigational activity. The Web server keeps track of the active user session as the user browser makes HTTP requests. The recommendation engine considers the active user session in conjunction with the URL clusters to compute a set of recommended URLs. The recommendation set is then added to the last requested page as a set of links before the page is sent to the client browser.  A generalized architecture for usage-based personalization is depicted in Figure 1. In this section, we discuss the offline components of this architecture. The online customization process is presented in the next section Figure 1. General Architecture for Usage-Based Web Personalization 


2.1 Data Preparation Tasks A critical step in effectively mining usage data for Web personalization is the cleaning and transformation of access log data, and the identification of a set of user sessions. Cleaning the server logs involves removing redundant references e.g., image and sound files, multiple frames, and dynamic pages that have the same template\leaving only one entry per page view It is also necessary to filter the log files by mapping the references to the site topology induced by physical links between pages Client-side and proxy level caching often create impediments to the identification of unique user sessions. For example, in a Web server log, all requests from a proxy server have the same identifier even though the requests potentially represent more than one user. Techniques such as the use of clientside cookies for user identification are not always practical due to privacy concerns of the users, or limitations of the capabilities of the Web server. In [6 we proposed several simple heuristics using the referrer and agent fields of a Server log to identify user sessions and infer missing references with relative accuracy in the absence of additional information such as cookies The goal of transaction identification is to dynamically create meaningful clusters of references for each user. Based on an underlying model of the user's browsing behavior, each page reference can be categorized as a content reference auxiliary or navigational erence, or hybrid In this way different types of transactions can be obtained from the user session file, including content-only transactions involving references to content pages, and navigation-content transactions involving a mix of pages types. The details of methods for transaction identification are discussed in [6 y  t h e se ssio n file may be filtered to remove small transactions and low support references \(i.e., URL references that are not supported by a specified number of user transactions\his type of support filtering is important in removing noise from the data, such as transactions corresponding to users who do not traverse the site Given the preprocessing steps outlined above, for the rest of this paper we assume that there is a set of n unique URLs U  url 1  url 2 205 url n  appearing in the preprocessed log, and a set of m user transactions T  t 1  t 2 205 t m  where each t i  316  T is a non-empty subset of U  2.2 Usage Clustering Based on Frequent Itemsets Traditional collaborative filtering techniques are often based on matching the current user's profile against clusters of similar profiles obtained by the system over time. Similar techniques have been proposed for obtaining user profiles from Web usage data by clustering user sessions How e v e r s e s s i o n clusters by themselves are not an effective means of capturing an aggregated view of common user access patterns. Each session cluster may potentially contain thousands of user sessions involving hundreds of URL references.  Furthermore, the computation of similarity or distance between user session vectors in the context of Web usage mining is not a trivial task, since feature weights based on the amount of time spent by a particular user on a page, or the number of references to a page within a session, are generally not good behavioral indicators in Web transactions In contrast to clustering user sessions, we directly compute overlapping clusters of URL references based on their co-occurrence patterns across user transactions. We call the URL clusters obtained in this way usage clusters Our experiments suggest that usage clusters tend to group together related items based on user access patterns\across transactions even if these transactions are themselves not deemed to be similar. This allows us to obtain clusters that potentially capture overlapping interests of different types of users.  However, traditional clustering techniques, such as distance-based methods generally cannot handle this type clustering. The reason is that instead of using URLs as features, the transactions must be used as features, whose number is in tens to hundreds of thousands in a typical application Furthermore, dimensionality reduction in this context may not be appropriate, as removing a significant number of transactions as features will result in losing too much information Association Rule Hypergraph Partitioning ARHP\echnique [10  i s  w e l l s u i t e d for this task, since it provides automatic filtering capabilities, does not require distance computations and can be used in high-dimensional data sets without requiring dimensionality reduction. The ARHP technique has been used successfully in a variety of domains, such as content-based categorization of Web documents Association rules capture the relationships among items based on their patterns of co-occurrence across transactions. In Web transactions, association rules capture relationships among URL references based on the navigational patterns of users. The association rule 


discovery methods, such as the Apriori algorithm initially find groups of items \(which in this case are the URLs appearing in the preprocessed log\ occurring frequently together in many transactions. Such groups of items are referred to as frequent item sets Given a set I  I 1  I 2 205 I k of frequent itemsets, the support of I i is the fraction of transactions containing I i and is denoted by s  I i erally, a support threshold is specified before mining and is used by the algorithm for pruning the search space. An association rule r is an expression of the form   X 336 Y  s r  a r   where X and Y are sets of items s r is the support of X  310 Y and a r is the confidence for the rule r given by s  X  310 Y  s  X  The frequent itemsets are used as hyperedges to form a hypergraph H  V  E where V  315  U and E  315 I A hypergraph is an extension of a graph where each hyperedge can connect more than two vertices. The weights for hyperedges are computed based on the confidence of the association rules involving the items in the frequent itemset. The hypergraph H is then partitioned into a set of clusters C  c 1  c 2 205 c h  The similarity among items is captured implicitly by the association rules. Each cluster is examined to filter out vertices that are not highly connected to the rest of the vertices of the partition.  The connectivity of vertex v a URL appearing in the frequent itemset with respect to a cluster c is defined as follows Connectivity measures the percentage of edges with which a vertex is associated.  A high connectivity value suggests that the vertex has many edges connecting a good proportion of the vertices in the partition. The vertices with connectivity measure greater than a given threshold value are considered to belong to the cluster. Additional filtering of nonrelevant items can be achieved using the support criteria in the association rule discovery components of the algorithm Once the URL clusters have been computed, a partial session for the current user can be assigned to a matching cluster. The connectivity value of an item URL\ed above is important because it is used as the weight associated with that item for the cluster These weights are used as part of the recommendation process when clusters are matched against an active user session. The details of the matching and recommendation process are discussed in the next section 3 Automatic Customization Based on Usage Clusters The online component of the Web personalization system involves the computation of a recommendation set for the current session, consisting of links to pages that the user may want to visit based on similar usage patterns. The recommendation set essentially represents a "short-term" view of potentially useful links based on the user's navigational activity through the site. These recommended links are then added to the last page in the session accessed by the user before that page is sent to the browser We use a fixed-size sliding window over the active session to capture the current user\222s history depth. A sliding window of size n over the active session allows only the last n visited pages to influence the computation of the recommendation set This makes sense in the context of personalization since most users go back and forth while navigating a site to find independent pieces of  information. In many cases these sub-sessions have a length of no more than 2 or 3 references. The notion of a sliding session window is similar to the notion of Ngrammars discussed in det e rm i n e th e optimum window size based on the average user transaction length identified during the preprocessing stage We also want to weight a URL recommendation higher, if it is farther away form the current active session. To capture this notion, we maintain a directed graph G representing the topology of the site. The physical link distance between two URLs u 1 and u 2 is the length of a minimal path from u 1 to u 2 in this site graph. Now, the physical link distance between the active session s and a URL u  317 s is denoted by dist  u  s  G hich is defined as the smallest physical link distance between u and any of the URLs in s The link distance factor of u with respect to s is defined as ldf  u  s   dist  u  s  G 1 If the URL u is in the active session, then ldf  u  s  taken to be 0. We take the log of the link distance so that it does not count too heavily compared to item weights within clusters Each URL cluster can be viewed as virtual user profile representing common access patterns.  Once a new user starts a session, our goal is to match, at each step, the partial user session with the usage clusters and provide dynamic recommendations to the user Recall that the weight of URL u in a cluster c is the        ee cv e conn v c ee c 315\316  315 


connectivity value of the item within the cluster denoted by conn  u  c as defined in the previous section. We can therefore represent each cluster c  316  C  as a vector  G  cuu u cc n c  12   where u i c conn url c url c ii  316 0  otherwise if  The current active session s is also represented as a binary\ vector s 1  s 2 205 s n where s i 1, if the user has accessed URL i in this session, and s i 0 otherwise.  The cluster matching score is now computed as follows match s c us su k c k k k c k      327 327 345 345 2 Note that the matching score is normalized for the size of the clusters and the active session. This corresponds to the intuitive notion that we should see more of the user's active session before obtaining a better match with a larger cluster representing a user profile.  Given a cluster c and an active session s a recommendation score Rec  s  u is computed for each URL u in c as follows  Rec s u conn u c match s c ldf s u       327\327 05 If the URL u is in the current active session, then its recommendation value is zero because of the link distance factor. Finally, we can compute the recommendation set Recommend  s or current active session s by collecting from each cluster all URLs whose recommendation score satisfies a minimum recommendation threshold r i.e Recommend s u c C Rec s u i c i c       316 263 and r  Furthermore, for each URL that is contributed by several clusters, we use its maximal recommendation score from all of the contributing clusters 4 Experimental Results We used the access logs from the University of Minnesota Computer Science Web server to evaluate our personalization technique. The preprocessed log for February of 1999\as converted into a session file comprising 14294 user transactions and a total of 4001 unique URLs \(before support filtering\e used the hypergraph partitioning algorithm as modified in 5 r d e r to take f r eq uent ite m s ets a s the i n p u t a n d performed the clustering of URLs. The frequent itemsets were found using the tree projection algorithm described in Each URL s e rv e s as a vertex in the hypergraph, and each edge represents a frequent itemset with the weight of the edge taken as the interest for the set. Since interest increases dramatically with the number of items in a rule, the log of the interest is taken in order to prevent the larger rules from completely dominating the clustering process  For the recommendation process we chose a session window size of 2, since the average session size was 2.4. The recommendation results are given for the sample path research=>/gradinfo=>/registration-info  A summary of the results are given in Figure 2 additional experimental results and a demonstration site using the techniques discussed in this paper can be found at http://aztec.cs.depaul.edu/scripts/acr2 Each table in Figure 2 corresponds to one step in the user navigation through the path. In each case the current active session window is given along with the top recommendations. A cut-off value of 0.30 was used for the recommendation score. Each row shows two consecutive recommendations Note that in many cases the obvious recommendations associated with the URLs in the active session window rank lower than URLs for pages that are farther away in the site graph. This variation is mainly due to the link distance factor discussed earlier. In each case the recommendation set is composed of URLs from a number of matching clusters. When research page is requested, the URLs for a number of popular research groups are included. But, note that pages from graduate information and registrations sections are also included, since many users \(mainly graduate students often have overlapping interests across these sections When grad-info is requested, some of the frequently visited URLs associated with that page as well as related class registration pages rank higher Finally, when registration-info is requested a more focused set of recommendations results, not involving research related pages 5 Conclusions The ability to collect detailed usage data at the level of individual mouse clicks, provides Web-based companies with a tremendous opportunity for 


personalizing the Web experience of clients. In ecommerce parlance this is being termed mass customization Most current approaches to personalization by various Web-based companies rely heavily on human participation to collect profile information about users. This suffers from the problems of the profile data being subjective, as well getting out of date as the user preferences change over time. In this paper we have presented an architecture for automatic Web personalization based on Web usage data. We introduced an effective clustering technique using association rule mining to learn overlapping user profiles, and discussed how the extracted knowledge can be used in real-time to provide navigational pointers for users. Our experimental results indicate that the techniques discussed here are promising, and bear further investigation and development. Our future work in this area involves conducting experiments with various types of transactions derived from user sessions, for example, to isolate specific types of  "content" pages in the recommendation process. We also plan on incorporating client-side agents to provide an additional level of personalization based on user preferences Session Window research Recommendation Score Recommendation Score newsletter/newfaculty.html 0.73 newsletter 0.65 faculty 0.55 research/cnmrg 0.55 research/softeng 0.55 research/airvl 0.51 research/mmdbms 0.48 research/agassiz 0.47 personal-pages 0.37 registration-info 0.35 registration-info/spring99.html 0.32 grad-info 0.30 registration-info/sch99-00.html 0.30 grad-research 0.30 Session Window research => /grad-info Recommendation Score Recommendation Score faculty 0.59 personal-pages 0.52 newsletter/newfac.html 0.52 newsletter 0.46 grad-info/grad-handbook.html 0.45 grad-info/course-guide.html 0.45 grad-info/prospective-grads.html 0.40 registration-info 0.39 research/cnmrg 0.39 research/softeng 0.39 research/airvl 0.36 registration-info/spring99.html 0.35 research/mmdbms 0.34 research/agassiz 0.33 registration-info/sch99-00.html 0.33 Session Window grad-info => /registration-info Recommendation Score Recommendation Score faculty 0.51 personal-pages 0.45 grad-info/grad-handbook.html 0.45 grad-info/course-guide.html 0.45 grad-info/prospective-grads.html 0.40 registration-info/spring99.html 0.36 registration-info/sch99-00.html 0.34 Figure 2. Recommendation Results for a Typical User Navigation Path 


References 1 A garw al, R., Aggarw al, C., an d Prasad V., A tree projection algorithm for generation of frequent itemsets. In Proceedings of High Performance Data Mining Workshop Puerto Rico, 1999 2 A graw al R an d Srikan t, R F a st al go rith ms f o r mining association rules In Proceedings of the 20 th VLDB conference pp. 487-499, Santiago Chile, 1994 3 B uc hne r  A  a nd M u l v e nna M   D  D i sc ov e r i n g internet marketing intelligence through online analytical Web usage mining SIGMOD Record  4\ 27, 1999 4 C har n iak  E  Statistical language learning MIT Press, 1996 5 C l i f t o n, C a n d Co ol e y R., T opCa t  da t a  m i ni ng for topic identification in a text corpus. In Proceedings of the 3rd European Conference of Principles and Practice of Knowledge Discovery in Databases Prague, Czech Republic, 1999 6  Coole y  R M obasher  B., an d Sr iv astav a J., Data preparation for mining World Wide Web browsing patterns Journal of Knowledge and Information Systems 1\ 1, 1999 7 C hen, M  S Par k J. S a nd Y u  P S  Data mining for path traversal patterns in a Web environment In Proceedings of 16th International Conference on Distributed Computing Systems  1996 8 Han, E H, Bole y  D., Gini, M Gr oss R   Hastings, K., Karypis, G., Kumar, V., and Mobasher, B., More, J., Document categorization and query generation on the World Wide Web using WebACE Journal of Artificial Intelligence Review January 1999 9 Her lock er  J K onstan, J., B o r c her s, A., Rie d l, J  An algorithmic framework for performing collaborative filtering. To appear in Proceedings of the 1999 Conference on Research and Development in Information Retrieval August 1999 10 Han, E H, K a r y pis, G., K u m a r  V., and M o basher  B., Clustering based on association rule hypergraphs. In Proccedings of SIGMOD\22297 Workshop on Research Issues in Data Mining and Knowledge Discovery \(DMKD\22297 May 1997 11 Han, E H, K a r y pis, G., K u m a r  V., and M o basher  B., Hypergraph based clustering in highdimensional data sets: a summary of results IEEE Bulletin of the Technical Committee on Data Engineering 21\ 1, March 1998 12 Jo ach im s T F r eitag  D., Mitch e ll T   WebWatcher: A Tour Guide for the World Wide Web. In Proceedings of the International Joint Conference in AI \(IJCAI97 August 1997 1 L i eb e r man   H Letizia: an agen t th at assists W e b browsing. In Proceedings of the 14 th International Joint Conference in AI \(IJCAI95 AAAI Press Menlo Park, California, 1995 14 Nasr a oui O F r i g ui, H., Jos h i, A., K r ishnap u r a m  R., Mining Web access logs using relational competitive fuzzy clustering. To appear in the Proceedings of the Eight International Fuzzy Systems Association World Congress August 1999 15 Pe r k ow i t z M  a nd E t z i oni O A d a p t i v e W e b sites: automaticlly synthesizing Web pages. In Proceedings of Fifteenth National Conference on Artificial Intelligence Madison, WI, 1998 16 Sp ilio p o u l o u  M a n d  F a u l stich  L  C., W U M: A Web Utilization Miner In Proceedings of EDBT Workshop WebDB98 Valencia, Spain, LNCS 1590, Springer Verlag, 1999 17 Sc he c h t e r  S., K r i s hna n, M a nd Sm i t h M  D   Using path profiles to predict HTTP requests. In Proceedings of 7th International World Wide Web Conference Brisbane, Australia, 1998 1 Sh ard a n a n d   U., Maes, P So cial inf o rmatio n filtering: algorithms for automating "word of mouth." In Proceedings of the ACM CHI Conference 1995 1 Sh ah ab i C., Zarkesh  A. M Ad i b i J  and  Sh ah V., Knowledge discovery from users Web-page navigation. In Proceedings of Workshop on Research Issues in Data Engineering  Birmingham, England, 1997 2 Yan  T  Jaco b s en M Garcia-Mo lin a, H., Da y a l U., From user access patterns to dynamic hypertext linking. In Proceedings of the 5 th International World Wide Web Conference, Paris France, 1996 


results are shown in Table 4 6 Conclusions mem \(M mem M associative classification 1 efficiency at handling huge Table 4 The comparison of CBA and CMAR on main memory usage Dataset Auto Hypo Ion0 Sick Please note that in this experiment we disable the lim itation of number of rules in CBA In such a setting CBA and CMAR generate all the rules necessary for classifica tion and thus are compared in a fair base From the table one can see that on average CMAR achieves 77.12 sav ing on main memory usage The saving in main memory usage can be explained from two apsects First CMAR uses CR-tree The compactness of CR-tree brings significant gain in storing a large set of rules where many items in the rules can be shared On the other hand CR-free is also an index structure of rules Before a rule is inserted into a CR-tree CMAR checks if there is a general rule or some more specific rules in the tree If so related pruning is pursued immediately Such a pruning techique also contributes to the saving of main memory To test the scalability of CMAR we compare the run time of CBA and CMAR on six data sets The results are shown in Figure 5 Again we disable the limit on number of rules in CBA In the experiments CBA spends a large portion of runtime on YO  attr  cls  rec CBA runtime CMAR runtime 25 7 205 612s 408s 25 2 3163 92s 19s 34 2 351 150s 89s 29 2 2800 74s 13s Sonar I 60 I 2  208 1 226s 145s Table 5 The runtime of CBA and CMAR As can be seen from the table CMAR is faster than CBA in many cases Please be note that the machine we use for testing is with relatively small size of main memory 128M Both CBA and CMAR can be expected running significantly faster if more main memory is available racy 2 it prunes rules effectively based on confidence correlation and database coverage and 3 its efficiency is achieved by extension of an efficient frequent pat tern mining method FP-growth construction of a class distribution-associated FP-tree and applying a CR-tree structure to store and retrieve mined association rules effi ciently Our experiments on 26 databases in UCI machine learning database repository show that CMAR is consis tent highly effective at classification of various kinds of databases and has better average classification accuracy in comparison with CBA and C4.5 and is more efficient and scalable than other associative classification methods References I R Agrawal and R Srikant Fast algorithms for mining as 2 P Clark and T Niblett The CN2 induction algorithm Ma 3 G Dong X Zhang L Wong and J Li Caep Classifi sociation rules In VLDB\22294 Chile Sept 1994 chine Learning 3:261-283,1989 cation by aggregating emerging patterns In DS\22299 LNCS I72 I Japan Dec 1999 4 R Duda and P Hart Pattern Classification and Scene Anal ysis John Wiley  Sons 1973 5 J Han J Pei and Y Yin Mining frequent patterns without candidate generation In SIGMOD\222OO Dallas TX May 2000 6 B Lent A Swami, and J Widom Clustering association rules In ICDE\22297 England April 1997 7 W Li Classification based on multiple association rules M.Sc Thesis Simon Fraser University April 2001 8 T.-S Lim W.-Y Loh and Y.-S Shih A comparison of prediction accuracy complexity and training time of thirty-three old and new classification algorithms Machine Learning 39,2000 9 B Liu W Hsu and Y Ma Integrating classification and association rule mining In KDD\22298 New York NY Aug 1998 IO J R Quinlan C4.5 Programs forkfachine Learning Mor gan Kaufmann 1993 I I K. Wang S Zhou and Y He Growing decision tree on support-less association rules In KDD\222OO Boston MA Aug 2000 376 


of the query expression without ha ving the global view of the in ten tion There is a big c hance that the enco ded pro cedure ma y not b e the b est w a y to compute the rules dep ending on the database instance F urthermore as w e understand it their prop osals require p oten tially large n um ber of name generation for relations and attributes The names that are needed are usually database dep enden t and th us p ossibly cannot b e gathered at query time An additional pro cess needs to b e completed to gather those v ariables b efore actual computations can b egin 5  9 Optimization Issues While it w as in tellectually c hallenging to dev elop a declarativ e expression for asso ciation rule mining from deductiv e databases there are sev eral op en issues with great promises for resolution In the w orst case the least xp oin tneedsto generate n 2 tuples in the rst pass alone when the database size is n  Theoretically  this can happ en only when eac h transaction in the database pro duces an in tersection no de and when they are not related b y subset-sup erset relationship In the second pass w e need to do n 4 computations and so on The question no w is can w e a v oid generating and p erhaps scanning some of these com binations as they will not lead to useful in tersections F or example the no de b 0 3 in gure 11 is redundan t A signican t dierence with apriori lik e systems is that our system generates all the item sets top do wn in the lattice without taking their candidacy as a large item set in to consideration Apriori on the other hand do es not generate an y no de if their subsets are not large item sets themselv es and thereb y prunes a large set of no des Optimization tec hniques that exploit this so called an ti-monotonicit y prop ert y of item set lattices similar to apriori could mak e all the dierence in our setup The k ey issue w ould b e ho ww e push the selection threshold minim um supp ort inside the top do wn computation of the no des in the lattice in our metho d F or the momen t and for the sak e of this discussion let us consider a higher supp ort threshold of 60 for the database T of gure 9 No w the l-en v elop e will b e the one sho wn in ligh ter dashed lines in gure 11 and the no des under this line will b e the large item sets Notice that no ww eha v eto discard no des ad 2 0 and d 0 2 to o This raises the question is it p ossible to utilize the supp ort and condence thresholds pro vided in the query and prune candidates for in tersection an y further Ideas similar to magic sets transformation 3  24 ma y be b orro w ed to address this issue The only problem is that pruning of an y no de dep ends on its supp ort coun t whic h ma y come at a later stage By then all no des ma y already ha v e b een computed and th us pushing selection conditions inside aggregate op erator ma y b ecome non-trivial Sp ecial data structures and indexes ma y also aid in dev eloping faster metho ds to compute ecien t interse ction joins that w e ha v e utilized in this pap er W e lea v e these questions as op en issues that should be tak en up in the future F ortunately though there has been a v ast b o dy of researc h in optimizing Datalog programs including recursiv e programs suc h as the one w e ha v e used in this pap er and hence the new questions and researc h 5 Recall that their prop osal requires one to express the mining problem to the system using sev eral queries and up date statemen ts that utilizes information ab out the database con ten ts to ac hiev e its functionalit y  c hallenges that this prop osal raises for declarativ e mining ma y exploit some of these adv ances Needless to emphasize a declarativ e metho d preferably a formal one is desirable b ecause once w e understand the functioning of the system w e will then be able to select appropriate pro cedures dep ending on the instances to compute the seman tics of the program whic hw e kno wis in tended once w e establish the equiv alence of declarativ e and pro cedural seman tics of the system F ortunately  w e ha v e n umerous pro cedural metho ds for computing asso ciation rules whic h complemen t eac h other in terms of sp eed and database instances In fact that is what declarativ e systems or declarativit y buy us  a c hoice for the most ecien t and accurate pro cessing p ossible 10 Conclusion Our primary goal for this pap er has b een to demonstrate that mining asso ciation rules from an y rst-order kno wledge base is p ossible in a declarativ ew a y  without help from an y sp ecial to ols or mac hinery  and that w e can no wha v ea v ery in tuitiv e and simple program to do so W eha v esho wn that it is indeed p ossible to mine declarativ ekno wledge b y exploiting the existing mac hinery supp orted b ycon temp orary inference engines in programming languages e.g Prolog or kno wledge base systems e.g RelationLog XSB LD L  CORAL All w e require is that the engine b e able to supp ort set v alued terms grouping aggregate functions and set relational op erators for comparison functionalities whic hmostofthesesystemscurren tly supp ort W e ha v e also demonstrated that our formalism is grounded on a more mathematical foundation with formal prop erties on whic h the seman tics of the R ULES system rely  W e ha v e also raised sev eral op en issues related to eciency and query optimization whic h should b e our next order of business As future researc h w e plan to dev elop optimization tec hniques for mining queries that require non-trivial lo ok ahead and pruning tec hniques in aggregate functions The dev elopmen ts presen ted here also ha v e other signican t implications F or example it is no w p ossible to compute c hi square rules 4 using the building blo c ks pro vided b y our system Declarativ e computation of c hi square rules to our kno wledge has nev er b een attempted for the man y pro cedural concepts the computation of c hi square metho d relies on In a separate w ork 2 w e sho w that the coun ting metho d prop osed in this pap er can be eectiv ely utilized to generate the exp ectations needed in order to compute suc h rules rather easily  These are some of the issues w e plan to address in the near future The motiv ation imp ortance and the need for in tegrating data mining tec hnology with relational databases has b een addressed in sev eral articles suc h as 12  13 They con vincingly argue that without suc h in tegration data mining tec hnology ma y not nd itself in a viable p osition in the y ears to come T o b e a successful and feasible to ol for the analysis of business data in relational databases suc htec hnology m ust b e made a v ailable as part of database engines and as part of its declarativ e query language Our prop osal for declarativ e mining bears merit since it sheds ligh t on ho w rst order databases can be mined in a declarativ e and pro cedure indep enden t w a y so that the optimization issues can b e delegated to the underlying database engine Once suc h argumen ts are accepted sev eral systems 9 


related issues b ecome prime candidates for immediate atten tion F or example traditionally database systems supp orted declarativ e querying without the necessit y to care ab out the pro ceduralit y of the queries In this pap er w eha v e actually demonstrated that asso ciation rule mining can b e view ed as a Datalog query  It is immediate that a direct mapping from the Datalog expressions presen ted in this pap er to SQL can be dev elop ed with no problem at all W e can then rely on ecien t database pro cessing of the query in an optimized fashion Hence w ecomeclose to the essence of the visions expressed b y the leading database researc hers and practioners 12  References 1 Rak esh Agra w al and Ramakrishnan Srik an t F ast algorithms for mining asso ciation rules in large databases In VLDB  pages 487{499 1994 2 Anon ymous A declarativ e metho d for mining c hisquare rules from deductiv e databases T ec hnical rep ort Departmen t of Computer Science Anon ymous Univ ersit y USA F ebruary 2001 3 C Beeri and R Ramakrishnan On the po w er of magic In Pr o c e e dings of the 6th A CM Symp osium on Principles of Datab ase Systems  pages 269{283 1987 4 Sergey Brin Ra jeev Mot w ani and Craig Silv erstein Bey ond mark et bask ets Generalizing asso ciation rules to correlations In Pr o c A CM SIGMOD  pages 265 276 1997 5 D Chimen ti et al The LD L system protot yp e IEEE Journal on Data and Know le dge Engine ering  2\(1 90 1990 6 Jia w ei Han Jian P ei and Yiw en Yin Mining frequen t patterns without candidate generation In Pr o c A CM SIGMOD  pages 1{12 2000 7 Marcel Holsheimer Martin L Kersten Heikki Mannila and Hann uT oiv onen A p ersp ectiv e on databases and data mining In Pr o c of the sixth A CM SIGKDD Intl Conf  pages 150{155 Mon treal Queb ec 1995 8 Flip Korn Alexandros Labrinidis Y annis Kotidis and Christos F aloutsos Ratio rules A new paradigm for fast quan tiable data mining In Pr o c of 24th VLDB  pages 582{593 1998 9 Brian Len t Arun N Sw ami and Jennifer Widom Clustering asso ciation rules In Pr o c of the 3th ICDE  pages 220{231 1997 10 Mengc hi Liu Relationlog At yp ed extension to datalog with sets and tuples In John Llo yd editor Pr oc e e dings of the 12th International L o gic Pr o gr amming Symp osium  pages 83{97 P ortland Oregon Decem ber 1995 MIT Press 11 Rosa Meo Giusepp e Psaila and Stefano Ceri An extension to SQL for mining asso ciation rules Data Mining and Know le dge Disc overy  2\(2 1998 12 Amir Netz Sura jit Chaudh uri Je Bernhardt and Usama M F a yy ad In tegration of data mining with database tec hnology  In Pr o c e e dings of 26th VLDB  pages 719{722 2000 13 Amir Netz Sura jit Chaudh uri Usama M F a yy ad and Je Bernhardt In tegrating data mining with SQL databases In IEEE ICDE  2001 14 Ra ymond T Ng Laks V S Lakshmanan Jia w ei Han and Alex P ang Exploratory mining and pruning optimizations of constrained asso ciation rules In Pr o c A CM SIGMOD  pages 13{24 1998 15 Jong So o P ark Ming-Sy an Chen and Philip S Y u An eectiv e hash based algorithm for mining asso ciation rules In Pr o c A CM SIGMOD  pages 175{186 1995 16 Karthic k Ra jamani Alan Co x Bala Iy er and A tul Chadha Ecien t mining for asso ciation rules with relational database systems In Pr o c e e dings of the International Datab ase Engine ering and Applic ations Symp osium  pages 148{155 1999 17 R Ramakrishnan D Sriv asta v a and S Sudarshan CORAL  Con trol Relations and Logic In Pr o c of 18th VLDB Confer enc e  pages 238{250 1992 18 Konstan tinos F Sagonas T errance Swift and Da vid Scott W arren XSB as an ecien t deductiv e database engine In Pr o c of the A CM SIGMOD Intl Conf  pages 442{453 1994 19 Sunita Sara w agi Shib y Thomas and Rak esh Agra w al In tegrating mining with relational database systems Alternativ es and implications In Pr o c A CM SIGMOD  pages 343{354 1998 20 Ashok a Sa v asere Edw ard Omiecinski and Shamk an tB Nav athe An ecien t algorithm for mining asso ciation rules in large databases In Pr o c of 21th VLDB  pages 432{444 1995 21 Pradeep Sheno y  Ja y an t R Haritsa S Sudarshan Gaura v Bhalotia Ma y ank Ba w a and Dev a vrat Shah T urb o-c harging v ertical mining of large databases In A CM SIGMOD  pages 22{33 2000 22 Abraham Silb ersc hatz Henry F Korth and S Sudarshan Datab ase System Conc epts  McGra w-Hill third edition 1996 23 Shib y Thomas and Sunita Sara w agi Mining generalized asso ciation rules and sequen tial patterns using SQL queries In KDD  pages 344{348 1998 24 J D Ullman Principles of Datab ase and Know le dgeb ase Systems Part I II  Computer Science Press 1988 25 Mohammed J Zaki Generating non-redundan t association rules In Pr o c of the 6th A CM SIGKDD Intl Conf  Boston MA August 2000 1 0 


OM OM 006 OD8 01 012 014 016 018 02 022 False alarm demity Figure 9 Percentage of tracks lost within 200 seconds using three-scan assignment with PD  0.9 TI  O.ls Figure 11 T2  1.9s and T  Is ij  20 and 0  0.1 24 1 22  20  E fls 0  8l 16 0 n 14  12  0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 T1/12 PD Average track life of three-scan assignment with PD varying TI  0-ls T2  1.9s T  Is X  0.02 ij LO and   0.1 mareuvenng index Figure 12 Percentage of lost tracks of 4-D assipment in 200 seconds with maneuvering index varying X  0.01 Ti  0.1 T2  1.9s and T  IS PD  0.98 Figure 10 Percentage of lost tracks of 4-D assignment in 200 SeoDllCls with TI and T2 varying PD  0.98 X  0.02 q 20 and 0  0.1 4-1607 


Figure 13 Average gate size for Kalman filter Figure is relative as compared to nq and curves are parametrized by ij/r with unit-time between each pair of samples 1.2 Iy I 1.1 0.5 I A CRLB for he unifm samiina I  0.4 0.35 d 3 03 i7 3 0.25 0 0.M 0.04 0.06 008 0.1 0.12 0.14 0.16 0.18 0.2 False A!am DemW V I    Figure 14 CramerRao Lower Boundfor Mean Square Error of uniform and nonuniform sampling schemes with Ti  O.ls T2  1.9s T  IS PD  0.9 ij  5 and U  0.25 1 unifon sampling r-ls ked i non-uniform sampling loge inlewi I ti non-uniform sampling shod interva I 0.9 0.8 I Figure 15 MSE comparison of three-scan assignment with Ti and T2 varying I'D  1 X  0.01 ij  20 and U  0.1 4-1608 


Plenary Panel Session 30 XML Databases   Moderator: Michael Carey, IBM Almaden Research Center USA Panelists Adam Bosworth, Microsoft Corporation USA David De Witt University of Wisconsin-Madison, USA Alon Levy University of Washington USA Bruce Lindsay IBM Almaden Research Center USA Jennifer Widom Stanford University USA Demo Session 1 Web Query Optimizer  661 V Zadorozhny L Bright L Raschid T Urhan and M Vidal ReQueSS: Relational Querying of Semi-structured Data  664 R Sunderraman The IDEAL Approach to Internet-Based Negotiation for E-Business  666 J Hammer C Huang Y Huang C Pluempitiwiriyawej M Lee H Li L Wang Y Liu and S Su READY A High Performance Event Notification Service  668 R Gruber B Krishnamurthy, and E Panagos A Multimedia Information Server with Mixed Workload Scheduling  670 G Nerjes DISIMA An Object-Oriented Approach to Developing an Image Database System  672 V Oria T Ozsu P Iglinski B Xu and L Cheng Demo Session 2 The Collaboration Management Infrastructure  677 H Schuster D Baker A Cichocki D Georgakopoulos and M Rusinkiewicz Assisting the Integration of Taxonomic Data The LITCHI Toolkit  679 I Sutherland J Robinson S Brandt A Jones S Embury W Gray R White and F Bisby TheaterLoc: Using Information Integration Technology to Rapidly Build Virtual Applications  681 G. Barish Y.4 Chen D Dipasquo, C Knoblock S Minton I Muslea and C Shahabi Lineage Tracing in a Data Warehousing System  683 Y Cui and J Widom xiii 


The Mentor-Lite Prototype A Light-Weight Workflow Management System  685 J Weissenfels M Gillmann 0 Roth, G Shegalov and W Wonner Location Prediction and Queries for Tracking Moving Objects  687 0 Wolfson B Xu and S Chamberlain Semiorder Database for Complex Activity Recognition in Multi-Sensory Environments  689 S Bhonsle A Gupta S Santini and R Jain Tutorial 1 Web Information Retrieval  693 M Henzinger Tutorial 2 Mobile and Wireless Database Access for Pervasive Computing  694 P Chrysanthis and E Pitoura Tutorial 3 Data Mining with Decision Trees  696 J Gehrke Tutorial 4 Directories Managing Data for Networked Applications  697 D Srivastava Tutorial 5 Indexing High-Dimensional Spaces Database Support for Next Decade\222s Applications  698 S Berchtold and D Keim xiv 


 T5.I2.D100K T10.I4.D100K T15.I4.D100K T10.I6.D400K T10.I6.D800K T10.I6.D1600K Optimizations across Databases 5 0 5 10 15 20 25 30 35 40 45 Improvement COMP TREE COMP-TREE 1 2 4 8 1 2 4 8 1 2 4 8 2 4 8 2 4 8 1 2 4 8 Processors Databases Figure 5 Effect of Computation and Hash Tree Balancing good as the COMP optimization The reason that the hash tree balancing is not suf\336cient to offset inherent load imbalance in the candidate generation in this case The most effective approach is to apply both optimizations at the same time COMP-TREE The combined effect is suf\336cient to push the improvements in the 40 range in the multiple-processor case On 1 processor only hash tree balancing is bene\336cial since computation balancing only adds extra cost 5.4 Short-circuited Subset Checking Figure 6 shows the improvement due to the short-circuited subset checking optimization with respect to the unoptimized version The unoptimized version is the Apriori algorithm due to Agrawal et al 5 The results are presented for dif ferent number of processors across dif ferent databases The results indicate that while there is some improvement for databases with small transaction sizes the optimization is most effective when the transaction size is large In this case we get improvements of around 25 r the unoptimized version To gain further insight into this optimization consider 336gure 7 It shows the percentage improvement obtained per iteration on applying this optimization on the T20.I6.D100K database It shows results only for the uni-processor case r similar results were obtained on more processors We observe that as the iteration k increases there is more opportunity for shortcircuiting the subset checking and we get increasing bene\336ts of up to 60 The improvements start to fall off t the high end where the number of candidates becomes small resulting in a small hash tree and less opportunity for short-circuiting It becomes clear that is an extremely effective 15 Proceedings of the 1996 ACM/IEEE Conference on Supercomputing \(SC\22296 0-89791-854-1/96 $ 10.00 ACM 


 T5.I2.D100K T10.I6.D800K T15.I4.D100K T20.I6.D100K procs across Databases 0 5 10 15 20 25 Improvement 1 2 4 8 Figure 6 Effect of Short-circuited Subset Checking 23456789101112 Iterations 0 10 20 30 40 50 60 improvement T20.I6.D100K Figure 7  Improvement per Iteration  proc   16 Proceedings of the 1996 ACM/IEEE Conference on Supercomputing \(SC\22296 0-89791-854-1/96 $ 10.00 ACM 


optimization for larger transaction sizes and in cases where there are large number of candidate k itemsets 6 Conclusions In this paper e presented a parallel implementation of the Apriori algorithm on the SGI Power Challenge shared memory multi-processor We also discussed a set of optimizations which include optimized join and pruning computation balancing for candidate generation hash tree balancing and short-circuited subset checking We then presented experimental results on each of these Improvements of more than 40 were obtained for the computation and hash tree balancing The short-circuiting optimization was found to be extremely effective for databases with large transaction sizes Finally we reported the parallel performance of the algorithm While we d good speed-up we observed a need for parallel I/O techniques for further performance gains References  R Agra wal T  Imielinski and A Swami Database mining A performance perspecti v e  I n IEEE Trans on Knowledge and Data Engg  pages 5\(6 1993  R Agra wal T  Imielinski and A Swami Mining association rules between sets of items in lar ge databases In Proc M SIGMOD Intl Conf Management of Data  May 1993  R Agra wal H Mannila R Srikant H T o i v onen and A I V erkamo F ast disco v ery of association rules In U F et al editor Advances in Knowledge Discovery and Data Mining  MIT Press 1996  R Agra wal and J Shafer  P arallel mining of association rules design implementation and e xperience Technical Report RJ10004 IBM Almaden Research Center San Jose CA 95120 Jan 1996  R Agra wal and R Srikant F ast algorithms for mining association rules In Proc 20th VLDB Conf  Sept 1994  M Cierniak W  Li and M J Zaki Loop scheduling for heterogeneity  I n 4th IEEE Intl Symposium on High-Performance Distributed Computing also as URCS-TR 540 CS Dept Univ f Rochester  Aug 1995  M Holsheimer  M  K ersten H Mannila and H T o i v onen A perspecti v e on databases and data mining In 1st Intl Conf Knowledge Discovery and Data Mining  Aug 1995  M Houtsma and A Swami Set-oriented mining of association rules In RJ 9567  IBM Almaden Oct 1993  H Mannila H T o i v onen and I V erkamo Ef 336cient algorithms for disco v ering association rules In AAAI Wkshp Knowledge Discovery in Databases  July 1994  J S P ark M Chen and P  S Y u  A n e f fecti v e hash based algorithm for mining association rules In Proc M SIGMOD Intl Conf Management of Data  May 1995 17 Proceedings of the 1996 ACM/IEEE Conference on Supercomputing \(SC\22296 0-89791-854-1/96 $ 10.00 ACM 


 J S P ark M Chen and P  S Y u  E f 336cient parallel data mining for association rules T echnical Report RC20156 IBM T J Watson Research Center Aug 1995  G Piatetsk y-Shapiro Disco v ery  presentation and analysis of strong rules In G P S et al editor  KDD  AAAI Press 1991  A Sa v asere E Omiecinski and S Na v athe An ef 336cient algorithm for mining association rules in large databases In Proc 21st VLDB Conf  1995  M J Zaki M Ogihara S P arthasarathy  and W  Li P arallel data mining for association rules on shared-memory multi-processors Technical Report 618 Department of Computer Science University of Rochester 618 1996 18 Proceedings of the 1996 ACM/IEEE Conference on Supercomputing \(SC\22296 0-89791-854-1/96 $ 10.00 ACM 


