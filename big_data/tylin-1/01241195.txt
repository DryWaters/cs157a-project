WebKIV Visualizing Structure and Navigation for Web Mining Applications Yonghe Niu Tong Zheng Jiyang Chen Randy Goebel Department of Computing Science University of Alberta Edmonton Alberta Canada T6G 2E8  yonghe tongz jiyang goebel  cs.ualberta.ca Abstract A signiìcant part of the web mining problem is simply in understanding the value of any mining method For ex 
ample the value of web mining to improve user navigation is even more challenging if one canêt visualize the differences over a large collection of web pages or a signiìcant structure within the existing web We present WebKIV a tool weêve developed to help us visualize our own results in web mining WebKIV combines strategies from several other web visualization tools to provide a single method of visualizing web structure and the results of web mining on that structure 
We summarize the value of web visualization tools along the dimensions of scale can one visualize small and large structures navigation dynamics can one visualize navigation dynamically or statically and cumulative usage can one distinguish individual and aggregate web usage We then show how WebKIV provides a way of visualizing the results of web mining in a way that distinguishes properties along all three of these dimensions Keywords visualization web mining web structure web navigation 
1 Introduction Several problems stand between the interpretation and application of web mining results First results are often hard to understand 5 so considerable ef fort must be directed at interpreting them Second the volume of potentially useful mining results can be huge so one has to understand how to identify useful patterns Third applying and evaluating results is not trivial 10 All of these problems can beneìt from visualization tools and several such tools have been developed to ad 
dress them For example Mosaic Plot 5 i s designed to visualize association rules webCANVAS 2 i s used to visualize user navigation patterns However most existing visualization tools visualize web site structure web content and web navigation separately W e ha v e found that it is extremely important to simultaneously visualize web structure web content and user navigation paths Here we present a Web Knowledge and Information Visualization tool WebKIV designed to experiment with this simultaneous visualization of structure content and nav 
igation WebKIV combines several visualization strategies from other web visualization tools to provide a single method of visualizing web structure and the results of web mining on that structure Speciìcally WebKIV provides the following functionalities 1 Web structure visualization WebKIV provides tools for visualizing small and large web structures with controls that support the display of both detailed and abstract structure 2 Web navigation visualization WebKIV provides static and dynamic display of both individual and aggregate 
user navigation patterns 3 Web mining results comparison To support our primary web mining research WebKIV provides a way of overlaying web navigation patterns and comparing those constructed from the application of machine learning to navigation improvement The rest of our paper is organized as follows Section 2 reviews the related visualization work and provides a simple framework for comparing the features of a number of web visualization tools Section 3 introduces the We 
bKIV architecture and summarizes the techniques used to achieve the functionality required to support our web mining research We demonstrate the use of WebKIV in several different contexts in Section 4 and then summarize the results in Section 5 Proceedings of the IEEE/WIC International Conference on Web Intelligence \(WIê03 0-7695-1932-6/03 $17.00 © 2003 IEEE 


Figure 1 Web Visualization Dimensions 2 Dimensions of Web Visualization Most of the tools we have assessed have been designed to excel in some dimension of web visualization For example Minarês visualization of the dynamics of a collection of web users provides a nice animation of a small number of users 12 But Minar s visualization doesn t pro vide much in the way of web structure visualization and its representation doesnêt scale to large web structures or large numbers of users With this kind of informal assessment we have found it useful to assess web visualization tools along three major dimensions as indicated in Figure 1 Those three include navigation behavior static to dynamic cumulative usage individual to aggregate and relative size of web structures small to large As we stated above we know of no visualization tool that fulìlls all requirements However it is easy to see how various tools t into the dimensions of Figure 1 In a sense Figure 1 is itself a crude visual summary of the tools we have assessed For example Site Manager 13 focuses on visualization scalability and so is further along the scale axis to large than Minarês animation Similarly Inxight 8 i s d e v eloped to solve the lost in hyperspace problem and so provides better usability for large web structures by providing a tool to move around in large structures In fact most web visualization tools focus on either visualizing web site structures e.g or web usage data visualization e.g 17 1 3 11 4 14 Minarês Crowd Dynamics 12 treats a web site as a inhabited social active space The author implements an animation visualization system to illustrate how the web users walk loiter in the web web site popularity which paths the users like to use etc In this case Minarês system is further along the static to dynamic scale than most of the web structure visualization tools who provide only static displays of structure Crowd dynamics animation is simple but informationrich Most other visualization systems show user activities in a static way but 12 i s lik e a documentary mo vie and replays the real-time user behavior While the system is informative it doesnêt scale well along the small to large dimension First the web site structure is hand made and web site speciìc to automatically generate a web site map is a major challenge For example one needs to know how to group web pages and how to place them Second the speed of animation in a big web site map is critical to the success of the animation People can assess animation as continuous if the frame rate is less than 200ms 13 so v ery careful design is required for a large web siteês animation Finally rather than showing what web users are doing the system would be better if users activities were recorded in an aggregate way For example to show what web users have done is potentially more revealing Back to our crude visualization of Figure 1 it is not easy to argue whether crowd dynamics portrays individual or aggregate behavior as it depends on the perception of the user try to watch all users move around at once versus tracking just one But web usage systems e.g 3 can use other more cognitively manageable techniques to indicate aggregate usage patterns e.g like thicker navigation traversal lines or colored lines Another visualization tool FootPrint 16 15  focuses more on the value of the user experience in a web site FootPrint applies a hyperbolic tree technique to visualize user traversal patterns The tree shows well-used hyperlinks and the web pages that were frequently visited by the previous users The concept of the FootPrint is based on the idea that the interaction history with the web site and the work done by previous users can help future users navigate in a complex web site In this way the individual surìng activity is correlated to that of other web users The visiting patterns foot prints of the previous users are accumulated and saved for use by new web surfers Although FootPrint is good in helping solve the lost in hyperspace problem 7 without sho wing the whole web site structure it is dif cult to use for pattern observation With respect to Figure 1 this system moves along the cumulative usage dimension as it visualizes aggregate behavior and does it in a relatively large space However it does not provide any animation feature to get a sense of usage over time The third visualization tool Disktree 3 which w a s b uilt by Chi et al at Xerox has been used to visualize web site evolution web usage trends over time and evaluation of information foraging This tool fares pretty well in the overall placement with the visualization dimension space for it does provide insight into large structures and does provide some static images of aggregate navigation behavProceedings of the IEEE/WIC International Conference on Web Intelligence \(WIê03 0-7695-1932-6/03 $17.00 © 2003 IEEE 


Left Focus View Window Right Context Window Figure 2 WebKIV  System Overview ior In se v eral radial trees constructed at dif ferent time were aligned together This provides a kind of static time series evaluation which moves away from the static side of the static to dynamic dimension Similarly as a web site structure changes over time e.g addition and deletion of web pages a web surferês favorites are displayed together This helps reveal the interaction between the web site structure and web surìng patterns This brief discussion of where existing tools lie in our three dimensions is still pretty crude but it does provide an abstract visualization of where the tools sit and motivates the design of our WebKIV tool 3 WebKIV System The WebKIV system was designed as a visualization tool which provides the essential functionality to be able to visualize in the three dimensions individual vs aggregate static vs dynamic small scale vs large scale discussed in Section 2 In the WebKIV system a radial tree algorithm 3 i s used to construct the web site structure in a 2D plane The reason for using two dimensions instead of three dimensions is to avoid the occlusion problem 6 Zooming and panning techniques are used to view the detailed information when necessary In order to alleviate the context switching problem inherited from the zooming and panning techniques WebKIV provides two display windows a Context window is used for the context overview and a Focus window is used for drilling down Moreover a rectangle in the Context window shows which part of the web site is displayed in detail in the Focus window see Figure 2 Figure 3 WebKIV  Surìng Animation and Usage Aggregation 3.1 WebKIV Functions The current version of WebKIV can be scaled up to visualize 70,000 nodes In addition to the web structure WebKIV can be used to visualize web usage data It not only displays the static view of web usage data but also employs various animation techniques to replay real-time user behaviors Distinct from Crowd dynamics WebKIV not only shows the individual web user visiting patterns but also records the history of multiple users activities In addition to showing What people are doing it can also display What web users have done WebKIV has three major functions described as follows Web Surìng Animation and Usage Aggregation An example of the Web surìng animation is shown in a static snapshot in Figure 3 Each black dot represents an individual surfer in the web site A dot moving from one place to another indicates the traversal path the surfer followed A dot stopping at a tree node means the surfer is viewing the speciìc web page and the time a dot stays at a node indicates the time the surfer spends on that web page And a dot will disappear if the user has stopped for a certain amount of time base on the session cut-off time In this case WebKIV maintains a count for each hyperlink traversal by all users A grey scaled line is drawn for each hyperlink based on this count The more a hyperlink is traversed the darker its corresponding line will be Web Mining Evaluation Though web mining results can be visualized directly e.g visualizing association rules with Mosaic Plot 5 or visualizing user navigation patterns with webCANVAS 2 the y are handled dif ferently by W ebKIV  Instead of trying to visualize the meaning of web mining results WebKIV aims at visualizing their effects in improving certain applications Proceedings of the IEEE/WIC International Conference on Web Intelligence \(WIê03 0-7695-1932-6/03 $17.00 © 2003 IEEE 


a Rectangled Zoom-in b Subtree Zoom-in Figure 4 Rectangled Zoom-in and Subtree Zoom-in For example we can apply web mining techniques to the web log data and then use the mining results e.g association rules to improve user navigation by creating and using Navigation Compression Models 18 The v alue of this process can then be visualized in WebKIV by rst generating compressed web log data assuming the mining results were applied and comparing it with the original web log data see Figure 7 in Section 4 Subtree Zoom-in In addition to the simple rectangled zoom-in function subtree zoom-in is another operator used to view and compare the data in detail With subtree zoom-in WebKIV can generate a new radial graph centered with the root of the subtree Figure 4 b Subtree zoom-in is really useful when the data patterns need to be observed in detail and are isolated in part of the hierarchy In comparison with rectangled zoom-in Figure 4 a subtree zoom-in is more efìcient in using the precious display space However the problem with subtree zoom-in is that it completely changes the geographical patterns so users might feel confused 3.2 WebKIV architecture Our WebKIV system consists of four basic components as shown in Figure 5 Based on this architecture the process of the visualization can be described as follows 1 Data Collection  Three different kinds of data are used in our WebKIV system The web site topology data is collected by a web crawler using a breadth-ìrst traversal algorithm started at a given root node Web log data is retrieved directly from server log les Web mining results can be obtained from various web mining techniques applied to various web data e.g web log web content etc      Data Collection Data Parsing Data Transformation Data Filtering Data Topology Data Web Site Web Log Data Generated Data Set of Views Subset of Web Site Structure Subset of Web Log Subset of Web Mining Data Log Data Graph Representatition Log Data Graph Representation Representation Web Site Graph Data Manipulation Web Mining Figure 5 WebKIV  System Architecture 2 Data Parsing  In this phase a radial tree algorithm 3 is applied to the web site structure data to generate the graph representation of the web site The radial tree is a hierarchical acyclic tree where each level of the hierarchy is represented by a concentric ring of page nodes distributed around a central focus node Typically the central node is the homepage of a web site 3 Data Transformation  There are three different shapes used to represent web data attributes in WebKIV node representation Each web page is represented by a square The size and position of the square is a function of the distribution of page nodes in the radial tree The square has no color representation because it is often too small to make a difference to the user line representation Each stroke has two attributes width and color Depending on user parameters strokes can indicate aggregate or individual user traversals and can be colored to distinguish individuals or volume of trafìc dot representation A dot is used to represent a web surfer in the web surìng animation function The dots will move around during the animation process which indicates that the speciìc user is moving from page to page through hyperlinks 4 Data Manipulation and Data Filtering  There are a number of data operators in our WebKIV system which as a whole provide the exibility for manipulating the web data and observing different data attributes from different perspectives e.g tree rotation Proceedings of the IEEE/WIC International Conference on Web Intelligence \(WIê03 0-7695-1932-6/03 $17.00 © 2003 IEEE 


zooming and panning subtree generation threshold setting web usage data comparison web usage animation etc 4 Examples of WebKIV Visualizations Here we illustrate some of the WebKIV functions based on the experiments we conducted on a music web site http://machines.hyperreal.org  This web site introduces musical machines such as synthesizers drum machines and recording equipment etc The access logs are obtained from http://www.cs.washington.edu/ai/adaptive-data  Web Surìng Animation and Usage Aggregation Web surìng animation snapshots are shown in Figure 6 The data is obtained from Jan 1 1999 starting from midnight The frame refresh rate is set to 10 frames per second and the animation rate is 50 times faster than the real time i.e one animation second equals 50 seconds in real time Figure 6 a shows a static view of web users activities at midnight when there were several surfers browsing the web site and there was no obvious traversal patterns available The web site started becoming busier in the morning with around 20 surfers wondering at the web site Several heavily traversed hyperlinks were starting to stand out as shown in Figure 6 b The most crowded time is around evening while around 30 people visiting the web site and the hot web pages and heavily used hyperlinks are clearly revealed as shown in Figure 6 c Figure 6 d shows the result of one-day trace history the web users left Compared with static web surìng visualization tools WebKIV not only shows the web access results but also shows when and how the web site are being used over time Web Mining Evaluation As previously discussed Navigational Compression Models NCMs 18 can be applied to impro v e user na vigation By applying NCM knowledge to the web data surfers are led to information using potentially shorter traversal paths Different parameter settings of NCMs can change user traversal patterns drastically so one way to evaluate the web mining results is to use the WebKIVês subtraction operator to emphasize the difference between the NCM generated web logs and the original web access log as shown in Figure 7 in which the red lines pointed to by arrows represent the NCM suggested links and blue lines not pointed to by arrows are saved links In this example two experiments were conducted to compare the effectiveness of NCMs by showing the difference between the web logs before and after applying NCMs as shown in Figure 7 a and Figure 7 b respectively In Figure 7 a the 100 most visited web pages are treated a b c d Figure 6 Music Machine Web  Surìng Animation as content pages in NCMs Most of the red lines representing the more used hyperlinks are related to the page http://machines.hyperreal.org/manufacture.html  Because this page is visited most the NCMs treat this web page as the content page which surfers want to look at But this page is actually a pass-through hub web page The outer circles contain the real content of the music machine website and where the user might be suggested to go but the graphs indicate that the outer hyperlinks the blue lines representing the saved paths are recommended by the NCMs as noncontent pages and thus are saved For example at the right bottom of Figure 7 a the web page Roland/Overview and Roland/TR-33 are the content pages but the NCM thinks these two pages are not important to users thus these two pages are not recommended to the users In Figure 7 b the content page setting criteria were changed Not only the visit count of a web page must be considered but also the time spent on the web page A web page needs to fulìll the following requirements to be considered as a content page it was visited more than 200 times and each time the user spent at least one minute on it As can be seen in the left part of Figure 7 b several suggestions red lines pointed by arrows are correctly made to direct the web users to the content pages The web page http://machines.hyperreal.org/manufacture.html  however is still treated as a content page and recommended Proceedings of the IEEE/WIC International Conference on Web Intelligence \(WIê03 0-7695-1932-6/03 $17.00 © 2003 IEEE 


      1 manufacture.html 2 Roland/Overview 3 Roland/TR-33 Figure 7 Music Machine Web  NCM Comparison by NCM although we know it is a pass-through page The reason might be that this page has more than 50 links so users may need more than one minute to nish browsing this page Of course the point here is that by displaying data generated by different NCMs as well as the data generated by the same NCMs with the different parameters the visualization system can support comparison of the effectiveness of the web mining results and provide some insights into domainspeciìc adjustments For example to decide the content pages one minute to nish browsing a web page and counts of visits are better parameters to determine content pages rather than using counts of visits only for the Music Machine web site Subtree Zoom-in Some of the patterns are not easily identiìed without viewing the data from different perspectives One advantage of subtree zoom-in is to display the different data attributes side by side In the example of Figure 8 we are looking to answer the questions 1 What are the web pages the users visited most 2 Which hyperlinks were used most and 3 From where did the users reach those web pages Note that this functionality also provides one aspect of individual and aggregate user navigation behavior in a static fashion For example in the left part of Figure 8 a there are four web pages that were well visited see Figure 8 b for an enlarged view However it is hard to tell which route the surfers followed to reach those four web pages merely from Figure 8 a itself For this question a hyperlink usage view can be created by right-clicking the root node in the WebKIV as shown in Figure 8 c We then found that users were not browsing via the hierarchical web site structure Note in Figure 8 c that the hyperlink from manufacture.html to samples.html is scarcely used 31 times since it is below the threshold it is not shown in the view Given that the samples.html page is heavily visited 660 times and that no link to this page within the web site contributes signiìcantly to the number of visits the implication is that either the web page samples.html is bookmarked by the users or it is linked by other related web sites But without viewing the web page usage view as well as the hyperlink usage view it is almost impossible to nd the answer for question 3 5 Summary and Conclusions Web visualization is a complex task but one can begin to understand the requirements by decomposing the task into the three dimensions of scale of web structure visualization representation of aggregate and individual navigation usage behavior and the comparative display of navigation improvement methods While many visualization tools address one or two of these aspects they donêt always provide the complete suite of tools to both visualize a large web structure and support question answering for navigation improvement research Our WebKIV tool is a rst approximation to combining what we believe are necessary components of such a tool and we have provide a brief sketch of its functionality with glimpses of how to deploy the tool for both structure understanding and the interpretation of web navigation mining Acknowledgments Our work is supported by the Canadian Natural Sciences and Engineering Research Council NSERC and by the Alberta Ingenuity Centre for Machine Learning Thanks to http://machines.hyperreal.org for providing the log data used in this paper showing examples of WebKIV visualization References  http://www mercuryinteracti v e.com  I Cadez D Heck erman and C Meek V isualization of na vigation patterns on a web site using model based clustering In Proceedings of KDD 2000  pages 280Ö284 August 2000  E Chi J Pitk o w  J  Mackinlay  P  Pirolli and J K onstan Visualizing the evolution of web ecologies In Proceedings of CHIê98  pages 400Ö407 644Ö645 1998  R Hendle y  N S Dre w  A M W ood and R Beale Narcissus Visualizing information In Proceedings of IEEE Information Visualization Symposium  pages 90Ö97 Los Alamitos October 1995 Proceedings of the IEEE/WIC International Conference on Web Intelligence \(WIê03 0-7695-1932-6/03 $17.00 © 2003 IEEE 


         1 manufacture.html 2 samples.html Figure 8 Music Machine Web  Visits and Traversal Distribution  H Hofmann A Siebes and A W ilhelm V isualizing association rules with interactive mosaic plots In the sixth ACM SIGKDD international conference on Knowledge discovery and data mining  pages 227Ö235 August 2000  E H hsin Chi and S K Card Sensemaking of e v olving web sites using visualization spreadsheets In Proceedings of the Symposium on Information Visualization  pages 18Ö25 San Francisco California 1999  N Jok ob  The art of na vigating through hyperte xt Communications of the ACM  33\(3 1990  J Lamping R Rao and P  Pirolli A focus+conte xt technique based on hyperbolic geometry for visualizing large hierarchies In Proceedings of the ACM SIGCHI Conference on Human Factors in Computing Systems  pages 401Ö408 New York May 1995  B Liu W  Hsu and Y  Ma Pruning and summarizing the discovered associations In International Conference on Knowledge Discovery and Data Ming  pages 125Ö134 San Diego CA August 1999  Y  Ma B Liu and C K W ong W e b for data mining Or ganizing and interpreting the discovered rules using the web SIGKDD Explorations  2\(1 July 2000  Y  S Maarek M Jaco v e  M  Shtalhaim S Ur  and D Zernik Webcutter A system for dynamic and tailorable site mapping In Proceedings of WWW6 Conference  pages 713Ö722 Santa Clara California April 1997  N Minar and J Donath V isualizing the cro wds at a web site In Proceedings of CHIê99  1999  T  Munzner  Dra wing lar ge graphs with h3vie wer and site manager In Symposium on Graph Drwaing  pages 384Ö393 August 1998  J E Pitk o w and K A Bharat W e b viz a tool for w orldwide web access log analysis In Proceedings of First International WWW Conference  pages 271Ö277 May 1994  A W e x elblat History-based tools for na vigation In Proceedings of the Hawaii International Conference On System Science  IEEE Computer Society Press January 1999  A W e x elblat and P  Maes F ootprints History-rich tools for information foraging In Proceedings of CHIê99  pages 270Ö277 May 1999  G J W ills Niche w orks interacti v e visualization of v ery large graphs Journal of Computational and Graphical Statistics  8\(2 1999  T  Zheng Y  Niu and R Goebel W ebframe In pursuit of computationally and cognitively efìcient web minging In Proceedings of the 6th Paciìc-Asia Conference PAKDD  pages 264Ö275 May 2002 Proceedings of the IEEE/WIC International Conference on Web Intelligence \(WIê03 0-7695-1932-6/03 $17.00 © 2003 IEEE 


References 141 111 121 31 R Agrawd and R Srikant 223Fast Algorithms for Mining Association Rules,\224 Proc of Int\222l Conf on Very Large Data Bases pp.487-499 1994 R Srikant and R Agrawal 223hslining Generalized Asso ciation Rules,\224 Proc of Int\222l Conf on Very Large Data Bases pp.407-419 1995 N Megiddo and R Srikant 223Discovering Predictive As sociation Rules,\224 Proc ofthe 4th Int\222l Conf on Knowl edge Discovery an Databeses and Data Mining 1998 I51 161 E.H Han G Karypis and V Kuniar 223Scalable par allel data mining for association rules;\224 Proc of ACM SIGMOD Int\222l Conf pp.277-288 1997 T Shintani and M Kitsuregawa 223Iniplenientation of Parallel Mining Association Rules and their Evalua tion,\224 JSPP\22296 pp.97-104 June 1996 L Harada N Akaboshi K Ogihara and R Take 223Par allel Algorithm with Load Balancing for Mining Associ ation Rules,\224 IEZCE Trans on Info and Syst V-ol.J82 D-1 No.1 pp.70-81 January 1999 368 


In Figures 10 and 11 we see MAFIA is approximately four to five times faster than Depthproject on both the Connect-4 and Mushroom datasets for all support levels tested down to 10 support in Connect-4 and 0.1 in Mushroom For Connect-4 the increased efficiency of itemset generation and support counting in MAFIA versus Depthproject explains the improvement Connect 4 contains an order of magnitude more transactions than the other two datasets 67,557 transactions amplifying the MAFIA advantage in generation and counting For Mushroom the improvement is best explained by how often parent-equivalence pruning PEP holds especially for the lowest supports tested The dramatic effect PEP has on reducing the number of itemsets generated and counted is shown in Table 1 The entries in the table are the reduction factors due to PEP in the presence of all other pruning methods for the first eight levels of the tree The reduction factor is defined as  itemsets counted at depth k without PEP   itemsets counted at depth k with PEP In the first four levels Mushroom has the greatest reduction in number of itemsets generated and counted This leads to a much greater reduction in the overall search space than for the other datasets since the reduction is so great at highest levels of the tree In Figure 12 we see that MAFIA is only a factor of two better than Depthproject on the dataset Chess The extremely low number of transactions in Chess 3196 transactions and the small number of frequent 1-items at low supports only 54 at lowest tested support muted the factors that MAFIA relies on to improve over Depthproject Table 1 shows the reduction in itemsets using PEP for Chess was about an order of magnitude lower compared to the other two data sets for all depths To test the counting conjecture we ran an experiment that vertically scaled the Chess dataset and fixed the support at 50 This keeps the search space constant while varying only the generation and counting efficiency differences between MAFIA and Depthproject The result is shown in Figure 13 We notice both algorithms scale linearly with the database size but MAFIA is about five times faster than Depthproject Similar results were found for the other datasets as well Thus we see MAFIA scales very well with the number of transactions 5.3 Effects Of Compression To isolate the effect of the compression schema on performance experiments with varying rebuilding threshold values we conducted The most interesting result is on a scaled version of Connect-4, displayed in Figure 14 The Connect-4 dataset was scaled vertically three times so the total number of transactions is approximately 200,000 Three different values for rebuilding-threshold were used 0 corresponding to no compression 1 compression immediately and all subsequent operations performed on compressed bitmaps\and an optimized value determined empirically We see for higher supports above 40 compression has a negligible effect but at the lowest supports compression can be quite beneficial e.g at 10 support compression yields an improvement factor of 3.6 However the small difference between compressing immediately and finding an optimal compression point is not so easily explained The greatest savings here is only 11 at the lowest support of Conenct-4 tested We performed another experiment where the support was fixed and the Connect-4 dataset was scaled vertically The results appear in Figure 15 The x-axis shows the scale up factor while the y-axis displays the running times We can see that the optimal compression scales the best For many transactions \(over IO6 the optimal re/-threshold outperforms compressing everywhere by approximately 35 In any case both forms of compression scale much better than no compression Compression on Scaled ConnectAdata Compression Scaleup Connectldata ALL COMP 0 5 10 15 20 25 30 100 90 80 70 60 50 40 30 20 10 0 Min Support  Scaleup Factor Figure 14 Figure 15 45 1 


6 Conclusions We presented MAFIA an algorithm for finding maximal frequent itemsets Our experimental results demonstrate that MAFIA consistently outperforms Depthproject by a factor of three to five on average The breakdown of the algorithmic components showed parent-equivalence pruning and dynamic reordering were quite beneficial in reducing the search space while relative compressiodprojection of the vertical bitmaps dramatically cuts the cost of counting supports of itemsets and increases the vertical scalability of MAFIA Acknowledgements We thank Ramesh Agarwal and Charu Aggarwal for discussing Depthproject and giving us advise on its implementation We also thank Jayant R Haritsa for his insightful comments on the MAFIA algorithm and Jiawei Han for providing us the executable of the FP-Tree algorithm This research was partly supported by an IBM Faculty Development Award and by a grant from Microsoft Research References I R Agarwal C Aggarwal and V V V Prasad A Tree Projection Algorithm for Generation of Frequent Itemsets Journal of Parallel and Distributed Computing special issue on high performance data mining to appear 2000 2 R Agrawal T Imielinski and R Srikant Mining association rules between sets of items in large databases SIGMOD May 1993  R Agrawal R Srikant Fast Algorithms for Mining Association Rules Proc of the 20th Int Conference on Very Large Databases Santiago Chile, Sept 1994  R Agrawal H Mannila R Srikant H Toivonen and A 1 Verkamo Fast Discovery of Association Rules Advances in Knowledge Discovery and Data Mining Chapter 12 AAAVMIT Press 1995 5 C C Aggarwal P S Yu Mining Large Itemsets for Association Rules Data Engineering Bulletin 21 1 23-31 1 998 6 C C Aggarwal P S Yu Online Generation of Association Rules. ICDE 1998: 402-41 1 7 R J Bayardo Efficiently mining long patterns from databases SICMOD 1998: 85-93 8 R J Bayardo and R Agrawal Mining the Most Interesting Rules SIGKDD 1999 145-154 9 S Brin R Motwani J D Ullman and S Tsur Dynamic itemset counting and implication rules for market basket data SIGMOD Record ACM Special Interest Group on Management of Data 26\(2\1997 IO B Dunkel and N Soparkar Data Organization and access for efficient data mining ICDE 1999 l 11 V Ganti J E Gehrke and R Ramakrishnan DEMON Mining and Monitoring Evolving Data. ICDE 2000: 439-448  121 D Gunopulos H Mannila and S Saluja Discovering All Most Specific Sentences by Randomized Algorithms ICDT 1997: 215-229 I31 J Han J Pei and Y Yin Mining Frequent Pattems without Candidate Generation SIGMOD Conference 2000 1  12 I41 M Holsheimer M L Kersten H Mannila and H.Toivonen A Perspective on Databases and Data Mining I51 W Lee and S J Stolfo Data mining approaches for intrusion detection Proceedings of the 7th USENIX Securiry Symposium 1998 I61 D I Lin and Z M Kedem Pincer search A new algorithm for discovering the maximum frequent sets Proc of the 6th Int Conference on Extending Database Technology EDBT Valencia Spain 1998 17 J.-L Lin M.H Dunham Mining Association Rules: Anti Skew Algorithms ICDE 1998 486-493 IS B Mobasher N Jain E H Han and J Srivastava Web mining Pattem discovery from world wide web transactions Technical Report TR-96050 Department of Computer Science University of Minnesota, Minneapolis, 1996 19 J S Park M.-S Chen P S Yu An Effective Hash Based Algorithm for Mining Association Rules SIGMOD Conference 20 N Pasquier Y Bastide R Taouil and L Lakhal Discovering frequent closed itemsets for association rules ICDT 99 398-416, Jerusalem Israel January 1999 21 J Pei J Han and R Mao CLOSET An efficient algorithm for mining frequent closed itemsets Proc of ACM SIGMOD DMKD Workshop Dallas TX May 2000 22 R Rastogi and K Shim Mining Optimized Association Rules with Categorical and Numeric Attributes ICDE 1998 Orlando, Florida, February 1998 23 L Rigoutsos and A Floratos Combinatorial pattem discovery in biological sequences The Teiresias algorithm Bioinfomatics 14 1 1998 55-67 24 R Rymon Search through Systematic Set Enumeration Proc Of Third Int'l Conf On Principles of Knowledge Representation and Reasoning 539 550 I992 25 A Savasere E Omiecinski and S Navathe An efficient algorithm for mining association rules in large databases 21st VLDB Conference 1995 26 P Shenoy J R Haritsa S Sudarshan G Bhalotia M Bawa and D Shah: Turbo-charging Vertical Mining of Large Databases SIGMOD Conference 2000: 22-33 27 R Srikant R Agrawal Mining Generalized Association Rules VLDB 1995 407-419 28 H Toivonen Sampling Large Databases for Association Rules VLDB 1996 134-145 29 K Wang Y He J Han Mining Frequent Itemsets Using Support Constraints VLDB 2000 43-52 30 G I Webb OPUS An efficient admissible algorithm for unordered search Journal of Artificial Intelligence Research 31 L Yip K K Loo B Kao D Cheung and C.K Cheng Lgen A Lattice-Based Candidate Set Generation Algorithm for I/O Efficient Association Rule Mining PAKDD 99 Beijing 1999 32 M J Zaki Scalable Algorithms for Association Mining IEEE Transactions on Knowledge and Data Engineering Vol 12 No 3 pp 372-390 May/June 2000 33 M. J. Zaki and C Hsiao CHARM An efficient algorithm for closed association rule mining RPI Technical Report 99-10 1999 KDD 1995: 150-155 1995 175-186 3~45-83 1996 452 


