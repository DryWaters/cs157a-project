Association Action Rules and Action Paths Triggered by Meta-Actions Angelina A Tzacheva Univ of South Carolina Upstate Dept of Informatics Spartanburg SC 29303 USA Email ATzacheva@uscupstate.edu Zbigniew W Ras Univ of North Carolina Dept of Computer Science Charlotte NC 28223 USA Polish-Japanese Institute of Information Technology 02-008 Warsaw Poland Email ras@uncc.edu Abstract Action rules are built from atomic expressions called atomic action terms and they describe possible transitions of objects from one state to another They involve changes of values within one decision attribute Association action rule is similar to an action rule but it may refer to changes of values 
involving several attributes listed in its decision part Action paths are de\036ned as sequences of association action rules with the assumption that the last rule in a sequence is as action rule Early research on action rule discovery usually required the extraction of classi\036cation rules before constructing any action rule Newest algorithms discover action rules and association action rules directly from an information system This paper presents a strategy for generating association action rules and action paths by incorporating the use of meta-actions and in\037uence matrices Action paths show the cascading effect of meta-actions leading to a desired goal Keywords knowledge exploration action rules decision support system I I NTRODUCTION An association action rule is a rule extracted from an 
information system that describes a cascading effect of changes of attribute values listed on the left-hand side of a rule  on changes of attrib ute v alues listed o n its right-hand side Similarly to  11 w e a ssume that attributes used to describe objects are partitioned into stable and exible Values of exible attributes can be changed whereas values of stable attributes have to remain the same Action rules mining initially required to compare proﬁles of two groups of targeted objects those that are desirable and those that are undesirable  An action r ule w as deﬁned as a term  002  002  003 003 004  004 
 005 003 006   where 002 is a conjunction of xed condition features shared by both groups  003 003 004  represents proposed changes in values of exible features and  005 003 006  is a desired effect of the action To be more precise it states that when the circumstances are 002  changing alpha to beta will cause phi to change to psi In most cases it is not possible to change the values of exible attributes without having them triggered by some 
higher-level actions For instance we can not lower the temperature of a patient if he does not take a drug used for that purpose Taking aspirin is an example of a higher-level action which is expected to trigger such a change In this paper such higher-level actions are called meta-actions The associations between meta-actions and changes of attribute values they trigger can be modeled using either an inﬂuence matrix or ontology 3 Action rules have been introduced in and in v e stig ated further in  14 4 8 P aper 6 w as probably t he rst attempt towards formally introducing the problem of mining action rules without pre-existing classiﬁcation rules Authors explicitly formulated it as a search problem in a support-conﬁdence-cost framework The proposed algorithm 
is similar to Apriori Their deﬁnition o f a n action r ule allows changes within stable attributes Clearly changing the value of an attribute is naturally linked with some cost  I n medical area cost may refer t o h o w e xpensi v e i s t he patient care but also may refer to its safety In  authors used the cost measure for entirely different purpose to rule out action rules involving changes of stable attribute values by assigning to them very high cost However they did not take into account correlations between attributes which may either decrease or increase the cost of rules Algorithm ARD  presented in is based on P a w lak 002 s model of an information system S 
 The goal w a s t o identify certain relationships between granules deﬁned by the indiscernibility relation on its objects Some of these relationships uniquely deﬁne action rules for S  Paper introduced the notion o f action as a domainindependent way to model the domain knowledge Given a data set about actionable features and utility measure a pattern is actionable if it summarizes a population that can be acted upon towards a more promising population observed with a higher utility Algorithms for mining actionable patterns changes within exible attributes take into account only numerical attributes The distinguished decision attribute is called utility Each action A i 
triggers changes of attribute values described by terms  a 005   b 006  and  c don’t know The y are r epresented as an inﬂuence matrix b u ilt by an expert While previous approaches used only features mined directly from the decision system authors in  deﬁne actions as its foreign concepts Inﬂuence matrix shows the link between actions and changes of attribute values and the same shows correlations between some attributes i.e if  a 005  then  b 006  Clearly  e xpert does not kno w 
2010 IEEE International Conference on Granular Computing 978-0-7695-4161-7/10 $26.00 © 2010 IEEE DOI 10.1109/GrC.2010.64 772 


correlations between classiﬁcation attributes and the decision attribute Such correlations can be described as action rules and they have to be discovered from the decision system In changes of attrib ute v alues and action r ules are a lso described using terms  a 005   b 006  Authors in  d id not tak e into consideration s table attributes Also their attributes are only numerical In this paper for simplicity reason we use only symbolic attributes Numerical attributes if any are discretized before association rules or action rules are discovered II B ACKGROUND AND O BJECTIVES In this section we introduce the notion of an information system atomic action term meta-action and give examples By an information system  we mean a t riple S   X A V   where 1 X is a nonempty nite set of objects 2 A is a nonempty nite set of attributes i.e a  U 003 V a is a function for any a 007 A  where V a is called the domain of a 3 V  002  V a  a 007 A   For example Table 1 shows an information system S with a set of objects X   x 1 x 2 x 3 x 4 x 5 x 6 x 7 x 8   set of attributes A   a b c d   and a set of their values V   a 1 a 2 b 1 b 2 b 3 c 1 c 2 d 1 d 2 d 3   abcd x 1 a 1 b 1 c 1 d 1 x 2 a 2 b 1 c 2 d 1 x 3 a 2 b 2 c 2 d 1 x 4 a 2 b 1 c 1 d 1 x 5 a 2 b 3 c 2 d 1 x 6 a 1 b 1 c 2 d 2 x 7 a 1 b 2 c 2 d 1 x 8 a 1 b 2 c 1 d 3 Table 1  Information System S An information system S  X A V  is called a decision system if one of the attributes in A is distinguished and called the decision The remaining attributes in A are classiﬁcation attributes Additionally we assume that A  A St 010 A Fl 010 d   where attributes in A St are called stable and in A Fl exible  Attribute d is the decision attribute Place of birth is an example of a stable attribute Marital status is an example of an attribute which can be either stable or exible By atomic action term t associated with S  we mean any expression t  a a 1 003 a 2   where a 1 a 2 007 V a  a 007 A  If a 1  a 2  then we will also write  a a 1  instead of  a a 1 003 a 2   Object x 007 X satisfying the description a  x  a 1 belongs to the domain of t if there is a way of changing its attribute value a 1 to a 2  By meta-actions associated with S we mean higher concepts used to model certain generalizations of actions introduced in M eta-actions when e x ecuted trigger changes in values of some exible attributes in S as described by inﬂuence matrix and atomic action t erms T o g i v e an example let us assume that classiﬁcation attributes in S describe teaching evaluations at some school and the decision attribute represents their overall score Explain difﬁcult concepts effectively  Speaks English uently  Stimulate student interest in the course  Provide sufﬁcient feedback are examples of classiﬁcation attributes Then examples of meta-actions associated with S will be Change the content of the course  Change the textbook of the course  Post all material on the Web  Clearly any of these three meta-actions will not inﬂuence the attribute Speaks English uently and the same its values will remain unchanged L et us tak e Hepatitis as the application domain Then increase blood cell plague and decrease level of alkaline phosphatase are examples of an atomic action term Drugs like Hepatil or Hepargen can be seen as meta-actions triggering changes described by these two atomic action terms It should be noted that Hepatil is also used to get rid of obstruction eructation and bleeding However Hepargen is not used to get rid of obstruction but it is used to get rid of eructation and bleeding Also it should be mentioned here that an expert knowledge related to meta-actions involves only classiﬁcation attributes Now if some of these attributes are correlated with the decision attributes the ones listed on the right-hand side of an association action rule then the change of their values will cascade to the decision through the correlation The goal of action rule discovery is to identify possibly all such correlations In earlier works in  13 action r ules are constructed from classiﬁcation rules This means that we use pre-existing classiﬁcation rules or generate them using a rule discovery algorithm such as LERS  o r ERID   if the data h a v e probabilistic type then construct action rules either from certain pairs of these rules or from a single classiﬁcation rule In  authors p resented a s trate g y f or e x tracting action rules directly from a decision system Similarly authors in  presented a s trate g y f or disco v e ring association action rules directly from an information system In the next section we recall the notion of action terms action rules association rules and the notion o f a n inﬂuence matrix see  a ssociated with a s et of metaactions The values stored in an inﬂuence matrix are atomic action terms We also introduce the notion of an action path III A CTION R ULES A CTION P AT H S  AND M ETA A CTIONS Let S  X A V  be an information system where V  002  V a  a 007 A   First we recall the notion of an atomic action term  By an atomic action term we mean an expression  a a 1 003 a 2   where a is an attribute and a 1 a 2 007 V a If a 1  a 2  then a is called stable on a 1  
773 


By action terms  w e m ean a s mallest collection o f atomic action terms such that 1 If t is an atomic action term then t is an action term 2 If t 1 t 2 are action terms then t 1  t 2 is a candidate action term 3 If t is a candidate action term and for any two atomic action terms  a a 1 003 a 2    b b 1 003 b 2  contained in t we have a 011  b  then t is an action term By the domain of an action term t  denoted by Dom  t   we mean the set of all attribute names listed in t For instance if  a a 2    b b 1 003 b 2  is an action term then Dom  t   a b   Assume now that   a a 2    b b 1 003 b 2      a a 2    c c 1 003 c 2   are two collections of atomic action terms Meta-action M 1 can trigger the changes represented by  a a 2    b b 1 003 b 2  and M 2 can trigger the changes represented by  a a 2    c c 1 003 c 2   It means that attribute a in both cases has to remain stable Consider several meta-actions denoted M 1  M 2  M n  Each one can invoke changes within values of some classiﬁcation attributes in A  We assume here that A  d   A 1 010 A 2 010  010 A m  The expected changes of classiﬁcation attribute values on objects from S which are triggered by these meta-actions are described by the inﬂuence matrix  E i,j   1 012 i 012 n  1 012 j 012 m  Table 2 gives an example of an inﬂuence matrix associated with 6 meta-actions and attributes a  b  and c  abc M 1 b 1 c 2 003 c 1 M 2 a 2 003 a 1 b 2 M 3 a 1 003 a 2 c 2 003 c 1 M 4 b 1 c 1 003 c 2 M 5 c 1 003 c 2 M 6 a 1 003 a 2 c 1 003 c 2 Table 2 Inﬂuence Matrix associated with S For instance let us take meta-action M 2  It says that by executing M 2 on objects in S  two atomic action terms are triggered They are  a 2 003 a 1  and  b b 2 003 b 2   It means that objects in S satisfying the description  a a 2    b b 2  are expected to change their description to  a a 1    b b 2   Also it should be noticed that any inﬂuence matrix does not have to be associated with a decision system but only with an information system By an association action rule we mean any expression r  t 1 004 t 2   where t 1 and t 2 are action terms Additionally we assume that Dom  t 2  010 Dom  t 1  013 A and Dom  t 2  014 Dom  t 1  015 If t 2 is an atomic action term then r is an action rule The domain of action rule r is deﬁned as Dom  t 1  010 Dom  t 2   Now we give an example of an association action rule assuming that the information system S is represented by Table 1 attributes a  c  d are exible and b is stable Expressions  a a 2    b b 2    c c 1 003 c 2    d d 1 003 d 2  are examples of atomic action terms Expression r   a a 2    c c 1 003 c 2  004  d d 1 003 d 2  is an example of an association action rule which is also an action rule The rule says that if value a 2 for objects in S remains unchanged and the value of c will change from c 1 to c 2  then it is expected that value d 1 for all these objects will change to d 2  The domain Dom  r  of action rule r is equal to  a c d   By an action path we mean a sequence  t 1 004 t 2 004  004 t n   where t i is an action term for any 1 012 i 012 n  1  and t n is an atomic action term Additionally we assume that  016 i 012 n   017 t i 1 t i 2 t i 3 t i 4  t i  t i 1  t i 2  t i 3  002  t i 1  t i 1  t i 4  t i 3  002  t i 2 004 t i 4  is an action rule extracted from S  For instance  b 1 v 1 003 w 1  002  b 2 v 2 003 w 2  002  002  b p v p 003 w p  004  b 1 v 1 003 w 1  002  002  b j 1 v j 1 003 w j 1  002  b j 2 v j 2 003 w j 2  002  002  b jq v jq 003 w jq  002  002  b p v p 003 w p  004  d k 1 003 k 2  is an action path if  b j 1 v j 1 003 w j 1  002  b j 2 v j 2 003 w j 2  002  002  b jq v jq 003 w jq  004  b j v j 003 w j  is an action rule To justify the purpose of introducing the notion of an action path we take as an example the medical domain The medical state of a patient is represented by values of attributes including results of medical tests Action terms represent possible changes within values of some of these attributes which can be triggered by drugs consultations with doctors or surgeries At the same time the description of a medical state of a patient based on these attributes may not be sufﬁcient to identify any disease and the same what set of drugs should be prescribed to the patient In such cases the doctor still may decide to prescribe some drugs with a goal to move the patient to a new medical state which hopefully will be less complex in terms of stating the medical diagnosis The purpose of introducing the notion of an action path is to model this kind of reasoning which also describes the steps of a medical treatment Standard interpretation N S of action terms in S   X A V  is deﬁned as follow 1 If  a a 1 003 a 2  is an atomic action term then N S  a a 1 003 a 2     x 007 X  a  x  a 1    x 007 X  a  x  a 2    2 If t 1  a a 1 003 a 2   t and N S  t  Y 1 Y 2   then N S  t 1  Y 1 014 x 007 X  a  x  a 1  Y 2 014 x 007 X  a  x  a 2    Let us deﬁne  Y 1 Y 2  014  Z 1 Z 2  as  Y 1 014 Z 1 Y 2 014 Z 2  and assume that N S  t 1  Y 1 Y 2  and N S  t 2  Z 1 Z 2   Then N S  t 1  t 2  N S  t 1  014 N S  t 2   If t is an association action rule and N S  t   Y 1 Y 2   then the support of t in S is deﬁned as sup  t  min  card  Y 1  card  Y 2    Now let r  t 1 004 t 2  is an association action rule where N S  t 1  Y 1 Y 2   N S  t 2  Z 1 Z 2   Support and conﬁdence of r is deﬁned as follow 
774 


1 sup  r  min  card  Y 1 014 Z 1  card  Y 2 014 Z 2    2 conf  r  card  Y 1 003 Z 1  card  Y 1     card  Y 2 003 Z 2  card  Y 2    The deﬁnition of a conﬁdence requires that card  Y 1  011 0 and card  Y 2  011 0  Otherwise the conﬁdence of an association action rule is undeﬁned Coming back to the example of S given in Table 1 we can nd a number of association action rules associated with S  Let us take r   b b 1    c c 1 003 c 2  004  d d 1 003 d 2  as an example of association action rule Then N S  b b 1     x 1 x 2 x 4 x 6    x 1 x 2 x 4 x 6    N S  c c 1 003 c 2     x 1 x 4 x 8    x 2 x 3 x 5 x 6 x 7    N S  d d 1 003 d 2     x 1 x 2 x 3 x 4 x 5 x 7    x 6    N S  b b 1    c c 1 003 c 2     x 1 x 4    x 2 x 6    Clearly sup  r  and conf  r   1=1  2  IV D ISCOVERING A CTION R ULES AND A CTION P AT H S The strategy for discovering candidate association action rules was presented in I nﬂuence matrix associated with S is used to identify which candidate association action rules and which action paths are valid with respect to meta-actions and hidden correlations between classiﬁcation attributes and decision attributes Assume that S  X A V  is an information system A   A 1 A 2   A m    M 1 M 2   M n  are meta-actions associated with S   E i,j 1 012 i 012 n 1 012 j 012 m  is an inﬂuence matrix and r  A  i  a  i  003 a  j     A  i  a  i  003 a  j       A  i,k  a  i,k  003 a  j,k   004  A  i,k  a  i,k  003 a  j,k     A  i,k  a  i,k  003 a  j,k       A  i,p  a  i,p  003 a  j,p   is a candidate association action rule extracted from S  where A  i  A  i    A  i,k  A  i,k  A  i,k    A  i,p  007 A  We assume that A  i,j   M i  E i,j for any 1 012 i 012 n 1 012 j 012 m  Value E i,j is either an atomic action term or NULL not deﬁned By meta-actions based information system we mean a triple consisting with S  the set of meta-actions associated with S  and the inﬂuence matrix linking them We say that r is valid in S with respect to meta-action M i  if the following condition holds if  017 p 012 k  A  i,p   M i  is t hen  016 p 012 k  if A  i,p   M i  is deﬁned then  A  i,p  a  i,p  003 a  j,p     A  i,p  E i,p  We say that r is valid in S with respect to the set of metaactions M  where M 013 M 1 M 2   M n  if r is valid in S with respect to each meta-action in M  We say that the set of meta-actions M covers association action rule r  A  i  a  i  003 a  j     A  i  a  i  003 a  j       A  i,k  a  i,k  003 a  j,k   004  A  i,k  a  i,k  003 a  j,k     A  i,k  a  i,k  003 a  j,k       A  i,p  a  i,p  003 a  j,p   in S if r is valid in S with respect to the set of metaactions M and  016 p 012 k  017 M i 007 M  M i  A  i,p   a  i,p  002 r is valid in S with respect to M i  To give an example assume that S is an information system represented by Table 1 and  M 1 M 2 M 3 M 4 M 5 M 6  is the set of meta-actions assigned to S with an inﬂuence matrix shown in Table 3 Any empty slot in Table 3 represents NULL value abc M 1 b 1 c 2 003 c 1 M 2 a 2 003 a 1 b 2 M 3 a 1 003 a 2 c 2 003 c 1 M 4 b 1 c 1 003 c 2 M 5 c 1 003 c 2 M 6 a 1 003 a 2 b 1 Table 3 Inﬂuence Matrix associated with S In the previous section we explained the strategy for discovering candidate association action rules Two such rules have been constructed r 1   b b 1    c c 1 003 c 2  004  d d 1 003 d 2  and r 2  a a 2 003 a 1  004  d d 1 003 d 2   Clearly r 1 is valid in S with respect to M 4  M 5  and M 6  Action rule r 2 is valid in S with respect to M 1  M 2  M 4  and M 5  The meta-action M 4 covers rule r 1 Alsotheset of meta-actions  M 5 M 6  covers that rule Assume that S  X A 010 d  V  is an information system with meta-actions M   M 1 M 2   M n  associated with S  Any candidate association action rule extracted from S which is covered by a subset of meta-actions in M is called association action rule In such a case we will also say that the validation process for a candidate association action rule was positive Assume now that R is the set of candidate association action rules generated by the algorithm presented in the previous section The last step in the process of association action rules discovery is used to identify which rules in R are covered by some meta-actions from M  In our example r 1 is an association action rule because the meta-action M 4 covers it Rule r 1 is also applicable to x 1 and x 4  So the meta-action M 4 will trigger r 1 which in turn will generate two new tuples y 1 as the result of its application to x 1 and y 2 as the result of its application to x 4  The resulting information system is of type 007 see  and it is given below 
775 


abcd x 1 a 1 b 1 c 1 d 1 x 2 a 2 b 1 c 2 d 1 x 3 a 2 b 2 c 2 d 1 x 4 a 2 b 1 c 1 d 1 x 5 a 2 b 3 c 2 d 1 x 6 a 1 b 1 c 2 d 2 x 7 a 1 b 2 c 2 d 1 x 8 a 1 b 2 c 1 d 3 y 1 a 1 b 1 c 2  d 2  1  2 y 4 a 2 b 1 c 2  d 2  1  2 Table 4  Information System S 1  New candidate association action rules can be extracted from S 1  using algorithm similar to the one presented in  and ne xt their v alidity is v e riﬁed by meta-actions and the corresponding inﬂuence matrix associated with S 1 Now if any new association action rules are extracted then S 1 will be updated again and the process will continue till the x point is reached information system is not changed The validation process for action paths with respect to meta-actions and hidden correlations between classiﬁcation attributes and the decision attribute is similar to the validation process for association action rules Just we have to verify if action rules used to deﬁne each path are valid with respect to meta-actions and correlations between classiﬁcation and decision attributes V C ONCLUSION We have introduced a meta-action based information system which is as a triple  S  M i  i 012 n    E i,j  i 012 n j 012 m    where M i are meta-actions associated with S  and  E i,j  i 012 n j 012 m  is an inﬂuence matrix linking them Meta-actions jointly with the inﬂuence matrix are used as a postprocessing tool in association action rules discovery Inﬂuence matrix shows the correlations among attributes triggered off by meta-actions If the candidate association actions rules are not on par with them then they are not classiﬁed as association action rules However if the inﬂuence matrix does not show all the interactions between classiﬁcation attributes then still some of the resulting association action rules may fail when tested on real data A CKNOWLEDGMENT This material is based in part upon work supported by the Ministry of Science and Higher Education in Poland under Grant N N519 404734 and by AMVIS Program CONTACT in Czech Republic under Grant ME 913  R EFERENCES  R  A gra w al R  S rikant 1994 F ast a lgorithm for m ining association rules Proceeding of the Twentieth International Conference on VLDB 487-499  A  Dardzi  nska Z Ra  s 2006 Extracting rules from incomplete decision systems in Foundations and Novel Approaches in Data Mining Studies in Computational Intelligence Vol 9 Springer 143-154  D  F ensel  1998 O ntologies a silv er b ullet f or kno wledge management and electronic commerce Springer-Verlag  S  G reco B  M atarazzo N  P appalardo R Slo w i  nski 2005 Measuring expected effects of interventions based on decision rules J Exp Theor Artif Intell Vol 17 No 1-2 103-118  J  G rzymala-Busse 1997 A ne w v ersion of the r ule induction system LERS Fundamenta Informaticae Vol 31 No 1 27-39  Z  He X Xu S  Deng R Ma 2005 M ining action r ules from scratch Expert Systems with Applications Vol 29 No 3 691-699  Z  P a w lak  1981 Information s ystems t heoretical foundations Information Systems Journal Vol 6 205-218  Y  Q iao K Zhong H.-A W ang a nd X Li 2007 D e v eloping event-condition-action rules in real-time active database Proceedings of the 2007 ACM symposium on Applied computing ACM New York 511-516  Z W  R a  s A Dardzi  nska 2008 Action rules discovery without pre-existing classiﬁcation rules Proceedings of the International Conference on Rough Sets and Current Trends in Computing RSCTC 2008 LNAI 5306 Springer 181-190  Z.W  Ra  s A Dardzi  nska L.-S Tsay H Wasyluk 2008 Association Action Rules IEEE/ICDM Workshop on Mining Complex Data MCD 2008 Pisa Italy ICDM Workshops Proceedings IEEE Computer Society 2008 283-290  Z.W  Ra  s A Wieczorkowska 2000 Action-Rules How to increase proﬁt of a company in Principles of Data Mining and Knowledge Discovery Proceedings of PKDD 2000 Lyon France LNAI No 1910 Springer 587-592  J Rauch  2010 C onsiderations on Logical Calculi f or Dealing with Knowledge in Data Mining Advances in Data Management Z Ras A Dardzinska Eds Studies in Computational Intelligence Vol 223 Springer 2009 177-199  L.-S T say  Z.W  Ra  s 2006 Action rules discovery system DEAR3 in Foundations of Intelligent Systems Proceedings of ISMIS 2006 Bari Italy LNAI No 4203 Springer 483-492  A Tzache v a Z.W  Ra  s 2007 Constraint based action rule discovery with single classiﬁcation rules in Proceedings of the Joint Rough Sets Symposium JRS07 LNAI Vol 4482 Springer 322-329  K W a ng Y  Jiang A T uzhilin 2006 M ining Actionable Patterns by Role Models in Proceedings of the 22nd International Conference on Data Engineering IEEE Computer Society 16-25 
776 


N 005 002 005 200 400 600 800 1000 2 0.22 0.44 0.67 0.88 1.11 3 0.33 0.66 0.97 1.32 1.65 5 0.55 1.08 1.64 2.14 2.75 10 1.2 2.2 3.2 4.3 5.5 20 2.1 4.3 6.5 8.7 10.8 TABLE I T IME S ECONDS  USED BY ALL PARTIES FOR DATA ENCRYPTION 003 200 400 600 800 1000 Time 0.15 0.32 0.48 0.63 0.8 TABLE II T IME S ECONDS  USED BY EACH MODERATOR that these computational costs do not include the overhead of key generation and computing two parameters 032 and 033  However generating these parameters belongs to the preparation period of the mining process Therefore it can be implemented before the protocol is executed without affecting the computation time of the protocol For evaluating the efìciency of the protocol in practice we build an experiment on the privacy preserving frequency mining in C environment which runs on a laptop with CPU Pentium M 1.8 GHz and 1GB memory The used cryptographic functions are derived from Open SSL Library To measure the computation cost of the frequency mining protocol in worst case we assume that all parties involve in the protocol except the miner are the moderators We measure the computation cost of the frequency mining protocol for 10 parties Before executing the protocol we generate a pair of keys for each party with the size of public keys set at 512 bits Table 1 illustrates our measurements of all partiesês computation time in the submission phase it is in regard to 010 and 010 017 010  for a typical scenario where 010 003 004\005\005\005  010 017 010 003\002\005 The computation time of all parties is about 10.8 seconds Table 2 illustrates our measurements of a moderatorês computation time it is linear in 010 and does not depend on  and 010 017 010 For a typical scenario where 010 003 004\005\005\005  the computation time of a moderator is about 0.8 seconds The minerês computation time it is linear in 010  010 017 010  and   However it is very small it only is 021\020 0126 when 010 003 004\005\005\005\005  010 017 010 003\002\005  and  003\004\005  V P RIVACY PRESERVING FOR CLASSIFICATION RULES LEARNING IN TWO DIMENSION DISTRIBUTED SETTING A Privacy preserving association rules mining 1 Association rules and frequent itemset The association rules mining problem can be formally stated in Let  003  002 006 005 006 007\007\007\006  002 003 be the set of all items Let 002\003 a transaction database where each transaction 020 is a set of items such that 020 012   Associated with each transaction is a unique identiìer denoted by 020&\002  We say that a transaction 020 contains  a set of some items in  if  012 020  The problem is to nd the association rules that have an implication of the form  016  014 6\006  015  where  012    012   and  017  003 7  The support 6 and the conìdence  of the rule  016  are deìned as 6 003 014 006  020  007\003 020 006  020  007 010 002\003 010  003 014 006  010  007\003 020 006  020  007 020 006  007 Where 020 006  007 stands for the number of transactions containing the set  in 002\003 and 010 002\003 010 denotes the total number of transactions in 002\003  The strong association rules are required to meet a minimum support  6 021\003\014  and a minimum conìdence   021\003\014  deìned by the miner A set of items is referred as an itemset An itemset that contains 016 items is a 016 itemset The support count of an itemset is the number of transactions containing the itemset The minimum support count is deìned as 6 021\003\014 010 002\003 010 An itemset is frequent if its support count is not less than the minimum support count Association rule mining is a twostep process 1 Finding all frequent itemsets 2 Generating strong association rules from the frequent itemsets Agrawal et al 2 presented the Apriori algorithm to efìciently identify frequent itemsets for boolean association rules The name of the algorithm is based on the fact that the algorithm uses the Apriori property i.e all nonempty subsets of a frequent itemset must also be frequent 2 Finding a frequent itemset Assume that the transactions set 002\003 is two-dimension distributed into 011\012 parties as in Section 002 007\005  Each party 014 003\004  015 003\004 006 007\007\011\006 016 003\004 006 007\007\006 012 wns 002\003 003\004 that contains information about certain attribute set  003 004 004 and certain records Given a candidate set  of the 016 items the parties wish to cooperatively nd whether or not the candidate set is frequent from the joint transaction set  002\003  without disclosing each partyês individual transactions and even the local frequent itemsets Assume that  is partitioned into parts  004  where 016 011 017  S 012\002 004 006 007\007\006 012 003  Each  004 consists of items 011  003 004 004  Note that if  is frequent in 002\003  it is frequent in at least one horizontal partition 002\003 003  where 002\003 003 003 002\003 003 002 020 007\007\007 020 002\003 003\021  In addition if  004 is frequent in 002\003 003 every  004  016 011 017  is frequent in 002\003 003\004  Considering a map from each 002\003 003\004 to a binary number that is done by each 014 003\004 as follows 8 003\004 003 002 004 006 if  004 is frequent in 002\003 003\004  005 006 otherwise Thus 002\003 is mapped to the binary matrix 011 004 012    Hence  is frequent in at least one horizontal partition 0029 003 as long as at least a row 015 in  with all elements are 004  As the result 8 003 003 003 004 004 010 8 003\004 013\010 017 010 003\005  Clearly using frequency mining can allow the miner to nd a random permutation of  031 036 002   031 036 012  Therefore the miner can identify whether  is frequent or not without knowing  be frequent in which 002\003 003  3 Finding all frequent itemsets and their support counts In the classic Apriori algorithm The k e y issue is computing the support of an itemset To nd out if a particular itemset is frequent we count the number of records where the values for all the attributes in the itemset are 1 Thus the 
101 


problem is to compute the frequency of values tuples that all values in the tuple are 004  The privacy preserving protocol for nding frequent itemsets and support counts follows Apriori algorithm as below 1 002 Finding an item 004 Itemsets is frequent 003 2 022 002 003  3 The miner sets  002 003 021 4 for each  011 022 002 do 5 The miner uses the frequency mining protocol to identify whether or not  is frequent 6 if  is frequent then 7 The miner does  002 003  002 020  8 Let  011  003 004 004  the miner broadcasts the requirement for computing 017\024++;\036 006  007 to all 014 003\004  015 011\002 004 006 007\007\007\006 011 003  9 All parties involve in frequency mining protocol to compute 017\024++;\036 006  007 10 end if 11 end for 12 for 002  003\002   037 005 002 006 003 021  016\016 003 do 13 The miner does 022 037 Approri-gen  037 005 002  14 for each  011 022 037 do 15 The miner uses the frequency mining protocol to identify whether or not  is frequent 16 if  is frequent then 17 The miner does  037 003  037 020  18 Let  consists of items partitioned into the sets  004  where 016 011 017  017 007\002 004 006 007\007\007\006 012 003  the miner broadcasts the requirement for computing 017\024++;\036 006  007 to all 014 003\004  016 011 017  19 The miner and the parties involve in frequency mining protocol to compute 017\024++;\036 006  007 20 end if 21 end for 22 end for 4 Analysis of protocol Statement 1 Correctness If all participants follow the protocol then the minerês result is the frequent itemsets and the support count of each frequent itemset Proof Candidate itemsets are generated by the Apriorigen procedure The correctness of that procedure has proved  The 022 037 sets are generated correctly as long as the input to the procedure is correct We show by induction that the  037 sets are generated correctly At steps 004 013 022 with  003\004   002 is correctly generated by the frequency mining protocol Assume that  037 005 002 has been correctly generated then 022 037 is correctly generated by Apriorigen procedure Since frequency ming protocol is correct the support count of each  011 022 004 005 002 is computed correctly Hence  037 is generated correctly from  037 005 002  The entire frequent itemsets and the support counts gives correct results Statement 2 Privacy The protocol preserves the privacy of the honest users against the miner and up to 011\012 013 002 corrupted parties as long as there is at least an honest be the moderator Proof Since all support count computations and frequent itemsets identiìcation are done independently using frequency mining This statement follows immediately from Theorem 2 5 Evaluation of complexity The communication analysis critically depends on the number of frequency computations called We incur the cost of privacy preserving frequency mining for each call Let 036 be the maximum size of a frequent itemset and let 022 003  015 003\004 006 007\007\007\006 036  and  003  015 003\004 006 007\007\007\006 036  represent the number of candidate itemsets and the found number of frequent itemsets at each round the total communication consists of cost of nding frequent and the cost of the support counts computation that is 022 003 003 012 003 006\002 006\020  016\002 022 003 007 0114 016\006\020  016\002  003 007 0104 bits Similarity the computational complexity is 5 006 003 012 003 006\002 006\006  016 022 003 007 011 016\006  016  003 007 010 007 modular exponentiations B Privacy preserving learning of ID3 tree in two-dimension distributed data Using the primitive of proposed privacy-preserving frequency mining we can learn ID3 trees in two-dimension distributed data without loss of accuracy The minerês algorithm has the same complexity as the original ID3 tree algorithm except for an additional linear overhead factor Which has a value determined by the number of times frequency mining protocol using to compute gain 1 ID3 decision tree learning we rstly present a brief review of ID3 decision trees An ID3 tree is a rooted tree containing nodes and edges Each internal node is a test node and corresponds to an attribute The edges going out of a node correspond to the possible values of that attribute The ID3 algorithm works as follows The tree is constructed top-down in a recursive fashion At the root each attribute is tested to determine how well it alone classiìes the samples The best attribute is then chosen and the samples are partitioned according to this attribute The ID3 algorithm is then recursively called for each child of this node using the corresponding subset of data Thus major problem of the algorithm is choosing the best attribute that can achieve the maximum information gain at each node Clearly the problem of choosing the best attribute can be reduced to computing entropies that require computation of the frequency of tuples of va 2 Protocol of privacy-preserving ID3 tree learning Let 002\003 be a data set that has the set of non-class attributes 005 003 002 005 002 006 007\007\006 005  003 and  the class attribute Without loss of generality we assume that all attributes have the same domain size d 002 037 002 006 007\007\007\006 037 002 003  002\003 is two-dimension distributed into 011\012 parties as in Section 002 007\005  Each party 014 003\004  015 003 004 006 007\007\011\006 016 003\004 006 007\007\006 012 wns 002\003 003\004  There are 011 parties 014 003\021  015 003\004 006 007\007\011 007 holding the classiìcation attribute   The parties wish to cooperatively build the 002 023 decision tree classiìer from the joint data set of all parties without disclosing each partyês individual transactions and even the number of the local records Assume that parties have set a system as the computation model described in Section 023  In this section we use frequency protocol as the primitive to design the privacy protocol for building decision tree following the ID3 
102 


Algorithm PrivacyPreservingID3 006 005\006 006 002\003 007 1 If 005 is empty return a leaf-node with the class value assigned to the most of all transactions in 002\003  2 Use the privacy preserving method to count the number of records with each class label If 002\003 consists of records which have the same class label 8  return a leaf node with 8  3 Otherwise Determine the best attribute 005 003 for 002\003 using the privacy-preserving method For 005 003 003 002 037 002 006 007\007\007\006 037 002 003 let 002\003 006 037 002 007  002\003 006 037 002 007 be a partition of 002\003 that every record in 002\003 006 037 005 007 has attribute value 037 005  Return a tree whose root is labeled 005 003  the root has outgoing edges labeled 037 002  037 002 s.t each edge 037 005 goes to the tree 014 036\0158\037"\033\014 036\6\\0368\015\011\031&\002 023\006 005 013 005 003 006\(\006\002\003 006 037 005 007\007 007 3 Analysis of protocol The communication/computation depends on the number of records number of vertically partition number of attributes number of attribute values per attribute number of classes and complexity of the tree For a rough analysis the cost of computation involves in terms of the time number of frequency mining protocol called to build the tree Assume that there are 036 nodes in nal classiìcation tree In total each node needs  006\004 016 004 007 the calls of frequency mining protocol All node of the tree need 036 006\004 016 004 007 the frequency computation Therefore in total the entire classiìcation process will require O 036\004<\010 006  016 010 017 010 007  encryptions and O 036\004<\010 006  016 010 017 010 007 4  bits communication VI C ONCLUSION In this paper we proposed a method for privacy-preserving classiìcation learning in two-dimension distributed data which has not been investigated previously Basically the proposed method is based on the ElGamal encryption scheme and it ensures strong privacy without loss of accuracy We illustrated the applicability of the method by applying it to design the privacy preserving protocol for some learning methods such as association rules mining decision tree learning We conducted experiments to evaluate the complexity of the protocols The experimental results showed that the protocols are efìcient and practical R EFERENCES  A Evmie vski R Srikant R Agra w al and J Gehrk e Pri v ac y preserving mining of association rules In Proc of the Eighth ACM SIGKDD International Conference on Knowledge Discovery and Data Mining ACM Press pp 217-228 2002  C C Aggarw al P S Y u Eds Pri v ac y-Preserving Data Mining Models and Algorithms Series Advances in Database Systems Springer Vol 34 2008  D Agra w al and C Aggarw al On the design and quantiìcation of pri v ac y preserving data mining algorithms In Proc ACM SIGMOD pp 247-255 2001  D Boneh The decision Dif fe-Hellman problem In ANTS-III V o l 1423 of LNCS pp 48-63 1998  F  W u J Liu and S Zhong An ef cient protocol for pri v ate and accurate mining of support counts Pattern Recognition Letters Vol 30 Issue 1 1 pp 80-86 2009  O Goldreich F oundations of Cryptography  B asic T ools V o l 1 Cambridge University Press 2001  H Martin and S Kazue Ef cient receipt-free v oting based on homomor phic encryption In Proc of Advances in Cryptology-Eurocrypt 2000  J Benaloh and D T uinstra Receipt-free secretballot elections e xtended abstract In Proc of the 26th Annual ACM Symposium on Theory of Computing ACM Press pp 544-553 1994  J V aidya and C Clifton Pri v ac y preserving nai v e Bayes classiìer for vertically partitioned data In Proc of the 2004 SIAM Conference on Data Mining 2004  J V aidya and C Clifton Pri v ac y preserving association rule mining in vertically partitioned data In Proc of the eighth ACM SIGKDD International Conference on Knowledge Discovery and Data Mining pp 639-644 2002  Luong T D Ho T B 2010 Pri v ac y Preserving Frequenc y M ining in 2-Part Fully Distributed Setting IEICE Trans Information Systems to appear  M Kantarcoglu and J V aidya Pri v ac y preserving nai v e Bayes classiìer for horizontally partitioned data In IEEE ICDM Workshop on Privacy Preserving Data Mining pp 3-9 2003  M.Freedman K.Nissim and B.Pinkas Ef cient pri v ate matching and set intersection In Proc of Eurocrypt Vol 3027 of LNCS Springer-Verlag pp 1-19 2004  R Agra w a l a nd R Srikant Pri v ac y preserving data mining In Proc of ACM SIGMOD Conference on Management of Data pp 439-450 2000  R Agra w al R Srikant and D Thomas Pri v ac y preserving OLAP  I n Proc of the 2005 ACM SIGMOD International Conference on Management of Data SIGMOD 05 ACM pp 251-262 2005  R Agra w a l a nd R Srikant Pri v ac y-preserving data mining In Proc of the ACM SIGMOD Conference on Management of Data ACM Press pp 439-450 2000  R.Agra w al T  Imielinski and A.Sw ami Mining association rules between sets of items in large databases In Proc of the 1993 ACM SIGMOD international Conference on Management of Data 207-216 1993  S Zhong Z Y a ng and T  Chen k-Anon ymous data collection Journal of Information Sciences Vol 179 Issue 17 pp 2948-2963 2009  V S V e rykios E Bertino I.N F o vino L.P  Pro v e nza Y  Saygin and Y Theodoridis State-of-the-art in privacy preserving data mining ACM SIGMOD Record Vol 3 No 1 pp 50-57 2004  Y  Lindell B Pinkas Pri v ac y preserving data mining In Adv ances in Cryptology Crypto2000 Vol 1880 of LNCS Springer-Verlag pp 36-53 2000  Y  Tsiounis and M Y ung On the security of ElGamal-based encryption In Public Key Cryptographyê98 Vol 1431 of LNCS pp 117-134 1998  Z Y a ng S Zhong R.N Wright Pri v ac y-preserving classiìcation of customer data without loss of accuracy In Proc of the 2005 SIAM International Conference on Data Mining SDM pp 21-23 2005  W  Du and Z Zhan Using randomized response techniques for pri v ac y preserving data mining In Proc of the Ninth ACM SIGKDD International Conference on Knowledge Discovery and Data Mining ACM Press pp 505510 2003  W  Du and Z Zhan Building decision tree classiìer on pri v ate data In Proc of IEEE International Confonference on Privacy Security and Data Mining pp 1-8 2002 
103 


              


   


                        





