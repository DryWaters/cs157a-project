Mining Time-Dependent Influential Users in Facebook Fans Group Li-Jen Kao 1 1 Department of Computer Science and Information Engineering Hwa Hsia University of Technology Taipei, 23568 Taiwan Email: lijenkao@cc.hwh.edu.tw Yo-Ping Huang 2,3 2 Department of Electrical Engineering National Taipei University of Technology, Taipei, 10608 Taiwan 3 Department of Computer Science and Information Engineering National Taipei University, New Taipei City, Taiwan 23741 Email: yphuang@ntut.edu.tw Frode Eika Sandnes 4,5 Faculty of Technology, Art and Design 4 Oslo and Akershus University College of Applied Sciences, Oslo, Norway 5 Westerdals Oslo School of Art, Commu nication and Technology, Oslo, Norway Email: Frode-Eika.Sandnes@hioa.no  Abstract 227 Klout, a famous App, could measure people 222 s social network influence power. Klout score is measured according to the data from past 90 days and an individual who has high Klout score is thought as having high social influence power. Lots of businesses or organizations like to hire high Klout score people to help them to diffuse their brand images. However, Klout score cannot tell us who has high influence power in a specific short time period. For example, it is possible that some of the users might always have high influence power on Monday or on Monday morning. These time-dependent influential users probably have low Klout scores in average but have high influence power in some specific time periods. Businesses should not just know who are the high Klout score users but also they should identify who are the time-dependent influential users because all of them may have some sort of power to influence other users 222 buying decisions. In this study, a framework based on frequent pattern mining is proposed to find the timedependent influential users. First of all, the framework will divide a predefined long time period into successive short time segments and then influential transactions that contain Facebook fans 222  influence power data will be defined in each time segment. From the frequent patterns, the proper time for time-dependent influence users to spread information can be found. A theoretical experiment is given to verify the effectiveness of the proposed framework Keywords 227 social network mining; frequent itemset; social network influential users mining I   I NTRODUCTION  Social network websites are the platforms that users can interact with each other by sharin g or exchanging opinions [9   Not just sharing opinions, the trust relationships can be built among users in this computer network community. Typically the user builds the relation with someone who they never encountered in person and regardless of geographical locations 4   It is sim ilar to th at  pe op le tru s t th e re p o rts f r o m T V n e w s o r  newspapers, trusting the posters 222 information on social networks makes the social networks a new type of medium Users even will spread the ideas on the posters to everywhere of the world. Today, social networks are new information propagation model which the users are both information consumers and information producers [1, 14   In order to utilize the information propagation power from social networks, lots of businesses or organizations start to build their own fans group to post advertisement to prompt their products. For example, in Facebook fans group, as businesses post new products 222 information, some of the fans will post comments to share user experiences, and some of the fans add feedbacks for aforementioned comments. If some of the comments, opinions or debates are trusted by fans, not just their buying decisions may be affected but the comments opinions or debates will be spread by them to everywhere The posted comments can affect social network users\222  thinking and then the comments will be spread out by the users whose thinking is affected. Such a recursive influence propagation way makes the social networks not just social platforms but also marketing powerhouses [15   F o r exam ple  the Facebook fans group of Carrefour Taiwan owns 500 thousand fans Because of fans\222 influence propagation; many people who are social network users but not the group fans attend the activities held in physical mart In fact, influence propagation problems are interesting research topics and have been widely studied in the past [2-3,56,9,16,19   T y p ica lly  bu sin e s s es pay a tten ti on on th e p r o b l e m of how to identify the right influential users in social network 1 f  b u si ne s s co ul d kno w  w h o t he i nfl ue nt i a l user s ar e  t h e n  businesses can employ every possible way to make the influential users to have more understanding about products and ask them to be market-movers to affect other fans buying 2016 IEEE International Conference on Systems, Man, and Cybernetics € SM\C 2016 | October 9-12, 2016 € Budapest, Hungary 978-1-5090-1897-0/16/$31.00 ©2016 IEEE SMC_2016    000718 


decisions making. An important marketing strategy for businesses in social networks is to turn the influence fans as unofficial spokesmen and triggering a cascade of influence by which fans affect other fans or non-fans There are also many studies of how to identify influential users. Agarwal et al. [1  pr o p o se d a  m eth o d t o i d en tif y  influential bloggers is according to a set of collectable statistics Goyal et al. [7 em ploy p r o p a gati on g r a p h m i n i n g m e th od t o  find influential users. But now, there is a more easy way to find influential users. Klout, established in 2009, is the application that allows business companies to measure individuals influence scores. Klout score is measured according to the data from past 90 days and an individual who has high Klout score is thought as having high social influence power. Today businesses try to find influential users according to their Klout scores However, there is no method including Klout could tell us who has high influence power in a specific time period Because even the literature from Klout says that the time for opinions to post is important [18 i t is p o ssi bl e th at a f a n s  group user may have high influence power in a specific time period but owns low Klout score. Such time-dependent users may also affect others buying decisions and business should not ignore them In this paper, we propose a framework based on frequent itemsets mining method to find potential time-dependent influential users. First of all, the framework will divide a predefined long time period into successive short time segments. An influence transaction that contains the fans\222 influence power data will be defined in each time segment After influence transactions being collected, the frequent patterns will be found to deduce the time-dependent influential users The rest of this paper is organized as follows. Section II introduces the topic of social network mining. The proposed time-dependent influential users mining method is given in Section III. In order to show the effectiveness of the proposed method, experimental results are presented in section IV and Section V concludes the paper II  R ELATED W ORKS  This section introduces previous researches related to social networks data mining A  Social Networks Social network users perform various activities. One major activity is to share their opinions or post their products ratings on social network platform. The first example is that a user may rate a movie in Yahoo! Movies. Another good example is Facebook fans post user experiences Though posting messages is one of the important activities in social network, the important thing is that those messages can be exchanged or spread very quickly in social network and this characteristic makes the social networking sites as new type of social media [9  F ac ebo ok m ay be th e m o st f am o u s  social networking site, and because its marketing power increase a lot in these years, businesses have utilized Facebook to build fans group to initial activities to promote products, to communicate with their fans, and to collect fans data to analyze users\222 behavior B  Social Networks Data Mining Since the social media data are vast, noisy, unstructured and dynamic, analyzing social networks data is a challenge work [9 F o r exam ple th e in f l u e nce an d h o m oph ily pr o b lem in  social networks has been studied for many years. However since most social networks have a mixture of both influence and homophily, it is a challen ge to distinguish them In order to resolve the aforementioned problem aroused by the characteristics of social network data, several literatures have invented new data mining methods to analyze social network data. Those new data mining methods have applied on community analysis users\222 sentiments sensing, improvement of recommendation systems, prediction of social links, and exploration of influence propagation, etc C  Influential Users Mining Social networks have become important platforms for information spread. Some of the users post their opinions on social networks and as these opinions spread, some other users 222  thinking may be influenced and the influenced users even continue to spread the influence to other users. The social network users who can influence other users 222 thinking or decision are influential users. If businesses can identify the influential users and make special marketing strategy for them businesses will benefit for the influence propagation In order to find influential users in social networks, lots of research articles model a social network as a directed graph which is composed by nodes and links. The nodes represent users and the links reflect relationships between nodes Basically, those works propose greedy algorithms to identify which nodes could activate a certain number of other users Some other works employed data mining methods to find influential users. Agarwal et al. [1 p r o pos e d a  pr elim in ary  model to find influential users in blog site. The influential bloggers are found by evaluating their intuitive properties recognition, activity generation, novelty, and eloquence. Goyal et al. [7 ex pl o i t e d pr o p ag ati on g r a p h m i n i n g  m eth od t o f i n d  influential leaders. Typically, their framework will derive a transaction database from a social graph with an ordered log of user actions. Then the influential leaders can be mined from the database by employing frequent patterns mining method. Hu and Lee [12  als o u s e d f r e q u e n t p att ern m i n i n g  m eth od t o f i n d  influential users. Their method was not just to find influential users but also can predict the appropriate time to post messages Today, a more easy way can be used to find influential users. Klout, established in 2009, is an app to measure individuals influence scores. Klout Score is measured using social networks data from the past 90 days and businesses can use Klout to find influential users who have high influence scores D  Frequent Itemsets Mining Frequent itemsets mining is usually the first step to find association rules. Following is a brief introduction of how to find frequent itemsets Let D be the transaction database and I be the set of all items. A transaction in D is denoted as t An itemset X is a set that is included in I  Following is the equation to calculate the support value of X   2016 IEEE International Conference on Systems, Man, and Cybernetics € SM\C 2016 | October 9-12, 2016 € Budapest, Hungary SMC_2016    000719 


 D tX support\(X  If support value of an itemset is greater than a threshold min_sup then the itemset is a frequent itemset. In other words only an itemset that is contained in a certain number of transactions can be a frequent itemset In order to find frequent itemset, the first algorithm, Apriori algorithm, was developed. However, those Apriori-based algorithms [8,11 a r e in ef f ic ie n t be cau s e th e  alg o r i th m s u s ually  needed to repeatedly scan the database before finding frequent itemsets. In order to fix the inefficient problem, several nonApriori methods have been proposed to mine frequent itemsets 10,13,2 Among these non-Apriori methods, FP-growth [10 is a  well-known algorithm to find frequent itemsets. The algorithm scanned the database only twice to build an FP-tree structure and then frequent itemsets can be extracted from FP-tree. Since each branch in the FP-tree is a frequent itemset, finding frequent itemset becomes easy and the performance to get all frequent itemsets is better than those Apriori-based algorithms 8,1  In  or de r t o h a ve  be tt er  pe rf o r m a nce th is stu d y w ill adopt FP-growth algorithm to find frequent itemsets III  T HE P ROPOSED A LGORITH  In this section, we will introduce how to find timedependent influential users in Facebook fans group. A timedependent influential user is thought as his messages or opinions posted on group wall will affect other users buying decisions in a specific time period Please note a time-dependent influential user may not have high Klout score; they only have high influence power in a specific time period. The businesses should not only pay attention to those users have high Klout scores but also need to know who are the time-dependent influential users. All the influential users including time-dependent users may increase the marketing power Our proposed framework to find influential users is based on frequent patterns mining method. Unlike some works using directed graph with greedy algorithms to explore influential users, our method is very easy to understand and implement Following is the description about the proposed framework Like the measurement in Klout, this study evaluates a fan 222 s social influence score according to his the number of opinion posted, the number of thumbs-up received, and how many times his opinions shared Definition 1. A long term time period T saying a week or a month, will be divided into successive short time segments This successive time segment set is defined as   Example 1. If a long term time period is a week from 2016/3/13 to 2016/3/19, and single time segment length is set to one day then t 1 is Sunday t 2 is Monday, and t 3 is Tuesday, etc. In this case T will be the set of The length of the time segment definition depends on the application needs, and it is not necessary to set to one day. Fig. 1 shows this one-week time period and one can understand what successive time segment set is for this example Definition 2. Let N be the set of all m registered fans. The set N  is denoted as     Figure 1. The successive time segment set for one-week time period Definition 3. Some of the group fans may post their opinions in a specific time period t i The set for those fans who post opinions in t i is defined as   is the online fans set at t i  Example 2. If  and, the fan n 7  n 21  n 36  n 48  n 49 and n 57 post their opinions on group wall in the time period t 3 then the online fans set  In Facebook, when an opinion is posted to group wall by a certain user n j at time period t i it may receive some feedback actions. Usually, we can see that the feedbacks received in Facebook are thumbs-up, comments or sharing. According to Klout, that the more feedback n j can receive, the more influence power n j can have. Therefore, a fan 222 s influence score will be evaluated by a post 222 s feedback number. Please note that since it is hard to judge a comment is a positive feedback or a negative feedback, we decide to exclude the comments as the score evaluation factor Definition 4. Let  be the number of thumbs-up received by n j Let  be the number of sharing received by n j A fan n j 222 s influence score can be defined as      where  are weight numbers and  We can discretize the influence score from quantitative value into several intervals. For example, we could divide three score levels which are low [0 to 30\, medium [30 to 80\, and high [80 and up\. If the score is less than 30, it will be in low level and denoted as s l and if the score is between 30 and 80, it will be in medium level and denoted as s m The score that is greater than 80 belongs to high score level and will be denoted as s h  Please note that how to discretize the influence score into several intervals depends on the application needs. One even can discretize the influence score into five or six intervals if the application needs to do so Definition 5. An influence transaction TR i in time period t i is composed of influence items     3 where s j is n j 222 s influence score level   Example 3. If after the scores measurement, the influence transaction TR 3 may look like   In order to identify time-dependent influential users, the influence transactions should be collected for multiple longterm time periods. For example, if the long term time period T  2016 IEEE International Conference on Systems, Man, and Cybernetics € SM\C 2016 | October 9-12, 2016 € Budapest, Hungary SMC_2016    000720 


is one week, the influence transactions should be collected for several weeks After data being collected, a certain influence item n j  s j  can be removed from that transaction if s j is less than a predefined score level threshold. The reduced transaction is denoted as The new dataset for all reduced transaction is denoted as  Example 4. If the items with low influence score level should be removed from the transaction TR 3 then the reduced transaction is   Now, the frequent pattern mining algorithm, e.g., FPgrowth algorithm, can be applied to the reduced dataset to derive frequent patterns. It is not necessary to find all the frequent patterns, and in fact, the frequent patterns mining work may be stopped as L frequent patterns are found, where L is a pre-defined value of pattern length and L 2 The users that are found in the L frequent patterns are the time-dependent influential users. Since each transaction is collected in a specific time period, by checking which transactions contain the L frequent patterns, one can know who the time-dependent influential users are. Fig. 2 shows the completed algorithm 1. Divide a long term time period into successive short time segments  is the set of successive time segments. The length of the time segment according to the application needs 2 For each t i collect influence transactions for multiple T  2.1. Collect online fans set N i   2.2 Calculate influence score S  n j or each n j  in N i  according to \(2 2.3 Discretize S  n j to a specific score level s j  The derived data pair n j  s j is seen as an item and the influence transaction TR i  can be defined in this step for each t i  3 next t i  4. Remove items that their influence level are less than a predefined score level  is a reduced influence transaction and is the reduced dataset 5. Find L frequent patterns from by employing FPgrowth algorithm L is a pre-defined pattern length and L  2 6. Check the  L frequent patterns and influence transactions to identify who the time-depende nt influential users are Figure 2. The algorithm to identify time-dependent influential users IV  E XPERIMENT R ESULTS AND D ISCUSSION  One experiment is given to evaluate our works on timedependent influential fans finding The long term time period is one week and a single short term time segment length is set to one day. That is T will be the set of In order to evaluate the proposed framework, following assumptions are made first 1. This fans group owns 10 registered fans N is   2. The test will collect influence transactions for four weeks 3. Equation \(2\ is used to derive fans 222 influence scores. The weight numbers w 1 and w 2 are all set to 1 since we think they are equally important factors 4. Three score levels which are low [0 to 10\, medium [10 to 30\, and high [30 and up\ are defined 5. The influence item with low influence level will be removed from each transaction Table 1 is the final collected online fans set for each t i Each online fan 222 s influence score can be calculated according to Eq.\(2\. All the fans 222 scores need to be discretized into one of the score level. Table 2 is the reduced dataset which the items with low score level have been removed In order to have better performance, the FP-growth algorithm is applied to find frequent patterns. The minimum support is set to 4 and the mining work will stop as all the 3frequent patterns are found At the final stage, the 3-frequent pattern {\(n2, sh\, \(n6, sh n8, sh\e found. That is, the fan n2, n6, and n8 are potential influential users. Are they time-dependent influential users? By checking each reduced transaction, one can find the user n8 usually spread his opinions at time t1 and t6. The user n8 will not have high Klout score, because they almost post nothing except at time t1 and t6. Businesses should still pay attention to n8, since they have high influence power at time t1 and t6. The user n8 is a time-dependent influential user Table 1. Online fans set collected for four weeks time period Online Fans Set t 1  n 1 n 2 n 6 n 8 n 9  n 2 n 4 n 8 n 9  n 2 n 6 n 7 n 8 n 9  n 10  n 4 n 8 n 9  t 2  n 2 n 3 n 7 n 8 n 9  n 3 n 4 n 8 n 9  n 3 n 4 n 5 n 9  n 1 n 4  t 3  n 1 n 5 n 7 n 8  n 1 n 5 n 7 n 8  n 1 n 3 n 5 n 7 n 8   n 1 n 8  t 4  n 2 n 6 n 8 n 9  n 2 n 8 n 9  n 2 n 6 n 8 n 9  n 2 n 6 n 7  t 5  n 1 n 3 n 5 n 7  n 1 n 2 n 5 n 6 n 7 n 9  n 1 n 2 n 5 n 6 n 7 n 8  n 1 n 2 n 3 n 4 n 5 n 8  t 6  n 1 n 2 n 5 n 7  n 1 n 2 n 4 n 6 n 8 n 9  n 2 n 3 n 7 n 6 n 8  n 10  n 1 n 2 n 7 n 6 n 8 n 9  t 7  n 1 n 5 n 7 n 8  n 6 n 7  n 5 n 6 n 7  n 2 n 4 n 5 n 8  2016 IEEE International Conference on Systems, Man, and Cybernetics € SM\C 2016 | October 9-12, 2016 € Budapest, Hungary SMC_2016    000721 


Table 2. The reduced dataset for the experiment time period Transactions t 1  n 2 s h  n 6 s h  n 8 s h  n 9 s m  n 2 s m  n 8 s h  n 9 s m   n 2 s h  n 6 s h  n 8 s h  n 9 s m  n 8 s h  t 2  n 3 s m  n 9 s m  n 3 s m  n 4 s m  n 9 s m  n 3 s m  n 4 s m  n 9 s m  t 3  n 1 s m  n 5 s h  n 7 s h  n 1 s m  n 5 s h  n 7 s h  n 1 s m  n 5 s h  n 7 s m  n 8 s m  n 1 s h  t 4  n 2 s m  n 6 s h  n 9 s m  n 2 s m  n 9 s m  n 2 s h  n 6 s h  n 9 s m  t 5  n 1 s m  n 3 s m  n 5 s m  n 7 s m  n 1 s h  n 2 s m  n 5 s m  n 6 s h n 7  s h  n 1 s h  n 2 s h  n 5 s m  n 6 s h  n 7 s m  n 1 s h  n 2 s h  n 5 s m  t 6  n 1 s h  n 2 s m  n 5 s m  n 7 s m  n 1 s h  n 2 s h  n 6 s h  n 8 s h n 9 s m   n 2 s h  n 3 s m  n 7 s h  n 6 s h  n 8 s h  n 2 s h  n 6 s h  n 7 s h  n 8 s h  t 7  n 7 s h  n 2 s h  n 5 s h  V  C ONCLUSIONS  Businesses start to build Facebook fans group to advertise their new products. In order to increase marketing power for fans group, businesses start to use Klout to find the right influential users in their fans group. Businesses can turn those influential fans as unofficial spokesmen and trigger a cascade of influence propagation to increase the marketing power Klout could not tell the business who the time-dependent influential users are. However, Klout think that the time to post opinions is important. This implies that businesses need to find time-dependent influential fans in Facebook groups even they don 222 t have high Klout scores In this paper, a framework based on frequent itemsets mining method is proposed to find potential time-dependent influential fans. The concept of this framework is intuitive and easy to implement The proposed framework divides a long term period into successive short term time segments. Online user influence score should be derived first and then the influence transactions that contain user influence score level will be defined in each time segment. FP-growth algorithm is applied to the reduced influence transaction dataset to get frequent patterns. By checking the frequent patterns, one can find time-dependent influential fans. Businesses should not ignore time-dependent fans because they might also help businesses to increase the marketing share In Section IV a theoretical experiment is given to show how the proposed framework works. We truly understand that the given experiment will be more reliable if we can analyze the real Facebook fans data to identify the influential fans. In the future, we will build a Facebook fan group page for college student recruitment. The fans\222 data will be collected and our framework will be applied to identify influential fans as well as time-dependent influential fans. The comparison results with Klout will be made in the future. We hope our research work can help some colleges to enroll more students if the colleges can target the right influential fans In fact, our research can also help various business fans groups to target the right influential fans. For example, some health supplements sale groups can apply our method to find influential users and time-dependent influential users to prompt their marketing share. In the future, we also hope that some of the experiments related to business sales promotion can be given in our study A CKNOWLEDGEMENT  This work was supported in part by the Ministry of Science and Technology, Taiwan under Grant MOST103-2221-E-027122-MY2 and by a joint project between the National Taipei University of Technology and the Mackay Memorial Hospital under Grants NTUT-MMH-105-04 and NTUT-MMH-104-03 R EFERENCES  1  N. Agarwal, H. Liu, L. Tang, and S.S. Yu, \(2008, February 223 Identifying the influential bloggers in a community 224 in Proc. of the Int. Conf. on Web Search and Data Mining pp.207-218, Feb. 2008 2  S. Aral, L. Muchnik, and A. Sundararajan 223 Distinguishing influencebased contagion from homoshily-driven diusion in dynamic networks 224  in Proc. of the National Academy of Sciences of the United States of America vol. 106, no. 51, pp.21544-21549, Oct. 2009 3  J. Brown and S. Reinegen 223 Social ties and word-of-mouth referral behavior 224  Journal of Consumer Research vol. 14, no. 3, pp.350-362 1987 4  K. Burke, \223Network to drive revenue,\224 Target Marketing Magazine vol 29, no. 2, pp.25-26, Feb. 2006 5  S. Domingos and M. Richardson 223 Mining the network value of customers 224 in Proc. of the 7th ACM SIGKDD Int. Conf. on Knowledge Discovery and Data Mining pp.57-66, Aug. 2001 6  J. Goldenberg, B. Libai and E. Muller 223 Talk of the network: a comslex systems look at the underlying srocess of word-of-mouth 224  Marketing Letters vol. 12, no. 3, pp.211-223, 2001 7  A. Goyal, F. Bonchi and L.V. Lakshmanan 223 Discovering leaders from community actions 224 in Proc. of the 17th ACM Conf. on Information and Knowledge Management pp.499-508, Oct. 2008 8  G. Grahne and J.F. Zhu, \223Fast algorithms for frequent item set mining using FSTrees,\224 IEEE Trans. on Knowledge and Data Engineering vol 17, no. 10, pp.1347-1362, Oct. 2005 9  S Gundecha and H. Liu, \223Mining social media a brief introduction,\224  in Proc. INFORMS TutORials in Oserations Research Phoenix, Arizona USA, pp.1-17, Oct. 2012   J Han J Sei and Y. Yin, \223Mining frequent satterns without candidate generation,\224 in Proc. of ACM SIGMOD Int. Conf. on Management of Data Dallas, Texas, USA, pp.1-12, May 2000   T Hu, S.Y. Sung, H. Xiong an d Q. Fu, \223Discovery of maximum length frequent itemsets,\224 Information Sciences vol. 178, no. 1, pp.69-87, Jan 2008   H.-W. Hu and S.-Y. Lee 223 Study on influence diffusion in social network 224  Int. Journal of Comsuter Science and Electronics Engineering  vol. 1, no. 2, pp.198-204, 2013   Y.-P. Huang, L.-J. Kao and F.E. Sandnes, \223Efficient mining of salinity and tems erature association rules from ARGO data,\224 Expert Systems with Asslications vol. 35, no. 1-2, pp.59-68, Aug. 2008   D. Kemse, J. Kleinberg and \311. Tardos 223 Maximizing the ssread of influence through a social network 224 in Proc. of the 9th ACM SIGKDD Int. Conf. on Knowledge Discovery and Data Mining pp.37-146, Aug 2003   A. Sorterfield 223 5 new studies show Facebook a marketing powerhouse 224  Social Media Examiner Mar. 2010 2016 IEEE International Conference on Systems, Man, and Cybernetics € SM\C 2016 | October 9-12, 2016 € Budapest, Hungary SMC_2016    000722 


  D. Qiu, H. Li and Y. Li 223 Identification of active valuable nodes in temsoral online social network with attributes 224  International Journal of Information Technology & Decision Making vol. 13, no. 4, pp.839-864 Apr. 2014   M. Richardson and S. Domingos 223 Mining knowledge-sharing sites for viral marketing 224 in Proc. of the 8th ACM SIGKDD Int. Conf. on Knowledge Discovery and Data Mining pp..61-70, Aug. 2002   N. Ssasojevic, Z. Li, A. Rao and P. Bhattacharyya 223 When-to-post on social networks 224 in Proc. of the 21st ACM SIGKDD Int. Conf. on Knowledge Discovery and Data Mining   Sydney, NSW, Australia pp.2127-2136, Aug. 2015   M.F. Tsai, C.W. Tzeng, Z.L. Lin and A.L. Chen 223 Discovering leaders from social network by action cascade 224  Social Network Analysis and Mining vol. 4, no. 1, pp.1-10, Jan. 2014   X. Wu, V. Kumar, J. Ross Quinlan, J. Ghosh, Q. Yang, H. Motoda, G McLachlan, A. Ng, B. Liu, S. Yu, Z.-H Zhou, M. Steinbach, D. Hand and D. Steinberg, \223To p 10 algorithms in data mining,\224 Knowledge and Information Systems vol. 14, no. 1, pp.1-37, Jan. 2008  2016 IEEE International Conference on Systems, Man, and Cybernetics € SM\C 2016 | October 9-12, 2016 € Budapest, Hungary SMC_2016    000723 


VLDB 94  San Francisco  CA  USA pp  487-499  Morgan Kaufinann Publishers Inc  1994 4 Han  J  J Pei  and Y Yin   Mining frequent patterns without candidate generation  In ACM International Conference on Software Engineering  Artificial Intelligence  Networking and Parallel 7 Agrawal R Srikant R   Fast algorithm for mining association rules   Proceedings of 20th International Conference on Very Large Data Bases VLDB  Morgan Kaufman Press  I 994  487-499 8 J S Park  M S Chen  P S Yu   Efficient parallel data mining of association rules  4th International Conference on Information and Knowledge Management  1995  I I 233-235P 9 S Brin et ai   Dynamic itemset counting and implication rules for market basket data  Proceedings of the ACM SIGMOD International Conference on Management of Data  1997  123I 40 10 Jeffrey Dean  Sanjay   Map  Reduce Simplified  Data Processing on Large Clusters  OSDI  04 Sixth Symposium on Operating System Design and Implementation 2004  I th DBA  06  Anaheim  CA USA,2006  pp  75 82  ACT A Press  6 Yildiz  B and SIGMOD 93  New York  NY  USA  1993  pp  207 216  2 Han  J  and M Kamber  Data 13   Distributed Computing SNPD  12  Kyoto  20 I 2  IEEE 236 24 I  13 S Hammoud   MapReduce Network Enabled Algorithms for Classification Based on Association Rules  Thesis  20 I I  14 Yanjie Gao   Data Processing with Spark Technology  Application and Performance Optimization M  China machine Press  201411  1-2  15 Qiu H Gu R Yuan C Distributed Processing  Symposium Workshops IPDPSW  2014 IEEE International IEEE  2014 1664-1671 16 Gunduz  G Y AFIM A Parallel Frequent Itemset Mining Algorithm with Spark[C  Parallel Agrawal  R  T Imielinski  and Lin M  Lee P I Ergenc   Comparison of two association rule mining algorithms without candidate generation  In 2nd ed  ed  Morgan Kaufinann  2006 3 Agrawal  R and R Srikant   Fast algorithms for mining association rules in large databases  In  Fokoue  E   UCI Machine Learning Repository  Irvine  CA University of California  School of Information and Computer Science  20 I 2  I Proceedings of the Proceedings of the 2000 ACM SIGMOD International Conference on Management of Data  Proceedings of the 24th lASTED International Conference on Database and Applications  Proceedings of the 70th lASTED International Conference on Artificial Intelligence and Applications  Shi Z   Parallel Implementation of Apriori Algorithm Based on MapReduce  In Proceedings of the 13 Swami   Mining association rules between sets of items in large databases  In Mining Concepts and Techniques N ACKNOWLEDGMENT Any comments and suggestions are welcome from the reviewers The authors will be thankful to them The authors would also be thankful to all those people who involved in carrying out this research work The authors are also thankful to the Department of Computer Science of Dr Babasaheb Ambedkar Marathwada University Aurangabaad for providing the infrastructure to carry out the research REFERENCES Proceedings of the 20th International Conference on Very Large Data Bases  SMART 2016 ISBN 978-1-5090-3543-4 Adaptive Apriori Algorithm for Frequent Itemset Mining  251 ACM SIGMOD International Conference on Management of Data  et al  A 7993 B  SIGMOD 00  New York  NY  USA 2000  pp  112  5 Pavon  J  S Vi ana  and S Gomez   Matrix Apriori Speeding up the search for frequent patterns  In SIGMOD  93  2010  pp  450-457  ACM  Copyright Hsueh S   Apriori-based Frequent Itemset Mining Algorithms on MapReduce  Proc  of the 16th International Conference on Ubiquitous Information Management and Communication ICUlMC 12  New York  NY  USA  ACM  Article No  76  20 I 2  12 Li N  Zeng L  He Q 


    Fig. 8. Comparative Analysis Classification Algorithms V  CONCLUSION Associative Classification techniques are used to make better decision in critical situations. The proposed associative classification called as Classification of microarray gene expression data using associative classification and gene expression intervals used to clas sify the gene expression with gene intervals in affected gene expression. The experimental results are carried out by using the gene expression of breast cancer. The associative classification on gene expression data obtained the best prediction and accuracy of the classification result. The proposed algorithm was tested with two class and multi class data sets. The classification algorithm was compared with the classical classification algorithms such as Linear Discriminant Analysis, SVM, and Decision Tree. After the comparison of traditional classification algorithms, as per the view of possible error rates the Associative Classification algorithm is best for biological data. The results of this work are used to drug designer for cancer diseases. The proposed algorithm works on gene expression data. In future, it will be implemented on hadoop and big data mining for biological data VI  R EFERENCES  1   Morgan Kaufmann Publishers Elsevier 2002 2   Second Edition PicasetOy Helsinki, 2005 3  Nagata, K., Washio, T., Kawahara, Y. and Unami, A  prediction from toxicogenomic data based on class association rule  ELSEVIER journal Toxicology Reports, vol.41, no.10 pp. 1133-1142, 2014 4  Garcia, S., Luengo, J., Sáez, J. A., López, V. and Herrera, F survey of discretization techniques: Taxonomy and empirical  Knowledge and Data Engineering, IEEE Transactions vol. 25, no.4, pp.734-750, 2013 5  Alves,R., Rodriguez.B.D.S and Aguilar. R.J.S  analysis: a survey of frequent pattern mining from gene expression  Briefings in Bioinformatics 2009, vol.2, no.2, pp.210-224 6   Miner: Maximal Confident Association Rules Miner Algorithm for Up/Down Applied Mathematics and Information Sciences vol.8 no.2, pp.799-809, 2014 7    BMC Bioinformatics vol.19, no.1, pp.7986, 2003 8  Snousy, A. M. B., El-Deeb, H. M., Badran, K. and Al Khlil, I. A  based classification algorithms on cancer  Egyptian Informatics Journal vol.12 no.2 pp.73-82. 2011 9  Refaeilzadeh, P., Tang, L. and Liu, H   Encyclopedia of database systems, Springer US pp. 532-538 2009   R. Agrawal and R. Srikant, Fast Algorithms for Mining Association Rules Proceedings of the 20th Int. Conf. on Very Large Data Bases VLDB94\,475486, Santiago de Chile, Chile 1994   Alagukumar, S., and Lawrance R., "A Selective Analysis of Microarray Data Using Association Rule Mining Procedia Computer Science Vol.47, pp.3-12, 2015 doi:10.1016/j.procs.2015.03.177   Alagukumar  Cancer Data Analysis Using Frequent Pattern Mining and Gene  International Journal of Computer Applications ISSN 0975 8887, no.1, pp.9-14, June 2015   Pasquier, N., Bastide, Y., Taouil, R., & Lakhal, L Pruning closed itemset lattices for association rules  In BDA'1998 international conference on Advanced Databases pp. 177-196. 1998   Giugno R, Pulvirenti A, Cascione L, Pigola G, Ferro A MIDClass: Microarray Data Classification by Association Rules and Gene Expression Intervals. Tang H, ed. PLoS ONE 2013;8\(8\:e69873. doi:10.1371/journal.pone.0069873   http://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE1379   Wang, Zuncai, et al. "The prognostic biomarkers HOXB13 IL17BR, and CHDH are regulated by estrogen in breast cancer Clinical Cancer Research 13.21 pp. 6327-6334, 2005    cancer progression and host polymorphisms in the chemokine system: role of the macrophage chemoattractant protein-1 \(mcp 2518 g allele Clinical Chemistry 51: 452 5.2005   Dash, Rajashree, Rajib Lochan Paramguru, and Rasmita Dash Comparative analysis of supervised and unsupervised discretization techniques." International Journal of Advances in Science and Technology 2.3 \(2011\: 29-37   0 10 20 30 40 50 60 70 80 90 100 LDA SVM Decision Tree CACGE Accuracy and Error rate Classification Algorithms Accuracy Error Rate 


on items contained in each item group When the number of pivots increases the entire database is split into a ner granularity and the number of partitions increase correspondingly Such a ne granularity leads to a reduction in distance computation among transactions On the other hand when the pivot number k continues growing the number of transactions mapped into one hash bucket signiÞcantly increases thereby leading to a large candidate-object set and high shufßing cost see Figs 3b and 3c Consequently the overall execution time is optimized when k is 60 for both algorithms see Fig 3a 6.2 Minimum Support Recall that minimum support plays an important role in mining frequent itemsets We increase minimum support thresholds from 0.0005 to 0.0025 percent with an increment of 0.0005 percent to evaluate the impact of minimum support on FiDoop-DP The other parameters are the same as those for the previous experiments Fig 4a shows that the execution times of FiDoop-DP and Pfp decrease when the minimum support is increasing Intuitively a small minimum support leads to an increasing number of frequent 1-itemsets and transactions which have to be scanned and transmitted Table 2 illustrates the size of frequent 1-itemsets stored in FList and the number of nal output records of the two parallel solutions under various minimum-support values Fig 4a reveals that regardless of the minimum-support value FiDoop-DP is superior to Pfp in terms of running time Two reasons make this performance trend expected First FiDoop-DP optimizes the partitioning process by placing transactions with a high similarity into one group rather than randomly and evenly grouping the transaction Fig 4b conÞrms that FiDoop-DPÕs shufßing cost is signiÞcantly lower than that of Pfp thanks to optimal data partitions offered by FiDoop-DP Second this grouping strategy in FiDoop-DP minimizes the number of transactions for each GList under the premise of data completeness which leads to reducing mining load for each Reducer The grouping strategy of FiDoop-DP introduces computing overhead including signature-matrix calculation and hashing each band into a bucket Nevertheless such small overhead is offset by the performance gains in the shufßing and reduce phases Fig 4a also shows that the performance improvement of FiDoop-DP over Pfp is widened when the minimum support increases This performance gap between FiDoop-DP and Pfp is reasonable because pushing minimum support up in FiDoop-DP lters out an increased number of frequent 1-itemsets which in turn shortens the transaction partitioning cost Small transactions simplify the correlation analysis among the transactions thus small transactions are less likely to have a large number of duplications in their partitions As a result the number of duplicated transactions to be transmitted among the partitions is signiÞcantly reduced which allows FiDoop-DP to deliver better performance than Pfp 6.3 Data Characteristic In this group of experiments we respectively evaluate the impact of dimensionality and data correlation on the performance of FiDoop-DP and Pfp by changing the parameters in the process of generating the datasets using the IBM Quest Market-Basket Synthetic Data Generator 6.3.1 Dimensionality The average transaction length directly determines the dimensions of a test data We conÞgure the average transaction length to 10 40 60 and 85 to generate T10I4D 130 blocks T40I10D 128 blocks T60I10D 135 blocks T85I10D 133 blocks datasets respectively In this experiment we measure the impacts of dimensions on the performance of FiDoop-DP and Pfp on the 8-node Hadoop cluster The experimental results plotted in Fig 5a clearly indicate that an increasing number of dimensions signiÞcantly raises the running times of FiDoop-DP and Pfp This is because increasing the number of dimensions increases the number of groups thus the amount of data transmission sharply goes up as seen in Fig 5b The performance improvements of FiDoop-DP over Pfp is diminishing when the dimensionality increases from 10 to 85 For example FiDoop-DP offers an improvement of 29.4 percent when the dimensionality is set to 10 the improvement drops to 5.2 percent when the number of dimensions becomes 85 In what follows we argue that FiDoop-DP is inherently losing the power of reducing the number of redundant transactions in high-dimensional data When a dataset has a low dimensionality FiDoop-DP tends to build partitions Fig 4 Impact of minimum support on FiDoop-DP and Pfp TABLE 2 The Size of FList and the Number of Final Output Records Under Various Minimum-Support Values minsupport 0.0005 0.001 0.0015 0.002 0.0025 FList 14.69k 11.6k 9.71k 6.89k 5.51k OutRecords 745 588 465 348 278 XUN ET AL FIDOOP-DP DATA PARTITIONING IN FREQUENT ITEMSET MINING ON HADOOP CLUSTERS 109 


each of which has distinct characteristics compared with the other partitions Such distinct features among the partitions allow FiDoop-DP to efÞciently reduce the number of redundant transactions In contrast a dataset with high dimensionality has a long average transaction length therefore data partitions produced by FiDoop-DP have no distinct discrepancy Redundant transactions are likely to be formed for partitions that lack distinct characteristics Consequently the beneÞt offered by FiDoop-DP for highdimensional datasets becomes insigniÞcant 6.3.2 Data Correlation We set the correlation among transactions i.e corr to 0.15 0.25 0.35 0.45 0.55 0.65 and 0.75 to measure the impacts of data correlation on the performance of the two algorithms on the 8-node Hadoop cluster The Number of Pivots is set to 60 see also Section 6.1 The experimental results plotted in Fig 5c clearly indicate that FiDoop-DP is more sensitive to data correlation than Pfp This performance trend motivates us to investigate the correlation-related data partition strategy Pfp conducts default data partition based on equal-size item group without taking into account the characteristics of the datasets However FiDoop-DP judiciously groups items with high correlation into one group and clustering similar transactions together In this way the number of redundant transactions kept on multiple nodes is substantially reduced Consequently FiDoop-DP is conducive to cutting back both data transmission trafÞc and computing load As can be seen from Fig 5c there is an optimum balance point for data correlation degree to tune FiDoop-DP performance e.g 0.35 in Fig 5c If data correlation is too small Fidoop-DP will degenerate into random partition schema On the contrary it is difÞcult to divide items into relatively independent groups when data correlation is high meaning that an excessive number of duplicated transactions have to be transferred to multiple nodes Thus a high data correlation leads to redundant transactions formed for partitions thereby increasing network and computing loads 6.4 Speedup Now we are positioned to evaluate the speedup performance of FiDoop-DP and Pfp by increasing the number of data nodes in our Hadoop cluster from 4 to 24 The T40I10D 128 blocks dataset is applied to drive the speedup analysis of the these algorithms Fig 6 reveals the speedups of FiDoop-DP a nd Pfp as a function of the number of data nodes The experimental results illustrated in Fig 6a show that the speedups of FiDoop-DP and Pfp linearly scale up with the increasing number of data nodes Such a speedup trend can be attributed to the fact that increasing the number of data nodes under a xed input data size inevitably 1 reduces the amount of itemsets being handled by each node and 2 increases communication overhead among mappers and reducers Fig 6a shows that FiDoop-DP is better than Pfp in terms of the speedup efÞciency For instance the FiDoop-DP improves the speedup efÞciency of Pfp by up to 11.2 percent with an average of 6.1 percent This trend suggests FiDoopDP improves the speedup efÞciency of Pfp in large-scale The speedup efÞciencies drop when the Hadoop cluster scales up For example the speedup efÞciencies of FiDoopDP and Pfp on the 4-node cluster are 0.970 and 0.995 respectively These two speedup efÞciencies become 0.746 and 0.800 on the 24-node cluster Such a speedup-efÞciency trend is driven by the cost of shufßing intermediate results which sharply goes up when the number of data nodes scales up Although the overall computing capacity is improved by increasing the number of nodes the cost of synchronization and communication among data nodes tends to offset the gain in computing capacity For example the results plotted in Fig 6b conÞrm that the shufßing cost Fig 5 Impacts of data characteristics on FiDoop-DP and Pfp Fig 6 The speedup performance and shufßing cost of FiDoop-DP and Pfp 110 IEEE TRANSACTIONS ON PARALLEL AND DISTRIBUTED SYSTEMS VOL 28 NO 1 JANUARY 2017 


is linearly increasing when computing nodes are scaled from 4 to 24 Furthermore the shufßing cost of Pfp is larger than that of FiDoop-DP 6.5 Scalability In this group of experiments we evaluate the scalability of FiDoop-DP and Pfp when the size of input dataset dramatically grows Fig 7 shows the running times of the algorithms when we scale up the size of the T40I10D data series Figs 7a and 7b demonstrate the performance of FiDoop-DP processing various datasets on 8-node and 24-node clusters respectively Fig 7 clearly reveals that the overall execution times of FiDoop-DP and Pfp go up when the input data size is sharply enlarged The parallel mining process is slowed down by the excessive data amount that has to be scanned twice The increased dataset size leads to long scanning time Interestingly FiDoop-DP exhibits a better scalability than Pfp Recall that see also from Algorithm 1 the second MapReduce job compresses an initial transaction database into a signature matrix which is dealt by the subsequent process The compress ratio is high when the input data size is large thereby shortening the subsequent processing time Furthermore Fidoop-DP lowers the network trafÞc induced by the random grouping strategy in Pfp In summary the scalability of FiDoop-DP is higher than that of Pfp when it comes to parallel mining of an enormous amount of data 7R ELATED W ORK 7.1 Data Partitioning in MapReduce Partitioning in databases has been widely studied for both single system servers e.g and distributed storage systems e.g BigTable PNUTS[31 The existing approaches typically produce possible ranges or hash partitions which are then evaluated using heuristics and cost models These schemes offer limited support for OLTP workloads or query analysis in the context of the popular MapReduce programming model In this study we focus on the data partitioning issue in MapReduce High scalability is one of the most important design goals for MapReduce applications Unfortunately the partitioning techniques in existing MapReduce platforms e.g Hadoop are in their infancy leading to serious performance problems Recently a handful of data partitioning schemes have been proposed in the MapReduce platforms Xie et al  developed a data placement management mechanism for heterogeneous Hadoop clusters Their mechanism partitions data fragments to nodes in accordance to the nodes processing speed measured by computing ratios In addition Xie et al  designed a data redistribution algorithm in HDFS to address the data-skew issue imposed by dynamic data insertions and deletions CoHadoop is a H a d oop s lightweight extension which is designed to identify relateddataÞlesfollowedbyamodiÞeddataplacement policy to co-locate copies of those related les in the same server CoHadoop considers the relevance among les that is CoHadoop is an optimization of HaDoop for multiple les A key assumption of the MapReduce programming model is that mappers are completely independent of one another Vernica et al  broke such an assumption by introducing an asynchronous communication channel among mappers T his c hannel e nables the m appers to see global states managed in metadata Such situationaware mappers SAMs can enable MapReduce to exibly partition the inputs Apart from this adaptive sampling and partitioning were proposed to produce balanced partitions for the reducers by sampling mapper outputs and making use of obtained statistics Graph and hypergraph partitioning have been used to guide data partitioning in parallel computing Graph-based partitioning schemes capture data relationships For example Ke et al applied a graphic-execution-plan graph EPG to perform cost estimation and optimization by analyzing various properties of both data and computation Their estimation module coupled with the cost model estimate the runtime cost of each vertex in an EPG which represents the overall runtime cost a data partitioning plan is determined by a cost optimization module Liroz-Gistau et al proposed the MR-Part technique which partitions all input tuples producing the same intermediate key co-located in the same chunk Such a partitioning approach minimizes data transmission among mappers and reducers in the shufße phase The approach captures the relationships between input tuples and intermediate keys by monitoring the execution of representative workload Then based on these relationships their approach applies a min-cut k-way graph partitioning algorithm thereby partitioning and assigning the tuples to appropriate fragments by modeling the workload with a hyper graph In doing so subsequent MapReduce jobs take full advantage of data locality in the reduce phase Their partitioning strategy suffers from adverse initialization overhead Fig 7 The scalability of FiDoop-DP and Pfp when the size of input dataset increases XUN ET AL FIDOOP-DP DATA PARTITIONING IN FREQUENT ITEMSET MINING ON HADOOP CLUSTERS 111 


7.2 Application-Aware Data Partitioning Various efÞcient data partitioning strategies have been proposed to improve the performance of parallel computing systems For example Kirsten et al  developed two general partitioning strategies for generating entity match tasks to avoid memory bottlenecks and load imbalances Taking into account the characteristics of input data Aridhi et al proposed a novel density-based data partitioning technique for approximate large-scale frequent subgraph mining to balance computational load among a collection of machines Kotoulas et al built a data distribution mechanism based on clustering in elastic regions Traditional term-based partitioning has limited scalability due to the existence of very skewed frequency distributions among terms Load-balanced distributed clustering across networks and local clustering are introduced to improve the chance that triples with a same key are collocated These selforganizing approaches need no data analysis or upfront parameter adjustments in a priori Lu et al studied k nearest neighbor join using MapReduce in which a data partitioning approach was designed to reduce both shufßing and computational costs In LuÕs study objects are divided into partitions using a Voronoi diagram with carefully selected pivots Then data partitions i.e Voronoi cells are clustered into groups only if distances between them are restricted by a speciÞc bound In this way their approach can answer the k-nearest-neighbour join queries by simply checking object pairs within each group FIM for data-intensive applications over computing clusters has received a growing attention efÞcient data partitioning strategies have been proposed to improve the performance of parallel FIM algorithms A MapReducebased Apriori algorithm is designed to incorporate a new dynamic partitioning and distributing data method to improve mining performance This method divides input data into relatively small splits to provide exibility for improved load-balance performance Moreover the master node doesnÕt distribute all the data once rather the rest data are distributed based on dynamically changing workload and computing capability weight of each node Similarly Jumbo adopted a dynamic partition assignment technology enabling each task to process more than one partition Thus these partitions can be dynamically reassigned to different tasks to improve the load balancing performance of Pfp Uthayopas et al  investigated I/O and execution scheduling strategies to balance data processing load thereby enhancing the utilization of a multi-core cluster system supporting association-rule mining In order to pick a winning strategy in terms of data-blocks assignment Uthayopas et al incorporated three basic placement policies namely the round robin range and random placement Their approach ignores data characteristics during the course of mining association rules 8F URTHER D ISCUSSIONS In this study we investigated the data partitioning issues in parallel FIM We focused on MapReduce-based parallel FPtree algorithms in particular we studied how to partition and distribute a large dataset across data nodes of a Hadoop cluster to reduce network and computing loads We argue that the general idea of FiDoop-DP proposed in this study can be extended to other FIM algorithms like Apriori running on Hadoop clusters Apriori-based parallel FIM algorithms can be classiÞed into two camps namely count distribution and data distribution  For the count distribution camp each node in a cluster calculates local support counts of all candidate itemsets Then the global support counts of the candidates are computed by exchanging the local support counts For the data distribution camp each node only keeps the support counts of a subset of all candidates Each node is responsible for delivering its local database partition to all the other processors to compute support counts In general the data distribution schemes have higher communication overhead than the count distribution ones whereas the data distribution schemes have lower synchronization overhead than its competitor Regardless of the count distribution or data distribution approaches the communication and synchronization cost induce adverse impacts on the performance of parallel mining algorithms The basic idea of Fidoop-DPÑgrouping highly relevant transactions into a partition allows the parallel algorithms to exploit correlations among transactions in database to cut communication and synchronization overhead among Hadoop nodes 9C ONCLUSIONS A ND F UTURE W ORK To mitigate high communication and reduce computing cost in MapReduce-based FIM algorithms we developed FiDoop-DP which exploits correlation among transactions to partition a large dataset across data nodes in a Hadoop cluster FiDoop-DP is able to 1 partition transactions with high similarity together and 2 group highly correlated frequent items into a list One of the salient features of FiDoopDP lies in its capability of lowering network trafÞc and computing load through reducing the number of redundant transactions which are transmitted among Hadoop nodes FiDoop-DP applies the Voronoi diagram-based data partitioning technique to accomplish data partition in which LSH is incorporated to offer an analysis of correlation among transactions At the heart of FiDoop-DP is the second MapReduce job which 1 partitions a large database to form a complete dataset for item groups and 2 conducts FP-Growth processing in parallel on local partitions to generate all frequent patterns Our experimental results reveal that FiDoop-DP signiÞcantly improves the FIM performance of the existing Pfp solution by up to 31 percent with an average of 18 percent We introduced in this study a similarity metric to facilitate data-aware partitioning As a future research direction we will apply this metric to investigate advanced loadbalancing strategies on a heterogeneous Hadoop cluster In one of our earlier studies see for details we addressed the data-placement issue in heterogeneous Hadoop clusters where data are placed across nodes in a way that each node has a balanced data processing load Our data placement scheme can balance the amount of data stored in heterogeneous nodes to achieve improved data-processing performance Such a scheme implemented at the level of Hadoop distributed le system HDFS is unaware of correlations among application data To further improve load balancing 112 IEEE TRANSACTIONS ON PARALLEL AND DISTRIBUTED SYSTEMS VOL 28 NO 1 JANUARY 2017 


mechanisms implemented in HDFS we plan to integrate FiDoop-DP with a data-placement mechanism in HDFS on heterogeneous clusters In addition to performance issues energy efÞciency of parallel FIM systems will be an intriguing research direction A CKNOWLEDGMENTS The work in this paper was in part supported by the National Natural Science Foundation of P.R China No.61272263 No.61572343 Xiao QinÕs work was supported by the U.S National Science Foundation under Grants CCF-0845257 CAREER The authors would also like to thank Mojen Lau for proof-reading R EFERENCES  M J Zaki Parallel and distribu ted associat ion mining A survey IEEE Concurrency  vol 7 no 4 pp 14Ð25 Oct 1999  I Pramudiono and M Kitsuregawa  Fp-tax Tree structure based generalized association rule mining in Proc 9th ACM SIGMOD Workshop Res Issues Data Mining Knowl Discovery  2004 pp 60Ð63  J De an a n d S Gh e ma wa t M ap re du ce  S i mp l i e d da ta pr o ce s si n g on large clusters ACM Commun  vol 51 no 1 pp 107Ð113 2008  S Sakr A Liu and A G Fayoumi The family of mapred uce and large-scale data processing systems ACM Comput Surveys  vol 46 no 1 p 11 2013  M.-Y Lin P.-Y Lee and S.-C Hsueh Apriori-based frequent itemset mining algorithms on mapreduce in Proc 6th Int Conf Ubiquitous Inform Manag Commun  2012 pp 76:1Ð76:8  X Li n  Mr a pr io ri  As so ci a ti o n ru le s a lg o ri th m ba se d on mapreduce in Proc IEEE 5th Int Conf Softw Eng Serv Sci  2014 pp 141Ð144  L Zhou Z Zhong J Chang J Li J Huang and S Feng Balanced parallel FP-growth with mapreduce in Proc IEEE Youth Conf Inform Comput Telecommun  2010 pp 243Ð246  S Hong Z Huaxuan C Shiping and H Chunyan The study of improved FP-growth algorithm in mapreduce in Proc 1st Int Workshop Cloud Comput Inform Security  2013 pp 250Ð253  M Riondato  J A DeBrabant R Fonseca and E Upfal Parma A parallel randomized algorithm for approximate association rules mining in mapreduce in Proc 21st ACM Int Conf Informa Knowl Manag  2012 pp 85Ð94  C Lam Hadoop in Action  Greenwich USA Manning Publications Co 2010  H Li Y Wang D Zhang M Zhang and E Y Chang PFP Parallel FP-growth for query recommendation in Proc ACM Conf Recommender Syst  2008 pp 107Ð114  C Curino E Jones Y Zhang and S Madden Schism A workload-driven approach to database replication and partitioning Proc VLDB Endowment  vol 3 no 1-2 pp 48Ð57 2010  P Uthayop as and N Benjamas Impact of i/o and execution scheduling strategies on large scale parallel data mining J Next Generation Inform Technol  vol 5 no 1 p 78 2014  I  P r a m u d i o n o a n d M  K i t s u r e g a w a  P a r a l l e l F P g r o w t h o n P C cluster in Proc.Adv.Knowl.DiscoveryDataMining  2003 pp 467Ð473  Y Xun J Zhang and X Qin Fidoop Parallel mining of frequent itemsets using mapreduce IEEE Trans Syst Man Cybern Syst  vol 46 no 3 pp 313Ð325 Mar 2016 doi 10.1109 TSMC.2015.2437327  S Owen R Anil T Dunning and E Friedman Mahout Action  Greenwich USA Manning 2011  D Borthakur  Hdfs architecture guide HADOOP APACHE PROJECT Available  http://hadoop.apache.org/common/docs current/hdfs design.pdf 2008  M Zaharia M Chowdhury M J Franklin  S Shenker and I Stoica Spark Cluster computing with working sets in Proc 2nd USENIX Conf Hot Topics Cloud Comput  2010 p 10  W Lu Y Shen S Chen and B C Ooi EfÞcient proces sing of k nearest neighbor joins using mapreduce Proc VLDB Endowment  vol 5 no 10 pp 1016Ð1027 2012  T Kanung o D M Mount N S Netanya hu C D Piatko R Silverman and A Y Wu An efÞcient k-means clustering algorithm Analysis and implementation IEEE Trans Pattern Anal Mach Intell  vol 24 no 7 pp 881Ð892 Jul 2002  A K Jain Data clustering 50 years beyond k-means Pattern Recog Lett  vol 31 no 8 pp 651Ð666 2010  D Arthur and S Vassilvitskii  k-means  The advantages of careful seeding in Proc 18th Annu ACM-SIAM Symp Discr Algorithms  2007 pp 1027Ð1035  J Leskovec A Rajaraman and J D Ullman Mining Massive Datasets  Cambridge U.K Cambridge Univ Press 2014  A Stupar  S Mich el and R Schen kel Rankred uceÐpr ocessin g k-nearest neighbor queries on top of mapreduce in Proc 8th Workshop Large-Scale Distrib Syst Informa Retrieval  2010 pp 13Ð18  B Bahmani A Goel and R Shinde EfÞcient distributed locality sensitive hashing in Proc 21st ACM Int Conf Inform Knowl Manag  2012 pp 2174Ð2178  R Panigrahy Entropy based nearest neighbor search in high dimensions in Proc 17th Annu ACM-SIAM Symp Discr Algorithm  2006 pp 1186Ð1195  A Z Broder M Charikar  A M Frieze and M Mitzenma cher Min-wise independent permutations J Comput Syst Sci  vol 60 no 3 pp 630Ð659 2000  L Cristofor ARtool Association rule mining algorit hms and tools 2006  S Agrawal V Narasayya  and B Yang Integrating vertical and horizontal partitioning into automated physical database design in Proc ACM SIGMOD Int Conf Manag Data  2004 pp 359Ð370  F Chang J Dean S Ghema wat W Hsieh D Wallach  M  Burrows T Chandra A Fikes and R Gruber Bigtable A distributed structured data storage system in Proc 7th Symp Operating Syst Des Implementation  2006 pp 305Ð314  B F Cooper R Ramakrishn an U Srivastava A Silberstein P Bohannon H.-A Jacobsen N Puz D Weaver and R Yerneni Pnuts Yahoo!Õs hosted data serving platform Proc VLDB Endowment  vol 1 no 2 pp 1277Ð1288 2008  J Xie and X Qin The 19th heterogenei ty in computing workshop HCW 2010 in Proc IEEE Int Symp Parallel Distrib Process Workshops Phd Forum  Apr 2010 pp 1Ð5  M Y Eltabakh Y Tian F  Ozcan R Gemulla A Krettek and J McPherson Cohadoop Flexible data placement and its exploitation in hadoop Proc VLDB Endowment  vol 4 no 9 pp 575 585 2011  R Vernica A Balmin K S Beyer and V Ercegovac Adaptive mapreduce using situation-aware mappers in Proc 15th Int Conf Extending Database Technol  2012 pp 420Ð431  Q Ke V Prabhakar an Y Xie Y Yu J Wu and J Yang Optimizing data partitioning for data-parallel computing uS Patent App 13/325,049 Dec 13 2011  M Liroz-Gis tau R Akbarinia D Agrawal E Pacitti  and P Valduriez Data partitioning for minimizing transferred data in mapreduce in Proc 6th Int Conf Data Manag Cloud Grid P2P Syst  2013 pp 1Ð12  T Kirsten L Kolb M Hartung A Gro H K  opcke and E Rahm Data partitioning for parallel entity matching Proc VLDB Endowment  vol 3 no 2 pp 1Ð8 2010  S Kotoulas E Oren and F Van Harmelen Mind the data skew Distributed inferencing by speeddating in elastic regions in Proc 19th Int Conf World Wide Web  2010 pp 531Ð540  L Li and M Zhang The strategy of mining associat ion rule based on cloud computing in Proc Int Conf Bus Comput Global Inform  2011 pp 475Ð478  S Groot K Goda and M Kitsuregawa  Towards improv ed load balancing for data intensive distributed computing in Proc ACM Symp Appl Comput  2011 pp 139Ð146  M Z Ashra D Taniar and K Smith ODAM An optimiz ed distributed association rule mining algorithm IEEE Distrib Syst Online  vol 5 no 3 p 1 Mar 2004 Yaling Xun is currently a doctoral student at Taiyuan University of Science and Technology She is currently a lecturer in the School of Computer Science and Technology Taiyuan University of Science and Technology Her research interests include data mining and parallel computing XUN ET AL FIDOOP-DP DATA PARTITIONING IN FREQUENT ITEMSET MINING ON HADOOP CLUSTERS 113 


Jifu Zhang received the BS and MS degrees in computer science and technology from the Hefei University of Tchnology China and the PhD degree in pattern recognition and intelligence systems from the Beijing Institute of Technology in 1983 1989 and 2005 respectively He is currently a professor in the School of Computer Science and Technology TYUST His research interests include data mining parallel and distributed computing and artiÞcial intelligence Xiao Qin received the PhD degree in computer science from the University of Nebraska-Lincoln in 2004 He is currently a professor in the Department of Computer Science and Software Engineering Auburn University His research interests include parallel and distributed systems storage systems fault tolerance real-time systems and performance evaluation He received the U.S NSF Computing Processes and Artifacts Award and the NSF Computer System Research Award in 2007 and the NSF CAREER Award in 2009 He is a senior member of the IEEE Xujun Zhao received the MS degree in computer science and technology in 2005 from the Taiyuan University of Technology China He is currently working toward the PhD degree at Taiyuan University of Science and Technology His research interests include data mining and parallel computing  For more information on this or any other computing topic please visit our Digital Library at www.computer.org/publications/dlib 114 IEEE TRANSACTIONS ON PARALLEL AND DISTRIBUTED SYSTEMS VOL 28 NO 1 JANUARY 2017 


