The operation optimization based on correlation analysis of operation parameters in Power Plant  Jian-qiang Li 1,  Jun-jie Gu 1,  Cheng-lin Niu 1 2 1. North China Electric Power University Baoding 071003; 2. North China Electric Power University, Beijing 102206 E-mail lijianqiang6@163.com    Abstract  Accurate operation data is the foundation of system identification and system analysis. Based on the characteristic of operation parameters in power plant, the method of  data selection and data processing was discussed and the correlation analysis of operation parameters was introduced to operation optimization. The correlation coefficients were proposed to measure the related degree between operation parameters. The operation optimization values were determined by the results of correlation analysis and  data mining, which is the foundation of economical analysis and operation optimization. The optimal values of the excess air coefficient were obtained and provided to the operators online to guide the operation based on the results of the data analysis. The experiment results show that the boiler efficiency is improved greatly. The determination of the optimization value based on operation data by correlation analysis and data mining prov ides a novel and efficient method for operation optimization in power plant  1. Introduction  The operation optimization in power plant is a complex and important research field. The operation optimization values reflect th e reachable optimal running state of the unit, which provide the operator the optimal controllable parameters in certain load range. The machine and equipments in power plant are interacted closely and the relationships among them are revealed by the correlation of operation parameters [1,2 a sed o n th e historical operation parameters, the optimal values of the operating parameters are found by data analysis and data mining technique to guide the operation optimization in power plant. It reflects the actual optimal operating state and can be used to guide the optimal operation The proper data selection is very important for data analysis ccu rate operation param e ters is t h e  foundation of system analysis. The methods of data selection and data processing were discussed in detail to improved the efficiency of data analysis. The correlation coefficient of the operation parameters was proposed to measure the related degree between operation parameters and the association rule mining was introduced to find the association among the operation parameters. The optimal values were obtained and provided online to guide the optimal operation based on the results of the data analysis  2. Data selection and data processing  The operation parameters vary continually with time in power plant, which reflects the process of energy transformation and transmission in electricity industry When the load changes greatly and is far away from the stable state, the dynamic operation parameters cannot accurately reflect the actual state of the un  stable operation parameters should be selected to be analyzed and processed to obtain useful knowledge Generally the stable state is defined according to  the load in which the load and other related parameters is stable more than 5 minutes. As is  shown in Figure 1, state a is the stable state of 100% load and state b is the stable state of 80% load for a 300MW unit. State c is the dynamic process of 80% load  and the operation parameters should not be selected for analysis under 80% load  Figure 1. Curves of load and main steam pressure of a 300MW unit The running state is stable when the load is less than a certain threshold 002 in the given time period t d  t  h e calculation formula is as follows  __  2  t i itd NN 002   000  1 Where _ _ N is the average of the load  i N in the given time period 
2008 International Symposium on Computational Intelligence and Design 978-0-7695-3311-7/08 $25.00 © 2008 IEEE DOI 10.1109/ISCID.2008.182 138 
2008 International Symposium on Computational Intelligence and Design 978-0-7695-3311-7/08 $25.00 © 2008 IEEE DOI 10.1109/ISCID.2008.182 138 


The stable state parameters is selected and checked The bad data is detected and removed from the parameters based on data validation and data processing The correlation coefficients of the parameters are calculated to judge the related degree, which is the foundation of data mining. The potential associations can be found by data mining algorithm and applied to guide the operation optimization in power plant  3. Determination of correlation coefficients of operation parameters  The operation data in power plant is valuable for learning more about the running state and operation optimization. Based on the correlation analysis, the uncorrelated and weak correlation parameters can be eliminated from data analysis and data mining. The correlation analysis and the calculation of coefficient of operation parameters can be used to learning more about the operation data, which provides guidance for data analysis and data mining in power plant  3.1. Correlation between operation parameters  The data acquisition system monitors and collects thousands of operation parameters which reflect the actual running states in power plant. The combustion system water system, steam system and electric system interact with each other, which makes the correlation exists among many operation parameters. One kind of parameters is greatly associated with load, for example main steam pressure, main steam flow and excess air coefficient. The curves of load and main steam pressure are shown in Figure 1. Form Figure 1, we can conclude that the main steam pressure is strongly correlated with load. The other kind is less influenced by load, such as main steam temperature, furnace negative pressure, boiler drum water level etc. They are uncorrelated or weak correlated  3.2. Correlation among performance index and operation parameters  The operation parameters and performance index are correlated closely. Based on the historical data, the association relationship among operation parameters and performance index are obtained. In certain load and other related condition, the parameters corresponding to the optimal performance index are selected and provided to guide the operation online. The optimal parameters which were determined from historical data are attainable and reasonable in practice By analyzing the relationship between important parameters and performance index, some useful knowledge and association rules can be obtained, which can be used to guide the optimal operation. The scatter diagram of load and heat consumption of a 300MW unit is shown in Figure 2. The scatter diagram of flue gas temperature and coal consumption is shown in Figure 3 We can conclude that the heat consumption will decrease with the load and the coal consumption will increase with the flue gas temperature. The correlation among performance index and important parameters can be visualized to the operator by the scatter diagram. The scatter diagram is often used to show the correlation of operation data in data visualization methods  Figure 2. Scatter diagram of load and heat consumption of a 300MW unit  Figure 3. Scatter diagram of flue gas temperature and coal consumption of a 300MW unit   3.3. Calculation of correlation c oefficients of operation parameters  The correlation analysis is helpful to learn more about the related degree among operation parameters in power plant. The correlation coefficient among parameters can be calculated by operation parameters. So the uncorrelated and weak correlation parameters can be eliminated from the operation data during the procedure of data analysis and data processing in operation optimization The correlation degree of variables is often described by correlation coefficient [5 Fo r certain sa m p le f r o m t h e  operation parameters in power plant, the calculation formula of the correlation coefficients is described as follows __ __ 1 _ ___ 11   n ii i nn ii ii xxyy r xx yy      000 000¦\000 2  
139 
139 


Correlation coefficients range in value from -1 and +1 A value of -1 represents a perfect negative relationship and a value of +1 represents a perfect positive relationship A value of 0 indicates no linear relationship The correlation among operation parameters can be calculated by the formula of correlation coefficients and expressed by the correlation coefficient matrix. The process of correlation analysis and correlation coefficient calculation is described as follows 1\The stable state data is selected by formula \(1\The sample data set and the conditions correspondingly are constructed. The sample data set is 12 X         iiii m x y z condition c c c  3  where   1 2  ii i xy z i n  is the 000\003 i th records of the operation parameters and  1 2  j cj m  is the conditions correspondingly 2\The correlation coefficients are calculated by formula 2, and the correlation coefficients matrix is obtained. The correlation coeffi cient is used to estimate the related degree between operation parameters in power plant 3\ased on the results of correlation calculation, the correlation coefficients among operation parameters are obtained and verified, which is the foundation of data mining. The data visualization and theory analysis can be used to test and verify the results of correlation analysis  3.4. Result analysis of correlation c oefficients of operation parameters   The historical operation parameters of a 300MW unit are analyzed and the correlation coefficients are calculated. These parameters to be analyzed include load main steam temperature, main steam pressure, condenser vacuum, furnace negative pressure and excess air coefficient. The correlation coefficients between them are calculated to estimate the related degree by the correlation algorithm. The operation data set includes 4300 records The correlation analysis results are shown in Table 1  The correlation coefficients between operation parameters are represented by the result matrix. The correlation coefficients of operation parameters in this row with corresponding list are given in Table 1  The correlation coefficient between load and main steam pressure is 0.988    0.988 Correlation load main steam pressure   While the correlation coefficient between load and furnace negative pressure is -0.016    0.016 Correlation load furnace negative pressure   From the results in Table 1, we can conclude that the load is strong correlation with main steam pressure condenser vacuum and excess air coefficient. The load is uncorrelated or weak correlated with main steam temperature and furnace negative pressure The correlation analysis and the calculation of coefficient of operation parameters are helpful to estimate the related degree between operation parameters, which provides guidance for data mining in power plant Table 1. Correlation coefficients matrix the operation parameters   4. The determination of optimal excess air coefficient based on data correlation  Based on the correlation of operation data, the association rule mining is introduce to acquire the optimal value of important parameters. The operation optimization values are determined by the fuzzy quantitative association rule mining algorithm [4 h is  method can avoid the hard partition boundary in traditional quantitative association rule mining [4,6  The excess air coefficient is one of the most important factor for economical combustion of the boiler. An optimal value of excess air coefficient exists at a certain load range. The fuzzy association rule mining is introduced to obtain the optimal excess air coefficient based on correlation analysis and data mining. In a given load range, the excess air coefficient related to low coal consumption is chosen as optimization value to guide the operation. The optimal values obtained by data mining are listed in Table 2 Table 2. The comparison of designed value and optimal values of excess air coefficient Parameters Excess air coefficient Design value Optimal value 210MW 1.450 1.460 270MW 1.354 1.344 300MW 1.328 1.273 The optimal curve of excess air coefficient can be obtained by regression analysis of the optimal values determined by data mining. The regression equation between load and optimal excess air coefficient is established. The optimal excess air coefficient in certain load and corresponding operation conditions can be calculated by the following formula 2 1.589 0.0004 0.000004839 yxx   4 Where x is load y is the optimal excess air coefficient 
140 
140 


The optimal value of excess air coefficient can be calculated and provided to optimize the operation. The excess air coefficient is optimized based on the results of data mining. The boiler efficiency improved greatly and the coal consumption reduced. The actual curves between load and coal consumption rate are shown in Figure 4 The optimal values by data analysis and data mining are from actual operation data, which can reflect the reachable optimal status under a certain load and corresponding conditions. Data analysis and data mining provide a new method to improve the performance and efficiency in electricity industry processes  Figure 4. Curves between load and coal consumption rate in different load range  5. Conclusion  Large amount of operation data is accumulated in power plant and abundant knowledge exists in those data which can be used to guide the operation optimization Based on the characteristic of operation parameters, the method of data selection and data processing was discussed. The correlation coefficient was proposed to measure the related degree between operation parameters in power pant. The operation optimization values were determined by the results of correlation analysis and  data mining, which was provided to guide the economical analysis and operation optimization. The optimal excess air coefficient were obtained and provided to the operators online to guide the operation based on the results of the data analysis. The experiment results show that the boiler efficiency is improved greatly. The determination of the optimization value based on operation data by correlation analysis and data mining provides a novel and efficient method for operation optimization in power plant References  1  T o n y O gi l vi e  B W H ogg  U se o f D a t a M i ni n g  Techniques in the Performance Monitoring and Optimization of a Thermal Power Plant IEEE Colloquium on Knowledge Discovery and Data Mining  1998, pp.1-4  2  J i a ng ha o  X u Z h i g a o   D SS Sc he me  fo r O p e r a t i o n Optimization Problem on Power Plants Journal of Southeast University 2002, Vol.18\(3\p.212-215   W a n g X Z  A uto m atic clas s i f i ca tion f o r m i n i ng process operational data Ind. Eng. Chem. Res 1998 Vol 37, pp.2215-2222  4 J i a n q i a ng Li  J i z he n Li u T he r e se a r c h a n d a p p l i c a tion of data Mining in power plant operation optimization International Conference on Machine Learning and Cybernetics Guangzhou, 2005, Vol.3, pp.1642-1647   h en g  Zh ou X i e Sh i q i a n an d Pan C h e ngy i   Probability and symbolic Statistic Higher Education Press, Beijing, 1989  6 an t R A g ra w a l R M i n i n g q u a n tita tiv e  association rules in large relational tables The 1996 ACM SIGMOD International Conference on Management of Data Canada, 1996, pp.1-12  Project Supported by Doctor Degree Teacher Foundation of North China Electric Powe r University Grant No. 93102701  
141 
141 


1191                                                                                                                                                    


1192                                                                                                                             


 Kluwer Academic Publishers Springer, New York 1st edition, 2001 14  S c h e f f e r   T   F i n d i n g  A s s o c i a t i o n  Ru l e s  t h a t  T r a de Support Optimally Against Confidence th The Elements of Statistical Learning self_care_guide/Urogenital/Postate%20Cancer.pdf  Accessed, 25 August, 2008 11  A g r a w a l   R  T   I m i e l i n s k i     A   S w a m i   M i n i n g  association rules between sets of items in large databases, In Proceedings of the 1993 ACM SIGMOD international conference on Management of data  The Netherlands 42 2001 61-95  Ordonez C Association rule discovery with the train and test approach for heart disease predictio n 207\226 216 12 001 13  H a s t i e   T    R  T i b s h i r a n i     J  H   F r i e d m a n   Proceedings of the 5th European Conference on Principles and Practice of Knowlege Discovery in Databases\(PKDD'01 IEEE Transactions on Information Technology in Biomedicine, 10\(2\, 2006. 334 \226 343 001 Freiburg, Germany : SpringerVerlag, 2001. 424-435 15  F l a c h   P  A     L a c h i c h e   N   Co n f i r m a t i o n g u i d e d  discovery of first-order rules with Tertius 10  P h a r m a c y   h t t p    w w w  p h a r m a c y  g o v  m y    


 7. Conclusions  In this paper we have proposed an intelligent and efficient technique to reassess the distances between dynamic XML documents when one or all of the initially clustered documents have changed. After the changes, the initial clustering solution might become obsolete - the distances between clustered XML documents might have changed more or less depending on the degree of modifications \(insert update, delete\hich have been applied. Re-running full pair-wise comparisons on the entire set of modified documents is not a viable option, because of the large number of redundant operations involved Our proposed technique allows the user to reassess the pair-wise XML document distances, not by fully comparing each new pair of versions in the clustering solution, but by determining the effect of the temporal changes on the previously known distances between them. This approach is both time and I/O effective, as the number of operations involved in distance reassessing is greatly reduced  References  1  Beringer, J. and H\374llermeier, E., Online clustering of parallel data streams Data and Knowledge Engineering 58\(2\,  2006, 180-204 2  Catania, B. and Maddalena A., A Clustering Approach for XML Linked Documents, Proceedings of the 13th International Workshop on Database and Expert Systems Applications \(DEXA\22202\, IEEE 2002 3  Chen, M.S., Han, J. and Yu, P., Data Mining: An Overview from Database Perspective, IEEE Transactions on Knowledge and Data Engineering vol. 8, 1996, 866-883 4  Cormen, T., Leiserson, C. and Rivest, R Introduction to algorithms, MIT Press, 1990 5  Costa, G., Manco, G., Ortale, R. and Tagarelli, A., A tree-based Approach to Clustering XML documents by Structure, PAKDD 2004, LNAI 3202, 137-148 Springer 2004 6  Dalamagas, T., Cheng, T., Winkel, K.J. and Sellis, T 2004, Clustering XML documents by Structure SETN 2004, LNAI 3025, 112-121, Springer 2004 7  Ester, M., Kriegel, H.P., Sander, J., Wimmer,M. and Xu, X., Incremental Clustering for Mining in a Data Warehousing Environment, Proc.of the 24 th VLDB Conference, New York, USA, 1998 8  Garofalakis, M., Rastogi, R., Seshadri, S. And Shim K., Data Mining and the Web: Past, Present and Future Proceedings of WIDM 99 Kansas, US, ACM 1999 9  Mignet, L., Barbosa, D. and Veltri, P., The XML web : a first study, In Proceedings of the 12 th  International Conference on WWW, 500-510 2003   Nayak, R., Xu, S., XCLS: A Fast and Effective Clustering Algorithm for Heterogeneous XML Documents, In Proceedings of the 10 th Pacific-Asia Conference on Advances in Knowledge Discovery and Data Mining, Singapore, LNCS 3918, 2006   Rusu, L.I., Rahayu, W. and Taniar, D., A methodology for Building XML Data Warehouses International Journal of Data warehousing Mining, 1\(2 67-92, 2005   Rusu, L.I., Rahayu, W. and Taniar D.,  Maintaining Versions of Dynamic XML Documents, In Proceedings of the 6th International Conference on Web Information Systems Engineering, New York NY, USA, November 20-22, 2005, LNCS 3806   Rusu, L.I., Rahayu, W. and Taniar, D., Warehousing Dynamic XML Documents, In Proceedings of the 8 th  International Conference on Data Warehousing and Knowledge Discovery \(DaWaK 2006 LNCS 4081 Springer, 175-184, 2006   Shen, Y. and Wang, B., Clustering Schemaless XML documents, CoopIS / DOA/ODBASE 2003, LNCS 2888, 767-784, Springer 2003   Yoon, J. P., Raghavan, V., Chakilam, V., and Kerschberg, L., BitCube: A Three-Dimensional Bitmap Indexing for XML Documents J. Intel. Inf Syst 17, 2-3 \(Dec. 2001\, 241-254   XML data repository, online at http www.cs.washington.edu / research / projects / xmltk xmldata  
456 
456 


5 Related Work There exists extensive previous work on both the mining of software repositories and on the use of clustering algorithms in software engineering This discussion focuses on the most similar and recent work in the area of software evolution Mining Software Repositories Our technique was partially inspired by the work of Zimmermann et al and Y ing et al 17 on the mining of association rules in change history As described in Section 1 we sought to expand the technique to be able to recommend larger but less precise clusters of elements to guide program navigation Bouktif et al also investigated how to recommend cochanges in software development As opposed to the work cited above Bouktif et al used change patterns instead of association rules Also their approach does not attempt to reconstruct transactions and can consider associated 002les that were changed in different transactions ChangeDistiller is a tool to classify changes in a transaction into 002ne-grained operations e.g addition of a method declaration and determines how strongly the change impacts other source code entities Our approach uses similar repository analysis techniques but is focused on providing task-related information as opposed to an overall assessment of a system's evolution Finally repository mining can also be used to detect aspects in the code In this conte xt aspects are recurring sets of changed elements that exhibit a regular structure Aspects differ from the clusters we detect in the regular structure they exhibit which may not necessarily align with the code that is investigated as part of change tasks Clustering Analysis The classical application of clustering for reverse engineering involves grouping software entities based on an analysis of various relations between pairs of entities of a given version of the system Despite its long and rich history  e xperimentation with this approach continues to this day For example Andreopoulos et al combined static and dynamic information K uhn et al used a te xtual similarity measure as the clustering relation and Christl et al used clustering to assist iterative semi-automated reverse engineering The main dif ferences b e tween most clusteringbased reverse engineering techniques and the subject of our investigation is that the entities we cluster are transactions rather than software entities in a single version of a system For this reason our analysis is based strictly on the evolving parts of the system Both Kothari et al and V an ya et al 15 recently reported on their use of clustering to study the evolution of software systems The idea of using change clusters is the same in both works and ours but the purpose of the work is different Kothari et al use change clusters to uncover the types of changes that happened e.g feature addition maintenance etc during the history of a software system Vanya et al use change clusters which they call evolutionary clusters to guide the partitioning of a system that would increase the likelihood that the parts of the system would evolve independently In contrast we cluster transactions based on overlapping elements not 002les to recommend clusters to support program navigation as opposed to architectural-level assessment of the system Finally Hassan and Holt evaluated on 002ve open source systems the performance of several methods to indicate elements that should be modi\002ed together This study found that using historical co-change information as opposed to using simple static analysis or code layout offered the best results in terms of recall and precision The authors then tried to improve the results using 002ltering heuristics and found that keeping only the most frequently cochanged entities yielded the best results As opposed to our approach the evaluated 002ltering heuristics were only applied on entities recovered using association rules and not using clustering techniques The focus of their study was also more speci\002c as they recommend program elements that were strictly changed  as opposed to recommending elements that might be inspected by developers 6 Conclusion Developers often need to discover code that has been navigated in the past We investigated to what extent we can bene\002t from change clusters to guide program navigation We de\002ned change clusters as groups of elements that were part of transactions or change sets that had elements in common Our analysis of close to 12 years of software change data for a total of seven different open-source systems revealed that less than 12 of the changes we studied could have bene\002ted from change clusters We conclude that further efforts should thus focus on maximizing the quality of the match between the current task and past transactions rather than 002nding many potential matches Our study has already helped us in this goal by providing reliable evidence of the effectiveness of some 002ltering heuristics and useful insights for the development of additional heuristics Acknowledgments The authors thank Emily Hill and Jos  e Correa for their advice on the statistical tests and the anonymous reviewers for their helpful suggestions This work was supported by NSERC 
25 
25 
25 
25 
25 


References  B Andreopoulos A An V  Tzerpos and X W ang Multiple layer clustering of large software systems In Proc 12th Working Conf on Reverse Engineering  pages 7988 2005  S Bouktif Y G Gu  eh  eneuc and G Antoniol Extracting change-patterns from cvs repositories In Proc 13th Working Conf on Reverse Engineering  pages 221230 2006  S Breu and T  Zimmermann Mining aspects from v ersion history In Proc 21st IEEE/ACM Int'l Conf on Automated Software Engineering  pages 221230 2006  A Christl R K oschk e and M.-A Store y  Equipping the re\003exion method with automated clustering In Proc 12th Working Conf on Reverse Engineering  pages 8998 2005  D 020 Cubrani  c G C Murphy J Singer and K S Booth Hipikat A project memory for software development IEEE Transactions on Software Engineering  31\(6 465 2005  B Fluri and H C Gall Classifyi ng change types for qualifying change couplings In Proc 14th IEEE Int'l Conf on Program Comprehension  pages 3545 2006  A E Hassan and R C Holt Replaying de v elopment history to assess the effectiveness of change propagation tools Empirical Software Engineering  11\(3 2006  D H Hutchens and V  R Basili System s tructure analysis Clustering with data bindings IEEE Transactions on Software Engineering  11\(8 1985  D Janzen and K De V older Na vig ating and querying code without getting lost In Proc 2nd Int'l Conf on AspectOriented Software Development  pages 178187 2003  J K ot hari T  Denton A Shok ouf andeh S Mancoridis and A E Hassan Studying the evolution of software systems using change clusters In Proc 14th IEEE Int'l Conf on Program Comprehension  pages 4655 2006  A K uhn S Ducasse and T  G  021rba Enriching reverse engineering with semantic clustering In Proc 12th Working Conf on Reverse Engineering  pages 133142 2005  M P  Robillard T opology analysis of softw are dependencies ACM Transactions on Software Engineering and Methodology  2008 To appear  M P  Robillard and P  Mangg ala Reusing program in v estigation knowledge for code understanding In Proc 16th IEEE Int'l Conf on Program Comprehension  pages 202 211 2008  J Sillito G Murph y  and K De V older Questions programmers ask during software evolution tasks In Proc 14th ACM SIGSOFT Int'l Symposium on the Foundations of Software Engineering  pages 2334 2006  A V an ya L Ho\003and S Klusener  P  v an de Laar and H van Vliet Assessing software archives with evolutionary clusters In Proc 16th IEEE Int'l Conf on Program Comprehension  pages 192201 2008  N W ilde and M C Scully  Softw are reconnaissance Mapping program features to code Software Maintenance Research and Practice  7:4962 1995  A T  Y ing G C Murph y  R Ng and M C Chu-Carroll Predicting source code changes by mining change history IEEE Transactions on Software Engineering  30\(9 586 2004  A Zeller  The future of programming en vironments Integration synergy and assistance In Proceedings of the 29th International Conference on Software Engineering The Future of Software Engineering  pages 316325 2007  T  Zimmermann and P  W eißgerber  Preprocessing C VS data for 002ne-grained analysis In Proc 1st Int'l Workshop on Mining Software Repositories  pages 26 May 2004  T  Zimmermann P  W eißgerber  S Diehl and A Zeller  Mining version histories to guide software changes In Proc 26th ACM/IEEE Int'l Conf on Software Engineering  pages 563572 2004 A Clustering Algorithm This algorithm is not sensitive to whether a given program element exists or not in a given version of a program For example if method m exists in one version it is considered a valid program element even if it is removed in a later version In the rest of this section we use the term program element to refer to the uniquely identifying representation of the element e.g a Java fully-quali\002ed name Let T be a transaction modeled as a set of program elements changed together during the history of a software system Let T be a sequence of transactions In this algorithm a cluster is also modeled as a set of elements 1 Input  T  A sequence of transactions 2 Parameter  M IN O VERLAP  A positive non-zero value indicating the minimum overlap between two transactions in a cluster 3 Var  C  A set of clusters initially empty 4 for all T i 2 T do 5 MaxOverlap  0 6 MaxIndex  000 1 7 for all C j 2 C do 8 if j C j  T i j  MaxOverlap then 9 MaxOverlap  j C j  T i j 10 MaxIndex  j 11 end if 12 end for 13 if MaxIndex   0  MaxOverlap 025 M IN O VERLAP  then 14 C MaxIndex   C MaxIndex  T i  15 else 16 NewCluster  T i 17 C  C  f NewCluster g 18 end if 19 end for 20 return C B Systems Analyzed System home pages last veri\002ed 7 May 2008 Ant ant.apache.org Azureus azureus.sourceforge.net Hibernate www.hibernate.org JDT-Core www.eclipse.org/jdt/core JDT-UI www.eclipse.org/jdt/ui Spring springframework.org Xerces xerces.apache.org 
26 
26 
26 
26 
26 


