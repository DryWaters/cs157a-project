A Spatial Data Mining Method for Mineral Resources Potential Assessment Binbin He 1  Ying Cui 2  Jianhua Chen 3 Pingjing Xie 4 Institute of Geo-Spatial Information Science and Technology University of Electronic Sci ence and Technology of China Chengdu 611731, China 1 binbinhe@uestc.edu.cn 2 452672784@qq.com 3 442720061@qq.com 4 413733264@qq.com Abstract  On the basis of multi-source geology spatial database and traditional spatial data mining, a spatial data mining method 
for mineral resources potential assessment was proposed in this paper, which the spatial ch aracteristics and uncertainty of geology data were reasonable to consider. The method mainly include continuous geological spatial data discretization, spatial relationship abstracting and attribute transforming, mining metallogenic association rules and quality assessment comprehensive evaluation of metallogenic association rules and potential assessment Finally, the experiment of mineral potential assessment for iron deposits was performed in Eastern Kunlun Qinghai province, China, using spatial data mining method and weights-of-evidence model, respectively The results indicate that the prediction accuracy of spatial data mining was obvious higher than weights-of-evidence modelês, the method is suitable for mineral resources potential assessmen t and its effectiveness is good 
Keywords  spatial data mining; mineral resources potential assessment; uncertainty; association rules; eastern Kunlun I I NTRODUCTION Spatial data mining SDM refers to extracting and miningé the hidden, implicit, valid, novel and interesting spatial or non-spatial patterns or rules from large-amount incomplete, noisy, fuzzy random, and practical spatial databases  At present, SD M mainly concentrated on the efficiency of mining algorithm itself   im portant issueÖapplication in SDMÖhave not been paid much attention Geological data are typical spatial data, which include geological, geophysical, geochem ical, and remote sensing 
data. Mineral prospectivity an alysis and quantitative resource assessment have been recognized as important when integrating multi-source geol ogical spatial data in recent years  The statis tical and m a them atical approaches developed recently for multi-resources geological spatial data integration include weights-of -evidence modelling   logistic regression model [10  e fu zzy log ic m o d e l  work s model  and t h e frac tal me have bee n a p plied in t h e asses sm ent of m i neral resources potential These methods promote the effectiveness of mineral resource prospecting. However, under the shortage of mineral resources and the leap cost of prospecting and 
exploring, how to make full use of the existing multi-sources geo-spatial data to find deep mining information through massive uncertain multi-source ge ology spatial database and establish a rapid efficien t intelligent method of mineral prediction to reduce the cost of mineral exploration and improve the efficiency and accu racy of mineral prediction is particularly important and urgent. These traditional statistical mathematical approaches and GI S spatial analysis technology is lack of intelligence and reasoning mechanism. In this paper a spatial data mining method for mineral resources potential assessment was proposed II T HE S PATIAL 
D ATA MINING F RAMEWORK FOR MINERAL RESOURCES POTENTIAL ASSESSMENT The spatial data mining method for mineral resources potential assessment mainly include continuous geological spatial data discretization, spatial relationship abstracting and attribute transforming, mini ng metallogenic association rules and quality assessment, compreh ensive evaluation of association rules and mineral potential mapping \(Fig.1 Firstly, the best ore-controllin g variable and threshold were determined using proximity analysis of the weights-ofevidence model. On the basis of a correlation analysis among evidence variables, th 
e authors selected vector ore-controlling data of stratum, unconformity, fau lt, regional geochemical data, remote-sensing mine ralization information, bouguer gravity data, aeromagnetic data and mineral occurrence for this experiment. Secondly, th e cloud model was used to execute the uncertainty tran slation between continuous geology data and discrete geology data Meanwhile, on the basis of apriori algorithm, the metallogenic association rules were abstracted and six uncertainty indexes-confidence support, lift, coverage, leverage and interesting-were adopted to assess the quality of metallogenic association rules III Q UALITY ASSESSMENT INDEXES AND COMPREHENSIVE 
A SSESSMENT On the basis of Apriori association rules mining algorithm proposed by Agrawal et al.[17 18 e six q u a lity assessmen t inde  20 confide nce  s u pport lift c ove ra ge leve r a ge and interesting were adopted A Coverage The coverage of an association rule is the proportion of case data that have the attribu te values or items specified on the Left Hand Side\(LHS\the rule ___________________________________ 978-14244-83 51-8  1 1 26.00 ©201 1 IEEE  


      LHS P N LHS n Coverage   1 Where N is the total number of cases under consideration Coverage takes values in  1  0   if 1  Coverage then the rule is considered as an important association rule B Support The support of an association rule is a proportion of all cases in data set that satisfy a rule  N RHS LHS n Support      2 where LHS refers to Left Hand Side of the rule, RHS refers to Right Hand Side of the rule Support corresponds to the statistical significance of the rule A high support of the rule is an indication that a high number of tuples contains both LHS and RHS of this rule, i.e., th e rule is representative of the considered data C Confidence The confidence of an association rule is a proportion of the cases covered by the LHS of the rule that are also covered by the RHS       LHS n LHS RHS n Confidence   3 where n LHS denotes the number of cases covered by LHS corresponds to the strength of a rule. It takes values in the interval  1  0  if 1  Confidence The rule is considered as most important D Lift Lift is a measure of the impo rtance of the association    RC P Confidence Lift  4 If 1  Lift then RHS and LHS are independent, which indicates that the rule is not important If   Lift it has the following sub-case If RP RC  or RC RP  then the rule is not important If 0    RC P then the rule is not important If 1     RP RC P the rule is interesting If 0  Lift means that 0   0        RP RC P RP RC P  which indicates that the rule is not important E Leverage           RP P RC P RP RC P Leverage   5 Leverage takes values in  1 1    if 0 012 Leverage then there is a strong independence between RHS and LHS if 1  Leverage which indicates that th e rule is important F g Interestin Gray and Orlowska\(1998\sed the term interesting to evaluate the strength of associations between sets of items in association rules. Interestingness contains a discriminator component to express an independent indication of the antecedent \(X consequent \(Y\Interesting is given by  m K Y P X P Y P X P Y X P I       1               6 where   Y X P  is a çconfidence     Y P X P  is a support        Y P X P Y X P   is a discrimination and k and m are two parameters to we ight the relative importance of the discrimination and support components. The rules with higher values of interestingness are considered more interesting Furthermore, the corresponding weight s of six quality assessment indexes were calcul ated by analytic hierarchy process AHP\ethod. According to the standardized six quality assessment indexes and item numbers of metallogenic association rules, the comp rehensive assessment is as follows AHPcon  Confidence  AHPsup  Support  AHPlev  Leverage  AHPcov  Coverage  AHPlift  Lift  AHPint  g Interestin  XiangShu  K 7 According to the comprehe nsive assessment index K, we can perform the mineral resources potential assessment in study area IV E XPERIMENTS The experiment of mine ral potential assessment for iron deposits was performed in Eastern Kunlun, Qinghai province China, using spatial data mi ning method and weights-ofevidence model, respectively. A ll the data sets were derived from a multi-source geology spatial database \(MGSDB established by the In stitute of Geo-Spatial Information Science and Technology, University of Electronic Science and Technology of China in 2009 which contains geological geophysical, geochemical and rem ote sensing data. The algorithm is implemented w ith C programming language The study areas were divided into three parts to assist the interpreting of the potential di stribution of iron deposits We defined the three target zones as high potential areas moderate potential areas and low potential areas, respectively Using the weights-of-evidence model Fig.2\potential areas contain 32 of the total gold deposits, covering 75% of the total area; the h igh potential areas contain 48% of the total gold deposits, covering 10 of the total area; and the moderate potential areas contain 20% of the gold deposits covering 15% of the total area about 68% of known deposits are located in the moderate and high potential areas. Using the spatial data mining method in this paper \(Fig.3 potential areas contain 8 of the total gold deposits, covering 75% of the total area; the h igh potential areas contain 72% of the total gold deposits, covering 10% of the total area; and the moderate potential areas contain 20% of the gold deposits covering 15% of the total area About 92% of known deposits are located in the mode rate and high potential areas Furthermore, the field verification was performed \(Fig.4 which 70% of iron deposits located in high and moderate potential areas. The results i ndicate that the prediction accuracy of spatial data mining was obvious higher than weights-of-evidence modelês, th e method is suitable for 


mineral resources potential assessm ent and its effectiveness is good V C ONCLUSIONS In this paper, a spatial data mining method for mineral resources potential assessment was proposed Meanwhile, the experiments of mineral potential assessment for iron deposits was performed in Eastern Kunlun, Qinghai province, China using spatial data mining method and weights-of-evidence model, respectively The results indicate th at the prediction accuracy of spatial data mining was obvious higher than weights-of-evidence modelês, th e method is suitable for mineral resources potential assessm ent and its effectiveness is good A CKNOWLEDGMENT This study was supported by the National High-Tech R&D Program of China \(Grant No 2007AA12Z22 7 National Natural Science Foundation of China \(Grant No 40701146\express our gratitud e to Zhuang Yongcheng from the Qinghai Institute of Geology Survey for his directions R EFERENCES 1 K C D i   Spatial Data Mining and Knowledge Discovery Wuhan Wuhan University Press, 2000[in Chi  B B He Uncertainty Theory and Application of Spatial Data Mining  XuZhou: China University of Mining and Technology Press 2007 in Chinese  H. J Miller and J W Han Geographic Data Mining and Knowledge Discovery  London Taylor & Francis 2001  B. B He and C. H. Chen Spatial data mining with uncertainty Lecture Notes in Artificial Intelligence, Berlin: Springer, 2007, vol. 4456, 308 316  A. K. Porwal and O. P. K r euzer I ntroduction to t h e special issue  mineral prospectivity analysis and quantitative resource estimation Ore Geology Reviews  vol.38, No.3, pp.121Ö127 2010  G. F Bonham Carter, F. P. Agterberg and D. F. Wright, çWeights of evidence modeling: a new approach to mapping mineral potentialé, in Statistical Applications in the Earth Sciences, Agterberg, F. P. and G. F Bonham-Carter \(Eds.\ Ottawa, Canada: Geological Survey Canada 1989, Paper 89Ö90, 171Ö183  F. P Agte rberg C o m bining ind icator patterns in weights of evi dence modeling for resource evaluation Nonrenewable Resources  vol.1 No.1, pp.39Ö50 1992  E. J   M Carranza  W eights of ev ide nce m odeling of mineral potential  a case study using small number of prospects, Abra, Philippines Natural Resources Research  vol.13, No.3, pp.173Ö187 2004  A Porwal, I Gonz·lez-¡lva rez V  Markwitz T C McCuaig and A Mamuse, çWeights-ofevidence and logistic regression modeling of magmatic nickel sulfide prospectivity in the Yilgarn Craton, Western Australia Ore Geology Reviews  vol.38, No.3, pp.184Ö196 2010  F. P Agterberg, G. F Bonham Car ter, Q. Cheng and D. F. Wright Weights of evidence modeling and weighted logistic regression in mineral potential mapping,é in Computers in Geology, Davis, J. C. and H. C. Herzfeld, \(Eds.\, New York: Oxford University Press, 13Ö32 1993  F A m inzadeh A pplications of fuzz y expert s y ste m s i n integrated oil  exploration Computers & Electrical Engineering  vol.20, No.2 pp.89Ö97, 1994  E J. M Ca rranza and M. Hale  L ogistic regression for geologically constrained mapping of gold potential, Baguio district, Philippines Exploration and Mining Geology  vol.10, No.3, pp.165Ö175, 2001  X Luo and R. Di m i t r akopoulos Datadriven fu zzy analy sis in  quantitative mineral resource assessment Computers & Geosciences  vol.29, No.1, pp.3Ö13, 2003  K Koike S Mats uda, T Suzuki an d M Oh m i  Neural network-based estimation of principal metal contents in the Hokuroku District northern Japan, for explor ing Kuroko-type deposits Natural Resources Research vol.11, No.2, pp.135Ö156, 2002  J. P  Rigol-Sanc hez M Chica-O l m o and F. Aba rca-H ernandez Artificial neural networks as a tool for mineral potential mapping with GIS International Journal of Remote Sensing  vol.24, No.5, pp.1151 1156, 2003  P Gu m iel  D. J S a nderson, M A r ia s, S. Roberts and A Ma rtÌn-Iza rd Analysis of the fractal clustering of ore deposits in the Spanish Iberian Pyrite Belt Ore Geology Reviews  doi:10.1016/j.oregeorev 2010.08.001, 2010  Agrawal R., I m ieli nski T., Swa m i A   Mining association rules between  sets of items in large database r oceedings of 1993êACMSIGMOD International Conference of management of Data, 1993: 207216  R Agrawal R Sri kant Fast algorit h m s for m i ning association rules in proceedings of the 20th International Conference on Very Large Data Bases, pp.487-499 1994  M Vazirgiannis, M Halkidi D Gu nopul os Uncertainty handling and quality assessment in data mining  London: Springer-Verlag, 2003  B. B. H e C. H Chen U ncertainty processing and m e asure m ent of spatial data association rules mining Geography and Geo-information Science  vol.22, No.6, pp.5-8 2006    Target data  Data selection metallogenic thematic data  Data processing data discetization extract spatial relationship  Data mining association rule mining and quality assessment  Comprehensive evaluation  Mineral potential mapping      Multi-source geology spatial data   Generalizabi lity data        Pattern/rules Fig .1 The spatial data mining framework for mineral resources potential assessment 


 Fig.2 Iron resource potential assessment map of East Kunlun based on the weights-ofevidence model Fig.3 Iron resource potential assessment map of East Kunlun based on the spatial data mining method Fig.4 The field verification results of iron resource potential assessment for spatial data mining method 


ArgoUML FreeBSD SIP XalanC Languages Java C Java C Versions 30 8 2 21 Files 3,148 3,603 2,790 529 Changes 16,727 186,959 8,046 397,052 Start Dates 98-01-26 94-05-25 05-07-21 99-12-18 End Dates 09-01-29 09-02-11 10-12-09 09-01-17 CPs 2,843 1,121 1,553 924 Table I D ESCRIPTIVE STATISTICS OF THE OBJECT PROGRAMS CP S  NUMBERS OF CHANGE PERIODS  ArgoUML FreeBSD SIP XalanC Idle 036les 202 1,856 963 7 Changed 036les 2,946 1,747 1,827 522 ofS MCC 166 121 142 36 Max#\036les 35 24 15 17 Min  036les 2 2 2 2 ofS MCCH 196 163 182 85 Max#\036les 46 44 32 22 Min  036les 2 2 2 2 ofS DMCC 11 1 6 1 Max#\036les 4 2 3 2 Min  036les 2 2 2 2 ofS MCCH 53 63 36 4 Max#\036les 6 8 5 2 Min  036les 2 2 2 2 Table II C ARDINALITIES OF THE SETS OBTAINED IN THE EMPIRICAL STUDY Idle Groups Changed Groups ArgoUML Idle Clusters 202 0 Short-lived Clusters 0 1,390 Active Clusters 0 1,556 SIP Idle Clusters 963 0 Short-lived Clusters 0 997 Active Clusters 0 830 XalanC Idle Clusters 7 0 Short-lived Clusters 0 291 Active Clusters 0 231 Table III C ARDINALITY OF M ACOCHA SETS IN COMPARISON TO UMLD IFF 11 do not change in any change period after their introduction into the program Thus they do not participate in co-change patterns Table III reports the number of idle short-lived and active 036les found by UMLDiff in the object-oriented object programs ArgoUML SIP and XalanC and their categorisation by Macocha Because we want to distinguish idle from changed 036les Macocha groups together the 036les identi\036ed as short-lived and active by UMLDiff and compare the sets provided by UMLDiff and by Macocha and 036nd that they are identical For example Macocha 036nds 2,946 changed 036les in ArgoUML identical to the UMLDiff 1  390  1  556  2  946 short-lived and active 036les In addition Macocha computes 036le stability in few minutes because unlike UMLDiff which takes few hours 15 because it does not create UML-like representations of the programs before performing its analysis Macocha can analyse 036le stability for any program unlike UMLDiff providing that CVS/SVN repositories are available In ArgoUML  We detect 202 idle 036les For example the 036les ModeChangeEvent.java and GoModelToClassifiers.java were modi\036ed in only one change period in 11 years.Using UMLDiff we con\036rm that these 036les belong to an idle cluster We detect 2,946 changed 036les For example the 036les TestProject.java and NotationUtilityUml.java were modi\036ed 20 times during the evolution of ArgoUML Thus these 036les belong to the changed group Using UMLDiff we con\036rm that these 036les belong to an active cluster In FreeBSD  We 036nd 1,856 idle 036les For example hdtimer.c and hddebug.c were modi\036ed in one change period in 15 years We detect 1,747 changed 036les The 036les subrclist.c and stallion.c were modi\036ed in 15 change periods during the evolution of FreeBSD We cannot use UMLDiff to verify this result because UMLDiff can not analyse programs written in C In SIP  We obtain 963 idle 036les For example SelectImagePanel.java and ImageSourceStream.java were modi\036ed in one change period in 036ve years With UMLDiff these 036les belong to an idle cluster Macocha detect 1,827 changed 036les The 036les DefaultTreeContactList.java and TreeContactList.java were modi\036ed 15 times during the evolution of the program In XalanC  Our approach detect seven idle 036les For example XLocator.cpp and Cloneable.cpp were modi\036ed in one change period in nine years Using UMLDiff we con\036rm that these 036les belong to an idle cluster Macocha detect 522 changed 036les The 036les TopLevelArg.cpp and XalanEXSLTSet.cpp were modi\036ed in 30 changes periods during the evolution of the program Using UMLDiff we con\036rm that these 036les belong to an active cluster B How does Macocha compare to previous work in term of precision and recall For each program Macocha detect 036les that have identical or similar pro\036les the MCCs sets and report them Quantitatively  We compare the S MCC found by Macocha with the co-changing 036les found by an approach based on association rules 3  s e e a l s o  10  w h i c h u s e s t he Apriori algorithm 16 t o c omput e a s s o ci at i o n r ul es  T he Apriori algorithm takes a minimum support and a minimum con\036dence and then computes the set of all association rules To obtain a comprehensive set of rules we consider as valid rules those achieving a minimum con\036dence of 0.9 as in previous work 3 a nd a m i n i m um s upport o f 2 t o compare association rules and our approach We thus perform an internal evaluation similar to that of Zimmermann et al s Given snapshots S i  i 002 1   n   we build two equal sets T train   S 1  S t  and T test  
329 


Figure 9 The mean of Precision and Recall achieved by Macocha with different values of D H for the four programs Association Rules Macocha Precision Recall Precision Recall ArgoUML 15 66 20 75 FreeBSD 22 100 24 100 SIP 18 89 24 91 XalanC 16 100 22 100 Table IV A SSOCIATION RULES  S APPROACH 3 VS M ACOCHA  S t 1  S n  Weuse T train to build association rules and compare the co-changing 036les in T train with those in T test  For the four programs we 036nd that Macocha improve precision and recall over the approach based on association rules as shown in Table IV For example for ArgoUML results indicate that the precision and the recall of Macocha respectively 20 and 75  are better than those of association rules respectively 15 and 66  The rationale of an internal evaluation is that no expert and no pre-existing groups of co-changing 036les are available Precision and recall are measured for the testing sets by considering for each 036le the groups resulting from the training sets as oracles Such an internal validation have some limits 17  1 8    1  Files c o ch an g i n g f r eq u e n tly in the past training set but not recently test set will be considered wrongly as false negatives 2 Files co-changing frequently recently test set but not in the past training set will be considered wrongly as false positive 3 If the training set contained false positives or negatives they cannot be detected using the testing set Qualitatively  To overcome these limits and to validate the S MCC not found using association rules we also perform an external evaluation of Macocha by considering the results of the association rules as an oracle and by manually comparing them with those of Macocha In fact for each set returned by Macocha if an identical se t is returned by association rules it is considered a true positive If the two sets are not identical we use external information to validate missing 036les and to decide if they present a true positive a false negative or a false positive For example In XalanC all the sets detected by association rules are detected by Macocha except three sets We validated these three sets using two messages in the mailing list and one bug in the Bugzilla Table V reports under the External Information header Association Rules External Information Precision Recall Precision Recall ArgoUML 86 98 100 99 FreeBSD 98 100 100 100 SIP 85 96 100 98 XalanC 90 100 100 100 Table V E XTERNAL EVALUATION OF M ACOCHA WHEN USING THE RESULTS OF A SSOCIATION RULES et al  S APPROACH 3 AS ORACLE AND AFTER MANUAL VALIDATION USING EXTERNAL INFORMATION the precision and recall values of Macocha after manual validation which show that Macocha is able to detect S MCC missed and co-changes wrongly reported by association rules We do not obtain 100 recall because of our choice of t 5  17 hours A smaller value of t would yield a higher recall but a lower precision We thus con\036rm Hattonís study 12 and r eport t hat t 5  17 hours is a good trade-off between precision and recall Table V also reports under the Association Rules header the precision and recall of Macocha with respect to the approach based on association rules It shows that Macocha detects the majority of co-changing 036les detected by association rules in the four object programs In addition Macocha detects other S MCC not detected by association rules For example In ArgoUML  ClassifierRole.java and MessageDirectionKind.java were in approximate MCC In fact in the Bugzilla of ArgoUML the bug ID 881 5 states that when classi\036er assigned to an object  Ar goUML stops responding in relation with these two 036les These two 036le were changed by different authors in a time-window of more than few minutes Thus by applying the association rule approach described in 3  w e c annot 036 n d t hat t hes e 036les are co-changing In SIP  StatusIcon.java and ContactPanel.java were in MCC As con\036rmed in the Bugzilla of SIP by the bug ID 497 6  This bug describes on an Status noti\036cations for a choosen contact relating these two 036les These two 036les were changed by the same developer yanas 036ve times in a time-window of more than few minutes Thus by applying the association rule approach described in  we could not 036nd that these 036les are co-changing C Are there approximate dephase macro co-changes among les and what is their usefulness To the best of our knowledge no previous approach can detect 036les maintained with similar trends and some given shifts in time We validate the usefulness of DMCCs using external information For the lack of space we cannot illustrate all DMCCs so we only report representative examples In ArgoUML  When developers changed ActionAlign.java  developers changed ForwardingComponent.java in the following change period Thus these two 036les 5 http://argouml.tigris.org/issues/show bug.cgi?id=881 6 http://java.net/jira/browse/JITSI-134 
330 


are in DMCC In fact in the Bugzilla of ArgoUML the bug ID 1957 7 relates the two 036les Each label text is a few pixels too high for its component They should be positioned such that the label text is vertically aligned with the text in the labeled component In FreeBSD  We 036nd that ah-core.c and hpfs-alsubr.c are in approximate DMCC In the mailing list of FreeBSD the Message-ID 200906011106.n51B62Da020139@freefall.freebsd.org states that the two 036les are related in a lengthy the message from bugmaster  FreeBSD.org on June 1 2009 about Current problem reports In SIP  We 036nd that MuteDataSource.java and CallPeerActionMenuBar.java were changed systemically with one shift change period in 036ve years In fact These two 036les implement the same feature 8  Audio-Calls In XalanC  We 036nd that Cloneable.cpp and XLocator.cpp are in approximate DMCC In the XSLT syntax and semantic speci\036cation 9  these 036les are related A single template  can pull s tring values out of arbitrary locations in the source tree it can generate structures that are repeated according to the occurrence of elements In the following scenarios we summarise the usefulness of DMCCs reported by Macocha 1 Management of Development Teams If two classes are in approximate dephase macro co-change they should ideally be maintained by the same team of developers to minimise the risks of introducing bugs in the future The team of developers most likely possesses a wealth of unwritten knowledge about the design and implementation choices that they made for these classes which would help them to prevent introducing bugs 19  Consequently a team leader should rede\036ne the organisation of the maintenance team according to the DMCCs links among 036les so that her team does not introduce bugs because of the absence of info rmation or lack of communication among developers For example in ArgoUML when we analysed changes made in three 10 11 12 dephase macro co-changing 036les that have generated bugs we found that these changes have been made with one shift in time in their periods of change and by different developers  Thus such co-changes can not be detected by previous work Thanks to DMCCs a team leader should ensure that team who will maintain these 036les in each change period have the necessary knowledge to maintain the dependency among these 036les 2 Bug and Change Propagation Knowing that two 036les are in DMCCs implies the existence of hidden dependencies between these two 036les If these dependencies 7 http://argouml.tigris.org/issues/show bug.cgi?id=1957 8 http://www.jitsi.org/index.php/Main/Features 9 http://www.w3.org/TR/xslt 10 http://argouml.tigris.org/issues/show bug.cgi?id=1957 11 http://argouml.tigris.org/issues/show bug.cgi?id=2926 12 http://argouml.tigris.org/issues/show bug.cgi?id=4604 are not properly maintained they can introduce bugs in a program With our approach for each program studied we detected 036les in dephase macro co-changes By using external information we con\036rmed our observation and that these 036les indeed participate to bugs For example in SIP we detected seven bugs in relation with dephase macro cochanging 036les By applying the association rule approach described in 3  w e c annot 036 n d t hat t hes e 036 l es are c ochanging Thus by knowing 036les that are in DMMCs we could explain and possibly prevent bugs we plan to study in future work the bug prediction using approximate dephase macro co-changes 3 Traceability Analysis The change history represents one of sources of information available for recovering traceability links that are manually created and maintained by developers The version history may reveal hidden links that relate 036les and would be suf\036cient to attract the developers attention For example in SIP we detect traceability links between four approximate dephase macro co-changing 036les By applying the association rule approach described in we cannot 036nd that these 036les are co-changing Due to the distributed collaborative nature of open-source development version-control systems are the primary location of 036les and the primary means of coordination and archival The requirements of open-source programs are typically implied by communication among project participants and through test cases However such traces of requirements are lost in time Thus by knowing classes there are in approximate dephase macro co-change we could detect potentially traceability links between them which we plan to concretely study in future work V D ISCUSSIONS With our approach we detect 036les in MCCs or in DMCCs in four different programs belonging to different domains and with different sizes histories and programming languages However we do not detect MCCs and DMCCs with the same proportion in each program We observe that the numbers of MCCs and DMCCs found in the programs developed in Java ArgoUML and SIP are greater than the number of MCCs and DMCCs found in program developed in C or C see Table II We explain this 036nding by the fact that on the one hand the majority of FreeBSD 036les are idle and that on the other hand XalanC is the smallest program analysed Thus we also apply our approach to detect dephase macro co-changes on fewer C and C  036les than Java 036les less than 529 036les thus explaining the lower numbers of MCCs and DMCCs In future work we will conduct studies on other programs in these languages to con\036rm this observation and to assess the numbers of MCCs and DMCCs according to the programming languages A Threats to the Study Validity Some threats limit the validity of our empirical study 
331 


Construct Validity  Construct validity threats concern the relation between theory and obs ervations In this study they could be due to implementation errors They could also be due to a mistaken relation between changes in 036les We believe that this threat is mitigated by the facts that many authors discussed this relation that this relation seems rational and that the results of our analysis shows that indeed MCCs and DMCCs exist and are corroborated by external sources of information bug reports and others Actually we apply static analysis to detect MCCs and DMCCs because co-change analysis is known to be more useful when combined with static analysis 23  As previous work detected co-changes committed by the same author in a short time window relaxing these constraints may also lead to false positives The results of our empirical study show that Macocha improves precision and recall with respect to the state of the art in four different programs However we cannot claim that our approach will give similar results for any program Internal Validity  Internal validity is the validity of causal inferences in studies based on experiments The internal validity of our study is not threatened because we have not manipulate a variable the independent variable to see its effect on a second variable the dependent variable Reliability Validity  Reliability validity threats concern the possibility of replicating this study We attempted to provide all the necessary details to re-implement our approach and replicate our empirical study The change logs and the changed 036les of the four programs analysed with their pro\036les to obtain our observations are on-line at http://www.ptidej.net/downloads/experiments/wcre11b External Validity  We performed our study on four different real programs belonging to different domains and with different sizes histories programming languages Yet we cannot assert that our results and observations are generalisable to any other pr ograms and the fact that all the analysed programs are open source may reduce this generability future work includes replicating our study in other contexts and with other programs VI R ELATED W ORK The concepts of MCCs and DMCCs relate our work to that on 036le stability co-change and change propagation A File Stability Many approaches exist to group 036les based on their relative stability th roughout the software development life cycle For example Kpodjedo et al 20 propos ed t o i d ent i f y all 036les that do not change in the history of a program using an Error Tolerant Graph Matching algorithm They studied the evolution of the Mozilla class diagram by collecting 144 Mozilla snapshots over six years reverse-engineering their class diagrams and recovering traceability links between subsequent class diagrams Their approach identi\036ed evolving classes that maintain a stable structure of relations association inheritance and aggregation and thus that likely constitute the stable backbone of Mozilla As other example UMLDiff 11 compares and d etects the differences between the contents of two object-oriented program versions A fact extractor parses each version to extract models of their design Next a heuristic-differencing algorithm UMLDiff extracts the history of the program evolution in terms of the additions removals moves renamings and signature-changes of design entities such as packages classes interfaces and their 036elds and methods UMLDiff then assigns a stability to each class short-lived classes that exist only in a few versions of the program and then disappear idle classes that rarely undergo changes after their introduction in the program and active classes that keep being modi\036ed over their whole lifespan The Error Tolerant Graph Matching algorithm and UMLDiff take few hours to analyse 036le stability for the four programs analysed in this paper because they require parsing and comparing AST-like representations of the programs before performing their analyses Macocha computes stability in few minutes using the change periods of a program which depend on how the developers of the program organise their work and group changes through the life cycle of the program B Co-changing Files Ying et al 2 a nd Zi mmermann et al 3 a p p lied a sso ciation rules to identify co-changing 036les Their hypothesis is that past co-changed 036les can be used to recommend source code 036les potentially relevant to a change request An association-rule algorithm extracts frequently co-changing 036les of a transaction into sets that are regarded as change patterns to guide future changes Such algorithm uses co-change history in CVS and avoids the source code dependency parsing process However it only computes the frequency of co-changed 036les in the past and omits many other cases e.g  036les that co-change with always the same period of time between changes In Section IV we showed that approaches based on association rules cannot detect all occurrences of MCCs and any occurrences of DMCCs because by their very de\036nition they do not integrate the analysis of 036les that are maintained by different developers andñor with some shift in time which could lead to missed co-changing 036les German 7 u sed t h e in f o r m atio n i n t h e CVS t o v isu a lize what 036les are changed at the same time and who are the people who tend to modify certain 036les He presented SoftChange a tool that uses a heuristic based on a sliding window algorithm to rebuild the Modi\036cation Record MRs based on 036le revisions In Softchange a 036le revision is included in a given MR if all the 036le revisions in the MR and the candidate 036le revision were created by the same author and have the same log Thus Softchange can not detect co-changed 036le maintained in the same time by 
332 


different developers Ceccarelli et al 21 and C anfora et al 10 propos ed t h e u s e of a v ect or aut o re gres s i on model  a generalisation of univariate auto-regression models to capture the evolution and the inter-dependencies between multiple time series representing changes to 036les They used the bivariate Granger causality test to identify if the changes to some 036les are useful to forecasting the changes to other 036les They concluded that the Granger test is a viable approach to change impact anal ysis and that it complements existing approaches like association rules to capture cochanges If the authors integrate the analysis of 036les that are maintained by different developers in periods of time of more than few minutes their approach could then detect typical examples of MCCs and DMCCs Antoniol et al 8 p res e nt ed an approach t o det ect s i mi larities in evolutions of 036les starting from past maintenance notwithstanding their temporal distortions They applied the LPC/Cepstrum technique which models a time evolving signal as an ordered set of coef\036cients representing the signal spectral envelope to identify in version-control systems the 036les that evolved in the same or similar ways Their approach can 036nd 036les having very similar maintenance evolution history but they did not present a tool to detect MCCs and DMCCs It used cepstral distance to assess series similarity if two cepstra series are clos e the original signals have a similar evolution in time with which we can not distinguish between the occurrences of MCCs and DMCCs C Change Propagation The development and maintenance of a program involves handling a large number of 036les These 036les are logically related to each other and a change to one 036le may imply a large number of changes to various other 036les Change propagation analyses how changes made to one 036le propagate to others Law and Rothermel 22 presented an approach for change propagation analysis based on whole-path pro\036ling Path pro\036ling is a technique to capture and represent a program dynamic control 037ow Unlike other path-pro\036ling techniques which record intraprocedural or acyclic paths whole-path pro\036ling produces a single compact description of a program control 037ow including loops iteration and inter-procedural paths Law et al s approach builds a representation of a program behavior and estimates change propagation using three dependencybased change-propagation ana lysis techniques call graphbased analysis static program slicing and dynamic program slicing Hassan and Holt 23 in v e stig ated se v e r a l h eu r i stics to predict change propagation among source code 036les They de\036ned change propagation as the changes that a 036le must undergo to ensure the consistency of the program when another 036le changed They proposed a model of change propagation and several heuristics to generate the set of 036les that must change in response to a changed 036le Zhou et al 24 pres ent e d a change propagat i o n a nal y s i s b as ed on Bayesian networks that incorporates static source code dependencies as well as different features extracted from the history of a program such as change comments and author information They used the Evolizer system that retrieves all modi\036cation reports from a CVS and uses a sliding window algorithm to group them Canfora and Cerulo 25 proposed an approach to derive the set of 036les impacted by a proposed change request A user submits a new change request to a Bugzilla database The new change request is then assigned to a developer for resolution who must understand the request and determine the 036les of the source code that will be impacted by the requested change Their approach exploits information retrieval algorithms to link the change request descriptions and the set of historical source 036le revisions impacted by similar past change requests Theses approaches detect change propagation among 036les Their change-propagation model can be used to predict future change couplings and may involve several 036les that are in MCCs or in DMCCs but they do not allow to differentiate between these two concepts All these approaches grouped change couplings created by the same author and have the same log message thus they can not detect approximate MCCs andñor DMCCs Ambros et al 18 pres ented t he Ev olution R adar  a n approach to integrate and visualise module-level and 036lelevel logical couplings which is useful to answer questions about the evolution of a program the impact of changes at different levels of abstraction and the need for restructuring Beyer and Hassan 26 i nt roduced t h e e v o l u t i o n s t o ryboard a new concept for animated visualisations of historical information about the program structure and the storyboard panel which highlights structural differences between two versions of a program They also formulated guidelines for the usage of their visualisation by non-experts and to make their evaluations repeatable on other programs However Xing and Stroulia 27  r eport e d t hat t hes e visualisations are limited in their applicability because they assume a substantial interpretation effort of their users and they do not scale well they become unreadable for large systems with numerous components VII C ONCLUSION AND F UTURE W ORK We introduced the novel concepts of macro co-changes and dephase macro co-changes to describe that two 036les were changed by developers within same change periods with possible shifts in time We describe Macocha an approach to detect dephase macro co-changes using 036le pro\036les and their stability in time Macocha relates to 036le stability and co-changes We therefore performed two types of empirical studies Quantitatively we compared Macocha with UMLDiff 11 a nd an as sociation rules approach 3 b y a ppl yi ng and c ompari ng t h e results of the three approaches on four different programs 
333 


ArgoUML FreeBSD SIP and XalanC and showed that Macocha can identify the same idle/changed 036les as UMLDiff and that Macocha has a better precision and recall than the approach based on association rules Qualitatively we used external information provided by bugs reports mailing lists and requirement descriptions to show that detected MCCs and DMCCs explain real important evolution phenomena We also showed that dephase macro co-changes do exist and can help in explaining bugs managing development teams and traceability analysis We are currently 1 replicating our studies with other programs 2 performing a comprehensive study of the number of MCCs and DMCCs with varying values of t and s especially dependent on the analysed programs 3 identifying other scenarios in which dephase macro cochanges help and 4 relating MCCs and DMCCs with static analysis and external software characteristics such as change proneness Future work also includes a comparative study of the different sets computed by Macocha and associations rules with different value of con\036dence and support other than the values reported in 3  A CKNOWLEDGMENT This work has been partly funded by a FQRNT team grant the Canada Research Ch air in Software Patterns and Patterns of Software and the Tunisian Ministry of Higher Education and Scienti\036c Research We gratefully thank Massimiliano Di Penta and Daniel M German for their generous comments R EFERENCES  M  M  L ehm a n a nd L  Belady  E ds   Program evolution processes of software change  Academic Press Professional Inc 1985  A  T  T  Y ing G C Murphy  R  N g and M  C  C hu-Carroll Predicting source code changes by mining change history Transactions on Software Engineering  IEEE Computer Society Press 2004 vol 30 no 9 pp 574ñ586 3 T  Z im m e r m ann P  W e is ger b er  S  D iehl a nd A  Z e ller  M ining version histories to guide software changes in Proceedings of the 26th International Conference on Software Engineering  IEEE Computer Society 2004 pp 563ñ572  H  G all K  H a jek and M  J azayer i Detection of logical coupling based on product release history in Proceedings of the International Conference on Software Maintenance  IEEE Computer Society 1998 pp 190  A  M ockus  R  T  F ielding and J  D  H erbs leb T w o cas e s tudies of open source software development Apache and mozilla ACM Trans Softw Eng Methodol ACM July 2002 vol 11 pp 309 346  M  F is cher  M  P inzger  a nd H Gall Populating a releas e h is tory database from version control and bug tracking systems in Proceedings of the International Conference on Software Maintenance  IEEE Computer Society 2003 pp 23  D  M  G erm a n  A n e m p irical s t udy of 036ne-grained s oftw are m odi\036cations Empirical Softw Engg Kluwer Academic Publishers September 2006 vol 11  G  A ntoniol V  F  R ollo a nd G V e nturi L inear predicti v e coding and cepstrum coef\036cients for mining time variant information from software repositories in Proceedings of the International Workshop on Mining software repositories  ACM Press 2005 pp 1ñ5  S  B oukt i f  Y  G Gu  eh eneuc and G Antoniol Extracting changepatterns from cvs repositories in Proceedings of the 13th Working Conference on Reverse Engineering  IEEE Computer Society 2006 pp 221ñ230  G  Canf or a M  Ceccar elli L  Cer u lo a nd M  D i P e nta U s i ng multivariate time series and association rules to detect logical change coupling An empirical study in Proceedings of the 2010 IEEE International Conference on Software Maintenance  IEEE Computer Society Press pp 1ñ10 1 Z  X i ng and E  S tr oulia  A n alyz ing the evolutionary history of the logical design of object-oriented software Transactions on Software Engineering  IEEE Computer Society Press 2005 vol 31 pp 850 868 1 L  H a tton H o w accur a tely do engineer s p r e dict s o f t w a r e m a intenance tasks Computer  IEEE Computer Society Press 2007 vol 40  V  R Bas ili and D  M  W eis s   A m ethodology for c ollecting v alid software engineering data Software  IEEE Computer Society Press 1984 vol 10 no 6 pp 728ñ738  T  Z i m m e rm ann S Breu C  L indi g and B Livshits Mining additions of method calls in argouml in Proceedings of the International Workshop on Mining Software Repositories  ACM Press 2006  Z  X i ng and E  S tr oulia  U m ldif f  an algor ithm f or objecto r i ented design differencing in Proceedings of the 20th International Conference on Automated Software Engineering  ACM Press 2005 1 R A g r a w a l a nd R S r ikant F as t a lgor ithm s f o r m ining a s s ociation rules in large databases in Proceedings of the 20th International Conference on Very Large Data Bases  Morgan Kaufmann Publishers Inc 1994 1 A  V a n y a S  K l us ener  N  v an Rooijen and H  v an V liet Char acterizing evolutionary clusters in Proceedings of the 16th Working Conference on Reverse Engineering  IEEE Computer Society 2009  M DíAm bros  M  L anza and M  L ungu V is ualizing c o-change information with the evolution radar Transactions on Software Engineering  IEEE Computer Society Press 2009 vol 35 no 5 pp 720ñ735 1 B W  Rebecca W i r f s B r o ck and L  W iener  E d s   Designing ObjectOriented Software  Prentice Hall 1990  S  K podjedo F  Ricca P  G a linier  and G Antoniol Recovering the evolution stable part using an ecgm algorithm Is there a tunnel in mozilla in CSMR  2009 pp 179ñ188 2 M  Ceccar elli L  Cer u lo G  C anf o r a  a nd M  D i P e nta  A n eclectic approach for change impact analysis in Proceedings of the 32nd International Conference on Software Engineering ACMPress 2010 pp 163ñ166  J  L a w a nd G Rotherm e l W hole p rogram path-bas ed dynam i c impact analysis in Proceedings of the 25th International Conference on Software Engineering  IEEE Computer Society 2003 pp 308 318  A E  Ha ssa n a nd R  C  Hol t   P re dicting change propagation in software systems in Proceedings of the 20th IEEE International Conference on Software Maintenance  IEEE Computer Society 2004 pp 284ñ293  Y  Z h ou M  W  ursch E Giger H C Gall and J L  u A bayesian network based approach for change coupling prediction in Proceedings of the 15th Working Conference on Reverse Engineering  IEEE Computer Society 2008 pp 27ñ36  G Canfora a nd L  Cerulo  Im pact analys is by m i ning s o ftw a re and change request repositories in Proceedings of the 11th IEEE International Software Metrics Symposium  IEEE Computer Society Press 2005 p 29  D  Be yer a nd A  E  H a s s an  A n im ated vis u alization o f s of tw ar e history using evolution storyboards in Proceedings of the 13 th Working Conference on Reverse Engineering  IEEE Computer Society Press 2006  Z  Xing and E  S troulia  Bottom up des i gn e v olution c oncern discovery and analysis Tech Rep 2007 
334 


relate approximately the 34% of the events, which enables the forecast of new events that are the same type as those contained in the rules. In a similar way to the presented case we analyzed 62 different measurement points with a total of 6300 events occurred in the distribution network over 2 years TABLE VI ASSOCIATION RULES AND THEIR CONFIDENCE rule conf  1]? [1? 5] 0.750 9]? [9? 9] 0.5294 139 Fig. 2. Complete sequence and their frequent serial episodes TABLE VII COMMON RULES FOUND IN DIFFERENT MEASUREMENT POINTS rule number of measurement points 1] ? [1? 1] 16 1] ? [1? 5] 10 6] ? [6? 9] 8 9] ? [9? 9] 5 14] ? [14? 15] 11 15] ? [15? 15] 19 1? 1] ? [1? 1? 1] 18 The rules commonly found in most of the measurement points are shown in Table VII. The parameters used to extract the association rules are win = 5, min fr = 0.15 and min conf = 0.5. The summary showed in Table VII indicates that the ranges of occurrence of events in each measurement point presents different behaviours and, therefore, it is necessary to examine separately the sequences of each measurement point for a successful development of a valid prediction. The results show that it is possible to build rules to relate time spans between successive events which give an estimate of time lag for the appearance of a new event. Although it is not possible to relate all the events of the sequence, the knowledge of network behavior is improved, and takes advantage of power system information available in databases. Finally, different values of win min fr and min conf were tested to find frequent episodes 


and association rules. The result show that increasing win larger episodes can be found, while increasing min fr and min conf the amount of frequent episodes and rules will be minor, since the requirement for selection increases Similarly, it was found that using WINEPI methodology, the frequency of an episode is proportional to the width of the window. The appropriate values of min conf and min fr are defined taking into account criteria such as sequence length, type events frequency and the confidence threshold that the user wishes to assume. It is advisable to test different values of min conf and min fr V. CONCLUSIONS AND FUTURE WORKS The proposed methodology suggests a new approach for failure analysis in power distribution system. The aim of the solution is the forecast of faults, which is analyzed in the domain of temporal data mining and, in particular, the discovery of patterns starting from the registers of events The proposed solution is able to extract useful information about the behaviour and evolution of the faults in the electrical system, as a first step in the exploitation of event sequences recorded in power distribution systems, for the prediction of future failures Future work should continue with the search of episodes in sequences of events to discovery patterns related with failures in components and to exploit other information contained in the events recorded besides the elapse times between events e.g., the depth of voltage sags during the fault, etc. Next use this information from a predicting point of view, to anticipate future failures VI. ACKNOWLEDGMENTS This research has been developed within the eXiT, Control Engineering and Intelligent Systems, research group of the Institute of Informatics and Applications \(University of Girona Decision Support Systems \(AEDS with a consolidated distinction \(2009 SGR 523 2012 period in the Consolidated Research Group \(SGR project of the Generalitat de Catalunya The work has been supported by the research project Moniorizacion Inteligente de la Calidad de la Energ?a Electrica DPI2009-07891 vacion \(Spain 


scholarship \(2009FI-A00452 per a Universitats i Recerca del Departament dInnovacio Universitats i Empresa of the Generalitat de Catalunya and also the European Social Fund REFERENCES 1] Math H.J Bollen. Understanding power quality problems, voltage sags and interruptions. IEEE press series on power engineering, 1999 2] Carl L. Benner and B. Don Russell. Distribution incipient faults and abnormal events: Case studies from recorded field data. In 57th Annual Conference for Protective Relay Engineers, 2004 3] K. C. P Wong, H. M. Ryan, and J. Tindle. Power system fault prediction using artificial neural networks. In International Conference on Neural Information Processing, 1996 4] Bach Quoc Khanh, Dong-Jun Won, and Seung-Il Moon. Fault distribution modeling using stochastic bivariate models for prediction of voltage sag in distribution systems. IEEE Transactions on Power Delivery, 23:347354, 2008 5] J. A. Martinez-Velasco and J. Martin-Arnedo. Stochastic prediction of voltage dips using an electromagnetic transient program. In 14th PSCC, Sevilla, Spain, 2002 6] Heikki Mannila, Hannu Toitoven, and A. Inkeri Verkamo. Discovery of frequent episodes in event sequences. Data Mining and Knowledge Discovery, 1:259289, 1997 7] Rakesh Agrawal and Ramakrishnan Srikant. Fast algorithms for mining association rules. In Int. Conf. Very Large Data Bases VLDB94 8] Charles J. Kim, Lee Seung-Jae, and Kang Sang-Hee. Evaluation of feeder monitoring parameters for incipient fault detection using laplace trend statistic. IEEE Transactions on Industry Applications, 40:1718 1724, 2004 9] Z.W. Liao, G. Wang, Q.H. Ye, and Y.M. Sun. A novel fault diagnosis system for transmission line system based on sequence of events. In 6th International Conference on Advances in Power System Control Operation and Management APSCOM 2003, pages 440445, 2003 140 10] Srivatsan Laxman and P. Shanti Sastry. A survey of temporal data mining. SADHANA Academy Proceedings in Engineering Sciences 31:173198, 2006 11] Rakesh Agrawal and Ramakrishnan Srikant. Mining sequential patterns. In Int. Conf. Data Engineering \(ICDE95 12] Srivatsan Laxman, P. Shanti Sastry, and K. P. Unnikrishnan. Fast algorithms for frequent episode discovery in event sequences. Technical 


report, CL-2004-04/MSR, GM R&D Center, Warren, 2004 13] K. P. Unnikrishnan, Debprakash Patnaik, and P.S. Sastry. Discovering patterns in multi-neuronal spike trains using the frequent episode method. Technical report, General Motors R&D Center, Warren, 2007 14] Kuo-Yu Huang and Chia-Hui Chang. Efficient mining of frequent episodes from complex sequences. Information Systems, 33:96114 2008 15] Gregory Piatetsky-Shapiro and William Frawley. Knowledge Discovery in Databases. AAAI/MIT Press, 1991 141 


