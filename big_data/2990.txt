A Novel Approach to Find the Revising and Launching Automobile Type Jie Lin School of Economics and Management Tongji University Shanghai 200092 P.R.China jielinfd@263.net Xu Xu School of Economics and Management Tongji University Shanghai 201804 P.R.China xu.xu@mail.tongji.edu.cn Abstract Nowadays many decision models are the revision of data-driven These models are de\002ned as follows given an existing model and a set of data items,revise the model to match the data items In this paper a novel study on the revising and launching automobile type is based on decision support and business intelligence system Fuzzy set theory and expert knowledge are also employed and a new association rule algorithm is yielded during the research The model is tested under experiment environment and gets satisfaction results So the model is provable and valuable 1 Introduction Decision models are an essential part of decision analysis Usually a lot of efforts are dedicated to the construction of a suitable and useful model Expert knowledge and data that describes the decision problem or known solutions are carefully combined into a model The use of the model depends on the characteristics of decision problem Some models are used only once when a dif\002cult decision has to be thoroughly On the other hand there are models built for continuous use on a regular e.g daily basis Most of the models that are used continuously have to be regularly revised to re\003ect the new state of decision problem as well as possible Building a model is a demanding time consuming and expensive process Revising an existing one is not much easier.Although the actual changes in the model are usually minor this process requires gathering new data the evaluation of changes and their effect re-implementation of decision support tools and veri\002cation of the new behavior Models for continuous use are usually data-dependent and their updating can be automated to some extent if contemporary data about decision problem is available Nowadays the abundance of available fresh information and the advances in data analysis methods enable us to use data in various ways and to automate even as creative processes as learning pattern recognition customer support and many others For qualitative multi-attribute models there exist methods for their data-based construction from scratch Ho wever these methods are complex computationally demanding Owing to the above reasons the study on the revising and launching automobile type is not involved by now The research addressed in this paper an active involvement of experts and fuzzy set theory are employed in the multiattribute model and decision support business intelligence system are combined to carry out the research The remainder of this paper is organized as follows Prepared work and technique employed are brie\003y presented in section 2 In section 3 the proposed approach and algorithm in the model are de\002ned and explained The experimental results are described in section 4 Conclusions are given in section 5 2 Prepared Work 2.1 Decision Support and Business Intelligence Integration Decision support includes decision problem decisionmaking decision analysis multi-attribute Business intelligence utilizes data warehouse OLAP and Data Mining to 002nd out the knowledge that are contained in the Among these Data Mining is the most important.There are many methods of data mining including classi\002cation,estimation,prediction clustering and af\002nity grouping Among these af\002nity grouping can discover the high frequency pattern and discover which things appear frequently and simultaneously The goal of data mining is to 002nd patterns in historical data that shed light on those needs preferences and propensities There are a lot of studies about the combination with decision support and business intelligence They are 1 support for business intelligence 2 intelligence for decision support 
Fifth International Conference on Fuzzy Systems and Knowledge Discovery 978-0-7695-3305-6/08 $25.00 © 2008 IEEE DOI 10.1109/FSKD.2008.596 489 


3 intelligence then decision support 4 support then Business intelligence 5 support and Business intelligence In this paper 5 is utilized to build the model The concrete work is discussed in section 3 2.2 Fuzzy Set Theory Fuzzy set theory was 002rstly presented by Professor L.A.Zadeh in California University in 1965 It transforms the meaning and spoken description into fuzzy set instead of general set then studies and deals with subjective and unde\002ned data with membership functions quali\002es the data then transforms it into useful information through systemic fuzzy Fuzzy set the ory and data mini ng technique are often combined to solve the sharp boundary problem According to the principle in this paper a new association rule algorithm combined fuzzy set theory is employed to 002nd the knowledge of multi-attribute\(customer and automobile 3 Proposed Approach and Algorithm In the study of revising and launching automobile type based on decision support and business intelligence system,this study combine automobile and customer by building data warehouse And employ expert knowledge to set the weight of automobile and customer Then the bridge of multi-attribute\(customer and automobile formed In order to 002nd the effective and scienti\002c knowledge a new association rule algorithm with weight is given to re\003ect their importance to the mining process 3.1 Data Sources and Warehouse In this model Data sources come from sale and maintenance records The attributes of automobile include price comfort safety Engine Transmission and Size etc And the study also considers the extra expenditure of the automobile The attributes of customer include gender age City and the way of buying automobile\(money or loan etc The base of warehouse is built according to these attributes.The attribute tree of automobile and customer are shown in table 1 and table 2 3.2 Experts Knowledge The study builds the hierarchy of multiattributes\(customer and automobile And employ expert knowledge and fuzzy set theory to set the weight of the multi-attributes Here set Tr1 Tr2 Tr3 Tr4 as an example their weight are 0.1 0.2 0.4 0.3.The weights table of automobile and customer is shown in table 3 Table 1 Attribute tree of automobile Attribute description AUTOMOBILE Car type TECH.CHAR Technical characteristics COMFORT Comfort PERSON Maximum number of passengers H 1 2 H 2 4 H 3 More LUGGAGE Size of the luggage boot L 1  L 2  L 3 Small Medium Big STANDARD The standard of automobile G 1 GSL G 2 GSI G 3 GIF G 4 GS G 5 G SAFETY Car's safety S 1  S 2  S 3 High Medium Low ENGINE Car's engine EN 1  EN 2  EN 3  EN 4 The type of the engine TRANSMISSION Drive T R 1 MT T R 2 AT T R 3 AMT T R 4 CVT PRICE Price of a car BUY.PRICE Buying price P 1 P 1 6 60,000 Yuan P 2 60,000 Yuan P 2 6 100,000 Yuan P 3 100,000 Yuan P 3 6 200,000 Yuan P 4 200,000 Yuan  P 4 MAINT.PRICE Maintenance price of a year M 1 M 1 6 6,000 Yuan M 2 6,000 Yuan M 2 6 10,000 Yuan M 3 10,000 Yuan  M 3 6 20,000 Yuan M 4 20,000 Yuan M 4 3.3 Weighted Association Rule Algorithm The study organizes the items of automobile and customer as transactions And consider a group of transactions D A set of items I f i 1  i 2  001\001\001  i n g  Each transaction is a subset of I and is assigned a transaction identifer\(TID De\002nition 1 An association rule has the form X  Y where X 032 I Y 032 I and X  Y 036  De\002nition 2 The support of the association rule X  Y is the probability that X  Y exists in a transaction in the database D De\002nition 3 The con\002dence of the association rule X  Y is the probability that Y exists given that a transaction contains X i,e 
490 


Table 2 Attribute tree of customer Attribute description CUSTOMER The one who bought the car CUST.CHAR Customer characteristics GENDER Sex M Male F Female AGE Age of the customer A 1 18 A 1 6 23 A 2 23 A 2 6 30 A 3 30 A 3 6 40 A 4 40 A 4 PLACE The place where the customer bought P L 1 Shanghai P L 2 Beijing P L 3 Guangzhou P L 4 Lanzhou P L 5 Dalian PAY The way which the customer bought the car P A 1 Not loan P A 2 Loan P r  Y X   P r  X  Y  P r  X  1 Given I here assign a weight w j for each item i j by expert knowledge with 0  w j 6 1 where j f 1,2 001\001\001 n g  to show the importance of the item According to De\002nition 2 here can de\002ne the weighted support for the weighted association rules De\002nition 4 The weighted support of a rule X  Y is X w j  Support  X  Y  2 De\002nition 5 A L-itemset X is called a small itemset if the weighted support itemset is less than the minimum weighted support\(wminsup\hreshold,or X w j  Support  X  Y   wminsup  3 otherwise X is a large L-itemset De\002nition 6 An association rule X  Y is called interesting rule if X  Y is a large itemset and the con\002dence de\002ned in de\002nition 3 of the rule is greater than or equal to a minimum con\002dence threshold Here some transactions of automobile and customers are employed as an example to illustrate the algorithm There are 23 items and totally 10 transactions in the transaction database which is shown in table 4 Here get these transactions from the different series of one type So they have common things like H 1  L 1  Table 3 The weights of automobile and customer Item Weights Item Weights Item Weights Item Weights H 1 0.3 H 2 0.2 H 3 0.5 L 1 0.2 L 2 0.4 L 3 0.4 S 1 0.6 S 2 0.2 S 3 0.2 En 1 0.4 En 2 0.2 En 3 0.1 En 4 0.3 T r 1 0.1 T r 2 0.2 T r 3 0.4 T r 4 0.3 P 1 0.2 P 2 0.3 P 3 0.4 P 4 0.1 M 1 0.5 M 2 0.3 M 3 0.1 M 4 0.1 M 0.6 F 0.4 A 1 0.2 A 2 0.2 A 3 0.2 A 4 0.4 P a 1 0.4 P a 2 0.6 G 1 0.3 G 2 0.3 G 3 0.2 G 4 0.1 G 5 0.1 P l 1 0.3 P l 2 0.3 P l 3 0.2 P l 4 0.1 P l 5 0.1 Table 4 Transaction database Number TID 1 H 1 L 1 G 2 S 2 En 2 T r 1 P 1 M 1 F A 2 P l 1 P a 1 2 H 1 L 1 G 1 S 1 En 3 T r 1 P 1 M 1 F A 2 P l 1 P a 1 3 H 1 L 1 G 2 S 2 En 2 T r 2 P 1 M 1 F A 2 P l 1 P a 1 4 H 1 L 1 G 2 S 2 En 2 T r 2 P 1 M 1 M A 2 P l 1 P a 1 5 H 1 L 1 G 2 S 2 En 2 T r 2 P 1 M 2 F A 2 P l 1 P a 1 6 H 1 L 1 G 2 S 2 En 1 T r 2 P 1 M 2 F A 1 P l 3 P a 1 7 H 1 L 1 G 3 S 1 En 1 T r 3 P 3 M 1 F A 2 P l 3 P a 1 8 H 1 L 1 G 2 S 2 En 1 T r 2 P 3 M 1 F A 2 P l 3 P a 1 9 H 1 L 1 G 1 S 2 En 1 T r 2 P 3 M 2 F A 2 P l 3 P a 1 10 H 1 L 1 G 1 S 1 En 3 T r 2 P 3 M 1 F A 2 P l 3 P a 1 If the vale of wminsup is 5.5 then f G 2  S 2  T r 2  P 1  M 1  F  A 2  P a 1 g will be a large itemset since 0.3+0.2+0.2+0.2+0.5+0.4+0.2+0.4 002 23/10 According to the same method then can get other large itemset At last the association rules can get from de\002nition 6 Other interesting pattern can also come from the transactions The transactions 1 to 5 come from the place P l 1  and the others come from the place P l 3  There are 15 items and totally 5 transactions in the transactions 1 to 5 If the value of wminsup is 7 then f G 2  S 2  En 2  P 1  M 1  A 2  F  P a 1 g will be a large itemset since 0.3+0.2+0.2+0.2+0.5+0.2+0.4+0.4 002 15/5 There are 17 items and totally 5 transactions in the transactions 6 to 10 If the value of wminsup is 7,then there will be no a large itemset So the association rules coming from different region are different 
491 


4 Experiments The model of revising and launching automobile type was under tested  The model is based on decision support and business intelligence system The interesting pattern and knowledge are yielded to help the decision makers to get the following results 1 revising automobile automobile type can be achieved combined this model 2 new automobile automobile type can be launched combined this model 3 business strategies are taken to the decision makers by this model 5 Conclusions In the study to the model of revising and launching automobile type the model combines decision support and business intelligence system to do the research Hierarchy multi-attributes are considered and a new association rule algorithm is yielded in the model In the future more work and experiments will serve as motivation for efforts in the development of revising and launching automobile type to make the use the model more simple more useful and more frequent 6 Acknowledgement The study is sponsored by the National High-Tech R  D Program for CIMS China\(NO.2007AA04Z151 Program for New Century Excellent Talents in University China No NCET-06-0377 and the National Natural Science Foundation China\(No.70531020 References  Michalo wski W  Rubin S Mobile cli nical Support System for Pediatric Emergencies,Decision Support Systems 2003 2 pp.161-176  Bohanec M Rajk o vi An Expert System Shell for Decision Support Sistemica,\(1999 1 1  Clemen R T Mak ing Hard Decisions an Introduction to Decision Analysis Wadsworth Publishing Company,\(2006  K eene y  R L Raif f a H.,Me yer  R Decisions with Multiple Objectives Preferences and Value Trade-offs Cambridge Univ Press,\(1993  T riantaph yllou E Multi-Criteria Decision Making Methods A Comparative Study Kluwer Academic Publishers,\(2000  Han J  Kamber  M.,Data Mining Concepts and Techniques Morgan Kaufman Publishers,\(2001  D.Dubois,H.Prade,What are Fuzzy Rules and How to Use them Fuzzy Sets and 2\-135  Cai.C.H Fu.A.W C,etc.,Mining Association Ru les with Weighted Items Database Engineering and Applications Symposium,\(1998\.68-77  Xu Xu,etc Utilize Fuzzy Data Mining to Find the Li ving Pattern of Customers in Hotels Fourth International Conference on Fuzzy Systems and Knowledge Discovery,\(2007  Zupan B Porenta A V idmar  G Aoki N  Bratk o I Beck JR,Decisions at Hand A Decision Support System on Handhelds Medinfo 2001 London UK,\(2005  Xu Xu,Zhongfu Zhang,Zhihong Feng,Applications of the Evaluation of the Computer System Performance and Business Strategy Based on Fuzzy Mathematics,International Journal of Applied Mathematics,\(2006\83-487  T urban E  Aronson J E Decision Support Systems and Intelligent Systems Prentice Hall,\(2005  Lixia Du Xu Xu etc  A No v el Approach to Find the Satisfaction Pattern of Customers in Hotel Management IEEE International Conference on Fuzzy Systems,\(2008  Zhihong Feng Xu Xu An Approach to Find the Inter esting Pattern of Customers in Hotel Journal of Computational Information Systems 2008  Xu Xu Jie Lin etc Utilize a No v el Approach to Find the Relative Pattern of Patients of a Disease,7th World Congress on Intelligent Control and Automation 2008 
492 


 then it is considered that flying support belongs to ITVL x  w hereas if the weight of flying support is more towards ITVL y it will be considered as ITVL y support. However, if t he weight of flying support is equal between two ITVLs we will assume that flying support belongs to the ITVL from where the sequential pattern flying support has started   Fig. 3.  Standard and Flying Support  I 1\. Valid Interval Definition After discussing the flying support concept valid interval can be defined as: an interval \(ITVL\ is valid with reference to a given sequential pattern SP, if it satisfies the user defined parameters SD SW within the said ITVL and one of the following conditions is true  267  Standard Support is 001 min_supp 267  Standard Support + Flying Support 001 min_supp 267  Flying Support 001 min_supp  C. Longest Interval \(Problem Definition The problem to mine all the longest intervals can be defined as \223Suppose we have a database of events D and a sequential pattern SP  along with all its user defined parameters and also the user defined granularity The problem is to discover all the longest intervals satisfying the min_ilen parameter for each cycle D 1 D 2 D 3 205.D n 224  I Framework to Discover Longest Intervals Due to the temporal and inter-transactional characteristics of sequential patterns it is recognised that longest interval discovery will be quite an expensive process Consequently  it is important to devise different t echniques, which can help to scan the minimum amount of the database during the mining process Keeping in view the above consideration we decompose the problem of longest interval discovery into four sub-problems These sub problems are basically set of valid intervals with different length  267  Strictly Loose Seed Interval \(SLSI 267  Loose Seed Interval \(LSI 267  Seed Interval \(SI 267  Longest Interval \(LI                               Fig. 4.  Framework to Discover Longest Intervals  T wo main search techniques the Interval Validation Process IVP and the Process Switching Mechanism PSM are introduced here for the discovery of all the longest intervals in each cycle. The main objective of IVP is to confront the complexities which emerge due to the sequential/temporal nature of sequential patterns whereas PSM is devised to increase the efficiency of the mining process by only scanning relevant intervals from the database  I.1.\  IVP \(Interval Validation Process During different stages of the longest interval discovery process, PSM passes the C ITVL Current Interval\ to IVP to v erify if the C ITVL is valid or not \(Fig 4\. IVP first checks t he validity of C ITVL by counting standard support and then i f required it also counts the flying support to check C ITVL  v alidation.  IVP utilises DSCP \(Dynamic Support Counting Process during the standard support counting process for each data sequence DSCP scans only the minimum number of required data-sets from the database in order to find the support of a given sequential pattern\. This process continues until the counted support of the given SP is equal to min_supp parameter and IVP returns \223valid\224 to PSM or there is no data sequence left in C ITVL to check \(IVP returns 223 invalid\224 to PSM If after checking the standard support IVP retains \223invalid\224 against C ITVL then the flying support c oncept needs to be explored \(Fig 4  Algorithm IVP \(Interval Validation Process\ for standard ITVL stage=s_supp indicate different stages of IVP  i=1  counter to fetch next record CS=0  current support of given SP  CR  current record C_Supp  calculated Support RR   remaining records TR   total records if stage=s_supp then  IVP is in standard support stage  LR_ID LR C ITVL     Fetch the last record ID  Loop ITVL Y  Standard Support Flying Support ITVL X  Time Line 


  CR Fetch_Rec C ITVL i\  //to fetch data sequence   C_Supp DSCP CR, SP SD,SW    if  C_Supp<>0 then   CS=CS+C_Supp i=i+1 Add C Seq_Id Seq_List     else     i=i+1 end if if CS 001 min_supp*TR\ then return\(\223valid\224 else if \( \(min_supp * TR\-CS > RR\ or \(i > LR_ID  i=0 Store CS,Data_Struc   stage=\224f_f_supp\224 exit end if  end if if stage=\224complete\224 IVP on C ITVL is complete  exit end if  Fig. 5.  IVP Algorithm for standard support   I Flying Support Discovery Flying support can exist on both sides of C ITVL  T herefore first certain portions of C ITVL  and N ITVL  Next I nterval have to be scanned to find flying support of the given SP. We can call this ITVL as FF ITVL Forward Flying I nterval However after checking the FF ITVL  if C ITVL  is s till invalid then certain portions of C ITVL  and P ITVL   Previous Interval\ have to be scanned as well; we call such ITVL as BF ITVL Backward Flying Interval\ \(Fig 6                                Fig. 6.  Flying Intervals  O nce the FF ITVL is created, the next step is to find pattern s upport in it. Upon finding the flying support for C ITVL IVP a ggregates the support against C ITVL  in the data structure  Table 1 This aggregation depends on the weight of the discovered flying support For example if 70 of the weight is in C ITVL then current support is aggregated with 0 7. The process continues until the min_supp parameter is satisfied or the algorithm scans the last data sequence of FF ITVL   D ata Structure of IVP ITVL ID  ITVL STATUS  SUPPORT STATUS  CYCLE CAL SUPPORT  C ITVL  Valid I nvalid Standard Flying Both Cycle of the C ITVL  C alculated Support  After scanning the FF ITVL  if the min_supp parameter is n ot satisfied, then IVP will count flying support in BF ITVL  O nce the BF ITVL is created, the next step is to count pattern s upport in it Upon finding the flying support IVP aggregates the support against C ITVL  This process c ontinues until the min_supp parameter is satisfied or the algorithm scans the last data sequence of BF ITVL   I 2.\ PSM \(Process Switching Mechanism The main aim of implementing PSM is to scan only those intervals ITVLs which can be part of any longest interval This is done by switching the discovery process into different modes forward mode backward mode and jumping mode Switching of process modes depends on different scenarios during the discovery of SLSI LSI SI and LI  Let us first discuss the definitions of each subproblem  Strictly Loose Seed Interval \(SLSI An interval is a SLSI Strictly Loose Seed Interval with reference to a given  sequential pattern if and only if it is a valid interval and satisfies both the following conditions  267  SLSI is not surrounded by immediate valid intervals 267  SLSI is not a part of any LSI, SI or LI  Loose Seed Interval LSI  An interval is loose seed interval \(LSI\ with reference to a given sequential pattern if and only if, it satisfies all of the following conditions  267  At least first and last ITVLs of potential seed interval are valid 267  The distance between first and last valid interval of LSI is equal to min_ilen parameter 267  There is not a single invalid ITVL between first and last ITVLs of LSI  Seed Interval SI An interval is considered as seed interval \(SI\ with reference to a given sequential pattern if the length of consecutive valid interval is equal to min_ilen parameter  Longest Interval \(LI The longest interval definition was presented in section 4.2 In Fig 7 the longest interval is depicted as LI=\(ITVL 17 ITVL 18 ITVL 19 ITVL 20 ITVL 21   I 2.1\  PSM \(Process Switching Mechanism\ Algorithm The PSM algorithm starts in forward mode by undertaking the first problem, that is to find SLSI \(Strictly Loose Seed Interval\.  It scans the first ITVL to check if it is a valid interval  If IVP discovers that C ITVL  Current I nterval\ is invalid then the process simply moves to N ITVL   Next Interval and this process continues until PSM discovers SLSI or the process reaches the last ITVL of the said cycle \(Fig 8-a                                   Fig. 7.  Different stages of longest ITVL  However, if C ITVL is recognised as valid interval it means 


 that we have found the first SLSI. Upon finding the SLSI PSM undertakes the second sub-problem discovery of LSI According to the definition of LSI for any LSI at least first and last ITVL of potential loose SI have to be valid therefore PSM jumps to the last interval of the potential loose seed interval. The reason for this jump is in the following property of longest interval  267  The longest interval cannot be less than min_ilen and every ITVL within the longest interval has to be valid ITVL  Hence, if we found that ITVL 8 is invalid then there is no n eed to check the ITVLs between ITVL 4  to ITVL 7  since t hey cannot be part of any longest interval \(Fig 8-b  After jumping to the last ITVL of potential LSI PSM again passes the C ITVL to IVP to check if the ITVL is valid o r not. If it is recognised that C ITVL is invalid then it means c urrent SLSI cannot be a part of any longest interval Therefore PSM switches to forward mode by moving to the N ITVL  Next Interval and the process of searching the n ext Strictly Loose Seed Interval \(SLSI\ continues \(Fig 8c\.  However, if C ITVL is valid at this stage, that means we h ave found the first LSI Upon discovering the LSI PSM confronts the third sub-problem discovery of SI To discover SI, PSM has to scan the remaining ITVLs between first and last ITVL of the already discovered LSI Therefore PSM switches into backward mode and scans the ITVL, which is one ITVL previous than the C ITVL Fig 8 d  Validation of C ITVL is checked by IVP again. If C ITVL is i dentified as valid interval then the process of discovering the seed interval will continue  PSM will remain in backward mode and moves to the previous ITVLs one by one to check the validity of different ITVLs This process continues until PSM reaches the already discovered valid interval or it encounters an invalid interval \(Fig 8-e  During the process of discovering SI, if PSM encounters an invalid ITVL at any stage, then it does not have to check the rest of the ITVLs of LSI \(as this LSI cannot be part of any LI\. In this scenario, PSM assigns a new value to SLSI that is the last valid interval identified by PSM in \(see Fig 8-f new SLSI is assigned with ITVL 7 Now the process of d iscovering the next LSI proceeds again. According to the definition of LSI for any LSI at least the first and last ITVLs have to be valid therefore PSM jumps to the last interval of the potential loose seed interval. How long this jump will be depends on the min_ilen parameter If PSM continues in backward mode and reaches the already discovered ITVL then it means we have found a consecutive set of valid intervals whose length is equal to the min-ilen parameter which is the definition of SI In that scenario PSM jumps to the first ITVL after the last ITVL of current SI and the discovery process of LI proceeds \(Fig 8-g\.  In the Longest Interval \(LI\ discovery process PSM switches to forward mode to check the validity of the C ITVL However, if the C ITVL is identified as v alid interval then the seed interval is extended by this C ITVL  This process continues until PSM encounters an i nvalid ITVL or PSM reaches the last interval of the data set. Once PSM encounters an invalid ITVL the process of extending the seed interval terminates. The discovered LI is stored in the data structure and the PSM algorithm proceeds to the search of the next SLSI Fig 9 As we have to discover all the longest intervals for each cycle, the process given in Fig 4 is recursive and it will continue until all the longest intervals of each cycle are found D.  PIDeriver Algorithm for Periodic Interval Discovery Once all the longest intervals for each cycle are discovered with the above motioned approach we can straightforwardly implement the PIDeriver algorithm presented by Chen in 1  t o  d e r i v e  a l l  t h e  p e r i o d i c  t i m e  intervals for a given sequential pattern              Fig. 9.  Discovery process for LI V  INCREMENTAL  DATA  MINING M ining periodicity for sequential patterns is a time consuming process Maintaining the already discovered periodic patterns in the updated database is very important since new data may invalidate some of the discovered periodic patterns and new periodic patterns may emerge due to new data Assuming that the cyclicity granularity and sequential pattern of interest remain the same the approach presented in this paper to discover periodic time intervals for a specific SP can be used for incremental mining of periodic time intervals as well  The approach presented in this paper divides the main problem of finding the periodic time intervals into two sub-problems finding the longest interval for each cycle and discovery of periodic intervals by using already discovered longest intervals of each cycle  Since the second problem is purely based on mining results of first problem the discovered longest intervals in the previous data mining efforts can be used in an incremental data mining process. During the incremental data mining process the algorithm will only focus on finding the longest intervals from new data. However, due to the temporal nature of sequential patterns some portion of the old database will be used as well, the size of this is directly proportional to the user defined parameter of SD Sequence Duration Since finding the longest interval involves most of the processing and complexity during the process of periodic time interval discovery this approach will benefit the incremental data mining quite significantly VI.GENERALISED  MODEL  FOR  FRAMEWORK T he Generalised model GN shows the discovery process of all data filtration transformation discovery of 


 all longest intervals for each cycle and periodic time intervals Transition Z 1  represents the filtration process of t he time stamped database The process of data transformation is represented by transition Z 2  and the data s egmentation by transition Z 3 Transitions Z 4 and Z 5 show r espectively the Process Switching Mechanism \(PSM\ and Interval Validation Process IVP Transition Z 1  has the f ollowing form  Z 1 l 1 l 2 l 4 l 3 l 4 r 1    l 3  l 4  r 1  l 1  false True  l 2  false True  l 4  W 4_3  W 4_4  W 4_3 223The process of data filtration has finished\224 W 4_4 254 W 4_3  P lace l 1  corresponds to the entrance point for the s tamped database in the GN It is represented by one 002  token which enters the input place with initial characteristic 223a stamped database\224  In place l 2  enters 003  t oken with initial characteristic 223time period \(TP\\224   The 002  token simultaneously with the 003 1  token passes t hrough transition Z 1  and enter place l 4  This place c orresponds to the process of filtration The two tokens merge and form one new token with initial characteristic the result of the united characteristics of the tokens On each transition activation the new token passes through the transition and enters again place l 4  extending its c haracteristic with the current results of the filtration process. After the process finishes the final token moves to place l 3 obtaining as a characteristic 223 filtered database\224 Transition Z 2 has the following form  Z 2  l 3  l 5  l 7  l 6  l 7  r 2    l 6  l 7  r 2  l 3  f  alse True   l 5  f  alse  True  l 7  W 7_6  W 7_7  W 7_6 223The process of data transformation has finished\224 W 7_6 254 W 7_7   T he description of transition Z 2 functioning is similar to t he one of transition Z 1 As a joint place between transitions Z 1  and Z 2  place l 3  do not need any addition explanations T he tokens from place l 3  pass through the transition and e nter place l 7  which corresponds to the process of data t ransformation Place l 5  is an entrance point for the p arameter giving the sequential pattern SP which is represented by one 004  token 004  token enters the net with initial characteristic 223sequential pattern\224 The tokens from places l 3 and l 5 pass simultaneously to place l 7 merge and o btain join characteristic. This characteristic is extended on every transition activation by the current results of the transformation process. After the process finishes the final token moves to place l 6 obtaining as characteristic 223 sequence database\224 The process of data segmentation consists of three consecutive stages splitting into user defined cycles division into user interested granules and granulation according to user defined sequence duration parameter. The form of transition Z 3 is the following  Z 3 l 6 l 8 l 9 l 10 l 12 l 13 l 14 l 11 l 12 l 13 l 14 r 3    l 11  l 12  l 13  l 14   l 6  false true false false  l 8  false true false false r 3  l 9  false false true false  l 10  false false false true  l 12  false W 12_12  W 12_13  false  l 13  false false W 13_13  W 13_14   l 14  W 14_11  false false W 14_14  W12_12  223The process of database division into user defined cycles has not finished\224 W12_13  254 W12_12 W13_13  223The process of database granulation has not finished\224, W13_14 = \254 W13_13, W14_11 = \223The process of database segmentation has finished\224 W14_14  254 W14_11  In places l 8  l 9  and l 10  enter respectively one 005   006  and 007  token with initial characteristics 223cyclicity interval  \(CY\\224  223granularity interval GR\\224 and 223sequence duration SD\\224   At the first activation of the transition the two tokens from places l 6 and l 8 pass simultaneously through it, merge i nto one new token and enter place l 12 At the beginning the n ewly created token obtains composite characteristic It extends its characteristic on every pass through the transition and entering into place l 12  with the current state o f the process of database division into user defined cycles After this process finishes the resulting token simultaneously with the 006 token from place l 9 pass through t ransition Z 3 and enter into place l 13 In this process the two t okens merge into one token with initial characteristic the composition of the characteristics of the parent tokens. Like in the previous case the resulting token enters place l 13  e xtending its characteristic with the current state of the process until a granulated database is obtained. On the next step the obtained token enters place l 14 simultaneously with t he 007 token from place l 10 The two tokens unite each other m erging their characteristics The newly created token passes through transition Z 3 and enters place l 14 until a final g ranulated database is obtained On each entrance into place l 14 the token extends its characteristic with the current s tate of the process of database final granulation. At the end of this process the token moves to place l 11  with a c haracteristic 223segmented database\224 Transition Z 4 has the f ollowing form  Z 3 l 6 l 8 l 9 l 10 l 12 l 13 l 14 l 11 l 12 l 13 l 14 r 3    l 11  l 12  l 13  l 14   l 6  false true false false  l 8  false true false false r 3  l 9  false false true false  l 10  false false false true  l 12  false W 12_12  W 12_13  false  l 13  false false W 13_13  W 13_14   l 14  W 14_11  false false W 14_14  


 W 12_12   223The process of database division into user d efined cycles has not finished\224 W 12_13 254 W 12_12  W 13_13  223 The process of database granulation has not finished\224 W 13_14   254 W 13_13  W 14_11   223The process of database s egmentation has finished\224 W 14_14 254 W 14_11   I n places l 8  l 9  and l 10  enter respectively one 005   006  and 007  token with initial characteristics 223cyclicity interval  \(CY\\224  223granularity interval GR\\224 and 223sequence duration SD\\224   At the first activation of the transition the two tokens from places l 6 and l 8 pass simultaneously through it, merge i nto one new token and enter place l 12 At the beginning the n ewly created token obtains composite characteristic It extends its characteristic on every pass through the transition and entering into place l 12  with the current state o f the process of database division into user defined cycles After this process finishes the resulting token simultaneously with the 006 token from place l 9 pass through t ransition Z 3 and enter into place l 13 In this process the two t okens merge into one token with initial characteristic the composition of the characteristics of the parent tokens. Like in the previous case the resulting token enters place l 13  e xtending its characteristic with the current state of the process until a granulated database is obtained. On the next step the obtained token enters place l 14 simultaneously with t he 007 token from place l 10 The two tokens unite each other m erging their characteristics The newly created token passes through transition Z 3 and enters place l 14 until a final g ranulated database is obtained On each entrance into place l 14 the token extends its characteristic with the current s tate of the process of database final granulation. At the end of this process the token moves to place l 11  with a c haracteristic 223segmented database\224 Transition Z 4 has the f ollowing form  Z 4  l 11  l 17  l 18  l 19  l 15  l 16  l 17  l 18  r 4    l 15  l 16  l 17  l 18    l 11  t  rue false  False  false   r 4  l 17  f  alse  W 17_16  W 17_17  false    l 18  false false W 18_17  true   l 19  f  alse false  True  false   W 17_16   223The process of data segmentation has f inished\224 W 17_17   254 W 17_16  W 18_17   223The PSM has to j ump minimum length parameter steps\224  Initially in place l 18 enters one b  token with initial characteristic 223minimum interval length \(min_ilen\\224   The already segmented database from place l 11 pass i nterval ITVL by interval through transition Z 4  to place l 15 The token from place l 11 passes directly to place l 15 for v alidity check without obtaining any new characteristics The b token moves simultaneously with one of the tokens in place l 19  to place l 17  obtaining as characteristic t he current state of the process of the longest interval LI finding\224  At the end of this process the resulting tokens move to place l 16 and merge with the tokens from the same interval o btaining characteristic 223segments of the longest interval\224 The form of transition Z 5 is  Z 5  l 15  l 19  r 5    l 19   r 5  l 15  t  rue  VII  CONCLUSION  AND  FUTURE  WORK I n this paper the problem of finding the periodic time intervals for a given sequential pattern is addressed The approach presented in this paper divides the main problem into two sub-problems finding the longest intervals for each cycle and discovery of periodic time intervals by using the already discovered longest intervals of each cycle Almost all the data processing and complexity is covered during the process of finding the longest intervals Moreover the second problem is purely based on mining results from the first problem.  Therefore, in this paper we mainly focused on the problem to find all the longest intervals for each cycle To confront the above problem efficiently, we introduced two main search techniques IVP Interval Validation Process\ and PSM \(Process Switching Mechanism\.  In this paper we have presented an effective mining approach for finding all the periodic time intervals for a given sequential pattern. As a future work the process presented in this paper can be extended to find periodic time intervals for all the given sequential patterns in one database scan However to accomplish this task a more complex data-structure/memory management technique needs to be implemented REFERENCES 1  X  Chen and I. Petrounias, Mining Temporal Features in Association Rules, Proc. of PKDD\22299, Prague, Czech Republic, pp.295-300 2  Ozden B Ramaswamy S and Silberschatz A  Cyclic Association Rules in Proceedings of the 14 th   International C onference on Data Engineering 1998 Orlando Florida USA IEEE Computer Society 3  Han, J., Pei, J., and Yin, Y., Mining Segment-Wise Periodic Patterns in Time-Related Databases in Proceedings of the 4 th   International C onference on Knowledge Discovery and Data Mining, 1998: AAAI Press, Menlo Park 4  Yang J Wang W and Yu P.S Mining asynchronous periodic patterns in time series data in Proceedings of KDD 2000 p 275279 5  Huang K.-Y and Change C.-H Asynchronous periodic patterns mining in temporal databases in Proceedings of the International Conference on Databases and Applications DBA'04 2004 Innsbruck, Austria 6  Huang K.-Y and Change C.-H  Mining Periodic Patterns in Sequence Data In Proceedings of the 6th International Conference on Data Warehousing and Knowledge Discovery DaWaK 2004 Zaragoza, Spain: Springer 7  Yang J Wang W and Yu P.S Mining Surprising Periodic Patterns, in Data Mining and Knowledge Discovery, 2004 8 p. 253273 8  Lin W Orgun M.A and Williams G.J  An Overview of T emporal Data Mining in Proceedings of the 1st Australian Data Mining Workshop, 2002  9  C  hen X and Petrounias I  A Framework for Temporal Data Mining, in Proceedings of 9 th International Conference on Database a nd Expert Systems Applications DEXA'98 1998 Vienna Austria: Spring 


 Fig. 8. PSM \(Process Switching Mechanism Move to N ITVL Next Interval 1 2 3 4 5 Time Line Invalid ITVL   a\  SLSI discovery process \(forward mode continues  Jump to 8 th ITVL min_ilen=6 1 2 3 4 5 Time Line 6 7 8 b SLSI found \(process in jumping mode  M o v e  t o  N I T V L  t o  f i n d  n e x t S L S I  p ro c e s s  s w i t c h  t o f o r w a r d m o d e  1 2 3 4 5 T i m e  L i n e L a s t  S L S I f o u n d 6 7 8 9 I n v a l i d I T V L  c \  SLSI found but C ITVL is invalid   Backward Mode 1 2 3 4 5 Time Line LSI found 6 7 8 9 Valid ITVL d  LSI is found and process switches into backward mode   Backward Mode 1 2 3 4 5 Time Line LSI found 6 7 8 9   e\  LSI found- Seed Interval Discovery Process 1 2 3 4 5 Time Line 6 7 8 9 Invalid ITVL SLSI is assign new value of ITVL 7 and the p rocess of searching next LSI proceed again 12 11 10 13  f\  PSM encounters invalid ITVL during the search of SI  1 2 3 4 5 T ime L ine 6 7 8 9 SI Fo u n d D isco v ery p ro c ess o f L I p ro c eed s  g\  SI is found and PSM proceed for the discovery of LI   


