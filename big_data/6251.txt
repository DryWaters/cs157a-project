Overestimation and underestimation in learning and transfer Kanji TANAKA Research Center for Advanced Science and Technology The University of Tokyo Japan Society for the Promotion of Science RCAST / JSPS Tokyo, Japan kanji@fennel.rcast.u-tokyo.ac.jp Katsumi WATANABE Research Center for Advanced Science and Technology The University of Tokyo Japan Science and Technology Agency RCAST / JST Tokyo, Japan kw@fennel.rcast.u-tokyo.ac.jp Abstract Prediction and evaluation errors of self-performance 
overestimation and underestimation\ometimes bring serious consequences. The present study examined possible causes for over- and under-estimations by using a newly devised tasktransfer paradigm. The experiment consisted of two sessions In the first learning session, participants learned rules for button presses in response to particular combinations of digits In the second test session, they performed a similar task with the same rules but in response to English alphabets. In addition, the participants were randomly assigned to one of three tasks with different button configurations: Unchanged 
Reversed, and Flipped. They predicted/evaluated their performance before/after the sessions. The task performance tended to be underestimated for the Reversed task and was overestimated in the Flipped task. These results suggest that differential changes in stimulus-response association lead to underestimation or overestimation Keywords-Metacognition; Overestimation; Underestimation I I NTRODUCTION Since ISO13407 was instituted in 1999, human centeredness has been encouraged and implemented in designing industrial products. In particular, consideration for users' mental models is thought to be essential to 
properly understand system behaviors. Kieras and Bovair showed the role of mental model in learning operation of an unfamiliar devi h ey rev ealed th a t h a v i ng a m e n t al  model for the device improved performance on learning and retaining the operating procedures. Several works also reported that having appropriate mental models was one of the most important factors in problem solving  Singley and Anderson showed that proper transfers of mental models between different text editors could bring reduction in total performance time, keystrokes, and planning time  o llo w s f r o m t h os e stu dies t h at  people can improve performance by constructing and 
transferring mental models. However, we often make mistakes in spite of having appropriate mental models. Why does this type of failure happen? One possible source of human errors is metacognitive overestimation or underestimation Metacognition the ability to monitor and control oneês knowledge, is a basic feature of human cognitive processes 6  7   M e ta c o gniti ve  m o n ito r i ng ha s o f te n b e e n st ud ie d in  experiments in which participants are asked to state some facts and then to evaluate the accuracy of their answers confidence rating\hen, if differences between evaluation or prediction and actual performance \(i.e., overconfidence 
or underconfidence\r, these differences could cause inappropriate actions or consequences. Researchers have offered overconfidence as an explanation for war initiations entrepreneurial failures, and stock market bubbles 11  The definition of overconfidence is the overestimation of oneês actual ability, performance, level of control, or chance of success. As a familiar example, overconfidence was associated with accidental injuries  T h es e s t u d ies  focus on children's overconfidence of physical abilities and its relation accident proneness. Due to its importance research on overconfidence has been influen 16]. A  previous study investigated the features of configural 
response learning requiring simultaneous keypresses with 2 or 3 fingers, similar to the production of chords on the piano As a result, practiced chords were performed faster than reconfigured chords T h is s i m p l y  in dicated th a t  reconfigured stimulus-response could lead to different results compared to practiced chords. Few works of metacognition for configural-response learning have done especially for specific reconfigured stimuli. Then it deserves to be investigated whether differences of specific reconfigured stimuli causes various performance and metacognition It is obvious that making better products and operational systems requires considering actual performance of tasks as 
well as how people think about their own performance and interaction. For instance, even if users improve their performance, they might make mistakes and/or do not perform optimally if they overestimate or underestimate their own performance. In the present study, we examined which tasks would bring overestimation or underestimation by using a newly devised task-transfer paradigm. In particular, we were interested in how differential changes in stimulus-response association between learned and new operations lead to underestimation or overestimation 
2011 International Conference on Biometrics and Kansei Engineering 978-0-7695-4512-7/11 $26.00 © 2011 IEEE DOI 10.1109/ICBAKE.2011.24 83 
2011 International Conference on Biometrics and Kansei Engineering 978-0-7695-4512-7/11 $26.00 © 2011 IEEE DOI 10.1109/ICBAKE.2011.24 81 


II M ETHOD A Participants Fifty-eight people participated in the experiment \(35 males and 23 females; mean age = 22.4 years, standard deviation = 4.45\ All the participants had normal or corrected-to-normal visual acuity and normal motor functions, and were naÔve as to the purpose of this study. All had given their informed consent prior to participation B Procedure The experiment was comprised of two sessions and questionnaires. The participants were asked to predict and evaluate their own performance in the sessions before and after conducting them \(Fig. 1\ the questionnaires, they reported their predicted and evaluated performances in percentage \(e.g., çI think I would be \(was\e 85% in this session Before the experiment, the participants answered questionnaire in terms of self-efficacy. The self-efficacy theory proposes that many behavioral changes operate through a common mechanism: the alternation of the individualês expectations of personal mastery and success  19  T h is th eor y  s t ates t w o t y pe s of e x pectan cie s  exerting powerful influences on behavior. One is outcome expectancy, the belief that certain behaviors will lead to certain outcomes. The other is self-efficacy expectancy, the belief that one can successfully perform current tasks  According to Bandur e lfeff icac y e x pectan c y i s t h e most powerful determinant of behavioral changes because it motivates the initial decision to perform a task, the error expended, and persistence in the face of adversity. For instance, some previous works showed correlations between average grade point and academic self-efficacy. That is, the higher students have academic self-efficacy, the better they can g Sh ere pro po s ed a  S elf e f f icac y Scale  composed of 23 items \(including such as çWhen I make plans, I am certain I can make them worké, çFailure just makes me try harderé, etc e em plo y ed t h i s Sel fefficacy Scale in the present experiment Before the learning session, the experimenter explained how to perform the task. The rules were as follows: \(1\wo digits are randomly selected from ç1é, ç2é, and ç3é, and shown at the screen center. \(2\ two digits are the same press the button corresponding with the digit. For instance if ç11é are shown, press ç1é. \(3\ the two digits differ press the remaining button. For example, if ç12é are shown press ç3 Figure1. The structure of the experiment Figure 2. \(a\ A block of Learning session. \(b\ The configurations of response buttons in the learning session One block consisted of 5 consecutive trials following a 1000-ms fixation point \(Fig. 2a\The participants were instructed to respond as quickly and accurately as possible and told that responses over 1 sec would be regarded as wrong responses. The block was repeated 40 times resulting in 200 trials. The response buttons were arranged in ascending order from the left side \(Fig. 2b\The participants performed 10 habituation trials before the main session In the test session, the participants performed a similar task with English alphabets \(Fig. 3a\he rules were: \(1 Two alphabets are randomly selected from çAé, çBé, çand Cé. \(2\ two alphabets are the same, press the button corresponding with the alphabet. For instance, if çAAé are shown, press çAé. \(3\ the two alphabets differ, press the remaining button. For example, if çABé are shown, press C Figure 3. \(a\ block of Test session. \(b\he configurations of response buttons in the test session 
84 
82 


For the test session, the participants were randomly assigned into one of three tasks that differed the configurations of the response buttons \(Fig. 3b\he Unchanged configuration was çAé, çBé, çCé from the left side. The Reversed configuration was çCé, çBé, çAé from the left side. The Flipped configuration was çBé, çAé, çC from the left side III RESULT A Self-efficacy scale The overall self-efficacy score was calculated by summing up individual scores in 5-point scale \(i.e., 23*5 115 points as full score; mean score= 82.2, standard deviation = 12.29\ Higher scores indicate that participants are more confident with what they do. In order to confirm whether prediction or evaluation in the present experiment would be related with personality trait of self-efficacy, we conducted a correlation analysis. The sum of self-efficacy scale and the average of prediction or evaluation for the test session showed no significant correlation t 41\3 p  0.41 r 0.13\. Hence, the prediction and evaluation of performance in the present study seemed to be independent of participants' self-efficacy B Learning session We excluded participants who did not reach 70 performance in the learning session and participants who showed more than 20% differences between actual score and evaluations because of the lack of ordinary performance and/or metacognition in terms of performance estimation. In total, 15 participants were excluded Fig. 4 shows the results of the learning session. The tasks in the test session were assigned after the learning session; therefore, at the time of the learning session, there must be no difference among the three task groups. A twoway analysis of variance \(ANOVA\ confirmed this; the main effect among three task groups was not significant F 2, 40\82 p 0.45\. On the other hand, the main effect of assessment was significant F 2, 80\8 p 0.001 post hoc Shaffer's method, Score = Evaluation > Prediction p 0.005 Next, we calculated differences between prediction and score \(hereafter referred to as prediction error; prediction score\d evaluation and score \(hereafter referred to as evaluation error; evaluationÖscore\eparately for the three task groups Figure 4. Predicted, evaluated and actual performances in the learning session. Errorbar shows one standard error of mean The main effect of task group was not significant F 2, 40 0.64 p 0.53\hereas the difference between prediction error and evaluation error reached significance F 1, 40 10.9 p 0.005, evaluation error \(mean = -0.92, standard deviation = 6.59\ediction error \(mean = -5.15, standard deviation = 9.86\\Thus, there was no difference among the three task groups in terms of actual performance performance prediction, and performance evaluation in the learning session. However, there was a general tendency of underestimation of performance prediction C Test session Fig. 5 shows the results of the test session. A two-way ANOVA revealed the significant main effect among the three task groups F 2, 40\ = 4.40 p 0.05; post hoc Shafferês method, Unchanged > Fliped = Reversed p  0.01\ while the main effect of assessment was not significant F 2, 80\ 0.50 p 0.61\ A significant interaction between task group and assessment was found F 4, 80\48 p 0.001\alyses of simple main effects for the interaction indicated that the actual scores were significantly different among the three task groups F 2 40\65 p 0.001; post hoc Shafferês method Unchanged = Reversed > Flipped p 0.01\. In the Flipped task, the prediction and evaluation were significantly higher than the actual scores F 2, 26\6.79 p 0.01; post hoc Shafferês method, Prediction = Evaluation > Score p  0.05 An additional two-way ANOVA on prediction and evaluation errors revealed the significant main effect of task group F 2, 40\ = 9.667 p 0.001; post hoc Shaffer's method, Flipped > Reversed = Unchanged p 0.001\but there was no significant effect between prediction and evaluation errors F 1, 40\ 1.17 p 0.29 
85 
83 


Figure 5. Predicted, evaluated and actual performances of the test session Errorbars show standard error of mean There was a significant transfer from the learning session to the test session \(Fig. 6\. Paired t-tests revealed marginally significant differences bewteen actual scores of the learning session and those of the test session for the Unchanged task group t 16\1.98 p 0.06, test > learning Figure 6 Scores in the test session as a function of scores in the learning seesion The dashed diagonal line indicates the identity function \(y = x\ Dots above the dashed diagonal line indicate that transfers occur in the test session from the learning session. The other three lines show regreesion line s accounting for scores on the three task groups In order to verify whether the participants in the Unchanged task group realized the learning effect, we examined differences in actual score \(i.e., transfer\d differences in evaluation \(i.e., realization of tansfer between the learning and test sessions \(Fig. 7\he degree of transfer did not significantly correlated with the degree of realization of transfer t 15\ -1.56 p 0.14 r 0.37 Figure 7. Difference between prediction in the test session and evaluation in the learning session as a function od difference between actual scores in the test session and those in the learning session. The diagonal line indicates the identity function \(y = x IV D ISUCUSSION In the present study, we examined what types of changes in tasks could lead to overestimation or underestimation of performance. The results can be summarized as follows: \(1 The Flipped task in the test session was the most difficult in terms of actual performance. \(2\The Flipped configuration led to overestimation in both prediction and evaluation. \(3 The participants in the Unchanged group did not correctly evaluate the learning effect from the learning session underconfidence with practice; UWP In terms of difficulty in the test session, the Flipped task was the most difficult. Practiced configurations of buttons are generally performed better than reconfigured buttons  Although we expected to see a reduced performance with the Reversed configuration, we did not find significant reduction. This might be due to that the present task was relatively easy to perform. Regarding the result that the Flipped task was more difficult than the Unchanged and Reversed task, it is notable that previous studies showed the partial reversal was more difficult to learn than the full reversal  2 3  For example, Sanders trained secondgrade children to discriminate "winner" cards \(a green T and a black outline square\rom "loser" cards \(a yellow T and a black outline triangle  In th e fu ll rev ersa l con d ition the winner and loser cards were swapped. In the partial reversal condition, one of the components was reversed whereas the other remained the same. The participants found the full reversal easier to acquire than the partial reversal. These findings are consistent with the idea that people develop categorical representations for stimulusresponse association and suggest that full reversal shifts were easy to learn because the association between the stimuli and representation coul d be done at a categorical level Next, we discuss the differences between prediction or evaluation and actual performance. The participants who 
86 
84 


performed the Flip task overestimated their performance both in prediction and evaluation compared to those who performed the Unchanged and Reversed tasks. Generally when actual performance is high, people tend to underestimate their own performances. When actual performance is low, people would overestimate themselves  particu l arly i n perf orm an ce of  g e n e ral kn o w ledge questions  Ov eres t i m a t i on of perf or m a n ce i s  m o st  likely to occur on difficult tasks, on difficult items, or when success is less likely [26  2 9  T h e p r esen t resu lts f it w e ll  with the previous study as the Flipped task was the most difficult task of three and made participants have overestimation. In other words, this finding indicates that performance of not only general knowledge question but also motor learning could lead to overestimation or underestimation in the specific condition. Although the Reversed task group showed a tendency toward underestimation, it did not reach significance. It remains to be investigated whether an easier cognitive task would lead to underestimation The participants in the Unchanged group did not evaluate the learning effect correctly. This UWP effect was found robustly across several experimental manipulations; it occurs irrespective of feedback, self-paced versus fixed-rate presentation, different incentives for correct performance and conditions producing different degrees of knowledge  In a recen t s t u d y us i n g t h e m e m o r y f or p as t tes t, Fi n n  remarked a possible mechanism of i n n  hypothesized that judging of learning effects would be constrained by performance in previous trials. For example people could have proper judgments for learning effects on items that they answered correctly in previous trials However, people could not judge appropriately learning effects on items that they answered wrongly in the previous trial. That is, people do not appreciate occurring learning effects in the current trial because they are concerned about several items that they answered inappropriately in previous trials The results of the present study may have several implications for product and work design. Firstly, the flipped button configuration \(i.e., partial change\n produce overconfidence and overestimation. Because numerous product functions are recently assigned to limited operational buttons, complexity of operation has increased It would be essential to ponder not to allot flipped button configurations in design. Secondly, the UWP effect occurred in the test session from the learning session Underestimation would cause inappropriate consequences as well as overestimation would do. In order not to being influenced with the UWP effect, reducing errors in operating for the first time might play a key role V C ONCLUSION Metacognition of one's own ability and performance constitutes one of the determining factors of human performance and human error. The present study investigated overestimation and underestimation for performance by using the new task-transfer paradigm. The results showed that the partial change in stimulus and response association \(Flipped condition\roduced the worst performance. The task performance tended to be underestimated when the stimulus-response association was entirely reversed \(Reversed condition\ but was overestimated in the Flipped condition. These results suggest that differential changes in stimulus-response association lead to underestimation or overestimation. Further investigations are warranted to elucidate these issues and to examine how these findings may be related to the real-world learning and transfer of task operations A CKNOWLEDGMENT This work was supported by Grant-in-Aid for JSPS Fellows and Japan Science and Technology Agency R EFERENCES  G D E  Ki eras and S  Bo vai r  T h e Ro l e o f a M e n t al M o d e l  in Learning to Operate a Device Cognitive Science 1984 pp.255Ö273 2 F. G  H a la sz a nd T  P  M o ra n Me n ta l m ode ls a nd pro b le m  solving in using a calculator Proceedings of the SIGCHI conference on human factors in computing systems 1983 pp.212Ö216 3 C L  B o rg m a n T he us e rês m e n t a l m ode l of a n inf orm a tion  retrieval system: an experiment on a prototype online catalog International Journal of Man-Machine Studies  1986, pp.47Ö64 4 M. K Sing le y  a nd J. R A nde rson  T ra nsfe r of te x t e diting  skill International Journal of Man-Machine Studies 1985 pp.403Ö423 5 M. K  S i ng le y  a nd J  R. A nde rs o n  The Transfer of Cognitive Skill MA: Harvard University Press, Cambridge, 1989  J  F l avel l  and H W e l l m an   Metamemory NJ: Erlbaum Hillsdale, 1977 7 A K o ria t  M o n it oring  one s ow n k n o w l e d g e during s t udy  A cue-utilization approach to judgments of learning Journal of Experimental Psychology: General 1997 pp.349Ö370  M  G l aser an d M  W e b e r Overco n f i d en ce an d t r ad i n g  volume Geneva Risk and Insurance Review 2007, pp.1Ö36  D  D  P  Joh n s on   Overconfidence and war: The havoc and glory of positive illusions MA: Harvard University Press Cambridge, 2004 1 U M a l m en d i er an d G  T a t e  CE O o v erco n f i d en ce an d corporate investment Journal of Finance 2005, pp.2661 2700 1 M  A  Neal e an d M  H Bazerman  T h e e f f ect s o f f r a m i n g  and negotiator overconfidence on bargaining behaviors and outcomes Academy of Management Journal 1985, pp.34 49 12 J. M Plum e r t R e l a tions be tw e e n c h il dre n s ov e r e s tim a tion  of their physical abilities and accident proneness Developmental Psychology 1995, pp.866-876 1 J M   P l u m ert  an d D C S c h w eb el  S o c i a l and Temperamental Influences on Childrenês, Overestimation of Their Physical Abilities: Links to Accidental Injuries 
87 
85 


Journal of Experimental Child Psychology 1997, pp.317 337 14 K  D a nie l, D  H i r s h l e i f e r  a nd A  S ubr a h m a ny am  I nv e s tor  psychology and s ecurity market unde r- and ove rreactions  Journal of Finance 1998, pp.1839Ö1885 15 D  G a rc i a F. Sa ng iorg i, a n d B   U r os e v ic  O ve rc onf ide nc e  and market efficiency with heterogeneous agents Economic Theory 2007, pp.313Ö339 16 E. H o e l z l a n d A  Rus tic hin i O v e rc onf ide nt: D o y ou put  your money on it Economic Journal 2005, pp.305Ö318 17 E. H a z e ltine a nd P  A p a r ic io C onf ig ura l re s pons e le a r ning   The acquisition of a nonpredictive motor skill Journal of Experimental Psychology: Human Perception and Performance 2007, pp.1451-1467 18 A  B a ndur a   S e l f ef f i c a c y  tow a r d a unif y ing the or y of  behavioral change Psychological Review 1997, pp. 191215 19 A  B a ndur a   S e l f ef f i c acy  m e cha nis m in hum a n a g e n cy    American Psychologist 1982, pp.122-147 2 M  S h erer an d J E  M a dd u x  T h e sel f e ff i cac y scal e  construction and validation Psychological Reports 1982 pp. 663-671 21 S. B  R o bbi ns  K  L a uv e r H  L e D  D a v i s  R  L a ng ley a n d  A, Carlstrom, çDo Psychosocial and Study Skill Factors Predict College Outcomes?, A Meta-Analysis Psychological Bulletin 2004, pp.261Ö288 2 B S a nd ers F act o r s aff ect i n g reversal an d no nreversal sh i f t s  in rats and children", Journal of comparative and Physiological Psychology, 1971, pp.192-202 23 A  J W ills, M. No ury N. J. Mobe rly a nd M. Ne w port  Formation of category representations Memory and Cognition 2006, pp.17Ö27 24 D  A  Mo ore  a n d  P  J  H e a l y   T he T r ouble W ith  Overconfidence Psychological Review 2008, pp.502Ö517 25 L  Bre nne r D  G r iff i n, a n d D  J   K o e h le r M ode li ng  pa tte rns  of probability calibration with random support theory Diagnosing case-based judgment Organizational Behavior and Human Decision Processes 2005, pp. 64Ö81 26 S. L i c h te ns te in a n d B   Fis c h h o f f   D o t hos e w ho k now m o re  also know more about how much they know Organizational Behavior and Human Decision Processes  1977, pp.159Ö183 27 K. A  Burson, R. P. L a rric k a nd J. Kla y m a n S k ille d or unskilled, but still unaware of it: How perceptions of difficulty drive miscalibration in relative comparisons Journal of Personality and Social Psychology 2006, pp.60 77 28 D  W  G r i f f i n, a nd A  T v e r sky  T he  w e ig hing of e v ide nc e and the determinants of confidence Cognitive Psychology  1992, pp.411Ö435 29 A  K o r i a t L  She f f e r a nd H  Ma  a y a n C om pa r i ng  Objective and Subjective Learning Curves: Judgments of Learning Exhibit Increased Underconfidence With Practice Journal of Experimental Psychology: General 2002 pp.147Ö162 30 B  F i n n a n d J  M e t c a l f e   T h e R o l e o f M e m o r y f o r P a s t T e s t  in the Underconfidence With Practice Effect Journal of Experimental Psychology: Learning Memory, and Cognition  2007, pp.238-244 
88 
86 


Output? The complete set of frequent patterns Method:  FP-growth\(FP-tree, null Procedure FP-growth\(Tree  1 single prefix-path FP-tree 2 3 274 4 node replaced by a null root 5 denoted as the path P do 6 minimum support of nodes in 7 P generated 8 9 Mining multipath FP-tree 10 ai .support 11 conditional FP-tree Tree 12 13 Tree 14 Q generated 15 freq pattern set\(P Q freq pattern set\(P Q Using the FP-growth algorithm, getting the frequent item sets F of the database D A1:6},{B1:4},{B2:2},{B3:2},{C3:2},{D4:2},{A1,B1 2},{A1,B2:2},{A1,B3:2},{B1,C3:2},{B1,D4:2},{C3,D4:2 B1,C3,D4:2 C. The process of association rules 1 above ,continuing the  association rule mining If A ? B = ?  and A ? ? B is also a frequent set .Then calculate the path degree of credibility P = [support \(AUB A 2 


B and store it 3 association rules Else return to 1 The interest in the site combined with the previous degree of experience, setting the minconf as 0.30, the final rules by the association is A1=>B1;B1=>C3;C3=>D4; B1=>D4; \(B1,C3 Association rules can be drawn from the above the correlation between pages, understanding the user interface on the site who is interested in, mining the user preferred path to provide more valuable data to the construction site IV.  CONCLUSIONS In this paper, using the mining association rules those based on FP-Grow algorithm, combining with interest measure and website users to view the topology of the user the best access time, all the data mining are based on the web use log data source, analysising the users behavior to find the user s browsing mode to provide valuable data for the optimization of the site REFERENCES  1] Jiawei Han and Micheline Kamber Data Mining: Concepts and Techniques \(2nd edition 2]  Bamshad Mobasher .Web Usage Mining .Springer Berlin Heidelberg 2007, 449-483 3]  Rskesh Agrawal, Ramakrishnan Strikant .Fast Algorithms for Mining Association Rules.Visting from the Department of Computer Science ,University of Wisconsin,Madison.1-32 4]  Jaideep Srivastava and Robert Cooley U?sage Mining: Discovery and Applications of Usage Patterns from Web Data. ACM SIGKDD Explorations  Newsletter .2000,1\(2 5]  Jiawei Han ,Jian Pei,Yiwen Yin ,Runying Mao .Mining Frequent Patterns without Candidate Generation: A Frequent-Pattern Tree Approach.2004,53-87  275 


The third phase extracts performance signatures by capturing frequently observed correlations among metrics from the historical dataset. Many metrics will exhibit strong correlations under normal operation. For example, medium request arrival rate would lead to medium usage of system processing power, and medium throughput. Thus, one signature of frequently observed correlation could be {Arrival Rate Medium, CPU utilization = Medium, Throughput = Medium To extract metric correlations, we use two data mining concepts: frequent item set and association rule. A frequent item set describes a set of metrics that appear together frequently. In this paper, we use the Apriori algorithm [5] to discover the frequent item sets. Association rules can be derived from a frequent item set. For example, Figure 6 shows one of the three association rules that can be derived from the frequent item set in the previous example. An association rule has a premise and a consequent. The rule predicts the occurrence of the consequent based on occurrences of the premise. The Apriori uses support and confidence to reduce the number of candidate rules generated Support is defined as the frequency at which all items in an association rule are observed together. Low support means that the rule occurs simply due to chance and should not be included in our analysis Confidence measures the probability that the rules premise leads to the consequent. For example, if the rule in Figure 6 has a confidence value close to 1, it means that when arrival rate and throughput are both medium, there is a high tendency that medium CPU utilization will be observed We apply the association rules extracted from the historical dataset to the new test and flag metrics in the rules that have significant change in confidence, as defined in eqn. \(1    1     2 


3 Confb and Confn represent the confidence of a rule in the historical dataset and the new test respectively. Confidence change is defined in terms of cosine distance, which measures the similarity between two vectors. Since Confb and Confn are scalar values, we must convert them into vector form with eqn 2 and 3 in order for the cosine distance to be calculated The confidence change for a rule will have a value between 0 and 1. A value of 0 means the confidence for a particular rule has not changed in the new test; value of 1 means the confidence of a rule is completely different in the new test. If the confidence change for a rule is higher than a specified threshold, we can conclude that the behavior described by the rule has changed significantly in the new test and the metrics in the rules consequent are flagged. For example, if the rule in Figure 6 drops in confidence from 0.9 to 0.2 in the new test, it indicates that medium arrival rate and throughput would no longer be associated with medium CPU utilization for the majority of the time. As a result, CPU utilization exhibits a significant change of behavior and should be investigated 4. Report generation In the last phase, we generate a report of the flagged metrics that highlights the association rules that the metrics violate. To further help a performance analyst to prioritize her time, we rank the metrics by level of severity \(eqn. 3 the report lists the violated rules ordered by confidence change eqn. 1 3  Severity represents the fraction of time in the new test that contains the flagged metric. Severity ranges between 0 and 1. If there are only a few instances where the metric is observed to be problematic, the severity will have a value close to 0. On the other hand, if the metrics are violated many times, severity will have a value close to 1 \(Figure 1a flagged in the report, we can conclude that the new test  Figure 6. Example of an Association Rule For each metric High = All values above the medium level Medium = Median +/- 1 standard deviation Low = All values below the medium level 


Figure 5. Definition of Metric Discretization Levels 36 performance has no performance regression and can be included in the historical dataset for analysis of future tests V. CASE STUDY We conducted three case studies on two open source ecommerce applications and a large enterprise system. In each case study, we wanted to verify that our approach can reduce the amount of data a performance analyst must analyze and the subjectivity involved, by automatically reporting a list of potential problematic metrics We manually injected faults into the test scenarios of the two open source e-commerce systems. This allows us to assess our approach using the precision \(eqn. 4 eqn. 5 evaluation metrics 4 5 High precision and recall mean that our approach can accurately detect most performance problems. Performance analysts can reduce the effort required for an analysis by investigating the flagged metrics. Note that false positives are metrics that are incorrectly flagged \(they do not lead to a performance regression For the large enterprise system, we use the existing performance metrics collected by the Performance Engineering team as the input of our technique. We seek to compare the results generated by our approach against the performance analysts observations. In cases where our approach flagged more metrics than the performance analysts noted, we verify the additional problematic metrics with the organizations Performance Engineering team to determine if the metrics truly represent performance regressions. Since we do not know the actual number of performance problems, we can only provide the precision of our approach We use the average precision and recall to show the overall performance of our approach across all test scenarios for each system. Average precision and recall combine the precision eqn. 6 eqn. 7 t1,t2 , ,tk performance of our approach in each case study   


 6    7  Research Prototype: Our research prototype is implemented in Java and uses the Weka package [20] to perform various data-mining operations. The graphs in the performance analysis reports are generated with R [4 A. Studied System: Dell DVD Store System description: The Dell DVD Store \(DS2 application [3] is an open source simulation of an online ecommerce website. It is designed for benchmarking Dell hardware. DS2 includes basic e-commerce functionalities such as user registrations, user login, product search and purchase DS2 consists of a back-end database component, a Web application component, and driver programs. DS2 has multiple distributions to support different languages such as PHP, JSP or ASP and databases such as MySQL, Microsoft SQL server and Oracle. The load driver can be configured to deliver different mixes of workload. For example, we can specify the average number of searches and items per purchase In this case study, we have chosen to use the JSP distribution and a MySQL database. The JSP code runs in a Tomcat container. Our load consists of a mix of use cases including user registration, product search, and purchases Data collection: We collected 19 metrics as summarized in table 2. The data is discretized into 2-minute intervals. We ran 4 one-hour performance regression tests. The same load is used in tests A, B, and C. Our performance signatures are derived from Test A during which normal performance is assumed. For tests C and D, we manually inject faults into either the JSP code or the load driver settings to simulate implementation defects and performance analysts mistakes. The types of faults we injected are commonly used in other studies [13]. Prior to the case study, we derive a list of metrics that are expected to show performance problems, as summarized in Table 3. The Recall of our approach is calculated based on the metrics listed in Table 3  


TABLE II.     SUMMARY OF METRICS COLLECTED FOR DS2 Load Generator Processor Time Orders/minute Network Bytes Sent/sec Network Bytes Received/Sec Tomcat Processor Time Threads Virtual Bytes Private Bytes MySQL Processor Time Private Bytes Bytes written to disk/sec Context Switches/sec Page Reads/sec Page Writes/sec Committed Bytes In Use Disk Reads/sec Disk Writes/sec I/O Reads Bytes/sec I/O Writes Bytes/sec TABLE I.   AVERAGE PRECISION AND RECALL of Test Scenarios Duration per Test hours Size of Data per Test Avg Precision Avg Recall DS2 4 1 360 KB 100% 52 JPetStore 2 0.5 92 KB 75% 67 Enterprise System 13 8 4.5 MB 93% N/A  


37  Analysis of Test B: The goal of this experiment is to show that the rules generated by our approach are stable under normal system operation. Since Test B shares the same configuration and same load as Test A, ideally our approach should not flag any metric Our prototype did not report any problematic metric in Test B. The output is as expected, since Test B uses the same configuration as Test A and no performance bug was injected Analysis of Test C: In test C, we injected a databaserelated bug to simulate the effect of an implementation error This bug affects the product browsing logic in DS2. Every time a customer performs a search on the website, the same query will be repeated numerous times, causing extra workload for the backend database and Tomcat server Our approach flagged a database related metric \(# Disk Reads/sec Threads and # private bytes signaling that the metrics are violated during the whole test The result agrees with the nature of the injected fault: each browsing action generates additional queries to the database As a result, an increase in database transaction leads to an increase of # Disk Reads/sec. When the result of the query returns, the application server uses additional memory to extract the results. Furthermore, since each request would take longer to complete due to the extra queries, more threads are created in the Tomcat server to handle the otherwise normal workload. Since 3 out of 6 expected problematic metrics are detected, the precision and recall of our approach in Test C are 100% and 50% respectively Analysis of Test D: We injected a configuration bug into the load driver to simulate that a wrongly configured workload is delivered to the system. This type of fault can either be caused by a malfunctioning load generator or by a performance analyst when preparing for a performance regression test [14 In the case where a faulty load is used to test a new version of the system, the assessment derived by the performance analyst may not depict the actual performance of the system under test In Test D, we double the visitor arrival rate in the load driver. Furthermore, each visitor is set to perform additional browsing for each purchase. Figure 7 below shows the violated 


metrics reported by our prototype. The result is consistent with the nature of the fault. Additional threads and memory are required in the Tomcat server to handle the increased demand Furthermore, the additional browsing and purchases lead to an increase in the number of database reads and writes. The extra demand on the database leads to additional CPU utilization Because of the extra connections made to the database caused by the increased number of visitors, we would expect the # context switch metric in the database to be high throughout the test. To investigate the reason for the low severity of a databases context switch rate \(0.03 examined the rules flagged the # context switch metric. We found that the premises of most rules that flagged the context switch metric also contain other metrics that were flagged with high severity. Consequently, the premises of the rules that flagged # context switch are seldom satisfied resulting in the low detection rates of the # context switch metrics. Since 7 out of 13 expected metrics are detected, the precision and recall of our approach in this test are 100% and 54% respectively B. Studied System: JPetStore System description: JPetStore [1] is a larger and more complex e-commerce application than DS2. JPetStore is a reimplementation of Sun's original J2EE Pet Store and shares the same functionality as DS2. Since JPetStore does not ship with a load generator, we use a web testing tool to record and replay a scenario of a user logging in and browsing items on the site Data collection: In this case study, we have conducted two one-hour performance regression tests \(A and B performance signatures are extracted from Test A during which caches are enabled. Test B is injected with a configuration bug in MySQL. Unlike the DS2 case study where the configuration bug is injected in the load generator, the bug used in Test B simulates a performance analysts mistake to accidentally disable all caching features in the MySQL database. Because of the nature of the fault, we expect the following metrics of the database machine to be affected: CPU utilization, # threads context switches, # private bytes, and # I/O read and write bytes/sec Analysis of Test B: Our approach detected a decrease in memory footprint \(# private bytes sec in the database, and increase in # disk reads/sec and 


threads in the database. The I/O metrics include reading and writing data to network, file, and device. These observations align with the injected fault: Since the caching feature is turned off in the database, less memory is used during the execution of the test. In exchange, the database needs to read from the disk for every query submitted. The extra workload in the database  Figure 7. Performance Regression Report for DS2 Test 4 \(Increased Load TABLE III.     SUMMARY OF INJECTED FAULTS FOR DS2 Test Fault Injected Expected Problematic metric A No fault N/A B No fault No problem should be observed C Busy loop injected in the code responsible for displaying  item search results Increase in # I/O reads bytes /sec, and disk read/sec in database Increase in # threads, # private and virtual bytes, and CPU utilization in the Tomcat server D Heavier load applied to simulate error in load test configuration Increase in CPU utilization, # threads private and virtual bytes in the Tomcat server Increase in database CPU utilization disk reads, writes and I/O read bytes per second, and # context switches Increase in # orders/minute and network activities in the load generator 38 translates to a delay between when a query is received and the result is sent back, leading to a decrease in # IO write bytes/sec to the network Instead of an increase, an unexpected drop of the # threads was detected in the database. Upon verifying with the raw data for both tests, we found that the thread count in Test A \(with cache without cache 


and 21 respectively. Upon inspecting the data manually, we do not find that the decrease of one in thread count constitutes a performance problem and this is therefore a false positive Finally, throughout the test, there is no significant degradation in the average response time. Since 4 out of 6 expected problems are detected, our performance regression report has a precision of 75% and recall of 67 C. Studied System: A Large Enterprise System System description: Our third case study is conducted on a large distributed enterprise system. This system is designed to support thousands of concurrent requests. Thus, performance of this system is a top priority for the organization. For each build of the software, performance analysts must conduct a series of performance regression tests to uncover performance regressions and to file bug reports accordingly. Each test is run with the same workload, and usually spans from a few hours to a few days. After the test, a performance analyst will upload the metric data to an internal website to generate a time series plot for each metric. This internal site also serves the purpose of storing the test data for future reference. Performance analysts then manually evaluate each plot to uncover performance issues. To ensure correctness, a reviewer must sign off the performance analysts analysis before the test can be concluded. Unfortunately, we are bounded by a NonDisclosure Agreement and cannot give more details about the commercial system Data collection: In this case study, we selected thirteen 8hour performance regression tests from the organizations performance regression testing repository. These tests were conducted for a minor maintenance release of the software. The same workload was applied to all tests. In each test, over 2000 metrics were collected Out of the pool of 13 tests, 10 tests have received a pass status from the performance analysts and are used to derive performance signatures. We evaluated the performance of the 3 remaining tests \(A, B and C the performance analysts assessment \(summarized in table 4 In the following sections, we will discuss our analysis on each target test \(A, B and C Analysis of Test A: Using the history of 10 tests, our approach flagged all throughput and arrival rate metrics in the system. The rules produced in the report imply that throughputs 


and arrival rates should fall under the same range. For example component A and B should have similar request rate and throughput. However, our report indicates that half of the arrival rates and throughput metrics are high, while the other half is low. Our approach has successfully uncovered problems associated with the arrival rate and throughput in Test A that were not mentioned in the performance analysts report. We have verified our finding with a performance analyst. Our performance regression report has a precision of 100 Analysis of Test B: Our approach flagged two arrival rate metrics, two job queue metrics \(each represents one subprocess consulting with the time-series plots for each flagged metric as well as the historic range, we found that the # database scans/sec metric has three spikes during the test. These spikes are likely the cause of the rule violations. Upon discussing with a performance analyst, we find that the spikes are caused by the systems periodic maintenance and do not constitute a performance problem. Therefore, the # database scans/sec metric is a false positive. Our performance analysis report has a precision of 80 Analysis of Test C: Our approach did not flag any rule violation for this test. Upon inspection of the historical value for the metrics noted by the performance analyst, we notice that the increase of # database transactions/sec observed in Test C actually falls within the metric historical value range. Upon discussing with the Performance Engineering team, we conclude that the increase does not represent a performance problem. In this test, we show that our approach of using a historical dataset of prior tests is more resistant to fluctuations of metric values. Our approach achieves a precision of 100 The case studies show that our approach is able to detect problems in metrics when the faults are present in the systems Our approach detects problematic metrics with high precisions in all three case studies. In our case studies with the two open source systems, our approach is able to cover 50% and 67% of the expected problematic metrics VI. DISCUSSION AND FUTURE WORK A. Quantitive Techniques Although there are existing techniques [10, 11] to correlate anomalies with performance metrics by mining the raw performance data without discretization, these techniques 


usually assume the presence of Service Level Objectives \(SLO that can be used to determine precisely when an anomaly occurs. As a result, classifiers that predict the state of SLO can be induced from the raw performance data augmented with the SLO state information. Unfortunately, SLOs rarely exist during development. Furthermore, automated assignment of SLO states by analyzing metric deviations is also challenging as there could be phase shifts in the performance tests, e.g., the spikes do not align. These limitations prevent us from using classifier based techniques to detect performance regression TABLE IV.      SUMMARY OF ANALYSIS FOR THE ENTERPRISE SYSTEM Test Performance Analysts Report Our Findings A No performance problem found Our approach identified abnormal behaviors in system arrival rate and throughput metrics B Arrival rates from two load generators differ significantly Abnormally high database transaction rate High spikes in job queue Our approach flagged the same metrics as the performance analysts analysis with one false positive C Slight elevation of database transactions/sec. No metric flagged  39 B. Sampling period and Metric Discretization We choose the size of time interval for metric discretization based on how often the original data is sampled. For example an interval of 200 seconds is used to discretize data of the enterprise system, which was originally sampled approximately every 3 minutes. The extra 20 second gap is used because there was a mismatch in sampling frequencies for some metrics. We also experimented with different interval lengths. We found that less metrics are flagged as the length of the interval increases, while precision is not affected 


In our case studies, we found that the false negatives metrics that were expected to show performance regressions but were not detected by our approach no rule containing the problematic metrics was extracted by the Apriori algorithm. This was caused by our discretization technique sometimes putting all values of a metric that had large standard deviation into a single level. Candidate rules containing those metrics would exhibit low confidence and were thus pruned. In the future, we will experiment on other discretization techniques, such as Equal Width Interval Binning C. Performance Regression Testing Our approach is limited to detecting performance regressions. Functional failures that do not have noticeable effect on the performance of the system will not be detected Furthermore, problems that span across the historical dataset and the new test will not be detected by our approach. For example, no problem will be detected if both the historical dataset and the new test show the same memory leak. Our approach will only register when the memory leak worsens or improves D. Passed Tests The historical dataset from which the association rules are generated should contain tests that have the same workload configuration, preferably same hardware, and exhibit correct behavior. Using tests that contain performance problems will decrease the number of frequent item sets extracted, making our approach less effective in detecting problems in the new test. In our case study with the enterprise system, we applied the following measure to avoid adding problematic tests to our historical dataset We selected a list of tests from the repository that have received a pass status from the performance analyst We manually examined the performance metrics that are normally used by a performance analyst in each test from the list of past test to ensure no abnormal behavior was found E. System Evolution and Size of Training Data The system is often updated to support new environments or requirements. These updates may lead to changes in performance. A large variability in metric values will negatively affect the confidence of association rules generated 


in our approach. Therefore, it is necessary to update the set of tests included in the historical dataset. We are currently studying the effect of using a sliding window to select prior tests to include in the historical dataset. A sliding window allows us to automatically discard outdated tests that no longer reflect the current systems performance. However, the optimal size of the sliding window will likely be project-dependent since each project has different release frequency Alternatively, the historical dataset can also be derived from within the run. For example, the first hour of the current test can be used to derive performance signatures. Assuming that the system runs correctly during the first hour, the performance signature generated from this historical dataset will be useful to assess the stability of the system F. Hardware Differences In practice, performance regression tests of a system can be carried out on different hardware. Furthermore, third party components may change in between tests. In the future, we plan to improve our learning algorithm so that, given a new test, our tool will automatically select the tests from the repository with similar configurations G. Automated Diagnosis Our approach automatically flags metrics by using association rules that show high deviations in confidence between the new tests and the historical dataset. These deviations represent possible performance regressions or improvements and are valuable to performance analysts in assessing the system under test. Performance analysts can adjust the deviation threshold to restrict the number of rules used and, thus, limit the number of metrics flagged. Alongside with the flagged metrics, our tool also displays the list of rules that the metric violated. Performance analysts can inspect these rules to understand the relations among metrics. From our case study, we notice that some of the rules produced are highly similar. In the future, we will research for ways to merge similar rules to further condense information for performance analysts to analyze The association rules presented in our performance regression report represent metric correlations rather than causality. Performance analysts can make use of these correlations to manually derive the cause of a given problem VII. RELATED WORK 


Our goal in this work is to detect performance problems in a new test using historical data. Existing approaches monitor or analyze a system through one of two sources of historical data execution logs and performance metrics A. Analyzing Execution Logs Reynolds el al. [18] and Aguilera et al. [22] developed various algorithms for performance debugging on distributed systems. Their approach analyzes message trace of system components to infer the dominant causal paths and identify the components that account for a significant fraction of the systems latency. Unfortunately, the accuracy of the inferred paths decreases as the degree of parallelism increases, leading to low precision in identifying problematic components. Our approach is different from Reynoldss and Aguileras in that we pinpoint performance issues on the metric level rather than locating the system components that contribute significantly to system latency. Jiang et al. introduce a technique [14] to 40 identify functional problems in a load test from execution logs The authors extended this approach to analyze performance in scenarios as well as in the steps of each scenario [13]. Chen et al. proposed Pinpoint [21] to locate the subset of system components that are likely to be the cause of failures. Our work is different from Pinpoint in that Pinpoint focuses on identifying system fault rather than performance regression which can occur even when the system functions correctly In contrast to the above studies, which analyze execution logs, our approach analyzes performance metrics to identify performance problems B. Analyzing Performance Metrics Bondi [9] presented a technique to automatically identify warm-up and cool-down transients from measurements of a load test. While Bondis technique can be used to determine if a system ever reaches a stable state in the test, our approach can detect performance problems at the metric level Cohen et al. [11, 12] applied supervised machine learning techniques to induce models on performance metrics that are likely to correlate with observed faults. Bodik et al. improved Cohens work [8] by using logistic regression. Our approach is different from the above work as we do not require knowledge of violations of Service Level Objectives Jiang et al. proposed an approach [16] for fault detection 


using correlations of two system metrics. A fault is suspected when the portion of all derived models that report outliers exceeds a predefined threshold. Our approach is based on frequent item sets that can output correlations of more than two metrics. Performance analysts can leverage these metric correlations to better understand the cause of a fault. Jiang et al 15] proposed an approach to identify clusters of correlated metrics with Normalized Mutual Information as similarity measure. The authors were able to detect 77% of the injected faults and the faulty subsystems, without any false positives While the approach in [15] can output only the faulty subsystems, our approach can detect and report details about performance problems, including metrics that deviate from the expected behaviors VIII. CONCLUSIONS It is difficult for performance analysts to manually analyze performance regression testing results due to time pressure large volumes of data, and undocumented baselines Furthermore, subjectivity of individual analysts may lead to incorrect performance regressions being filed. In this paper, we explored the use of performance regression testing repositories to support performance regression analysis. Our approach automatically compares new performance regression tests to a set of association rules extracted from past tests. Potential performance regressions of system metrics are presented in a performance regression report ordered by severity. Our case studies shows that our approach is easy to adopt and can scale well to large enterprise system high precision ACKNOWLEDGMENT We are grateful to Research In Motion \(RIM access to the enterprise application used in our case study. The findings and opinions expressed in this paper are those of the authors and do not necessarily represent or reflect those of RIM and/or its subsidiaries and affiliates. Moreover, our results do not in any way reflect the quality of RIMs products REFERENCES 1] iBATIS JPetStore, http://sourceforge.net/projects/ibatisjpetstore 2] MMB3, http://technet.microsoft.com/enus/library/cc164328%28EXCHG.65%29.aspx 3] The Dell DVD Store, http://linux.dell.com/dvdstore 4] The R Project for Statistical Computing. http://www.r-project.org 5] R. Agrawal, R.Srikant, Fast Algorithms for Mining Association Rules 


in Large Databases, Proc. of 20th Intl Conf. Very Large Data Bases 1994 6] A. Avritzer and B. Larson, Load testing software using deterministic state testing, Proc. of Intl Symp. on Software Testing and Analysis 1993 7] A. Avritzer, E. J. Weyuker, The automatic generation of load test suites and the assessment of the resulting software, IEEE Trans. Softw. Eng 21\(9 8] P. Bodik, M. Goldszmidt, A. Fox, HiLighter: Automatically Building Robust Signatures of Performance Behavior for Small- and Large-Scale Systems, Proc. of the  3rd SysML, Dec 2007 9] A. B. Bondi, Automating the Analysis of Load Test Results to Assess the Scalability and Stability of a Component, Proc. of 33rd Intl CMG Conf., San Diego, CA, USA, Dec. 2-7, 2007 10] L.  Bulej, T.  Kalibera, P. Tuma, Regression Benchmarking with Simple Middleware Benchmarks,  Proc. of the 2004 IPCCC, 2004 11] I. Cohen, M. Goldszmidt, T. Kelly, J. Symons, J. S. Chase, Correlating instrumentation data to system states: A building block for automated diagnosis and control, Proc. of 6th OSDI, Dec. 2004 12] I. Cohen, S. Zhang, M. Goldszmidt, J. Symons, T. Kelly, A. Fox Capturing, indexing, clustering, and retrieving system history Proc. of the 20th ACM Symp. on Operating Systems principles, 2005 13] Z. M. Jiang, A. E. Hassan, G. Hamann, P. Flora, Automated Performance Analysis of Load Tests, Proc. of the 25th ICSM, Sept 09 14] Z. M. Jiang, A. E. Hassan, P. Flora, G. Hamann, Automatic Identification of Load Testing Problems, Proc. of the 24th Intl Conf on Softw. Maintenance, Sept 2008 15] M. Jiang, M. A. Munawar, T.  Reidemeister, P A.S. Ward, Automatic Fault Detection and Diagnosis in Complex Software Systems by Information-Theoretic Monitoring, Proc. DSN, Jun 2009 16] M. Jiang, M. A. Munawar, T. Reidemeister, P. A. S. Ward System Monitoring with Metric-Correlation Models: Problems and Solutions Proc. of the 6th Intl Conf. on Autonomic Computing, 2009 17] T. Kalibera, L. Bulej, P. Tuma, Automated Detection of Performance Regressions: The Mono Experience, 13th MASCOTS, 2005 18]  P. Reynolds, J. L. Wiener, J.C. Mogul, M. K. Aguilera, A. Vahdat WAP5: Black-box Performance Debugging for Wide-Area Systems Proc. of the 15th Intl World Wide Web Conf.s, 2006 19] E. J. Weyuker, F. I. Vokolos, Experience with performance testing of software systems: Issues, an approach, andcase study, IEEE Trans Softw. Eng., 26\(12 20] I. H. Witten, E. Frank, Data Mining: Practical Machine Learning Tools 


and Techniques, Morgan Kaufmann, June 2005 21] M. Y. Chen , E. Kiciman , E. Fratkin , A. Fox , E. Brewer, Pinpoint Problem Determination in Large, Dynamic Internet Services, Proc. of the 2002 Intl Conf. on Dependable Systems and Networks, June  2002 22] M. K. Aguilera , J. C. Mogul , J. L. Wiener , P. Reynolds , A Muthitacharoen, Performance debugging for distributed systems of black boxes, Proc. of the 19th ACM Symp. on Operating systems principles, Oct 2003 41 


DMITAR, Datasets Used Stock Data Stock Data Daily stock information provided by Yahoo finance Wth Dt W ea th er D a t a Provided by the US Department of Commerce and National Climactic Data Center for 700 locations across US Synthetic Data Provided by a CRU weather generator that uses a Markov chain model to generate simulated weather data for 11 UK sites Associative IDS for NextGen Frameworks Dr S Dua LA Tech 26 


DMITAR Results 1/5 Varying Support DMITAR Results 1/5 Stock Database Support FITI ITPMine PROWL DMITAR 14 6424.7s 132.39s 3.03s 5.556s 16 2348.9s 67.14s 2.14s 4.015s 18 861.92s 34.62s 1.55s 2.89s 20 334.51s 18.89s 1.12s 2.07s 22 143 84s 10 87s 0 87s 1 45s 22 143  84s 10  87s 0  87s 1  45s 24 63.62s 7.15s 0.671s 1.04s Weather Database Support FITI ITPMine PROWL DMITAR 14 36362.6s 893.1094s 5.843s 19.8281s 36362.6s 893.1094s 5.843s 19.8281s 16 11913.04s 378.2188s 3.8906s 13.4375s 18 4116s 170.3438s 2.75s 9.1406s 20 1507s 86.5781s 2.14s 6.203s 22 859.2813s 63.3438s 1.7969s 5.7656s 24 378.5313s 36.1875s 1.4375s 3.5625s Synthetic Dataset Support FITI ITPMine PROWL DMITAR 14 1651.6s 199.843s 3.1406s 17.015s 16 574 32 119 32 2 0938 10 875 16 574  32 s 119  32 s 2  0938 s 10  875 s 18 416.109s 95.31s 1.6094s 7.39s 20 370.25s 83.31s 1.453s 5.8438s 22 265.78s 66.3438s 1.3594s 4.75s 24 133.96s 43.0781s 0.9219s 3.5781s 


DMITAR Rlt  DMITAR  R esu lt s 2  5 Rules Formed Associative IDS for NextGen Frameworks Dr S Dua LA Tech 28 


DMITAR Rl  Varying Maxspan DMITAR  R esu l ts 3  5 Varying Maxspan Associative IDS for NextGen Frameworks Dr S Dua LA Tech 29 


DMITAR Res lts 4/5 Vig Di i DMITAR  Res u lts  4/5 V ary i n g Di mens i ons Associative IDS for NextGen Frameworks Dr S Dua LA Tech 30 


DMITAR Rl  Varying Number of Transactions DMITAR  R esu l ts 5  5 Varying Number of Transactions Associative IDS for NextGen Frameworks Dr S Dua LA Tech 31 


N/C t Rh N ew C urren t R esearc h Problem Domain Problem Statement and Challenges Associative Mining based IDS Associative Mining based IDS Introduction to data mining ii lid ii Assoc i at i on ru l e i n d ata m i n i ng DMITAR Algorithm  ARD h New Researc h Associative IDS for NextGen Frameworks Dr S Dua LA Tech 32 


Further Research Further Research Objectives of Our Intrusion Detection System Development Objectives of Our Intrusion Detection System Development 1 Refine and scale the DMITAR algorithm to suit our application 2 Develop methods for dynamically altering the sensor parameters Our Focus is Securing the NextGen Frameworks with New Technology Technology Associative IDS for NextGen Frameworks Dr S Dua LA Tech 33 


Simulated Sensing Environment Simulated Sensing Environment Screenshots of Data C ollected from S ynthetic Sensors Screenshots of Data C ollected from S ynthetic Sensors Simulated in Our Laboratory Three Steps Slides Collect data Collect data from all sources  all attributes  Select Select the source and their hierarchical attributes attributes to be monitored and Select Select the source and their hierarchical attributes attributes to be monitored  and Sample Sample them at different rates different rates and process them Associative IDS for NextGen Frameworks Dr S Dua LA Tech 34 


Data Collection Simultaneous collection of data screen from ENTITIES aircrafts Associative IDS for NextGen Frameworks Dr S Dua LA Tech 35 Source PRTG Network Monitor software screen shot Demo info www.paessler.com 


Parameter Selection Selection of an ENTITY/aircraft and monitoring its parameters and sensor readings Associative IDS for NextGen Frameworks Dr S Dua LA Tech 36 Source PRTG Network Monitor software screen shot Demo info www.paessler.com 


Sensor Sampling Selecting one sensor/probe and reading it at different resolutions or sampling rates Associative IDS for NextGen Frameworks Dr S Dua LA Tech 37 Source PRTG Network Monitor software screen shot Demo info www.paessler.com 


Si l ti Nt k Si mu l a ti on on N e t wor k Most scenarios can be simulated on a computer or computer network network  The aircrafts and sensors are simulated on a computer network bllb b y ana l ogica l su b stitutions Sensors provide information at different rates Sensors provide information at different rates Need Based Sensor Prioritization NSP and Dynamic Sensing Rate Sampling Associative IDS for NextGen Frameworks Dr S Dua LA Tech 38 


Vulnerability Search Scan 39 Sample UQA script with Nmap performed in DMRL Associative IDS for NextGen Frameworks Dr S Dua LA Tech 39 Source Nmap screenshot with a pearl script  Find Namp on Nmap.org 


Modality Aspect Modality Aspect A Multimodal distribution is a continuous probability distribution with two or more modes of underlying data Mltil d i M u lti p l e mo d es i n our model Associative IDS for NextGen Frameworks Dr S Dua LA Tech 40 Source http://en.wikipedia.org/wiki/File:Bimodal bivariate small.png 


Multi Modality Modality Fusion 41 SENSITIVE  UNCLASSIFIED For Official Use Only Associative IDS for NextGen Frameworks Dr S Dua LA Tech 41 


Emphasis Emphasis Our approach emphasizes on pre empting the attack Our intent is NOT to perform an autopsy to discover attacks Instead we aim to detect and prevent in attacks in real time Associative IDS for NextGen Frameworks Dr S Dua LA Tech 42 


Techniques for Discriminative Rules Techniques for Discriminative Rules Resolution Analysis Features Analyzed at Different Depths Anti Monotonic Principle Modality Aspect Treading into Unexplored Feature spaces Associative IDS for NextGen Frameworks Dr S Dua LA Tech 43 


Representative Outcomes Representative Outcomes Illustration of the Final Analysis Our method shifts between modalities and sampling rates for optimization The blue parallelograms are actual intrusions 44 The blue parallelograms are actual intrusions The Red Green Blue Plots are response of system Associative IDS for NextGen Frameworks Dr S Dua LA Tech 44 


Advantages of Our M ethod Advantages of Our M ethod Exploit the memory v ertical data format utilizes slidin g windows to g form a much larger database to analyze  Flexibility in Choosing what to choose  Choosing what to choose to build the rules Computational and memory efficiency We have a team working only on this aspect 45 Associative IDS for NextGen Frameworks Dr S Dua LA Tech 45 


Preliminary Results Intra transaction Relations Data rate simulator NH-134 Mb HOP PATH update \(Y/N Inference 11.5 Y Y 2 0.120 N N      Y   n 0.345 N NH134 Y/N   Inf 1 0.150 N N 2 0 120 Y N Inter transaction Relations 2 0  120 Y N       5 5.55 0.456 Y Relations  n 0.345 N N Nmap on DMRL nmap.org 


Anticipated Outcome Anticipated Outcome Develop algorithm capable of learning from a given heterogeneous diverse Develop algorithm capable of learning from a given heterogeneous diverse data ff Dynamic algorithmic f ramework designed to shi f t modalities and sampling rates based on complex logic Flexibility of integration into the Snort intrusion detection system 47 Associative IDS for NextGen Frameworks Dr S Dua LA Tech 47 


References References Aircraft Cockpit Image courtesy USAF http://www.faa.gov htt p   www.faa g ov  air traffic  technolo gy  p g  _ gy  Acharya R Dua S Du X Sree V Chua C K Automated Diagnosis of Glaucoma Using Texture and Higher Order Spectra Features To appear in IEEE Transactions on Information Technology in Biomedicine  Du X Dua S 2011 Cancer Prognosis Using Support Vector Regression in Imaging  Modality World Journal of Clinical Oncology 2  1   44 49 Du X Dua S 2010 Salient Frame Extraction Using Support Vector Regression and Motion Features pp 5 Proc of the National Aerospace and Electronics Conference July 14 16 2010 D M P D S 2010 Di i i ti Ft d Cl ifi ti Mthd f D essaue r  M  P  D ua S  2010  Di scr i m i na ti ve F ea t ures an d Cl ass ifi ca ti on M e th o d s f or Accurate Classification 1st ed vol 7704 pp 14 Bellingham WA Proceedings of SPIE Dessauer M P Dua S 2010 Low Resolution Vehicle Tracking using Dense and Reduced Local Gradient Features Maps 1st ed vol 7694 pp 8 Bellingham WA Proceedings of SPIE SPIE 


Acknowledgements Acknowledgements Fundin g A g encies  US 4 1 Million direct fundin g g g 4 g LA BoR NIH NSF AFRL AFOSR and NASA Research Team Samuel Kasimalla Brandy McKnight Dr Pradeep Chowriappa Connor Johnson Vasanth Nair Mihir Chowriappa  Connor Johnson  Vasanth Nair  Mihir Karnik Mohit Jain and Swadheen Songmen Associative IDS for NextGen Frameworks Dr S Dua LA Tech 49 All the respective Logos belong to their owners 


Rf d Rdi R e f erence d R ea di ngs Copyright of cover pages held by respective publishers 


Thank You Questions Thank You  Questions Dr Sumeet Dua E mail sdua@latech.edu Web http://dmrl.latech.edu Associative IDS for NextGen Frameworks Frameworks Dr S Dua LA Tech 51 Image Source roadtrafficsigns.com 


