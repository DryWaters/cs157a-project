Knowledge-Based Neural Networks a nd its Application in Discrete Choice Analysis   XIANYU JianChuan Antai College of Ec onomics & Management Shanghai Jiao Tong University, China jianchuanxy@sjtu.edu.cn JUAN ZhiCai Antai College of Ec onomics & Management Shanghai Jiao Tong University, China zcjuan@sjtu.edu.cn  GAO LinJie Antai College of Ec onomics & Management Shanghai Jiao Tong University, China lj.gao@163.com     Abstract  Travel mode choice forecast has received wide attention in travel behavior analysis. Mode choice is a pattern recognition problem, where different human behavior patterns determine the choices among alternative travel modes. Based on the functional similarity between artificial neural networks \(ANN and decision tree, the method of knowledge-based neural networks \(KBNN\ combines the rule induction of decision tree \(DT\ and the accurate approximation of ANN. One appeal of KBNN is the use of pattern association and error correction to represent a problem. This contrasts considerably with the random utility maximization framework in discrete choice modeling. So a network built by this method and a nested logit \(NL\ model are specified, estimated and comparatively evaluated. The prediction results show that KBNN model demonstrates the highest performance The analysis of actual investigation data shows that the proposed KBNN model has fast convergence and high precision, which is of great importance for travel mode choice prediction Key words: travel mode choice; ANN; DT; KBNN; NL  1. Introduction  Travel mode choice has received the most attention among travel behavior analysis, which has a direct impact on the efficiency of travel demand management and traffic control. Since multinomial logit model was developed in the 1970s s c ret e ch oi ce  m odel s  based on random utility maximization have become widely used for mode choice analysis [2-4 d N L  model is the most common tool for eliminating the property of independence of irrelevant alternatives However, the pre-determined mode structure and the linear property of the utility function may not comprehensively represent the complex interrelations among explanatory variable and their effects on the dependent variables Recently, development in artificial intelligence and machine learning has provided new analysis tools for discrete choice modeling. These algorithms model choice behavior without making parametric functional form assumptions but treat discrete choice modeling as a pattern recognition problem, in which multiple complex patterns formed by the combination and interaction of explanatory variables determine the choice decisions among alternatives. Several studies of applying data mining techniques, especially DT [6-8  and ANN [9o r t r av el beh a vi or an al y s i s  demonstrate considerable advantages over traditional NL model by providing insights into pattern characteristics extracted from sample data and from adaptive structures through computational process  2. Artificial neural networks  ANNs are computational paradigms with initial inspirations rooted in biology and physics h e  computational framework for an ANN entails a large number of inter-connected processing elements, called neurons, which for the most part, implement similar and relatively simplistic computational tasks. The true computational power on the other hand derives from a combination of adaptable interconnections, called the weights, a layered topology, and nonlinearities associated with the neuron computations. However recognized challenges of ANN based approach as classifiers or function approximators include the determination of the appropriate number of hidden layers and number of neurons in each hidden layer, the initialization of connection weights, the identification of an appropriate training algorithm among others and 
Fourth International Conference on Networked Computing and Advanced Information Management 978-0-7695-3322-3/08 $25.00 © 2008 IEEE DOI 10.1109/NCM.2008.54 491 


the difficulty in understanding the behavior of  trained neural networks  One way is to extract rules that can be provided to the users [14, 15 T h e i n t e g r at i o n of dom ai n knowledge into ANN provides efficient and reliable forms of neural networks learning. KBNN is such a hybrid intelligent system. It was first provided by Towell as a method to build neural networks according to extracted rules from experiences of expert system or from sample data [16, 17  In this paper, a KBNN is developed for the prediction of commuter travel choice. First, useful attributes and concepts are extracted by DT from the data and linked in a way consistent with initial domain knowledge then the links are weighted properly. The capability and performance on work travel mode choice modeling of the developed KBNN are then compared with the traditional NL model. The data for estimating and evaluating the models are the diary datasets from the Changchun Travel Survey 2003  3. KBNN method  DT model as a supervised learning algorithm uses recursive partitioning to form a tree structure with IFTHEN rules as splitting criteria, each of which is applied with an explanatory variable. Each branch on different levels of the tree represents a subgroup of observations with homogeneity of different degrees Homogeneity increases from top to bottom where the bottom leaves contain the cases of the same group while the top branches offer the roughest split. Each branch from the top node to a bottom leaf node can be described as an IF-THEN rule sequence or rule set There is a corresponding relation between multilayer feed-foreword neural networks and DT \(Table 1 which provides favorable supports for rule extraction by DT model for neural networks learning process. A KNBB on an XOR problem \(Figure 1\hows the procedure of building up the networks with rules extracted by a DT model Table 1   Correspondence between DT and NN DT                                              ANN Internal Nodes                            Input Units Branches                                     Hidden Units Distinct Classes                          Output Units Connections between Nodes       Weighted Connections   2 1 Feature  5  0 3 Feature  3  0 2 Feature   Figure 1   DT of the XOR problem First, the number of input units is preset according to the rule set of the DT model, where each attribute responds to one unit. So here three input units are selected, corresponding to Feature 1 to 3 Then the rules from the decision tree are translated from the original IF A a  B b THEN Class is I to  A-a 0  B-b 0 in which \(A-a\ be considered as a simple hyperplane. Mutually different hyperplanes are obtained from the translated decision rules and the unit number of the first hidden layer is set to the number of hyperplanes. In this XOR problem there are 3 units in the first hidden layer corresponding to the three hyperplanes, Feature1-2 0, Feature2-0.3 0 and Feature3-0.5 0 Next, the unit number of the second hidden layer and the output layer are de termined accord ing to the branches of the decision tree and the number of objective pattern respectively. So for the XOR problem there are four units in the second hidden layer and three output units corresponding to the branches and number of classes Next the networks initialization is guided by two theorems proposed by Towell  Theorem 1: Mapping conjunctive rules into a neural network using  0 pn      2 1  2 P    creates a network that accurately encodes rules given that the rules have a sufficiently small number of antecedents Theorem 2: Mapping disjunctive rules into a neural network using 0 p   2    creates a network that accurately encodes a disjunctive rule given that there are a sufficiently small number of rules p is the weight on links corresponding to positive dependencies n is the weight on links corresponding to negative dependencies P is the number of positive antecedents to the rule, and is a constant to be determined by trial and error For units of the first hidden layer, the weights on links with the input layer are initialized based on the connection relation of extracted hyperplanes, with one represents a connection and zero represents none. The thresholds are set to the constants of the related hyperplanes. Units from the second hidden layer complete conjunction and each corresponds to one decision rule. They are initialized according to theorem 1. The output units finish disjunction and each corresponds to a recognized category. These units are initialized according to theorem 2. Finally important attributes not utilized by the decision tree are selected 
492 


guided by professional knowledge and added to the input layer and the hidden layers are also expanded These newly added units and links are often randomly initialized [18 Fig u r e 2 s h o w s th e K N B B f o r th e  XOR problem And after finishing the networks establishment the training process can be carried out based on various ANN training algorithms    2 1 Feature  5  0 3 Feature    Figure 2   KBNN of the XOR problem  4. KBNN implementation  4.1. Data set and sample composition  The data used for implementing the models come from the travel diary data from the Changchun Travel Survey 2003. This study emphasizes the trip to work mode choice. The alternatives for work travel mode choice used in this study include walk, bicycle motorcycle, transit and car. The database was divided randomly into two datasets with 60 percent used for the model estimation and another 40 percent used for the subsequent validation test. The actual mode split of training and test sets are shown in Table 2 Table 2   Summary of mode splits Travel Mode          Training Dataset          Test Dataset Walk \(M1\      884 \(27.85%\               589 \(27.85 Bicycle \(M2\         809 \(25.51%\               540 \(25.51 Motorcycle \(M3\100\(3.16%\                 67 \(3.16 Transit \(M4\     1168 \(36.79%\              778 \(36.79 Car \(M5\             212 \(6.69%\               142 \(6.69 Total                      3173 \(100%\              2116 \(100 The socio-demographic characteristics of traveler and his family, attributes related to transportation systems and the trip to work are all important factors of mode choice. So a total of twelve variables were identified for travel mode choice modeling as defined in Table 3 Table 3   Input variables Variable            Definition xb            0:Woman;1:Man nl             Age of traveler in years, continuous edu          Education level.1:Primary school and below;2:Secondary school;3:High school;4College and university; Graduate and above z h y Type of employment. 1:Unit responsible person;2  professional technical personnel;3:Clerk 4:Business service;5:Agricultural and water conservancy labors;6:Production, transport equipment operators and related workers rjzx          No. of bikes per household member, continuous rjmt   No. of motorcycles per household member continuous rjxq          No. of cars per household member, continuouse tq              No. of commuters in a household ainc          Monthly income per household member in RMB minc         Monthly income of the commuter in RMB gxr            0:Without weekend; 1:With weekend dis             Home to work travel distance in Km Travel mode choice modeling predicts individuals or certain groups mode choice decisions and the induced demand for each mode or demand distribution across modes. Two types of prediction rates or match rates are used to evaluate and compare the mode choice modeling performance of different methods. One is individual match rate i r which is the ratio of the number of correctly predicted individual observations for one mode p i N over the total number of the actual observations choosing this mode a N the other is aggregate match rate a r which reflects the prediction accuracy on the mode aggregate level, defined as the ratio of the number of predicted observations for one mode p a N over the number of the actual observations choosing this mode a N They are defined as follows   ipia apaa rNN rNN     4.2. Networks structure  The DT model \(in Figure 3\ied for KBNN is based on the C4.5 algorithm. The C4.5 algorithm generates a DT in two phases, namely construction and pruning. In the construction of a DT model a training data group is divided at each stage subdivision according to an explanatory va riable selected based on the splitting criterion. The division continues until all observations in a subgroup have the same mode choice at the bottom [6-8 T h e t w el v e v a riables  f r o m T a ble 3  are used as input for the KBNN. Based on the procedures for networks setting up, ten mutually different hyperplanes are extracted, namely rjzx-0.5 rjmt-0, rjmt-1, rjxq-0, xb-1, ainc-1000, minc-2500, dis1.5, dis-3, dis-7. The networks have 12 units on the second hidden layer and 5 units as output. It is initialized based on the method provided in the previous section 
493 


  Figure 3     DT model for the KBNN  4.3. Performance comparison with NL model  A NL model was also estimated with the same dataset. The nested structure is shown in Figure 4. And this is the best fit version from a series of hierarchical trees. The model is estimated using maximum likelihood estimation and the results are summarized in Table 4. Walk mode is chosen as the baseline alternative  Figure 4     NL model structure Table 4   Estimation results of NL training model  Alternative specific constant Estimation t-statistic M2 1.63 7.00 M3 1.05 4.16 M4 1.23 2.38 M5 1.45 3.79 Non-motorized        Inclusive value=0.65, t-statistic=4.22 Factors for M2 dis -0.83 -9.816 ainc -0.0002 -1.742 nl 0.021 1.93 below edu4 0.38 4.15 Factors for M3 rjzx+rjzd+rjxq 1.26 9.75 nl 0.0381 2.74 Motorized                Inclusive value=0.72, t-statistic=3.74 Factors for M4 zhy4 -0.63 -4.41 below edu4 0.30 5.39 gxr -0.19 -4.26 rjzx+rjzd+rjxq -0.26 -2.08 Factors for M5 zhy1 0.75 3.21 edu4 -0.84 -2.18 rjzx+rjzd+rjxq 1.15 2.37 Number of cases=3173 L L 0  5106.74   L L c  3104.25   LL  2093.76    2 LL 0  LL  60 25 96    2 LL c  LL  2 020 98    2 0.59   The comparison of estimation results between KBNN and NL model are demonstrated in Table 5. It is clear that KBNN model outperforms the NL model on both the training and test dataset; NL has worse transferability in that the match rates decrease considerably from the training dataset to the test dataset; the KBNN model is estimated using the standard back propagation algorithm while the NL model is estimated using maximum likelihood estimation method, so in the MNL model the magnitude and sign of the coefficients \(Table 4 indicated the importance and impact of the corresponding variables on mode choice and the value of the t-statistic indicate the confidence level. While the KBNN model shows week interpretability although the importance of explanatory variables can be obtained from sensitivity analysis Table 5   Results of KBNN and NL  Method             Training Accuracy             Test Accuracy 3173\                                \(2116 KBNN              84.5%                                 86.8 NL                    80.2%                                 76.5 For the KBNN model, the estimation results of training dataset and test dataset are shown in Table 6 and Table 7, in which the actual number of observations of each mode are shown in the first column, while the predicted mode choice are shown in the following five columns. From the estimation results it is shown that KBNN offer higher individual prediction accuracy for motorcycle and car in both training and test datasets. But the model cant predict bike and transit mode very accurately in either the training or the test dataset. Patterns from these two modes are often mismatched mutually. This is very likely due to the fact that walk and bike travel modes share many common attributes such as physical strength depletion, travel distance and time consumption characters and travel cost, which makes the classification very difficult. The same trend also exists in the identification between bike and transit which also shows similarity in travel time and travel distance consumption attributes Table 6   Estimation results of KBNN on training dataset   Predicted Mode Choice r i r a  M1 M2 M3 M4 M5 
494 


824 812 108 1135 189 M1 884 757 118 0 0 0 85.6 93.2 M2 809 50 654 2 122  0 80.8 100.4 M3 100 14 40 97 24 0 97.0 108.0 M4 1168 3 0 9 989  4 84.7 97.2 M5 212 0 0 0 0 185  87.3 89.2 Table 7   Estimation results of KBNN on test dataset   Predicted Mode Choice r i r a  M1 574 M2 540 M3 70 M4 793 M5 146 M1 589 528 37 0 0 0 89.7 97.3 M2 540 32 461 0 82 0 85.4 100.0 M3 67 0 0 66 57 0 98.5 104.0 M4 778 14 42 4 654 18 84.1 101.9 M5 142 0 0 0 0 128 90.2 102.8  5. Discussion and conclusions  With the capacity of learning driven by pattern recognition and effort correction mechanisms, the KBNN method based on the similarity between neural networks and decision tree, which combines the rule extraction and the accurate approximation of these two algorithms was used to construct commuter mode choice model for Shanghai, China. Its capacity for generalization and estimation performance was compared with the classical discrete choice model namely the nested logit model. The research results demonstrated that the KBNN model has fast convergence and high precision, which is of great importance for travel mode choice prediction. The model offers considerable advantages on predictive power and comparatively appeal in transferability from training dataset to test dataset over NL model. The proposed KNBB model performs with its structure flexibility to adapt to the training data and has the capability to produce explainable if-then rules through hyperplanes in the first hidden layer It is found in this research that a behavior rich teaching data is very important to construct and train a KBNN model. And one important property of neural networks models is their capability of processing missing data and noise. So further research should be carried out to find if the KBNN model is able to work well with noise and missing data  6. Acknowledgements  This research is funded by the national high technology research and development program of China \(2007AA11Z203\d National Natural Science Foundation of China \(50578094\The authors appreciate the Shanghai City Comprehensive Transportation Planning Institute for providing the data used in this study. The contents of the paper reflect the views of the authors who are responsible for the facts and accuracy of the information presented herein. The contents do not necessarily reflect the official views of the Antai Collge of Economics and Management Shanghai Jiao Tong University  References  1 M  C Fa dde n C on ditio na l L o g it A n a l y s is of Qua lita tiv e  Choice Behavior, in Frontiers in Econometrics Academic Press, New York, 1973 2 L  C a o A Mode l f o r T r a v e l Mode Sw itc hing   N e w  Jersey Institute of Technology: New Jersey, 1998  H S a sch a   V  N R o b H S e rge et al  Ho m eAct i v i t y Approach to Multi-Modal Travel Choice Modeling the 85th Transportation Research Board Annual Meeting  Washington, D. C., 2006 4  M  E r i c  J  R  M a t t h e w  a n d A  C  J u a n   A  T o u r B a s e d  Model of Travel Mode Choice the 10th International Conference on Travel Behavior Research Lucerne, 2003 5 D  A  H e ns he r  a n d T  T  T on  A C o m p a r is on of the  Predictive Potential of Artificial Neural Networks and Nested Logit Models for Commuter Mode Choice Transportation Research Part E Elsevier, 2000, pp. 155-172  G  W e t s  K V a n h o o f  T  A r en t ze an d H T i mmer m an s  Identifying Decision Structures Underlying Activity Patterns: An Exploration of Data Mining Algorithms Transportation Research Record Transportation Research Board, Washington, D. C., 2000, pp. 1-9 7 J  C T h ill a n d A  W h e e l e r   T r e e I nduc tion of Spa tia l  Choice Behavior Transportation Research Record  Transportation Research Board, Washington, D. C., 2000, pp 250-258 8 T  Ya m a m o to, R. Kita m u ra a nd J. Fu jii D riv e rs Route  Choice Behavior: Analysis by Data Mining Algorithms Transportation Research Board Transportation Research Board, Washington, D. C., 2002, pp. 59-66 9 M A bolf a z l a nd J   M. Er ic   N e s te d L o g it Mode ls a n d  Artificial Neural Networks for Predicting Household Automobile Choices: Comparison of Performance Transportation Research Record Transportation Research Board, Washington, D. C., 2002, pp. 92-1000 10 D  A  H e ns he r  a n d T  T  T on A C o m p a r is on of the  Predictive Potential of Artificial Neural Networks and Nested Logit Models for Commuter Mode Choice Transportation Research Part E Elsevier, 2000, pp. 152-172 1 T  A r en t ze H  T i mm er man s  P aram et ri c Act i o n  Decision Trees: Incorporating Continuous Attribute Variable 
495 


into Rule-Based Models of Discrete Choice Transportation Research Part B Elsevier, 2007, pp. 772-783 12  P. J  W e r bos T h e R o ots  of B a c k pr opa g a tion: Fr om  Ordered Derivatives to Neural Networks and Political Forecasting, Wiley, New York 1994 1  P  Lau r et  E  F o ck and R  N R a n d r i a n a r i von y   Bayasian Neural Network Approach to Short Time Load Forecasting Energy Conversion and Management Elsevier 2008, pp. 1156-1166 14 C.P L i m  J  H Le ong a nd M.-M. K u a n  A H y brid Neural System for Pattern Classification Tasks with Missing Features IEEE Transactions on Pattern Analysis and Machine Intelligence 2005, pp. 648-653 15 K  Pola t, a n d S  G une s A Nov e l H y brid Inte llig e n t Method Based on C4.5 Decision Tree Classifier and OneAgainst-All Approach for Multi-Class Classification Problems Expert Systems with Applications Elsevier, 2008 16 G  Se rpe n D  K  T e k k e dil, a nd M  O rra  A K now le dge Based Artificial Neural Network Classifier for  Pulmonary Embolism Diagnosis Computers in Biology and Medicine  Elsevier, 2008, pp. 204-220 17 G  G  T o w e ll, a nd J  W  Sha v lik  K now le dg e B a se d Artificial Neural Networks Artificial Intelligence Elsevier 1994, pp. 119-165 18 Y  Y a o, Y   V Ve nk a t e s h, a n d C  C  K o   A K now le dg e Based Neural Network for Fusing Edge Maps of MultiSensor Images Information Fusion 2001, pp. 121-133 
496 


7 5769 l00 97.67 l005 I00 Avg Accuracy ______ __95.59 95.98 89.5 8954 BSTC/RCBT To keep comparisons fair we ran SVM and randomForest on the same genes selected by our entropy discretization except with their original undiscretized gene expression values SVM was run with its default radial kernel We ran randomForest 10 times with its default 500 trees for ALL LC and OC and its accuracy was constant For PC we had to increase randomForest's number of trees to 1000 before its accuracy stabilized over the 10 runs Table III contains the number of class 0/1 samples in the clinically determined training set the number of genes selected by our entropy discretization and our experimental results As shown in this table the overall average accuracies of BSTC and RCBT are again best at about 96 each When compared against RCBT SVM and randomForest on the individual tests we can see that BSTC is alone in having 100 accuracy on the majority of datasets However BSTC's performance on the preliminary AML/ALL dataset test is relatively poor This is likely due to over fitting Every error BSTC made mistook a class 0 AML test sample for a class 1 ALL test sample i.e all errors were made in this same direction And the ALL training data has both i about 2.5 times as many class 1 samples as class 0 samples and ii a small number of total samples/genes When the training set is more balanced and the number of samples/genes is larger we can expect that cancellation of errors will tend to neutralize/balance any over fitting effects in BSTC And BSTC is a method meant primarily for large training sets where CAR-mining is prohibitively expensive As we will see below in Section V-B.1 BSTC s performance is much better for larger AML/ALL training set sizes B Holdout Validation Studies Holdout validation studies make comparisons less susceptible to the choice of a single training dataset and provide performance evaluations that are likely to better represent program behavior in practice We next present results from a thorough holdout validation study completed using 100 different training/test sets from each of the ALL LC PC and OC data sets For these holdout validation tests we benchmark BSTC against Top-k/RCBT because i BSTC/RCBT perform hest in our preliminary experiments ii Top-k/RCBT is the fastest/most accurate CAR-based classifier for microarray data and iii we are interested in BSTC's CAR-related vs Topk/RCBT s CAR based scalability For the holdout validation study we generated training sets of sizes 40 60 and 80 of the total samples Each training set was produced by randomly selecting samples from the original combined dataset We then used the standard R dprep package's entropy minimized partition 17 to discretize the selected training samples Finally the remaining dataset samples were used for testing the two classifiers after rule/BST generation on the randomly selected training data For each training set size we produced 25 independent tests In addition to these training sets we created an additional 25 1-x/0-y tests To create these tests we chose training data by randomly selecting x class 1 samples and y class 0 samples to be used as training data As before the remaining samples were then used to test both classifiers For each dataset the x and y values are chosen so that the resulting 25 classification tests have the exact same training/test data proportions as the single related dataset test reported in section V-A For each training set size we plot our results using a boxplot Boxplot Interpretation Each boxplot that we show in this section can be interpreted as follows The median of the measurements is shown as a diamond and a box with boundaries is drawn at the first and the third quartile The range between these two quartiles is called the inter-quartile range IQR Vertical lines a.k.a whiskers are drawn from the box to indicate the minimum and the maximum value unless outliers are present If outliers are presents the whiskers only extend to 1 5 x IRQ The outliers that are near i.e within 3 x IRQ are drawn as an empty circle and further outliers are drawn using an asterisk 1 ALIJAML ALL Experiment Figure 4 shows the classification accuracy for the ALL/AML dataset As can be seen in this figure BSTC and RCBT have similar accuracy across the ALL/AML tests as a whole BSTC outperforms RCBT in terms of median and mean accuracy on the 40 and 80 training set sizes while RCBT has better median/mean accuracy on the 1-27/0-11 training size tests And both classifiers have the same median on the 60 training set size Over the 100 ALL/AML tests we see that BSTC has a mean accuracy of 92.13 while RCBT has a mean accuracy of 91.39 they are very close It's noteworthy that BSTC is 100 accurate on the majority of 80 training size tests However BSTC appears to have slightly higher variance than RCBT on all but the 40 training tests Considering all the results together both BSTC and RCBT have essentially equivalent classification accuracies on the ALL/AML dataset 2 Lung Cancer LC Experiment The results for the Lung Cancer dataset are reported in Figure 5 Here again both BSTC and RCBT have similar classification behavior RCBT has higher mean and median accuracies on the 40 and 60 tests while BSTC outperforms RCBT on the 1-16/0-16 tests Meanwhile both classifier have the same median on the 80 training test Over all 100 LC tests we find that BSTC has a mean accuracy of 96 32 while RCBT has a mean accuracy of 97.08 again they are very close As before BSTC is alone in having 100 accuracy more 1068 TABLE III USINC GIVEN RES Ul TS TRAINING DATA  Class I  Class 0 Genes random Training Training After BSTC RCBT SVM Forest Dataset Samnples Samnples Discr Ac or Accr Ac o Accuracy ALL 27 11 866 82.35 91 18 91 18 85.29 LC 16 16 2173 100 97.99 93.29 99.33 PC 52 50 1554 100 97.06 73.53 73.53 OC 133 


TABLE IV AVERACGE RUN TIMLES FOR THE PC TESTS IN SEC-NI t INDICATES nl WAS LOWERED TO 2 Training Median  Mean 260 Near outliers  25/25t T O Median  Mean 260 Near outliers  Far outliers 40 Training 60 Training 80 Training 1 27/0-11 Training 1.0 1.0 1 0]0.95 0.9 0.9 0.7 0.7 0.850.8 0.80.80.80.750.7 0.70.70.7 650.6 0.60.60.6Holdout Validation Results 25/25t cJ CZ C O Far outliers 40 Training 60 Training 80 Training 1-16/0-16 Training h0 1.0 T 1.0 1.00.95 0.9 0.9 0 0.8 0.8 0.80.80.8LC Holdout Validation Results THE PC TESTS THAT RCBT FINISHED Training BSTC RCBT 40U 75.08 79.27 60 78.18 85.45 80 84.98 1-52/0 50 81.65%o 1069 cJ CZ C 5.06 120.63 21.32 RCBT  7110  7200  7200  RCBT DNF 0 P 00 24/25 t per training set test Finally the  RCBT DNF column gives the number of tests RCBT was unable to finish in  the cutoff time over the number of tests for which Top-K finished mining rule group upper bounds Explanation for varying nd values Run time cutoffs were necessary to mitigate excessive holdout validation CARmining times Even with a cutoff of 2 hours these 100 PC experiments required about 11 days of computation time with most experiments not finishing For the 80 and 1-52/0-50 training set sizes RCBT with nl  20 failed to finish lower bound rule mining for all 50 tests within 2 hours Thus RCBT's nl parameter was lowered from the default value of 20 to 2 in an attempt to improve its chances of completing tests Not surprisingly decreasing nl i.e mining fewer lower bound rules per Top-k rule group decreases RCBT s runtime However RCBT was still unable to finish lower bound rule mining for any tests Classification Accuracy Figure 6 contains accuracy results for BSTC on all four Prostate Cancer test sets Prostate Cancer boxplots for RCBT weren't constructed for training set sizes that RCBT was unable to complete all 25 tests within the time cutoffs In contrast BSTC was able to complete each of the 100 PC classification tests in less than 6 seconds Table V contains mean accuracies for the PC dataset with 40 60 80 and 1-52/0-50 training For each training set the average accuracies were taken over the tests RCBT was able to complete within the cutoff time Hence the 40 row means were taken over all 25 results Since RCBT was unable to complete any 80 or 1-52/0-50 training size tests we report these BSTC means over all 25 tests RCBT has slightly better accuracy then BSTC on 40 training For 60 training TABLE V MEAN AcCURACIES FOR 40 60 80 1.52/0.50 BSTC 3 4.93 5.78 5.57 Top0.09 BSTC F a RCBT BSTC RCBT BSTC RCBT b c Fig 5 BSTC RCBT BSTC RCBT b c ALL BSTC RCBT a Fig 4 BSTC RCBT d then half the time for any training set size see Figure 5 d However RCBT has smaller variance for 3 of the 4 training set sizes Therefore as for the ALL/AML data set both BSTC and RCBT have about the same classification accuracy on LC 3 Prostate Cancer PC Experiment RCBT begins to run ilnto a comiputational difficulties on PC's larger training set sizes This is because before using a Top-k rule group for classification RCBT must first mine nt lower bound rules for the rule group RCBT accomplishes rule group lower bound mining via a pruned breadth-first search on the subset space of the rule group's upper bound antecedent genes This breadthfirst search can be quite time consuming In the case of the Prostate Cancer PC dataset all 100 classification tests 25 tests for each of the 4 training set sizes generated at least one top10 rule group upper bound with more than 400 antecedent genes Due to the difficulties involved with a breadth-first search over the subset space of a several hundred element set RCBT began suffering from long run times on many PC classification tests Table IV contains four average classification test run times in seconds for each PC training size The BSTC column run times reflect the average time required to build both class 0 and class I BSTs and then use them to classify all the test samples Each Top-k column run time is the average time required for Top-k to mine the top 10 covering rule groups with minimum support 0.7 for each training set Table IV's RCBT column gives average run times for RCBT using a time cutoff value of 2 hours for all the training sets For each classification test if RCBT was unable to complete the test in less than the cutoff time it was terminated and it s run time was reported as the cutoff time Hence the BSTC RCBT d RCBT column gives lower bounds on RCBT s average run time 


TESTS IN SECOND t INDICATES nl WAS LOWERED TO 2 Training BSTC Top-k RCBT 7 OC Holdout Validation Results RCBT outperforms BSTC on the single test it could finish by more then 7 although it should be kept in mind that RCBT's results for the 24 unfinished tests could vary widely Note that BSTC's mean accuracy increases monotonically with training set size as expected At 60 training BSTC's accuracy behaves almost identically to RCBT's 40 training accuracy see Figure 6 4 Ovarian Cancer OC Experiment For the Ovarian Cancer dataset which is the largest dataset in this collection the Top-k mining method that is used by RCBT also runs into long computational times Although Top-k is an exceptiounally fast CAR group upper bound miner it still depends on performing a pruned exponential search over the training sample subset space Thus as the number of training samples increases Top-k quickly becomes computationally challenging to tune/use Table VI contains four average classification test run times in seconds for each Ovarian Cancer\(OC training size As before the second column run times each give the average time required to build both class 0/1 BSTs and then use them to classify all test's samples with BSTC Note that BSTC was able to complete each OC classification test in about 1 minute In contrast RCBT again failed to complete processing most classification tests within 2 hours Table VI's third column gives the average times required for Top-k to mine the top 10 covering rule groups upper bouhnds for each training set test with the same 2 hour cutoff procedure as used for PC testing The fourth column gives the average run times of RCBT on the tests for which Topk finished mining rules also with a 2 hour cutoff Finally the  RCBT DNF column gives the number of tests that RCBT was unable to finish classifying in  2 hours each THE OC TESTS THAT RCBT FINISHED Training BSTC RCBT 40 92.05 97.66 60 95.75 96.73 80 94 12 98.04 1-133/077 9380 96.12 1070 cJ CZ C 0.95 0.9 0.85 0.8 0.75 0.7 0.65 0.6 0.55 0.5 BSTC RCBT d Median Median  Mean 260 Near outliers  Far outliers 40 Training 60 Training 0.90.80.70.6BSTC RCBT a 80 Training 1-52/0-50 Training 0.9DNFI 0.80.70.6BSTC RCBT b 1 u0.9DNFI 0.80.70.6BSTC RCBT  RCBT DNF 40 30.89 0.6186 273.37 0/25 60 61.28 41.21  5554.37 19/25 80 71.84  1421.80  7205.43 t 21/22 TIMES FOR THE OC 9 Mean 0 Near outliers  Far outliers 1.01 11 01 1.0 d Fig 6 PC Holdout Validation Results BSTC RCBT a Fig 0.80.8 0.8BSTC RCBT BSTC RCBT b c c i DNF cJ CZ C 40 Training 60 Training 80 Training 1-133/0-77 Training 0.95 DNF DNF DNF 0.9 0.90.90.90.85 0.8 BSTC RCBT TABLE VI AVERAGE RUN 1 133/0-77 70.38  1045.65  6362.86 t 20/23 over the number of tests for which Top-k finished Because RCBT couldn't finish any 80 or 1-133/0-77 tests within 2 hours with nl  20 we lowered nl to 2 Classification Accuracy Figure 7 contains boxplots for BSTC on all four OC classification test sets Boxplots were not generated for RCBT with 60 80 or 1-133/0-77 training since it was unable to finish all 25 tests for all these training set sizes in  2 hours each Table VII lists the mean accuracies of BSTC and RCBT over the tests on which RCBT was able to produce results Hence Table VII's 40 row consists of averages over 25 results Meanwhile Table VII's 60 row results are from 6 tests 80 contains a single test's result and 1-133/0-77 results from 3 tests RCBT has better mean accuracy on the 40 training size but the results are closer on the remaining sizes   4 difference over RCBT's completed tests Again RCBT's accuracy could vary widely on its uncompleted tests CAR Mining Parameter Tuning and Scalability We attempted to run Top-k to completion on the 3 OC 80 training and 2 OC 1-133/0-77 training tests However it could not finish mining rules within the 2 hour cutoff Top-k finished two of the three 80 training tests in 775 min 43.6 sec and 185 min 3.3 sec However the third test ran for over 16,000 mnm  11 days without finishing Likewise Top-k finished one of the two 1-133/0-77 tests in 126 min 45.2 sec but couldn't finish the other in 16,000 min  11 days After increasing Top-k's support cutoff from 0.7 to 0.9 it was able to finish the two unfinished 80 and 1-133/0-77 training tests in 5 min 13.8 sec and 35 min 36.9 sec respectively However RCBT with nl 2 then wasn't able to finish lower bound rule mining for either of these two tests within 1,500 min Clearly CAR-mining and parameter tuning on large training sets is TABLE VII MEAN AcCU1ACIES FOR 


support pruning gene expression classifier with an accurate and compact fuzzy rule base for microarray data analysis Biosystems vol 85 computationally challenging As training set sizes increase it is likely that these difficulties will also increase VI RELATED WORK While operating on a microarray dataset current CAR 1 2 3 4 and other pattern/rule 20 21 mining algorithms perform a pruned and/or compacted exponential search over either the space of gene subsets or the space of sample subsets Hence they are generally quite computationally expensive for datasets containing many training samples or genes as the case may be BSTC is explicitly related to CAR-based classifiers but requires no expensive CAR mining BSTC is also related to decision tree-based classifiers such as random forest 19 and C4.5 family 9 methods It is possible to represent any consistent set of boolean association rules as a decision tree and vice versa However it is generally unclear how the trees generated by current tree-based classifiers are related to high confidence/support CARs which are known to be particularly useful for microarray data 1 2 6 7 11 BSTC is explicitly related to and motivated by CAR-based methods To the best of our knowledge there is no previous work on mining/classifying with BARs of the form we consider here Perhaps the work closest to utilizing 100 BARs is the TOPRULES 22 miner TOP-RULES utilizes a data partitioning technique to compactly report itemlgene subsets which are unique to each class set Ci Hence TOP-RULES discovers all 100 confident CARs in a dataset However the method must utilize an emerging pattern mining algorithm such as MBD-LLBORDER 23 and so generally isn't polynomial time Also related to our BAR-based techniques are recent methods which mine gene expression training data for sets of fuzzy rules 24 25 Once obtained fuzzy rules can be used for classification in a manner analogous to CARs However the resulting fuzzy classifiers don't appear to be as accurate as standard classification methods such as SVM 25 VII CONCLUSIONS AND FUTURE WORK To address the computational difficulties involved with preclassification CAR mining see Tables IV and VI we developed a novel method which considers a larger subset of CAR-related boolean association rules BARs These rules can be compactly captured in a Boolean Structure Table BST which can then be used to produce a BST classifier called BSTC Comparison to the current leading CAR classifier RCBT on several benchmark microarray datasets shows that BSTC is competitive with RCBT's accuracy while avoiding the exponential costs incurred by CAR mining see Section VB Hence BSTC extends generalized CAR based methods to larger datasets then previously practical Furthermore unlike other association rule-based classifiers BSTC easily generalizes to multi-class gene expression datasets BSTC's worst case per-query classification time is worse then CAR-based methods after all exponential time CAR mining is completed O SlS CGl versus O Si CGi As future work we plan on investigating techniques to decrease this cost by carefully culling BST exclusion lists ACKNOWLEDGM[ENTS We thank Anthony K.H Tung and Xin Xu for sending us their discretized microarray data files and Top-k/RCBT executables This research was supported in part by NSF grant DMS-0510203 NIH grant I-U54-DA021519-OlAf and by the Michigan Technology Tri-Corridor grant GR687 Any opinions findings and conclusions or recommendations expressed in this material are those of the authors and do not necessarily reflect the views of the funding agencies REFERENCES 1 G Cong K L Tan A K H Tung and X Xu Mining top-k covering rule Mining SDM 2002 5 R Agrawal T Imielinski and A Swami Mining associations between sets of items Y Ma Integrating classification and association rule mining KDD 1998 11 T McIntosh and S Chawla On discovery of maximal confident rules without pp 43-52 1999 24 S Vinterbo E Kim and L Ohno-Machado Small fuzzy and interpretable pp 165-176 2006 1071 pp 207-216 1993 6 G Dong pp 273-297 t995 9 pp 5-32 2001 20 W Li J R Quinlan Bagging boosting and c4.5 AAAI vol 1 V Vapnik Support-vector networks the best strategies for mining frequent closed itemsets KDD 2003 4 M Zaki and C Hsiao Charm L Wong Identifying good diagnostic genes or gene expression data SIGMOD 2005 2 G Cong A K H Tung X Xu F Pan and J Yang Farmer Finding interesting rule gene expression data by using the gene expression based classifiers BioiiiJcrmatics vol 21 l and Inrelligent Systenis IFIS 1993 16 Available at http://sdmc.i2r.a-star.edu.sg/rp 17 The dprep package http:/cran r-project org/doclpackages dprep pdfI 18 C Chang and C Lin Libsvm a library for support vector machines 2007 Online Available www.csie.ntu.edu.tw cjlin/papers/libsvm.pdf 19 L Breiimnan Random forests Maclh Learn vol 45 no 1 M Chen and H L Huang Interpretable X Zhang 7 J Li and pp 725-734 2002 8 C Cortes and Mac hine Learming vol 20 no 3 in microarray data SIGKDD Worikshop on Dtra Mining in Bioinfrrnatics BIOKDD 2005 12 R Agrawal and R Srikant Fast algorithms for mining association rules VLDB pp 1964-1970 2005 25 L Wong and J Li Caep Classification by aggregating emerging patterns Proc 2nd Iat Coif Discovery Scieice DS 1999 gene groups from pp 487-499 t994 13 Available ot http://www-personal umich edu/o markiwen 14 R Motwani and P Raghavan Randomized Algoriitlms Caim-bridge University Press 1995 15 S Sudarsky Fuzzy satisfiability Intl Conf on Industrial Fuzzy Contri J Han and J Pei Cmar Accurate and efficient classification based on multiple class-association rules ICDM 2001 21 F Rioult J F Boulicaut B Cremilleux and J Besson Using groups for groups in microarray datasets SIGMOD 2004 3 concept of emerging patterns BioinformJotics vol 18 transposition for pattern discovery from microarray data DMKD pp 73-79 2003 22 J Li X Zhang G Dong K Ramamohanarao and Q Sun Efficient mining of high confidence association rules without S Y Ho C H Hsieh H pp 725-730 1996 10 B Liu W Hsu and support thresholds Principles f Drata Mining aind Knowledge Discovery PKDD pp 406 411 1999 23 G Dong and J Li Efficient mining of emerging patterns discovering trends and differences KDD J Wang J Han and J Pei Closet Searching for An efficient algorithm for closed association rule mining Proc oJ the 2nd SIAM Int Con on Data in large databases SIGMOD 


