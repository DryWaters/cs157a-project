Practical Distributed Classiìcation using the Alternating Direction Method of Multipliers Algorithm Peter Lubell-Doughtie and Jon Sondag Intent Media New York USA  peter.lubell-doughtie jon.sondag  intentmedia.com Abstract We describe a speciìc implementation of the Alternating Direction Method of Multipliers ADMM algorithm for distributed optimization This implementation runs logistic regression with L2 regularization over large datasets and does not require a user-tuned learning rate metaparameter or any tools beyond MapReduce Throughout we emphasize the practical lessons learned while implementing an iterative MapReduce algorithm and the advantages of remaining within the Hadoop ecosystem Keywords distributed algorithms distributed computing optimization predictive models I I NTRODUCTION When used at scale statistical modeling algorithms need to function correctly on large amounts of data in a practical amount of time In many cases production-scale datasets do not t into the memory available on a single machine and the dataset needs to be distributed over a cluster The MapReduce programming model allo ws clients to run computations on large distributed datasets with commodity machines Apache Hadoop is a well known widely used and broadly supported MapReduce platform which works with the Hadoop Distributed File System HDFS and supports arbitrarily large datasets The ADMM algorithm is a distrib uted con v e x optimization algorithm that can be used to t machine learning models with convex lossÑincluding linear regression logistic regression and support vector machinesÑand L1 or L2 parameter regularization We chose to implement ADMM using Hadoop in order to beneìt from the wealth of existing Hadoop utilities and the communityês extensive knowledge Regardless of the problems concerning Hadoopês support for iteration we sho w that Hadoop can be used to implement an efìcient iterative algorithm which is good enough in the sense of That is to say  the beneìts of using a reliable platform that easily integrates with our existing toolset outweigh the small increase in runtime per job To support iteration within Hadoop we write data from external storage to HDFS which reduces network latency when transferring large amounts of data We also use Hadoopês Input Splits to persistently partition data between mappers over multiple iterations Many challenging problem domains for example click attribution in online advertising involve noisy observations of sparse data Modeling in these domains requires signiìcant amounts of data and an interpretable model Here we focus on logistic regression with L2 norm Traditional batch optimization algorithms for logistic regression t the model parameters iteratively and require that the training dataset t into memory for good performance ADMM also proceeds iteratively but solves an intermediate optimization problem in parallel on subsets of the training data then combines the intermediate solutions to nd a consensus result at each iteration The time-consuming and memory-intensive intermediate optimization problems are solved in parallel When executing long-running modeling jobs hand-tuning parameters can be especially time-consuming To avoid this we use ADMM with methods that automatically tune parameters while still guaranteeing convergence This makes for an easy transition from small-scale prototypes t using batch optimization methods on a sample of the dataset to large-scale models t over the entire dataset Our main contribution is an adaptation of ADMM that makes large-scale logistic regression user-friendly on a popular platform Using our implementation data scientists can accurately t models without tuning meta-parameters The rest of the paper is organized as follows In section II we formulate logistic regression using the ADMM algorithm and describe the equations necessary to calculate intermediate values Based upon the formulae and procedures we develop section III provides a brief review of MapReduce and the necessary details concerning how to implement the ADMM algorithm within Hadoop MapReduce We present the results of using ADMM to model a production scale dataset of website visitors in section IV In section V we review recent work related to iterative optimization with Hadoop and in section VI we conclude II P ROBLEM F ORMULATION In this section we describe exactly how we formulate regularized Logistic Regression with ADMM Given a matrix of features A  R m  n and a vector of their labels b  R m with b i  1  1   our goal is to compute the probability Pr  b i 1  A i  for each row 1  i  m  The rst column of the feature matrix represents the intercept and all values in this column are set to 1 In general the not necessarily distributed convex model tting problem with regularization can be written as minimize 1  m m  i 1 l i  A T i x  b i  r  x   1 2013 IEEE International Conference on Big Data 978-1-4799-1293-3/13/$31.00 ©2013 IEEE 773 


where l i is the loss for training example i  r isaregularization term and x  R n is the vector that solves the optimization problem and deìnes the logistic regression model In the case of L2 regularized logistic regression the problem becomes minimize 1  m m  i 1 log\(1  exp  b i A T i x     x  2 2  where  is the regularization factor If we reformulate the above in ADMM global consensus form and reîect the partitioning of training examples across N machines in the cluster the problem becomes minimize 1 m m 1  i 1 1 log\(1  exp  b i 1 A T i 1 x 1     1 m m N  i N 1 log\(1  exp  b i N A T i N x N     z  2 2 subject to x j  z 0 j 1 N where x j  R n is the logistic regression t on node j  z  R n is a variable representing the global consensus the vector of parameters that deìnes the model result The constraint x j  z 0  enforces equality of the parameter estimates across machines The ADMM algorithm for the above problem is x k 1 j  argmin x j 1 m j m j  i j 1 log\(1  exp  b i j A T i j x j  2   k 2  x j  z k  u k j  2 2 z k 1          x k 1 q  u k q if q 1 N k 2   N k  x k 1 q  u k q  otherwise 3 u k 1 j  u k j  x k 1 j  z k 1  4 where k is the iteration number  k is the penalty parameter see Section III for iteration k  and  x q represents the average across all mappers of the q th element of the vector  x  R n  Formally  x q  1 N  N j 1 x q j  and similarly for  u  The rst elements of  x and  u   x 1 and  u 1  correspond to the intercept and are not regularized therefore we must treat them differently from the other values in the vector A i j and b i j are the portion of the data assigned to and used in mapper j  The values of the x j are calculated in parallel on the mappers while the values of z and u are calculated on the reducer The convex minimization problem for each x j update is solved using the L-BFGS low-memory BFGS method W e use a J a v a implementation of LBFGS which is self contained and has performed well on Hadoop nodes 1 III I MPLEMENTATION In this section we describe implementing ADMM for Hadoop MapReduce and provide practical details relevant to building models within a production environment The MapReduce model divides into three phases the map the shufîe and the reduce In the map phase the input data is split among a set of mappers and each mapper applies a function to the set of data assigned to it In the shufîe phase the output of the mappers is assigned to a reducer In the reduce phase the mapper output is aggregated to create the nal values which are then output by the reducer The map and reduce steps can be expressed as map  k 1 v 2   list  k 2 v 2  reduce  k 2  list  v 2   list  v 2   where each mapper has a unique key k 1  The shufîe is concerned with mapping the intermediate key-value pairs  k 2 v 2   output by the mappers to the reducers To implement MapReduce in Hadoop we deìne classes for the mapper and the reducer along with a driver that handles input arguments and speciìes the mapper and reducer classes the shufîe is handled internally by Hadoop In the context of ADMM each mapper performs the resource intensive task of computing the current x j  After all mappers have completed their computations we use a single reducer to compute the z and u j updates A Persistent Data with Input Splits When each mapper calculates the x k 1 j values on iteration k 1  it must use the u k j values that were calculated for the same mapper in the previous iteration Hadoop does not normally accommodate this sort of persistence suggests using Apache HBase a distributed data store however this would add a new component and its accompanying complexity to the modeling framework As an alternative we use Hadoopês notion of input splits to associate the correct x j and u j values with each other and with the location on HDFS of the data that they correspond to Input splits specify a split length and a split ID  These respectively determine the size of the split data and which node to use when performing computations on that data To ensure that the correct u j values are loaded when calculating an x j value the mapper reads the split ID and chooses the u i values based on this split ID The z values are the same in each x j formula i.e across mappers To reduce transfer cost we replicate the current z values across all mappers at the start of each iteration 1 https://code.google.com/p/vladium 774 


1 procedure ADMM A  b  N  maxIterations  2 k 0 3 while notConverged and k  maxIterations do 4 for j 1  N do 5 update x k j using Eq 2 6 end for 7 update z k using Eq 3 8 for j 1  N do 9 update u k j using Eq 4 10 end for 11 update  k using Eq 5 12 k  k 1 13 end while 14 write z k to S3 15 end procedure Figure 1 The ADMM procedure implemented for Hadoop MapReduce notConverged is a helper function that evaluates the norms to check for convergence B Automatically Updating  We use the reducer to update the penalty parameter   The number of iterations to convergence depends upon   and hand-tuning it can take a signiìcant amount of time because we must often run the algorithm for some time to determine the efìcacy of the chosen value By varying  per iteration we can avoid spending time hand-tuning   We use the scheme suggested in to update  on each iteration  k 1        incr  k if  r k  2   s k  2  k  decr if  s k  2   r k  2  k otherwise 5 where r k is the primal residual s k is the dual residual and  1   incr  1   decr  1 are user-speciìed parameters We have used the recommended values of  10 and  incr   decr 2  C Considerations for MapReduce Figure 1 shows the coordination algorithm for executing the ADMM iterations The feature matrix A  the vector of target values b  the number of mapper nodes N  and the maximum number of iterations maxIterations  are input to the procedure The procedure begins by initializing the current iteration number to zero and passing control to the driver On line 3 the driver checks that the algorithm has not converged and that the number of iterations is less than the maximum number of iterations We assume there is a helper function notConverged  which returns true unless  r k  2   pri and  s k  2   dual  If the driver has not converged and the maximum number of iterations has not passed we distribute the z and u i to the mappers and begin the next iteration Lines 4 through Figure 2 The Job Runner sets paths for the input data the output data the Jar le with ADMM and the value of any adjustable parameters e.g the number of iterations ADMM computes and stores intermediate data in HDFS then after the nal iteration the problem solution  z k in ADMM notation is output to S3 12 show the x k j  z k  u k j  and  k updates that occur in the mappers and reducer on each iteration Alternatively if the while loop condition is false the algorithm is complete and we output the current vector of predicted weights z k to persistent storage and exit as show on line 14 The output data is written to and the input data is read from Amazonês simple storage service S3 To reduce the network latency involved in transferring data from S3 to the MapReduce nodes we store the dataÑfeature matrix A and target values b directly on the nodes via HDFS An advantage of running Hadoop on Amazonês Elastic Map Reduce EMR service and using data stored in S3 is that there are no transfer fees when moving data between these two systems The infrastructure workîow is shown in Figure 2 Wherever feasible we have made our implementation of the ADMM algorithm generic Arguments to the driver allow users to exclude columns from the input data optionally add an intercept set the initial   set the maximum number of iterations and set the input and output locations We have released an implementation of ADMM for Hadoop as an open source Java library 2 IV R ESULTS As part of our modeling pipeline we run the ADMM algorithm daily on rolling historical data consisting of approximately 25 million records with 440 features per row Our training examples are real vectors representing website visit attributes and our labels are real scalars representing each visits known value The goal is to build a model that accurately segments unseen visitors by predicted value based upon their attributes As depicted in Figure 2 we load the data and a Jar le containing the ADMM algorithm from S3 into EMR To evaluate the performance of our implementation of the ADMM algorithm we examine the output of one dayês run We measure performance by comparing the change in loss function per iteration We have also examined equivalent 2 https://github.com/intentmedia/admm 775 


Figure 3 The difference between the modelês predictions of the primal objective values and the true value as approximated by the model after many iterations The loss decreases dramatically at rst and then continues to decrease during later iterations results from other days and veriìed that the results do not vary substantially from day to day We plot the progress of our algorithm by showing that the value we are minimizing in Equation 1 decreases per iteration Figure 3 shows this through the estimated loss in primal objective value which we calculate by subtracting from the current primal objective value an approximated minimum primal objective value taken after many iterations 75 in this case The estimated loss is plotted for each of the rst 30 iterations on a logarithmic scale We see that the loss decreases and therefore that the accuracy consistently improves as more iterations pass On a cluster of 20 high memory quadruple extra large EMR instances 25 iterations run in 1 hour and 25 minutes V R ELATED W ORK The algorithm and our implementation are based upon  which introduced the ADMM algorithm 4 presents a more efìcient approach to iterative computation in Hadoop requiring modiìcations to core Hadoop code which reduce the time needed to transfer data and initialize MapReduce jobs This is not the approach we took as we remained within the Hadoop ecosystem and avoided the ramp-up costs associated with a less well known solution Based on our experience MapReduce is good enough for ADMM and logistic regression We evaluate the cost as described in and conclude that the reduction in implementation costs gained by using Hadoop outweigh the performance improvements that could be gained by using a less wellknown platform  presents a MapReduce implementation of tree ensemble learning and uses a wrapper for MapReduce to coordinate iterations of the underlying algorithm presents a distributed method for classiìcation that is similar to random forests Apache Mahout contains an implementation of logistic regression that uses stochastic gradient descent SGD 3 As noted in this SGD implementation is sequential which substantially limits the performance of the algorithm and makes it difìcult to scale To address this presents a scalable convex loss system that uses a Hadoop compatible variant of MapReduce VI C ONCLUSION Using an ADMM implementation for MapReduce allows a simpler workîow when moving modeling ideas from prototype to production-scale We showed a speciìc example of using the ADMM algorithm to build a logistic regression model Importantly ADMM is a generic optimization algorithm that can be applied to other problems with minimal modiìcation Our contribution is a distributed implementation on Hadoop that allows users to experiment with many different models at scale In future work we plan to support additional convex loss optimization problems R EFERENCES  J Dean and S Ghema w at Mapreduce simpliìed data processing on large clusters in Proceedings of the 6th conference on Symposium on Opearting Systems Design  Implementation Volume 6  ser OSDIê04 Berkeley CA USA USENIX Association 2004 pp 10Ö10  T  White Hadoop The Deìnitive Guide  1st ed OêReilly Media Inc 2009  S Bo yd N P arikh E Chu B Peleato and J Eckstein Distributed optimization and statistical learning via the alternating direction method of multipliers Found Trends Mach Learn  vol 3 no 1 pp 1Ö122 Jan 2011  Y  Bu B Ho we M Balazinska and M D Ernst Haloop efìcient iterative data processing on large clusters Proc VLDB Endow  vol 3 no 1-2 pp 285Ö296 Sep 2010  J Lin Mapreduce is good enough if all you ha v e is a hammer throw away everything thatês not a nail CoRR  vol abs/1209.2191 2012  J Bonnans Numerical optimization theoretical and practical aspects  ser Universitext 1979 Springer-Verlag New York Incorporated 2003  B P anda J S Herbach S Basu and R J Bayardo Planet Massively parallel learning of tree ensembles with mapreduce in Proceedings of the 35th International Conference on Very Large Data Bases VLDB-2009  2009  J Lin and A K olcz Lar ge-scale machine learning at twitter   SIGMOD  2012  A Agarw al O Chapelle M Dud  k and J Langford A reliable effective terascale linear learning system CoRR  vol abs/1110.4198 2011 3 https://cwiki.apache.org/conîuence/display/MAHOUT/Logistic+Regression 776 


  5 day. As a high data volume case, a downlink rate of 9.6 kbps and a 25% of overhead protocol losses, resulting in 1.96MB of data volume per day, is considered Analysis of battery capacities and mission data volume requisites are still needed for the sake of energy saving and downlink bandwidth. The preliminary results are not consistent in this moment, since other subsystems power consumption analysis is not available so far The complete placement and floorplanning of the designed payload is illustrated in the Fig. 4  Figure 4 \226 The ProASIC3E complete placement and floorplaning for the NanoSatC-BR1 payload   5  S UMMARY A ND F UTURE W ORK  The test bed platform operation was demonstrated by using a prototype board. Several functional tests were performed connecting the test bed platform to the magnetometer payload, and interfacing the ProASIC3E test bed to other FPGA through I2C bus. The second FPGA simulates the NanoSatC-BR1 onboard computer. The SMDH ASIC behavior was emulated inside the ProASIC3E \(since the test chip was not available during the test setup\he FPGA OBC requested data from FPGA slave \(test bed platform through I2C bus, the same way the NanoSatC-BR1 OBC will request the data when its development is completed After the request acknowledgment, the ProASIC3E starts to send data from MIPS, SMDH ASIC tests and magnetometer measurements, following a prescribed priority The data are received in the FPGA OBC and sent back to a computer, and logged for later analysis \(Fig. 5\The results from MIPS and SMDH ASIC are conformed to the golden model, while the readouts from the magnetometer are compared to other measured sensors in the same environment. These were equivalent during all test conditions As near future work, the missing modules will be implemented to control the housekeeping circuits. New functional tests need to be performed with the real OBC and the SMDH test chip, and new consumption analysis needs to be remade, considering orbital patterns and battery capacities A more generic central block is intended to simplify the integration, configuration and control of new payloads and soft cores. The inclusion of different power modes can optimize battery capabilities and/or increase performance. A second nanosatellite mission project is under analysis, and the application of the test bed platform is been considered since the initial stages, to facilitate the partial integration of the payloads, and even to be embedded in the flight model A CKNOWLEDGMENTS  The authors acknowledges the Brazilian Institutions Coordena\347\343o de Aperfei\347oamento de Pessoal de N\355vel Superior \226 CAPES/MEC \(for the schollarship\he Microeletronics Graduate Program of Universidade Federal do Rio Grande do Sul \226 PGMICRO/UFRGS, for financial support, and the Brazilian Space Agency  Figure 3 \226 The experimental setup hardware  


  6 R EFERENCES  1  C. Kief et al., \223The Advent of the PnP Cube Satellite\224 IEEE Aerospace Conference, March 2012  M. Berg et  al  223A C o m p re hens i v e Me t h odol ogy  f o r Complex Field Programmable Gate Array Single Event Effects Test and Evaluation\224, IEEE Transactions on Nuclear Science, vol. 56, no. 2, pp. 366-374, April 2009  T  Ol dh a m  F   Mc L e a n  223 T ot al Ion i zi n g Do s e E f f e ct s i n  MOS Oxides and Devices,\224 IEEE Transactions on Nuclear Science, vol. 50, no. 3, pp. 483\226498, December 2003  H  Barn ab y   223 T ot al Ioni zi ng-D o s e Effect s i n Moder n  CMOS Technologies\224, IEEE Transactions on Nuclear Science, vol. 53, no. 6, pp. 3103\2263121, December 2006  J  B a rth 223 M odel i ng Space R a diatio n  E n v i ronm e n ts 224 IEEE Nuclear and Space Radiation Effects Conference Short Course, July 1997  E. Sta s s i n opo u l o s  223 R adiat i on Env i ro nm e n t i n  Space\224  IEEE Nuclear and Space Radiation Effects Conference Short Course, 1990 7  J   T a r r illo et al., \223An a l y z i n g t h e E f f ect s o f T I D in an  Embedded System Running in a Flash-Based FPGA\224 IEEE Transactions on Nuclear Science, vol. 58, no. 6 pp. 2855-2862, December 2011 8  M i c r o s em i C o r p   223 F PGA R e li a b i l ity  an d  th e Su n s p o t  Cycle\224, white paper, September 2011  H Q u i n n et al., \223Fl i g ht E x pe rience of the Xilinx Virtex4 FPGA\224, Proceedings of the RADECS 2012 September 2012  10  N  S c h u ch et al    223 P r o g r es s in th e N a n o Sa tC B r 226  Cubesats Development\224, 62nd International Astronautical Congress, October 2011  J  A za m b u j a et al., \223Detect i n g  SEEs i n  Microprocessors Through a Non-Intrusive Hybrid Technique,\224 IEEE Transactions on Nuclear Science vol. 58, no. 3, pp. 993\2261000, December 2011 Biographies William Guareschi received a B.S in Computer Science from Universidade Federal de Santa Maria, Santa Maria in 2011. He is a M.S candidate in Microelectronics at UFRGS, Porto Alegre. His main research interests are FPGAs computer architectures, fault tolerant systems and small nanosatellites systems. William is an IEEE student member, participating in the Circuits and Systems Society  Jos\351 Rodrigo Azambuja received a B.S. in Computer Engineering and M.S. in Computer Science from Universidade Federal do Rio Grande do Sul, Porto Alegre in 2008 and 2010. He is a Ph.D candidate at the UFRGS. His main research interests are computer architectures and fault tolerant systems  Fernanda Kastensmidt received a B.S. in Electrical Engineering and M.S. and Ph.D. in Computer Science from Universidade Federal do Rio Grande do Sul, Porto Alegre in 1997, 1999 and 2003 respectively. She joined the Instituto de Inform\341tica faculty as a professor in 2005. Her current research focuses on soft error mitigation techniques for SRAM-based FPGAs and integrated circuits, such as microprocessors, memories and network-on-chips NoCs\, and the analysis and modeling of radiation effects in those circuits. She currently advises M.S. and Ph.D. theses at the Computer Science Graduation Program \(PPGC\ and at the Microelectronics Program PGMICRO\. Fernanda has published the book FaultTolerance Techniques for SRAM-based FPGAs in 2006 She is an IEEE member  Ricardo Reis received a B.S. in Electrical Engineering \(1978\ and M.S. in Computer Science \(1979 from Universidade Federal do Rio Grande do Sul, Porto Alegre. He received a DEA in Electronics and Radio communications and Ph.D. in Informatics at Institut National Polytechnique \(INPG\, Grenoble, in 1980 and 1983. His Postdoctoral work was at Laboratoire TIM3IMAG/INPG, 1986. He is a professor at UFRGS and the Graduate Program in Microelectronics Coordinator. His main areas of research are Microelectronics, CAD Physical Design, VLSI Design, VLSI CAD and radiation tolerant ASIC projects. Ricar do is a former IEEE Circuits 


  7 and Systems Society Vice-President and former Brazilian Computer Society President. He is an IEEE Senior Member Otavio Dur\343o received a B.S. in Civil Engineering from Universidade Cat\363lica do Rio de Janeiro, Rio de Janeiro, in 1974 M.S. in Industrial Automation and Operational Research \(1980\ and Ph.D. in Industrial Automation 1986\ from Pennsylvania State University. At INPE, he is the Deputy Planning Coordinator, the former Head of the Space Mechanics and Control Division, and Engineer since 1986. Otavio is also the coordinator of the Space Politics Committee from Brazilian Aerospace Association, and a founding member of the Association. Committee member at Brazilian Space Agency representing INPE for two R&D programs. He is currently engaged in projects of development of small satellite in cooperation with Brazilian universities  Nelson Schuch received a Lic.es Sci. in Physics from Universidade Federal de Santa Maria, Santa Maria, in 1972, M.S. in Astrophysics from Universidade Presbiteriana Mackenzie, S\343o Paulo, in 1975, Ph.D. \(1979\ and Pos Doctor \(1980\ in Physics \226 Astrophysics from University of Cambridge, England. He is the mentor of the actions for the development and construction of the INPE\222s Southern Regional Space Research Center and the Southern Space Observatory His activities are related to high energy astrophysics Sun-Earth interactions, space weather, geomagnetic storms and spatial geophysics. He leads nanosatellite developments project. Nelson is consultant and counselor of Brazilian Aerospace Association  Gustavo Dessbesel received a B.S in Computer Science from Universidade Federal de Santa Cruz do Sul, Santa Cruz do Sul, in 2003, and M.S. in Electrical Engineering from Universidade Federal de Santa Maria, Santa Maria, in 2008. His work is related to electronic circuits, and the main topics are FPGAs image processing, computat ional view, digital filters embedded systems and digital ASICs design. Gustavo is currently an ASIC designer and Project Leader at Santa Maria Design House   


  8 The transition from idle state to gimbal activity state requires use of a set of critical commands to disable the gimbal safety inhibit. This inhibit prevents inadvertent operation of the laser during external crew or robotic activities by preventing actuation of the gimbal pointing. In order to disable the inhibit, a pair of two commands, one 223arm\224 and one \223fire\224, must be sent in succession to the flight software. Following receipt of these commands, the gimbal can be commanded to move away from the stow position and away from the limit switches that bound the range of motion Upon movement of the gimbal, the Flight System enters gimbal activity state. The primary operations activity within this state is the gimbal calibration, which defines the reference points for each axis. This activity is a sequence of movement commands that drive the gimbal through its full range of motion and establish reference points at the edge of each axis by measuring where the limit switches are actuated. Since the actuators lack encoders, the gimbal can only determine its position by counting commanded steps The transition from gimbal activity state to laser enabled state requires additional critical commands to be sent to the FS to disable the laser safety inhibits. The laser arm/fire critical commands disable the inhibit preventing closure of the 28V power relay to the laser. In order to decentralize the laser activation process for safety purposes, independent commands must be sent from the OPALS MOS and the POIC for 28V power to be routed to the laser. Each of the commands closes an independent power relay along the 28V power path on the FS power board. Once the 28V power is provided to the laser, the FS enters \223laser enabled\224 state The major activities in this state are the powering on of the flight camera and the powering of the flight laser unit to full power. The latter involves activating a 5V power relay to the laser booster, which is controlled by its own inhibit that requires an additional arm/fire command pair to be sent Once these major activities are complete, the FS can be commanded to point toward the first entry in the Blind Pointing Table, at which point, the FS is configured for Demonstration The FS enters demonstration state upon execution of the commence_demo command. Since this transition must be set to occur at a specific time determined by the ISS trajectory, this command will be scheduled in a command sequence. The Flight System restricts all commands during this state except for the abort_safe command to transition the entire payload to safe state, should an anomaly occur The sequence of activities in the demonstration state follows the description in the first part of section 3 The post-Demonstration activities involve safely powering off the laser, driving the gimbal to stow, and re-enabling all inhibits. These activities are accomplished by a post-demo command sequence that executes automatically upon nominal exit of demonstration state. Once all inhibits are  Figure 7: Flight System states diagram 


  enabled, the Flight System is returned to i d begin downlinking  accumulated engin e camera frames from the file system via t Once all products are downlinked and a fin a made, the 28V power is removed from the the Flight System activities. Figure 8 sho w in-the-life timeline which includes so m assumptions about the durations required t o tasks  4  ISS  I NTERFACE  The ISS interface is multifaceted and i n connections, software, and communicati o teams at the various NASA centers. I f interfaces are considered, a number of a s significant influences on a project, directl y throughout its lifecycle may be missed G interface can be thought of as having thre interaction: programmatic, technical, a n remaining of this section provides a disc u them Programmatic Interface For over 11 years, the International Space ISSP\ has continuously maintained a hu m low Earth orbit with constant operation a around the globe.  After 14 years of co visiting vehicles and integration of 390 me t qualified equipment, the ISS is the larg e created in space. Supporting such a m a requires a daunting number of engineers, to thousands In 2011 STS-134 delivered the A Spectrometer to the ISS marking the en d States\222 p rimary assembly phase of the ISS completion the ISSP has undergone a sw e from an assembly centric organization to a one. Supporting this new focus, the ISS P amongst 15 primary offices representing t h expertise. OPALS\222 primary five offices o shown Figure 9 The Research and Integration Office \(OZ h responsibilities for managing and interfaci n like OPALS.  Systems engineers with b r Figure 8: Day-in-thelife activities a r 9 d le state and can e ering logs and t he ISS RF link a l health check is payload, ending w s a typical daym e conservative o perform various n cludes physical o n with all the f only technical s pects that exert y and indirectly G enerally the ISS e e major areas of n d safety. The u ssion of each of Station Program m an presence in al support from nstruction, 140 t ric tons of space e st outpost ever assive operation o taling well in the A lpha Magnetic d of the United Following this e eping transition a payload centric P is now divided h e breadth of ISS o f interactio n are h olds the primary n g with payloads r oad experiences reside within this office to expertl y the rest of the program. On an as-n e and Integration Office has aided d with over 300 individuals across 30 Despite well planned standardizati o human interface between payload is necessary to facilitate the excha n hundreds of engineers and t h specifications Technical Interface The Station\222s massive supporting o support its technical complexit y complexity can amount to 694 across 11 disciplines.  These disci p electrical, command and da t environmental, materials, marking astronaut and software interfaces To both standardize and simplify a connections are provided by a Flig h Mechanism \(FRAM\lighted come in many sizes and varieties cargo or instrument they support Express Pallet Adapter \(ExPA The physical interface occurs i n translation, and operation. The fi OPALS integrated into the trunk o stack ascending to orbit.  The lau n r e scheduled and performed relative to the beginning o Figure 9: Simplified org chart o JSC offices that OPALS has int e points in its lif e y direct payloads through e eded basis, the Research d irect OPALS interaction supporting teams o n and documentation, a d evelopers and the ISSP n ge of information across h ousands of pages of o rganizatio n is scaled to y For payloads, this interface requirements p lines include structural t a handling, thermal maintainability, robotic a ll physical interfaces and h t Releasable Attachment in Figure 10. FRAMs to suit the need of the OPALS has chosen an n three phases: launch rst of these phases has f a Falcon 9 and Dragon n ch on which OPALS is  o f a Demonstration  o f the primary ISS and e racted with at various e cycle 


  manifested will mark the third SpaceX flig h Commercial Resupply \(CRS\tract and m first SpaceX CRS flight extensively red e external cargo.  These modifications inclu d updated Falcon 9 \(v1.1\nd a Drago n providing a suite of launch characteris t vibro-acoustic environmental ones, which characterized.  Since the OPALS Syste m Review \(SRR\ early 2010, the ongoin g of these interfaces has led to a net change o ISS requirements and essentially 100% c h Dragon requirements, including updates deletions Following a successful berth with the IS S phase to OPALS\222 operational destina t Utilizing the capable Mobile Servicing S y the Mobile Berthing System, Special P u Manipulator \(SPDM\d Space S Manipulator System \(SSRMS\ic operators on the ground will extract O berthed Dragon and again mate OPALS\222 F R to a powerp roviding element \(the E n Replacement Unit Temporary Platform o SPDM.  After a nearly two-day roboti c SPDM will again install OPALS onto FRAM, this time at its intended operation a nadir, port side-facing ELC 1 FRAM 8 correctly utilize these robotic componen t Figure 11: OPALS orientatio n 10 h t under NASA\222s m ore notably, the e signed to carry d e a significantly n block upgrade t ics, particularly are not yet fully m Requirements g characterization o f 37% of the 694 h ange of the 117 additions and S the translation t ion can begin y ste m 227including u rpose Dexterous S tation Robotic elements\227ISS PALS from the R AM underbelly n hanced Orbital o r EOTP\ the c translation the another Passive a l location on the Figure 11 t s, 222 interface requirements are provided, the verified by use of a certified s t performed, OPALS will be the firs t type of robotic transfer In the event of a robotic continge n astronauts to intervene and ac c transfer towards final installation o standardized FRAM handholds o n could manipulate OPALS if the n interface is made possible wit implications for OPALS, though o p as orientation and timing, do ex i contingency crew member intera c Figure 10: The FRAM provides a the LV, the robotic arm and th e  n relative to the ISS at its operational location on EL C majority of which are t andard FRAM.  When t payload to undergo this n cy, capabilities exist for c omplish the remaining o f OPALS.  By using the n the ExPA, astronauts n eed were to arise. This h out additional design p erational concerns, such i st.  To implement this c tion, up to 2 weeks of a common interface for e ISS mounting points C 1, FRAM 8 


  unallocated planning would be required Finally, in the third interface phase, the O P installed and ready to operate on its ELC w its full suite of interfaces available. They i n avionics and software interfaces, which operations to commence OPALS will be the first payload installed o Even with a standardized specification means many questions, capabilities, and i addressed for the first time in p arallel w development and in collaboration with I engineers Safety Interface JPL engineers regularly design complex sent far into space never to interact wi t launch.  As a result, the human safety c o OPALS responded to have introduced n e every aspect of the design.   This experie n only learning how to navigate the pro approval from the technical experts on th e Review Panel \(PSRP\ the design, but solve engineering problems from a safety p not compromising technical goals The formal interaction between the pay l such as the OPALS project, and the PSRP series of Flight Safety Reviews \(FSRs  reviews the project and the panel iden t hazards created b y the payload and dec controls to keep those hazards from causi n either personnel or the ISS.   A safety submitted 45 days prior to a formal FSR review and comment. The submission i s presentation and hazard report walk-thro u takes a full day or two as all safety concer n are discussed and addressed The first meeting with the PSRP was a which focused on identifying applicab verifying that the appropriate requirem e referenced.  OPALS started at a time whe Figure 12: OPALS project milestones re l 11 P ALS FS will be w here it will have n clude electrical will enable full o n this new ELC a new interface i ssues have been w ith the OPALS I SS and SpaceX systems that are t h humans after o nsiderations that e w challenges in n ce involved not cess of gaining e Payload Safety also learning to p erspective while l oad developers occurs through a   th es e t ify all potential ide on a set of n g any damage to data package is for the PSRP to s followed by a u gh, which often n s and comments Phase 0 review le hazards and e nts were being n documentation was transitioning from shuttle req u documents so the initial meeting which standards are applicable to t h initial hazard assessment with th e some potential hazards the proj e Additionally, it helped guide th e choices that later could have sno w would have been difficult to progressed toward the more formal OPALS\222 Phase 1 review was s e project\222s PDR and reflected a fair time leading up to this review the p class 4 laser that required the h classification \(catastrophic\and i controls for all possible operation a the safety review OPALS discuss e with various members of the PRS P design approaches for controls r hazards from actualizing.  These meetings were essential leading i n the design then required minimal c h 1 review. This preparation had t h developing a strong relationship b members and the OPALS team The Phase 2 review typically fol l Design Review \(CDR\OPAL S formal technical interchange meeti n to review its hazards and solid i method of controlling them. With identified and most of the contro l debate, the Phase 2 review covere d testing and the supporting doc u p articularly strong focus on veri avionics and the hazard controls computer system controls a haz a Control System \(CBCS\trix m outlines the requirements for that meets the requirements, and the demonstrate complian h e into the high-level software archite level registers and memory man a reviewed by the Computer Safety l ative to the safety milestones outlined in NSTS 13830 and Data Submittal Requirements u irements to ISS-specific focused on establishing h e OPALS payload.   The e PSRP helped identify e c t had not considered e project\222s early design w balled into hazards that change as the design Phase 1 review e veral months after the l y mature design. In the p rojec t settled on using a h ighest level of hazard i dentified a number of a l scenarios.   Going into e d these choices in depth P to identify options and r equired to prevent the earlier discussions and n to the formal review as h anges to pass the Phase h e additional benefit of b etwee n the safety panel l ows a projec t 222s Critical S however, requested a n g \(TIM\with the PSRP i fy concurrence on the the hazard sources well l s requi r ing little further d the details of hardware u mentation and had a fication of the OPALS it governs.   When a a rd, a Computer Based m ust be developed that syste m the design that verifications planned to completed matrix delves cture as well as the lowa gement. This system is Panel \(CSP\ and if the Payload Safety Review 


  12 panel chair agrees with the approach he or she recommends it for approval to the PSRP. After many tweaks and focused discussion outside of the full PSRP the OPALS CBCS matrix was approved for Phase 2 As Phase 3 approaches, all agreed-to verifications of hazard controls must be performed, documented, and submitted Any deviations from the agreed-to verifications must be documented and approved by members of the PSRP In addition to the Flight Safety Reviews \(FSRs\und Safety Review schedule is also negotiated and a package is submitted.  This process is very similar to the PSRP one, but the scope of the hazards is limited to ground operations at the launch and processing facilities The key to successfully passing the FSRs has been constant early, and open communication with the PSRP. It has allowed for the quick identification of hazards and it has prevented the project from locking itself into designs that either could have adversely impacted safety or could have made compliance significantly more difficult. The PSRP and everyone involved in the safety side of the interface have shown great flexibility in allowing OPALS design freedom to ensure its mission success while enforcing a high standard for the safety of the ISS and those inhabiting it 5  D RIVERS   C ONSTRAINTS  AND R ESULTING I MPLEMENTATION  OPALS is no exception when it comes to facing the typical challenges that most space flight projects have to overcome throughout their lifecycle. Cost and schedule always seem insufficient. The workforce is sometimes stretched thin. All these challenges create constraints, end up driving the decision-making process and inescapably shape the final product. There are, however, many aspects that set OPALS apart from the average space borne instrument, and they too came with their own drivers and constraints Overall, the drivers and constraints can be classified as internal and external, with each category further divided into process- or technically-flavored This section is dedicated to examples, spanning each of those categories, of drivers and constraints that have in one way or another influenced the implementation of the project Internal, Process-Derived Drivers and Constraints The aspects falling under this section refer to those whose common denominator is the internally-mandated JPL process. The most influential and prevailing of these processes are documented in the JPL Design Principles and JPL Flight Project Practices. These documents provide guidelines on everything from cost, schedule reserves and technical margins to the pedigree of the parts and components used by the flight article and the level of documentation required Class D 227The biggest impact on the project, second only to the stringent cost cap, was the decision to implement it as a Class D payload risk classification per NASA NPR 8705.4 This decision was less of a constraint than it was a driver and it ultimately gave the project more flexibility in making decisions. The ramifications of this decision are many including the risk posture of the project in parts selection sparing philosophy, hardware handling requirements qualification program, fault protection, and extent of formal verification of requirements Early on in its lifecycle, the project sought to define the Class D implementation approach within the guidelines set by NASA procedural requirements. Specifically the project was allowed to 200  Build one proto-flight model with limited engineering models \(EMs\he only subsystem to have a full EM is the avionics. Other EMs include the acquisition camera one motor driver, and the in-house developed power board 200  Limit parts sparing to long-lead items only. The project only purchased one spare actuator and a few of the avionics cards. There are no spares for the laser, power board, camera, or any structural components 200  Use COTS hardware wherever possible. This aspect is discussed in further detail in a subsequent section 200  Forgo radiation or parts support. The extensive usage of COTS components implies, to a large extent, the absence of radiation susceptibility data, along with other environmental information. Thus, as early as the Mission Concept Review, the project and its stakeholders have accepted the potential missionending risk of unrecoverable single event upsets 200  Limit hardware and software Quality Assurance prior to system level integration and test. Typically, HQA/SQA involvement begins early in subsystem development well in advance of system I&T 200  Limit flight tech support to final torqueing and high risk procedures. The philosophy here is similar to the HQA/SQA involvement Requirements and V&V\227 Likely the most unglamorous aspect of producing a space-wo rthy payload is developing the set of requirements that govern its function and behavior. While Class-D status does not give the project a pass on developing requirements, it can shape the way the process is conducted and the extent to which requirements are developed For example, higher-class projects typically develop requirements down to level five or six, and bin them in dozens, if not hundreds of sets or modules. By contrast OPALS currently only has 782 requirements spread over 33 modules, with none of them containing more than 105 items. Of the 694 ISS requirements only 376 are applicable to OPALS, accounting for 48% of the total OPALS set Similarly, of the 117 launch vehicle requirements, only 58 are levied on OPALS. This means that the project has only 


  348 project-specific requirements that it in t verify. Figure 13 breaks down the requirements, including ISS and launc h residing at the various levels OPALS, however, is no poster child f development as it fell into the same trap t h projects\227regardless of size and risk verification and validation \(V&V\ time: it unnecessary requirements At CDR time OPALS realized that requirements it was signing up to verify d and testing, totaling almost 1300 \(796 OP A LV\, had become unmanageable give n schedule and cost-to-go. Shortly there a embarked on a months-long, projectevaluating its requirement set with the go a down to those that it couldn\222t justify not ve r By the time the Test Readiness Review c a later, the project had achieved an overall r Table 2\n the number of items it dee m verification Once again leveraging its Class D status from JPL management, the project decided 796 requirements it had written on itself 227 the ISS and launch vehicle ones\227 p rovide d others when it came to verification D explicitly verify a requirement meant one o f 1  The statement was deemed to be, in of a requirement and more of proced u on how something was to be done less of an instruction on how well s work and more of a documentatio n Without engaging in a detailed sem a the project changed the status of thes e requirement to policy. This meant t h still had to be implemented, but it di formally verified Figure 13: Two-thirds of the 782 OPAL S reside at the level 4 FS subsystem level the ISS and launch vehicle requi r 13 t ends to formally distribution of h vehicle ones f or requirements h at cripples many posture\227come developed many the number of d uring integration A LS + 529 ISS n the remaining a fter, the team wide effort of a l of trimming it r ifying explicitly a me nine months r eduction of 37 m ed important for and with bu y in that some of the 227 which excludes d less value than D eciding not to f two things some cases, less u ral specification while in others omething had to n on the design a ntics discussion e statements from h at the statement i d not have to be 2  The statement remained a r e not be explicitly verified at t written as the state-ofp r a Instead, its verification wou l parent at a higher level was order for a requirement to be a higher level it had to meet o criteria 200  It is enveloped by a larg e at a higher level; e.g flowdown, such as mass 200  Functionality/performan c higher level test\(s\ A N requirement will be app level tests. Put another cannot be verified at a h i meet that requirement w o in higher level test, the n requirement cannot be m o This process was a very time-int e number of individuals on the te thought to have saved the project a s and money in Phase D when the m a takes place There were, however, two excepti o applied to externally-levied IS S requirements, and those requirem e safety standards to be followed It is important to point out that the 421 requirements which were e v verification via this process shoul d but rather that the mission risk o f  one the project was willing t o underperformance of the system higher level testing. In doing so h had to accept an increased cost p roblems that might have been ca u caught until later during syste m significantly more expensive to fix S requirements These include r ements Table 2: Reduction achieved bet w number of requirements needi n Set  CDR  L1  1  L2 \(all  283  L3 \(all  216  L4 GS  66  L4 FS IRDs  158  L4 FS STR  188  L4 FS FSW  167  L4 FS Other  218  OPALS TOTAL  1296  ISS Total  468  LV Total  59  e quirement, but it would t he level at which it was a ctice usually dictates d become implicit if its successfully verified. In allowed to be verified at o ne of the following two e r \221capstone\222 requirement part of an allocation pointing budgets e can be rolled into N D failure to meet the arent in higher, syste m way, if a requirement i gher level OR failure to o uld not become apparent n the verification of that o ved to a higher level e nsive one for a limited am, but it is generally s a whole significant time a jority of the V&V effort o ns to this process which S and launch vehicle e nts which specified the argument is not that the v entually descoped from d not have been written f not verifying them was o accep t because any would be identified in h owever, the project also and schedule risk that u ght earlier, would not be m I&T when they are  w een CDR and TRR in n g explicit verification TRR  Change  1  0  230  19  138  36  28  58  61  61  101  46  109  35  158  28  823  37  411  12  39  34  


  Internal, TechnicallyD erived Drivers and C Equally instrumental in shaping the outco m were those decisions that were driven b aspects over which the project had decisio n In the same way that certain policy de c subsequent ones \(see Class D\ techni c a cascading effect throughout the design, p a Flight System COTS Usage\227 The most clear and pervas i the decision to utilize COTS parts whereve of the early conceptual architecture and des i was inherited from aircraftb orne syste m operated by JPL as recently as 2011.  In a n cost and complexity, the use of COTS c considered an attract ive option for the avio n risk of latent failure and unfamiliarity w i was essentially traded against the extrem e short lead times made possible by orderin g While the FS would evolve over time t o custom JPLb uilt boards and compon e implementation has left an indelible mark o n Traditional spacecraft and instrument elect r on strong conductive coupling to a temp e interface to maintain safe operat i Ruggedization is also common practi reliability in the vibration- and r a environments of launch and low-Ear t p ractices, however, are often impractical o r with COTS avionics, where the cost o ruggedizing for flight would surely dwar f components themselves. The OP A implementation, for example, comprises a and electrical components that are desi g forced-convection cooling in a r o environment. They have relatively little or Figure 14: Cross-sectional view of fligh t container showing arrangement of c 14 C onstraints m e of the project b y the technical n making control c isions impacted c al decisions had a rticularly for the i ve example was e r possible. Much i gn of the project m s designed and n effort to reduce c omponents was nics design \226 the i th the hardware e ly low cost and g 223off-the-shelf.\224 o include several e nts, the COTS n the FS design r onics boxes rely e rature-controlled i ng conditions ce to improve a diation-intensive t h orbit. These r even impossible o f modifying or f the cost of the A LS avionics series of boards g ned to receive o o m temperature no tolerance for extreme temperature, humidity, o r thus present significant technical c thermal control The ISS in particular poses an ad d and constraints owing to the n a payloads are installed and opera t docking at the ISS, OPALS is rem o SpaceX Dragon trunk.  During thi s p oints throughout the subsequent r o attach site on ELC1, the FS must a loss of power for up to six h architecture is therefore built maintaining a \223laboratory envi operations.  The flight avionics su b critical components like the l a distribution circuitry, is conta i cylindrical enclosure that maintai n environment throughout the nomin a highlighted in Figure 14, 120mm D found in everyday desktop compu t the air across the avionics compon e heat exchanger assembly.  By rec fashion, waste heat is transferre d avionics boards and components, t h and into the heat exchanger where i external radiator.  Further, the loss from a loss of electrical power to effective means of insulating the loss during said periods \226 gas c dominant, though negligible, mod e microgravity environment p rovi d natural convection The decoupling of heat transfer structural interfaces renders stan d finite volume heat transfer c necessitates an iterative anal y CAD/CAE and computational flui d to solve for characteristics of the fl u of the OPALS avionics enclosure  envisioned a cuboid structure wit h heated air from the electronics assembly.  Early rounds of CFD a n unacceptable pressure losses in t h turning and relatively narrow cro s the duct.  Over time, the iterate d streamline the flow path, result i b etween the fans and heat exchan cable routing to eliminate as ma n main flow path as possible. This i t results in a design that is com p cheaper to analyze, as well as more build. Figure 16 shows a velocity final design The relatively severe vibration e launch vehicle posed yet another avionics \226 most of which do  t system sealed c omponents r vacuum operation, and hallenges in maintaining d itional set of challenges a ture in which external t ed.  Upon arrival and o ved robotically from the s process, and at various o botic transfer to its final a ccommodate a complete h ours. The OPALS FS around creating and r onment\224 for nominal b system, along with other a ser diode and power i ned within a sealed n s a 1-atmosphere \(STP a l life of the payload.  As D C fans, not unlike those t ers, drive circulation of e nts and through a ducted irculating the air in this d convectively from the h rough the air mass flow i t is then conducted to an of circulation that resul t s the payload provides an flight system from heat c onduction becomes the e of heat transfer, as the d es no mechanism for paths from traditional d ard finite element and c odes ineffective, and y sis process between d dynamics \(CFD u id flow.  Early concepts  Figure 15\or example h a long duct to transfer to the heat exchanger n alysis, however, showed h e flow due to repeated s s-sectional areas within d design has evolved to i ng in a single \223turn\224 g er, and optimization of n y obstr u ctions from the t erative process naturally p utationally simpler and practical to fabricate and map of fluid flow in the e nvironment within the challenge for the COTS not even ship with a 


  15 manufacturer specification for vibration tolerance.  To deal with this issue, the rigid tray assembly that houses the avionics and fans is mounted on a system of wire-rope isolators designed to dampen random vibrations within the specific frequency spectra produced by the launch vehicle These isolators protect delicate solder joints and other nonrugged components from being torn apart by launch loads Further, in much the same way as the loss of circulation during power outages provides a natural means of insulation against heat loss, the wire rope isolator system\222s poor thermal conductivity also impedes conduction to the outer structure of the sealed container External, Process-Derived Drivers and Constraints While many decisions were internally motivated by the JPL processes and the OPALS paradigm, a significant number also came via the ISS and launch vehicle interfaces, both programmatically and technically As one might anticipate, the ISS interface in particular impacted the OPALS day-to-day operations as well as the design features it implemented. The most clear example of this aspect came via the over 400 requirements imposed by the ISS program on the OPALS payload, followed by the V&V process mandated to demonstrate compliance Requirements 227As one of the first payloads to negotiate both the ISS and Dragon interfaces, OPALS has been routinely involved in technical changes beginning and ending with its interface requirements.  A considerable ongoing effort within OPALS and its partners has been to solidify the understanding of the requirements levied When OPALS began in 2009, the Dragon had neither flown nor been fully designed.  This was best represented in the miniscule 16 provided requirements that were largely placeholders for what would  become the Dragon\222s interface specification.  At that point, expectations were that OPALS would be completed well before its Dragon flight. This schedule disconnect led to a considerable technical disconnect In order to proceed with OPALS development despite the lack of a full set of design requirements assumptions had to be made in three key areas: power, connectivity, and the launch environment.  The first question of power came about for an obvious reason: OPALS has thermally sensitive optics and commercial equipment, and these components need heater power to be kept warm in space.  Without requirements on Dragon power provisions, the project\222s first assumption was that the thermal control hardware designed for the on-orbit ISS environment would also prove valid during a Dragon ascent.  After exhaustive integrated thermal analysis, this assumption, and the resulting engineering implementation, has proven to be valid, and an additional 12 pages of requirements and supporting data now reflect this interface design After requirements were negotiated and an agreement was reached to provide sufficient thermal power during ascent the question remained of how this power would be routed into the OPALS payload.  To direct the efforts towards a solution of connectivity, OPALS turned to the JAXA H-II Transfer Vehicle \(HTV\d Space Shuttle designs that powered FRAM-based payloads similar to OPALS.  These additional carrier requirements allowed several connectivity options and it was thus taken to be a valid assumption that the Dragon team could design around OPALS\222 desired cabling pin assignments.  The OPALS design was thus submitted to SpaceX and, as this was the first request for a specific option, the OPALS connectivity solution has become the primary power distribution option amongst external Dragon cargo requirements The project\222s greatest challenge, however, was the need to design the FS prior to receiving any validated launch  Figure 15: Early design of the sealed container did not optimize component pl acement or airflow  Figure 16: CFD analysis led to a new component layout that allowed for more efficient heat removal 


  16 loading requirements.  To address this, OPALS began with JPL and NASA\222s extensive historical data on expected launch loads, amended with ample margin and overlaid with standard levels on workmanship. The resulting crude spectrum was then supplied to the ISS and SpaceX dynamics teams who over the course of several months helped refine test plans to a conservative but agreeable level, which again proved to be valid \(and indeed conservative\via integrated analysis and testing. At the time of this writing OPALS had successfully completed vibration testing Lastly, the project has dealt with the uncertainty that comes via requirements variability from the ISS interface. Since OPALS began, 37% of the 694 ISS interface requirements have changed. Even though only 376 of them are applicable to OPALS, the project has had to maintain cognizance in this regard over the full set.  Despite the fact that the ISS is an operational facility and many components have been flying in orbit for several years, both OPALS and the ISSP are still learning about the function and performance of these components.  As such, there have been ample updates to the electrical and robotic interface requirement segments These requirement changes are executed methodically in a thoroughly reviewed manner.  After internal ISS coordination, pending requirement updates are quickly disseminated amongst payload developers.  After external review by existing and prospective payloads, signatures are requested and requirements are enacted V&V 227Verification and Validation includes the final work done to certify both that the payload meets the word of the requirements, and that it performs the intended function 55% of OPALS\222 requirements to be verified are provided by its external interfaces, including the ISS and Dragon Though verified along with all other project requirements these interface requirements demand a different balance of focus.  As these requirements are provided by external entities they are managed outside of JPL and subject to external verification.  OPALS, therefore, has no formal validation program for these requirements beyond ongoing interface systems engineering diligence.  While this externalized approach minimizes internal efforts, it simultaneously increases verification  overhead Verification of each external interface requirement falls under the cognizance of an external Discipline Engineer DE\d the OPALS verification program is built around this external approval process, which is diagramed in Figure 17.  These external engineers represent the external hardware expertise necessary to ultimately understand validate and approve all interactions with their hardware.  It is important to note that these engineers support a multitude of projects across geographic boundaries, and their ability to provide dedicated attention to OPALS is attenuated by the breath of the projects they support Internal to OPALS, an abundance of verification data is generated for these DEs in the verification of the 452 external requirements.  The planning, technical coordination, and direction of this work is coordinated between the OPALS External Interface Engineer and the cognizant engineers within OPALS. As data and plans have been generated over years of interaction among these organizations, it is incumbent upon the EIE to ensure internal consistency and remedy problems across evolving interfaces External, Technically-Derived Drivers and Constraints The ISS-imposed requirements provide the specification for the physical interface to the station, and, via the PSRP process, also provide direction on meeting the safety considerations that come with the Class A status of the ISS This section will highlight how technical specifications from the ISS impacted aspects of the OPALS design Mass & Power Budgets 227Most payloads will find the ISS allocation for mass and 28V operational power to be quite generous at 490 lbs. \(excluding the top half of the FRAM\227 the ExPA plate\d 504 watts, respectively. The ISS also provides 750 watts on a 120V operational line and an additional 300 watts of power on a 120V heater line Expected to come in under 400 lbs., OPALS fits well within its mass allocation. In fact, at no point in its development did the OPALS mass margin\227calculated as \(AllocationCBE\llocation\227fall below 15%, and since CDR it has been hovering around 30%. The 28V ops power margin has been even more generous, hovering at or above 60% for much of the projects lifecycle, while the 120V ops and 120V heater lines have seen equally generous margins of over 60% and 70 %, respectively In space, mass and power are drivers more often than not For OPALS the opposite has been the case, to the point where the excess allocations has been used to solve problems in other areas. One such example has been the  Figure 17:  The OPALS ISS requirement verification process is built around th e ISS approval process 


  design of our gimbal. At nearly 70 lbs., th e to be severely overdesigned for the 3 lb supports. However, the need for such a b forced by the early selection of the actuat o long-lead items and had to be large enou g the optical head in the absence of launch lo time, by the yet unknown design of the opt under certain configurations, could have b e lbs. Knowing that mass would likely not p roject was thus able to save cost by avo the mass of the gimbal while at t accommodating an unknown optical hea d lack of launch locks The power draw of the electronics was concern since one of the benefits of havin g is that their power draw is well known a n fluctuate greatly over time. If there was o n p ower draw required more active manage m 120V heater line which is shared by the IS S launch vehicle, of which the latter had si stringent and fluctuating requirements Designing to a Class A Interface 227Of all t h interface, the safety-related ones likely impact on the OPALS design. There are features that owe their existence to the nee d the two-fault tolerant design against cat a mandated by the PSRP. The payload h a combination of three hardware and softwar each of the two catastrophic hazards that w e the inadvertent usage of the 2.5 watt clas s shining the laser outside of its approved a r The hardstops limiting the travel of each a x constitute two of the inhibits required to pr e Via a negotiation process with the PSRP, t h upon the area around the ISS where it wo u Figure 18: OPALS Field of Regard \(red  Motion \(yellow\ver the O C station 17 e gimbal appears optical head it b eefy design was o rs\227which  were g h to immobilize cks\227and, at that ical head, which e en well over 10 be an issue, the iding optimizing t he same time d design and the even less of a g COTS avionics n d is unlikely to n e area where the m ent was on the S and the SpaceX gnificantly more h e aspects of the had the largest a number of FS d to comply with a strophic failures a d to include a e inhibits against e re identified: \(1 s 4 laser, and \(2 r ea of operations x is of the gimbal e vent the latter h e project agreed u ld be allowed to p oint the laser, referred to as the From this not-to-exceed area, the p allocation to allow for uncertai manufacturing. Using these derate gimbal to keep the laser within Figure 18\ela t nadir\he ROM extends from a p in the gimbal azimuth axis  approximately 1 373 to 38 373 in the crosstrack\erally speaking range limits the length of each pas s while the size of the elevation frequently a pass occurs. This is mission success is at odds with m yield to it. Were it not for the ne e operation of the laser due to safet y would have enjoyed longer and m o improving its chances of meeting it s In addition to the hardstops, meeti n mandate requires that the des i microswitches, two relays, soft w p rotection, and operational const r with the Huntsville Operations Sup p and function of these inhibits were d MOS Interface 227The main drive r implementation was the availabili t operations tools, processes, and in fr payloads. Although drivers are so m negative impact on development opposite was true. The OPALS leverage existing capabilities as mu development of new tools and proc e Several remote operations tools ar e from MSFC and JSC for telemet r management, schedule viewing, tel e over-IP. Table 3 details the a v function. The OPALS MOS has i tools with only a minor amou n required. Given the wide array of t responsibilities of OPALS MOS simplified to development of the ephemeris processing, generati o generation of telemetry and comm a decision-making and execution  analysis In addition to tools, OPALS has al s great deal in the area of operati o depicts the interface support pr o Marshall Space Flight Center and Directorate \(MOD\e Johnso n  general, MOD handles the overall with tasks including crew operat i orbital reboosts, docking activiti e MOD defines its interface with O P Rules that govern power, attitu d restrictions on payload activity T   and Range of C TL ground Field of Regard \(FOR r oject further derated the n ties in modeling and d values it designed the the expected Range of t ive to the ISS +Z axis p proximately -34 373 to +73 373   alongtrack\d from gimbal elevation axis the size of the azimuth s over the ground station range determines how a clear example of how m ission safety and must e d to restrict the area of y considerations, OPALS o re frequent passes, thus s level one requirement  n g the two-fault tolerance i gn also include four w are ar m fire command r aints to be coordinated p ort Center. The purpose d iscussed in sectio n 3  r for the OPALS MOS t y of significant existing fr astructure for ISS-based m etimes seen as having a in this case quite the MOS has attempted to u ch as possible to avoid e sses and thus save cost e available free of charge r y processing, command e metry query, and voicev ailable tools and their i ncorporated all of these n t of tool configuration t ools available, the prime development has been operations concept, ISS o n of file products a nd databases, operations  and troubleshooting s o been able to leverage a o ns processes. Figure 19 o vided by the POIC at the Mission Operations Space Flight Cente r In ISS platform operations i ons, robotic operations e s, and attitude control P ALS via a set of Flight d e, trajectory, and crew T he POIC, on the other 


  hand, provides the infrastructure to commands and file products to the paylo a infrastructure to receive and relay real-tim e the payload. The agreements between the POIC to ensure proper operation, m monitoring of the payload are docume n Regulations. In addition, the POIC maintai n p rocess for planning payload activities a n those activities into the larger ISS schedule Activity planning and scheduling begins 8 launch and continues up to 7 days before t h it is included in the ISS Short Term Pl OPALS operations are time critica l commanding by members of the POIC O will be designated with priority over activities in the STP. During real-time Payload Operations Director at the PO I interface for the OPALS payload and provi d inputs for activity coordination with t h Director. The expectations of the payload d it will provide a clear set of science object i set of data and planning requirements need e those objectives. For OPALS, these documented in the OPALS Ops Conce p delivered to the POIC and MOD 18 mo n anticipated launch date. It is also expected operations team will submit a formal t r participate in training exercises with the P other ISS payloads. The POIC offers two f l activities: scenario training and simulation t Scenario training exercises MOS execu t specific processes while simulation trainin g familiarity with ISS interfaces, coordinatio n MOD entities, and decision-making in t h anomalies. The scenario activity resembles operational readiness test \(ORT\ in Table 3: Existing operations t o Tool Operations F Telescience Resource Kit \(TReK Telemetry Proc e Telemetry Disp l Telemetry Data b Command Man a Command Data b Enhanced HOSC System \(EHS Telemetry Que r Database Sync h HOSC Networ k Internet Voice-over-IP IVoDS Voice Loops Payload Information Management System PIMS File Transfer Operations Cha n On-board Short Term Plan Viewer \(OSTPV ISS Schedule V 18 relay real-time a d as well as the e telemetry from payload and the m aintenance, and n ted as Payload n s a well-defined n d incorporating  8 months before h e activity, when an \(STP\ince l and require O PALS activities conflicting ISS operations, the I C is the prime d es the necessary h e MOD Flight d eveloper are that i ves along with a ed to accomplish prod u cts were p t document and n ths prior to the that the payload r aining plan and P OIC, MOD, and l avors of training t raining t ion of payloadg exercises MOS n with POIC and h e event of ISS what is called an the JPL flight development process, while the si m to the ISS program due to the diversity of the ISSP interfaces. F members are available on conso l OPALS MOS in a flight-like oper a role of the Flight MOS and Grou n react appropriately to nominal and relayed by the POIC over the voic e expected to obey all Flight Rules a in the execution of their acti v p roficiency with all operations pr o OPALS and external \(e.g. ISS 6  C ONCLUS I The development of the flight payl o two factors: \(1\ interfacing with th e sense and a programmatic one, an d as a Class D risk classification payl o The ISS physical interface provide d but one that was greatly facilit a standardized FRAM and by the g e allocations. The latter have afford e flexibility in making design decis i the expense of the still generous m a Operating on the ISS also mean t facility and of the astronauts it ho s all other considerations. As such O in a series of inhibits to provide t w catastrophic hazards identified despite being a Class D payloa d typically affords significantly mo r project\222s risk posture for mission s u on safety. The ISS-driven pro c scrutinizes this aspect can be d a navigate it, projects need to pla n significant impacts in both tech n areas, while keeping in close c PSRP The internal decision to implemen t p ayload also had significant impli c led to the widespread use of CO T o ols F unctions e ssing l ay b ase Build a gement b ase Build r y h ronization k Access n ge Requests iewer Figure 19: OPALS cross-agenc y m ulation activity is unique sheer complexity and or both exercises, POIC l e to interface with the a tional environment.  The n d MOS teams will be to off-nominal notifications e loop. The teams will be a nd Payload Regulations v ities and demonstrate o cesses, both internal to I ONS  o ad was largely driven by e ISS, both in a physical d 2\ng implemented o ad d a significant constraint a ted by the use of the e nerous mass and power e d the project significant i ons that reduced cost at a ss and power margins t that the safety of the s ts took precedence over O PALS has had to design w o fault tolerance for all This limitation comes d a classification which r e latitude in defining a u ccess but has no bearing c ess that oversees and a unting. To successfully n and accommodate for n ical and programmatic ommunication with the t the project as a Class D c ations for the design. It S components, which in  y operations interfaces 


  19 turn lead to a design that required forced convective cooling and vibration dampening, both uncommon for modern-day space payloads. Furthermore, it allowed the project flexibility in tailoring its verification and validation program for non-ISS requirements to save cost and schedule The focus of space-borne instruments is usually on the flight articles, which in the case of OPALS is the FRAM-based payload to be externally installed on the ISS. However most, if not all, projects must also develop a ground infrastructure to support the operations of the flight asset For OPALS, despite being more akin to an instrument than a spacecraft, that was certainly the case as significant development was required for both the optical ground station to enable the transmissi on of a beacon and receipt of the optical downlink for the former, and for the MOS to support commanding and telemetry The use of the OCTL facility in California greatly reduced the amount of development required to receive and process the optical downlink, and to transmit the beacon needed by the FS to locate the ground station. The development was thus restricted to the optics needed to condition the light beam for processing by the hardware receiver and the software decoder The design of the MOS was, by and large, dictated by the interface to the ISS\222s expansive payloads operations infrastructure located at Ma rshall Space Flight Center Because the interface was already mature and well understood, the project\222s efforts were primarily focused on ensuring compatibility rather than developing its own capability. The savings afforded by leveraging the existence of the already operating infrastructure cannot be understated A CKNOWLEDGEMENTS  The authors express their gratitude to the entire OPALS team for their dedication and hard work, and to the mentors that have guided the team on a path to success. The authors acknowledge all of the OPALS team members, whose technical contributions made the writing of the paper possible.   The work described in this paper was carried out at the Jet Propulsion Laboratory, California Institute of Technology, under a contract with the National Aeronautics and Space Administration R EFERENCES    J  C e s a r o n e  D  S   A b ra h a m s  S  S h am b a y a ti  a n d J   Rush, \223Deep space communications, visions trends and prospects,\224  In Proc. Int. Conf. Space Opt. Syst. Appl  Santa Monica, CA, May 11\22613, 2011, pp. 412\226425  m ati 223 S pecial s ec tion guest editorial: free space optical communications.\224 Opt. Eng 0001 51\(3\031201-1-031201-1 doi:10.1117/1.OE.51.3.031201 3 Hen n i g er, an d O. W ilf ert A n i n tro d u ctio n to f r ee space optical communications Radioengineering 19.2 pp. 203-212, 2010 4 Risk Classification for NASA Payloads NASA Procedural Requirements NPR 8705.4, 2008  P h aeton Early C a reer Hire Dev e lop m ent P r og ram  R. M Jones, J. Lim. 2012. Jet Propulsion Laboratory California Institute of Technology. 19 Oct. 2012 http://phaeton.jpl.nasa.gov/internal/index.cfm 6 ard  B  So lish  M. Seib ert, K. Kilb rid e  S. Do n g   and T. Coffee. \223Bridging the Generation Gap : A Rapid Early Career Hire Training Program,\224 in AIAA Space 2008 Conference pp. 1-13   B i s w a s H. He mm ati S. P i azzolla, B  Mois ion  K  Birnbaum, and K. Quirk, \223Deep-space Optical Terminals DOT\ms Engineering.\224 IPN Progress Rep. 42183. Nov. 15, 2010  Hem m a ti A B i s w as I.B D j o r d j ev ic  D eepS pace Optical Communications: Future Perspectives and Applications," in Proceedings of the IEEE  vol.99 no.11, 2011, pp.2020-2039 9 Lucke, Robert L., et al. "Hyperspectral Imager for the Coastal Ocean: instrument description and first images Applied Optics 50.11 \(2011\ 1501-1516 10 M  C o r s o n  D  K o r w a n  R  L u c k e  W  S n y d e r  C   Davis, "The Hyperspectral Imager for the Coastal Ocean HICO\ the International Space Station," in IGARSS 2008 pp.IV-101-IV-104  T e les c ien ce R e s o u r ce K i t J. Onken. 2012. Marshall Space Flight Center. <http://trek.msfc.nasa.gov 12  Payload Safety Review and Data Submittal Requirements National Space Transportation System NSTS 13830, 1998 13 Computer-Based Control System Safety Requirements  Space Station Program SSP 50038, 1995 B IOGRAPHIES  Bogdan Oaida is the Project Systems Engineer for OPALS. He received a B.S.E. in Aerospace Engineering in 2007 and a M.Eng in Space Engineering in 2008, both from The University of Michigan. Since joining JPL in 2008, Bogdan has also worked on a number of Earth-sensing mission proposals and has participated in several TeamX studies JPL\222s concurrent engineering environment 


  Matt Abrahamson i s Operations Lead for received a B.S E ngineering With Technology in 2006 a A eronautics and Astro n both from MIT. He L aboratory Fellow from since joining J PL has worked on flight o p EPOXI, Stardust-NExT, Juno, and Daw n mission navigator  Robert Witoff is the I S Systems Engineer for received a B.S E ngineering from the Colorado at Boulder i p ursuing a Masters in S o E ngineering at Stanford A pigy Inc, Robert joine d has additionally worked on the Daw n Interplanetary missions J essica Bowles Martin e and Mission Assuranc e OPALS. She receive d  E lectrical Engineering Science and B.S. in Co m Studies in 2003 at th e I nstitute of Technolog y earned a M.Eng in Elec Engineering from Johns Hopkins Universi t J PL in 2008, she has held various ro l radiation testing for Juno, research in N A Parts Packaging program, and an ISS b a assembled telescope project  Daniel Zayas is the T h both OPALS and t h L aboratory, a planne d Condensate experime n I nternational Space received B.S. degrees E ngineering and Physic s A erospace Engineerin g M assachusetts Institute of Technology.  H e contributed to a number of planetary m including JUNO and the Mars Science L a Curiosity   20 s the Mission OPALS. He in Aerospace Information a nd a M.S. in n autics in 2008 was a Draper 2006-2008 and p erations for the n projects as a S S and Dragon OPALS.  He in Aerospace University of i n 2009 and is o ftware Systems  After founding d JPL where he n and Rosetta e z is the Safety e Manager for d a B.S.E. in and Computer m parative Media e Massachusetts y In 2006 she trical Computer t y. After joining l es working on A SAs Electronic a sed robotically h ermal Lead for h e Cold Atom d Bose-Einstein n t aboard the Station.  He in Aerospace s and a M.S. in g all from the e has previously m issions at JPL a boratory rover 


Copyright © 2009 Boeing. All rights reserved Initial Analysis Activities Flights departing or arriving on a date Flights departing or arriving within a date and time range Flights between city pair A,B Flights between a list of city pairs Flights passing through a volume on a date. \(sector, center, etc boundary Flights passing through a volume within a date and time range Flights passing through an airspace volume in n-minute intervals All x-type aircraft departing or arriving on a date Flights departing or arriving on a date between city pair A,B Flights departing or arriving on a date between a list of city pairs Flights passing through a named fix, airway, center, or sector Filed Flight plans for any of the above Actual departure, arrival times and actual track reports for any of the above 


Copyright © 2009 Boeing. All rights reserved  Initial SPSS Applications Show all tracks by call sign 


Copyright © 2009 Boeing. All rights reserved  Predictive / Prescriptive Analytics Use-Case For a given Airspace Volume of Interest \(AVOI compute distinct traffic volume at some point in the future  Aim to alert on congestion due to flow control areas or weather if certain thresholds are exceeded  Prescribe solution \(if certain thresholds are exceeded Propose alternate flight paths  Use pre-built predictive model  SPSS Modeler performs data processing Counts relevant records in the database \(pattern discovery Computes traffic volume using statistical models on descriptive pattern Returns prediction with likelihood 


Copyright © 2009 Boeing. All rights reserved  Predictive / Prescriptive Analytics Use-Case Advanced Arrival Procedures with Active Abatement Potentials   9/23/10  24 Pulls in the TRACKINFO table of MAIN using SQL Limits the data to database entries which fall inside the AVOI Combines the SOURCE_DATE and SOURCE_TIME to a timestamp that can be understood by modeler Computes which time interval the database entry falls in. The time interval is 15 minutes Defines the target and input fields needed for creating the model Handles the creation of the model Produces a graph based off of the model results Final prediction 


Copyright © 2009 Boeing. All rights reserved  Initial Cognos BI Applications IBM Cognos Report Studio  Web application for creating reports  Can be tailored by date range, aircraft id, departure/arrival airport etc  Reports are available with links to visuals IBM Framework Manager  Used to create the data package  Meta-data modeling tool  Users can define data sources, and relationships among them Models can be exported to a package for use with Report Studio 


Copyright © 2009 Boeing. All rights reserved  Flights Departing Las Vegas on Jan 1, 2012 1 of 3 Report shows the departure date, departure and arrival locations and hyperlinks to Google Map images DeparturePosition and ArrivalPosition are calculated data items formatted for use with Google Maps Map hyperlinks are also calculated based on the type of fix 


Copyright © 2009 Boeing. All rights reserved  Flights Departing Las Vegas on Jan 1, 2012 2 of 3 DeparturePosition, Departure Map, ArrivalPosition and Arrival Map are calculated data items \(see departure items below DepartureLatitude DepartureLongitude DeparturePosition Departure Map 


Copyright © 2009 Boeing. All rights reserved  Flights Departing Las Vegas on Jan 1, 2012 3 of 3 


Copyright © 2009 Boeing. All rights reserved  Conclusion and Next Steps Current archive is 50 billion records and growing  Approximately 34 million elements per day  1GB/day Sheer volume of raw surveillance data makes analytics process very difficult The raw data runs through a series of processes before it can be used for analytics Next Steps  Continue application of predictive and prescriptive analytics  Big data visualization 


Copyright © 2009 Boeing. All rights reserved  Questions and Comments Paul Comitz Boeing Research & Technology Chantilly, VA, 20151 office Paul.Comitz@boeing.com 


Copyright © 2009 Boeing. All rights reserved Advanced Arrival Procedures with Active Abatement Potentials   9/23/10  31 


Copyright © 2009 Boeing. All rights reserved Advanced Arrival Procedures with Active Abatement Potentials   9/23/10  32 Backup Slides 


Copyright © 2009 Boeing. All rights reserved  Initial Approach Initial Investigations  Apache Solr/Lucene  Data Warehouse Evaluate Hadoop in the future 


Copyright © 2009 Boeing. All rights reserved  Using SOLR Uncompress Track Information Messages To use with Solr  Transforming track messages from their  original schema to Solr required building a ìkey, valueî list using an XSTL  Queries made against this list of ìkey, valueî pairs Transformation Process  One day of data ~ 4.5 hours Once transformation complete search/query performance very good Geo spatial queries using  unique query language 


Copyright © 2009 Boeing. All rights reserved  Representation Aviation data is frequently represented in more than one form 


