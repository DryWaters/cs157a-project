A Tigh tly-Coupled Arc hitecture for Data Mining Rosa Meo 1 Giusepp e Psaila 1 Stefano Ceri 2 1 Dip di Automatica e Informatica 2 Dip di Elettronica e Informazione P olitecnico di T orino P olitecnico di Milano C.so Duca degli Abruzzi 24 P za Leonardo da VInci 32 10129 T orino Italy 20133 Milano Italy rosimeo@p oli to it  psaila@e let po li mi it  ceri@elet p oli mi it Abstract Curr ent appr o aches to data mining ar eb ase d on the use of a de c ouple dar chite ctur e wher e data ar e 014rst extr acte dfr om a datab ase and then pr o c esse dbyasp ecialize d data mining engine This p ap er pr op oses inste ad a tightly c ouple dar chite ctur e wher e data mining is inte gr ate d within a classic al SQL server The pr emise of this work is a SQL-like op er ator c al le d MINE RULE  intr o duc e dinapr evious p ap er We show how the various syntactic fe atur es of the op er ator c an b e manage d by either a SQL engine or a classic al data mining engine our main obje ctive is to identify the b or der b etwe en typic al r elational pr o c essing exe cute d by the r elational server and data mining pr o c essing exe cute dbyasp e cialize dc omp onent The r esulting ar chite ctur e exhibits p ortability at the SQL level and inte gr ation of inputs and outputs of the data mining op er ator with the datab ase and pr ovides the guidelines for pr omoting the inte gr ation of other data mining te chniques and systems with SQL servers 1 In tro duction Data mining is a recen t tec hnique for data analysis aiming at the disco v ery of regularities among data whic h can rev eal business-critical information The extraction of asso ciation rules has emerged as the most imp ortan t paradigm for data mining th us it has b een deeply in v estigated b y researc hers and at the same time supp orted b y man y pro ducts Sev eral pap ers ha v e considered this problem from an algorithmic p oin t of view sho wing the practicabilit y of data mining on v ery large databases The approac h to data mining follo w ed b y sev eral pro ducts is based on a de c ouple dar chite ctur e  a data mining to ol executes on data whic h is previously extracted from the database and transformed in to a suitable format W e b eliev e that the decoupled approac h has sev eral incon v eniences 017 It requires the data analyst to p erform a long preparation for extracting data b y means of queries and preparing data b y means of explicit enco ding so as to ac hiev e the format required b y the to ol 017 It o\013ers a limited data mining paradigm that sometimes matc hes w ell with sp eci\014c requiremen ts but do es not o\013er su\016cien t generalit y  017 Once extracted rules are con tained in the data mining to ol and it is quite hard to com bine the information em b edded in to them with the data in the database Some systems 9  are able to retriev e data from SQL serv er th us the data access problem is partially solv ed In this pap er w e prop ose a tightly-c ouple d approac h to data mining w e sp ecify data mining op erations b y means of a SQL-lik e op erator for data mining called MINE RULE 11  whic h extends the seman tics of association rules in order to co v er a wide class of problems e.g traditional rules sequen tial patterns-lik e rules etc SQL is used in the extraction of the source data b y means of an unrestricted query on the database and in the de\014nition of generic asso ciation conditions based on the gr ouping and further clustering of attributes and mining conditions selection predicates on rules These SQL expressions em b edded in the MINE RULE op erator guaran tee the sp eci\014cation of differen t seman tics for asso ciation rules In this pap er w e sp ecify ho w the MINE RULE operator can b e implemen ted on top of a SQL serv er th us this pap er concen trates on the dev elopmen tof an in tegrated tigh tly-coupled arc hitecture Previous literature on the mining of asso ciation rules has established that rule extraction is e\016cien tly p erformed b y an iterativ e pro cess with ad ho c memory-residen t data structures In particular references 3 12  ha v e sho wn ho w the algorithm's e\016ciency can b e impro v ed b y means of v arian ts in the data structures and that the n um b er of input-output op erations when data do es not 014t in to main memory  can b e reduced to a minim um more than one but less than t w o b y means of suitable sampling 7  The outcome of this w ork giv es evidence that the implemen tation of MINE RULE cannot b e fully relational e.g b y means of SQL query expressions ev en in the con text of a tigh tly-coupled arc hitecture the core part of data mining is the resp onsibilit y of a non-SQL procedure that w e call c or eop er ator  whic h receiv es data retriev ed b y the SQL sev er extracts rules and returns them in the format of database relations Nev ertheless man y features of the MINE RULE operator lik e sub-query ev aluation grouping etc are b etter managed in SQL outside of the core op erator Th us one of the main problems in designing suc han 


arc hitecture not only from a researc h viewp oin t but also from and industrial viewp oin t is to iden tify the b order b et w een t ypical r elational pr o c essing tobe executed b y the SQL serv er and mining pr o c essing to b e executed b y the core op erator suc h that eac h comp onen t executes the tasks for whic h it is b est suited This w ork os in\015uenced b y our wishes of 017 Ensuring p ortabilit y  in order that the implemen tation do es not dep end on a particular DBMS 017 Exploiting the use of SQL queries in order to obtain a reasonable e\016ciency  In the rest of the pap er w e discuss the data mining arc hitecture in detail w e sho w its comp onen ts the pro cess 015o wbet w een SQL serv er and core op erator and the relev an t asp ects of a translation required in order to generate the prop er SQL queries from the data mining op erator The core op erator is describ ed in functional terms i.e in terms of its inputs and outputs its inno v ativ e features ha v e required sev eral adaptations of the w ell kno wn algorithms prop osed in literature brie\015y describ ed in Section 3 Observ e that similar w ork has b een done in 2 6  Ho w ev er w e need to follo w a di\013eren t approac h due to the seman tic ric hness of our op erator The pap er is organized as follo ws Section 2 summarizes the most imp ortan t features of the MINE RULE op erator and giv es its syn tax Section 3 presen ts the global tigh t y-coupled arc hitecture and summarizes the features of the core op erator Section 4 describ es the arc hitectural comp onen ts in detail fo cusing on the interfaces among them Section 5 dra ws the conclusions 2 The Mine Rule Op erator W e summarize the main features of the MINE RULE op erator b y sho wing it at w ork on the most classical data mining problem consisting of mining asso ciation rules relativ e to regularities in purc hases in store The database con tains data ab out customers pro ducts and purc hases Eac h customer buys a set of pro ducts also called items  the whole purc hase is referred to as a tr ansaction ha ving a unique iden ti\014er a date and a customer co de Eac h transaction con tains the set of b ough t items with the purc hased quan tit y and the price These data are stored in the nonnormalized table Purchase  depicted in Figure 1 Supp ose that w e are in terested in 014nding out when 1995 purc hases of items b y a giv en customer with tr cust item date pric e q.ty 1 cust 1 ski pan ts 12/17/95 140 1 1 cust 1 hiking b o ots 12/17/95 180 1 2 cust 2 col shirts 12/18/95 25 2 2 cust 2 bro wn b o ots 12/18/95 150 1 2 cust 2 jac k ets 12/18/95 300 1 3 cust 1 jac k ets 12/18/95 300 1 4 cust 2 col shirts 12/19/95 25 3 4 cust 2 jac k ets 12/19/95 300 2 Figure 1 The Purchase table for a big-store price greater than or equal to 100 the premise of rule are follo w ed b y purc hases of items ha ving price less than 100 b y the same customer the consequence suc h that the second purc hases o ccur in the same date successiv e to the date of the premise In order not to extract to o man y rules w e further imp ose that extracted correlation rule b e presen t in 20 of the customers and that it o ccurs at least 30 of the times when the premise of the rule o ccurs The ab o v e problem sp eci\014es a rather complex asso ciation rule whic his c haracterized b y the pair of items represen ting the premises and consequences of the rule The premise is called the b o dy of the rule while the consequence is called the he ad of the rule This problem is sp eci\014ed as follo ws MINE RULE FilteredO rde red Se ts AS SELECT DISTINCT 1..n item AS BODY 1..n item AS HEAD SUPPORT CONFIDENC E WHERE BODY.price 1 00 AND HEAD.pric e 100 FROM Purchase WHERE date BETWEEN 1/1/95 AND 12/31/95 GROUP BY customer CLUSTER BY date HAVING BODY.date HE AD da te EXTRACTIN G RULES WITH SUPPORT 0.2 CONFIDENC E 0.3 Next w esk etc h the op erational seman tics of the op erator suc h seman tics is essen tial for understanding the meaning of eac h clause in the op erator A complete c haracterization of the MINE RULE op erator together with the sp eci\014cation of the seman tics in a suitable extended relational algebra is discussed in 11  The op erator p erforms the follo wing steps 1 FROM  WHERE clause Extracts the relev an t tuples of the Purchase table those relativ e to 1995 purc hases the result of this clause is the actual input table of the data mining pro cess 2 GROUP BY clause Logically divides the Purchase table in to disjoin t groups based on the attribute customer  rules are extracted from within groups and express regularities among them 3 CLUSTER BY clause P artitions groups in to subgroups called clusters on the attribute date Figure 2.a Eac h cluster can b e mapp ed to b oth the b o dy and the head of a giv en rule w e indicate the former case as b o dy cluster and the latter as he ad cluster  If the cluster clause is not presen t all tuples within a group are considered as b oth the b o dy group and the head group 4 HAVING clause All b o dy and head clusters are paired and only pairs suc h that the b o dy cluster has a date less than the head cluster are considered for extracting items If the HAVING clause is not presen t all pairs surviv e 5 SELECT  WHERE clause EXTRACTING clause F or eac h pair of b o dy and head clusters surviving the HAVING clause items are extracted to form a rule so that they satisfy the mining condition WHERE BODY.price  100 AND HEAD.price  100  rules m ust ha v e su\016cien t supp ort and con\014dence All cluster pairs con tribute to the ev aluation of supp ort the n um b er of groups con taining the rule on the total n um b er of groups while all b o dy clusters are 


used for computing con\014dence the n um b er of groups con taining the rule on the n um b er of groups con taining the b o dy In this case the minim um supp ort is 0.2 and the minim um con\014dence is 0.3  6 Finally  the resulting rules are stored in to a SQL3 table called FilteredOrderedSe ts  sho wn in Figure 2.b observ e the represen tation for asso ciation rules is e.g f br own b o ots,jackets g c ol shirts g  cust date item tr pric e q.ty ski pan ts 1 140 1 cust 1 12/17/95 hiking b o ots 1 180 1 12/18/95 jac k ets 3 300 1 col shirts 2 25 2 12/18/95 bro wn b o ots 2 150 1 cust 2 jac k ets 2 300 1 col shirts 4 25 3 12/19/95 jac k ets 4 300 2 a BOD Y HEAD S C f bro wn b o ots g f col shirts g 0.5 1 f jac k ets g f col shirts g 0.5 0.5 f bro wn b o ots,jac k ets g f col shirts g 0.5 1 b Figure 2 a The Purchase table group ed b y customer and clustered b y date  b The output table FilteredOrderedSe ts  3 Arc hitecture In this section w e illustrate the arc hitecture of a data mining system  i.e a system whose fundamen tal task is to supp ort MINE RULE requests on top of a relational database serv er The design of this arc hitecture aims at the follo wing ob jectiv es 1 R elational Inter op er ability The arc hitecture includes a relational serv er supp orting SQL92 2 A lgorithm Inter op er ability F or mining b oth conv en tional and general asso ciation rules the arc hitecture is indep enden t of the particular mining algorithm 3 Ease of use Unexp erienced users whic h are not familia r with the SQL-lik est yle of the op erator are supp orted b y a user-friendly in terface 4 Ease of view The user supp ort pro vides facilities for viewing rules generated b y the analysis pro cess Mining of simple asso ciation rules can b e done with an arbitrary mining algorithm based on an arbitrary approac h e.g partitioning-based approac hes e.g or sampling-based approac hes 7 t ypically eac h of them has b etter p erformance under sp eci\014c assumptions ab out data and rule distribution Mining of complex rules supp orted b y the MINE RULE op erator with adv anced seman tic features suc h as clusters mining condition etc requires an extension of those algorithms b ecause these seman tic features are not considered b y kno wn algorithms 1 3 7 12 13  In order to guaran tee algorithm in terop erabilit y  the real source data are hidden to the algorithm and made fully uniform b y means of their preliminary enco ding This enco ding requires sev eral relational transformations whic h are e\013ectiv ely and e\016cien tly ev aluated b y the SQL serv er itself rather than b eing implemen ted ad-ho c Giv en that suc h transformations refer to the actual sc hema of the database the corresp onding SQL clauses are ev aluated b efore enco ding and standardizing the source data Consequen tly  the system includes a signi\014can t prepro cessing of input data in to a suitable input format for the algorithms in a w a y whic h is totally transparen t to the user The previous considerations led us to de\014ne the arc hitecture sho wn in Figure 3 in the 014gure thic k lines denote pro cess 015o w dashed lines denote data/informatio n\015o w The system is divided in three fundamen tal mo dules 017 User Supp ort  whic h has the resp onsibilit yofinteracting with the user 017 Kernel  whic hin terprets the mining statemen t and p erform rule extraction 017 DBMS  whic h stores source data output rules and in termediate results In this pap er w e fo cus on the k ernel of the mining system user supp ort is describ ed in a related pap er 4  The main k ernel comp onen ts are in Figure 3.a 1 T r anslator The translator in terpretes a MINE RULE statemen t c hec ks the correctness of the statemen tb y accessing the DBMS Data Dictionary  and pro duces translation programs used b y the prepro cessor and p ostpro cessor It is in v ok ed when the user submits a mining statemen t 2 Pr epr o c essor The prepro cessor retriev es source data ev aluates the mining grouping and cluster conditions of the mining statemen t and enco des data that will app ear in rules it pro duces a set of Enc o de dT ables  stored again in to the DBMS Note that the same prepro cessing could b e in common to the execution of sev eral data mining queries th us sa ving its cost 3 Cor eOp er ator The core op erator p erforms the actual generation of asso ciation rules It w orks on the Enc o de dT ables  prepared b y the prepro cessor and pro duces the set of Enc o de dR ules  i.e asso ciation rules whose elemen ts are still enco ded This comp onen tisin v ok ed after the prepro cessor and uses directiv es from the translator to decide the mining tec hnique to apply in fact dep ending on the particular mining statemen t the mining pro cess c hanges to capture the seman tics of the statemen t As a result the core op erator can b e constituted of a p o ol of mining algorithms 4 Postpr o c essor A t the end of the c hain the p ostpro cessor deco des the rules pro ducing the relations con taining the desired rule set in a normalized userreadable form results tak e a tabular form  Output R ules  and are stored in to the database It is inv ok ed when the core op erator terminates receiving directiv es from the translator ab out the 014nal format of rules It ends the mining pro cess and the con trol passes again to the user supp ort This arc hitecture guaran tees algorithm in terop erabilit y b ecause the core op erator is decoupled from 


 translator core operator Source Tables Encoded Tables Encoded Rules Output Rules                       USER SUPPORT Data Dictionary KERNEL DBMS preprocessor postprocessor User Translator SQL Server SQL Server SQL Programs SQL Programs Source Relations RULE Expression MINE Output Relations SQL Server SQL Programs Source Relations General Association Rules Input Relations General Alg  Simple Mining Expressions Input Relations Rule Set Translator Preprocessor Core Operator Postprocessor Simple Alg a b Figure 3 a Arc hitecture of the Data Mining System b T ranslations required b y the mining system the other comp onen ts of the k ernel and the only interaction is through the enco ded source data and the enco ded rules stored in the DBMS and the directiv es receiv ed b y the translator Consequen tly  algorithms are completely hidden to the rest of the system The prepro cessor is implem en ted b y means of a p o ol of SQL programs generating the input relations for the core op erator these programs are in turn generated b y the translator dep ending on the class of mining statemen ts di\013eren t sets of programs are necessary see Section 4.2 for a detailed discussion Figure 3.b outlines as w ell that the en visioned arc hitecture has t w ov ersions of the core pro cess called simple  and gener al  eac h of them corresp onds to a precise class of MINE RULE expressions 1 The 014rst one includes the simple asso ciation rules  in whic h the head and b o dy of the rule concern the same attribute\(s  and neither the CLUSTER BY clause nor the mining condition are sp eci\014ed 2 The second one includes the gener al asso ciation rules  i.e statemen ts for whic h the ab o v e restrictions do not hold th us statemen ts extracting general asso ciation rules ma y con tain the CLUSTER BY clause or the mining condition and the b o dy and head of rules ma y b e de\014ned on t w o di\013eren t sets of attributes F or eac h one of the t w o classes the core op erator applies a v arian t of the algorithm designed to tak e adv an tage b y the p eculiar features of the class In the rest of this pap er w e concen trate on the comp onen ts of the k ernel whic h are sp eci\014c of our arc hitecture these are the translator prepro cessor and p ostpro cessor of Figure 3.a 4 The Arc hitectural Comp onen ts This section presen ts eac h arc hitectural comp onen t 4.1 The T ranslator The translator c hec ks the correctness of the mining statemen t and classi\014es it so that the subsequen t mo dules activ ate only those computations whic h are required for its pro cessing The classi\014cation is made through a syn tactic analysis of MINE RULE statemen ts The MINE RULE op erator uses the follo wing syntax where sym b ols enclosed b y  denote non terminals and square brac k ets denote optionalit y  Sym b ols lik e group attr list  body schema and head schema are list of attributes while sim b ols lik e group cond are searc h conditions mine rule op  MINE RULE output table name AS SELECT DISTINCT body descr>,<h ead descr  CONFIDEN CE  WHERE mining FROM from list WHERE source GROUP BY group attr list HAVING group  CLUSTER BY cluster attr list HAVING cluster  EXTRACTING RULES WITH SUPPORT uns number CONFIDENCE  uns number output table name identifi er body descr cardspe c  body schema AS BODY  default card 1..n  head descr cardspe c  head schema AS HEAD  default card 1..1  card spec uns int  uns int  n from list table ref  table ref 


In the rest of the pap er w e will use sym b ols of the grammar to refer to the actual substrings in MINE RULE sp eci\014cations F or instance considering the example of Section 2 mining cond refers to the string BODY.price  100 AND HEAD.price  100  The translator p erforms the follo wing seman tic c hec king in order to ensure correctness of expressions 1 All attribute lists m ust b e de\014ned on the sc hema of source tables 2 Grouping attributes  group attr list  and clustering attributes  cluster attr list  ust b e disjoin t sets of attributes and attribute sets constituting the b o dy sc hema  body schema  and the head sc hema  head schema  ust b e disjoin t from grouping and clustering attributes 3 The HAVING clause for grouping clustering can refer only to grouping clustering attributes 4 The mining condition  mining cond  can refer to ev ery attribute but the grouping and clustering ones W e classify the MINE RULE expressions on the basis of their syn tactic clauses b y de\014ning sev eral b o olean v ariables these are used as directiv es for the three comp onen ts p erforming the mining pro cess i.e prepro cessor core op erator and p ostpro cessor The follo wing b o olean v ariables are orthogonal i.e eac hv alue do es not dep end on the other ones 017 H  true when the b o dy and head are relativ eto di\013eren t attributes 017 W  true in presence of the source cond and of the corresp onding tables in the from list  017 M  true in presence of the mining cond  017 G  true in presence of the group cond  017 C  true in presence of the CLUSTER BY clause Instead the follo wing b o olean v ariables dep end on the ab o v e ones 017 K  true in presence of the cluster cond  Observ e that the cluster cond needs the presence of the CLUSTER BY clause th us K  C  017 F  true in presence of aggregate functions in the cluster cond th us F  K  017 R  true in presence of aggregate functions in the group cond th us R  G  4.2 The Prepro cessor The prepro cessing phase prepares the input data for the core op erator whic h are di\013eren t dep ending on the class of mining statemen ts In particular in the case of simple asso ciation rules only the enco ding of items and groups is necessary in con trast in the case of general asso ciation rules additional information is required concerning clusters and mining conditions 4.2.1 Prepro cessing for Simple Rules In Figure 4.a w e illustrate the transformations required for enco ding of the source data when w e aim at pro ducing simple asso ciation rules The enco ding produces tables con taining all the large items i.e items with su\016cien t supp ort this is the input for all algorithms kno wn in the literature 017 A t 014rst it is necessary to retriev e the source data b y computing the query in the FROM  WHERE clause this is done b y query Q 0  whic h materializes a view  totg Q1 count total n. groups W basic tables H Hattlist Hid H Hset Source Q2 GROUP BY HAVING]G Q0 FROM clause WHERE clause]W Q8 Gid Bid Hid  HCid]C InputRules create elementary rules Q9 compute support of large rules Bid Hid support LargeRules Q10 delete not large rules C Gid Cid Cattlist Cagglist]F ClusterCouples Q7 Gid BCid HCid C Clusters create cluster couples Gid Bid CodedSource Bid Battlist Bset Q3 create Bset Gid Gattlist Gid Bid Mineattlist]M Hid]H Cid]C Q4: create encoded table a b Source Q6 CLUSTER BY Bid Battlist Bset K K Gid Gattlist M Q5 create Hset Gid Bid Hid]H Cid]C Q4b: create mining table MiningSource CodedSource Q11 create a view for CodedSource ValidGroups M ValidGroups Figure 4 Structure of the prepro cessor Source  con taining the actual data to analize Observ e that this query is skipp ed when W is false i.e only one table is presen t in the clause and no condition is sp eci\014ed 017 Next it is necessary to coun t the total n um ber of groups inside the source data this coun ter is necessary to ev aluate supp ort of items and rules and is p erformed b y query Q 1  017 In presence of the HAVING predicate in the GROUP BY clause when G is true a selection of groups m ust b e done this is done b y query Q 2  whic h also enco des groups substituting the set of attributes whic h identify groups with a unique n umerical iden ti\014er 017 Next eac h item candidate to app ear in rules is enco ded this enco ding step is required to mak e the core op erator una w are of the real item structure As an e\013ect query Q 3 generates table Bset  in whic h eac h item iden ti\014ed b y attributes in Battlist  is asso ciated a unique iden ti\014er Bid  017 Finally  the enco ded v ersion of table Source is generated in suc haw a y that eac h tuple in the source data is describ ed b y the iden ti\014er of the group to whic h the tuple b elongs  Gid  and the iden ti\014er of the item that can b e extracted from the tuple  Bid  This w ork is done b y query Q 4  that generates table CodedSource in suc haw a y only tuples con taining large items are actually enco ded since tuples with no large items cannot participate to the rule generation pro cess App endix A describ es the SQL queries whic h are 


needed b y this transformation they are the most signi\014can t for supp orting data mining on a commercial relational serv er and at the same time formally sp ecify the prepro cessor task more details are in 4.2.2 Prepro cessing for General Rules Figure 4.b sho ws the additional enco ding required b y general asso ciation rules i.e rules with either clusters or mining conditions or b o dy and head ha ving di\013eren tsc hema The c hallenge of this translation consists in determining a suitable b orderline b et w een the prepro cessor and the core op erator in order to obtain algorithm in terop erabilit y in this no v el con text P art of the prepro cessing for simple asso ciation rules is rep eated in the general case queries Q 0  Q 1  Q 2 and Q 3  Ho w ev er if the b o dy and head sc hema are di\013eren t when H is true t w o distinct enco dings for items for b o dy and head m ust b e p erformed Assuming that items for b o dy are enco ded in to table Bset  query Q 5 enco des items for head generating table Hset  In presence of the CLUSTER BY clause when the b o olean v eriable C is true it is necessary to enco de attributes iden tifying clusters as w ell This is p erformed b y query Q 6  whic h pro duces the cluster enco ding in to the temp orary table Clusters  In this table group iden ti\014er  Gid  and cluster iden ti\014er  Cid  uniquely iden tify a cluster Finally  a di\013eren tv ersion of the CodedSource table is generated b y queries Q 4 b and Q 11  W eha v e designed the enco ding of the source table as a natural extension of the enco ding for simple asso ciation rules eac h input tuple in the source data is describ ed in terms of group iden ti\014er Gid  cluster iden ti\014er Cid if C is true b o dy item iden ti\014er Bid  head item identi\014er Hid if H is true Notice that the generation of the CodedSource table pro ceeds through the generation of the in termediate MiningSource table b y query Q 4 b  this table asso ciates to eac h enco ded tuple the set Mineattlist of attributes app earing in the mining condition if M is true that will b e used in a successiv e query then query Q 11 de\014nes CodedSource as a not materialized view of MiningSource th us there is no computation T able CodedSource is the actual input to the core op erator MiningSource is hidden to the core op erator Observ e that the sc hema of tables CodedSource and MiningSource is not 014xed but c hanges dep ending on whic hof C  H and M is set to true if a v ariable is not true the corresp onding p ortion of the sc hema is not presen t Let us no w discuss the remaining tasks of the prepro cessing these concern selection of cluster pairs and ev aluation of the mining condition Recall from Section 2 that in presence of the HAVING predicate in the CLUSTER BY clause  K is true not all pairs of clusters inside a group are v alid for rule extraction In order to mak e the core op erator una w are of attributes and predicates in this clause the selection of v alid cluster pairs is p erformed b y query Q 7  whic h ma y use the results asso ciated to eac h cluster in table Clusters  of the ev aluation of aggregate functions p ossibly presen t in the cluster condition p erformed b y query Q 6 v alid cluster pairs are stored in to the input table ClusterCouples  When sp eci\014ed the mining condition m ust b e ev aluated on the mining attributes in order to form elemen tary rules with one item in the b o dy and one item in the head in suc haw a y  the predicate is ev aluated b y the SQL and no information concerning the attributes in v olv ed in the predicate arriv es to the core op erator An elemen tary rule is describ ed in terms of group iden ti\014er cluster iden ti\014ers for the b o dy and the head iden ti\014ers of the b o dy and head items Elemen tary rules are generated b y query Q 8  whic h uses table MiningSource and p ossibly table ClusterCouples  to generate the 014rst instance of table InputRules  Elemen tary rules with not su\016cien t supp ort are discarded query Q 9 computes supp ort of eac h rule generating the temp orary table LargeRules  then query Q 10 discards rules without su\016cien t supp ort and generates the 014nal instance of table InputRules  Notice that the con\014dence of rules is not considered here b ecause it in v olv es the ev aluation of supp ort for b o dies built b y the core operator Dep ending on the class of mining statemen t not all the input tables are generated in particular if the mining condition is not sp eci\014ed table InputRules is not computed analogously  if the cluster condition is not sp eci\014ed table ClusterCouples is not generated In con trast the input table CodedSource is alw a ys pro duced In Figure 4 input tables for core pro cessing ha v e a thic k b order Queries Q 0 to Q 11 are rep orted in 4.3 The Core Op erator The core op erator p erforms the actual disco v ery of the asso ciation rules that satisfy the mining request it incorp orates all those computations whic h cannot e\016cien tly b e programmed as SQL queries 4.3.1 Core Pro cessing of Simple Rules The simple core pro cessing algorithm is one of the traditional data mining algorithm describ ed in 1  3 12  whose general approac h is summarized b elo w The algorithm incremen tally builds the so-called lar ge itemsets  i.e sets of items elemen ts that will app ear in 014nal rules with su\016cien t supp ort mo ving up from singleton itemsets to itemsets of generic cardinalit y b y adding one new item to already computed large itemsets The 014xp oin t of the pro cess is reac hed when no new large itemsets are generated Supp ort of an itemset is ev aluated b y coun ting elemen ts in an associated list that con tains iden ti\014ers of groups in whic h the itemset is presen t the list is computed when the new itemset is generated Then rules are built from large itemsets b y extracting subsets of items indicating with L a large itemset and with H 032 L a subset w e form the rule  L 000 H   H when it has suitable con\014dence 4.3.2 Core Pro cessing of General Rules With general asso ciation rules the core op erator starts from the initial set of large elemen tary rules and pro ceeds disco v ering rules with b o dies and heads of arbitrary cardinalit y from the initial set of rules 


The disco v ery of rules of arbitrary cardinalit y proceeds as follo ws giv en the set of rules m 002 n  where m is the cardinalit y of the b o dy and n is the cardinalit y of the head the algorithm computes the set of rules  m 1 002 n and the set of rules m 002  n  1 from whic h rules with insu\016cien t supp ort are pruned This pro cess determines a lattice at the top w e 014nd the set of elemen tary rules giv en a rule set m 002 n  the left c hild con tains rules  m 1 002 n  while the righ tc hild con tains rules m 002  n  1 The pro cess of rule disco v ery starts b y considering all the rules in the set at the top of the lattice then it generates rules for the rule sets in the subsequen t la y er and so on un til a la y er with empt y rule sets is pro duced Observ e that rule sets m 002 n  with m and n b oth greater than 1 can b e obtained in t w o alternativ ew a ys b oth from the rule set  m 000 1 002 n  and from the rule set m 002  n 000 1 The e\016ciency of the algorithm is maximi zed if at eac h step w e start from the set with lo w er cardinalit y  A detailed description of the algorithm is outside the scop e of this pap er and can b e found in 5 Observ e that the generation of elemen tary rules is p erformed b y the prepro cessor in SQL in presence of mining condition b ecause it in v olv es the ev aluation of a SQL predicate In this case elemen tary rules are retriev ed b y the core op erator from table InputRules  In the other cases the core op erator itself p erforms the precomputation of elemen tary rules whic h conceptually requires the building of the cartesian pro duct of the source tuples b elonging to the same group The resulting elemen tary rules are asso ciated with the iden ti\014er of the groups and p ossibly the clusters from whic h they are extracted the cluster condition selects o v er this cartesian pro duct only certain cluster pairs rep orted in table ClusterCouples  The cartesian pro duct is not materialized it is describ ed b y p oin ters b et w een source tuples F or this reason this computation is part of the core op erator instead of b eing done in SQL 4.4 The P ostpro cessor The last comp onen t of the arc hitecture pro duces the output rules Conceptually  the core op erator produces rules as asso ciations b et w een t w o itemsets the 014rst one for the b o dy  the second one for the head where eac h itemset is a set of item iden ti\014ers Th us the output of the MINE RULE op erator should include attributes built b y the set t yp e constructor ho w ev er this feature is not standardized and not y et a v ailable on most relational systems In order to a v oid an y p ortabilit y problem and to ac hiev e algorithm indep endence also from the viewp oin t of the pro duced outputs the core operator generates a normalized form based on the use of three tables In the 014rst one eac h tuple corresp onds to a rule and has sc hema BodyId HeadId SUPPORT CONFIDENCE  attributes BodyId and HeadId are iden ti\014ers of enco ded b o dies and heads returned b y the core op erator in t w o auxiliary tables OutputBodies with sc hema BodyId Bid  and OutputHeads with sc hema HeadId Hid  resp ectiv ely  Eac h item in these tables is referred to b y means of its iden ti\014er Th us while table output table name is already in the user format tables OutputBodies and OutputHeads m ust b e translated b y the p ostpro cessor in to the corresp onding user readable output table name Bodies and output table name Heads b y means of the temp orary tables Bset and Hset to o when H is true 5 Conclusions The in tegration of mining of asso ciation rules with relational pro cessing is a step to w ards the dev elopmen t of tigh tly in tegrated en vironmen ts for on-line analytical pro cessing W e b eliev e that the curren t div ersit yof data mining pro ducts represen ts just the initial step in the natural ev olution of this mark et sector and that so oner or later standardization will b ecome a m ust also for data mining pro ducts Then in tegration with the SQL language and pro cessing will b e t w ok ey success factors The main con tribution of this pap er is to iden tify an arc hitecture for the seamless in tegration of the data mining pro cess with a SQL serv er W e sho w that the in tegration is feasible pro vided that the core pro cessing of data mining is p erformed e\016cien tly b y sp ecialized algorithms W e prop ose a b orderline b et w een relational and data mining pro cessing and w e demonstrate that with this c hoice of b orderline the translation pro cess for an arbitrary data mining op eration can b e done in a rather easy and e\016cien tw a y  References  R Agra w al T Imielinski and A Sw ami Mining asso ciation rules b et w een sets of items in large databases In Pr o c.A CM SIGMOD Confer enc e on Management of Data  pages 207{216 W ashington D.C Ma y 1993 British Colum bia  R Agra w al and K Shim Dev eloping tigh tlycoupled data mining applications on a relational database system KDD-96  pages 287{290 1996  R Agra w al and R Srik an t F ast algorithms for mining asso ciation rules in large databases In Pr o c e e dings of the 20th VLDB Confer enc e  Santiago Chile Septem b er 1994  E Baralis S Ceri R Meo G Psaila M Ric heldi and P  Risimini Amore An in tegrated en vironmen t for database mining In Pr oc e e dings of SEBD 97 Sistemi Evoluti p er Basi di Dati V erona Italy  June 1997  E Baralis R Meo G Psaila and M Ric heldi Researc h rep ort n um ber 5 Pr oje ct 101196 CSEL T Polite cnic odiT orino  June 1997  J Han et al Dbminer A system for mining kno wledge in large relational databases KDD96  pages 250{255 1996  H.T oiv onen Sampling large databases for association rules In Pr o c e e dings of the 22nd VLDB Confer enc e  Bom ba y Mum bai India 1996 


 T Imielinski A Virmani and A Ab doulghani Datamine Application programmi ng in terface and query language for database mining KDD96  pages 256{260 1996  Silicon Graphics Incorp orated Mineset http:www.sgi.c om/Pr o ducts/softwar e/MineSet   R Meo Un Linguaggio e Nuove Soluzioni p er il Data Mining  Ph.D Thesis in Italian 1997  R Meo G Psaila and S Ceri A new sql-lik e op erator for mining asso ciation rules In Pr o c e e dings of the 22st VLDB Confer enc e  Bom ba y  India Septem b er 1996  J S P ark M Shen and P S.Y u An e\013ectiv e hash based algorithm for mining asso ciation rules In Pr o c e e dings of the A CM-SIGMOD International Confer enc e on the Management of Data  San Jose California Ma y 1995  A Sa v asere E Omiecinski and S Na v athe An e\016cien t algorithm for mining asso ciation rules in large databases In Pr o c e e dings of the 21st VLDB Confer enc e  Zuric h Swizerland 1995 App endix A SQL Queries As in tro duced in Section 4.1 w e rep ort the SQL programs p erforming the prepro cessing for the case of simple asso ciation rules W e refer to Figure 4 In the follo wing giv en a b o olean condition C  the notation  expr ession  C indicates an expression that is actually presen t in the 014nal query if condition C is true w e use as conditions the same b o olean v ariables whic h describ e the presence of sev en syn tactic comp onen ts in a MINE RULE op eration as de\014ned in Section 4.1 AR stands for Asso ciation Rules Query Q 0  Basic tables listed in the from list are join t p ossibly using the source cond ifspeci\014ed denoted b y the b o olean condition W  it produces table Source  i.e the table on whic hAR extraction is p erformed needed attr list indicates the set of attributes that are actually useful in AR extraction obtained as the union of the attribute lists body schema  head schema  group attr list  cluster attr list and mine attr list attributes refered to b y the mining cond  plus the attributes p ossibly referred b y aggregate functions in group cond and cluster cond  INSERT INTO Source SELECT needed attr list FROM from list  WHERE source cond  W  Query Q 1  It calculates the n um b er of groups in the Source  The result is stored in to v ariable totg  SELECT COUNT INTO totg FROM SELECT DISTINCT group attr list FROM Source Query Q 2  First The Source is partitioned in to groups on attributes in group attr list  applying the group cond if presen t b o olean condition G  the view ValidGroupsView is pro duced CREATE VIEW ValidGroups Vi ew AS SELECT group attr list FROM Source GROUP BY group attr list  HAVING group cond  G  Second the table ValidGroups is generated An identi\014er called Gid  is asso ciated for eac hv alid group and is the n umerical iden ti\014er for groups In Oracle n umerical iden ti\014ers are obtained b y sequences that are de\014ned b y the follo wing instruction CREATE SEQUENCE sequence-name Av alue of the sequence is generated b y a call to the function sequence-name>.NE XTVAL  The iden ti\014er Gid will b e generated in the follo wing instruction b y means of a sequence called Gidsequence  Eac hv alid group tak en from the view ValidGroupsView is inserted with a unique v alue of the sequence in to table ValidGroups  INSERT INTO ValidGroup s SELECT Gidsequen ce NE XTV AL AS Gid V FROM ValidGrou psV ie wAS V This kind of generation of iden ti\014ers applies also to queries Q 3  Q 4 and Q 5 F or brevit yw e simply indicate this op eration with sequence-name>.NEX TVAL  omitting the rest of details Query Q 3  The enco ding of items is p erformed b y query Q 3  A t 014rst the temp orary table DistinctGroupsInB ody is generated b y the follo wing query  This table represen ts for eac h b o dy elemen t the distinct v alid groups con taining it INSERT INTO DistinctGr oup sI nBo dy SELECT DISTINCT body schema gro up attr list FROM Source Then the follo wing query generates the Bset table con taining for eac h elemen t an attribute for the identi\014er  Bid  the attributes in the body schema and the n um ber of v alid groups that con tain the elemen t this n um b er is later used to compute con\014dence of elemen tary rules if the general core pro cessing algorithm is adopted in particular only elemen ts whic h app ear in a su\016cien tn um b er of groups are selected b y the HAVING clause INSERT INTO Bset SELECT Bidsequen ce NE XTV AL AS Bid,<body schema FROM DistinctGr ou psI nBo dy GROUP BY body schema HAVING COUNT  mingroups  Query Q 4  Finally  the CodedSource table is produced b y means of a join b et w een tables Source  ValidGroups and the Bset  INSERT INTO CodedSourc e SELECT DISTINCT V.Gid B.Bid FROM Source S ValidGrou ps AS V Bset B WHERE S.<group attr list  V.<group attr list AND S.<body schema  B.<body schema T o conclude the p ostpro cessing query for b o dies are rep orted for simple asso ciation rules INSERT INTO output table name>_Bod ies SELECT BodyId body schema FROM OutputBodie s Bset WHERE OutputBodi es Bi d  Bset.Bid 





BAT841 CAR881 I COD701 COD721 COL891 871 LAM89 J LEC88 MAC851 W861 Alashqur A.M Su S.Y.W and Lam H A Rule-based Language for Deductive Object Oriented Databases Proceedings of the 6th Inter national Conference on Data Engineering Los Angeles CA Feb 5-9 1990 Bancilhon F et al FAD a Powerful and Si ple Database Language Proceedings of the 13th VLDB Conference Brighton 1987 Banerjee J et al Queries in 8ject-oriented Databases Proceedings of the 4th Intl Confer ence on Data Encrineerine Los Angeles CA  97-105 I I  1988 pp 31-38 Batory D.S and Buchmann A.P Molecular Obiects Abstract Abstract Data Tvws and Data M6deIsi A Framework Proceedings Intl Confer ence on VLDB 1984, pp 172-184 Carey M J et al A Data Model and Query Language for EXODUS ACM-SIGMOD Confer ence 1988, pp. 413-423 Chuang H S Operational Role Processing in a Prototype OSAM KBMS Master's thesis University of Florida 1990 Codd E A Relational Model of Data for Large Shared Data Bank CACM Vol 13 No 6 1970 pp 377-387 Codd E R:lational Completeness of Database Sublanguages in Data Base Systems Rustin R ed Prentice-Hall Inc Englewook Cliffs NJ Colby L S A Recursive Algebra and Query Optimization for Nested Relations ACM SIGMOD Conference 1989 pp 273-283 Fishman D H et al Iris An Object-Oriented Database Management System ACM Transaction on Office Infomation Systems 51 1987 pp49 69 Goldberg A Introducing the Smalltalk-80 Sys tem Byte Aug 1981. pp.14-26 Hammer M and Mcleod D Database Descrip tion with SDM A Semantic Association Model Kim W et al Composite Object Support in an Object-oriented Database System Proceedings of King R Sembase A Semantic DBMS the Proceedings of the First Intemational Workshop on Expert Database Systems Oct 1984, pp.151 171 Lam H et al Prototype Implementation of an Object-oriented Knowledge Base Management System Proceedings of PROCIEM 89 Orlando Lecluse C Richard P and Velez F 02 an Object-Oriented Data Model ACM-SIGMOD Conference 1988, pp 425-433 MacGregor R ARTEL--A Semantic Front-End to Relational DBMSs Proceedings of VLDB 85 Atlanta GA April 1988 Maier D et al Development of an Object oriented DBMS Proc of OOPSLA 86 Confer ence Sept 29  Oct 2 Portland Oregon pp 472-482 1971 pp.65-98 ACM TODS Vol 6 NO 3 1981 pp 351-368 OOPSLA, Oct 4-8 1987 FL pp 118-125 FL NOV 13-15, 1989 SU86 SUSS SU89 ZD087 Manola F and Dayal U PDM An Object Oriented Model Int'l Workshop On Object Oriented Database Systems 1986, pp 18-25 Pant S An Intelligent Schema Design Tool for OsAM Master's thesis University of Florida 1990 Rowe L A and Stonebraker M R The POSTGRES Data Model Proceedings of the 13th VLDB Conference Brighton 1987 pp 83-96 Shaw G M and ZdoNc S B A Query Alge bra for Object-Oriented Databases IEEE Trans on Data Engineering 12\(3 pp 154-162 Feb 1990 Shipan D The Functional Data Model and the Data Language DAPLAX ACM Trans Database System ql March 1918 Singh M Transaction Oriented Rule Processing in an Object-Oriented Knowledge Base Manage ment System Master's thesis University of Florida 1990 Su S.Y.W Modeling Integrated Manufacturing Data With SAM IEEE Computer January Su S.Y.W et al An Object-oriented Comput ing Environment for Productivity Jmprovement in Automated Design and Manufacturing Project Summary PROCIEM 88,Orlandq E Nov 14-15 1988 Su S.Y.W Kxishnamurthy V and Lam H An Object-oriented Semantic Association Model OsAM AI in Industrial Engineering and Manufacturing Theoretical Issues and Applica tions Kumara S Soyster A.L and Kashyap R.L eds American Institute of Industrial Engineering 1989 Su S.Y.W Guo M and Lam H Association Algebra A Mathematical Foundation for Object Oriented Databases to be submitted to Trans on Knowledge and Data Engineering Tsurt S and Zaniolo C An Implementation of GEM  Supporting a Semantic Data Model on a Relational Back End Proceedings of the ACM SIGMOD Jntl Conference on the Management of Data 1984 pp 286-295 Frederick Ty The Design and Implementation of a Graphics Interface for an Object-oriented Language Master's thesis University of Florida 1988 Zaniolo C The Database language GEM Proceedings of the ACM SIGMOD Intl Confer ence on the Management of Data 1983 Zdonik S B Skarra A H and Reiss S P An Object Server for an Object-oriented Database System Intemational Workshop on Object oriented Database Systems Pacific Grove CA Sept 1986 Zdonik S.B The implementation of a Shared Clustered Memory System for an 0-0 Database System ACM Trans on Office Information Sys tems Apr 1987 1986 pp.34-49 32 I 


It can also be added to cell CrossSales.3\(PC, printer one_year,\205 5  Distributed and Incremental Rule Mining There exist two ways to deal with association rules 267  Static that is, to extract a group of rules from a snapshot, or a history, of data and use "as is 267  Dynamic that is, to evolve rules from time to time using newly available data We mine association rules from an e-commerce data warehouse holding transaction data. The data flows in continuously and is processed daily Mining association rules dynamically has the following benefits 267  223Real-time\224 data mining, that is, the rules are drawn from the latest transactions for reflecting the current commercial trends 267  Multilevel knowledge abstraction, which requires summarizing multiple partial results. For example association rules on the month or year basis cannot be concluded from daily mining results. In fact multilevel mining is incremental in nature 267  For scalability, incremental and distributed mining has become a practical choice Figure 3: Distributed rule mining Incremental association rule mining requires combining partial results. It is easy to see that the confidence and support of multiple rules may not be combined directly. This is why we treat them as \223views\224 and only maintain the association cube, the population cube and the base cube that can be updated from each new copy of volume cube. Below, we discuss several cases to show how a GDOS can mine association rules by incorporating the partial results computed at LDOSs 267  The first case is to sum up volume-cubes generated at multiple LDOSs. Let C v,i be the volume-cube generated at LDOS i The volume-cube generated at the GDOS by combining the volume-cubes fed from these LDOSs is 345   n i i v v C C 1  The association rules are then generated at the GDOS from the centralized C v  214  The second case is to mine local rules with distinct bases at participating LDOSs, resulting in a local association cube C a,I a local population cube C p,I  and a local base cube C b,i at each LDOS. At the GDOS, multiple association cubes, population cubes and base cubes sent from the LDOSs are simply combined, resulting in a summarized association cube and a summarized population cube, as 345   n i i a a C C 1   345   n i i p p C C 1  and 345   n i i b b C C 1  The corresponding confidence cube and support cube can then be derived as described earlier. Cross-sale association rules generated from distinct customers belong to this case In general, it is inappropriate to directly combine association cubes that cover areas a 1 205, a k to cover a larger area a In the given example, this is because association cubes record counts of customers that satisfy   customer product merchant time area Doe TV Dept Store 98Q1 California Doe VCR Dept Store 98Q1 California customer product merchant time area Doe VCR Sears 5-Feb-98 San Francisco Joe PC OfficeMax 7-Feb-98 San Francisco customer product merchant time area Doe TV Fry's 3-Jan-98 San Jose Smith Radio Kmart 14-Jan-98 San Jose Association   population      base          confidence      support cube               cube                cube         cube                cube LDOS LDOS GDOS 


the association condition, and the sets of customers contained in a 1 205, a k are not mutually disjoint. This can be seen in the following examples 214  A customer who bought A and B in both San Jose and San Francisco which are covered by different LDOSs , contributes a count to the rule covering each city, but has only one count, not two, for the rule A  336  B covering California 214  A customer \(e.g. Doe in Figure 3\who bought a TV in San Jose, but a VCR in San Francisco, is not countable for the cross-sale association rule TV  336 VCR covering any of these cities, but countable for the rule covering California. This is illustrated in Figure 3 6  Conclusions In order to scale-up association rule mining in ecommerce, we have developed a distributed and cooperative data-warehouse/OLAP infrastructure. This infrastructure allows us to generate association rules with enhanced expressive power, by combining information of discrete commercial activities from different geographic areas, different merchants and over different time periods. In this paper we have introduced scoped association rules  association rules with conjoint items and functional association rules as useful extensions to association rules The proposed infrastructure has been designed and prototyped at HP Labs to support business intelligence applications in e-commerce. Our preliminary results validate the scalability and maintainability of this infrastructure, and the power of the enhanced multilevel and multidimensional association rules. In this paper we did not discuss privacy control in customer profiling However, we did address this issue in our design by incorporating support for the P3P protocol [1 i n  ou r data warehouse. We plan to integrate this framework with a commercial e-commerce system References 1  Sameet Agarwal, Rakesh Agrawal, Prasad Deshpande Ashish Gupta, Jeffrey F. Naughton, Raghu Ramakrishnan, Sunita Sarawagi, "On the Computation of Multidimensional Aggregates", 506-521, Proc. VLDB'96 1996 2  Surajit Chaudhuri and Umesh Dayal, \223An Overview of Data Warehousing and OLAP Technology\224, SIGMOD Record Vol \(26\ No \(1\ 1996 3  Qiming Chen, Umesh Dayal, Meichun Hsu 223 OLAPbased Scalable Profiling of Customer Behavior\224, Proc. Of 1 st International Conference on Data Warehousing and Knowledge Discovery \(DAWAK99\, 1999, Italy 4  Hector Garcia-Molina, Wilburt Labio, Jun Yang Expiring Data in a Warehouse", Proc. VLDB'98, 1998 5  J. Han, S. Chee, and J. Y. Chiang, "Issues for On-Line Analytical Mining of Data Warehouses", SIGMOD'98 Workshop on Research Issues on Data Mining and Knowledge Discovery \(DMKD'98\ , USA, 1998 6  J. Han, "OLAP Mining: An Integration of OLAP with Data Mining", Proc. IFIP Conference on Data Semantics DS-7\, Switzerland, 1997 7  Raymond T. Ng, Laks V.S. Lakshmanan, Jiawei Han Alex Pang, "Exploratory Mining and Pruning Optimizations of Constrained Associations Rules", Proc ACM-SIGMOD'98, 1998 8  Torben Bach Pedersen, Christian S. Jensen Multidimensional Data Modeling for Complex Data Proc. ICDE'99, 1999 9  Sunita Sarawagi, Shiby Thomas, Rakesh Agrawal Integrating Association Rule Mining with Relational Database Systems: Alternatives and Implications", Proc ACM-SIGMOD'98, 1998   Hannu Toivonen, "Sampling Large Databases for Association Rules", 134-145, Proc. VLDB'96, 1996   Dick Tsur, Jeffrey D. Ullman, Serge Abiteboul, Chris Clifton, Rajeev Motwani, Svetlozar Nestorov, Arnon Rosenthal, "Query Flocks: A Generalization of Association-Rule Mining" Proc. ACM-SIGMOD'98 1998   P3P Architecture Working Group, \223General Overview of the P3P Architecture\224, P3P-arch-971022 http://www.w3.org/TR/WD-P3P.arch.html 1997 


Plenary Panel Session 30 XML Databases   Moderator: Michael Carey, IBM Almaden Research Center USA Panelists Adam Bosworth, Microsoft Corporation USA David De Witt University of Wisconsin-Madison, USA Alon Levy University of Washington USA Bruce Lindsay IBM Almaden Research Center USA Jennifer Widom Stanford University USA Demo Session 1 Web Query Optimizer  661 V Zadorozhny L Bright L Raschid T Urhan and M Vidal ReQueSS: Relational Querying of Semi-structured Data  664 R Sunderraman The IDEAL Approach to Internet-Based Negotiation for E-Business  666 J Hammer C Huang Y Huang C Pluempitiwiriyawej M Lee H Li L Wang Y Liu and S Su READY A High Performance Event Notification Service  668 R Gruber B Krishnamurthy, and E Panagos A Multimedia Information Server with Mixed Workload Scheduling  670 G Nerjes DISIMA An Object-Oriented Approach to Developing an Image Database System  672 V Oria T Ozsu P Iglinski B Xu and L Cheng Demo Session 2 The Collaboration Management Infrastructure  677 H Schuster D Baker A Cichocki D Georgakopoulos and M Rusinkiewicz Assisting the Integration of Taxonomic Data The LITCHI Toolkit  679 I Sutherland J Robinson S Brandt A Jones S Embury W Gray R White and F Bisby TheaterLoc: Using Information Integration Technology to Rapidly Build Virtual Applications  681 G. Barish Y.4 Chen D Dipasquo, C Knoblock S Minton I Muslea and C Shahabi Lineage Tracing in a Data Warehousing System  683 Y Cui and J Widom xiii 


The Mentor-Lite Prototype A Light-Weight Workflow Management System  685 J Weissenfels M Gillmann 0 Roth, G Shegalov and W Wonner Location Prediction and Queries for Tracking Moving Objects  687 0 Wolfson B Xu and S Chamberlain Semiorder Database for Complex Activity Recognition in Multi-Sensory Environments  689 S Bhonsle A Gupta S Santini and R Jain Tutorial 1 Web Information Retrieval  693 M Henzinger Tutorial 2 Mobile and Wireless Database Access for Pervasive Computing  694 P Chrysanthis and E Pitoura Tutorial 3 Data Mining with Decision Trees  696 J Gehrke Tutorial 4 Directories Managing Data for Networked Applications  697 D Srivastava Tutorial 5 Indexing High-Dimensional Spaces Database Support for Next Decade\222s Applications  698 S Berchtold and D Keim xiv 


 T5.I2.D100K T10.I4.D100K T15.I4.D100K T10.I6.D400K T10.I6.D800K T10.I6.D1600K Optimizations across Databases 5 0 5 10 15 20 25 30 35 40 45 Improvement COMP TREE COMP-TREE 1 2 4 8 1 2 4 8 1 2 4 8 2 4 8 2 4 8 1 2 4 8 Processors Databases Figure 5 Effect of Computation and Hash Tree Balancing good as the COMP optimization The reason that the hash tree balancing is not suf\336cient to offset inherent load imbalance in the candidate generation in this case The most effective approach is to apply both optimizations at the same time COMP-TREE The combined effect is suf\336cient to push the improvements in the 40 range in the multiple-processor case On 1 processor only hash tree balancing is bene\336cial since computation balancing only adds extra cost 5.4 Short-circuited Subset Checking Figure 6 shows the improvement due to the short-circuited subset checking optimization with respect to the unoptimized version The unoptimized version is the Apriori algorithm due to Agrawal et al 5 The results are presented for dif ferent number of processors across dif ferent databases The results indicate that while there is some improvement for databases with small transaction sizes the optimization is most effective when the transaction size is large In this case we get improvements of around 25 r the unoptimized version To gain further insight into this optimization consider 336gure 7 It shows the percentage improvement obtained per iteration on applying this optimization on the T20.I6.D100K database It shows results only for the uni-processor case r similar results were obtained on more processors We observe that as the iteration k increases there is more opportunity for shortcircuiting the subset checking and we get increasing bene\336ts of up to 60 The improvements start to fall off t the high end where the number of candidates becomes small resulting in a small hash tree and less opportunity for short-circuiting It becomes clear that is an extremely effective 15 Proceedings of the 1996 ACM/IEEE Conference on Supercomputing \(SC\22296 0-89791-854-1/96 $ 10.00 ACM 


 T5.I2.D100K T10.I6.D800K T15.I4.D100K T20.I6.D100K procs across Databases 0 5 10 15 20 25 Improvement 1 2 4 8 Figure 6 Effect of Short-circuited Subset Checking 23456789101112 Iterations 0 10 20 30 40 50 60 improvement T20.I6.D100K Figure 7  Improvement per Iteration  proc   16 Proceedings of the 1996 ACM/IEEE Conference on Supercomputing \(SC\22296 0-89791-854-1/96 $ 10.00 ACM 


optimization for larger transaction sizes and in cases where there are large number of candidate k itemsets 6 Conclusions In this paper e presented a parallel implementation of the Apriori algorithm on the SGI Power Challenge shared memory multi-processor We also discussed a set of optimizations which include optimized join and pruning computation balancing for candidate generation hash tree balancing and short-circuited subset checking We then presented experimental results on each of these Improvements of more than 40 were obtained for the computation and hash tree balancing The short-circuiting optimization was found to be extremely effective for databases with large transaction sizes Finally we reported the parallel performance of the algorithm While we d good speed-up we observed a need for parallel I/O techniques for further performance gains References  R Agra wal T  Imielinski and A Swami Database mining A performance perspecti v e  I n IEEE Trans on Knowledge and Data Engg  pages 5\(6 1993  R Agra wal T  Imielinski and A Swami Mining association rules between sets of items in lar ge databases In Proc M SIGMOD Intl Conf Management of Data  May 1993  R Agra wal H Mannila R Srikant H T o i v onen and A I V erkamo F ast disco v ery of association rules In U F et al editor Advances in Knowledge Discovery and Data Mining  MIT Press 1996  R Agra wal and J Shafer  P arallel mining of association rules design implementation and e xperience Technical Report RJ10004 IBM Almaden Research Center San Jose CA 95120 Jan 1996  R Agra wal and R Srikant F ast algorithms for mining association rules In Proc 20th VLDB Conf  Sept 1994  M Cierniak W  Li and M J Zaki Loop scheduling for heterogeneity  I n 4th IEEE Intl Symposium on High-Performance Distributed Computing also as URCS-TR 540 CS Dept Univ f Rochester  Aug 1995  M Holsheimer  M  K ersten H Mannila and H T o i v onen A perspecti v e on databases and data mining In 1st Intl Conf Knowledge Discovery and Data Mining  Aug 1995  M Houtsma and A Swami Set-oriented mining of association rules In RJ 9567  IBM Almaden Oct 1993  H Mannila H T o i v onen and I V erkamo Ef 336cient algorithms for disco v ering association rules In AAAI Wkshp Knowledge Discovery in Databases  July 1994  J S P ark M Chen and P  S Y u  A n e f fecti v e hash based algorithm for mining association rules In Proc M SIGMOD Intl Conf Management of Data  May 1995 17 Proceedings of the 1996 ACM/IEEE Conference on Supercomputing \(SC\22296 0-89791-854-1/96 $ 10.00 ACM 


 J S P ark M Chen and P  S Y u  E f 336cient parallel data mining for association rules T echnical Report RC20156 IBM T J Watson Research Center Aug 1995  G Piatetsk y-Shapiro Disco v ery  presentation and analysis of strong rules In G P S et al editor  KDD  AAAI Press 1991  A Sa v asere E Omiecinski and S Na v athe An ef 336cient algorithm for mining association rules in large databases In Proc 21st VLDB Conf  1995  M J Zaki M Ogihara S P arthasarathy  and W  Li P arallel data mining for association rules on shared-memory multi-processors Technical Report 618 Department of Computer Science University of Rochester 618 1996 18 Proceedings of the 1996 ACM/IEEE Conference on Supercomputing \(SC\22296 0-89791-854-1/96 $ 10.00 ACM 


