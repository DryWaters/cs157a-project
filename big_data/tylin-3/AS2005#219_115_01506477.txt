 Using Unknowns for Hidi ng Sensitive Predicti ve Association Rules  Shyue-Liang Wang, Ayat Jafari Department of Computer Science New York Institute of Technology New York, New York USA slwang@nyit.edu  Abstract  Privacy-preserving data mining [2 is a no vel res e arch  direction in data mining and statistical databases, where data mining algorithms are analyzed for the side effects they incur in data privacy.  There have been two types of privacy proposed concerning data mining.  The first type of privacy, called output privacy, is that the data is altered so that the mining result will preserve certain privacy.  The second type of privacy, called input privacy, is that the data 
is manipulated so that the mining result is not affected or minimally affected In output privacy, given specific rules to be hidden, many data altering techniques for hiding association classification and clustering rules have been proposed However, to specify hidden rules, entire data mining process needs to be executed.  For some applications, we are only interested in hiding certain sensitive predictive rules that contain given items.  A predictive association rule set is the smallest rule set that makes the same prediction as the whole association rule set by confidence priority   In  t h i s w o r k w e  a s su me t h a t onl y s e ns i t i v e  items are given and propose two algorithms, ISL \(Increase 
Support of LHS\ and DSR \(Decrease Support of RHS\, to replace data by unknowns in database so that sensitive predicative rules containing specified items on the left hand side of rule cannot be inferred through association rule mining.  Examples illustrating the proposed algorithms are given.  The characteristics of the algorithms are analyzed The efficiency of the proposed approach is further compared with Saygin etc [22 a p p r o a ch I t i s  ob served  that our approach required less number of databases scanning and prune more number of hidden rules However, our approach must hide all rules containing the hidden items on the left hand side, where Saygin etc approach can hide any specific rule 
  1. Introduction The concept of privacy preserving data mining has been recently proposed in response to the concerns of preserving personal information from data mining algorithms 3,4,5,15,16  Th e r e  h a ve b e e n t w o t y pe s of pr i v a c y  concerning data mining.  The first type of privacy is that the data is altered so that the mining result will preserve certain privacy.  Many techniques have been proposed for this type of output privacy [1,6,7,8,9,17-20,22,25  F o r e x a m pl e   perturbation, blocking, aggregation or merging, swapping and sampling are some alternation methods that have recently been proposed.  The sec ond type of privacy is that 
the data is manipulated so that the mining result is not affected or minimally affected [10,11,12,13,23  For example, the cryptography-based techniques like secure multiparty computation  allow users access to only a subset of data while global data mining results can still be discovered.   The reconstruction-based technique where the original distribution of the data can be reconstructed from the randomized data is another method for this type of input privacy In output privacy, given specific rules to be hidden, many data altering techniques for hiding association 
classification and clustering rules have been proposed However, to specify hidden rules, entire data mining process needs to be executed.  For some applications, we are only interested in hiding certain sensitive predicative rules that contain given items.  A predictive association rule set is the smallest rule set that makes the same prediction as the whole association rule set by confidence priority.  A sensitive predictive rule is a rule in the predictive association rule set that contains sensitive items on the left hand side of the rule.  In this work, we assume that only sensitive items are given and propose two algorithms to modify data in database so that sensitive predicative rules 
containing specified items on the left hand side of rule cannot be inferred through association rule mining.  The proposed algorithms are based on modifying or perturbing the database transactions so that the confidence of the association rules can be reduced.  Examples demonstrating the proposed algorithms are shown The characteristics of the proposed algorithms are analyzed.  The efficiency of the proposed approach is further compared with Saygin etc approach.  It is observed that our approach required less number of databases scanning and prune more number of hidden rules.  However, our approach must hide all rules containing the hidden items on the left hand side, where 
Saygin etc approach can hide any specific rule The rest of the paper is organized as follows.  Section 2 presents the statement of the problem and the notation used in the paper.  Section 3 presents the proposed algorithms for hiding sensitive predictive association rules that contain the specified items. Section 4 shows some examples of the proposed algorithms.  Section 5 analyses the characteristics of proposed algorithms and further compare with Saygin etc approach.  Concluding remarks and future works are described in section 6 223 0-7803-9093-8/05/$20.00 ©2005 IEEE 


  2. Problem Statement 2.1. Predicative Association Rules  The problem of mining association rules was introduced in [2 L e t           2 1 m i i i I 000\026 000 be a set of literals, called items.  Given a set of transactions D where each transaction T is a set of items such that  I T 000 an association rule is an expression Y X 000 where  I X 000   I Y 000 and  000I 000 000 Y X The X and Y are called respectively the body \(left hand side\ and head \(right hand side\ of the rule.  An example of such a rule is that 90% of customers buy hamburgers also buy Coke.  The 90% here is called the confidence of the rule, which means that 90% of transaction that contains X also contains Y The confidence is calculated as     X Y X 000 The support of the rule is the percentage of transactions that contain both X and Y which is calculated as N Y X   000 where N is the number of transactions in D In other words, the confidence of a rule measures the degree of the correlation between itemsets while the support of a rule measures the significance of the correlation between itemsets.  The problem of mining association rules is to find all rules that are greater than the user-specified Minimum Support Threshold \(MST\ and Minimum Confidence Threshold \(MCT  As an example, for the given database in Table 1, a MST of 60% and a MCT of 70%, four association rules can be found as follows A  B 60%, 75 B  A 60%, 75  A  D 60%, 75 D  A 60%, 100   Table 1: Database D  TID Items ABCD T 1 1101 T 2 0100 T 3 1011 T 4 1100 T 5 1101   However, mining association rules usually generates a large number of rules, most of which are unnecessary for the purpose of prediction.  For example, given itemset for prediction P = {A the rule set that contains only two rules A  B 60%, 75 A  D 60%, 75%\, will generate the same predicted itemset Q = {B, D as the four association rules found from Table 1.  The rule set A  B, A  D is called predictive rule set of P Informally, a predictive association rule set \(or informative rule set\14 can  b e  defined as the smallest rule set that makes the same prediction as the association rule set by confidence priority 2.2. Problem Description  The objective of data mining is to extract hidden or potentially unknown interesting rules or patterns from databases.  However, the objective of privacy preserving data mining is to hide certain sensitive information so that they cannot be discovered through data mining techniques 1,4-12,16 this wo rk we as sum e that o n l y sen s iti v e items are given and propose two algorithms to replace data by unknowns in database so that sensitive predictive association rules cannot be inferred through association rule mining.  More specifically, given a transaction database D  a minimum support threshold, a minimum confidence threshold and a set of sensitive items X the objective is to modify the database D such that no predictive association rules containing X on the left hand side will be discovered The approach of hiding sensitive association rules by replacing data items by unknowns was introduced in Saygin etc [2 As u nkn own s a r e  i nvol ve d i n  t h e  da t a ba s e  the definition of support must be modified.  Instead of a single value for the support of an itemset A, there is a support interval, [minsup\(A\maxsup\(A wh er e the actual support of itemset A can be any value between minsup\(A and maxsup\(A\e minsup\(A\he percentage of the transactions that contain 1s for all the items in A and maxsup\(A\ is the percentage of the transactions that contain either 1 or  for all the items in A.  Similarly, the confidence formula is also modified since it will also have a degree of uncertainty.  Instead of a single value for the confidence of a rule A=>B, there is a confidence interval minconf\(A=>B\axconf\(A=>B wher e t h e actual confidence of a rule A=>B can be any value between minconf\(A=>B\ and maxconf\(A=>B\ Given the minimum and maximum support values of itemsets A 000 B and A, the minimum confidence value for a rule A=>B is minconf\(A=>B\ = minsup\(A 000 B\/maxsup\(A\, and the maximum confidence value is maxconf\(A=>B maxsup\(A 000 B\insup\(A As an example, for the given database in Table 1, a MST of 60%, a MCT of 70%, and a hidden item X  B if transaction T 4 is modified as 100 then the following rule that contain item B on the left hand side will be hidden B  A 40%,60   5 0%,7 5     an d the ru l e  A  B 40%,60   5 0   100   wi l l be l o s t du e t o si de e f f e c t   The following notation will be used in the paper. Each database transaction has three elements: T=<TID list_of_elements, size>.  The TID is the unique identifier of the transaction T and list_of_elements is a list of all items in the database.  However, each element has value 1 if the corresponding item is supported by the transaction and 0 otherwise. Size means the number of elements in the list_of_elements having value 1.  For example, if I   A,B,C a transaction that has the items A, C will be represented as t T1,101,2>.  In addition, a transaction t  supports an itemset I when the elements of t.list_of_elements corresponding to items of I are all set to 1.  A transaction t  partially supports an itemset I when the 224 


 elements are not all set to 1.  For example, if I  A,B,C  111 p T 3  and q T2 1  t h e n we  would say that p  supports  I and q  partially supports  I  3. Proposed Algorithms In order to hide an association rule, we can either decrease its support or its confidence to be smaller than pre-specified minimum support and minimum confidence thresholds.  To decrease the confidence of a rule X=>Y we can either \(1\crease the support of X i.e., the left hand side of the rule, but not support of X 000 Y or \(2\ decrease the support of the itemset X 000 Y For the second case, if we only decrease the support of Y the right hand side of the rule, it would reduce the confidence faster than simply reducing the support of X 000 Y To decrease support of an item, we will modify one item at a time in a selected transaction by changing from 1 to ? and from 0 to ? to increase the support  Based on these two strategies, we propose two datamining algorithms for hiding sensitive predictive association rules, namely I ncrease S upport of LHS  ISL  and D ecrease S upport of R HS DSR The first algorithm tries to increase the support of left hand side of the rule The second algorithm tries to decrease the support of the right hand side of the rule.  The details of the two algorithms are described as follow  Algorithm ISL Input  1\ a source database D   2\MST \(Minimum Support Threshold  3\ MCT \(Minimum Confidence Threshold  4\a set of hidden items X  Output a transformed database D where rules containing X on LHS will be hidden  1 Find large 1-item sets from D  2 For each hidden item x 000 X  3 If x is not a large 1-itemset, then X := X -{x  4. If H is empty, then EXIT;// no AR contains X in LHS  5 Find large 2-itemsets from D  6. For each x 000 X  7 For each large 2-itemset containing x  8 Compute confidence of rule U where U is a rule like x 000o h  9 If minConf\(U MCT, then 10 Go to next large 2-itemset 11 Else Increase Support of LHS  12 Find T L  t in D  t does not support U   xh is 00 13  Sort T L in ascending order by the number of Items in t  14  While minConf\(U MCT and T L is  not empty 15  Choose the first transaction t from T L   16  Place a ? mark for the item in LHS  U 0 17  Compute supports and confidences that contain item with ? mark 18 Remove and save the first transaction t  from T L  19 end While 20  end If 21. If T L is empty, then 22 Can not hide x 000o h  23. Restore D  24 UPDATE LARGE-2 ITEMSET AND Go to next large-2 itemset 25 end if T L is empty 26 end of for each large 2-itemset 27. Remove x from X  28 end of for each x  29. Output updated D as the transformed D   Algorithm DSR Input  1\urce database D   Minimum Support Threshold  Minimum Confidence Threshold  4\ a set of hidden items X  Output a transformed database D where rules containing X on LHS will be hidden  1 Find large 1-item sets from D  2 For each hidden item x 000 X  3 If x is not a large 1-itemset, then X := X -{x  4. If H is empty, then EXIT;// no AR contains X in LHS  5 Find large 2-itemsets from D  6. For each x 000 X  7 For each large 2-itemset containing x  8 Compute confidence of rule U where U is a rule like x 000o h  9 If minConf\(U MCT, then 10 Go to next large 2-itemset 11 Else Decrease Support of RHS  12. Find T R  t in D  t fully support U    xh is 11 13. Sort T R in ascending order by the number of   Items 14. While minConf\(U MCT and T R    is not empty 15 Choose the first transaction t from T R   16 Place a ? mark for the item in RHS  U    xh is 1 17 Compute supports and confidences      that contain item with ? mark 18 Remove and save the first transaction t   from T R  19 end While 20 end if 21. If T R is empty, then 22 Can not hide x 000o h  23. Restore D  24 UPDATE LARGE-2 ITEMSET AND Go to  next large-2 itemset 25 end if T R is empty 225 


1.000000 0.000000 0.000000 1.000000 8.500000 -24.999954 Tm 9.744400 0.000000 0.000000 9.744400 56.039993 797.120300 Tm 9.744400 0.000000 0.000000 9.744400 64.539993 772.120331 Tm  26 end of for each large 2-itemset 27. Remove x from X  28 end of for each x  29. Output updated D as the transformed D   11.669998 0.000000 0.000000 11.669998 56.039993 682.220306 Tm 11.669998 0.000000 0.000000 11.669998 64.539993 657.220337 Tm 4. Examples 9.744400 0.000000 0.000000 9.744400 62.880005 664.760300 Tm 9.744400 0.000000 0.000000 9.744400 71.380005 639.760330 Tm This section shows four examples for demonstrating the two proposed algorithms using unknowns in hiding sensitive predictive association rules in the association rule mining For the given database in Table 1, a MST of 60% and a MCT of 70%, the first two examples try to hide the sensitive rules using the ISL algorithm.  The difference of the two examples is that the order of hiding item is different The first example hides item B and then item D The second example hides item D and then item B The result is given in section 4.1 The third and fourth examples hide the sensitive predictive association rules using DSR algorithm.  The difference is also the order of items to be hidden.  The result is given in section 4.2  Table 2: Database 9.744400 0.000000 3.332596 9.744400 150.600006 482.420303 Tm 9.744400 0.000000 3.332596 9.744400 159.100006 457.420334 Tm D 9.744400 0.000000 0.000000 9.744400 157.679993 482.420303 Tm 9.744400 0.000000 0.000000 9.744400 166.179993 457.420334 Tm using the specified notation TID Items Size 1.000000 0.000000 0.000000 1.000000 8.500000 -24.999954 Tm 9.744400 0.000000 0.000000 9.744400 125.039993 459.020294 Tm 9.744400 0.000000 0.000000 9.744400 133.539993 434.020325 Tm T 6.301605 0.000000 0.000000 6.301605 130.979996 457.580307 Tm 6.301605 0.000000 0.000000 6.301605 139.479996 432.580338 Tm 1 9.744400 0.000000 0.000000 9.744400 134.160004 459.020294 Tm 9.744400 0.000000 0.000000 9.744400 142.660004 434.020325 Tm 1101 3 1.000000 0.000000 0.000000 1.000000 8.500000 -24.999954 Tm 9.744400 0.000000 0.000000 9.744400 125.039993 447.140305 Tm 9.744400 0.000000 0.000000 9.744400 133.539993 422.140335 Tm T 6.301605 0.000000 0.000000 6.301605 130.979996 445.700302 Tm 6.301605 0.000000 0.000000 6.301605 139.479996 420.700333 Tm 2 9.744400 0.000000 0.000000 9.744400 134.160004 447.140305 Tm 9.744400 0.000000 0.000000 9.744400 142.660004 422.140335 Tm 0100 1 1.000000 0.000000 0.000000 1.000000 8.500000 -24.999954 Tm 9.744400 0.000000 0.000000 9.744400 125.039993 435.320297 Tm 9.744400 0.000000 0.000000 9.744400 133.539993 410.320328 Tm T 6.301605 0.000000 0.000000 6.301605 130.979996 433.880295 Tm 6.301605 0.000000 0.000000 6.301605 139.479996 408.880325 Tm 3 9.744400 0.000000 0.000000 9.744400 134.160004 435.320297 Tm 9.744400 0.000000 0.000000 9.744400 142.660004 410.320328 Tm 1011 3 1.000000 0.000000 0.000000 1.000000 8.500000 -24.999954 Tm 9.744400 0.000000 0.000000 9.744400 125.039993 423.440308 Tm 9.744400 0.000000 0.000000 9.744400 133.539993 398.440338 Tm T 6.301605 0.000000 0.000000 6.301605 130.979996 422.000305 Tm 6.301605 0.000000 0.000000 6.301605 139.479996 397.000336 Tm 4 9.744400 0.000000 0.000000 9.744400 134.160004 423.440308 Tm 9.744400 0.000000 0.000000 9.744400 142.660004 398.440338 Tm 1100 2 1.000000 0.000000 0.000000 1.000000 8.500000 -24.999954 Tm 9.744400 0.000000 0.000000 9.744400 125.039993 411.620300 Tm 9.744400 0.000000 0.000000 9.744400 133.539993 386.620331 Tm T 6.301605 0.000000 0.000000 6.301605 130.979996 410.180298 Tm 6.301605 0.000000 0.000000 6.301605 139.479996 385.180328 Tm 5 9.744400 0.000000 0.000000 9.744400 134.160004 411.620300 Tm 9.744400 0.000000 0.000000 9.744400 142.660004 386.620331 Tm 1101 3 1.000000 0.000000 0.000000 1.000000 8.500000 -24.999954 Tm 9.744400 0.000000 0.000000 9.744400 173.279999 399.740295 Tm 9.744400 0.000000 0.000000 9.744400 181.779999 374.740326 Tm   10.677902 0.000000 0.000000 10.677902 56.039993 375.800293 Tm 10.677902 0.000000 0.000000 10.677902 64.539993 350.800323 Tm 4.1. Examples Running ISL Algorithm 9.744400 0.000000 0.000000 9.744400 56.039993 364.400299 Tm 9.744400 0.000000 0.000000 9.744400 64.539993 339.400330 Tm  Example 1 1.000000 0.000000 0.000000 1.000000 8.500000 -24.999954 Tm 9.744400 0.000000 0.000000 9.744400 102.240005 352.880295 Tm 9.744400 0.000000 0.000000 9.744400 110.740005 327.880325 Tm Assuming that the MST = 60% and MCT 70%, the result of hiding item B and then item D using ISL  algorithm is as follows.  To hide item B i.e. the rule B=>A 60%, 75%\, no transaction can be found for T 6.301605 0.000000 0.000000 6.301605 240.360001 317.120407 Tm 6.301605 0.000000 0.000000 6.301605 248.860001 292.120438 Tm L 9.744400 0.000000 0.000000 9.744400 244.199997 318.560394 Tm 9.744400 0.000000 0.000000 9.744400 252.699997 293.560425 Tm Therefore B=>A can not be hidden using ISL algorithm.   To further hide item D i.e. the rule D=>A 60%, 100%\, one transaction T 6.301605 0.000000 0.000000 6.301605 108.360001 282.980301 Tm 6.301605 0.000000 0.000000 6.301605 116.860001 257.980331 Tm 2 9.744400 0.000000 0.000000 9.744400 111.479996 284.420303 Tm 9.744400 0.000000 0.000000 9.744400 119.979996 259.420334 Tm can be found for T 6.301605 0.000000 0.000000 6.301605 192.600006 282.980301 Tm 6.301605 0.000000 0.000000 6.301605 201.100006 257.980331 Tm L 9.744400 0.000000 0.000000 9.744400 196.440002 284.420303 Tm 9.744400 0.000000 0.000000 9.744400 204.940002 259.420334 Tm The transaction T 6.301605 0.000000 0.000000 6.301605 277.259995 282.980301 Tm 6.301605 0.000000 0.000000 6.301605 285.759995 257.980331 Tm 2 9.744400 0.000000 0.000000 9.744400 280.440002 284.420303 Tm 9.744400 0.000000 0.000000 9.744400 288.940002 259.420334 Tm is then replaced by 010?.   However, the resulting support and confidence intervals are [60%,60  and  7 5%,1 0 0    which are still greater than MST and MCT.  Therefore D=>A can not be hidden by ISL algorithm  Example 2 1.000000 0.000000 0.000000 1.000000 8.500000 -24.999954 Tm 9.744400 0.000000 0.000000 9.744400 101.100006 215.960297 Tm 9.744400 0.000000 0.000000 9.744400 109.600006 190.960327 Tm As in example 1, reversing the order of hiding items, the result of hiding item D and then item B using ISL algorithm is as follows.  To hide item D i.e. the rule D=>A 60%, 100%\, even though transaction T 6.301605 0.000000 0.000000 6.301605 273.539993 180.200302 Tm 6.301605 0.000000 0.000000 6.301605 282.039993 155.200333 Tm 2 9.744400 0.000000 0.000000 9.744400 276.720001 181.640305 Tm 9.744400 0.000000 0.000000 9.744400 285.220001 156.640335 Tm is modified, the rule can not be hidden.  To hide item B, no transaction can be found for T 6.301605 0.000000 0.000000 6.301605 175.320007 157.460297 Tm 6.301605 0.000000 0.000000 6.301605 183.820007 132.460327 Tm L 9.744400 0.000000 0.000000 9.744400 179.220001 158.900299 Tm 9.744400 0.000000 0.000000 9.744400 187.720001 133.900330 Tm Therefore, no rules can be hidden by ISL algorithm  10.677902 0.000000 0.000000 10.677902 56.039993 123.620300 Tm 10.677902 0.000000 0.000000 10.677902 64.539993 98.620331 Tm 4.2. Examples Running DSR Algorithm 9.744400 0.000000 0.000000 9.744400 56.039993 112.040298 Tm 9.744400 0.000000 0.000000 9.744400 64.539993 87.040329 Tm  Example 3 1.000000 0.000000 0.000000 1.000000 8.500000 -24.999954 Tm 9.744400 0.000000 0.000000 9.744400 349.679993 740.960297 Tm 9.744400 0.000000 0.000000 9.744400 358.179993 715.960327 Tm Assuming that the MST=60% and MCT=70 the result of hiding item B and then item D using DSR  algorithm is as follows.  To hide item B the rule B=>A  40%,60   50 7 5   wi l l be h i dde n a nd t h e  ru l e  A=>B 40%,60   5 0 100    w i l l b e l os t  due t o si de  effect.  This is due to transaction T 6.301605 0.000000 0.000000 6.301605 444.000000 682.460297 Tm 6.301605 0.000000 0.000000 6.301605 452.500000 657.460327 Tm 4 9.744400 0.000000 0.000000 9.744400 447.119995 683.900299 Tm 9.744400 0.000000 0.000000 9.744400 455.619995 658.900330 Tm is modified from 1100 to ?100.  The updated database D 6.301605 0.000000 0.000000 6.301605 436.800003 671.060303 Tm 6.301605 0.000000 0.000000 6.301605 445.300003 646.060333 Tm 3 9.744400 0.000000 0.000000 9.744400 439.979996 672.500305 Tm 9.744400 0.000000 0.000000 9.744400 448.479996 647.500336 Tm is shown in Table 3.  To further hide item D the rule D=>A 40%,60  66%,100  l l  be hi d d e n a nd t h e  r u l e  A=>D  40%,60 5 0  10 0    wil l b e los t  du e to side e f fect  This is due to transaction T 6.301605 0.000000 0.000000 6.301605 411.360001 625.520294 Tm 6.301605 0.000000 0.000000 6.301605 419.860001 600.520325 Tm 1 9.744400 0.000000 0.000000 9.744400 414.539993 626.960297 Tm 9.744400 0.000000 0.000000 9.744400 423.039993 601.960327 Tm is modified from 1101 to ?101 The updated database D 6.301605 0.000000 0.000000 6.301605 398.639999 614.180298 Tm 6.301605 0.000000 0.000000 6.301605 407.139999 589.180328 Tm 4 9.744400 0.000000 0.000000 9.744400 401.820007 615.620300 Tm 9.744400 0.000000 0.000000 9.744400 410.320007 590.620331 Tm is shown in Table 3  Table 3  Databases before and after hiding item 9.744400 0.000000 3.332596 9.744400 512.879898 592.940308 Tm 9.744400 0.000000 3.332596 9.744400 521.379898 567.940338 Tm B 9.744400 0.000000 0.000000 9.744400 519.360001 592.940308 Tm 9.744400 0.000000 0.000000 9.744400 527.860001 567.940338 Tm and item 9.744400 0.000000 3.332596 9.744400 404.220001 581.900299 Tm 9.744400 0.000000 3.332596 9.744400 412.720001 556.900330 Tm D 9.744400 0.000000 0.000000 9.744400 411.240005 581.900299 Tm 9.744400 0.000000 0.000000 9.744400 419.740005 556.900330 Tm using DSR          Example 4 1.000000 0.000000 0.000000 1.000000 8.500000 -24.999954 Tm 9.744400 0.000000 0.000000 9.744400 349.679993 468.980301 Tm 9.744400 0.000000 0.000000 9.744400 358.179993 443.980331 Tm As in example 3, reversing the order of hiding items, the result of hiding item D and then item B using DSR algorithm is as follows.  To hide item D the rule D=>A 40%,60  6 6 10 0     w i l l be hi dde n wh e n  transaction T 6.301605 0.000000 0.000000 6.301605 357.119995 421.820297 Tm 6.301605 0.000000 0.000000 6.301605 365.619995 396.820328 Tm 1 9.744400 0.000000 0.000000 9.744400 360.240005 423.260300 Tm 9.744400 0.000000 0.000000 9.744400 368.740005 398.260330 Tm is modified from 1101 to ?101.  The other three rules A=>B 40%,60  50  100     B=>A  40%,60   50 7 5    A=>D 40%,60  50%,100    will be l o st d u e t o  sid e  eff ect  The new database D 6.301605 0.000000 0.000000 6.301605 347.639999 376.340302 Tm 6.301605 0.000000 0.000000 6.301605 356.139999 351.340332 Tm 5 9.744400 0.000000 0.000000 9.744400 350.820007 377.780304 Tm 9.744400 0.000000 0.000000 9.744400 359.320007 352.780334 Tm is shown in Table 4  Table 4  Databases before and after hiding item 9.744400 0.000000 3.332596 9.744400 512.879898 355.100296 Tm 9.744400 0.000000 3.332596 9.744400 521.379898 330.100327 Tm B 9.744400 0.000000 0.000000 9.744400 519.360001 355.100296 Tm 9.744400 0.000000 0.000000 9.744400 527.860001 330.100327 Tm and item 9.744400 0.000000 3.332596 9.744400 404.220001 344.120407 Tm 9.744400 0.000000 3.332596 9.744400 412.720001 319.120438 Tm C 9.744400 0.000000 0.000000 9.744400 411.240005 344.120407 Tm 9.744400 0.000000 0.000000 9.744400 419.740005 319.120438 Tm using DSR           One observation is that different sequences of hiding items will result in different transformed databases, i.e D 6.301605 0.000000 0.000000 6.301605 535.979996 229.100296 Tm 6.301605 0.000000 0.000000 6.301605 544.479996 204.100327 Tm 4 9.744400 0.000000 0.000000 9.744400 539.160004 230.540298 Tm 9.744400 0.000000 0.000000 9.744400 547.660004 205.540329 Tm  and D 6.301605 0.000000 0.000000 6.301605 328.199997 217.760300 Tm 6.301605 0.000000 0.000000 6.301605 336.699997 192.760330 Tm 5 9.744400 0.000000 0.000000 9.744400 331.380005 219.200302 Tm 9.744400 0.000000 0.000000 9.744400 339.880005 194.200333 Tm for DSR algorithm  11.669998 0.000000 0.000000 11.669998 304.559998 194.420303 Tm 11.669998 0.000000 0.000000 11.669998 313.059998 169.420334 Tm 5. Analysis 9.744400 0.000000 0.000000 9.744400 313.020004 176.900299 Tm 9.744400 0.000000 0.000000 9.744400 321.520004 151.900330 Tm This section analyzes some of the characteristics of the proposed algorithms and compares with the algorithms proposed in Saygin etcs [22  Th e f i r s t ch aracteristic we observe is the item ordering effect.  The transformed databases are different under different ordering of hiding items, even though the same set of sensitive items is specified.  The second charact eristic we observe is the algorithm effect.  The transformed databases will be TID D D 6.301605 0.000000 0.000000 6.301605 443.160004 558.620407 Tm 6.301605 0.000000 0.000000 6.301605 451.660004 533.620438 Tm 3 9.744400 0.000000 0.000000 9.744400 446.339996 560.060303 Tm 9.744400 0.000000 0.000000 9.744400 454.839996 535.060333 Tm D 6.301605 0.000000 0.000000 6.301605 485.699997 558.620407 Tm 6.301605 0.000000 0.000000 6.301605 494.199997 533.620438 Tm 4 9.744400 0.000000 0.000000 9.744400 488.880005 560.060303 Tm 9.744400 0.000000 0.000000 9.744400 497.380005 535.060333 Tm  1.000000 0.000000 0.000000 1.000000 8.500000 -24.999954 Tm 9.744400 0.000000 0.000000 9.744400 351.539993 548.180298 Tm 9.744400 0.000000 0.000000 9.744400 360.039993 523.180328 Tm T 6.301605 0.000000 0.000000 6.301605 357.539993 546.800293 Tm 6.301605 0.000000 0.000000 6.301605 366.039993 521.800323 Tm 1 9.744400 0.000000 0.000000 9.744400 360.660004 548.180298 Tm 9.744400 0.000000 0.000000 9.744400 369.160004 523.180328 Tm 1101 1101 ?101 1.000000 0.000000 0.000000 1.000000 8.500000 -24.999954 Tm 9.744400 0.000000 0.000000 9.744400 351.539993 536.360397 Tm 9.744400 0.000000 0.000000 9.744400 360.039993 511.360428 Tm T 6.301605 0.000000 0.000000 6.301605 357.539993 534.920303 Tm 6.301605 0.000000 0.000000 6.301605 366.039993 509.920334 Tm 2 9.744400 0.000000 0.000000 9.744400 360.660004 536.360397 Tm 9.744400 0.000000 0.000000 9.744400 369.160004 511.360428 Tm 0100 0100 0100 1.000000 0.000000 0.000000 1.000000 8.500000 -24.999954 Tm 9.744400 0.000000 0.000000 9.744400 351.539993 524.540298 Tm 9.744400 0.000000 0.000000 9.744400 360.039993 499.540329 Tm T 6.301605 0.000000 0.000000 6.301605 357.539993 523.100296 Tm 6.301605 0.000000 0.000000 6.301605 366.039993 498.100327 Tm 3 9.744400 0.000000 0.000000 9.744400 360.660004 524.540298 Tm 9.744400 0.000000 0.000000 9.744400 369.160004 499.540329 Tm 1011 1011 1011 1.000000 0.000000 0.000000 1.000000 8.500000 -24.999954 Tm 9.744400 0.000000 0.000000 9.744400 351.539993 512.660294 Tm 9.744400 0.000000 0.000000 9.744400 360.039993 487.660324 Tm T 6.301605 0.000000 0.000000 6.301605 357.539993 511.220306 Tm 6.301605 0.000000 0.000000 6.301605 366.039993 486.220337 Tm 4 9.744400 0.000000 0.000000 9.744400 360.660004 512.660294 Tm 9.744400 0.000000 0.000000 9.744400 369.160004 487.660324 Tm 1100 ?100 ?100 1.000000 0.000000 0.000000 1.000000 8.500000 -24.999954 Tm 9.744400 0.000000 0.000000 9.744400 351.539993 500.840302 Tm 9.744400 0.000000 0.000000 9.744400 360.039993 475.840332 Tm T 6.301605 0.000000 0.000000 6.301605 357.539993 499.400299 Tm 6.301605 0.000000 0.000000 6.301605 366.039993 474.400330 Tm 5 9.744400 0.000000 0.000000 9.744400 360.660004 500.840302 Tm 9.744400 0.000000 0.000000 9.744400 369.160004 475.840332 Tm 1101 1101 1101 1.000000 0.000000 0.000000 1.000000 8.500000 -24.999954 Tm 9.744400 0.000000 0.000000 9.744400 374.220001 316.820297 Tm 9.744400 0.000000 0.000000 9.744400 382.720001 291.820328 Tm TID D D 6.301605 0.000000 0.000000 6.301605 469.440002 315.380295 Tm 6.301605 0.000000 0.000000 6.301605 477.940002 290.380325 Tm 5 9.744400 0.000000 0.000000 9.744400 472.559998 316.820297 Tm 9.744400 0.000000 0.000000 9.744400 481.059998 291.820328 Tm  1.000000 0.000000 0.000000 1.000000 8.500000 -24.999954 Tm 9.744400 0.000000 0.000000 9.744400 377.820007 304.940308 Tm 9.744400 0.000000 0.000000 9.744400 386.320007 279.940338 Tm T 6.301605 0.000000 0.000000 6.301605 383.759995 303.500305 Tm 6.301605 0.000000 0.000000 6.301605 392.259995 278.500336 Tm 1 9.744400 0.000000 0.000000 9.744400 386.940002 304.940308 Tm 9.744400 0.000000 0.000000 9.744400 395.440002 279.940338 Tm 1101 ?101 1.000000 0.000000 0.000000 1.000000 8.500000 -24.999954 Tm 9.744400 0.000000 0.000000 9.744400 377.820007 293.120407 Tm 9.744400 0.000000 0.000000 9.744400 386.320007 268.120438 Tm T 6.301605 0.000000 0.000000 6.301605 383.759995 291.680405 Tm 6.301605 0.000000 0.000000 6.301605 392.259995 266.680435 Tm 2 9.744400 0.000000 0.000000 9.744400 386.940002 293.120407 Tm 9.744400 0.000000 0.000000 9.744400 395.440002 268.120438 Tm 0100 0100 1.000000 0.000000 0.000000 1.000000 8.500000 -24.999954 Tm 9.744400 0.000000 0.000000 9.744400 377.820007 281.240402 Tm 9.744400 0.000000 0.000000 9.744400 386.320007 256.240433 Tm T 6.301605 0.000000 0.000000 6.301605 383.759995 279.800400 Tm 6.301605 0.000000 0.000000 6.301605 392.259995 254.800430 Tm 3 9.744400 0.000000 0.000000 9.744400 386.940002 281.240402 Tm 9.744400 0.000000 0.000000 9.744400 395.440002 256.240433 Tm 1011 1011 1.000000 0.000000 0.000000 1.000000 8.500000 -24.999954 Tm 9.744400 0.000000 0.000000 9.744400 377.820007 269.420303 Tm 9.744400 0.000000 0.000000 9.744400 386.320007 244.420334 Tm T 6.301605 0.000000 0.000000 6.301605 383.759995 267.980301 Tm 6.301605 0.000000 0.000000 6.301605 392.259995 242.980331 Tm 4 9.744400 0.000000 0.000000 9.744400 386.940002 269.420303 Tm 9.744400 0.000000 0.000000 9.744400 395.440002 244.420334 Tm 1100 1100 1.000000 0.000000 0.000000 1.000000 8.500000 -24.999954 Tm 9.744400 0.000000 0.000000 9.744400 377.820007 257.540298 Tm 9.744400 0.000000 0.000000 9.744400 386.320007 232.540329 Tm T 6.301605 0.000000 0.000000 6.301605 383.759995 256.160294 Tm 6.301605 0.000000 0.000000 6.301605 392.259995 231.160324 Tm 5 9.744400 0.000000 0.000000 9.744400 386.940002 257.540298 Tm 9.744400 0.000000 0.000000 9.744400 395.440002 232.540329 Tm 1101 1101 226 


1.000000 0.000000 0.000000 1.000000 8.500000 -24.999954 Tm 9.744400 0.000000 0.000000 9.744400 56.039993 797.120300 Tm 9.744400 0.000000 0.000000 9.744400 64.539993 772.120331 Tm  different under different algorithm. These characteristics are demonstrated in the four examples in section 4 and summarized in Table 5.  Databases D 6.301605 0.000000 0.000000 6.301605 204.240005 716.900299 Tm 6.301605 0.000000 0.000000 6.301605 212.740005 691.900330 Tm 1 9.744400 0.000000 0.000000 9.744400 207.360001 718.340302 Tm 9.744400 0.000000 0.000000 9.744400 215.860001 693.340332 Tm and D 6.301605 0.000000 0.000000 6.301605 234.300003 716.900299 Tm 6.301605 0.000000 0.000000 6.301605 242.800003 691.900330 Tm 2 9.744400 0.000000 0.000000 9.744400 237.419998 718.340302 Tm 9.744400 0.000000 0.000000 9.744400 245.919998 693.340332 Tm are resulting databases using ISL algorithm and D 6.301605 0.000000 0.000000 6.301605 215.880005 705.380295 Tm 6.301605 0.000000 0.000000 6.301605 224.380005 680.380325 Tm 3 9.744400 0.000000 0.000000 9.744400 219.059998 706.820297 Tm 9.744400 0.000000 0.000000 9.744400 227.559998 681.820328 Tm  D 6.301605 0.000000 0.000000 6.301605 233.880005 705.380295 Tm 6.301605 0.000000 0.000000 6.301605 242.380005 680.380325 Tm 4 9.744400 0.000000 0.000000 9.744400 237.000000 706.820297 Tm 9.744400 0.000000 0.000000 9.744400 245.500000 681.820328 Tm and D 6.301605 0.000000 0.000000 6.301605 268.800003 705.380295 Tm 6.301605 0.000000 0.000000 6.301605 277.300003 680.380325 Tm 5 9.744400 0.000000 0.000000 9.744400 271.979996 706.820297 Tm 9.744400 0.000000 0.000000 9.744400 280.479996 681.820328 Tm are resulting databases using DSR algorithm Table 5  Databases before and after hiding items 9.744400 0.000000 3.332596 9.744400 276.240005 672.320297 Tm 9.744400 0.000000 3.332596 9.744400 284.740005 647.320328 Tm B 9.744400 0.000000 0.000000 9.744400 282.720001 672.320297 Tm 9.744400 0.000000 0.000000 9.744400 291.220001 647.320328 Tm  and 9.744400 0.000000 3.332596 9.744400 136.500000 661.280304 Tm 9.744400 0.000000 3.332596 9.744400 145.000000 636.280334 Tm D 9.744400 0.000000 0.000000 9.744400 143.520004 661.280304 Tm 9.744400 0.000000 0.000000 9.744400 152.020004 636.280334 Tm using ISL and DSR    The third characteristic we analyze is the efficiency of the proposed algorithm compared with the Saygin etc algorithms.  Even though it is the hidden rules, instead of hidden items, that are specified in [22 we com p ar e t h e number of database scanning and the rules pruned between the two approaches.  For the proposed algorithms, the number of database scanning comes from the calculation of only large one and large two itemsets, as well as transactions in T 6.301605 0.000000 0.000000 6.301605 121.800003 466.640305 Tm 6.301605 0.000000 0.000000 6.301605 130.300003 441.640335 Tm L 9.744400 0.000000 0.000000 9.744400 125.279999 468.080307 Tm 9.744400 0.000000 0.000000 9.744400 133.779999 443.080338 Tm For Saygin etcs algorithm, the number of database scanning comes from the calculation of all large itemsets, which may include large three or higher itemsets and partial support transactions T No rules are pruned in the Saygin etcs algorithm  One of the reasons that Saygin etcs approach does not prune rules is that hidden rules are given in advance and the algorithms try to hide every single rule without checking to see if rules can be pruned after some transactions have been changed  However, our approach needs to hide all rules containing hidden items on the left hand side.  But Saygin etcs approach can hide some of the rules containing hidden item on the left hand side.  For example, for hidden item A  Saygin etcs approach can hide A=> B but show A => D  whereas our approach must hide both rules The fourth characteristic we analyze is efficiency comparison of the ISL and DSR algorithms.  One observation we conclude from the examples in section four is that DSR algorithm seems to be more effective when the support count of the hidden item is large.  This is due to when support of right hand side of the rule is large increase support of left hand side usually does not reduce the confidence of the rule.  However, decrease support of right hand side usually decreases the confidence of the rule  11.669998 0.000000 0.000000 11.669998 56.039993 169.940308 Tm 11.669998 0.000000 0.000000 11.669998 64.539993 144.940338 Tm 6. Conclusions 9.744400 0.000000 0.000000 9.744400 56.039993 152.420303 Tm 9.744400 0.000000 0.000000 9.744400 64.539993 127.420334 Tm  In this work, we have studied the database privacy problems caused by data mining technology and proposed two naïve algorithms for hiding sensitive predictive association rules in association rules mining.  The proposed algorithms are based on modifying the database transactions using unknowns so that the confidence of the association rules can be reduced.  Examples demonstrating the proposed algorithms are shown.  The item ordering and algorithm ordering characteristics of the proposed algorithms are analyzed.  The efficiency of the proposed approach is further compared with Saygin etcs [22 I t  was observed that our approach required less number of database scanning and prune more number of hidden rules However, our approach must hide all rules containing the hidden items on the left hand side, where Saygin etcs approach can hide any specified rule.  Currently we are performing numerical simulation on the time effects and side effects \(the number of lost rules and new rules due to alternation of the database\and will be included in this work.  In the future, we will examine and compare with other alternation techniques for hiding predictive association rules based on current approach  11.669998 0.000000 0.000000 11.669998 304.559998 534.020294 Tm 11.669998 0.000000 0.000000 11.669998 313.059998 509.020325 Tm 7. References 8.752502 0.000000 0.000000 8.752502 304.559998 517.460297 Tm 8.752502 0.000000 0.000000 8.752502 313.059998 492.460327 Tm  D. Agrawal a n d C. C. Aggarwal O n the design  and quantification of privacy preserving data mining algorithms, In Proceedings of the 20th Symposium on Principles of Database Systems, Santa Barbara, California, USA, May 2001    R  Ag raw a l T. I m ielins k i, and A  Sw am i   M ining Association Rules between Sets of Items in Large Databases, In Proceedings of ACM SIGMOD International Conference on Management of Data, Washington DC, May 1993  3 R Agra wa l a nd R Sri k a n t, Privacy preserving data mining, In ACM SIGMOD Conferen ce on Management of Data pages 439450, Dallas, Texas, May 2000    Ljiljana Brankovi c and Vl a d i m ir Es tivillCas t ro P rivacy  Issues in Knowledge Discovery and Data Mining, Australian Institute of Computer Ethics Conference, July, 1999, Lilydale    C   C lif ton and D  M a rks   S ecurity  a n d Priv a c y I m plications  of Data Mining, in SIGMOD Workshop on Research Issues on Data Mining and knowledge Discovery, 1996   C. Clifton P ro tec t ing Agains t Data Min i ng T h rough Samples, in Proceedings of the Thirteenth Annual IFIP WG 11.3 Working Conference on Database Security, 1999   C. Clifton U sin g  Samp le Size to Limit Exposure to Data Mining, Journal of Comput er Security, 8\(4   Clifton M u ra nt Kantarcioglu, Xiaodong Lin and Michael Y. Zhu,  Tools for Privacy Preserving Distributed Data Mining, SIGKDD Explorations 4\(2  9 E Dasseni  V  Ver y ki os  A Elmagarmid and E. Bertino Hiding Association Rules by Using Confidence and Support in Proceedings of 4 5.835007 0.000000 0.000000 5.835007 372.300003 161.960297 Tm 5.835007 0.000000 0.000000 5.835007 380.800003 136.960327 Tm th 8.752502 0.000000 0.000000 8.752502 376.800003 158.060303 Tm 8.752502 0.000000 0.000000 8.752502 385.300003 133.060333 Tm Information Hiding Workshop, 369-383 Pittsburgh, PA, 2001    A   Evf i m i evs k i, R  Sr ikan t, R. Agrawal, and J. Gehrke Privacy preserving mining of asso ciation rules, In Proc. Of the 8th ACM SIGKDD Intl Conference on Knowledge Discovery and Data Mining, Edmonton, Canada, July 2002 9.744400 0.000000 0.000000 9.744400 77.639999 641.540298 Tm 9.744400 0.000000 0.000000 9.744400 86.139999 616.540329 Tm TID D D 6.301605 0.000000 0.000000 6.301605 147.300003 640.160294 Tm 6.301605 0.000000 0.000000 6.301605 155.800003 615.160324 Tm 1 9.744400 0.000000 0.000000 9.744400 150.419998 641.540298 Tm 9.744400 0.000000 0.000000 9.744400 158.919998 616.540329 Tm D 6.301605 0.000000 0.000000 6.301605 180.059998 640.160294 Tm 6.301605 0.000000 0.000000 6.301605 188.559998 615.160324 Tm 2 9.744400 0.000000 0.000000 9.744400 183.240005 641.540298 Tm 9.744400 0.000000 0.000000 9.744400 191.740005 616.540329 Tm D 6.301605 0.000000 0.000000 6.301605 212.940002 640.160294 Tm 6.301605 0.000000 0.000000 6.301605 221.440002 615.160324 Tm 3 9.744400 0.000000 0.000000 9.744400 216.059998 641.540298 Tm 9.744400 0.000000 0.000000 9.744400 224.559998 616.540329 Tm D 6.301605 0.000000 0.000000 6.301605 243.539993 640.160294 Tm 6.301605 0.000000 0.000000 6.301605 252.039993 615.160324 Tm 4 9.744400 0.000000 0.000000 9.744400 246.720001 641.540298 Tm 9.744400 0.000000 0.000000 9.744400 255.220001 616.540329 Tm D 6.301605 0.000000 0.000000 6.301605 274.199997 640.160294 Tm 6.301605 0.000000 0.000000 6.301605 282.699997 615.160324 Tm 5 9.744400 0.000000 0.000000 9.744400 277.320007 641.540298 Tm 9.744400 0.000000 0.000000 9.744400 285.820007 616.540329 Tm  1.000000 0.000000 0.000000 1.000000 8.500000 -24.999954 Tm 9.744400 0.000000 0.000000 9.744400 81.240005 629.720306 Tm 9.744400 0.000000 0.000000 9.744400 89.740005 604.720337 Tm T 6.301605 0.000000 0.000000 6.301605 87.179993 628.280304 Tm 6.301605 0.000000 0.000000 6.301605 95.679993 603.280334 Tm 1 9.744400 0.000000 0.000000 9.744400 90.300003 629.720306 Tm 9.744400 0.000000 0.000000 9.744400 98.800003 604.720337 Tm 1101 1101 1101 1101 ?101 101 1.000000 0.000000 0.000000 1.000000 8.500000 -24.999954 Tm 9.744400 0.000000 0.000000 9.744400 81.240005 617.900299 Tm 9.744400 0.000000 0.000000 9.744400 89.740005 592.900330 Tm T 6.301605 0.000000 0.000000 6.301605 87.179993 616.460297 Tm 6.301605 0.000000 0.000000 6.301605 95.679993 591.460327 Tm 2 9.744400 0.000000 0.000000 9.744400 90.300003 617.900299 Tm 9.744400 0.000000 0.000000 9.744400 98.800003 592.900330 Tm  0100 0100 0100 0100 0100 0100 1.000000 0.000000 0.000000 1.000000 8.500000 -24.999954 Tm 9.744400 0.000000 0.000000 9.744400 81.240005 606.020294 Tm 9.744400 0.000000 0.000000 9.744400 89.740005 581.020325 Tm T 6.301605 0.000000 0.000000 6.301605 87.179993 604.580307 Tm 6.301605 0.000000 0.000000 6.301605 95.679993 579.580338 Tm 3 9.744400 0.000000 0.000000 9.744400 90.300003 606.020294 Tm 9.744400 0.000000 0.000000 9.744400 98.800003 581.020325 Tm  1011 1011 1011 1011 1011 1011 1.000000 0.000000 0.000000 1.000000 8.500000 -24.999954 Tm 9.744400 0.000000 0.000000 9.744400 81.240005 594.200302 Tm 9.744400 0.000000 0.000000 9.744400 89.740005 569.200333 Tm T 6.301605 0.000000 0.000000 6.301605 87.179993 592.760300 Tm 6.301605 0.000000 0.000000 6.301605 95.679993 567.760330 Tm 4 9.744400 0.000000 0.000000 9.744400 90.300003 594.200302 Tm 9.744400 0.000000 0.000000 9.744400 98.800003 569.200333 Tm 1100 1100 1100 ?100 ?100 1100 1.000000 0.000000 0.000000 1.000000 8.500000 -24.999954 Tm 9.744400 0.000000 0.000000 9.744400 81.240005 582.320297 Tm 9.744400 0.000000 0.000000 9.744400 89.740005 557.320328 Tm T 6.301605 0.000000 0.000000 6.301605 87.179993 580.940308 Tm 6.301605 0.000000 0.000000 6.301605 95.679993 555.940338 Tm 5 9.744400 0.000000 0.000000 9.744400 90.300003 582.320297 Tm 9.744400 0.000000 0.000000 9.744400 98.800003 557.320328 Tm  1101 1101 1101 1101 1101 1101 227 


    Evfim i evski Randomization in Privacy Preserving Data Mining, SIGKDD Explorations, 4\(2\ Issue 2 43-48, Dec. 2002   Alexandre Evfimievski, J ohannes Gehrke and Ramakrishnan Srikant, Limiting Privacy Breaches in Privacy Preserving Data Mining, PODS 2003, June 9-12, 2003, San Diego, CA   M  Ka nta r cioglu and C Clifton, Privacy-preserving distributed mining of association rules on horizontally partitioned data, In ACM SIGMOD Workshop on Research Issues on Data Mining and Knowledge Discovery, June 2002   J i uy ong Li, Hong S h en and Ro dne y T opor M in ing the Smallest Association Rule Set for Predictions, Proceedings of the 2001 IEEE International Conference on Data Mining, 361-368   Y. Lindell and B. Pinkas    P riva cy preserving data m i ning In CRYPTO, pages 3654, 2000   D E  O Le ary   K nowle dge Discovery as a Threat to Database Security, In G. Piatetsky-Shapiro and W. J. Frawley editors, Knowledge Discovery in Databases, 507-516, AAAI Press/ MIT Press, Menlo Park, CA, 1991    S O liveira, O  Zaiane P ri vacy Preserving Frequent Itemset Mining, Proceedings of IEEE International Conference on Data Mining, December 2002, pp. 43-54   S. Oliveira, O Za ia ne  A lgorithms for Balancing Priacy and Knowledge Discovery in Association Rule Mining Proceedings of 7 th International Database Engineering and Applications Symposium \(IDEAS 03\g, July 2003, pp 54-63    S O liveir a  O  Za i a ne P rotecting  Sens itive K now l e d g e by  Data Sanitization, Proceedings of IEEE International Conference on Data Mining, November 2003, pp. 613-616    S O liveira O   Zaiane Y  S a y g in S ecure A s s o c i a t ion R u le Sharing, Proceedings of 8 th Pacific-Asia Conference on Knowledge Discovery and Data Mining \(PAKDD04 74-85   S J. Rizvi and J  R. Harits a, Privacy-preserving association rule mining, In Proc. of the 28t h Intl Conference on Very Large Databases, August 2002   Y. Say g in, V Very kios, a nd C. Clifton, Using Unknowns to Prevent Discovery of Asso ciation Rules, SIGMOD Record 30\(4\5-54, December 2001   J  Vaidy a and C.W   Clifton Privacy preserving association rule mining in vertically partitioned data, In Proc. of the 8 th ACM SIGKDD Intl Conference on Knowledge Discovery and Data Mining, Edmonton, Canada, July 2002    V. Very kios, E  Bertino I.G. Fovino, L.P. Provenza, Y Saygin, and Y. Theodoridis,  State-of-the-art in Privacy Preserving Data Mining, SIGMOD R ecord, Vol. 33, No. 1, 50-57 March 2004   V Ve ry kios A. Elmagarm id E. Bertino, Y. Saygin, and E Dasseni,  Association Rules Hiding, IEEE Transactions on Knowledge and Data Engineering Vol. 16, No. 4, 434-447, April 2004 228 


some are best for dense type datasets Currently there is no single algorithm exist that shows global best performance on all types of datasets The main limitation of previous algorithms is that they really upon only single strategy and do no combine the best features of multiple strategies for speedup the process of itemset mining In this paper we show that combining the best features of multiple strategies into a single hybrid is more beneficial and efficient than relying upon single strategy Our different experimental results on benchmark datasets show that mining all and maximal frequent itemsets using our hybrid approach is more efficient than existing algorithms and gives global best performance 13 T Uno M Kiyomi H Arimura LCM ver 3 Collaboration of Array Bitmap and Prefix Tree for Frequent Itemset Mining In 1st Int'l Workshop on Open Source Data Mining in conjunction with SIGKDD2005 2005 14 M J Zaki and C Hsiao Charm An efficient algorithm for closed association rule mining In Technical Report 99-10 Computer Science Rensselaer Polytechnic Institute 1999 8 References 1 R Agrawal T Imielinski and A Swami Mining Association Rules between Sets of Items in Large Databases Proc ACMSIGMOD Int'l Conf Management of Data pp 207-216 May 1993 2 R Agrawal and R Srikant Fast Algorithms for Mining Association Rules Proc Int'l Conf Very Large Data Bases pp 487-499 Sept 1994 3 S Bashir A Rauf Baig HybridMiner Mining Maximal Frequent Itemsets using Hybrid Database Representation Appraoch In Proc of 10th IEEE-INMIC conference Karachi Pakistan 2005 4 D Burdick M Calimlim and J Gehrke Mafia A maximal frequent itemset algorithm for transactional databases In Proc ofICDE Conf pp 443-452 2001 5 Proc IEEE ICDM Workshop Frequent Itemset Mining Implementations B Goethals and M.J Zaki eds CEUR Workshop Proc vol 80 Nov 2003 http:HCEURWS.org/Vol-90 6 K Gouda and M J Zaki Efficiently mining maximal frequent itemsets In ICDM pp 163-170 2001 7 G Grahne and J Zhu Efficiently Using Prefix-trees in Mining Frequent Itemsets In Proc of the IEEE ICDM Workshop on Frequent Itemset Mining Implementations 2003 8 J Han J Pei and Y Yin Mining frequent patterns without candidate generation In SIGMOD pages 1-12 2000 9 J Liu Y Pan K Wang and J Han Mining frequent item sets by opportunistic projection In Proc of KDD Conf 2002 10 G Liu H Lu Y Xu and J X Yu Ascending frequency ordered prefix-tree Efficient mining of frequent patterns In DASFAA 2003 11 J Pei J Han H Lu S Nishio S Tang and D Yang HMine Hyper-structure mining of frequent patterns in large databases In Proc of ICDMConf pp 441.448 2001 12 A Pietracaprina and D Zandolin Mining Frequent Itemsets Using Patricia Tries Proc IEEE ICDM Workshop Frequent Itemset Mining Implementations CEUR Workshop Proc vol 80 Nov 2003 243 


The statement \223g_info := self_general_info;\224 within the worker\222s method 223get_self_general_info\224 can be executed after comparing labels. Note that the manager\222s method 223browse\224 cannot read the worker\222s \223work_hour\224 and \223hour_pay\224. The rationale is described in the last paragraph of section 4.4 Requirement 3 If a worker is not assigned to a manager, the manager can only read the worker\222s general information This requirement is accomplished by the method 223browse\224 of the object \223manager\224 and the labels with the association \223not_assigned\224. To get the general information of a worker not assigned to a manager, the method \223browse\224 invokes the worker\222s method \223get_self_general_info\224 using the manager\222s attribute \223others_general_info\224 as an argument. The statement \223g_info self_general_info;\224 within the worker\222s method 223get_self_general_info\224 can be executed after comparing labels Requirement 4 If a worker and a manager are friends, they can read each other\222s general information This requirement is achieved by the labels with the association \223friend\224. For example, a worker can read his manager friend\222s general information through the worker\222s method 223get_others_general_info\224, which invokes the manager\222s \223get_self_general_info\224 using the worker\222s attribute \223others_general_info\224 as an argument. After comparing the label of the worker\222s attribute \223others_general_info\224 and the manager\222s attribute \223self_general_info\224, one can see that the secure flow condition is true. The statement \223g_info := self_general_info;\224 within the manager\222s method \223get_self_general_info;\224 can be executed Requirement 5 Periodically, the company invokes foreign objects to compute the salaries and taxes of workers This requirement is fulfilled by the stubs \223stub1\224 and stub2\224 in Example 1. Please refer to the description in section 4.3. Moreover, the three rules mentioned in section 3.2 prevent the foreign objects from becoming Trojan horses  7. Evaluation  We implemented a prototype system to evaluate the model. The system uses reusable software repository to simulate foreign object control. Moreover, it uses the language shown in Example 1 to write programs A program written in the language is first pre-processed to produce a program without labels and MLs. The program produced by the preprocessor is conceptually composed of two parts. One is the program before labeling and the other a security monitor The latter checks information flows of the former using Algorithm 1 during program execution Currently, the security monitor checks security dynamically, which contradicts the proposal of static checking [1, 12, 24  N e ve r t he l e ss d yna mi c c he c ki n g  cannot be totally avoided because objects and AGs may be dynamically instantiated or removed during program execution To evaluate the model, we used the example described in section 2 as an assignment to students of different grades and experiences. The students are required to develop a program, namely program a  without the proposed model embedded and another program, namely program b with the model embedded. We then collected and averaged the following metrics data: 1\ LOC \(lines of code\f programs a and b, 2\ecution time of programs a and b, and 3\numbers of non-secure statements found in program b. The collected data showed that the averaged LOC and execution time of program b are respectively 3.2 and 3.8 times those of program a Nevertheless, the data also showed that 2.3 non-secure information flows \(per 100 LOC\n average are identified from program b. Although the runtime overhead seems high, we still think that the model is valuable because of the ability to identify non-secure statements. Nevertheless, reducing the overhead should be an important future work  8. Related work  The simplest information flow control approach is DAC. Since DAC fails to avoid Trojan horses, the multilevel security approach was proposed [6-9  The approach is generally categorized as MAC MAC was criticized as too restricted [5 T o lo o s en  the restriction, quite a few approaches have been proposed. Below we survey some researches The model proposed in t rol s t h e  information flows in object-oriented systems. It uses ACL of objects to compute the ACL of executions. A message filter is used to filter out possibly non-secure information flows. Since the computation of an execution\222s ACL takes information propagation into consideration, no Trojan horses will result Moreover, interactions among executions are categorized into five modes including synchronized unrestricted, synchronous restricted, asynchronous deferred reply unrestricted, and deferred reply restricted. Different modes result in different ACLs Proceedings of t he 36th Ha waii International Conf erence on S y st e m Sciences \(HICSS\22203 0 76 95 18 745/0 3 1 7.00 251 20 02  I E EE 


which loosens the restriction of MAC. More flexibility is added to the model by allowing exceptions during or after method execution [10-11 The purpose-oriented model [21-22 pro pos es  that invoking a method may be allowed for some methods but disallowed for other methods, even when the invokers belong to the same object. This consideration is correct, because the security levels of methods in an object may be different Different methods can thus access information in different security levels The decentralized label approach [1-4 m a rk s t h e  security levels of variables using labels. A label is composed of one or more policies, which should be simultaneously obeyed. A policy in a label is composed of an owner and zero or more readers that are allowed to access the data. When computation are applied to data, join operation is used to compute the label of the result data. This avoids Trojan horses Another feature proposed by this approach is that declassification \(downgrading of security level provided. This allows non-sensitive data, which are in high security level, to be accessed by low security level processes. The model also takes write access control into consideration [4 rren t l y t h e m o d e l  has been used to develop a programming language Jflow [1 ad d itio n   th e m o d e l h a s b e e n  u s ed i n a  distributed system with untrusted hosts through secure program partitioning [30  Role-based access control models [19, 27, 33  define the roles a subject can play. A role is a collection of permissions \(i.e., access rights  When a subject plays a role, it possesses the rights belonging to the role. A subject can play multiple roles and even change role during a session Inheritance and other relationships can be established among roles [27 t o s t ru ct u re t h e m Moreov er  constraints, such as two specific roles should be mutually exclusive, can be attached to roles. The advantage of role-based access control is that subjects can change roles dynamically, which facilitates obeying the \223need-to-know\224 principle. It seems that the role-based models operate well in an application that protects not too many resources because roles should be defined before the application\222s execution. In case that many resources should be protected \(such as every variable in a program should be protected\ining roles becomes tedious and the access control may become imprecise From the survey, we identified many necessary features for controlling information flows in object-oriented systems such as Trojan horse prevention, declassification, purpose-oriented method invocation, and so on. In fact, our model offers those features, although we do not present them in this paper. What we present in this paper are the control of information flows among objects and foreign objects. According to our survey, no model offers the control well  9. Conclusions  This paper proposes a model to control information flows among objects. The model uses associations and method limitations \(ML\ to control information flows among objects. Information flows are controlled by attaching labels to variables. Trojan horses are avoided by join operations. Within an application, every variable and literal is associated with one or more labels. If a variable is associated with multiple labels, each label enforces the security policy of an association. To check the security of an information flow, labels are compared. An information flow is secure if the comparison causes the secure flow condition true In addition to controlling objects developed by programmers, the model also controls foreign objects which are pre-existing objects for reused. Since the details of a foreign object are unknown, our model only prevents foreign objects from becoming Trojan horses. We use the \223Suppression rule\224, \223No ML rule\224 and \223Stuck to rules\224 to control foreign objects We implemented a prototype system to evaluate the model. From the data collected, we found that the model does facilitate identifying non-secure information flows. We thus believe that the model is useful in spite of runtime overhead  Acknowledgement  This research is sponsored by the National Science Council in Taiwan under Grant NSC91-2213-E-259-006  References  1  A  C. My e r s 223 J Flow  P r a c tic a l Mostly S ta tic  Information Flow Control\224 Proc. 26\222th ACM Symp Principles of Programming Language pp. 228-241 1999  A  C M y ers an d B L i sko v  223A De cen t r al i zed M o d e l f o r Information Flow Control\224 Proc. 17\222th ACM Symp Operating Systems Principles pp. 129-142, 1997 3 A  My e r s a nd B  L i s k ov 223 C om ple t e  Sa f e I n f o r m a tion  Flow with Decentralized Labels\224 Proc. 14\222th IEEE Symp Security and Privacy pp. 186-197, 1998 4 A My e r s a nd B. L i sk ov 223 P rote c ting  P r iv a c y using the  Proceedings of t he 36th Ha waii International Conf erence on S y st e m Sciences \(HICSS\22203 0 76 95 18 745/0 3 1 7.00 251 20 02  I E EE 


Decentralized Label Model\224 ACM Trans. Software Eng Methodology vol. 9, no. 4, pp. 410-442, 2000  C J M c Co ll u m  J R M e ssin g  an d L  No tar g iaco m o   223Beyond the Pale of MAC and DAC - Defining New Forms of Access Control\224 Proc. 6\222th IEEE Symp Security and Privacy pp. 190-200, 1990  D E  Bel l a n d L  J L a P a d u l a 223S ecu re Co m p u t er  Systems: Unified Exposition and Multics Interpretation\224 technique report, Mitre Corp Mar. 1976 http://csrc.nist.gov/publications/history/bell76.pdf 7 D  E  D e nn ing  223 A L a ttic e Mode l of Se c u r e I n f o r m a tion Flow\224 Comm. ACM vol. 19, no. 5, pp. 236-243, 1976 8 D  E  D e n n ing a n d P  J  D e nning 223 C e r tif ic a tion of  Program for Secure Information Flow\224 Comm. ACM vol 20, no. 7, pp. 504-513, 1977  D  F  C  Brew er  an d M  J  Nash  223T h e Ch i n ese W a l l  Security Policy\224 Proc. 5\222th IEEE Symp. Security and Privacy pp. 206-214, 1989 10 E Ferrari P   Sam a r a ti, E. Bertin o  an d S. Jajo d i a  223Providing Flexibility in Information Control for Object-Oriented Systems\224 Proc. 13\222th IEEE Symp Security and Privacy pp. 130-140, 1997 11 E B e r tin o Sa br i n a  de C a pita ni di V i m e r c a ti, E  Ferrari, and P. Samarati, \223Exception-based Information Flow Control in Object-Oriented Systems\224 ACM Trans Information System Security vol. 1, no. 1, pp. 26-65 1998 1  F  B S chu ei d er  223E n f o r ceab l e S ecu ri t y P o l i cy 224  ACM Trans. Information System Security vol. 3, no. 1, pp 30-50, 2000 1 G  B o o c h  Object-Oriented Analysis and Design with Application second edition, The Benjamin/Cummings Publishing Company, 1994 1 G  S m i t h an d D  V o l p an o 223S ecu re In f o r m at i o n F l o w  in a Multi-Thread Imperative Language\224 Proc. 25th ACM Symp. on Principles of Programming Languages  pp. 355-364, 1998 15 H M De ite l a n d a n d P  J D e ite l C: How to Program  Prentice-Hall, 2001 16 O M G  223 T he C o m m on O bje c t R e que s t B r ok e r   Architecture and Specification\224 http://doc.ece.uci.edu/CORBA 17 J  A g a t 223 T r a nsf o r m ing out  T i m i ng Le ak s 224  Proc. 27th ACM Symp. on Principles of Programming Languages  pp. 40-53, 2000 1 J Ru m b au gh  M  Bl ah a  W  P r em erl a n i  F  E d d y  an d  W Lo r en s en   Object-Oriented Modeling and Design  Prentice-Hall, 1991 19 K  I z a k i, K  T a na k a a nd M  T a k i z a w a 223 I nf or m a tion Flow Control in Role-Based Model for Distributed Objects\224 Proc. 8\222th International Conf. Parallel and Distributed Systems pp. 363-370, 2001 20 M. D. Mc Ilr o y a nd J A  R e e d s, \223 M ultile v e l Se c u rity  in the UNIX Tradition\224 Software - Practice and Experience vol. 22, no. 8, pp. 673-694, 1992 2  M  Y asu d a T  T ach i k a w a an d M  T aki za w a  223Information Flow in a Purpose-Oriented Access Control Model\224 Proc. 1997 International Conf. Parallel and Distributed Systems pp. 244-249, 1997 22 M. Y a s uda   T   T a c h ik aw a, a nd M  T a k i z a w a  223A  Purpose-Oriented Access Control Model\224 Proc. 12\222th International Conf. Information Networking pp. 168-173 1998 23  P  Sa m a ra ti, E. Be rtino   A  Cia m pic h e tti, a n d S  Jajodia, \223Information Flow Control in Object-Oriented Systems\224 IEEE Trans. Knowledge Data Eng vol. 9, no 4, pp.524-538, Jul./Aug. 1997 24 R  F o c a r di a n d R  G o r r i e r i, \223 T he C o m pos itiona l  Security Checker: A Tool for the Verification of Information Flow Security Properties\224 IEEE Trans Software Eng vol. 23, no. 9, pp. 550-571, 1997 2 G r au b a rt  223On t h e Need f o r a T h i r d  F o rm o f A cce ss  Control\224 Proc. 12\222th Nat\222l Computer Security Conf pp 296-303, 1989 26 R  S  Sa nd hu 223 L a ttic e B a sed A c c e s s C ontr o l M ode ls 224   IEEE Computer vol. 26, no. 11, pp. 9-19, Nov. 1993 27 R  S  S a n d h u  E  J  C o y n e  H  L  F e i n s t e i n  a n d C  E   Youman, \223Role-Based Access Control Models\224 IEEE Computer vol. 29, no. 2, pp. 38-47, 1996 2  S  Jaj o d i a and B  Ko gan  223In t egrat i n g an  Object-Oriented Data Model with Multilevel Security\224 Proc. 6\222th IEEE Symp. Security and Privacy pp. 76-85 1990 29  S. N Fo ley  223A Mo d e l f o r S e cu re In f o rmatio n Fl o w 224  Proc. 5\222th IEEE Symp. Security and Privacy pp. 248-258 1989 30  S. Z d a n c e w ic L Zhe n g N N y s t ro m a nd A C. My e r s   223Untrusted Hosts and Confidentiality: Secure Program Partitioning\224 Proc. 18th ACM Symp. Operating Systems Principles 2001 3 T   T ach i k a w a M  Y asu d a an d M   T aki za w a  223 A  Purposed-Oriented Access Control Model in Object-Based Systems\224 Trans. Information Processing Society of Japan vol. 38, no. 11, pp. 2362-2369, 1997 32 V  V a ra d h a r a j a n a nd S Bla c k 223 A Multile v e l Se c u rity  Model for a Distributed Object-Oriented System\224 Proc 6\222th IEEE Symp. Security and Privacy pp. 68-78, 1990 3 Z   T a ri an d S  W  Ch an 223A Ro l e Bas ed Acces s  Control for Intranet Security\224 IEEE Internet Computing  vol. 1, no. 5, pp. 24-34, 1997 Proceedings of t he 36th Ha waii International Conf erence on S y st e m Sciences \(HICSS\22203 0 76 95 18 745/0 3 1 7.00 251 20 02  I E EE 


absolute values. The results can vary on other computers. But it can be guaranteed that performance ratio of the algorithms will remain the same After making the comparisons with sample data, we came to the conclusion that PD algorithm performs significantly better than the other two especially with larger datasets. PD outperforms DCP and PIP regarding running time. On the other hand, since PD reduces the dataset, mining time does not necessary increase as the number of transactions increases and experiments reveals that PD has better scalability than DCP and PIP. So, PD has the ability to handle the large data mine in practical field like market basket analysis and medical report documents mining 5. References 1] R. Agrawal and R. Srikant, "Fast algoritlnns for mining association rules", VLDB'94, pp. 487-499 2] R. J. Bayardo, "Efficiently mining long patterns from databases", SIGMOD'98, pp.85-93 3] J. Pei, J. Han, and R. Mao, "CLOSET: An Efficient Algorithm for Mining Frequent Closed Itemsets \(PDF Proc. 2000 ACM-SIGMOD International Workshop on Data Mining and Knowledge Discovery, Dallas, TX, May 2000 4] Qinghua Zou, Henry Chiu, Wesley Chu, David Johnson, "Using Pattern Decomposition\( PD Finding All Frequent Patterns in Large Datasets", Computer Science Department University of California - Los Angeles 5] J. Han, J. Pei, and Y. Yin, "Mining Frequent Patterns without Candidate Generation \(PDF  SIGMOD International Con! on Management of Data SIGMOD'OOj, Dallas, TX, May 2000 6] S. Orlando, P. Palmerini, and R. Perego, "The DCP algoritlnn for Frequent Set Counting", Technical Report CS2001-7, Dip. di Informatica, Universita di Venezia 2001.Available at http://www.dsi.unive.itl?orlando/TR017.pdf 7] MD. Mamun-Or-Rashid, MD.Rezaul Karim, "Predictive item pruning FP-tree algoritlnn", The Dhaka University  Journal of Science, VOL. 52, NO. 1, October,2003, pp. 3946 8] Park, J. S., Chen, M.-S., and Yu, P. S, "An Effective Hash Based Algoritlnn for Mining Association Rules", Proc ofthe 1995 ACM-SIGMOD Con! on Management of Data 175-186 9] Brin, S., Motwani, R., Ullman, J., and Tsur, S, "Dynamic Itemset Counting and Implication Rules for Market Basket Data", In Proc. of the 1997 ACM-SIGMOD Conf On Management of Data, 255-264 10] Zaki, M. J., Parthasarathy, S., Ogihara, M., and Li, W New Algoritlnns for Fast Discovery of Association Rules In Proc. of the Third Int'l Con! on Knowledge Discovery in Databases and Data Mining, 283-286 11] Lin, D.-I and Kedem, Z. M., "Pincer-Search: A New Algoritlnn for Discovering the Maximum Frequent Set", In Proc. of the Sixth European Conf on Extending DatabaseTechnology, 1998 12] R. Ramakrishnan, Database Management Systems University of Wisconsin, Madison, WI, USA; International Edition 1998 pre></body></html 


tors such as union, di?erence and intersection are de?ned for pairs of classes of the same pattern type Renaming. Similarly to the relational context, we consider a renaming operator ? that takes a class and a renaming function and changes the names of the pattern attributes according to the speci?ed function Projection. The projection operator allows one to reduce the structure and the measures of the input patterns by projecting out some components. The new expression is obtained by projecting the formula de?ning the expression over the remaining attributes [12 Note that no projection is de?ned over the data source since in this case the structure and the measures would have to be recomputed Let c be a class of pattern type pt. Let ls be a non empty list of attributes appearing in pt.Structure and lm a list of attributes appearing in pt.Measure. Then the projection operator is de?ned as follows ls,lm c id s m f p ? c, p = \(pid, s, d,m, f In the previous de?nition, id ing new pids for patterns, ?mlm\(m projection of the measure component and ?sls\(s ned as follows: \(i s usual relational projection; \(ii sls\(s and removing the rest from set elements. The last component ?ls?lm\(f computed in certain cases, when the theory over which the formula is constructed admits projection. This happens for example for the polynomial constraint theory 12 Selection. The selection operator allows one to select the patterns belonging to one class that satisfy a certain predicate, involving any possible pattern component, chosen among the ones presented in Section 5.1.1 Let c be a class of pattern type pt. Let pr be a predicate. Then, the selection operator is de?ned as follows pr\(c p Join. The join operation provides a way to combine patterns belonging to two di?erent classes according to a join predicate and a composition function speci?ed by the user Proceedings of the 16th International Conference on Scientific and Statistical Database  Management \(SSDBM  04 1099-3371/04 $ 20.00  2004 IEEE Let c1 and c2 be two classes over two pattern types pt1 and pt2. A join predicate F is any predicate de?ned over a component of patterns in c1 and a component of patterns in c2. A composition function c pattern types pt1 and pt2 is a 4-tuple of functions c cStructureSchema, cDataSchema, cMeasureSchema, cFormula one for each pattern component. For example, function cStructureSchema takes as input two structure values of the right type and returns a new structure value, for a possible new pattern type, generated by the join. Functions for the other pattern components are similarly de?ned. Given two patterns p1 = \(pid1, s1, d1,m1, f1 p2 = \(pid2, s2, d2,m2, f2 p1, p2 ned as the pattern p with the following components Structure : cStructureSchema\(s1, s2 Data : cDataSchema\(d1, d2 Measure : cMeasureSchema\(m1,m2 Formula : cformula\(f1, f2 The join of c1 and c2 with respect to the join predicate F and the composition function c, denoted by c 1   F  c  c 2   i s  n o w  d e  n e d  a s  f o l l o w s    F  c  c 2     c  p 1   p 2   p 1    c 1  p 2    c 2  F   p 1   p 2     t r u e   5.1.3. Cross-over database operators OCD Drill-Through. The drill-through operator allows one to 


Drill-Through. The drill-through operator allows one to navigate from the pattern layer to the raw data layer Thus it takes as input a pattern class and it returns a raw data set. More formally, let c be a class of pattern type pt and let d be an instance of the data schema ds of pt. Then, the drill-through operator is denoted by c c Data-covering. Given a pattern p and a dataset D sometimes it is important to determine whether the pattern represents it or not. In other words, we wish to determine the subset S of D represented by p \(p can also be selected by some query the formula as a query on the dataset. Let p be a pattern, possibly selected by using query language operators, and D a dataset with schema \(a1, ..., an ible with the source schema of p. The data-covering operator, denoted by ?d\(p,D responding to all tuples in D represented by p. More formally d\(p,D t.a1, ..., t.an In the previous expression, t.ai denotes a speci?c component of tuple t belonging to D and p.formula\(t.a1, ..., t.an instantiated by replacing each variable corresponding to a pattern data component with values of the considered tuple t Note that, since the drill-though operator uses the intermediate mapping and the data covering operator uses the formula, the covering ?\(p,D D = ?\(p not be equal to D. This is due to the approximating nature of the pattern formula 5.1.4. Cross-over pattern base operators OCP Pattern-covering. Sometimes it can be useful to have an operator that, given a class of patterns and a dataset, returns all patterns in the class representing that dataset \(a sort of inverse data-covering operation Let c be a pattern class and D a dataset with schema a1, ..., an pattern type. The pattern-covering operator, denoted as ?p\(c,D all patterns in c representing D. More formally p\(c,D t.a1, ..., t.an true Note that: ?p\(c,D p,D 6. Related Work Although signi?cant e?ort has been invested in extending database models to deal with patterns, no coherent approach has been proposed and convincingly implemented for a generic model There exist several standardization e?orts for modeling patterns, like the Predictive Model Markup Language \(PMML  eling approach, the ISO SQL/MM standard [2], which is SQL-based, and the Common Warehouse Model CWM  ing e?ort. Also, the Java Data Mining API \(JDMAPI 3] addresses the need for a language-based management of patterns. Although these approaches try to represent a wide range of data mining result, the theoretical background of these frameworks is not clear. Most importantly, though, they do not provide a generic model capable of handling arbitrary cases of pattern types; on the contrary only a given list of prede?ned pattern types is supported To our knowledge, research has not dealt with the issue of pattern management per se, but, at best, with peripheral proximate problems. For example, the paper by Ganti et. al. [9] deals with the measurement 


per by Ganti et. al. [9] deals with the measurement of similarity \(or deviation, in the authors  vocabulary between decision trees, frequent itemsets and clusters Although this is already a powerful approach, it is not generic enough for our purpose. The most relevant research e?ort in the literature, concerning pattern management is found in the ?eld of inductive databases Proceedings of the 16th International Conference on Scientific and Statistical Database  Management \(SSDBM  04 1099-3371/04 $ 20.00  2004 IEEE meant as databases that, in addition to data, also contain patterns [10], [7]. Our approach di?ers from the inductive database one mainly in two ways. Firstly, while only association rules and string patterns are usually considered there and no attempt is made towards a general pattern model, in our approach no prede?ned pattern types are considered and the main focus lies in devising a general and extensible model for patterns Secondly, di?erently from [10], we claim that the peculiarities of patterns in terms of structure and behavior together with the characteristic of the expected workload on them, call for a logical separation between the database and the pattern-base in order to ensure e?cient handling of both raw data and patterns through dedicated management systems Finally, we remark that even if some languages have been proposed for pattern generation and retrieval 14, 11], they mainly deal with speci?c types of patterns \(in general, association rules sider the more general problem of de?ning safe and su?ciently expressive language for querying heterogeneous patterns 7. Conclusions and Future Work In this paper we have dealt with the issue of modelling and managing patterns in a database-like setting Our approach is enabled through a Pattern-Base Management System, enabling the storage, querying and management of interesting abstractions of data which we call patterns. In this paper, we have \(a de?ned the logical foundations for the global setting of PBMS management through a model that covers data patterns and intermediate mappings and \(b language issues for PBMS management. To this end we presented a pattern speci?cation language for pattern management along with safety constraints for its usage and introduced queries and query operators and identi?ed interesting query classes Several research issues remain open. First, it is an interesting topic to incorporate the notion of type and class hierarchies in the model [15]. Second, we have intentionally avoided a deep discussion of statistical measures in this paper: it is more than a trivial task to de?ne a generic ontology of statistical measures for any kind of patterns out of the various methodologies that exist \(general probabilities Dempster-Schafer, Bayesian Networks, etc. [16 nally, pattern-base management is not a mature technology: as a recent survey shows [6], it is quite cumbersome to leverage their functionality through objectrelational technology and therefore, their design and engineering is an interesting topic of research References 1] Common Warehouse Metamodel \(CWM http://www.omg.org/cwm, 2001 2] ISO SQL/MM Part 6. http://www.sql99.org/SC32/WG4/Progression Documents/FCD/fcddatamining-2001-05.pdf, 2001 3] Java Data Mining API http://www.jcp.org/jsr/detail/73.prt, 2003 4] Predictive Model Markup Language \(PMML http://www.dmg.org 


http://www.dmg.org pmmlspecs v2/pmml v2 0.html, 2003 5] S. Abiteboul and C. Beeri. The power of languages for the manipulation of complex values. VLDB Journal 4\(4  794, 1995 6] B. Catania, A. Maddalena, E. Bertino, I. Duci, and Y.Theodoridis. Towards abenchmark for patternbases http://dke.cti.gr/panda/index.htm, 2003 7] L. De Raedt. A perspective on inductive databases SIGKDD Explorations, 4\(2  77, 2002 8] M. Escobar-Molano, R. Hull, and D. Jacobs. Safety and translation of calculus queries with scalar functions. In Proceedings of PODS, pages 253  264. ACMPress, 1993 9] V. Ganti, R. Ramakrishnan, J. Gehrke, andW.-Y. Loh A framework for measuring distances in data characteristics. PODS, 1999 10] T. Imielinski and H. Mannila. A database perspective on knowledge discovery. Communications of the ACM 39\(11  64, 1996 11] T. Imielinski and A. Virmani. MSQL: A Query Language for Database Mining. Data Mining and Knowledge Discovery, 2\(4  408, 1999 12] P. Kanellakis, G. Kuper, and P. Revesz. Constraint QueryLanguages. Journal of Computer and SystemSciences, 51\(1  52, 1995 13] P. Lyman and H. R. Varian. How much information http://www.sims.berkeley.edu/how-much-info, 2000 14] R.Meo, G. Psaila, and S. Ceri. An Extension to SQL for Mining Association Rules. Data Mining and Knowledge DiscoveryM, 2\(2  224, 1999 15] S. Rizzi, E. Bertino, B. Catania, M. Golfarelli M. Halkidi, M. Terrovitis, P. Vassiliadis, M. Vazirgiannis, and E. Vrachnos. Towards a logical model for patterns. In Proceedings of ER 2003, 2003 16] A. Siblerschatz and A. Tuzhillin. What makes patterns interesting in knowledge discovery systems. IEEE TKDE, 8\(6  974, 1996 17] D. Suciu. Domain-independent queries on databases with external functions. In Proceedings ICDT, volume 893, pages 177  190, 1995 18] M.Terrovitis, P.Vassiliadis, S. Skadopoulos, E. Bertino B. Catania, and A. Maddalena. Modeling and language support for the management of patternbases. Technical Report TR-2004-2, National Technical University of Athens, 2004. Available at http://www.dblab.ece.ntua.gr/pubs Proceedings of the 16th International Conference on Scientific and Statistical Database  Management \(SSDBM  04 1099-3371/04 $ 20.00  2004 IEEE pre></body></html 


The reason of the hiding failure of SWA is the same in Fig.8 Notice the result at x = 0.7646 in Fig.14, because the hiding failure is occurred at the seeds of the sensitive patterns, a high weakness is produced As shown in Fig.15 and Fig.16, the misses cost and dissimil arity of our work decreases as RL2 increases. This is because the larger RL2 is, the less effect on non-sensitive patterns. Also weakness and dissimilarity of SWA are independent of RL2 5. Conclusion In the paper, a novel method improving the balance between sensitive knowledge protecting and discovery on frequent patte rns has been proposed. By setting entries of a sanitization matrix to appropriate values and multiplying the original database by the matrix with some probability policies, a sanitized database is gotten. Moreover, it can avoid F-I Attack absolutely when the confidence level given by users approximates to 1. The experimental results revealed that although misses cost and dissimilarity between the original and sanitized database of our process are little more than SWA, ours provide more safely protection than SWA. Unlike SWA, our sanitization process could not suffer from F-I Attack and the probability policies in our approach also take the minimum support into account, the users only need to decide the confidence level which affects the degree of patterns hiding 6. Reference 1] M. Atallah, E. Bertino, A. Elmagarmid, M. Ibrahim and V. Verykios Disclosure Limitation of Sensitive Rules", Proc. of IEEE Knowledge and Data Engineering Exchange Workshop 1999 2] R. Agrawal and R. Srikant. Fast algorithms for mining association rules. VLDB, Santiago, Chile, 1994 3] R. Agrawal and R. Srikant. Privacy preserving data mining. In ACM SIGMOD, Dallas, Texas, May 2000 4] E. Dasseni, V. Verykios, A. Elmagarmid and E. Bertino, Hiding Association Rules by Using Confidence and Support", Proc. of 4th Intl Information Hiding Workshop \(IHW 5] A. Evfimievski, J. Gehrke, and R. Srikant. Limiting Privacy Breac hed in privacy preserving data mining. SIGMOD/PODS, 2003 6] A. Evfimievski, R. Srikant, R. Agrawal, and J. Gehrke. Privacy preserving mining of association rules. KDD 2002 7] M. Kantarcioglu and C. Clifton. Privacy-preserving distributed mining of association rules on horizontally partitioned data. In ACM SIGMOD Workshop on Research Issues on Data Mining and Knowledge Discovery, June 2002 8] Guanling Lee, Chien-Yu Chang and Arbee L.P Chen. Hiding sensitive patterns in association rules mining. The 28th Annual International Computer Software and Applications Conference 9] Y. Lindell and B. Pinkas. Privacy Preserving Data mining. In CRYPTO, pages 36-54, 2000 10] S. R. M. Oliveira and O. R. Za  ane. Privacy Preserving Frequent Itemset Mining. In Proc. of IEEE ICDM  02 Workshop on Privacy Security, and Data Mining 11] S. R. M. Oliveira and O. R. Za  ane. Algorithms for Balancing Priv acy and Knowledge Discovery in Association Rule Mining. IDEAS  03 12] S. R. M. Oliveira and O. R. Za  ane. Protecting Sensitive Knowledge By Data Sanitization, ICDM  03 13] S. R. M. Oliveira, O. R. Za  ane and Y  cel Saygin. Secure Association Rule Sharing, PAKDD-04 14] Benny Pinks. Cryptographic Techniques For Privacy-Preserving D ata Mining. ACM SIGKDD Explorations Newsletter Vol. 4, Is. 2, 2002 15] S. J. Rizvi and J. R. Haritsa. Maintaining data privacy in association rule mining. VLDB, 2002 16] J. Vaidya and C. W. Clifton. Privacy preserving association rule mining in vertically partitioned data. KDD2002 17] Verykios, V.S.; Elmagarmid, A.K.; Bertino, E.; Saygin, Y.; Dasseni E. Association rule hiding. IEEE Transactions On Knowledge And Data Engineering, Vol. 16, No. 4, April 2004 Proceedings of the 29th Annual International Computer Software and Applications Conference  COMPSAC  05 0730-3157/05 $20.00  2005 IEEE pre></body></html 


pre></body></html 


Batt Power Batt Type Stabilization Type Propulsion Mechanism  of Solar Panels  of Solar Cells Manufacturing Qty Satellites in Constellation On-Orbit Spares Channels Number of Bands Data Storage Processing Power Source type Block Name Thermal Control Material Type Level of Technology Known Inheritance Propulsion station keeping Number of Axes Ground Based Spares Pointing Accuracy APPENDIX C EXISTING MODELS Numerous models are today in use for estimating spacecraft cost Two of the most common are the NASA/Air Force Cost Model and the Aerospace Small Satellite Cost Model Here is a description of the NAFCOM model The NASA/Air Force Cost Model NAFCOM is a parametric estimating toolfor space hardware It is based on historical NASA and Air Force space projects and is primarily used in the very early phases of a development project NAFCOM can be used at the subsystem or component levels The database currently includes 122 missions including 76 unmanned earth orbiting 24 unmanned planetary 11 launch vehicles 8 manned 3 engines It uses parametric relationships to estimate subsystem or component level costs for any aerospace hardware including earth orbital spacecraft manned spacecraft launch vehicle upper stages liquid rocket engines scientific instruments or planetary spacecraft 7 And for the Aerospace Small Satellite Cost Model SSCM employs a parametric methodology for estimation of program cost and is best suited to the early conceptual development phase of a spacecraft program during which time the design is likely to be less mature and when cost and performance trades can be easily performed SSCM consists of a collection of cost-estimating relationships or CERs which estimate the costs of developing andproducing a spacecraft system with the following subsystems  Attitude Determination and Control Subsystem ADCS  Propulsion  Power  Telemetry Tracking  Command TT&C  Command  Data Handling C&DH  Structure  Thermal CERs were also developed for integration assembly and test IA&T program management PM and systems engineering SE and launch and orbital operations support LOOS Individual subsystem cost estimates are statistically rolled up to yield a cost-risk distribution which provides the estimator with a range of cost estimates andpercentiles 8 The SSCM was calibrated from over 100 post-1990 Earth-orbiting andplanetary missions REFERENCES 1 Lack of Disciplined Cost-Estimating Processes Hinders Effective Program Management GAO study 04-642 2 Jilla Cyrus D and Miller David W Satellite Design Past Present and Future International Journal of Small Satellite Engineering 12 February 1997 3 Bearden David A A Complexity Based Risk Assessment of Low-Cost Planetary Missions:When Is A Mission Too Fast and Too Cheap Fourth IAA International Conference On Low-Cost Planetary Missions JHU/APL MAY 2-5 2000 4 Kellogg Mahr and Lobbia An Analogy-based Method for Estimating the Costs of Spacecraft IEEEAC paper 1371 Version 4 5 Hoeting Jennifer A Methodology for Bayesian Model Averaging An Update f 6]btp/ewiieiao iiAaos 7 Keith Smith NASA/Air Force Cost Model Science Applications International Corporation 8 18 


BIOGRAPHIES Lee Fischman served as Principle Investigator for this project Lee is Senior Director of Development at Galorath Incorporated where he directs much of the new product development and research at the firm He developed SEER for Software  Hardware Integrations with Microsoft Project the Comparison Sizing tool COTS Software model in addition to various data mining information extraction and expert systems Previously he was a software designerlprogrammer in the New York financial industry Lee earned a BA from the University of Chicago and an MA from UCLA both in economics Mike Kimel carried out statistical work on the project Mike is an Economist for Galorath Inc in addition to maintaining his own quantitative consulting practice He has also taught Economics and Advanced Statistics at the Graziadio School of Business and Management at Pepperdine University run the Competitive Strategy group for a Fortune 500 Telecom Company and worked as a Consultant at PriceWaterhouse LLC now PriceWaterhouse-Coopers He earned a Ph.D in Economicsfrom UCLA Troy Masters programmed analytic methods and is integrating the Far Out model into its parent product SEER for Hardware previously SEER-H Troy is a Software Engineer with Galorath Incorporated where he has been the primary developer for a range ofproducts He earned a BS in computer science from UCLA David J Pine was our subject matter expert helping us assemble data and gain insight into technical trends Dave is retired after a 34-year career with the National Aeronautics and Space Administration NASA currently is a consultant to various government and industry entities While at NASA his organizations in the Office of the Chief Financial Officer and later at the IPAO at Langley Research Center were responsible for the conduct of major NASA program analyses and evaluations for the NASA Administrator and Deputy Administrator From early 1988 through the end of 1990 he was the Deputy Program Manager for the Hubble Space Telescope Program specifically responsible for the telescope operations and science support aspects of the program He earned a BS in Aerospace Engineering from the Polytechnic Institute of Brooklyn and a Masters of Engineering Administration from the George Washington University 19 


  20 Angeles, where he also received a B.S. in Applied Mathematics  Eric Fetzer is a Senior Member of the Technical Staff at the Jet Propulsion Laboratory, Pasadena, California specializing in satellite observations of the atmosphere.  His scientific interests include planetary boundary layer processes, tropical phenomena, upper tropospheric variability, and climatologies of temperature, water vapor and clouds.  His technical interests include analysis of large data sets, and of multi-sensor observations. He has over 20 peer-reviewed publications and given numerous scientific presentations, public lectures and media interviews about climate science. Eric received a B.A. in Physics from the University of California Berkeley, and a Ph.D. in Astrophysical, Planetary and Atmospheric Sciences from the University of Colorado, Boulder   Amy Braverman is a Senior Statistician at the Jet Propulsion Laboratory, California Institute of Technology She holds a B.A. in Economics from Swarthmore College an M.A. in Mathematics from UCLA, and a Ph.D. in Statistics also from UCLA. Prior to her current position in JPL's Science Data Understanding Group, she was a Caltech Post-doctoral Scholar at the Jet Propulsion Laboratory, and a Scientist in the Flight Sciences Experiments Section of the Science Division. Dr Braverman conducts research on information-theoretic methods for the analysis of massive data sets and streams statistical data fusion, high-dimensional data analysis, and statistical analysis for climate model evaluation and diagnosis. She has published in both the statistics and geoscience literature, and is active in both communities She is a member of the Multi-angle Imaging SpectroRadiometer Science Team, and serves as a member of the Atmospheric Infrared Sounder Science Integration Team. Her responsibilities on both missions include designing data reduction algorithms for massive, remote sensing data sets. Dr. Braverman also holds an appointment in the Department of Statistics at UCLA as Adjunct Associate Professor, and is active in UCLA\222s Center for Environmental Statistics. She is member of the Committee on Applied and Theoretical Statistics of the US National Academy of Science. She has refereed for the Journal of the American Statistical Association, the Journal of Computational and Gr aphical Statistics, IEEE Transactions on Geoscience and Remote Sensing, and the Journal of Applied Meteorology and Climatology Seungwon Lee is a senior member of the High Capability Computing and Modeling Group at Jet Propulsion Laboratory. She is conducti ng research on comet gas dynamics, nonlinear dynamics control, climate model parameterization, Earth science data analysis, parallel computing, and advanced numerical algorithms. She received her Ph.D in Physics fr om the Ohio State University and her M.S. and B.S. in Physics from the Seoul National University, Korea  Matthew Henderson is software engineer in the High Capability Computing and Mode ling group at JPL. His current work includes Web Services and Instrument Data Level 2 subsetting. He received a B.S. Computer Science from CSU Pomona, and is currently pursuing M.S Computer Science  Steven J. Lewis is a member of the Information System and Computer Science staff member at the Jet Propulsion Laboratory.  He received a BS in Mathematics from the University of California, Los Angeles in June 2001, and the MS and Ph.D. Degree from Claremont Graduate University in May 2004 and May 2007, respectively.  He worked as a post doctoral fellow at Keck Graduate Institute from June 2007 until he joined JPL in March of 2008.  During his graduate and post doctoral work, his studies focused on applications of Bayesian methods to hidden Markov models with particular interest and application to protein sequencing.  His work at JPL has focused on integrating web services into various programming platforms for the purposes of accessing NASA satellite data, as well as developing object tracking so ftware and contributing to image enhancement and restoration efforts Van Dang is a member of the Science Data Understanding Group at the Jet Propulsion Laboratory. She was responsible for the NEWS Level 2 processing that generated the formal merged Level 2 data from multiple A-Train instruments  Manuel de la Torre is a Physicist from the Universidad Complutense at Madrid \(Spain\. After finishing his Ph.D work at the University of Bayreuth \(Germany\ on pattern formation in turbulent flows and a 7 1/2 year stunt as Ass and Assoc. Prof. at the Escuela T\351cnica Superior de Ingenieros Aeron\341uticos in Madrid \(Spain\, he came to the Jet Propulsion Laboratory on a 1-year Sabatical leave in 1997 wanting to apply fundamental concepts of nonlinear systems and geophysical fluid dynamics to something that might be directly useful to soci ety. He discovered the JPL as a great place to achieve that goal and extende d his stay a bit longer, becoming Technical staff and working on different aspects of remote sensing, validation of satellite instruments, and data analysis of atmospheric processes and climate  


