Incremental Mining of Web Sequential Patterns Using PLWAP Tree on Tolerance MinSupport C.I Ezeife  School of Computer Science  University of Windsor  Windsor Ontario  Canada N9B 3P4 cezeife@uwindsor.ca Min Chen School of Computer Science University of Windsor Abstract This paper proposes an algorithm PL4UP which uses the PLWAP tree structure to incrementally up 
date web sequential patterns PL4UP initially builds a bigger PLWAP tree that includes all sequences in the database with a tolerance support t that is a fraction of the database minimum support s The position code features of the PLWAP tree are used to eciently mine this tree to extract both current frequent and non-frequent sequences which are likely to become frequent when the database is updated This approach more quickly updates old frequent patterns without the need to re-scan the entire updated database 
Keywords Incremental Mining sequential mining frequent patterns Apriori-like algorithms PLWAP tree Scalability 1 Introduction Sequential pattern mining is based on association rule mining concepts of support conìdence minimum support minimum conìdence and frequent sequence pattern When data are inserted or deleted from a database previous patterns may no longer be interesting and new interesting patterns could appear in the updated database The process of generating new patterns in the updated database old  new 
data using only the updated part new data and previously generated patterns is called incremental mining of sequential patterns Although sequential mining is an important data mining task it has received relatively little attention compared with association rules mining especially in the area of incremental mining of sequential patterns 4 E xist This research was supported by the Natural Science and Engineering Research Council NSERC of Canada under an 
Operating grant OGP-0194134 and a University of Windsor grant ing incremental sequential mining algorithms that are apriori-based include 1 4 6 T r ee-ba sed m ining a lgorithms are 3 5 a nd these a r e m u c h fa ster tha n the apriori-based algorithms and incremental sequential techniques may beneìt from a tree-based mining approach This paper proposes a method for incremental sequential data mining based on the PLWAP-tree that can achieve better performance than existing al 
gorithms 1.1 Related Work Few existing algorithms 1 4 f o r i n c rem e n t al sequential patterns mining are apriori-based rather than tree-based They are composed of iteratively 1 generating all large itemsets in the database and 2 generating sequential patterns in the database according to the large itemsets generated in the rst step ISE algorithm is proposed by 4 to a ddr ess t he maintenance problem for sequential patterns mining ISM 6 i s al so an ap ri ori l i k e a l gori t h m  W A P t r ee al  
gorithm s cans t h e d at abase o nly t wice t o build t h e WAP tree without generating candidate sets It then mines the WAP tree to extract sequential patterns PLWAP algorithm uses a preorder linked version of WAP tree and an algorithm to eliminate the need to recursively re-construct intermediate WAP trees during mining as done by WAP tree technique Neither WAP nor PLWAP algorithm is used for incremental mining 1.2 Contributions In this paper an algorithm named PL4UP PLWAP FOR UPdated sequential mining is proposed This 
algorithm applies the PLWAP-tree 3 t o t he incr emental sequential mining problem The PL4UP algorithm eliminates the need to re-scan the old database when new changes arrive in order to update old patterns The approach is to initially build a PLWAP 1 Proceedings of the International Database Engineering and Applications Symposium \(IDEASê04 1098-8068/04 $20.00 © 2004 IEEE 


tree that is based on a lower threshold minimum support t which is a fraction of the applicationês regular minimum support s The tolerance support t is based on the average computed changing rate of data in the database 2 The Proposed Incremental PL4UP Algorithm With F and S representing frequent and small items in original database respectively while F  and S  represent updated large frequent items and updated small items in the updated database U old  new data all events items in updated database U will fall into six categories of items as 1 large in old database DB and still large in updated database U F  F   2 large in old DB but small in U F  S   3 small in old DB but large in U  S  F   4 small in old DB and still small in U  S  S   5 new items that are large in U   F   and 6 new items that are small in U   S   The main idea of PL4UP is to avoid scanning the whole updated database U DB+db but to scan only the changes to the database db Then to perform incremental mining by building a small PLWAP db tree for only these new changes to the database db Once this small PLWAP db is built itcanbeusedtoupdatetheexistingold PLWAP DB  With this approach old patterns can quickly be updated without the need to scan the old DB However this will work for ve of the six cases identiìed above but not for the third case when S  S  Ifthereare any items in this category the existing PLWAP DB will not contain adequate information regarding all sequences which had these previous small items not shown in the PLWAP DB  so that they could be updated with the new data The PL4UP solution is to use a lower tolerance support in building the initial PLWAP DB tree to accommodate most potentially frequent items Thus from the original PLWAP DB tree the small items S are broken into two groups to get those that are highly likely to become frequent during next database update potentially frequent PF and those that are highly likely to still remain small SS using the tolerance support t which is lower than the regular minimum support such that t  factor  s for 0  factor  1 The limit on the t value suitable for good performance is determined using the average rate of changes in the database collected over a period of time 2.1 Steps in Mining Frequent Patterns Incrementally with PL4UP 1 Construct initial PLWAP tree using tolerance minimum support t instead of minimum support s We obtain the frequent 1-items meeting support s F 1  the frequent 1-items meeting support t F t  the Small 1-items not meeting support s S 1 Fromthe S 1 list we obtain the potentially frequent 1-items in S 1 list but meeting support t PF 1  We also identify the potentially still small 1-items SS 1 in S 1 list but not meeting the support t The candidate 1-items C DB 1  recording the support of all items in the database are also obtained from the database From each transaction in the database we obtain two subsequences the frequent subsequence meeting s requirements  seq s ndthefrequent subsequence meeting the t requirements  seq t  2 Construct a PLWAP tree using the seq t from rst step above and the frequent F t items for header link connections This is called PL 4 UP DB tree 3 Now mine the PL 4 UP DB tree for tolerance frequent patterns called TFP by extracting all patterns with support greater than or equal to t Since TFP includes all SFP for support s requirements patterns that is TFP  SFP  we obtain the needed SFP from the TFP as those patterns with support greater than or equal to minimum support s 4 Now when database changes and we want to update the patterns incrementally Update all intermediate candidate lists and patterns as follows Obtain the updated candidate 1-items C  1 C  1  C 1  C db 1  F  1 and F  t are obtained as items in C  1 with supports greater or equal to regular support s and tolerance support t respectively F db 1  C db 1  F  1 and F db t  C db 1  F  t  Next the updated small potentially frequent and still small items in the changes to database db are obtained as follows S db 1  C db 1  S  1  and PF db  C db 1  PF   5 Construct the small PL4UP tree using only the changes to the database db and with frequent items based on tolerance support F db t Asignificant dierence in this step is that the frequent 1-items used to construct the small db tree is not that directly computed from tolerance support of db but computed from intersecting  C db 1  F  t  6 Combine the frequent patterns from the changes to database db and the old database DB keepProceedings of the International Database Engineering and Applications Symposium \(IDEASê04 1098-8068/04 $20.00 © 2004 IEEE 


Table 1 The Example Database Transaction Table with Frequent Sequences TID Web Frequent Frequent access Seq subseq subseq Seq with s  50 with t  0.6s 100 abdac abac abac 200 aebcace abcac aebcace 300 baba baba baba 400 afbacfc abacc afbacfc 500 abegfh ab abef ing only those patterns that meet the regular support s in updated SFP and those that meet tolerance support t in updated TFP Thus update SFP and TFP as follows SFP are patterns in TFP  SFP db with support greater or equal to s Similarly TFP are patterns in TFP  TFP db with support greater or equal to t 3 Mining an Example Database with PL4UP Algorithm PL4UP algorithm being proposed in this paper is a more generalized form of the PLWAP tree algorithm 3 whic h u ses a lo w e r t o l er a n ce minim um supp o r t to accommodate future incremental mining when updates occur This section shows an example mining with PL4UP algorithm presented in Section 2 3.1 PL4UP tree Algorithm on a Sample Database Suppose we have a database DB with set of items I  a b c d e f g h  and minimum support  50 of DB transactions t is given as 0.6s A simple database transaction table for illustrating the idea is given in the rst two columns of Table 1 The rst process is to build the initial PL 4 UP DB tree using sequences in Table 1 with support greater than or equal to the tolerance support t of 0.6s or 30 equivalent to 2 transactions in Table 1 The PL4UP tree is built the same way the PLWAP tree is built but with lower tolerance support t To build rst scan the database sequence column 2 of the Table once to obtain the candidate 1-items with their supports as C 1   a:5 b:5 c:3 d:1 e:2 f:2 g:1 h:1   Next with regular support of 50 or 3 transactions deìne the regular and tolerance frequent 1-items as  a:4 1 f:1 11101 e:1 1110 b:2 11 c:1 1111 f:1 11001111 b:1 11001 a:1 111 f:1 1100 b:1 1101 Root e:1 110 a:1 10111 b:1 1011 a:1 101 b:1 10 e:1 11011111 c:1 11011 c:1 110011111 a:1 110111 c:1 1101111 a:1 110011 c:1 1100111 a b c e f Figure 1 The PL4UP tree with tolerance Support t for the Example Database F 1   a b c  and F t   a b c e f   Also obtain the regular small 1-items the potentially frequent and potentially still small items as S 1   e f d g h   PF   e f  and SS   d g h  respectively Then scan the web access database column 2 of Table a second time to create two frequent sequences from each transaction the regular frequent sequence  seq s  that includes all items with support greater or equal to regular support s  seq s isshownoncolumn3of Table 1 and the tolerance frequent sequence  seq t  which includes all items with support greater or equal to tolerance support t  seq t is shown on column 4 of Table 1 Figure 1 shows the PL 4 UP DB tree for the example database Each seq t sequence is inserted into the tree and each node is labeled as node name node count node position code Position code of a node is 1 appended to the position code of its parent if the node is the leftmost child otherwise it is 0 appended to the position code of its nearest left sibling After building the tree a pre-order traversal mechanism visit root visit left subtree visit right subtree is used to add a pre-order linkage on the tree for all tolerance frequent 1-items F t   a b c e f   The broken lines on Figure 1 starting with each frequent F t item is used to show the pre-order linkage between nodes of this type Next this tree is mined for frequent patterns the PLWAP approach To mine a PLWAP tree for frequent patterns we easily identify the sux root set of the node e.g a under consideration by getting all such nodes on dierent branches of the tree at the tree level under consideration This node label is considered frequent if the sum of the counts of these labels on dierent branches is greater than the tolerance support t and if found Proceedings of the International Database Engineering and Applications Symposium \(IDEASê04 1098-8068/04 $20.00 © 2004 IEEE 


Table 2 The Changes to Database Transaction Table TID Web Frequent subseq Frequent subseq access with s using with t using Seq C db 1  F  1 C db 1  F  t 700 bahefg baef bahefg 800 aegfh aef aegfh frequent it is appended to the previously discovered preìx sequence and the process continues until there is no more frequent sux to append Progressively sequences a aa aaa aac etc are discovered frequent After checking all patterns the list of TFP mined is  a:5 aa:4 aac 3 ab:5 aba:4 abac:3 abc:3 abcc:2 abe:2 abf:2 ac:3 acc:2 ae:2 af:2 b:5 ba:4 bac:3 bab:1 bc:3 bcc:2 be:2 bf:2 c:3 cc:2 e:2 f:2   The actual needed frequent pattern SFP now are the ones based on the regular support of 3 These are all patterns in TFP with support 3 or more The SFP   a:5 aa:4 aac 3 ab:5 ac:3 aba:4 abac:3 abc:3 b:5 ba:4 bac:3 bc:3 c:3   Now assume that the original database DB of Table 1 is updated with the records in the changes to database table shown as Table 2 the objective of the PL4UP algorithm is to use old rules SFP and TFP from the previous section with the new changes to database and other intermediate information from the previous section like candidate 1-items frequent 1-items and small 1-items to compute the new frequent patterns in the entire updated database using the same regular support s of 50 and tolerance support t of 30 Thus the PL4UP algorithm mines the updated database incrementally as follows C  1  C 1  C db 1  C 1   a:5 b:5 c:3 d:1 e:2 f:2 g:1 h:1   C db 1   a:2 b:1 e:2 f:2 g:2 h:2  Thus C  1   a  7 b 6 c 3 d 1 e 4 f 4 g 3 h 3   Updated regular support s   of updated database U is 50 of 7 or 4 transactions while the tolerance support t   of U is 30 of 7 or 3 transactions\(ceiling\(2.1 F  1   a 7 b 6 e 4 f 4  and F  t   a 7 b 6 c 3 e 4 f 4 g 3 h 3   F db 1  C db 1  F  1   a 2 b 1 e 2 f 2 g 2 h  2  a 7 b 6 e 4 f 4    a:2 b:1 e:2 f:2   F db t  C db 1  F  t   a 2 b 1 e 2 f 2 g 2 h  2  a 7 b 6 c 3 e 4 f 4 g 3 h 3    a 2 b 1 e 2 f 2 g 2 h 2   S db 1  C db 1  S  1   g:2   PF    c:3 g:3 h:3   PF db  C db 1  PF    g:2 h:2   SS    d:1   SS db  C db 1  SS    Next we construct the small PL 4 UP db tree using only the changes to the database db and mine this  Root b:1:1 a:1:10 a:1:11 h:1:111 e:1:1111 e:1:101 g:1:1011 f:1:10111 a b e f g h h:1:101111 f:1:11111 g:1 111111  Figure 2 The PL4UP tree with tolerance Support t for Changes to Database PL 4 UP db to obtain the regular SFP db andthetolerance frequent patterns TFP db  Figure 2 shows the PL 4 UP db tree for the small db based on the tolerance support t of 30 or 1 transaction The mined TFP db   a:2 ae:2 aef:2 af:2 b:1 ba:1 bae:1 baef:1 be:1 bf:1  e:2 ef:2 f:2  and the SFP db as usual is obtained from its TFP db counterpart as sequences that have support greater or equal to the regular support of changed db which is also 1 transaction in this case Thus SFP db  TFP db  Finally we combine frequent patterns from changes to database db and the old database DB keeping only those patterns that meet the regular support s  which is 4 in updated database SFP  and those that meet tolerance support t  which is 3 in updated TFP  SFP  are patterns in TFP  SFP db   a:7 aa:4 aac:3 ab:5 aba:4 abac:3 abc:3 ac:3 ae:4 af:4 b:6 ba:5 bac:3 bc:3 be:3 bf:3 c:3 e:4 f:4  with support greater or equal to s  of 4 transactions Thus SFP    a:7 aa:4 ab:5 aba:4 ae:4 af:4 b:6 ba:5 e:4 f:4  Similarly TFP  are patterns in TFP  TFP db with support greater or equal to t or 3 transactions Thus TFP    a:7 aa:4 aac:3 ab:4 aba:4 abac:3 abc:3 ac:3 ae:4 af:4 b:6 ba:5 bac:3 bc:3 be:3 bf:3 c:3 e:4 f:4   Proceedings of the International Database Engineering and Applications Symposium \(IDEASê04 1098-8068/04 $20.00 © 2004 IEEE 


4 Experimental and Performance Analysis A performance comparison of PL4UP PLWAP and ISE algorithms was conducted and the results of the experiments are presented in this section All these three algorithms were implemented and run on the same datasets generated using the resource code for generating synthetic datasets downloaded from http://www.almaden.ibm.com/cs/quest/syndata.html The correctness of the implementations were conìrmed by checking that the frequent sequences generated for the same dataset by the three algorithms are the same The experiments were conducted on a Pentium 4 PC machine with 256 megabytes of main memory running Windows operating system The programs were written in C under visual C environment From observation of experimental result we can see that i as the size of the support increases the execution times of all the algorithms decrease ii for the same support the execution time of PL4UP algorithm is less than that of PLWAP and ISE algorithms Experiment 2 Execution Time for Databases with Dierent Sizes We use dierent database sizes that vary from 20k to 100k to compare the three algorithms The minimum support 5 is used for PL4UP ISE and PLWAP and the result of the experiment show that when the inserted transactions become large all the execution times become larger Also the larger size or updates to database aect the execution time of ISE and PLWAP with lower minimum support much more than with higher minimum support The PL4UP always achieves better performance than PLWAP and ISE 5 Conclusions and Future Work ISE 4 o r simila r a pr io r i lik e a lg o r ithms g ener a t e n umerous candidate itemsets that need to be computed at each level and scans the updated database U many times For all types of database updates ISE updates the old generated frequent patterns by mining data level-wise the same way If the PLWAP algorithm is directly used to mine the updated database it has to scan the updated database U two times to construct PLWAP tree and mine the tree step by step without using existing patterns and tree of the original database DB which wastes a lot of reusable resources The proposed PL4UP inherits the advantages of PLWAP and no huge candidate itemsets need to be generated They also fully utilize old existing information like the old patterns and tree for mining the updated database U Future work should investigate applying technique to distributed and parallel mining that may involve continuous time series data and to web content and text mining References 1 A g r a w a l  R  a nd Sr ik a n t R M ining S equen t ia l Patterns Proceedings of the 11th Intêl Conference on Data Engineering Taipei Taiwan March 1995 2 H a n  J  K a m b er  M  Da ta Mining  C o n cepts and Techniques Morgan Kaufmann 2001 3 u  Y i E z e i f e C  I   P o s i t i o n C o d e d P r e O r d e r Linked WAP-Tree for Web Log Sequential Pattern Mining Proceedings of The 7th PaciìcAsia Conference on Knowledge Discovery and Data Mining PAKDD 2003 Seoul Korea Apr 30May 2003 4 M a sseg lia  F  P o ncelet P  T e isseir e  M  I ncr e mental Mining of Sequential Patterns in Large Databases Actes des 16imes Journes Bases de Donnes Avances BDAê00 Blois France October 2000 5 P ei J ia n H a n Jia w e i Mo r t a z a v i-a s l Behza d  Zhu Hua Mining Access Patterns Eciently from Web Logs Proceedings 2000 Paciìc-Asia Conf On Knowledge Discovery and Data Mining PAKDDê00 Kyoto Japan April 2000 6 P art h asarat h y  S   Zaki  M  J   Ogi h ara M   Dwarkadas S Incremental and Interactive Sequence Mining In Proc.\(1999 of the 8th International Conference on Information and Knowledge Management CIKM99 251258 Kansas City MO November 1999 7 S ri k a n t  R am akri sh n a n   A gra w al  R ak esh   M i n ing generalized association rules In proceedings of the 21st Intêl Conf on Very Large Databases VLDB Zurich Switzerland Sept 1995 Proceedings of the International Database Engineering and Applications Symposium \(IDEASê04 1098-8068/04 $20.00 © 2004 IEEE 


Proceedings of the Fifth International Conference on Mach ine Learning and Cybernetics, Dalian, 13-16 August 2006 1331 5. Conclusions In this paper, we have introduced an efficient implementation of an FP-Tree constructing algorithm and an improved method QFP-grow th for constructing frequent patterns from FP-tree. QFPC can create FP-tree with one database scanning, QFP-growth can generate frequent patterns without conditional pattern-base and conditional FP-tree generation, and the frequent patterns are generated in order. Our future research work is to use the method into implementation of SQL-based, highly scalable FP-tree structure, constraint-based mining of frequent patterns sequential patterns, max-patterns, partial periodicity and other interesting frequent patterns mining References   R Ag rawal a n d R   Sri k ant F a st alg o rithm s  fo r m i ning  association rules. In VLDBí94, pp. 487-499   R. J. Bay a rd o Efficiently m i nin g lo ng patterns fr om  databases. In SIGMODí98, pp.85-93 3  Zak i M  J.; Parth a sarath y, S Og ih ara, M.; an d Li W 1997. New Algorithms for Fast Discovery of Association Rules. In Proc. of the Third Intíl Conf. on Knowledge Discovery in Databases and Data Mining 283-286   Li n D I a n d Kedem  Z. M  1 9 9 8  Pi nce r S earc h  A  New Algorithm for Discovering the Maximum Frequent Set. In Proc. of the Sixth European Conf. on Extending DatabaseTechnology   Par k J  S  Chen, M S.; a n d Y u  P S 1996 A n  Effective Hash Based Algorithm for Mining Association Rules. In Proc. of the 1995 ACM-SIGMOD Conf. on Management of Data 175-186 6  Br in  S.; Mo t w an i, R.; U llman J.; an d  Tsur S 1 997 Dynamic Itemset Counting and Implication Rules for Market Basket Data. In Proc. of the 1997 ACM-SIGMOD Conf. On Management of Data 255-264 7  J  P e i  J   H a n  a n d R  M a o  C L O S E T  A n E f f i c i e n t  Algorithm for Mining Frequent Closed Itemsets PDF\ , Proc. 2000 ACM-SIGMOD Int. Workshop on Data Mining and Knowledge Discovery \(DMKD'00 Dallas, TX, May 2000   K  W a n g  Y  H e an d J Ha n  M i ni ng F r eq ue nt It em set s  Using Support Constraints , Proc. Int. Conf. on on Very Large Data Bases \(VLDB'00\Cairo, Egypt Sept. 2002   J. Ha n  J  Pei  and Y Yi n   M i ni ng  F r eq ue nt  Pat t e r n s  without Candidate Generatio n\(PDF\, \(Slides\ Proc 2000 ACM-SIGMOD Int. Conf. on Management of Data \(SIGMOD'00\las, TX, May 2000 1  Gra h ne G  Z h u JF Hi gh per f o r m a nce m i ni ng o f  maximal frequent itemsets. In: Proc. of the 6th SIAM Int'l Workshop on High Performance Data Mining HPDM 2003  1   W a n g  H Xiao ZJ Z h an g HJ Jian g S Y  Parallel  algorithm for mining maximal frequent patterns. In Zhou XM, ed. Advanced Parallel Processing Technologies \(APPT 2003\. LNCS 2834, Heidelberg Springer-Verlag, 2003. 241-248  N. Pasquier, Y. Bastide R. Taouil, and L. Lakhal Discovering Frequent Closed Itemsets for Association Rules,î Proc. Intíl Conf. Database Theory pp. 398-416, Jan. 1999  Gosta Grahne and Jianfei Zhu,  Fast Algorithms for Frequent Itemset Mining Using FP-Trees ,IEEE TRANSACTIONS ON KNOWLEDGE AND DATA ENGINEERING, VOL. 17, NO. 5, MAY 2005 1  J W a n g  J Ha n, a n d J Pei   C LOSET  Se archi n g f o r  the Best Strategies for Mining Frequent Closed Itemsets,î Proc. 2003 ACM SIGKDD Intíl Conf Knowledge Discovery and Data Mining \(KDD í03 pp. 236-245, Aug. 2003 15  Jian yon g W a ng  and  Jiaw ei H a n, TFP: An Eff i cien t  Algorithm for Mining Top-K Frequent Closed Itemsets, IEEE Transations on knowledge and data engineering. Vol. 17, No. 15, May 2005  


some are best for dense type datasets Currently there is no single algorithm exist that shows global best performance on all types of datasets The main limitation of previous algorithms is that they really upon only single strategy and do no combine the best features of multiple strategies for speedup the process of itemset mining In this paper we show that combining the best features of multiple strategies into a single hybrid is more beneficial and efficient than relying upon single strategy Our different experimental results on benchmark datasets show that mining all and maximal frequent itemsets using our hybrid approach is more efficient than existing algorithms and gives global best performance 13 T Uno M Kiyomi H Arimura LCM ver 3 Collaboration of Array Bitmap and Prefix Tree for Frequent Itemset Mining In 1st Int'l Workshop on Open Source Data Mining in conjunction with SIGKDD2005 2005 14 M J Zaki and C Hsiao Charm An efficient algorithm for closed association rule mining In Technical Report 99-10 Computer Science Rensselaer Polytechnic Institute 1999 8 References 1 R Agrawal T Imielinski and A Swami Mining Association Rules between Sets of Items in Large Databases Proc ACMSIGMOD Int'l Conf Management of Data pp 207-216 May 1993 2 R Agrawal and R Srikant Fast Algorithms for Mining Association Rules Proc Int'l Conf Very Large Data Bases pp 487-499 Sept 1994 3 S Bashir A Rauf Baig HybridMiner Mining Maximal Frequent Itemsets using Hybrid Database Representation Appraoch In Proc of 10th IEEE-INMIC conference Karachi Pakistan 2005 4 D Burdick M Calimlim and J Gehrke Mafia A maximal frequent itemset algorithm for transactional databases In Proc ofICDE Conf pp 443-452 2001 5 Proc IEEE ICDM Workshop Frequent Itemset Mining Implementations B Goethals and M.J Zaki eds CEUR Workshop Proc vol 80 Nov 2003 http:HCEURWS.org/Vol-90 6 K Gouda and M J Zaki Efficiently mining maximal frequent itemsets In ICDM pp 163-170 2001 7 G Grahne and J Zhu Efficiently Using Prefix-trees in Mining Frequent Itemsets In Proc of the IEEE ICDM Workshop on Frequent Itemset Mining Implementations 2003 8 J Han J Pei and Y Yin Mining frequent patterns without candidate generation In SIGMOD pages 1-12 2000 9 J Liu Y Pan K Wang and J Han Mining frequent item sets by opportunistic projection In Proc of KDD Conf 2002 10 G Liu H Lu Y Xu and J X Yu Ascending frequency ordered prefix-tree Efficient mining of frequent patterns In DASFAA 2003 11 J Pei J Han H Lu S Nishio S Tang and D Yang HMine Hyper-structure mining of frequent patterns in large databases In Proc of ICDMConf pp 441.448 2001 12 A Pietracaprina and D Zandolin Mining Frequent Itemsets Using Patricia Tries Proc IEEE ICDM Workshop Frequent Itemset Mining Implementations CEUR Workshop Proc vol 80 Nov 2003 243 


The statement \223g_info := self_general_info;\224 within the worker\222s method 223get_self_general_info\224 can be executed after comparing labels. Note that the manager\222s method 223browse\224 cannot read the worker\222s \223work_hour\224 and \223hour_pay\224. The rationale is described in the last paragraph of section 4.4 Requirement 3 If a worker is not assigned to a manager, the manager can only read the worker\222s general information This requirement is accomplished by the method 223browse\224 of the object \223manager\224 and the labels with the association \223not_assigned\224. To get the general information of a worker not assigned to a manager, the method \223browse\224 invokes the worker\222s method \223get_self_general_info\224 using the manager\222s attribute \223others_general_info\224 as an argument. The statement \223g_info self_general_info;\224 within the worker\222s method 223get_self_general_info\224 can be executed after comparing labels Requirement 4 If a worker and a manager are friends, they can read each other\222s general information This requirement is achieved by the labels with the association \223friend\224. For example, a worker can read his manager friend\222s general information through the worker\222s method 223get_others_general_info\224, which invokes the manager\222s \223get_self_general_info\224 using the worker\222s attribute \223others_general_info\224 as an argument. After comparing the label of the worker\222s attribute \223others_general_info\224 and the manager\222s attribute \223self_general_info\224, one can see that the secure flow condition is true. The statement \223g_info := self_general_info;\224 within the manager\222s method \223get_self_general_info;\224 can be executed Requirement 5 Periodically, the company invokes foreign objects to compute the salaries and taxes of workers This requirement is fulfilled by the stubs \223stub1\224 and stub2\224 in Example 1. Please refer to the description in section 4.3. Moreover, the three rules mentioned in section 3.2 prevent the foreign objects from becoming Trojan horses  7. Evaluation  We implemented a prototype system to evaluate the model. The system uses reusable software repository to simulate foreign object control. Moreover, it uses the language shown in Example 1 to write programs A program written in the language is first pre-processed to produce a program without labels and MLs. The program produced by the preprocessor is conceptually composed of two parts. One is the program before labeling and the other a security monitor The latter checks information flows of the former using Algorithm 1 during program execution Currently, the security monitor checks security dynamically, which contradicts the proposal of static checking [1, 12, 24  N e ve r t he l e ss d yna mi c c he c ki n g  cannot be totally avoided because objects and AGs may be dynamically instantiated or removed during program execution To evaluate the model, we used the example described in section 2 as an assignment to students of different grades and experiences. The students are required to develop a program, namely program a  without the proposed model embedded and another program, namely program b with the model embedded. We then collected and averaged the following metrics data: 1\ LOC \(lines of code\f programs a and b, 2\ecution time of programs a and b, and 3\numbers of non-secure statements found in program b. The collected data showed that the averaged LOC and execution time of program b are respectively 3.2 and 3.8 times those of program a Nevertheless, the data also showed that 2.3 non-secure information flows \(per 100 LOC\n average are identified from program b. Although the runtime overhead seems high, we still think that the model is valuable because of the ability to identify non-secure statements. Nevertheless, reducing the overhead should be an important future work  8. Related work  The simplest information flow control approach is DAC. Since DAC fails to avoid Trojan horses, the multilevel security approach was proposed [6-9  The approach is generally categorized as MAC MAC was criticized as too restricted [5 T o lo o s en  the restriction, quite a few approaches have been proposed. Below we survey some researches The model proposed in t rol s t h e  information flows in object-oriented systems. It uses ACL of objects to compute the ACL of executions. A message filter is used to filter out possibly non-secure information flows. Since the computation of an execution\222s ACL takes information propagation into consideration, no Trojan horses will result Moreover, interactions among executions are categorized into five modes including synchronized unrestricted, synchronous restricted, asynchronous deferred reply unrestricted, and deferred reply restricted. Different modes result in different ACLs Proceedings of t he 36th Ha waii International Conf erence on S y st e m Sciences \(HICSS\22203 0 76 95 18 745/0 3 1 7.00 251 20 02  I E EE 


which loosens the restriction of MAC. More flexibility is added to the model by allowing exceptions during or after method execution [10-11 The purpose-oriented model [21-22 pro pos es  that invoking a method may be allowed for some methods but disallowed for other methods, even when the invokers belong to the same object. This consideration is correct, because the security levels of methods in an object may be different Different methods can thus access information in different security levels The decentralized label approach [1-4 m a rk s t h e  security levels of variables using labels. A label is composed of one or more policies, which should be simultaneously obeyed. A policy in a label is composed of an owner and zero or more readers that are allowed to access the data. When computation are applied to data, join operation is used to compute the label of the result data. This avoids Trojan horses Another feature proposed by this approach is that declassification \(downgrading of security level provided. This allows non-sensitive data, which are in high security level, to be accessed by low security level processes. The model also takes write access control into consideration [4 rren t l y t h e m o d e l  has been used to develop a programming language Jflow [1 ad d itio n   th e m o d e l h a s b e e n  u s ed i n a  distributed system with untrusted hosts through secure program partitioning [30  Role-based access control models [19, 27, 33  define the roles a subject can play. A role is a collection of permissions \(i.e., access rights  When a subject plays a role, it possesses the rights belonging to the role. A subject can play multiple roles and even change role during a session Inheritance and other relationships can be established among roles [27 t o s t ru ct u re t h e m Moreov er  constraints, such as two specific roles should be mutually exclusive, can be attached to roles. The advantage of role-based access control is that subjects can change roles dynamically, which facilitates obeying the \223need-to-know\224 principle. It seems that the role-based models operate well in an application that protects not too many resources because roles should be defined before the application\222s execution. In case that many resources should be protected \(such as every variable in a program should be protected\ining roles becomes tedious and the access control may become imprecise From the survey, we identified many necessary features for controlling information flows in object-oriented systems such as Trojan horse prevention, declassification, purpose-oriented method invocation, and so on. In fact, our model offers those features, although we do not present them in this paper. What we present in this paper are the control of information flows among objects and foreign objects. According to our survey, no model offers the control well  9. Conclusions  This paper proposes a model to control information flows among objects. The model uses associations and method limitations \(ML\ to control information flows among objects. Information flows are controlled by attaching labels to variables. Trojan horses are avoided by join operations. Within an application, every variable and literal is associated with one or more labels. If a variable is associated with multiple labels, each label enforces the security policy of an association. To check the security of an information flow, labels are compared. An information flow is secure if the comparison causes the secure flow condition true In addition to controlling objects developed by programmers, the model also controls foreign objects which are pre-existing objects for reused. Since the details of a foreign object are unknown, our model only prevents foreign objects from becoming Trojan horses. We use the \223Suppression rule\224, \223No ML rule\224 and \223Stuck to rules\224 to control foreign objects We implemented a prototype system to evaluate the model. From the data collected, we found that the model does facilitate identifying non-secure information flows. We thus believe that the model is useful in spite of runtime overhead  Acknowledgement  This research is sponsored by the National Science Council in Taiwan under Grant NSC91-2213-E-259-006  References  1  A  C. My e r s 223 J Flow  P r a c tic a l Mostly S ta tic  Information Flow Control\224 Proc. 26\222th ACM Symp Principles of Programming Language pp. 228-241 1999  A  C M y ers an d B L i sko v  223A De cen t r al i zed M o d e l f o r Information Flow Control\224 Proc. 17\222th ACM Symp Operating Systems Principles pp. 129-142, 1997 3 A  My e r s a nd B  L i s k ov 223 C om ple t e  Sa f e I n f o r m a tion  Flow with Decentralized Labels\224 Proc. 14\222th IEEE Symp Security and Privacy pp. 186-197, 1998 4 A My e r s a nd B. L i sk ov 223 P rote c ting  P r iv a c y using the  Proceedings of t he 36th Ha waii International Conf erence on S y st e m Sciences \(HICSS\22203 0 76 95 18 745/0 3 1 7.00 251 20 02  I E EE 


Decentralized Label Model\224 ACM Trans. Software Eng Methodology vol. 9, no. 4, pp. 410-442, 2000  C J M c Co ll u m  J R M e ssin g  an d L  No tar g iaco m o   223Beyond the Pale of MAC and DAC - Defining New Forms of Access Control\224 Proc. 6\222th IEEE Symp Security and Privacy pp. 190-200, 1990  D E  Bel l a n d L  J L a P a d u l a 223S ecu re Co m p u t er  Systems: Unified Exposition and Multics Interpretation\224 technique report, Mitre Corp Mar. 1976 http://csrc.nist.gov/publications/history/bell76.pdf 7 D  E  D e nn ing  223 A L a ttic e Mode l of Se c u r e I n f o r m a tion Flow\224 Comm. ACM vol. 19, no. 5, pp. 236-243, 1976 8 D  E  D e n n ing a n d P  J  D e nning 223 C e r tif ic a tion of  Program for Secure Information Flow\224 Comm. ACM vol 20, no. 7, pp. 504-513, 1977  D  F  C  Brew er  an d M  J  Nash  223T h e Ch i n ese W a l l  Security Policy\224 Proc. 5\222th IEEE Symp. Security and Privacy pp. 206-214, 1989 10 E Ferrari P   Sam a r a ti, E. Bertin o  an d S. Jajo d i a  223Providing Flexibility in Information Control for Object-Oriented Systems\224 Proc. 13\222th IEEE Symp Security and Privacy pp. 130-140, 1997 11 E B e r tin o Sa br i n a  de C a pita ni di V i m e r c a ti, E  Ferrari, and P. Samarati, \223Exception-based Information Flow Control in Object-Oriented Systems\224 ACM Trans Information System Security vol. 1, no. 1, pp. 26-65 1998 1  F  B S chu ei d er  223E n f o r ceab l e S ecu ri t y P o l i cy 224  ACM Trans. Information System Security vol. 3, no. 1, pp 30-50, 2000 1 G  B o o c h  Object-Oriented Analysis and Design with Application second edition, The Benjamin/Cummings Publishing Company, 1994 1 G  S m i t h an d D  V o l p an o 223S ecu re In f o r m at i o n F l o w  in a Multi-Thread Imperative Language\224 Proc. 25th ACM Symp. on Principles of Programming Languages  pp. 355-364, 1998 15 H M De ite l a n d a n d P  J D e ite l C: How to Program  Prentice-Hall, 2001 16 O M G  223 T he C o m m on O bje c t R e que s t B r ok e r   Architecture and Specification\224 http://doc.ece.uci.edu/CORBA 17 J  A g a t 223 T r a nsf o r m ing out  T i m i ng Le ak s 224  Proc. 27th ACM Symp. on Principles of Programming Languages  pp. 40-53, 2000 1 J Ru m b au gh  M  Bl ah a  W  P r em erl a n i  F  E d d y  an d  W Lo r en s en   Object-Oriented Modeling and Design  Prentice-Hall, 1991 19 K  I z a k i, K  T a na k a a nd M  T a k i z a w a 223 I nf or m a tion Flow Control in Role-Based Model for Distributed Objects\224 Proc. 8\222th International Conf. Parallel and Distributed Systems pp. 363-370, 2001 20 M. D. Mc Ilr o y a nd J A  R e e d s, \223 M ultile v e l Se c u rity  in the UNIX Tradition\224 Software - Practice and Experience vol. 22, no. 8, pp. 673-694, 1992 2  M  Y asu d a T  T ach i k a w a an d M  T aki za w a  223Information Flow in a Purpose-Oriented Access Control Model\224 Proc. 1997 International Conf. Parallel and Distributed Systems pp. 244-249, 1997 22 M. Y a s uda   T   T a c h ik aw a, a nd M  T a k i z a w a  223A  Purpose-Oriented Access Control Model\224 Proc. 12\222th International Conf. Information Networking pp. 168-173 1998 23  P  Sa m a ra ti, E. Be rtino   A  Cia m pic h e tti, a n d S  Jajodia, \223Information Flow Control in Object-Oriented Systems\224 IEEE Trans. Knowledge Data Eng vol. 9, no 4, pp.524-538, Jul./Aug. 1997 24 R  F o c a r di a n d R  G o r r i e r i, \223 T he C o m pos itiona l  Security Checker: A Tool for the Verification of Information Flow Security Properties\224 IEEE Trans Software Eng vol. 23, no. 9, pp. 550-571, 1997 2 G r au b a rt  223On t h e Need f o r a T h i r d  F o rm o f A cce ss  Control\224 Proc. 12\222th Nat\222l Computer Security Conf pp 296-303, 1989 26 R  S  Sa nd hu 223 L a ttic e B a sed A c c e s s C ontr o l M ode ls 224   IEEE Computer vol. 26, no. 11, pp. 9-19, Nov. 1993 27 R  S  S a n d h u  E  J  C o y n e  H  L  F e i n s t e i n  a n d C  E   Youman, \223Role-Based Access Control Models\224 IEEE Computer vol. 29, no. 2, pp. 38-47, 1996 2  S  Jaj o d i a and B  Ko gan  223In t egrat i n g an  Object-Oriented Data Model with Multilevel Security\224 Proc. 6\222th IEEE Symp. Security and Privacy pp. 76-85 1990 29  S. N Fo ley  223A Mo d e l f o r S e cu re In f o rmatio n Fl o w 224  Proc. 5\222th IEEE Symp. Security and Privacy pp. 248-258 1989 30  S. Z d a n c e w ic L Zhe n g N N y s t ro m a nd A C. My e r s   223Untrusted Hosts and Confidentiality: Secure Program Partitioning\224 Proc. 18th ACM Symp. Operating Systems Principles 2001 3 T   T ach i k a w a M  Y asu d a an d M   T aki za w a  223 A  Purposed-Oriented Access Control Model in Object-Based Systems\224 Trans. Information Processing Society of Japan vol. 38, no. 11, pp. 2362-2369, 1997 32 V  V a ra d h a r a j a n a nd S Bla c k 223 A Multile v e l Se c u rity  Model for a Distributed Object-Oriented System\224 Proc 6\222th IEEE Symp. Security and Privacy pp. 68-78, 1990 3 Z   T a ri an d S  W  Ch an 223A Ro l e Bas ed Acces s  Control for Intranet Security\224 IEEE Internet Computing  vol. 1, no. 5, pp. 24-34, 1997 Proceedings of t he 36th Ha waii International Conf erence on S y st e m Sciences \(HICSS\22203 0 76 95 18 745/0 3 1 7.00 251 20 02  I E EE 


absolute values. The results can vary on other computers. But it can be guaranteed that performance ratio of the algorithms will remain the same After making the comparisons with sample data, we came to the conclusion that PD algorithm performs significantly better than the other two especially with larger datasets. PD outperforms DCP and PIP regarding running time. On the other hand, since PD reduces the dataset, mining time does not necessary increase as the number of transactions increases and experiments reveals that PD has better scalability than DCP and PIP. So, PD has the ability to handle the large data mine in practical field like market basket analysis and medical report documents mining 5. References 1] R. Agrawal and R. Srikant, "Fast algoritlnns for mining association rules", VLDB'94, pp. 487-499 2] R. J. Bayardo, "Efficiently mining long patterns from databases", SIGMOD'98, pp.85-93 3] J. Pei, J. Han, and R. Mao, "CLOSET: An Efficient Algorithm for Mining Frequent Closed Itemsets \(PDF Proc. 2000 ACM-SIGMOD International Workshop on Data Mining and Knowledge Discovery, Dallas, TX, May 2000 4] Qinghua Zou, Henry Chiu, Wesley Chu, David Johnson, "Using Pattern Decomposition\( PD Finding All Frequent Patterns in Large Datasets", Computer Science Department University of California - Los Angeles 5] J. Han, J. Pei, and Y. Yin, "Mining Frequent Patterns without Candidate Generation \(PDF  SIGMOD International Con! on Management of Data SIGMOD'OOj, Dallas, TX, May 2000 6] S. Orlando, P. Palmerini, and R. Perego, "The DCP algoritlnn for Frequent Set Counting", Technical Report CS2001-7, Dip. di Informatica, Universita di Venezia 2001.Available at http://www.dsi.unive.itl?orlando/TR017.pdf 7] MD. Mamun-Or-Rashid, MD.Rezaul Karim, "Predictive item pruning FP-tree algoritlnn", The Dhaka University  Journal of Science, VOL. 52, NO. 1, October,2003, pp. 3946 8] Park, J. S., Chen, M.-S., and Yu, P. S, "An Effective Hash Based Algoritlnn for Mining Association Rules", Proc ofthe 1995 ACM-SIGMOD Con! on Management of Data 175-186 9] Brin, S., Motwani, R., Ullman, J., and Tsur, S, "Dynamic Itemset Counting and Implication Rules for Market Basket Data", In Proc. of the 1997 ACM-SIGMOD Conf On Management of Data, 255-264 10] Zaki, M. J., Parthasarathy, S., Ogihara, M., and Li, W New Algoritlnns for Fast Discovery of Association Rules In Proc. of the Third Int'l Con! on Knowledge Discovery in Databases and Data Mining, 283-286 11] Lin, D.-I and Kedem, Z. M., "Pincer-Search: A New Algoritlnn for Discovering the Maximum Frequent Set", In Proc. of the Sixth European Conf on Extending DatabaseTechnology, 1998 12] R. Ramakrishnan, Database Management Systems University of Wisconsin, Madison, WI, USA; International Edition 1998 pre></body></html 


tors such as union, di?erence and intersection are de?ned for pairs of classes of the same pattern type Renaming. Similarly to the relational context, we consider a renaming operator ? that takes a class and a renaming function and changes the names of the pattern attributes according to the speci?ed function Projection. The projection operator allows one to reduce the structure and the measures of the input patterns by projecting out some components. The new expression is obtained by projecting the formula de?ning the expression over the remaining attributes [12 Note that no projection is de?ned over the data source since in this case the structure and the measures would have to be recomputed Let c be a class of pattern type pt. Let ls be a non empty list of attributes appearing in pt.Structure and lm a list of attributes appearing in pt.Measure. Then the projection operator is de?ned as follows ls,lm c id s m f p ? c, p = \(pid, s, d,m, f In the previous de?nition, id ing new pids for patterns, ?mlm\(m projection of the measure component and ?sls\(s ned as follows: \(i s usual relational projection; \(ii sls\(s and removing the rest from set elements. The last component ?ls?lm\(f computed in certain cases, when the theory over which the formula is constructed admits projection. This happens for example for the polynomial constraint theory 12 Selection. The selection operator allows one to select the patterns belonging to one class that satisfy a certain predicate, involving any possible pattern component, chosen among the ones presented in Section 5.1.1 Let c be a class of pattern type pt. Let pr be a predicate. Then, the selection operator is de?ned as follows pr\(c p Join. The join operation provides a way to combine patterns belonging to two di?erent classes according to a join predicate and a composition function speci?ed by the user Proceedings of the 16th International Conference on Scientific and Statistical Database  Management \(SSDBM  04 1099-3371/04 $ 20.00  2004 IEEE Let c1 and c2 be two classes over two pattern types pt1 and pt2. A join predicate F is any predicate de?ned over a component of patterns in c1 and a component of patterns in c2. A composition function c pattern types pt1 and pt2 is a 4-tuple of functions c cStructureSchema, cDataSchema, cMeasureSchema, cFormula one for each pattern component. For example, function cStructureSchema takes as input two structure values of the right type and returns a new structure value, for a possible new pattern type, generated by the join. Functions for the other pattern components are similarly de?ned. Given two patterns p1 = \(pid1, s1, d1,m1, f1 p2 = \(pid2, s2, d2,m2, f2 p1, p2 ned as the pattern p with the following components Structure : cStructureSchema\(s1, s2 Data : cDataSchema\(d1, d2 Measure : cMeasureSchema\(m1,m2 Formula : cformula\(f1, f2 The join of c1 and c2 with respect to the join predicate F and the composition function c, denoted by c 1   F  c  c 2   i s  n o w  d e  n e d  a s  f o l l o w s    F  c  c 2     c  p 1   p 2   p 1    c 1  p 2    c 2  F   p 1   p 2     t r u e   5.1.3. Cross-over database operators OCD Drill-Through. The drill-through operator allows one to 


Drill-Through. The drill-through operator allows one to navigate from the pattern layer to the raw data layer Thus it takes as input a pattern class and it returns a raw data set. More formally, let c be a class of pattern type pt and let d be an instance of the data schema ds of pt. Then, the drill-through operator is denoted by c c Data-covering. Given a pattern p and a dataset D sometimes it is important to determine whether the pattern represents it or not. In other words, we wish to determine the subset S of D represented by p \(p can also be selected by some query the formula as a query on the dataset. Let p be a pattern, possibly selected by using query language operators, and D a dataset with schema \(a1, ..., an ible with the source schema of p. The data-covering operator, denoted by ?d\(p,D responding to all tuples in D represented by p. More formally d\(p,D t.a1, ..., t.an In the previous expression, t.ai denotes a speci?c component of tuple t belonging to D and p.formula\(t.a1, ..., t.an instantiated by replacing each variable corresponding to a pattern data component with values of the considered tuple t Note that, since the drill-though operator uses the intermediate mapping and the data covering operator uses the formula, the covering ?\(p,D D = ?\(p not be equal to D. This is due to the approximating nature of the pattern formula 5.1.4. Cross-over pattern base operators OCP Pattern-covering. Sometimes it can be useful to have an operator that, given a class of patterns and a dataset, returns all patterns in the class representing that dataset \(a sort of inverse data-covering operation Let c be a pattern class and D a dataset with schema a1, ..., an pattern type. The pattern-covering operator, denoted as ?p\(c,D all patterns in c representing D. More formally p\(c,D t.a1, ..., t.an true Note that: ?p\(c,D p,D 6. Related Work Although signi?cant e?ort has been invested in extending database models to deal with patterns, no coherent approach has been proposed and convincingly implemented for a generic model There exist several standardization e?orts for modeling patterns, like the Predictive Model Markup Language \(PMML  eling approach, the ISO SQL/MM standard [2], which is SQL-based, and the Common Warehouse Model CWM  ing e?ort. Also, the Java Data Mining API \(JDMAPI 3] addresses the need for a language-based management of patterns. Although these approaches try to represent a wide range of data mining result, the theoretical background of these frameworks is not clear. Most importantly, though, they do not provide a generic model capable of handling arbitrary cases of pattern types; on the contrary only a given list of prede?ned pattern types is supported To our knowledge, research has not dealt with the issue of pattern management per se, but, at best, with peripheral proximate problems. For example, the paper by Ganti et. al. [9] deals with the measurement 


per by Ganti et. al. [9] deals with the measurement of similarity \(or deviation, in the authors  vocabulary between decision trees, frequent itemsets and clusters Although this is already a powerful approach, it is not generic enough for our purpose. The most relevant research e?ort in the literature, concerning pattern management is found in the ?eld of inductive databases Proceedings of the 16th International Conference on Scientific and Statistical Database  Management \(SSDBM  04 1099-3371/04 $ 20.00  2004 IEEE meant as databases that, in addition to data, also contain patterns [10], [7]. Our approach di?ers from the inductive database one mainly in two ways. Firstly, while only association rules and string patterns are usually considered there and no attempt is made towards a general pattern model, in our approach no prede?ned pattern types are considered and the main focus lies in devising a general and extensible model for patterns Secondly, di?erently from [10], we claim that the peculiarities of patterns in terms of structure and behavior together with the characteristic of the expected workload on them, call for a logical separation between the database and the pattern-base in order to ensure e?cient handling of both raw data and patterns through dedicated management systems Finally, we remark that even if some languages have been proposed for pattern generation and retrieval 14, 11], they mainly deal with speci?c types of patterns \(in general, association rules sider the more general problem of de?ning safe and su?ciently expressive language for querying heterogeneous patterns 7. Conclusions and Future Work In this paper we have dealt with the issue of modelling and managing patterns in a database-like setting Our approach is enabled through a Pattern-Base Management System, enabling the storage, querying and management of interesting abstractions of data which we call patterns. In this paper, we have \(a de?ned the logical foundations for the global setting of PBMS management through a model that covers data patterns and intermediate mappings and \(b language issues for PBMS management. To this end we presented a pattern speci?cation language for pattern management along with safety constraints for its usage and introduced queries and query operators and identi?ed interesting query classes Several research issues remain open. First, it is an interesting topic to incorporate the notion of type and class hierarchies in the model [15]. Second, we have intentionally avoided a deep discussion of statistical measures in this paper: it is more than a trivial task to de?ne a generic ontology of statistical measures for any kind of patterns out of the various methodologies that exist \(general probabilities Dempster-Schafer, Bayesian Networks, etc. [16 nally, pattern-base management is not a mature technology: as a recent survey shows [6], it is quite cumbersome to leverage their functionality through objectrelational technology and therefore, their design and engineering is an interesting topic of research References 1] Common Warehouse Metamodel \(CWM http://www.omg.org/cwm, 2001 2] ISO SQL/MM Part 6. http://www.sql99.org/SC32/WG4/Progression Documents/FCD/fcddatamining-2001-05.pdf, 2001 3] Java Data Mining API http://www.jcp.org/jsr/detail/73.prt, 2003 4] Predictive Model Markup Language \(PMML http://www.dmg.org 


http://www.dmg.org pmmlspecs v2/pmml v2 0.html, 2003 5] S. Abiteboul and C. Beeri. The power of languages for the manipulation of complex values. VLDB Journal 4\(4  794, 1995 6] B. Catania, A. Maddalena, E. Bertino, I. Duci, and Y.Theodoridis. Towards abenchmark for patternbases http://dke.cti.gr/panda/index.htm, 2003 7] L. De Raedt. A perspective on inductive databases SIGKDD Explorations, 4\(2  77, 2002 8] M. Escobar-Molano, R. Hull, and D. Jacobs. Safety and translation of calculus queries with scalar functions. In Proceedings of PODS, pages 253  264. ACMPress, 1993 9] V. Ganti, R. Ramakrishnan, J. Gehrke, andW.-Y. Loh A framework for measuring distances in data characteristics. PODS, 1999 10] T. Imielinski and H. Mannila. A database perspective on knowledge discovery. Communications of the ACM 39\(11  64, 1996 11] T. Imielinski and A. Virmani. MSQL: A Query Language for Database Mining. Data Mining and Knowledge Discovery, 2\(4  408, 1999 12] P. Kanellakis, G. Kuper, and P. Revesz. Constraint QueryLanguages. Journal of Computer and SystemSciences, 51\(1  52, 1995 13] P. Lyman and H. R. Varian. How much information http://www.sims.berkeley.edu/how-much-info, 2000 14] R.Meo, G. Psaila, and S. Ceri. An Extension to SQL for Mining Association Rules. Data Mining and Knowledge DiscoveryM, 2\(2  224, 1999 15] S. Rizzi, E. Bertino, B. Catania, M. Golfarelli M. Halkidi, M. Terrovitis, P. Vassiliadis, M. Vazirgiannis, and E. Vrachnos. Towards a logical model for patterns. In Proceedings of ER 2003, 2003 16] A. Siblerschatz and A. Tuzhillin. What makes patterns interesting in knowledge discovery systems. IEEE TKDE, 8\(6  974, 1996 17] D. Suciu. Domain-independent queries on databases with external functions. In Proceedings ICDT, volume 893, pages 177  190, 1995 18] M.Terrovitis, P.Vassiliadis, S. Skadopoulos, E. Bertino B. Catania, and A. Maddalena. Modeling and language support for the management of patternbases. Technical Report TR-2004-2, National Technical University of Athens, 2004. Available at http://www.dblab.ece.ntua.gr/pubs Proceedings of the 16th International Conference on Scientific and Statistical Database  Management \(SSDBM  04 1099-3371/04 $ 20.00  2004 IEEE pre></body></html 


The reason of the hiding failure of SWA is the same in Fig.8 Notice the result at x = 0.7646 in Fig.14, because the hiding failure is occurred at the seeds of the sensitive patterns, a high weakness is produced As shown in Fig.15 and Fig.16, the misses cost and dissimil arity of our work decreases as RL2 increases. This is because the larger RL2 is, the less effect on non-sensitive patterns. Also weakness and dissimilarity of SWA are independent of RL2 5. Conclusion In the paper, a novel method improving the balance between sensitive knowledge protecting and discovery on frequent patte rns has been proposed. By setting entries of a sanitization matrix to appropriate values and multiplying the original database by the matrix with some probability policies, a sanitized database is gotten. Moreover, it can avoid F-I Attack absolutely when the confidence level given by users approximates to 1. The experimental results revealed that although misses cost and dissimilarity between the original and sanitized database of our process are little more than SWA, ours provide more safely protection than SWA. Unlike SWA, our sanitization process could not suffer from F-I Attack and the probability policies in our approach also take the minimum support into account, the users only need to decide the confidence level which affects the degree of patterns hiding 6. Reference 1] M. Atallah, E. Bertino, A. Elmagarmid, M. Ibrahim and V. Verykios Disclosure Limitation of Sensitive Rules", Proc. of IEEE Knowledge and Data Engineering Exchange Workshop 1999 2] R. Agrawal and R. Srikant. Fast algorithms for mining association rules. VLDB, Santiago, Chile, 1994 3] R. Agrawal and R. Srikant. Privacy preserving data mining. In ACM SIGMOD, Dallas, Texas, May 2000 4] E. Dasseni, V. Verykios, A. Elmagarmid and E. Bertino, Hiding Association Rules by Using Confidence and Support", Proc. of 4th Intl Information Hiding Workshop \(IHW 5] A. Evfimievski, J. Gehrke, and R. Srikant. Limiting Privacy Breac hed in privacy preserving data mining. SIGMOD/PODS, 2003 6] A. Evfimievski, R. Srikant, R. Agrawal, and J. Gehrke. Privacy preserving mining of association rules. KDD 2002 7] M. Kantarcioglu and C. Clifton. Privacy-preserving distributed mining of association rules on horizontally partitioned data. In ACM SIGMOD Workshop on Research Issues on Data Mining and Knowledge Discovery, June 2002 8] Guanling Lee, Chien-Yu Chang and Arbee L.P Chen. Hiding sensitive patterns in association rules mining. The 28th Annual International Computer Software and Applications Conference 9] Y. Lindell and B. Pinkas. Privacy Preserving Data mining. In CRYPTO, pages 36-54, 2000 10] S. R. M. Oliveira and O. R. Za  ane. Privacy Preserving Frequent Itemset Mining. In Proc. of IEEE ICDM  02 Workshop on Privacy Security, and Data Mining 11] S. R. M. Oliveira and O. R. Za  ane. Algorithms for Balancing Priv acy and Knowledge Discovery in Association Rule Mining. IDEAS  03 12] S. R. M. Oliveira and O. R. Za  ane. Protecting Sensitive Knowledge By Data Sanitization, ICDM  03 13] S. R. M. Oliveira, O. R. Za  ane and Y  cel Saygin. Secure Association Rule Sharing, PAKDD-04 14] Benny Pinks. Cryptographic Techniques For Privacy-Preserving D ata Mining. ACM SIGKDD Explorations Newsletter Vol. 4, Is. 2, 2002 15] S. J. Rizvi and J. R. Haritsa. Maintaining data privacy in association rule mining. VLDB, 2002 16] J. Vaidya and C. W. Clifton. Privacy preserving association rule mining in vertically partitioned data. KDD2002 17] Verykios, V.S.; Elmagarmid, A.K.; Bertino, E.; Saygin, Y.; Dasseni E. Association rule hiding. IEEE Transactions On Knowledge And Data Engineering, Vol. 16, No. 4, April 2004 Proceedings of the 29th Annual International Computer Software and Applications Conference  COMPSAC  05 0730-3157/05 $20.00  2005 IEEE pre></body></html 


pre></body></html 


Batt Power Batt Type Stabilization Type Propulsion Mechanism  of Solar Panels  of Solar Cells Manufacturing Qty Satellites in Constellation On-Orbit Spares Channels Number of Bands Data Storage Processing Power Source type Block Name Thermal Control Material Type Level of Technology Known Inheritance Propulsion station keeping Number of Axes Ground Based Spares Pointing Accuracy APPENDIX C EXISTING MODELS Numerous models are today in use for estimating spacecraft cost Two of the most common are the NASA/Air Force Cost Model and the Aerospace Small Satellite Cost Model Here is a description of the NAFCOM model The NASA/Air Force Cost Model NAFCOM is a parametric estimating toolfor space hardware It is based on historical NASA and Air Force space projects and is primarily used in the very early phases of a development project NAFCOM can be used at the subsystem or component levels The database currently includes 122 missions including 76 unmanned earth orbiting 24 unmanned planetary 11 launch vehicles 8 manned 3 engines It uses parametric relationships to estimate subsystem or component level costs for any aerospace hardware including earth orbital spacecraft manned spacecraft launch vehicle upper stages liquid rocket engines scientific instruments or planetary spacecraft 7 And for the Aerospace Small Satellite Cost Model SSCM employs a parametric methodology for estimation of program cost and is best suited to the early conceptual development phase of a spacecraft program during which time the design is likely to be less mature and when cost and performance trades can be easily performed SSCM consists of a collection of cost-estimating relationships or CERs which estimate the costs of developing andproducing a spacecraft system with the following subsystems  Attitude Determination and Control Subsystem ADCS  Propulsion  Power  Telemetry Tracking  Command TT&C  Command  Data Handling C&DH  Structure  Thermal CERs were also developed for integration assembly and test IA&T program management PM and systems engineering SE and launch and orbital operations support LOOS Individual subsystem cost estimates are statistically rolled up to yield a cost-risk distribution which provides the estimator with a range of cost estimates andpercentiles 8 The SSCM was calibrated from over 100 post-1990 Earth-orbiting andplanetary missions REFERENCES 1 Lack of Disciplined Cost-Estimating Processes Hinders Effective Program Management GAO study 04-642 2 Jilla Cyrus D and Miller David W Satellite Design Past Present and Future International Journal of Small Satellite Engineering 12 February 1997 3 Bearden David A A Complexity Based Risk Assessment of Low-Cost Planetary Missions:When Is A Mission Too Fast and Too Cheap Fourth IAA International Conference On Low-Cost Planetary Missions JHU/APL MAY 2-5 2000 4 Kellogg Mahr and Lobbia An Analogy-based Method for Estimating the Costs of Spacecraft IEEEAC paper 1371 Version 4 5 Hoeting Jennifer A Methodology for Bayesian Model Averaging An Update f 6]btp/ewiieiao iiAaos 7 Keith Smith NASA/Air Force Cost Model Science Applications International Corporation 8 18 


BIOGRAPHIES Lee Fischman served as Principle Investigator for this project Lee is Senior Director of Development at Galorath Incorporated where he directs much of the new product development and research at the firm He developed SEER for Software  Hardware Integrations with Microsoft Project the Comparison Sizing tool COTS Software model in addition to various data mining information extraction and expert systems Previously he was a software designerlprogrammer in the New York financial industry Lee earned a BA from the University of Chicago and an MA from UCLA both in economics Mike Kimel carried out statistical work on the project Mike is an Economist for Galorath Inc in addition to maintaining his own quantitative consulting practice He has also taught Economics and Advanced Statistics at the Graziadio School of Business and Management at Pepperdine University run the Competitive Strategy group for a Fortune 500 Telecom Company and worked as a Consultant at PriceWaterhouse LLC now PriceWaterhouse-Coopers He earned a Ph.D in Economicsfrom UCLA Troy Masters programmed analytic methods and is integrating the Far Out model into its parent product SEER for Hardware previously SEER-H Troy is a Software Engineer with Galorath Incorporated where he has been the primary developer for a range ofproducts He earned a BS in computer science from UCLA David J Pine was our subject matter expert helping us assemble data and gain insight into technical trends Dave is retired after a 34-year career with the National Aeronautics and Space Administration NASA currently is a consultant to various government and industry entities While at NASA his organizations in the Office of the Chief Financial Officer and later at the IPAO at Langley Research Center were responsible for the conduct of major NASA program analyses and evaluations for the NASA Administrator and Deputy Administrator From early 1988 through the end of 1990 he was the Deputy Program Manager for the Hubble Space Telescope Program specifically responsible for the telescope operations and science support aspects of the program He earned a BS in Aerospace Engineering from the Polytechnic Institute of Brooklyn and a Masters of Engineering Administration from the George Washington University 19 


  20 Angeles, where he also received a B.S. in Applied Mathematics  Eric Fetzer is a Senior Member of the Technical Staff at the Jet Propulsion Laboratory, Pasadena, California specializing in satellite observations of the atmosphere.  His scientific interests include planetary boundary layer processes, tropical phenomena, upper tropospheric variability, and climatologies of temperature, water vapor and clouds.  His technical interests include analysis of large data sets, and of multi-sensor observations. He has over 20 peer-reviewed publications and given numerous scientific presentations, public lectures and media interviews about climate science. Eric received a B.A. in Physics from the University of California Berkeley, and a Ph.D. in Astrophysical, Planetary and Atmospheric Sciences from the University of Colorado, Boulder   Amy Braverman is a Senior Statistician at the Jet Propulsion Laboratory, California Institute of Technology She holds a B.A. in Economics from Swarthmore College an M.A. in Mathematics from UCLA, and a Ph.D. in Statistics also from UCLA. Prior to her current position in JPL's Science Data Understanding Group, she was a Caltech Post-doctoral Scholar at the Jet Propulsion Laboratory, and a Scientist in the Flight Sciences Experiments Section of the Science Division. Dr Braverman conducts research on information-theoretic methods for the analysis of massive data sets and streams statistical data fusion, high-dimensional data analysis, and statistical analysis for climate model evaluation and diagnosis. She has published in both the statistics and geoscience literature, and is active in both communities She is a member of the Multi-angle Imaging SpectroRadiometer Science Team, and serves as a member of the Atmospheric Infrared Sounder Science Integration Team. Her responsibilities on both missions include designing data reduction algorithms for massive, remote sensing data sets. Dr. Braverman also holds an appointment in the Department of Statistics at UCLA as Adjunct Associate Professor, and is active in UCLA\222s Center for Environmental Statistics. She is member of the Committee on Applied and Theoretical Statistics of the US National Academy of Science. She has refereed for the Journal of the American Statistical Association, the Journal of Computational and Gr aphical Statistics, IEEE Transactions on Geoscience and Remote Sensing, and the Journal of Applied Meteorology and Climatology Seungwon Lee is a senior member of the High Capability Computing and Modeling Group at Jet Propulsion Laboratory. She is conducti ng research on comet gas dynamics, nonlinear dynamics control, climate model parameterization, Earth science data analysis, parallel computing, and advanced numerical algorithms. She received her Ph.D in Physics fr om the Ohio State University and her M.S. and B.S. in Physics from the Seoul National University, Korea  Matthew Henderson is software engineer in the High Capability Computing and Mode ling group at JPL. His current work includes Web Services and Instrument Data Level 2 subsetting. He received a B.S. Computer Science from CSU Pomona, and is currently pursuing M.S Computer Science  Steven J. Lewis is a member of the Information System and Computer Science staff member at the Jet Propulsion Laboratory.  He received a BS in Mathematics from the University of California, Los Angeles in June 2001, and the MS and Ph.D. Degree from Claremont Graduate University in May 2004 and May 2007, respectively.  He worked as a post doctoral fellow at Keck Graduate Institute from June 2007 until he joined JPL in March of 2008.  During his graduate and post doctoral work, his studies focused on applications of Bayesian methods to hidden Markov models with particular interest and application to protein sequencing.  His work at JPL has focused on integrating web services into various programming platforms for the purposes of accessing NASA satellite data, as well as developing object tracking so ftware and contributing to image enhancement and restoration efforts Van Dang is a member of the Science Data Understanding Group at the Jet Propulsion Laboratory. She was responsible for the NEWS Level 2 processing that generated the formal merged Level 2 data from multiple A-Train instruments  Manuel de la Torre is a Physicist from the Universidad Complutense at Madrid \(Spain\. After finishing his Ph.D work at the University of Bayreuth \(Germany\ on pattern formation in turbulent flows and a 7 1/2 year stunt as Ass and Assoc. Prof. at the Escuela T\351cnica Superior de Ingenieros Aeron\341uticos in Madrid \(Spain\, he came to the Jet Propulsion Laboratory on a 1-year Sabatical leave in 1997 wanting to apply fundamental concepts of nonlinear systems and geophysical fluid dynamics to something that might be directly useful to soci ety. He discovered the JPL as a great place to achieve that goal and extende d his stay a bit longer, becoming Technical staff and working on different aspects of remote sensing, validation of satellite instruments, and data analysis of atmospheric processes and climate  


