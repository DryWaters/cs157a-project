An Efficient Algorithm for Incremental Mining of Association Rules Chin-Chen Chang Department of Information Engineering and Computer Science, Feng Chia University Taichung, Taiwan, R.O.C Department of Computer Science and Information Engineering, National Chung Cheng University, Chiayi, Taiwan, R.O.C ccc@cs.ccu.edu.tw Yu-Chiang Li            Jung-San Lee Department of Computer Science and Information Engineering, National Chung Cheng University, Chiayi, Taiwan, R.O.C lyc, ljs91}@cs.ccu.edu.tw Abstract Incremental algorithms can manipulate the results of earlier mining to derive the final mining output in various businesses.  This study proposes a new algorithm, called 
the New Fast UPdate algorithm \(NFUP incrementally mining association rules from large transaction database.  NFUP is a backward method that only requires scanning incremental database.  Rather than rescanning the original database for some new generated frequent itemsets in the incremental database, we accumulate the occurrence counts of newly generated frequent itemsets and delete infrequent itemsets obviously Thus, NFUP need not rescan the original database and to discover newly generated frequent itemsets.  NFUP has good scalability in our simulation 1. Introduction Recent developments in information science have 
resulted in the rapid accumulation of enormous amounts of data.  Consequently, efficiently managing very large databases and quickly retrieving useful information are very important.  Data mining or knowledge discovery techniques are normally used to discover useful information in data warehouses.  They have come to represent an important field research and have been applied extensively to several areas [7 uding fi nancial analysis, market research, industrial retail and decision support Mining association rules is the core task of numerous data mining techniques.  As the amount of data increases 
designing an efficient mining algorithm becomes increasingly urgent; accordingly, two of the main issues concerning data mining are therefore studied extensively herein.  One is the design of algorithms for mining rules or patterns.  The other is the design of algorithms to update and maintain rules, called incremental mining The most celebrated algorithm of the first type is the Apriori algorithm The Apriori al gorithm solves two sub-problems \(1\nd all frequent itemsets, and \(2\o use these frequent itemsets to generate association rules The first sub-problem importantly governs the overall performance of the mining process.  After frequent 
itemsets have been recognized, the corresponding association rules may be derived easily [3  Other efficient approaches have also been presented, including for example those in [1, 2, 6, 10, 11, 16 Existing mining methods cannot be applied to mine a publication like database efficiently.  A publication database is also a transaction database where each item involves an individual exhibition period r a  publication database in Fig. 1, items A  B and C 
are exhibited from 1996 to 2004. However, item F is exhibited from 2002 to 2004.  Traditional mining techniques ignore the exhibition period of each item and use a unique minimum support threshold.  This measure is unfair for new products.  Therefore, the PPM algorithm has been proposed to solve this problem  
Figure 1. Each item has an individual exhibition period In the real world where large amounts of data grow steadily, some old association rules can become useless and new databases may give rise to some implicitly valid patterns or rules.  Hence, updating rules or patterns is also important.  The FUP algorithm is well known in related to 1 Proceedings of the 15th International Workshop on Research Issues in Data Engineering: Stream Data Mining and Applications \(RID E-SDMAê05 1097-8585/05 $20.00 © 2005 IEEE 


 A sim ple m e thod for solving the updating problem is to reapply the mining algorithm to the entire database, but this approach is time-consuming.  The FUP algorithm reuses information from old frequent itemsets to improve its performance.  Several other approaches to incremental mining have been proposed [5, 9, 11, 13, 14     Although many mining techniques for discovering frequent itemsets and associations have been presented, the process of updating frequent itemsets remains troublesome for incremental databases.  The mining of incremental databases is more complicated than the mining of static transaction databases, and may lead to some severe problems, such as the combination of frequent itemsets occurrence counts in the original database with the new transaction database, or the rescanning of the original database to check whether the itemsets remain frequent while new transactions are added Earlier incremental algorithms have focused on reducing the number of scanning on original database while it is updated.  However, they require the original database to be rescanned at least once in many situations This work presents a novel algorithm NFUP for incremental mining, which is based on FUP.  This algorithm can discover latest rules and does not need to rescan the original database.  This work focuses on the generation of frequent itemsets in incremental publication-like database The rest of this paper is organized as follows. Section 2 introduces some work on association rules.  Then, Section 3 describes the proposed method \(NFUP\  The experimental results of NFUP will be presented in Section 4. Conclusions are finally drawn in Section 5 2. Related Work In 1993, Agrawal et al first defined the mining of association rules in database T h ey c onsi dere d the example following example; 60% of transactions in which bread is purchased are also transactions in which milk is purchased. The formal statement is as follows Let  I   i 1 i 2 i m represent the set of literals, called items The symbol T represents an arbitrary transaction, which is a set of items itemset h that T I Each transaction has a unique identifier TID Let DB be a database of transactions.  Assume X is an itemset; a transaction T contains X if and only if XT An association rule applies in the form XY where X I, Y I and X Y  For example I  ABCDE  X  AC  Y  BE An association rule XY has two properties support and confidence When s of transactions in DB contain XY  the support of the rule XY is s If some of the transactions in DB contain X and, and c also contain Y  then the confidence in the rule XY is c In general, the confidence is expressed in the form confidence XY  support XY   X Given the user-assigned minimum support minSup inimum confidence  minConf thresholds for the transaction database DB the mining of association rules is to find all rules whose support and the confidence, in which are greater than the two respective minimum thresholds.  An itemset is called a frequent itemset when its support is no less than the minSup threshold; otherwise, it is an infrequent itemset  2.1 Apriori Algorithm The Apriori algorithm concentrates primarily on the discovery of frequent itemsets according to a user-defined minSup  h e algorithm relies on t h e fact that an item se t could be frequent only when each of its subset is frequent otherwise, the itemset is infrequent.  In the first pass, the Apriori algorithm constructs and counts all 1-itemsets. \(A k itemset is an itemset that includes k items.\ After it has found all frequent 1-itemsets, the algorithm joins the frequent 1-itemsets with each other to form candidate 2-itemsets.  Apriori scans the transaction database and counts the candidate 2-itemsets to determine which of the 2-itemsets are frequent.  The other passes are made accordingly.  Frequent k 1\sets are joined to form k itemsets whose first k 1 items are identical.  If k 3 Apriori prunes some of the k itemsets; of these k 1\msets have at least one infrequent subset.  All remaining k itemsets constitute candidate k itemsets.  The process is reiterated until no more candidates can be generated Example 2.1 Consider the database presented in Table 1 with a minimum support requirement is 50%.  The database includes 11 transactions.  Accordingly, the supports of the frequent itemsets are at least six.  The first column çTID includes the unique identifier of each transaction, and the Itemsé column lists the set of items of each transaction Let C k be the set of candidate k itemsets and F k be the set of frequent k itemsets.  In the first pass, the database is scanned to count C 1 If the support count of a candidate exceeds or equals six, then the candidate is added to F 1  The outcome is shown in Figure 2.  Then F 1 F 1 forms C 2 Apriori-gen function is used to generate C 2  After th e database has been scanned for a second time, Apriori examines which itemset of C 2 exceeds the predetermined threshold.  Moreover C 3 is generated from F 2 as follows Figure 2 presents two frequent 2-itemsets with identical first item, such as BC and BE Then, Apriori tests whether the 2-itemset CE is frequent.  Since CE is a frequent itemset, all the subsets of BCE are frequent Thus BCE is a candidate 3-itemset, or BCE must be pruned.  Apriori stops to look for frequent itemsets when no candidate 4-itemset can be joined from F 3 Apriori scans the database k times when candidate k itemsets are generated 2 Proceedings of the 15th International Workshop on Research Issues in Data Engineering: Stream Data Mining and Applications \(RID E-SDMAê05 1097-8585/05 $20.00 © 2005 IEEE 


Table 1. An example of a transaction database TID Items 001 A C D E 002 A C D 003 B C E 004 A B C E 005 A B E 006 B C E 007 A B E 008 B C D E 009 A B C D 010 C E F 011 A B C F Pass 1 C 1 Count F 1 Count Scan A 7 A 7 DB B 8 B 8  C 9  C 9 D 4 E 8 E 8 F 2 Pass 2 C 2 C 2 Count F 2 Count AB AB 5 {BC 6 AC Scan AC 5 BE 6 F 1 F 1 AE DB AE 4  CE 6  BC  BC 6 BE BE 6 CE CE 6 Pass 3 C 3 C 3 Count F 3 Count BCE BCE 4   F 2 F 2 Prune  Scan DB  Figure 2. Application of Apriori algorithm 2.2 Fast Update Algorithm \(FUP After a database has been updated, some existing rules are no longer important and new rules may be introduced In 1996, Cheung et al proposed the FUP algorithm to efficiently generate associations in the updated database  h e F U P algorithm relies on Apriori  and c onsi ders only these newly added transactions.  Let db be a set of new transactions and DB  be the updated database \(including all transactions of DB and db   An itemset X is either frequent or infrequent in DB or db Therefore X has four possibilities, as shown in Table 2.  In the first pass, FUP scans db to obtain the occurrence count of each 1-itemset Since the occurrence counts of F k in DB are known in advance, the total occurrence count of arbitrary X is easily calculated if X is in Case 2.  If X is unfortunately in Case 3 DB must be rescanned.  Similarly, the next pass scans db to count the candidate 2-itemsets of db If necessary DB is rescanned.  The process is reiterated until all frequent itemsets have been found.  In the worst case, FUP does not reduce the number of the original database must be scanned Table 2. Four scenarios associated with an itemset in DB  db DB Frequent itemset Infrequent itemset  Frequent itemset Case 1 Frequent Case 2 Infrequent itemset Case 3 Case 4 Infrequent 2.3 Other Incremental Algorithms In 1997, Cheung et al described the FUP 2 algorithm which is a more general incremental technique than FUP FUP 2 is efficient not only on developing of a database but also on trimming as et al proposed another method to accelerate the incremental mining by maintaining the negative border  In 1999 Ayan et al  proposed the UWEP \(Update With Early Pruning\ethod that employs a dynamic look-ahead strategy to update existing frequent itemsets for detecting and removing itemsets that are infrequent in the updated database  In 2001, Lee et al proposed the SWF approach W F  partitions databases into several partitions, and applies a filtering threshold in each partition to generate candidate itemsets.  In 2002, Veloso et al described the ZigZag algorithm which uses tidlist and computes maximal frequent itemsets in the updated database to avoid the generation of many unnecessary candidates 3. New Fast Update Method \(NFUP The key idea behind of previous incremental mining techniques is to reduce the number of times that databases need to be scanned.  Although those techniques may avoid some unnecessary scanning, they do rescan the original database.  The original database is normally much larger than the incremental database.  Therefore, scanning the original database is time-consuming.  This study proposes a new fast update algorithm \(NFUP\for incremental mining of association rules.  NFUP does not require the rescanning of the original database to detect new frequent itemsets or delete invalidate itemsets 3.1 NFUP Algorithm FUP rescans the original database when at least one candidate is in Case 3.  In many situations, new information is more important than old information, such as in publication database, stock transactions, grocery markets 3 Proceedings of the 15th International Workshop on Research Issues in Data Engineering: Stream Data Mining and Applications \(RID E-SDMAê05 1097-8585/05 $20.00 © 2005 IEEE 


or web-log records.  Consequently, a frequent itemset in the incremental database is also important even if it is infrequent in the updated database To mine new interesting rules in updated database NFUP partitions the incremental database logically according to unit time interval \(month, quarter or year, for example\, assume that the ending time of exhibition period is identical.  NFUP progressively accumulates the occurrence count of each candidate according to the partitioning characteristics.  The latest information is at the last partition of incremental database Therefore, NFUP scans each partition backward, namely the last partition is scanned first and the first partition is scanned last.  As in the preceding section, the original transaction database is denoted as DB where db indicates the incremental portion, and DB  signifies the updated database.  The frequent set of itemsets of DB is known in advance.  The new transaction database db includes n unit time intervals.  Logically db can be divided into n portions and each portion is called a partition db  P 1 P 2  P n where P n denotes the partition n  db m, n represent the continuous time interval from partition P m to partition P n where n m 1 and n N Namely db m, n  P m P m+1  P n-1 P n The NFUP algorithm is an Apriori-like algorithm.  The final set of frequent itemsets consists of the three following types 1 set: frequent itemsets in DB   2 set: frequent itemsets in db m, n  m n  infrequent in db m1 n and 3 r set: frequent itemsets in db m, m but infrequent in db m 1 n  For db n, n  P n process starts at 1-itemsets.  Each candidate or frequent itemset has three attributes 1 X count: includes the occurrence count in current partition 2 X start: includes the partition number of the corresponding starting partition when X becomes an element of frequent set, and 3 X type: denotes one of the three types   and r In the beginning, set  set  and set r are empty After P n has been scanned, all frequent 1-itemsets are added into the set. Each frequent 1-itemset is joined to form 2-itemset candidates.  In P n the process is performed like that of Apriori.  NFUP is applied to the next partition P n 1 whenever no more candidate k itemsets can be generated in P n The occurrence count of each candidate in P n 1 is known after P n 1 is scanned.  In each partition, NFUP determines which candidate k itemset will become an element of  or r set and identifies from which partition the k itemset becomes frequent. After P 1 is scanned, the occurrence count is accumulated with that of DB Figure 3 graphically depicts NFUP process for P m where F is the set F is the set, and F r is the r set  Figure 3. Process of NFUP for P m The pseudo-code of NFUP algorithm is presented as follows Input 1 DB  updated database that contain DB original database\with size DB and the incremental database db 1 n with size db 1 n  2 F n m m P 1 k set of all frequent k itemsets in DB where k 1, 2   h  and \(3 s  minSup  Output 1 F  set\frequent itemsets in DB  2 F  set\msets in db m, n  m n but infrequent in db m1 n or infrequent in DB  if m 1 and \(3 F r  r set\itemsets in db m, m but infrequent in db m 1 m 1  Procedure  C m k is the candidate k itemsets in partition m  F k is the set with k items in F  F k is the set with k items in F  F r k is the set with k items in F r   F DB is the set of frequent itemsets in DB 01 F   F   F r   02 for m  n to 1 03 k 1 04 SubProcedure  05 for k 2 to h   06 C m k  Apriori-gen F k 1   07 SubProcedure   08  09  10 forall X F F DB  11 if X F  X F DB  12 F  X 0 13 F  X   F DB  X  14 elseif X F  X F DB   15 F  X    16 elseif X F DB  X F F F r  17 F  X  r   18  19 return F  F and F r  4 Proceedings of the 15th International Workshop on Research Issues in Data Engineering: Stream Data Mining and Applications \(RID E-SDMAê05 1097-8585/05 $20.00 © 2005 IEEE 


In Line 1  and r sets are initialized to empty.  In Lines 4 and 7, SubProcedure\(\o scan a portion of db and to compute the support number of each candidate At the same time, it determines which candidate should be added to a proper frequent set or be ignored.  The Apriori-gen function takes frequent k 1\msets to generate k itemset candidates.  The prune step is included in the Apriori-gen function.  Some of the k itemsets are deleted; of these, at least one k 1\sub-itemset is not in F k 1 From Line 10 to Line 18, the final support value of each frequent itemset of set needs to be added its occurrence count in DB Otherwise, they are the elements of set.  The pseudo-code of SubProcedure is presented as follows SubProcedure  the k th pass in each partition 01 if C m k break 02 if m  n  03 forall X C m k  F  X 0  04 forall X C m k  X count :=0  05 forall T P m scan P m  T transaction 06 forall X subset of T  07  if X C m k  X count  08  09 forall X C m k  10 if X F k  11  if X count s  P P m  12   F  X  m  F  X  X count 13  else  14 if F count F  X ount s  db m,n  15  F  X  X count 16 else  17  F k  F k  X  F k  F k  X  18  F  X  X count 19  F  X     20 elseif X C m k  F k  F k  F r k  21  if X count s  P P m  22   F  X  X count 23 if m  n  F  X   24 else  F r k  F r k  X  F  X  r  25  26  Example 3.1 Consider the transaction database presented in Table 3 with a minimum support requirement is 50 The original database contains five transactions and that six incremental transactions are divided into two portions P 1 P 2  DB corresponds to the time granularity from 1999 to 2001 P 1 and P 2 correspond to the time granularities 2002 and 2003, respectively. All frequent itemsets of DB are known in advance, and presented in Table 4.  Initially, the three types of frequent set are null.  Without loss of generality, suppose DB is the partition zero P 0  frequent k itemsets in P m are also list in Table 4 P 2 is first to be scanned.  In the beginning, these frequent k itemsets in P 2 belong to the set.  Table 5 lists the three types of frequent set.  The column çStarté states the identity of the start partition.  After P 1 is scanned, the set consists of five entries.  In set, the value of start partition of each frequent k itemset is modified to be one.  Four k itemsets are removed to the set because their total occurrence counts are less than the threshold \(6 * 50% = 3\ Furthermore, the three itemsets E  BE and CE are presented in r set Although BE is frequent in db 1, 2 it is infrequent in P 2 as marked by ç*é.  Finally, NFUP adds the occurrence counts of frequent itemsets in DB to the corresponding frequent itemsets of the set.  In Table 5, the final set remains three entries A  B and C The set and r set increase two and one entries, respectively Table 3. Transaction database Date Partition TID Transaction DB 001 A C D E 1999 002 A C D  003 B C E 2001 004 A B C E 005 A B E 2002 P 1 006 B C E 007 A B E 008 B C D E 2003 P 2 009 A B C D 010 C E F 011 A B C F Table 4. Frequent itemsets in each partition P 2 P 1 DB Itemset Count Itemset Count Itemset Count A 2 {B 3 A 4 B 2 {C 2 B 3 C 3 {E 3 C 4 F 2 {BC 2 E 4 AB 2 BE 3 AC 3 AC 2 CE 2 AE 3 BC 2 {BCE 2 BE 3 CF 2 CE 3 ABC 2 As shown in Table 5 from 1999 to 2003, the three publications or products A  B and C very popular because their start partitions are zero AB and  BC are the two elements of the set and P 1 is their start partition.  Thus, from 2002 to 2003, the two combinations of products are interesting AE is in the r set and the start partition is zero.  Hence AE is very popular from 1999 to 2001.  However AE is no longer interesting from 2002 to 2003.  The itemset E is frequent in traditional incremental rules mining such as FUP, while E is in the r set of the mining result of NFUP.  Although the occurrence 5 Proceedings of the 15th International Workshop on Research Issues in Data Engineering: Stream Data Mining and Applications \(RID E-SDMAê05 1097-8585/05 $20.00 © 2005 IEEE 


count of E is eight in DB   E is no longer frequent in the year 2003 Table 5. Frequent itemsets generated incrementally by NFUP After P 2 is scanned After P 1 is scanned Final frequent sets set Start Count set Start Count set Start Count A 2 2 A 1 3 A 0 7 B 2 2 B 1 5 B 0 8 C 2 3 C 1 5 C 0 9 F 2 2 AB 1 3 AB 2 2 BC 1 4 set Start Count AC 2 2 F 2 2 BC 2 2 set Start Count AB 1 3 CF 2 2 F 2 2 AC 2 2 ABC 2 2 AC 2 2 BC 1 4 CF 2 2 CF 2 2 ABC 2 2 ABC 2 2 r set Start Count r set Start Count E 1 3 E 1 3 BE 1 3 AE 0 3 CE 1 2 BE 1 3 CE 1 2 NFUP needs not rescan the original database since the set is frequent in the updated database DB  and the set provides important rules in db m,n Determining all frequent itemsets in DB  as Apriori or FUP, it requires the rescanning of the original database only once to check the set and r set.  However, this rescanning phase is unnecessary because all frequent itemsets in DB  are the subset of r Furthermore, all the itemsets contained in set or r set are interesting.  To determine all frequent itemsets in DB  as Apriori or FUP, the important rule could be deleted by pruning some frequent itemsets from the set or r set The set  r t of the mining result of Apriori in DB  The reason is that if DB is divided into n partitions, then the frequent itemset X must appear as a frequent itemset in least one of the n  4. Experimental Results All the experiments were performed on a 1.5GHz Pentium IV PC with 640 MB of main memory, running under Windows 2000 professional.  The algorithm was coded in Visual C++ 6.0.  The synthetic datasets employed in our experiments are generated by using the same  6 is t h e param eters of the synthetic data generation program We generate the transaction database DB  with size  DB  where the first DB is the original database and the next db  DB   DB is the incremental portion.  The result is shown in Figure 4, where D 100,000 d  100,000 P 1 to 4 T 10 I 4 L 2000, and N 1000 The notation T x I y D z d m P n denotes an updated database DB  where T  x  I  y  D  z  d  m and P  n Figure 4 shows the running time for P 1, 2 and 4.  The minSup threshold is decreased from 1.2% to 0.2%.  NFUP has the best performance when the partition number of db is one Table 6. Parameters  D  Number of transactions in DB  d  Number of transactions in db P Partition number of the incremental db  T  Mean size of the transactions  I  Mean size of the maximal potentially frequent itemsets  L  Number of maximal potentially frequent itemsets N Number of items To test the scalability with the number of transactions of db the number of partitions of db is set to 2.  Figure 5 presents the results.  Consider the two minimum support thresholds 0.2% and 0.4%, the running time slightly increases with the growth of db s size.  Thus, NFUP shows good scalability Figure 6 shows the scalability with the number of transactions of DB where the incremental database is also divided into two partitions.  The curves of 0.2% and 0.4 minimum support thresholds are very flat.  Therefore, the running time of NFUP is irrelevant to the number of transactions of DB       T10.I4.D100k.d100k.P n 0 10 20 30 40 0.2 0.4 0.6 0.8 1 1.2 Minimum Suppport Running time \(sec  n=1 n=2 n=4 Figure 4. Running time of NFUP for n = 1, 2 and 4 6 Proceedings of the 15th International Workshop on Research Issues in Data Engineering: Stream Data Mining and Applications \(RID E-SDMAê05 1097-8585/05 $20.00 © 2005 IEEE 


      T10.I4.D100k.d m P2 0 5 10 15 20 25 20 40 60 80 100  db transaction number k  Running tine \(sec 0.20 0.40 Figure 5. Scalability with the transaction number of db T10.I4.D z d100k.P2 0 5 10 15 20 25 100 200 400 600 800 1000  DB transaction number k  Running time\(sec 0.20 0.40 Figure 6. Scalability with the transaction number of DB 5. Conclusions In the real world, databases are periodically and continually updated.  Therefore, mining must be repeated Valid patterns and rules must to be efficiently generated Incremental mining must usually involve the original database and the new added transactions.  Scanning the original database is very expensive, so the proposed method outperforms others by avoiding the rescanning of the original database This investigation has presented a new method, NFUP for incremental mining.  NFUP does not require the rescanning of the original database and can determine new frequent itemsets at the latest time intervals.  The proposed method uses information available from a following partition to avoid the rescanning of the original database; it requires only the incremental database to be scanned.  In reality, the transaction number of the incremental database is very small in contrast to the original database.  The running time of NFUP rises almost in direct proportion with the transaction number of the incremental database Accordingly, NFUP is suited frequently updated databases In the future, the authors will consider the extension of the NFUP algorithm to sequence rules References  R. C. Agarw al, C  C. Agg arwal and V. V. V   Prasad, çA tree projection algorithm for generation of frequent itemsets Journal of Parallel and Distributed Computing Vol. 61, No 3, pp. 350-361, 2000  C. C. Aggar wal and P  S. Y u Mining associations with the collective strength approach IEEE Trans. Knowledge and Data Engineering Vol. 13, No. 6, pp. 863-873, 2001  R. Agraw al T. Imielinski, and A. S w ami, çMining association rules between sets of items in large databasesé In Proc 1993 ACM SIGMOD Intl. Conf. on Management of Data Washington, D.C., pp. 207-216, May 1993  wa l a n d R Srika nt Fa st a l gorithms for mining association rules,é In Proc. 20th Intl. Conf. on Very Large Data Bases Santiago, Chile, pp. 487-499, Sep. 1994  N. F. A y a n, A. U Tansel and E. Arkun, çAn eff icient algorithm to update large itemsets with early pruning,é In Proc. 5th ACM SIGKDD Intl. Conf. on Knowledge Discovery and Data Mining San Diego, CA, pp. 287-291, Aug. 1999  S. Brin, R Motwani, J. D  Ullman, and S Tsur, çD y n amic itemset counting and implication rules for market basket data In Proc. 1997 ACM SIGMOD Intl. Conf. on Management of Data Tucson, AZ, pp. 255-264, May 1997  M. S. Chen  J. Han and P S Yu, çData mining: An overview from a database perspective IEEE Trans. Knowledge Data Engineering Vol. 8 No. 6, pp. 866-883, 1996  D. W. Ch eung, J. Han  V T. Ng and C. Y  Wong  Maintenance of discovered association rules in large databases: an incremental updating technique,é In Proc. 12th Intl. Conf. on Data Engineering New Orleans, LA, pp 106-114, Feb. 1996  D. W. Cheu ng, S. D. Lee an d B. Kao A gen eral incr em ental technique for maintaining discovered association rules,é In Proc 5th Intl. Conf. on Database Systems for Advanced Applications Melbourne, Australia, pp. 185-194, Apr. 1997  J. Han, J. Pei and Y. Yin Mining frequ ent patterns without candidate generation In Proc 2000 ACM-SIGMOD Intl Conf. on Management of Data Dallas, TX, pp. 1-12, May 2000  T. P. Hong C. Y  Wang, and Y. H Tao A n e w in cremental data mining algorithm using pre-large itemsets Intelligent Data Analysis Vol. 5, No. 2, pp. 111-129, 2001  C. H. Lee M. S. Chen  and C. R. Lin Progressive par tition  miner: An efficient algorithm for mining general temporal association rules IEEE Trans. Knowledge Data Engineering  Vol. 15, No. 4, pp. 1004-1017, 2003  C. H  Lee, C. R  Lin, and M. S. Chen Sliding-window  filtering: An efficient algorithm for incremental mining,é In Proc. 10th Intl Conf. on Information and Knowledge Management Atlanta, GA, pp. 263-270, Nov. 2001  association rules dynamically In Proc. Intl. Symposium on Database Applications in Non-Traditional Environments Kyoto, Japan pp. 84-91, Nov. 1999  T. Y. Ng M. L. Wong, an d P. Bao Incremental mining o f  association patterns on compressed data,é In Proc. Joint 9th IFSA World Congress and 20th NAFIPS Intl. Conf Vancouver, Canada, pp. 441-446, Jul. 2001   S. Yu, çAn effective hash-based algorithm for mining association rules,é In Proc 7 Proceedings of the 15th International Workshop on Research Issues in Data Engineering: Stream Data Mining and Applications \(RID E-SDMAê05 1097-8585/05 $20.00 © 2005 IEEE 


1995 ACM-SIGMOD Intl. Conf. on Management of Data San Jose, CA, pp. 175-186, May 1995  N. L. Sarda and N. V. Srinivas, çAn adap tiv e algorithm for  incremental mining of association rules,é In Proc. 9th Intl Workshop on Database and Expert Systems Applications  Vienna, Austria, pp. 240-245, Aug. 1998  A. Savasere, E. Omiecinsk i, and S. Nav ath e, çAn efficient  algorithm for mining association rules in large databases,é In Proc. 21st Conf. on Very Large Data Bases Zurich Switzerland, pp. 432-444, Sep. 1995  S. Thomas, S. Bod agala K. Alsabti and S. Rank a, çAn  efficient algorithm for the incremental updating of association rules in large database,é In Proc. 3rd Intl. Conf. on Data Mining and Knowledge Discovery Newport Beach, CA, pp 263-266, Aug. 1997  A. Velos o W. Meira Jr  M B. de Carvalho B PÙssas, S  Parthasarathy, and M. J. Zaki, çMining frequent itemsets in evolving databases,é In Proc. 2nd SIAM Intl. Conf. on Data Mining Arlington, VA, Apr. 2002 8 Proceedings of the 15th International Workshop on Research Issues in Data Engineering: Stream Data Mining and Applications \(RID E-SDMAê05 1097-8585/05 $20.00 © 2005 IEEE 


CBA and Neural Networks at 1% confidence level while they are all significantly better than C4.5 decision tree. Taking the interpretability of classification model into account, these two adapted CBA algorithm seem to be appropriate choices for credit scoring because they generated much more compact decision lists \(less sequential rules original CBA. They therefore favour the well-known Occam  s Razor theory and are more suitable for decision makers to understand. A deeper insight into the rules structures shows that original CBA and adapted CBA 1 both focus on generating classification rules that predict good clients \(with bad clients as the default class implication, numerous rules with high confidence but low support have lower ranks than they are in original CBA. These rules are finally discarded since they are not fired by any training samples, which are matched by these rules with higher intensity of implications thus making the decision lists generated by adapted CBA 1 more compact. Adapted CBA 2 mainly mines these classification rules for bad clients \(with good clients as the default class compact rule sets Original CBA Adapted CBA1 Adapted CBA2 C45 NN dataset accuracy no. of rules accuracy num. of rules accuracy no. of rules accuracy accuracy 1 Austr 85.65% 130.5 86.52% 26.4 86.96% 12.4 86.52% 85.07 2 Germ 73.30% 134 74.40% 56.5 73.20% 19.7 72.40% 74.90 3 Bene 72.92% 393 72.30% 186 73.51% 51 70.21% 72.63 Table 2. Experiment results Proceedings of the 2005 IEEE International Conference on e-Business Engineering \(ICEBE  05 0-7695-2430-3/05 $20.00  2005 IEEE In addition, decision makers in financial institution certainly pay more attentions to those rules that predict bad clients, which will be extraordinary costly if they are regarded as good ones 5. Conclusion Intensity of implication is proposed in the beginning as an interestingness measure for association rules Another novel interestingness measure called dilated chi-square is designed by us to reveal the statistical interdependence between the antecedents and consequents of association rules We then adapt CBA algorithm, which can be used to build classifiers based on class association rules, by coupling it with intensity of implication and dilated chi-square respectively. More concretely, Intensity of implication \(or dilated chi-square primary criterion to rank class association rules at the first step of the database coverage pruning procedure in CBA algorithm. Experiments on three credit scoring datasets proved that these two adapted algorithms compared with original CBA, classical C4.5 decision tree and neural network, achieve satisfactory performance and generates classifiers much more compact than CBA 6. Acknowledgement The work was partly supported by National Natural Science Foundation of China \(70231010/70321001 7. References 1] Wang, K. and S. Zhou, Growing decision trees on support-less association rules. in KDD'00. 2000. Boston,MA 2] Liu, B., W. Hsu, and Y. Ma, Integrating Classification and Association Rule Mining. in the 4th International Conference on Discovery and Data Mining. 1998. New 


Conference on Discovery and Data Mining. 1998. New York,U.S 3] Dong, G., et al, CAEP:Classification by aggregating emerging patterns. in 2nd International Conference on Discovery Science,\(DS'99 Artificial Intelligence. 1999. Tokyo,Japan: Springer-Verlag 4] Liu, W., J. Han, and J. Pei, CMAR: Accurate and efficient classification based on multiple class-association rules. in ICDM'01. 2001. San Jose, CA 5] Yin, X. and J. Han, CPAR:Classification based on predictive association rules. in 2003 SIAM International Conference on Data Mining \(SDM'03 Fransisco,CA 6] Agrawal, R. and R. Srikant, Fast algorithm for mining association rules. in the 20th International Conference on Very Large Data Bases. 1994. Santiago,Chile 7] Agrawal, R., T. Imielinski, and A. Swami, Mining association rules between sets of items in large databases. in the ACM SIGMOID Conference on Management of Data 1993. Washington,D.C 8] Guillaume, S., F. Guillet, and J. Philippe, Improving the discovery of association rules with intensity of implication Principles of Data Mining and Knowledge Discovery, 1998 1510: p. 318-327 9] Janssens, D., et al, Adapting the CBA-algorithm by means of intensity of implication. in the First International Conference on Fuzzy Information Processing Theories and Applications. 2003. Beijing, China 10] Gras, G. and A. Lahrer, L'implication statistique: une nouvelle methode d'analysis de donnees. Mathematiques Informatique et Sciences Humaines n 20, 1993 11] Suzuki, E. and Y. Kodratoff, Discovery of  surprising exception rules based on intensity of implication. in PKDD'98. 1998. Berlin: Springer 12] Mills, F., Statistical Methods. 1955: Pitman 13] Lan, Y., et al, Dilated Chi-square: A novel interestingness measure to build accurate and compact decision list. in International conference on intelligent information processing. 2004. Beijing,China 14] Quinlan, J.R., C4.5 programs for machine learning 1993: Morgan Kaufmann 15] Witten, I.H. and E. Frank, Data Mining: practical machine learning tools and techniques with Java implementations. 2000: Morgan Kaufmann, San Francisco 16] Fayyad, U.M. and K.B. Irani, Multi-interval discretization of continuous valued attributes for classification learning. in the Thirteenth International Joint Conference on Artificial Intelligence \(IJCAI Chambery,France: Morgan Kaufmann 17] Blake, C.L. and C.J. Merz, UCI repository of machine learning databases http://www.ics.uci.edu/~mlearn/mlrepository.htm]. 1998 Irvine,CA:University of California, Dept. of Information and Computor Science 18] Dietterich, T.G., Approximate statistical tests for comparing supervised classification learning algorithms Neural Computation, 1998. 10\(7 Proceedings of the 2005 IEEE International Conference on e-Business Engineering \(ICEBE  05 0-7695-2430-3/05 $20.00  2005 IEEE pre></body></html 


absolute values. The results can vary on other computers. But it can be guaranteed that performance ratio of the algorithms will remain the same After making the comparisons with sample data, we came to the conclusion that PD algorithm performs significantly better than the other two especially with larger datasets. PD outperforms DCP and PIP regarding running time. On the other hand, since PD reduces the dataset, mining time does not necessary increase as the number of transactions increases and experiments reveals that PD has better scalability than DCP and PIP. So, PD has the ability to handle the large data mine in practical field like market basket analysis and medical report documents mining 5. References 1] R. Agrawal and R. Srikant, "Fast algoritlnns for mining association rules", VLDB'94, pp. 487-499 2] R. J. Bayardo, "Efficiently mining long patterns from databases", SIGMOD'98, pp.85-93 3] J. Pei, J. Han, and R. Mao, "CLOSET: An Efficient Algorithm for Mining Frequent Closed Itemsets \(PDF Proc. 2000 ACM-SIGMOD International Workshop on Data Mining and Knowledge Discovery, Dallas, TX, May 2000 4] Qinghua Zou, Henry Chiu, Wesley Chu, David Johnson, "Using Pattern Decomposition\( PD Finding All Frequent Patterns in Large Datasets", Computer Science Department University of California - Los Angeles 5] J. Han, J. Pei, and Y. Yin, "Mining Frequent Patterns without Candidate Generation \(PDF  SIGMOD International Con! on Management of Data SIGMOD'OOj, Dallas, TX, May 2000 6] S. Orlando, P. Palmerini, and R. Perego, "The DCP algoritlnn for Frequent Set Counting", Technical Report CS2001-7, Dip. di Informatica, Universita di Venezia 2001.Available at http://www.dsi.unive.itl?orlando/TR017.pdf 7] MD. Mamun-Or-Rashid, MD.Rezaul Karim, "Predictive item pruning FP-tree algoritlnn", The Dhaka University  Journal of Science, VOL. 52, NO. 1, October,2003, pp. 3946 8] Park, J. S., Chen, M.-S., and Yu, P. S, "An Effective Hash Based Algoritlnn for Mining Association Rules", Proc ofthe 1995 ACM-SIGMOD Con! on Management of Data 175-186 9] Brin, S., Motwani, R., Ullman, J., and Tsur, S, "Dynamic Itemset Counting and Implication Rules for Market Basket Data", In Proc. of the 1997 ACM-SIGMOD Conf On Management of Data, 255-264 10] Zaki, M. J., Parthasarathy, S., Ogihara, M., and Li, W New Algoritlnns for Fast Discovery of Association Rules In Proc. of the Third Int'l Con! on Knowledge Discovery in Databases and Data Mining, 283-286 11] Lin, D.-I and Kedem, Z. M., "Pincer-Search: A New Algoritlnn for Discovering the Maximum Frequent Set", In Proc. of the Sixth European Conf on Extending DatabaseTechnology, 1998 12] R. Ramakrishnan, Database Management Systems University of Wisconsin, Madison, WI, USA; International Edition 1998 pre></body></html 


tors such as union, di?erence and intersection are de?ned for pairs of classes of the same pattern type Renaming. Similarly to the relational context, we consider a renaming operator ? that takes a class and a renaming function and changes the names of the pattern attributes according to the speci?ed function Projection. The projection operator allows one to reduce the structure and the measures of the input patterns by projecting out some components. The new expression is obtained by projecting the formula de?ning the expression over the remaining attributes [12 Note that no projection is de?ned over the data source since in this case the structure and the measures would have to be recomputed Let c be a class of pattern type pt. Let ls be a non empty list of attributes appearing in pt.Structure and lm a list of attributes appearing in pt.Measure. Then the projection operator is de?ned as follows ls,lm c id s m f p ? c, p = \(pid, s, d,m, f In the previous de?nition, id ing new pids for patterns, ?mlm\(m projection of the measure component and ?sls\(s ned as follows: \(i s usual relational projection; \(ii sls\(s and removing the rest from set elements. The last component ?ls?lm\(f computed in certain cases, when the theory over which the formula is constructed admits projection. This happens for example for the polynomial constraint theory 12 Selection. The selection operator allows one to select the patterns belonging to one class that satisfy a certain predicate, involving any possible pattern component, chosen among the ones presented in Section 5.1.1 Let c be a class of pattern type pt. Let pr be a predicate. Then, the selection operator is de?ned as follows pr\(c p Join. The join operation provides a way to combine patterns belonging to two di?erent classes according to a join predicate and a composition function speci?ed by the user Proceedings of the 16th International Conference on Scientific and Statistical Database  Management \(SSDBM  04 1099-3371/04 $ 20.00  2004 IEEE Let c1 and c2 be two classes over two pattern types pt1 and pt2. A join predicate F is any predicate de?ned over a component of patterns in c1 and a component of patterns in c2. A composition function c pattern types pt1 and pt2 is a 4-tuple of functions c cStructureSchema, cDataSchema, cMeasureSchema, cFormula one for each pattern component. For example, function cStructureSchema takes as input two structure values of the right type and returns a new structure value, for a possible new pattern type, generated by the join. Functions for the other pattern components are similarly de?ned. Given two patterns p1 = \(pid1, s1, d1,m1, f1 p2 = \(pid2, s2, d2,m2, f2 p1, p2 ned as the pattern p with the following components Structure : cStructureSchema\(s1, s2 Data : cDataSchema\(d1, d2 Measure : cMeasureSchema\(m1,m2 Formula : cformula\(f1, f2 The join of c1 and c2 with respect to the join predicate F and the composition function c, denoted by c 1   F  c  c 2   i s  n o w  d e  n e d  a s  f o l l o w s    F  c  c 2     c  p 1   p 2   p 1    c 1  p 2    c 2  F   p 1   p 2     t r u e   5.1.3. Cross-over database operators OCD Drill-Through. The drill-through operator allows one to 


Drill-Through. The drill-through operator allows one to navigate from the pattern layer to the raw data layer Thus it takes as input a pattern class and it returns a raw data set. More formally, let c be a class of pattern type pt and let d be an instance of the data schema ds of pt. Then, the drill-through operator is denoted by c c Data-covering. Given a pattern p and a dataset D sometimes it is important to determine whether the pattern represents it or not. In other words, we wish to determine the subset S of D represented by p \(p can also be selected by some query the formula as a query on the dataset. Let p be a pattern, possibly selected by using query language operators, and D a dataset with schema \(a1, ..., an ible with the source schema of p. The data-covering operator, denoted by ?d\(p,D responding to all tuples in D represented by p. More formally d\(p,D t.a1, ..., t.an In the previous expression, t.ai denotes a speci?c component of tuple t belonging to D and p.formula\(t.a1, ..., t.an instantiated by replacing each variable corresponding to a pattern data component with values of the considered tuple t Note that, since the drill-though operator uses the intermediate mapping and the data covering operator uses the formula, the covering ?\(p,D D = ?\(p not be equal to D. This is due to the approximating nature of the pattern formula 5.1.4. Cross-over pattern base operators OCP Pattern-covering. Sometimes it can be useful to have an operator that, given a class of patterns and a dataset, returns all patterns in the class representing that dataset \(a sort of inverse data-covering operation Let c be a pattern class and D a dataset with schema a1, ..., an pattern type. The pattern-covering operator, denoted as ?p\(c,D all patterns in c representing D. More formally p\(c,D t.a1, ..., t.an true Note that: ?p\(c,D p,D 6. Related Work Although signi?cant e?ort has been invested in extending database models to deal with patterns, no coherent approach has been proposed and convincingly implemented for a generic model There exist several standardization e?orts for modeling patterns, like the Predictive Model Markup Language \(PMML  eling approach, the ISO SQL/MM standard [2], which is SQL-based, and the Common Warehouse Model CWM  ing e?ort. Also, the Java Data Mining API \(JDMAPI 3] addresses the need for a language-based management of patterns. Although these approaches try to represent a wide range of data mining result, the theoretical background of these frameworks is not clear. Most importantly, though, they do not provide a generic model capable of handling arbitrary cases of pattern types; on the contrary only a given list of prede?ned pattern types is supported To our knowledge, research has not dealt with the issue of pattern management per se, but, at best, with peripheral proximate problems. For example, the paper by Ganti et. al. [9] deals with the measurement 


per by Ganti et. al. [9] deals with the measurement of similarity \(or deviation, in the authors  vocabulary between decision trees, frequent itemsets and clusters Although this is already a powerful approach, it is not generic enough for our purpose. The most relevant research e?ort in the literature, concerning pattern management is found in the ?eld of inductive databases Proceedings of the 16th International Conference on Scientific and Statistical Database  Management \(SSDBM  04 1099-3371/04 $ 20.00  2004 IEEE meant as databases that, in addition to data, also contain patterns [10], [7]. Our approach di?ers from the inductive database one mainly in two ways. Firstly, while only association rules and string patterns are usually considered there and no attempt is made towards a general pattern model, in our approach no prede?ned pattern types are considered and the main focus lies in devising a general and extensible model for patterns Secondly, di?erently from [10], we claim that the peculiarities of patterns in terms of structure and behavior together with the characteristic of the expected workload on them, call for a logical separation between the database and the pattern-base in order to ensure e?cient handling of both raw data and patterns through dedicated management systems Finally, we remark that even if some languages have been proposed for pattern generation and retrieval 14, 11], they mainly deal with speci?c types of patterns \(in general, association rules sider the more general problem of de?ning safe and su?ciently expressive language for querying heterogeneous patterns 7. Conclusions and Future Work In this paper we have dealt with the issue of modelling and managing patterns in a database-like setting Our approach is enabled through a Pattern-Base Management System, enabling the storage, querying and management of interesting abstractions of data which we call patterns. In this paper, we have \(a de?ned the logical foundations for the global setting of PBMS management through a model that covers data patterns and intermediate mappings and \(b language issues for PBMS management. To this end we presented a pattern speci?cation language for pattern management along with safety constraints for its usage and introduced queries and query operators and identi?ed interesting query classes Several research issues remain open. First, it is an interesting topic to incorporate the notion of type and class hierarchies in the model [15]. Second, we have intentionally avoided a deep discussion of statistical measures in this paper: it is more than a trivial task to de?ne a generic ontology of statistical measures for any kind of patterns out of the various methodologies that exist \(general probabilities Dempster-Schafer, Bayesian Networks, etc. [16 nally, pattern-base management is not a mature technology: as a recent survey shows [6], it is quite cumbersome to leverage their functionality through objectrelational technology and therefore, their design and engineering is an interesting topic of research References 1] Common Warehouse Metamodel \(CWM http://www.omg.org/cwm, 2001 2] ISO SQL/MM Part 6. http://www.sql99.org/SC32/WG4/Progression Documents/FCD/fcddatamining-2001-05.pdf, 2001 3] Java Data Mining API http://www.jcp.org/jsr/detail/73.prt, 2003 4] Predictive Model Markup Language \(PMML http://www.dmg.org 


http://www.dmg.org pmmlspecs v2/pmml v2 0.html, 2003 5] S. Abiteboul and C. Beeri. The power of languages for the manipulation of complex values. VLDB Journal 4\(4  794, 1995 6] B. Catania, A. Maddalena, E. Bertino, I. Duci, and Y.Theodoridis. Towards abenchmark for patternbases http://dke.cti.gr/panda/index.htm, 2003 7] L. De Raedt. A perspective on inductive databases SIGKDD Explorations, 4\(2  77, 2002 8] M. Escobar-Molano, R. Hull, and D. Jacobs. Safety and translation of calculus queries with scalar functions. In Proceedings of PODS, pages 253  264. ACMPress, 1993 9] V. Ganti, R. Ramakrishnan, J. Gehrke, andW.-Y. Loh A framework for measuring distances in data characteristics. PODS, 1999 10] T. Imielinski and H. Mannila. A database perspective on knowledge discovery. Communications of the ACM 39\(11  64, 1996 11] T. Imielinski and A. Virmani. MSQL: A Query Language for Database Mining. Data Mining and Knowledge Discovery, 2\(4  408, 1999 12] P. Kanellakis, G. Kuper, and P. Revesz. Constraint QueryLanguages. Journal of Computer and SystemSciences, 51\(1  52, 1995 13] P. Lyman and H. R. Varian. How much information http://www.sims.berkeley.edu/how-much-info, 2000 14] R.Meo, G. Psaila, and S. Ceri. An Extension to SQL for Mining Association Rules. Data Mining and Knowledge DiscoveryM, 2\(2  224, 1999 15] S. Rizzi, E. Bertino, B. Catania, M. Golfarelli M. Halkidi, M. Terrovitis, P. Vassiliadis, M. Vazirgiannis, and E. Vrachnos. Towards a logical model for patterns. In Proceedings of ER 2003, 2003 16] A. Siblerschatz and A. Tuzhillin. What makes patterns interesting in knowledge discovery systems. IEEE TKDE, 8\(6  974, 1996 17] D. Suciu. Domain-independent queries on databases with external functions. In Proceedings ICDT, volume 893, pages 177  190, 1995 18] M.Terrovitis, P.Vassiliadis, S. Skadopoulos, E. Bertino B. Catania, and A. Maddalena. Modeling and language support for the management of patternbases. Technical Report TR-2004-2, National Technical University of Athens, 2004. Available at http://www.dblab.ece.ntua.gr/pubs Proceedings of the 16th International Conference on Scientific and Statistical Database  Management \(SSDBM  04 1099-3371/04 $ 20.00  2004 IEEE pre></body></html 


The reason of the hiding failure of SWA is the same in Fig.8 Notice the result at x = 0.7646 in Fig.14, because the hiding failure is occurred at the seeds of the sensitive patterns, a high weakness is produced As shown in Fig.15 and Fig.16, the misses cost and dissimil arity of our work decreases as RL2 increases. This is because the larger RL2 is, the less effect on non-sensitive patterns. Also weakness and dissimilarity of SWA are independent of RL2 5. Conclusion In the paper, a novel method improving the balance between sensitive knowledge protecting and discovery on frequent patte rns has been proposed. By setting entries of a sanitization matrix to appropriate values and multiplying the original database by the matrix with some probability policies, a sanitized database is gotten. Moreover, it can avoid F-I Attack absolutely when the confidence level given by users approximates to 1. The experimental results revealed that although misses cost and dissimilarity between the original and sanitized database of our process are little more than SWA, ours provide more safely protection than SWA. Unlike SWA, our sanitization process could not suffer from F-I Attack and the probability policies in our approach also take the minimum support into account, the users only need to decide the confidence level which affects the degree of patterns hiding 6. Reference 1] M. Atallah, E. Bertino, A. Elmagarmid, M. Ibrahim and V. Verykios Disclosure Limitation of Sensitive Rules", Proc. of IEEE Knowledge and Data Engineering Exchange Workshop 1999 2] R. Agrawal and R. Srikant. Fast algorithms for mining association rules. VLDB, Santiago, Chile, 1994 3] R. Agrawal and R. Srikant. Privacy preserving data mining. In ACM SIGMOD, Dallas, Texas, May 2000 4] E. Dasseni, V. Verykios, A. Elmagarmid and E. Bertino, Hiding Association Rules by Using Confidence and Support", Proc. of 4th Intl Information Hiding Workshop \(IHW 5] A. Evfimievski, J. Gehrke, and R. Srikant. Limiting Privacy Breac hed in privacy preserving data mining. SIGMOD/PODS, 2003 6] A. Evfimievski, R. Srikant, R. Agrawal, and J. Gehrke. Privacy preserving mining of association rules. KDD 2002 7] M. Kantarcioglu and C. Clifton. Privacy-preserving distributed mining of association rules on horizontally partitioned data. In ACM SIGMOD Workshop on Research Issues on Data Mining and Knowledge Discovery, June 2002 8] Guanling Lee, Chien-Yu Chang and Arbee L.P Chen. Hiding sensitive patterns in association rules mining. The 28th Annual International Computer Software and Applications Conference 9] Y. Lindell and B. Pinkas. Privacy Preserving Data mining. In CRYPTO, pages 36-54, 2000 10] S. R. M. Oliveira and O. R. Za  ane. Privacy Preserving Frequent Itemset Mining. In Proc. of IEEE ICDM  02 Workshop on Privacy Security, and Data Mining 11] S. R. M. Oliveira and O. R. Za  ane. Algorithms for Balancing Priv acy and Knowledge Discovery in Association Rule Mining. IDEAS  03 12] S. R. M. Oliveira and O. R. Za  ane. Protecting Sensitive Knowledge By Data Sanitization, ICDM  03 13] S. R. M. Oliveira, O. R. Za  ane and Y  cel Saygin. Secure Association Rule Sharing, PAKDD-04 14] Benny Pinks. Cryptographic Techniques For Privacy-Preserving D ata Mining. ACM SIGKDD Explorations Newsletter Vol. 4, Is. 2, 2002 15] S. J. Rizvi and J. R. Haritsa. Maintaining data privacy in association rule mining. VLDB, 2002 16] J. Vaidya and C. W. Clifton. Privacy preserving association rule mining in vertically partitioned data. KDD2002 17] Verykios, V.S.; Elmagarmid, A.K.; Bertino, E.; Saygin, Y.; Dasseni E. Association rule hiding. IEEE Transactions On Knowledge And Data Engineering, Vol. 16, No. 4, April 2004 Proceedings of the 29th Annual International Computer Software and Applications Conference  COMPSAC  05 0730-3157/05 $20.00  2005 IEEE pre></body></html 


pre></body></html 


Batt Power Batt Type Stabilization Type Propulsion Mechanism  of Solar Panels  of Solar Cells Manufacturing Qty Satellites in Constellation On-Orbit Spares Channels Number of Bands Data Storage Processing Power Source type Block Name Thermal Control Material Type Level of Technology Known Inheritance Propulsion station keeping Number of Axes Ground Based Spares Pointing Accuracy APPENDIX C EXISTING MODELS Numerous models are today in use for estimating spacecraft cost Two of the most common are the NASA/Air Force Cost Model and the Aerospace Small Satellite Cost Model Here is a description of the NAFCOM model The NASA/Air Force Cost Model NAFCOM is a parametric estimating toolfor space hardware It is based on historical NASA and Air Force space projects and is primarily used in the very early phases of a development project NAFCOM can be used at the subsystem or component levels The database currently includes 122 missions including 76 unmanned earth orbiting 24 unmanned planetary 11 launch vehicles 8 manned 3 engines It uses parametric relationships to estimate subsystem or component level costs for any aerospace hardware including earth orbital spacecraft manned spacecraft launch vehicle upper stages liquid rocket engines scientific instruments or planetary spacecraft 7 And for the Aerospace Small Satellite Cost Model SSCM employs a parametric methodology for estimation of program cost and is best suited to the early conceptual development phase of a spacecraft program during which time the design is likely to be less mature and when cost and performance trades can be easily performed SSCM consists of a collection of cost-estimating relationships or CERs which estimate the costs of developing andproducing a spacecraft system with the following subsystems  Attitude Determination and Control Subsystem ADCS  Propulsion  Power  Telemetry Tracking  Command TT&C  Command  Data Handling C&DH  Structure  Thermal CERs were also developed for integration assembly and test IA&T program management PM and systems engineering SE and launch and orbital operations support LOOS Individual subsystem cost estimates are statistically rolled up to yield a cost-risk distribution which provides the estimator with a range of cost estimates andpercentiles 8 The SSCM was calibrated from over 100 post-1990 Earth-orbiting andplanetary missions REFERENCES 1 Lack of Disciplined Cost-Estimating Processes Hinders Effective Program Management GAO study 04-642 2 Jilla Cyrus D and Miller David W Satellite Design Past Present and Future International Journal of Small Satellite Engineering 12 February 1997 3 Bearden David A A Complexity Based Risk Assessment of Low-Cost Planetary Missions:When Is A Mission Too Fast and Too Cheap Fourth IAA International Conference On Low-Cost Planetary Missions JHU/APL MAY 2-5 2000 4 Kellogg Mahr and Lobbia An Analogy-based Method for Estimating the Costs of Spacecraft IEEEAC paper 1371 Version 4 5 Hoeting Jennifer A Methodology for Bayesian Model Averaging An Update f 6]btp/ewiieiao iiAaos 7 Keith Smith NASA/Air Force Cost Model Science Applications International Corporation 8 18 


BIOGRAPHIES Lee Fischman served as Principle Investigator for this project Lee is Senior Director of Development at Galorath Incorporated where he directs much of the new product development and research at the firm He developed SEER for Software  Hardware Integrations with Microsoft Project the Comparison Sizing tool COTS Software model in addition to various data mining information extraction and expert systems Previously he was a software designerlprogrammer in the New York financial industry Lee earned a BA from the University of Chicago and an MA from UCLA both in economics Mike Kimel carried out statistical work on the project Mike is an Economist for Galorath Inc in addition to maintaining his own quantitative consulting practice He has also taught Economics and Advanced Statistics at the Graziadio School of Business and Management at Pepperdine University run the Competitive Strategy group for a Fortune 500 Telecom Company and worked as a Consultant at PriceWaterhouse LLC now PriceWaterhouse-Coopers He earned a Ph.D in Economicsfrom UCLA Troy Masters programmed analytic methods and is integrating the Far Out model into its parent product SEER for Hardware previously SEER-H Troy is a Software Engineer with Galorath Incorporated where he has been the primary developer for a range ofproducts He earned a BS in computer science from UCLA David J Pine was our subject matter expert helping us assemble data and gain insight into technical trends Dave is retired after a 34-year career with the National Aeronautics and Space Administration NASA currently is a consultant to various government and industry entities While at NASA his organizations in the Office of the Chief Financial Officer and later at the IPAO at Langley Research Center were responsible for the conduct of major NASA program analyses and evaluations for the NASA Administrator and Deputy Administrator From early 1988 through the end of 1990 he was the Deputy Program Manager for the Hubble Space Telescope Program specifically responsible for the telescope operations and science support aspects of the program He earned a BS in Aerospace Engineering from the Polytechnic Institute of Brooklyn and a Masters of Engineering Administration from the George Washington University 19 


  20 Angeles, where he also received a B.S. in Applied Mathematics  Eric Fetzer is a Senior Member of the Technical Staff at the Jet Propulsion Laboratory, Pasadena, California specializing in satellite observations of the atmosphere.  His scientific interests include planetary boundary layer processes, tropical phenomena, upper tropospheric variability, and climatologies of temperature, water vapor and clouds.  His technical interests include analysis of large data sets, and of multi-sensor observations. He has over 20 peer-reviewed publications and given numerous scientific presentations, public lectures and media interviews about climate science. Eric received a B.A. in Physics from the University of California Berkeley, and a Ph.D. in Astrophysical, Planetary and Atmospheric Sciences from the University of Colorado, Boulder   Amy Braverman is a Senior Statistician at the Jet Propulsion Laboratory, California Institute of Technology She holds a B.A. in Economics from Swarthmore College an M.A. in Mathematics from UCLA, and a Ph.D. in Statistics also from UCLA. Prior to her current position in JPL's Science Data Understanding Group, she was a Caltech Post-doctoral Scholar at the Jet Propulsion Laboratory, and a Scientist in the Flight Sciences Experiments Section of the Science Division. Dr Braverman conducts research on information-theoretic methods for the analysis of massive data sets and streams statistical data fusion, high-dimensional data analysis, and statistical analysis for climate model evaluation and diagnosis. She has published in both the statistics and geoscience literature, and is active in both communities She is a member of the Multi-angle Imaging SpectroRadiometer Science Team, and serves as a member of the Atmospheric Infrared Sounder Science Integration Team. Her responsibilities on both missions include designing data reduction algorithms for massive, remote sensing data sets. Dr. Braverman also holds an appointment in the Department of Statistics at UCLA as Adjunct Associate Professor, and is active in UCLA\222s Center for Environmental Statistics. She is member of the Committee on Applied and Theoretical Statistics of the US National Academy of Science. She has refereed for the Journal of the American Statistical Association, the Journal of Computational and Gr aphical Statistics, IEEE Transactions on Geoscience and Remote Sensing, and the Journal of Applied Meteorology and Climatology Seungwon Lee is a senior member of the High Capability Computing and Modeling Group at Jet Propulsion Laboratory. She is conducti ng research on comet gas dynamics, nonlinear dynamics control, climate model parameterization, Earth science data analysis, parallel computing, and advanced numerical algorithms. She received her Ph.D in Physics fr om the Ohio State University and her M.S. and B.S. in Physics from the Seoul National University, Korea  Matthew Henderson is software engineer in the High Capability Computing and Mode ling group at JPL. His current work includes Web Services and Instrument Data Level 2 subsetting. He received a B.S. Computer Science from CSU Pomona, and is currently pursuing M.S Computer Science  Steven J. Lewis is a member of the Information System and Computer Science staff member at the Jet Propulsion Laboratory.  He received a BS in Mathematics from the University of California, Los Angeles in June 2001, and the MS and Ph.D. Degree from Claremont Graduate University in May 2004 and May 2007, respectively.  He worked as a post doctoral fellow at Keck Graduate Institute from June 2007 until he joined JPL in March of 2008.  During his graduate and post doctoral work, his studies focused on applications of Bayesian methods to hidden Markov models with particular interest and application to protein sequencing.  His work at JPL has focused on integrating web services into various programming platforms for the purposes of accessing NASA satellite data, as well as developing object tracking so ftware and contributing to image enhancement and restoration efforts Van Dang is a member of the Science Data Understanding Group at the Jet Propulsion Laboratory. She was responsible for the NEWS Level 2 processing that generated the formal merged Level 2 data from multiple A-Train instruments  Manuel de la Torre is a Physicist from the Universidad Complutense at Madrid \(Spain\. After finishing his Ph.D work at the University of Bayreuth \(Germany\ on pattern formation in turbulent flows and a 7 1/2 year stunt as Ass and Assoc. Prof. at the Escuela T\351cnica Superior de Ingenieros Aeron\341uticos in Madrid \(Spain\, he came to the Jet Propulsion Laboratory on a 1-year Sabatical leave in 1997 wanting to apply fundamental concepts of nonlinear systems and geophysical fluid dynamics to something that might be directly useful to soci ety. He discovered the JPL as a great place to achieve that goal and extende d his stay a bit longer, becoming Technical staff and working on different aspects of remote sensing, validation of satellite instruments, and data analysis of atmospheric processes and climate  


