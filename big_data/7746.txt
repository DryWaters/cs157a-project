Improved Fuzzy Space-Intervals Based Sequential Pattern Mining Technical Solution Harsha Nair Department of Information Technology Rajagiri School of Engineering and Technology Cochin India harsha7hari@gmail.com Neeba E A Department of Information Technology Rajagiri School of Engineering and Technology Cochin India neeba_e_a@yahoo.com Abstract One of the sub areas of the data mining includes sequential pattern mining This mining algorithm is to find the repeating patterns after mining the sequence databases These are used to find the relation between the various items in the data for different purposes As these data keep changing according to the change in time mining should be done on incremented or updated database to obtain the frequent sequential patterns The proposed algorithm in this paper uses modified algorithm of sequential pattern mining including concepts of fuzzy space intervals. In this algorithm frequently occurring sequential patterns in the sequence database are mined using apriori like method Fuzzy theory is used for mining the space interval between the frequently occurring sequences The sequentially occurring candidate patterns are found first After that follows the frequently occurring sequential patterns which are found by calculating the minimum fuzzy support along with the use of the fuzzy number Each space cluster is found by fuzzy support computation The final results comprises the frequently occurring fuzzy space sequentially based patterns At last the outcome also confirms the excellence of the suggested MISPFSI algorithm Keywords—sequential pattern mining minimum support minimum support threshold frequent sequential patterns fuzzy support; space cluster I I NTRODUCTION A sequence database is to store sequences of ordered events This storage can be maintained with or without notions of time This mining of sequential pattern is finding out the relativity between the various sequential events and for finding out if there exist any particular order for the happening of those events We are able to find the patterns that are sequential for particular individual items as well as of the different items too It is the method of mining out certain sequential patterns of which support cro sses an already defined minimal support threshold So far various types of sequential pattern mining algorithm’s proposals have been made in 2 3 4 5  6  7  a n d  16  The proposal by R.Agrawal AprioriAll algorithm i s t h e  first and basic algorithm of sequential pattern mining This algorithm find out the patterns which come at certain regularity in a sequence database This algorithm states its property that Any frequent pattern’s sub pattern must be frequent T h e n t h e s e que n t i a l d a t a b a s e s c a nni n g i s do n e t o  do the support c h e c k o f e v e r y s i n g l e c a n di d a t e f o r f i n di n g  out the frequently occurring sequential patterns with respect to the minimal support Several different mining techniques are found to mine the data and their survey and descriptions are in  11 12   13  14   15  a n d 17 In this paper, Modified Integrated Sequential Pattern mining with Fuzzy Space Intervals MISPFSI\lgorithm is proposed Proposed algorithm’s core idea is to make use of the Apriori like method for mining the large sequential patterns from the sequence database At the starting the sequential patterns which are candidate patterns are found from the sequence database These lengthy sequentially occurring patterns are discovered by comparing the support of each sequentially occurring candidate patterns with the minimal support threshold If t h e s e quential pattern’s length will become equal to or greater than two each space cluster is allotted with the fuzzy number and then their fuzzy support is calculated According to the fuzzy space intervals the sequential patterns are mined At last the result of MISPFSI algorithm is inclusive of the actual lengthy sequential patterns Evaluation of the performance of MISPFSI algorithm with respect to the ISPFTI algorithm 1 i s d o n e  II A BBREVIATIONS AND ACRONYMS Several abbreviations and acronyms used in this paper are explained as below 1 MISPFSI Modified integrated sequential pattern mining with fuzzy space intervals 2 ISPFTI  Integrated Sequential Pattern mining with Fuzzy Time Intervals 3 Min sup  Minimum support 4 fsup  Fuzzy support 978-1-4799-7849-6/15/$31.00 ©2015 IEEE 


2015 IEEE International Conference on Computational Intelligence and Computing Research III D EFINITIONS AND A LGORITHM In this paper long sequentially occurring patterns are detected using the features like fuzzy set theory 5  8  a nd minimum support threshold A Definitions The sequence of data is presented here as the order of item sets in which each item set is connected to the particular transaction Frequent item sets will have support equal to or greater than the minimalized support threshold defined by the user The terms used in the sequential pattern mining algorithm including fuzzy space intervals are keyed out as followed  A sequence denoted as‘s’ is presented as {\(I 1  I 2  I m  where I j belongs to s 1  s n  I j and s i are item sets  A transaction denoted as t is s id I i I j I m  in which s id is the transaction identifier and the corresponding sequence which is I i I j I m belongs to s 1 s n   Support is calculated as sup\(s  s id s\|\(s id s belongs to S  If the transaction’s percentage in S which contains s is equal to or greater than the user defined minimum support min sup then the item set s is known frequent in sequence database S  The space cluster between the two item sets a and b is S ab s 1 n 1  s 2 n 2 s k n k where s i is space interval in between the a and b  the count of the sequence a b is n i s i s i+1  When the difference is calculated between the time intervals s i and s i+1 and is found maximum then partition of S ab will be into two set of S ab s 1 s i s 1 n 1 s i n i  and set of S ab s i+1 s k s i+1 n i+1 s k n k   Let a sequence S= {\(I 1  I 2  I m  and a fuzzy space-interval sequence be fs=<fs 1  1 2  fs r-1 r-1 r fs r  where n r 1andfs 1 fs r are item sets occurred  The fuzzy support of space cluster s i s j etween item sets a and b is interval in-between the frequent sequences Steps of MISPFSI algorithm is as follows  Step1 List out all frequent length 1 sequences L 1  That is all the frequent sequences that have length equal to one are found Sequence database is build first then the support calculation of all the item sets is done. If the support is equal to or greater than the minimal support, then it is known as a frequently happening item set and also called as frequent 1sequence The collection of every 1-se quences is known as L 1   Step 2 List out L 2 the frequently occurring length 2 sequences C 2  Candidate 2-sequences, that is candidate sequences with length equal to 2 are built by combining L 1 with L 1  If any of the 2-sequence’s support in C 2 is equal to or greater than the minimal support then is called as a frequent 2-sequence Thus L 2 is the set of these frequent 2-sequences  Step 3 Discover out the frequently occurring fuzzy space 2-sequences L 2  For each length 2 sequence s a  s b of L 2  the below operations are done to obtain the space clusters of each L 2  1 Enter and maintain in an increasing manner all the space-intervals along with its frequencies S ab s 1 n 1 s 2 n 2 s k n k  is the space interval where s i s i+1  i 1,..,\(k-1 and n i is the frequency of the occurrence of s i  2 Each space interval of the 2-sequence is divided into clusters having similar space intervals on the following condition If the differences between all the successively occurring space intervals is shown equal then that L 2 is a nondivisible cluster and it is preserved Else partition the L 2 to 2 space clusters For instance, Consider a space cluster, S a,b  s 1 n 1 s i n i s i+1 n i+1 s k n k  In this if the time difference is maximum in-between the fsup a b s 1 s i   i p=1 ab s 1 s i s p n p  N 1 intervals s and s  then S  will be partitioned ii+1 a,b in which N is the overall count of transactions When fsup a, b s 1 s i  min sup then S a, b s 1 s i  space cluster is preserved B MISPFSI Algorithm The algorithm suggested in this paper is the MISPFSI The algorithm uses modified algorithm of sequential pattern mining including concepts of fuzzy space intervals The concept of algorithm is mining the frequently occurring sequential patterns within the database of sequences The concept of Fuzzy theory 5 i s u s e d h e r e f o r m i ni n g t h e s p a c e into two set of S a,b s 1 s i s 1 n 1 s i n i ndset of S a,b s i+1 s k s i+1 n i+1 s k n k  3 To each of the obtained clusters, assign the trapezoidal fuzzy number 4 The fuzzy support fsup  is calculated for every discovered space clusters If the space cluster’s fuzzy support is equal to or greater than the minimal support threshold,   then that space cluster is took over and set aside  Step 4 List out the clusters that has to be reserved To find out the fuzzy support of space cluster the function is shown below 


2015 IEEE International Conference on Computational Intelligence and Computing Research Minim um Suppo rt Thresh old  Time Taken ms MISPFSI ISPFTI 0.25 218 281 0.30 207 246 0.35 200 240 0.40 172 199 0.45 163 180 0.50 147 180 fsup a b s 1 s i  i p=1 ab s 1  s i   s p n p  N 2 In which N is the overall count of records When fsup a b s 1 s i  min sup the S a b s 1 s i  is reserved Or else the cluster is removed Proceed with the steps 3 and 4 for further partition  Step 5 For each a b  fuzzy support obtained of space cluster  a b  in L 2  a frequently occurring fuzzy space 2-sequence S a  a b S b isproducedby combining the 2-sequences. Collection of all the frequently occurred fuzzy space 2-sequences is known as L 2   Step 6 If k is equal to or greater than 2 then discover out the L k+1  The frequently  occurred fuzzy time based sequential patterns is found in steps as shown below  Step 6.1 Find C k+1 using the combination L k with L k   Step 6.2 Calculate fsup for each sequences obtained in C k+1  The fuzzy support calculation formula for one k+1\-sequence S k+1 is fsup S k+1  N k=1 min fsup s1,sk  fsup s2,sk+1  N 3 From above if fsup is greater than or equal to minimum support that seq uence will be considered as frequent Then L k is the collection of frequently occurred fuzzy time k-sequences  Step 6.3 Iteratively find the frequently occurring fuzzy time k+1\-sequences until C k+1 will be an empty set  Step 6.4 Find out the longest fuzzy-time frequent sequences IV E XPERIMENTAL S ETUP AND P ERFORMANCE E VALUATION Here Evaluation of the performance of MISPFSI algorithm with respect to the ISPFTI algorithm is done Experiments are performed on an Intel\(R Core\(TM\ i3-2330M CPU  2.20GHz with main memory of 2GB and Windows 7 ultimate running on it The implementation of the algorithms are with JDK 1.8.0 The dataset used in the paper is provided by SPMF-An Open-Source Data Mining Library The dataset can be downloaded from the SPMF website This webpage provides larger datasets that are often used in the data mining literature for evaluating and comparing algorithm performance Performance Comparison is done between the MISPFSI algorithm and the ISPFTI algorithm on the basis of varying threshold which is user specified minimum support, and on the time taken for execution for the small dataset in SPMF sample input files as well as for real-life dataset BMSWebView1 Gazelle  KDD CUP 2000 A Performance comparison of computation time taken Table 1 shows the recordings of time taken for different minimum support threshold For the 0.25 percentage minimum support threshold ISPFTI algorithm takes 281 milli seconds to execute whereas the MISPFSI algorithm requires only 218 milli seconds N ow as the percentage of minimum support threshold increases \(say 0.40 percentage\ time taken for the ISPFTI to execute increases to 199 milli seconds MISPFSI algorithm’s execution time at that threshold is about 172 milli seconds only which is less as compared to ISPFTI algorithm’s execution time Thus as shown in Fig.1 the MISPFSI is about 2-5 times faster than the ISPFTI even at varying minimum support threshold This means MISPFSI can execute well even in the case of low support threshold Fig 1 Time Comparison graph between MISPFSI and ISPFTI TABLE I T ABLE S HOWING THE TIME TAKEN AT DIFFERENT MINIMUM SUPPORT THRESHOLDS 


2015 IEEE International Conference on Computational Intelligence and Computing Research Minim um Suppo rt Thresh old  Time Taken ms MISPFSI ISPFTI 0.55 113 144 0.60 110 120 0.65 98 110 0.70 90 99 B Performance comparison of memory usage Memory usage is almost same for both the existing approach and the proposed approach V C ONCLUSION In the area of data mining sequential pattern mining is really one among the sub and wide topics This mining technique is useful in various applications Various novel scalable and efficient sequential mining methods has been discussed The particular time intervals can be represented by some time-interval based sequential pattern mining alg orithm with the linguistically fixed terms ISPFTI shares an important contribution for supporting the fuzzy ranged time interval of sequence database’s sequential  patterns There are various order based sequential   pattern mining algorithms also MISPFSI algorithm is one of the order based algorithm Modified ISPFSI uses the space clustering concept by taking the difference of the index positions between two items Comparison is done between the MISPFSI algorithm and ISPFTI algorithm. In spite of bein g the order based algorithm MISPFSI isabout2-5timesfasterthanISPFTI.MISPFSIcan execute well even in the case of low support threshold From the result obtained MISPFSI finds the longest fuzzy-time frequent sequences and increases the time performance A CKNOWLEDGMENT The author would like to thank the support both mentally and spiritually, that friends have offered to the author the Mahatma Gandhi University The author particularly shows gratitude to Ms Nee ba E A for sharing out her knowledge and perspectives about the data mining and the related soft wares R EFERENCES 1 C  C h a ng  H  C he uh and Y  L uo A n I n t eg r a t e d S eq uen t i a l P at t e r n s Mining with Fuzzy Time-Intervals International Conference on Systems and Informatics Yantai University Yantai China pp 2294-2298 May 2012 2 R  A g r a w a l a n d R  S r i kant   Mi n i ng Se q u en t i al P a t t e r ns  P r oce e di n g s  of the 11th Int Conf on Data Engineering Taipei Taiwan pp 3-14 610 March 1995 3 C C h a n g H  C h u e n N P L i n  S e q u e n t i a l P a t t e r n s M i n i n g w i t h F u z z y Time-Intervals IEEE The Sixth International Conference on Fuzzy Systems and Knowledge Discovery China Vol.3 pp 165-169 August 14-16 2009 4 J  H a n  M K a mb e r   D a t a m i n i ng  C once p t s and T ech n i q ues   S eco nd edition University of Illinois at Urbana-Champaign Academic Press USA pp 1-743 2001 5 G  J  K l i r  B  Y u a n   F u z z y s e ts a n d F u z z y Lo g i c  Th e o r yand Application The University of Michigan Prentice Hall PTR pp 1573 1995 6 M  H  D unh a m  D at a M i n i n g  I n t r od uct o r y a n d A d v a n ce d T o p i c s    Textbook  Prentice Hall pp 1314 August 2002 7 Y  L  C he n M C  C h i a n g  M  T  K o  D i s c o ver i n g t i m e  i n t e r v a l  sequential patterns in sequence databases Expert Systems with Applications Vol 25 pp 343-354 2003 8 Y  L i a n g  T  C  K  H u ang  D i s co ve r i ng F u zzy T i m eI n t e r v a l S e q u ent i a l Patterns in Sequence Databases IEEE Transaction sonSystems,Man and Cybernetics Part B Cybernetics vol 35 pp 959-972 October 2005 9 A F  S o l i m a n G A E b r a h i m a n d H  K  M o h a m m e d   S P E D S A Framework for Mining Sequential Patterns in Evolving Data Streams Conference on Communications Computers and Signal Processing PacRim IEEE Pacific Rim pp 464-469 August 2011 1 P  F  V i ge r  R  N k a m b o u a n d E  M  N g u i f o   A K n ow l e dg e D i s c o ve r y  Framework for Learning Task Models from User Interactions in Intelligent Tutoring Sy stems 7th Mexican International Conference on Artificial Intelligence Mexico MICAI Vol 5317 pp 765-778 Springer-Verlag Berlin Heidelberg 2008  J  Pe i  J  H a n  B  M  A s i  a n d H  P i n t o   P r e f i x Sp a n M i n i ng Se q u e n t i a l Patterns Efficiently by Prefix-Projected Pattern Growth Proceedings of the 17th Int Conf on Data Engineering Heidelberg Germany pp 215224 Apr 2001 12 C  G i a n n e l l a  J  H a n  J  P e i  X  Y a n  a n d P  S  Y u   M in in g F r e q u e n t Patterns in Data Streams at Multiple Time Granularities Proceedings of the NSF Workshop on Next Generation Data Mining Baltimore USA pp 191-212 Nov 2002 1 D  Y  C hi u Y  H  W u A  L  P C h en   A n E f f i ci en t A l g o r i t h m f o r Mining Frequent Sequences by a New Strategy without Support Counting In Proc of 20th International conference pp 375-386 2004 14 A  M a ra s c u a n d F  M a s s e g lia   M in in g S e q u e n t ia l P a t te r n s f r o m D a t a  Streams A Centroid Approach Journal of Intelligent Information Systems Kluwer Academic Publishers Vol 27 Issue 3 pp 291-307 Nov 2006  Q  Z h ao and S  S  B how m i c k S eq uen t i a l P at t e r n M i n i n g  ASurvey CAIS Technical Report Nanyang Technological University Singapore 2003118  2003  16 R S r ik a n t a n d R A g ra w a l  M i n i n g s e q u e n t ia l p a t t e r n s  Ge n e ra li z a t i o n s and performance improvements Proc of the 5th International Conference Extending Database Technology vol 1057 pp 3-17 1996 1 I  K h a n and A  J ai n   A C o mp r e h e ns i v e S ur vey o n S eq uen t i a l P at t e r n Mining International Journal of Engineering Research  Technology Vol 1 Issue 4 ISSN 2278-0181 June  2012 


Shaded transactions are those that will be ignored from further processing which will reduce exponentially the time required to generate all frequent itemsets. After that, the frequent 2-itemsets are generated by partially scanning the clusters, i.e. the k th clusters, where k  2, only the frequent 2-itemset is {3, 5 whose support is 0.5 which is greater than the minimum support threshold, i.e. 0.45. So, {1, 4 will be removed from clusters in figure 3 \(b The last itemset is {1, 3, 5} is frequent since its support is 100%, thus all frequent itemsets are generated                     Figure 3 \(a\he cluster tables for the database given in table 1 \(b\he reduced clusters   1 2 3 4 5 T 2  0 1 1 0 0 T 3 1 0 0 0 1 T5 1 0 1 0 0 T7 0 0 1 0 1 T10 1 0 0 1 0 T12 0 0 1 0 1 T14 0 0 1 1 0 T19 1 0 0 0 1 T20 0 0 1 0 1 T1 1 1 1 0 0 T6 1 0 1 0 1 T8 0 1 1 0 1 T11 1 1 0 1 0 T15 0 1 1 1 0 T16 1 0 0 1 1 T17 0 1 0 1 1 T18 1 0 1 1 0 T4 1 0 1 1 1 T9 1 1 1 1 0 T13 1 1 1 0 1  1 3 4 5 T 3 1 0 0 1 T5 1 1 0 0 T7 0 1 0 1 T10 1 0 1 0 T12 0 1 0 1 T14 0 1 1 0 T19 0 1 0 1 T20 0 1 0 1 T6 1 1 0 1 T16 1 0 1 1 T18 1 1 1 0 T4 1 1 1 1 Item Item Cluster 4 Cluster 3 Cluster 2  Transaction Transaction a b 82 


3  Conclusion and Future Work DRBC takes benefit of the representation of data items as bit vectors to simplify the extraction of infrequent 1-itemsets, i.e. itemsets that have only one item, and converts the data matrix into cluster matrices of variable dimensions, such that each one of these matrices \(rows are the transactions’ identifiers and columns are items is processed separately to generate frequent item sets of a specific length, i.e. local frequent itemsets, then by using the upward closure property, it can easily eliminate infrequent itemsets from all cluster matrices in an efficient way. As a future work, DRBC can be expanded to cover different types of data, for example time series data, mix mode data, etc 4  References 1 U. Fay y a d and R. Uthurusam y  Ev o lv ing data into mining solutions for insights Communications of the ACM vol. 45 pp. 28-31, 2002 2 X  B. L i and V S. Jaco b, "Adaptiv e  data reduction for large-scale transaction data European Journal of Operational Research vol. 188, pp. 910-924, 2008 3 D  Anbarasi and K   Viv e kanandan Dimension Reduction Techniques for Market Basket Analysis  S. M. Weiss Predictive data mining: a practical guide Morgan Kaufmann 1998 5 M  C. Okur and M  Buy u kkececi, "Big data challenges in information engineering curriculum," in EAEEIE EAEEIE\Conference  2014, pp. 1-4 6 P e ng et al A descriptive framework for the field of data mining and knowledge discovery International Journal of Information Technology Decision Making vol. 7, pp. 639-682 2008 7 M  J. Shaw et al Knowledge management and data mining for marketing Decision support systems vol. 31, pp. 127-137, 2001 8 J. P  Shim et al Past, present, and future of decision support technology Decision support systems vol. 33, pp 111-126, 2002 9  L   A  K u r g a n a n d  P  M u s i l e k   A s u r v e y  of Knowledge Discovery and Data Mining process models The Knowledge Engineering Review vol. 21 pp. 1-24, 2006    R Can o et al Using evolutionary algorithms as instance selection for data reduction in KDD: an experimental study Evolutionary Computation, IEEE Transactions on vol. 7, pp. 561-575 2003  C R. Reeves and D R. Bush, "Using genetic algorithms for training data selection in RBF networks," in Instance selection and construction for data mining ed: Springer, 2001, pp. 339-356  M  S a g g a r et al Optimization of association rule mining using improved genetic algorithms," in Systems, Man and Cybernetics, 2004 IEEE International Conference on 2004, pp 3725-3729 13  A  I  R  L   A z e v e d o   K D D  S E M M A  a n d  CRISP-DM: a parallel overview," 2008   83 


         


       0.4 0.8 1.2 1.6 250 500 750 1000 1250 1500 of Queries Average time \(sec Scalability of MISA for WKL_1 0.5 1.0 1.5 2.0 100 200 300 400 500 600 of Queries Average time \(sec Scalability of MISA for WKL_2 0 5 10 15 20 25 30 35 500 5500 10500 15500 20500 25500 30500 of Queries Average time \(sec Scalability of MISA for WKL_3 Figure 2 Scalability of Mining Index Selection Approach for Three Workloads  J Kratica I Ljubic and D T osic  A genetic algorithm for the index selection problem In Applications of Evolutionary Computing Tech Rep 2003  D Comer  The Dif culty of Optimum Inde x Selection ACM Trans Database Syst  vol 3 no 4 pp 440…445 Dec 1978 A v ailable http://doi.acm.org/10.1145/320289.320296  techopedia Query Optimizer  2015 http://www.techopedia.com/de“nition/26224/query-optimizer Online accessed Online A v ailable http://www.techopedia.com/de“nition/26224/query-optimizer  J Dong and M Han Bittable An ef cient mining frequent itemsets algorithm Knowl.-Based Syst  vol 20 no 4 pp 329…335 2007 A v ailable http://dblp.unitrier.de/db/journals/kbs/kbs20.html  P  Ameri U Grabo wski J Me yer  and A Streit On the Application and Performance of MongoDB for Climate Satellite Data in 13th IEEE International 2808 


Conference on Trust Security and Privacy in Computing and Communications TrustCom 2014 Beijing China September 24-26 2014  IEEE 2014 pp 652…659 A v ailable http://dx.doi.org/10.1109/TrustCom.2014.84  R Lutz P  Ameri T  Latzk o and J Me yer  Management of Meteorological Mass Data with MongoDB in 28th International Conference on Informatics for Environmental Protection ICT for Energy Ef“eciency EnviroInfo 2014 Oldenburg Germany September 10-12 2014 J.M.G  omez M Sonnenschein U Vogel A Winter B Rapp and N Giesen Eds BIS-Verlag 2014 pp 549…556 Available http://www.enviroinfo2014.org  A Caprara M Fischetti and D Maio Exact and Approximate Algorithms for the Index Selection Problem in Physical Database Design IEEE Trans Knowl Data Eng  vol 7 no 6 pp 955…967 1995  K Aouiche and J Darmont Data Mining-based Materialized View and Index Selection in Data Warehouses CoRR  vol abs/0707.1548 2007 A v ailable http://arxiv.org/abs/0707.1548  N P asquier  Y  Bastide R T aouil and L Lakhal Discovering Frequent Closed Itemsets for Association Rules in Proceedings of the 7th International Conference on Database Theory  ser ICDT 99 London UK Springer-Verlag 1999 pp 398…416 A v ailable http://dl.acm.org/citation.cfm?id=645503.656256  S Agra w al S Chaudhuri and V  R Narasayya  Automated Selection of Materialized Views and Indexes in SQL Databases in Proceedings of the 26th International Conference on Very Large Data Bases  ser VLDB 00 San Francisco CA USA Morgan Kaufmann Publishers Inc 2000 pp 496…505 A v ailable http://dl.acm.org/citation.cfm?id=645926.671701  A Sk elle y  DB2 Advisor An Optimizer Smart Enough to Recommend Its Own Indexes in Proceedings of the 16th International Conference on Data Engineering  ser ICDE 00 Washington DC USA IEEE Computer Society 2000 pp 101 A v ailable http://dl.acm.org/citation.cfm?id=846219.847390  W  G Pedrozo and M S M G V az A T ool for Automatic Index Selection in Database Management Systems in Proceedings of the 2014 International Symposium on Computer Consumer and Control  ser IS3C 14 Washington DC USA IEEE Computer Society 2014 pp 1061…1064 A v ailable http://dx.doi.org/10.1109/IS3C.2014.277  M Zaman J Surabattula and L Gruenw ald An Auto-Indexing Technique for Databases Based on Clustering in Proceedings of the Database and Expert Systems Applications 15th International Workshop  ser DEXA 04 Washington DC USA IEEE Computer Society 2004 pp 776…780 A v ailable http://dx.doi.org/10.1109/DEXA.2004.32  S Chaudhuri and V  Narasayya An Ef cient Cost-Driven Index Selection Tool for Microsoft SQL Server in VLDB  Very Large Data Bases Endowment Inc August 1997 A v ailable http://research.microsoft.com/apps/pubs/default.aspx?id=68349  R Agra w a l and R Srikant F ast algorithms for mining association rules in large databases in Proceedings of the 20th International Conference on Very Large Data Bases  ser VLDB 94 San Francisco CA USA Morgan Kaufmann Publishers Inc 1994 pp 487…499 A v ailable http://dl.acm.org/citation.cfm?id=645920.672836  B Goethals Memory Issues in Frequent Itemset Mining  in Proceedings of the 2004 ACM Symposium on Applied Computing  ser SAC 04 New York NY USA ACM 2004 pp 530…534 A v ailable http://doi.acm.org/10.1145/967900.968012  J Hipp U G  untzer and G Nakhaeizadeh Algorithms for Association Rule Mining Mdash a General Survey and Comparison SIGKDD Explor Newsl  vol 2 no 1 pp 58…64 Jun 2000 A v ailable http://doi.acm.org/10.1145/360402.360421  A Rajaraman and J D Ullman Mining of Massive Datasets  New York NY USA Cambridge University Press 2011  MongoDB Introduction to MongoDB  2015 http://www.mongodb.org/about/introduction Online accessed Online A v ailable http://www.mongodb.org/about/introduction  J Pok orn y  NoSQL Databases A Step to Database Scalability in Web Environment in Proceedings of the 13th International Conference on Information Integration and Web-based Applications and Services  ser iiWAS 11 New York NY USA ACM 2011 pp 278…283 Available http://doi.acm.org/10.1145/2095536.2095583  MongoDB SQL to MongoDB Mapping Chart 2015 http://docs.mongodb.org/manual/reference/sqlcomparison Online accessed Online Available http://docs.mongodb.org/manual/reference/sqlcomparison  BSON BSON Binary JSON  2015 http://bsonspec.or g Online accessed Online A v ailable http://bsonspec.org  MongoDB Inde x T ypes  2015 http://docs.mongodb.org/manual/core/index-types Online accessed Online A v ailable http://docs.mongodb.org/manual/core/index-types  R Core T eam R A Language and Environment for Statistical Computing  R Foundation for Statistical Computing Vienna Austria 2015 A v ailable http://www R-project.or g  MongoDB Inc and M Schmidber ger  rmongodb RMongoDB driver  2014 r package version 1.8.0 Available http://CRAN.R-project.org/package=rmongodb  K Bank er  MongoDB in Action  Minning Publication Co 2012 2809 


 MongoDB Geospatial Query Operators  2015 http://docs.mongodb.org/manual/reference/operator/querygeospatial Online accessed 18 Online A v ailable http://docs.mongodb.org/manual/reference/operator/querygeospatial  M K ormilitsin R Chirk o v a Y  F athi and M Stallmann View and Index Selection for Query-performance Improvement Quality-centered Algorithms and Heuristics in Proceedings of the 17th ACM Conference on Information and Knowledge Management  ser CIKM 08 New York NY USA ACM 2008 pp 1329…1330 A v ailable http://doi.acm.org/10.1145/1458082.1458261 2810 


