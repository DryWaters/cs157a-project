 1 A d v a n c e d  V e r s i o n  o f  A r i 
o r i  A l g o r i t h m    K.R.Suneetha, R. Krishnamoorti Bharathidasan Institute of Technology krs_mangalore@hotmail.com rkrish_26@hotmail.com    
Abstract   Apriori algorithm is a popular classical algorithm of association rule mining. This paper discusses the limitations of the original Apriori algorithm and presents an advanced version of Apriori algorithm to increase the efficiency of generating association 
rules. Our algorithm uses organized transaction selection approach, where in the rules are generated by picking up the transactions according to the highest order first basis and hence avoiding generation of un-necessary patterns that are not a part of the original database 
The major advantage of our approach is that, the number of database scans is massively reduced, to the order of O\(n i.e., of the order of number of transactions available for frequent patterns generation. Hence overcomes the time complexity of original Apriori algorithm which is of the order O\(e 
n   1. Introduction  Data mining is the discovery of the hidden information found in databases and can be viewed as a step in knowledge discovery process. Data mining function 
includes clustering, classification prediction and associations Association rule is first introduced in 1993 by R. Agrawal  are u s ed t o  identify relationship among a set of items in a database. These relationships are not based on inherent properties of the database themselves, but rather based on 
co-occurrence of the data items Association rules are used to show the relationship between data items and are formally defined as follows: Given a  P 
2010 First International Conference on Integrated Intelligent Computing 978-0-7695-4152-5/10 $26.00 © 2010 IEEE DOI 10.1109/ICIIC.2010.64 238 


 2 set of   items I={I 1 I 2 I m and a database of transaction D={t 1 t 2 t n where t i I i1 I i2 I ik and I ij  002 I, an association rule is an implication of the form x=>y where x,y 003 I are set of items called item sets and x 004 y 005 x  is called antecedent y  is consequent. The two important basic measures used in association rules are support \(s\d confidence 006  Support \(s  of an association rule x=>y is the percentage of transaction in the database that contain x 007 y Confidence or strength 006 or an association rule x=>y is the ratio of the number of transaction that contain x 007 y to the number of transactions that contain x Support\(s\ is the statistical significance of an association rule and the confidence of a rule indicates the degree of co-relation in the dataset between x and y. Apriori is the most established well known association rule algorithm and used in most commercial products The algorithm generates the association rules from a large database using Support and Confidence value. Generally smaller Support value and larger Confidence value are used as thresholds. The original Apriori algorithm is explained in the next section  1.1  Apriori algorithm  Input: Minimum Support, Minimum Confidence Output: Generation of Association rules Method 01. k = 1 02. F k i | i 002 I 010  011 i 012 N × minsup 03. repeat  04.  k = k+1 05. C k apriori-gen\(F k-1  Generate candidate item sets 06. for  each transaction t 002 T do 07.C t subset\(C k t Identify all candidates that belong to t 08. for  each candidate item set c 002 C t do 09 011 c 011 c\1 Increment support count 10. end for  11. end for  12.F k c| c 002 C k  013  011 c 012 N × minsup Extract the frequent k-itemsets 13. until  F k  005  14.  Result  U F k   Following steps describes the working nature of the Apriori algorithm   The algorithm initially makes a single pass over the data set to determine the support of each item. Upon completion of this step the set of all frequent 1- item sets, F 1 will be known \(step 1 and 2   Next, the algorithm will iteratively generate new candidate k-item sets using the frequent \(k-1\-item sets found in the previous iteration \(step 5\. Candidate generation is implemented using a function called apriori-gen   To count the support of the candidates, the algorithm needs to make an additional pass over the data set Steps 6-10\he subset function is used to determine all the candidate item sets in C k that are contained in each transaction t 
239 


 3   After counting their supports, the algorithm eliminates all candidates’ item sets whose support counts are less than minimum support \(step 12   The algorithm terminates when there is no new frequent item sets generated i.e., F k  005 step 13  The basic draw back of this algorithm is i\ generation of huge number of candidate sets ii\y scans the database for a large set of candidates by pattern matching, hence the original algorithm consumes more time and space To overcome the deficiency we modified the Apriori and proposed the new approach of generating the rules The structure of the paper is as follows: section2 covers relative work section3 provides proposed model section4 presents advanced version of Apriori algorithm and its details, section5 shows theoretical analysis of time complexity, and section6 concludes the paper  2. Related Work  The FP works  t h e bas i s of Depth-first search strategy, but it is infeasible if the database is huge and sparse. The FP-tree grows along with the  growth of the number of transactions. In  our work we are interested in getting itemsets that are interrelated rather than only the frequency Existing Apriori based algorithms are focused on the way candidate itemsets are generated, usage of optimized data structures for storing itemsets, and implementation details. Several versions of Apriori algorithm are used in various research works. We surveyed all these versions and are presented below The paper m prov es t h e A p ri ori  All algorithm by including user-ID during every step of candidate set generation and of scanning the data base to decide whether an item in the candidate set generation should be put into large set, which will be used to generate next candidate set. The enhanced version of Apriori algorithm is presented in th e eff i cien c y  is improved by scanning the database in forward and backward directions. The authors Xiang-wei Liu and Pi-Lian presented Improved Association Rule Mining algorithm. It reduces scanning time of candidate sets using hash tree The pape pr opos ed an al g o ri t h m named IApriori algorithm, which optimizes the join procedure of frequent itemsets generated to reduce the size of the candidate itemsets. The algorithm presented in th s cans t h e  database only once to generate a frequent itemsets, thereby saving time and increases efficiency. These methods even though focused on reducing time and space, in real time still needs improvement. We proposes new advanced version of Apriori algorithm to further reduce the time and is discussed in detail in the following sections 
240 


 4 3  Proposed Work    The classical Apriori algorithm follows Bottom-Up approach, it starts from L 1 the single m element set\nd proceeds till a L k k is lengthiest possible frequent pattern\At each pass, it determines which candidates are frequent by counting their occurrences that exceed the minimum support threshold\(s\. Then it checks how often these candidates occur together to measure the support Due to combinatory explosion, it leads to poor performance when frequent patterns sizes are large. In our proposed work the bottom-up approach is replaced by organized transaction selection approach It starts with maximum element set and proceeds lower down the order that is from L m down till L 1 The following section presents the new advanced version of Apriori Algorithm in detail  4. Advanced Version of Apriori Algorithm  Input: Database \(D\minimum support min_sup Output  frequent item sets in L Algorithm steps  T[array  T r an s action  ite m s D  k = No..of items in the longest transaction in T  for \( Ti = Tid  \(longest unvisited T    for each Tl of order Ti.length in T  if \(Ti = Tl\Ti.count for\(temp=0; temp< \(k- i.length temp for each Tj of order \(k-temp\ in T  If \( Ti is a subset of Tj Ti.count if\(Ti.count >= min_sup Add Ti to L\(i   Description for the algorithm   The transactional data base is considered as T  Scan th e  transactional data base to find longest transaction with maximum number of items as T temp    k=T temp length\(Number of items in T temp  Organized transaction selection approach \(top down\dentify frequent itemset Association rule generation Transactions in Data Base Figure  1. Block Diagram of proposed work 
241 


 5   For each transaction taken according to their order of length from T as  T i  do  the following steps 000  For all transactions of length same as Ti.length as Tl 000  If  Ti == Tl then increment Ti Count by 1 000  For all transactions of order Ti.length; as Tj 000  If Ti belongs to Tj increment count of Ti by 1 000  Finally check for the Support count validation and add to the corresponding Li  5. Time complexity Analysis  This section provides a comparative analysis of time complexities between original Apriori algorithm and our new Advanced Version of Apriori algorithm  5.1  Time complexity of Apriori algorithm  Worst Case conditions   All transactions have m items, where m is number of  items   Each count needs for L\(i\eeds n m C i  i o n s  w h ere n  i s num ber of transactions   At the worst case there can appear frequent items of length m  Total Complexity of time 000 Time taken for generation of frequent items + Time taken for rule generation  Time taken for generation of frequent items n m C 1 n m C 2 n m C m  n  014 015 015 n as e O n     Time for Rule generation of k terms set is given by    k C 1  k C 2  k C n  000 000 000 000 000 000 000 000 000 000     j i i j m k m J k C k c 1 1  O\(n Total time 000  n 000 000 000 000 000 000 000 000  000 000 000      j i i j m k m j k i m m i C C k C 1 1 1  014 015 015 n as e O n   _____ \(1 i.e., an exponential growth is observed  5.2 Time complexity of the proposed algorithm  Satisfactory worst case conditions   min – sup = 1   k = m, m is number of items 000  016 m 1 1 T j of order j \(j < = n 
242 


 6 i.e., there exists at least one transaction for all orders from 1 to m where j is transaction ID \(J < n  Total Complexity of time 000 Time for generation of frequent items + Time for rule generation  Time for generation of frequent items  000 000 000 000 000 000 000 000  000 000 000 000 000 000 000 000     000 000    1  1   1   0 1 i m temp m i n m n  Here \(n-\(m-1\ot by assuming except \(m-1\ms all item are of order i for each i th iteration The is for each temp\ iteration, there can exist at the max \(n-1\gher order elements considering the current order elements considering the current one to be of the least order And final validation for support count is indicated as 1  000 000 000 000 000 000     000 000    i m temp m i n m n 0 1 2  1      O\(n\  as n 014 015   Time for Rule generation of m terms same as in Apriori algorithm  Total time 000   O\(n ______  \(2  5.3 Comparative result  From equation \(1\ we observe that original Apriori algorithm has an exponential time complexity of order O e n  From equation \(2\ we have a linear time complexity for our new Advanced version of Apriori algorithm i.e., of the order O\(n Hence proposed algorithm works efficiently compared to classical Apriori algorithm with a linear growth of timings with respect to number of transactions  6. Experimental Results  NASA server web log file of 195MB data is used for experimental purpose After preprocessing, the data base size is reduced to 36MB due to the elimination unnecessary data sets. From this preprocessed data 1891715 records were considered and from which, we obtained 26938 unique users of 38714 sessions as a training data set The experiments were run on Pentium® dual CPU working at 1.73GHz, with 2GB of RAM. The observation is carried out under WAMP server 
243 


 7 The performances of both Apriori and proposed advanced version of Apriori are observed with respect to Execution time measured under number of PHP instruction norms The following Tables 1.and Table 2 shows experimental values of number of transactions and execution time for Original Apriori and proposed Advanced Apriori algorithms respectively  Table 1.  Original Apriori  Number of Transactions Execution Time\(Sec 15 7.3 20 12.91 25 17.18 30 22.25 35 38 40 110.22 45 378  Table 2. Proposed Algorithm  Number of Transactions Execution Time\(µsec 15 241 20 326 25 411 30 496 35 581 40 666 45 751 50 836  Graphs are plotted \(Figure 2. and Figure 3.\or the above two tables  Original Apriori 0 50 100 150 200 250 300 350 400 0 1020304050 No. of Transaction Ececution Time \(Sec   Figure  2. Original Apriori  Advanced Apriori 0 100 200 300 400 500 600 700 800 900 0204060 No. of Transactions Execution Time \(µ Sec   Figure 3. Proposed Algorithm  The graph shows the proposed method has improvement over original Apriori algorithm  7. Conclusions  In this paper, the advanced version of Apriori algorithm is proposed to overcome the deficiency of the basic 
244 


 8 Apriori algorithm. The basic Apriori algorithm follows Bottom-Up approach where as the proposed method follows organized transaction selection approach It avoids the generation of combinations of items which inturn reduces the number of database scans. The result shows improvement in execution time  8. References   Ji awei Han and  M i ch el i n e   K a m b er  Data Mining Concepts and Techniques  Morgan  Kaufmann Publishers,  2001  2 R. A g r a w a l T  I m ie linsk i, a nd A   Swami, “Mining Association Rules between sets of Items in Large Database”, Proceedings of the 1993 ACM SIGMOD International Conference on Management of Data, Vol.22 Issue 2, 1993, pp.207-216   R Agra w a l an d R S r i k an t  F ast  Algorithms for Mining Association Rules Proceedings of the 20 th International Conference on Very Large Data Bases, 1994 pp. 487-499   Ji awei Han  Ji an  P e i  Yi w e n Yi n and Runying Mao, “Mining Frequent Pattern without Candidate Generation: A FrequentPattern Tree Approach”, Data Mining and Knowledge Discovery, Vol-8, 2004, pp.53-87   Ji awei Han  Ji an  P e i  M i n i n g F r eq u e n t  Patterns by Pattern-Growth :Methodology and Implications”, SIGKDD Explorations Volume 2, Issue 2, 2006, pp.30-36  6  WA NG  T ong a nd H E P i L ia n  W e b  Log Mining by Improved Apriori All Algorithm”, Transaction on Engineering Computing and Technology, V4, February 2005 ISSN 1305-5313. pp. 97-100  7  Wei Z h an g, Z h a n g Wei  Do n g me S u n Shaohua Teng, and Haibin Zhu, “An Algorithm to Improve Effectiveness of Apriori”, Proceedings of sixth International Conference on Cognitive Informatics, 2007 IEEE, pp.385-390     X i an g-W e i L i u an d P i L i a n He  T h e  Research of Improved Association Rules Mining Apriori Algorithm”, Proceedings of the third International Conference on Machine Learning and Cybernetics, Shanghai, 26-29 August 2004.pp. 1577-1579   Yiw u X i e Yuton g L i  Ch un li W a n g   Mingyu Lu, “The Optimization and Improvement of the Apriori Algorithm International Symposium on Intelligent Information Technology Application Workshops, 2008 IEEE, pp.1101-1103  10  Zha o  H ong  G a ng y a ng L e i Wang  a n d  Ying liu, “An Implementation of Improved Apriori Algorithm”, Proceedings of 8th International Conference on Machine Learning and Cybernetics, 2009 IEEE, pp 1565-1569    
245 


To resolve this problem, we proposed a new KDD model. It consists of two steps: the first organizes the database records in homogeneous clusters having common properties which permit to deduce the data’s semantic. This step consists of TAH’s and MTAH generation of relieving attributes. The second permits to Discovering Knowledge. It consists to deduce the Fuzzy  Cluster Lattice corresponding to MTAH lattice generated in the first step, then traverse this lattice to extract the Meta Knowledge \( Set of fuzzy associations meta-rules on the clusters \, and in end deduce the rules modeling the Knowledge \(Set of fuzzy associations rules on the attributes\While basing on the hierarchical structure offered by the lattices, we proceed to discover the Knowledge in a hierarchical way. Thus, according to the degree of detail required by the user, this approach proposes a level of knowledge and different views of this knowledge Moreover, this solution is extensible; the user is able to choose the fuzzy method of classification according to the domain of his data and his needs This solution reduced considerably the number of generated rules, offered a better interpretation of the data and optimized both the space memory and the execution time As futures perspectives of this work, we mention 1\o test our approach on several the large data set, and 2\ to define a new intelligent method of evaluation of requests which takes into account the Meta knowledge and/or the knowledge base generated by our KDD model XI  R EFERENCES  1  P. Berkhin, “Survey of clustering data mining techniques“, Technical report, Accrue Software, 2002 2  M. Zaki, “Mining Non-Redundant Association Rules”, Data Mining and Knowledge Discovery, No 9, 2004, p. 223–248 3  G. Stumme, R.Taouil, Y. Bastide, N. Pasquier, and     L. Lakhal Intelligent structuring and reducing of association rules with formal concept analysis”, Proceedings of KI’2001 Conference, Vienna Austria, Lecture Notes in Artificial Intelligence 2174, SpringerVerlag, September 2001, p. 335–350 4  N. Pasquier “Data Mining : Algorithmes d'Extraction et de Réduction des Règles d'Association dans les Bases de Données”, Thèse Département d’Informatique et Statistique, Faculté des Sciences Economiques et de Gestion, Lyon, 2000 5  R. Agrawal, T. Imielinski, and Swami A., “Mining Association Rules between sets of items in large Databases”, Proceedings of the ACM SIGMOD Intl. Conference on Management of Data, Washington USA, June 1993, p. 207-216 6  R. Agrawal, and R. Skirant. “Fast algoritms for mining association rules”. In Proceedings of the 20th Int'l Conference on Very Large Databases, pages 478-499, June 1994 7  N. Pasquier, Y. Bastide, R.Taouil, and L. Lakhal,          “ Efficient Mining of Association Rules Using Closed Itemset Lattices Information Systems Journal, vol. 24, no 1, 1999, p. 25-46 8  M. J. Zaki, and C. J. Hsiao, “ CHARM : An Efficient Algorithm for Closed Itemset Mining ”, Proceedings of the 2nd SIAM International Conference on Data Mining, Arlington, April 2002, p. 34-43 9  G. Stumme, R. Taouil, Bastide Y., Pasquier N., and L. Lakhal, “Fast Computation of Concept Lattices Using Data Mining Techniques BOUZEGHOUB M., KLUSCH M., NUTT W., SATTLER U., Eds Proceedings of 7th Intl. Workshop on Knowledge Representation Meets Databases \(KRDB’00\Berlin, Germany, 2000, p. 129-139 10  G. Stumme, R.Taouil, Y. Bastide, N. Pasquier, and     L. Lakhal Computing Iceberg Concept Lattices with TITANIC”, J. on Knowledge and Data Engineering \(KDE\ vol. 2, no 42, 2002, p. 189222 11  S. Ben Tekaya, S. Ben Yahia, and Y. Slimani. “Algorithme de construction d`un treillis des concepts formels et de détermination des générateurs minimaux”, ARIMA journal, Novembre 2005, Numéro spécial CARI'04, pages: 171-193, 2005 12  T. Hamrouni, S. Ben Yahia, and Y. Slimani. “Prince : Extraction optimisée des bases génériques  de règles sans calcul de fermetures In Proceedings of the Intl. INFORSID Conference, Editions Inforsid Grenoble, France, pages : 353--368, 24-27 May 2005 13  B. Ganter, and R. Wille, Formal Concept Analysis: mathematical foundations. \(translated from the German by Cornelia Franzke Springer-Verlag, Berlin-Hei delberg 1999 14  T.Thanh, H.Siu Cheung, and C. Tru Hoang, “A Fuzzy FCA-based Approach to Conceptual Clustering for Automatic Generation of Concept Hierarchy on Uncertainty Data.” ,CLA 2004, pp. 1–12 ISBN 80-248-0597-9 15  L. Zadeh. Fuzzy sets. Inform ation and Control, \(69\338-353, June 1965 16  M. Sassi, M., A. Grissa Touzi, and H. Ounelli, “ “Interpretting Fuzzy Clustering Results based on Fuzzy Formal Concept Analyis”, IEEE International Conference on Fuzzy Systems. Imperial College London, UK, 2007 17  A. Grissa Touzi, M. Sassi, and H. Ounelli,  “Using Formal Concept Analysis for Flexible Querying Optimization”, 23nd International Conference on Computers and Their  Applications, \(CATA’08 Mexico, Avril 2008 18  A. Grissa Touzi, M. Sassi, and H. Ounelli, “An innovative contribution to flexible query through the fusion of conceptual clustering, fuzzy logic, and formal concept analysis”, International Journal of Computers and Their Applications. Volume. 16, N°. 4, pp 220-233, December, 2009 19  M. Sassi, A. Grissa Touzi, and H. Ounelli, “A Fuzzy Linguistic Database Summarization Approach”, Fuzzy Systems Conference IEEE International Conference on Fuzzy Systems.   Hong Kong, Juin 2008 20  J.C,  Bezdeck,  R.Ehrlich,  and  W.Full,  "FCM: The Fuzzy  C-Means Clustering Algorithm", Computers and Geoscience, vol. 10, no. 2-3 pp. 191–203, 1984 21  N. Pasquier, Y. Bastide, R.Tou il, and L.Lakhal, “Pruning closed itemset lattices for association rules”, Proceedings of 14th International Conference Bases de Données Avancées, Hammamet Tunisia, 26–30 October 1998, p. 177–196 22  M. J. Zaki, “Generating Non-Redundant Association Rules Proceedings of the 6th ACM SIGKDD International Conference on Knowledge Discovery and Data Mining,Boston, MA, August 2000, p 34-43 23  Y. Bastide, R.Taouil, N. Pasquier, G. Stumme, and L.Lakhal Mining frequent patterns with counting inference”, SIGKDD Explorations, vol. 2, no 2, 2000, p. 66-75 24  B. Ganter, “Two basics algorithms in concept analysis”, Technical report, Darmstadt, 1984 
134 


   


                        





