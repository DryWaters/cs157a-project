Model Matching Based on Association Graph for Form Image Understanding Yasuto Ishitani Research and Development Center Toshiba Corporation 1 Komukai Toshiba-cho, Saiwai-ku, Kawasaki 210 Japan Abstract A new method of image understanding for forms based on model matching is proposed in this paper QS the basis of OCR which can read Q variety of forms The outline of this method is described as follows Ruled lines are extracted from the input image of a form These lines are used for understanding the 
form taking into account their feature attributes and the relationships between them Each line in the input image of a form is expected to correspond to a line in one of the model forms which are described QS stmrc tured features This correspondence is represented by a node in an association graph where an arc represents compatible correspondences established on the basis of feature rehtaonships The best match is found QS the largest maximal claque in the association graph Ex perimental results show the method is robust and ef fective for poor quality document images 
and also for VQ~~O~S styles of forms 1 Introduction Form documents comprising several horizontal and vertical lines play an important role in many busi nesses and governmental organizations However the cost of manual transactions with forms is usually very high Automation is greatly desired in this area since large amounts of documentation must be converted into computer-readable data In form transactions not all information on the forms needs to be captured However a critical ability of a practical form reader is to obtain knowledge from certain portions with certainty That is 
to realize a practical and usable form processing system several types of knowledge about filled blanks or sometimes unfilled blanks the relationships between them and their reading order is required The principal issue in this kind of form image un derstanding is to find the best match between the pro cessed document image and prepared models Several attempts to develop form image understanding meth ods have been reported These can be classified into two categories as follows 1 2 Methods which project physical geometric infor mation defined in model knowledge onto an input 
document image and extract data directly from the results of this projection I 2 3 Methods which extract logical information about document layout structure independently of phys ical geometric information 4 One of the problems with the first method is that doc uments cannot be analyzed if the input image suffers from variations such as translations, rotations or scale changes The second method however has problems if the document images are very noisy The reason for these defects is that neither method has the 
qualities of both flexible matching and robust matching In this paper, the author proposes a new form im age understanding method based on model matching which resolves these problems and realizes OCR capa ble of reading various types of forms The goal is to create a form processing system which allows input of greater flexibility in terms of quality styles, and num ber of blanks The author makes several assumptions in achieving this goal Form styles are known in advance Document images suffer from two kinds of vari ation spatial variations such as translations ro 
tations skewing and scale changes and distor tions due to noise The positions of form contents may change due to revisions of document style Poor document images must be readable Various form types are mixed into a batch mean ing that the system must be able to identify the type of form The proposed method is able to identify the form type and extract data from each filled or unfilled blank from an input image according to these amumptions and us ing model knowledge The model matching algorithm constructs graphs and then performs a graph search in order to 
find the best match between the model knowledge and a form image In the next section details of the method will be discussed Following that I will present experimen tal results that demonstrate the effectiveness of the proposed method 2 Overview of the proposed method Since ruled lines are a major component of form documents it is essential to compare lines in compar ing two form document images If one of the images is 287 0-8186-7128-9/95 4.00 0 1995 IEEE 


a model of a standard format and the other an input image this comparison becomes a process called 223form understanding\224 Fig.1 Matching between models and an input image is the main issue discussed in this paper In the proposed method the model knowledge consists of various kinds of form models from which model matching procedure selects the most suitable model for an input image I Document I 1 m t I image I Feature Extraction Model acquisition I Structural description description Figure 1 Framework of form image understanding If a form document contains isolated sub-forms as shown Fig.2 lines can be grouped in each sub-form In this case a document is considered to consist of several sub-forms containing several lines As a result straight lines sub-forms made up of some of them, and their relationships are adopted as the basic primitives for descriptions of both images and models, and these are described structurally 221sub-form 1 hb-fbrm 2 Horizonfa Lines Horizonfa Lines VerticdLines Verrica/Lines I Figure 2 Example of isolated sub-forms in a form This leads to the conclusion that structural match ing is essential to understanding of form documents rather than simple matching techniques However if a procedure is complex and heavily heuristic it may be difficult to develop and may suffer from problems of processing speed From a practical viewpoint a theo retical approach is preferable if it offers good matching performance The model matching problem is translated into a problem of searching for the optimal match between two structural descriptions one is a model and the other the input image In the proposed method an association graph constructed from the two structural descriptions is used to search for maximal cliques and thus find matching subgraphs Sub-isomorphisms in the two structural descriptions can be efficiently de tected by maximal clique search algorithm in an asso ciation graph. This approach is able to achieve inexact matching since the criterion for sub-isomorphisms in the two structural descriptions is less strict A hierarchical matching strategy based on the as sociation graphs is adopted in the proposed method so as to realize higher and more global matching stages as well as lower and more local matching stages and the interactions between them A uniform approach at every stage ensures that the interactions between high and low stages are consistently realized Clearly this leads to overall simplification of the system In this section the basic concept of the proposed method is described 2.1 Outline of form image understanding Here an outline of form image understanding based on model matching is given Figure 3 shows a flow chart of the whole procedure Since the input image and each individual model are described structurally as explained above a hierarchical matching strategy is also adopted as the model matching algorithm 1 Yes I I Sub-form matching I Extraction of matching result matching similarities Extraction of best model Interpretation of input image Figure 3 Flow chart of form image understanding based on model matching One matching step in this hierarchical matching process consists of matching two sets of sub-form fea tures between the input image and each model Such a matching step is the highest part of the matching pro cess and is called 223sub-form matching.\224 If sub-form matching terminates successfully matching shifts to a lower level where two sets of line features are matched in the corresponding sub-forms obtained at the high est step. This matching step is called \223line matching.\224 The interaction between sub-form matching and line matching is realized as follows If sub-form matching outputs several exclusive results line matching is in voked for each result of sub-form matching The best sub-form match is determined according to the best line match Both sub-form matching and line match ing consist of maximal clique finding A reduction in the search space is obtained by working hierarchically 288 


The proposed method is flexible because global variations and local variations are handled by sub form matching and line matching respectively The global variations consist of the following variations 0 Extra sub-forms due to revisions of document for mat for example 1\222 and 5\222 in Fig.4 a are extra sub-forms 0 Differences of sub-form arrangement e.g 1 and 1\222 in Fig.4 a 0 Scale changes between a set of sub-forms in the input image and a set of sub-forms in a model which may be independent Fig.4 a The local variations are variations such as scale changes of line length and differences of line arran e ment due to revisions of document format Fig.4 b If sub-form matching and line matching terminate successfully matching similarities are calculated to ob tain the best match in which matching similarity is maximized from various form models As a result the most suitable model for an input image is detected After the model matching process information is extracted from filled blanks in the input image by referring model knowledge against corresponding portions of the input image This knowledge in cludes properties of information relationships be tween blanks etc The processes of data extraction and character segmentation  recognition are carried out with this knowledge The processes described above are collectively known as 223form image under standing.\224 The model matching process is detailed in Section 4 Input 1\2220 2\222 3\222 4\221 5\222 I Model Input Model a Figure 4 Examples of variations of input image 2.2 Graph theoretical matching The most important issue in the model matching procedure described so far is how to find correspon dences between two structural descriptions one from the input image and the other a form model The con cept of an association graph G and a search algorithm for this graph is introduced in this section The asso ciation graph 5 6 is built by letting a node be a pair of features in the input image and in the model and connecting two nodes if they are compatible that is nition the best match between the input form image and a model is equivalent to the largest set of nodes the two pairs may exist simultaneously By this defi that are all mutually compatible In the association graph field a fully connected set of nodes is called a 223clique.\224 A maximal clique is a clique that cannot be extended to include other nodes in the graph The largest maximal clique is the maximal clique contain ing the largest number of nodes Thus, the best match is determined by the largest maximal clique in the as sociation graph G In the past feature grouping techniques and searches for maximal cliques have been used in certain computer vision system 6 7 8 These concepts are useful in the document understanding field if a maxi mal clique graph search is applied to document image matching A matching procedure based on a graph search such as in this method has the characteristics listed below 0 A pure graph theoretical algorithm such as clique finding is applied to finding the best match be tween two structural descriptions Consequently the matching algorithm can be simplified if it con sists of a hierarchical matching strategy and has multiple matching stages 0 Ambiguities such as several exclusive results may remain unresolved at a higher stage of the match ing process where only one candidate is unsuc cessfully sought as a solution The lower part of the matching process must then resolve these ambiguities The graph theoretical approach is suitable for the treatment of these ambiguities In particular the association graph approach has certain advantages compared with other graph theo retical approaches 0 It is possible to realize inexact matching because a less strict criterion is required in sub-isomorphism between two structural descriptions 0 Information depending on domain is used in node building and node compatibility examina tion This means the association graph is useful for other document image understanding applica tions 3 Feature extraction and grouping This section explains the structural description of a document image used in the model matching pro cedure Before feature extraction document skew is detected and corrected 9 Accurate lines can be de tected by this treatment of the input image First horizontal and vertical lines are extracted from the document image as candidates for ruled lines in the form Secondly these lines are grouped and recognized as data corresponding to a sub-form in the form The relationships between sub-forms and lines in a form image are described in terms of a tree structure for the matching procedure lo An example of this is shown in Fig.2 4 Matching procedure In this section the model matching algorithm is explained in detail by describing an actual implemen tation 289 


4.1 Sub-form matching We consider the matching of a set of sub-forms IT in an input structural description with the set of sub forms MT in a model structural description IT is defined as IT  itk I k  1,2  it-num and MT is defined as MT  mtj I j  1,2  mt-num where itk and mtj are elements that is they are sub-forms Figure 5 shows a flow chart of sub-form matching Horizontal line matching Building nodes of association graph I Vertical line matching I Examination of compatibility of two nodes I 4 I Search for the largest maximal cliques 1 Figure 5 Flow chart of graph theoretical matching First a certain number of pairs which consist of two elements of IT and MT is obtained These pairs are replaced by nodes on the association graph GT Fig.6 The nodes of GT are obtained by looking for similarities between the two sub-forms ita and mtj The number of intersections in each sub-form is used to calculate these similarities because this approach is robust and insensitive to scale changes differences of sub-form arrangement, and distortions due to noise The similarity ST between mtj and itk is defined as the equation ST  CYT  f3 x w where CYT and pT are constant mj is the number of intersections of mtj and ij is the number of intersections of itk If ST is greater than the threshold THT a pair mtj itk is defined as a node of GT If an actual sub-form is broken into several pieces due to poor image quality these pieces are merged into a virtual sub-form and correspond to one model sub-form The compatibility of every combination of two pairs is examined mtj itk and mti,iti are two nodes in GT Let R be the relation between mt and itk and R\222 be the relation between mti and itk If the relation R is compatible with the relation R\222 mtj itk and mti ti are compatible Whenever two such pairs are an arc is set between the two corre sponding nodes in the association graph Sub-form matching is achieved by finding all the largest max imal cliques in the association graph GT In Fig.6 the set whose members are l,l\222 2,3\222 3,4\222\and the set whose members are 112\222 2,3\222 3,4\222 are the largest maximal cliques If there is more than one largest maximal clique the line matching process described below is invoked for all results of sub-form matching In this case the best match is determined by finding the best match of the lines After sub-form  parameters of affine transformation in each correspondence between IT and MT are detected lo The line matching invoked after this sub-form matching is carried out in an envi ronment such that a set of lines in itk and a set of lines in mtj are compared in the same coordinate system Input Model Figure 6 Sub-form matching graph based on association 4.2 Line matching This subsection introduces the algorithm used for line matching In the line matching procedure hor izontal lines and vertical lines are handled indepen dently as shown in Fig.7 Both matchings are based on the scheme shown in Fig.5 In the following IVL denotes a set of vertical lines in IT and MVL denotes a set of vertical lines in MT IVL is described as IVL  id I g  1,2  ivl-num and MVL is described as MVL  mvlf I f  1,2  mvl-num Start End Figure 7 Flow chart of line matching a b Figure 8 Search scope for line matching A region known as a 223search scope\224 is set up around mvlf as shown in Fig.8 a to find the lines ivl which may correspond to mvlf where ivl E IVf and mvl E MVL The corresponding lines zvl cross over or are enclosed within the search scope ofmvlf The local variations such as the scale changes of line length and the differences of line arrangement between mvlf and ivl are tolerated within the search scope of 290 


mvlf This method also deals not only with one-to one mapping but also one-to-many mapping or many to-many mapping to resolve the differences of line ar rangement as shown in Fig.9 If an actual line in IVL is broken into several pieces, all the broken pieces are merged into one virtual line and this corresponds to one line in MVL as shown in of the association graph GL are to the similarity between the line in IVL and the line in MVL Fig.9 This similarity SL is defined by the equation SL  OL  PL x mlh+ilh  where OL and PL are constant mlh is the length of mvl  and ilh is the length of idg If SL is greater than the threshold THL a pair mvlj idg is defined as a node of GL Jmlh-ilh n Input Model Figure 9 Line matching based on association graph Horizontal line matching Vertical line matching   0 largest maximal cfieque Q 4 Input Model b Figure 10 The best match for line matching The compatibility of every pair of nodes is exam ined As a result arcs are created on the association graph GL and the largest maximal cliques of GL are searched for In Fig.9 the set whose members are 1, 1\222 2,2\222\\(3,2\222 4,3\222\\(4,4\222 is the largest max imal clique If there is more than one largest maximal clique in horizontal line matching and vertical line match ing respectively the best combination among them is extracted as follows First every combination is generated from the two kinds of line matching results as shown in Fig.10 a where the line crossing rela tionships in both the input description and the model description are extracted Let an input line il corre spond to a model line ml Then let ICL denote the set of input lines which cross il where MCL denotes the set of lines which cross ml If each element of ICL corresponds to an element in MCL as shown in Fig.10 b il is considered as having a correct line crossing relationship Each input line in each combi nation is examined for this correct relationship The combination with the most correct line crossing rela tionships among all combinations is taken as the best line matching result 4.3 Calculation of matching similarity After sub-form matching and line matching the matching similarity between the input image and each model is calculated to find the best match among all the models This similarity S is defined by the evalu A is the number of horizontal lines in a model A\222 is the number of horizontal input lines corresponding to hor izontal lines in the model B is the number of vertical lines in a model and B\222 is the number of vertical in put lines corresponding to vertical lines in the model The similarity S denotes the maximum value of the evaluation function If this SmaX is greater than the threshold THM the model which corresponds to Smax is chosen as the model offering the best match If this sub-form matching finds several exclusive re sults, the matching similarity is calculated for each re sult and the result which maximizes S is considered the best match 5 Experimental results A-A\221  B-B\221 ation function SM  OM PM x L A+Aj+!B+Bj 2211 where The proposed method was implemented on a SPARCstationZ The algorithm was written in the C language Experiments were carried out with 14 categories of forms Some of the test documents are displayed in Fig.11 All documents which were sized within the B4 format were digitized at 400 dpi and converted into binary images The model knowledge is defined for each category of forms Multiple input images of different quality were generated for each cat egory by changing the threshold for the binarization process As a result a total of more than LOO0 input images were used The rate of correct interpretation was on the aver age 98 for all test documents The remaining two percent of the test documents correspond to failures rejected due to a low value of matching similarity at tributable to poor image quality Figure 12 a is the model of the form shown in Fig.11 a Figure 12 b c and d are results obtained by the feature ex traction process from the input images corresponding to the model shown in Fig.12 a and present some variations such as the differences of line arrangement defects in line quality and extra sub-form In the matching process, these variations could be resolved The average processing time for all test documents was 5.76 CPU seconds Most of this processing time was taken up by the feature extraction process In 291 


fact the matching time was only 0.54 CPU seconds Experimental results show that this method is practi cal in terms of both accuracy and processing speed A R Y-leYLb Figure 11 Examples of test samples  a Model I I Ill1 II  I  I,I c Defects in line quality Figure 12 ExampL b Differences of line arrangement I d Extra subforms of experimental results 6 Conclusion A form image understanding method based on a model matching approach has been described as part of an OCR system which can read a variety of forms This method can determine the form type and extract filled or unfilled blanks from an input image automati cally using models which define each category of form A hierarchical matching strategy based on sub graph matching is adopted in the proposed method This consists of global matching stages sub-form matching local matching stages line matching and the interactions between them The global variations and the local variations in the input image are treated by sub-form matching and line matching respectively Therefore it is possible to obtain flexible and effi cient matching between input images and form mod els This approach can also achieve inexact matching in the face of distortions due to noise because it has a less strict criterion for sub-isomorphisms in two hier archical relationships Experiments on a variety of documents have shown that the method is robust and effective even where document image quality is poor and where there are various styles of forms References l S L Taylor R Fritzson and J A Pastor x traction of data from preprinted forms 224 Machine Vision and Applications vol 5 no 3, pp 211 222, \(1992 2 R Casey D Ferguson K Mohiuddin and E Walach 223Intelligent forms processing system 224 Machine Vision and Applications vol 5 no 3 3 S W Lam L Javanbakht and S N Srihari 221%Anatomy of a form reader,\224 Proc 2nd ICDAR 4 T Watanabe Q Luo and N Sugie 223Structure recognition methods for various types of docu ments 224 Machine Vision and Applications vol 6 no 3 pp 163-176 1993 5 D H Ballard and C M Brown 223mputer Vi sion 224 Prentice-Hall, \(1982 6 A P Ambler H G Barrow C M Brown R M Burstall and R J Popplestone 223A ver satile system for computer-controlled assembly,\224 Artificial Intelligence vol 6 no 2 pp 129-156 1975 7 R Horaud and T Skordas,\223Stereo correspon dence through feature grouping and maximal cliaues 224 IEEE Trans Pattern Analvsis and Ma pp 143-155 1992 pp.506-509 1993 ch&e Intelligence vol.11 no.1 1 Gp.1168-1180 1989 8 H Ogawa 223Labelled point pattern matching by Delaunay triangulation and maximal cliques\224 Pattern Recognition vo1.19 pp.35-40, \(1986 9 Y Ishitani 223Document skew detection based on local region complexity,\224 Proc 2nd ICDAR lo Y Ishitani 223A model matching method for form image understanding 224 Technical Report of Japanese Inst of Electron Inf and CO\224 Eng., PRU94-34 pp.57-64, \(1994 pp.49-52 1993 292 


The right graph of Figure 6 shows the shape of the support curve for DS2.20 Length of Patterns Figure 6 Support curve for DS1.20 and DS2.20 5.1 Results Tables 2 and 3 show the experimental results that we ob tained for the DSl and DS2 datasets respectively Each row of the tables shows the results obtained for a differ ent DS1.z or DS2.z dataset specified on the first column The remaining columns show the amount of time required by different itemset discovery algorithms The column la beled 223FP-growth\224 shows the amount of time taken by the original FP-growth algorithm using a constant support con straint that corresponds to the smallest support of the sup port curve, 0.01 for DSl and 0.005 for DS2 The columns under the heading 223LPMiner\224 show the amount of time required by the proposed itemset discovery algorithm that uses the decreasing support curve to prune the search space A total of seven different variations of the LPMiner algo rithm are presented that use different combinations of the pruning methods described in Section 4 For example, the column label 223NP\224 corresponds to the scheme that uses only node pruning Section 4.2 whereas the column la beled 223NP+TP+PP\224 corresponds to the scheme that uses all the three different schemes described in Section 4 Note that values with a 223-\224 correspond to experiments that were aborted because they were taking too long time A number of interesting observations can be made from the results in these tables First either one of the LPMiner methods performs better than the FP-growth algorithm In particular the LPMiner that uses all three pruning methods does the best requiring substantially smaller time than the FP-growth algorithm For DSI it is about 2.2 times faster for DSl.10 8.2 times faster for DS1.20, 33.4 times faster for DS 1.30 and 1 15 times faster for DS 1.35. Similar trends can be observed for DS2 in which the performance of LP Miner is 4.2 times faster for DS2.10, 21.0 times faster for DS2.20 and 55.6 times faster for DS2.27 Second the performance gap between FP-growth and LPMiner increases as the length of the discovered frequent itemset increases recall that for both DS1.z and DS2.2 the length of the frequent itemsets increases with z This is due to the fact that the overall itemset space that LPMiner can prune becomes larger leading to improved relative per formance Third comparing the different pruning methods in isola tion we can see that NP and TF\222 lead to the largest runtime reduction and PP achieves the smallest reduction This is not surprising as PP can only prune itemsets during the late stages of itemset generation Finally the runtime with three pruning methods in creases gradually as the average length of the transactions and the discovered itemsets increases, whereas the run time of the original FP-growth algorithm increases expo nentially 6 Conclusion In this paper we presented an algorithm that can efficiently find all frequent itemsets that satisfy a length-decreasing support constraint The key insight that enabled us to achieve high performance was the smallest valid extension property of the length decreasing support curve So far, we have dealt with a common length-decreasing support for all the items However the proposed algorithm can be easily extended to allow different length-decreasing support constraint to be specified for each item or itemset References R Agarwal C Aggarwal V Prasad and V Crestana A tree projection algorithm for generation of large itemsets for as sociation rules IBM Research Report RC21341 November 1998 R Agrawal and R Srikant. Fast algorithms for mining asso ciation rules In Proc of the 20th Int\222l Conference on Very Large Databases Santiago, Chile, September 1994 E Cohen M Datar S Fujiwara A Gionis P Indyk R Mot wani J D Ullman and C Yang Finding interesting asso ciations without support pruning In ICDE pages 489499 2000 J Han J Pei and Y Yin Mining frequent patterns without candidate generation In Proc 2000 ACM-SIGMOD Int. Con5 Management of Data SIGMOD\222OO pages 1-12 Dallas TX May 2000 B Liu W Hsu and Y Ma Mining association rules with multiple minimum supports In SIGKDD 1999 1999 K Wang Y He and J Han Mining frequent itemsets us ing support constraints In The VLDB Journal pages 43-52 2000 M J Zaki Scalable algorithms for association mining IEEE Transactions on Knowledge and Data Engineering 12\(3 May/June 2000 M J Zaki and K Gouda Fast vertical mining using diffsets Technical Report 01-1 RPI 2001 511 


Table 2 Comparison of pruning methods using DS1 Table 3 Comparison of pruning methods using DS2 512 


 A A A A A A A A B B B B B B B A B A B A B A B AB A B A A A A B B B A B A B A A B B B B A B A B A B A B A B A B A disjoint B A inside B A contains B A equals B A meets B A covered by B A covers B A overlaps B A B A B A B A B A B AB Figure 4 Topology and resolution increase with minimum bounding circles 64Mb of main memory Since the Apriori algorithm uses the number of transactions as support and we wanted to compare our algorithm with Apriori we have implemented MaxOccur and the na\250 021ve with transaction based support MaxOccur1 The second version of MaxOccur MaxOccur2 used the object-based support as presented in Algorithm 3.1 Table 9 shows the average execution times for the four algorithms with different image set sizes and 033 0 0  05 for Apriori 223Na\250 021ve\224 and MaxOccur1 and 0  0035 for MaxOccur2 The results are graphically illustrated in Figure 5 Clearly MaxOccur scales well with both versions treating one thousand images in 1.3 seconds on average regardless of the size of the data set The running time for 002ltering the frequent item-sets with 033 0  the maximum support threshold line 16 of Algorithm 3.1 is negligible since it is done in main memory once the frequent item-sets are determined Moreover the calculation of the total number of items line 4 of Algorithm 3.1 is done during the 002rst scan of the data set and has limited repercussion on the algorithms execution time The major difference between Apriori and MaxOccur is in ascertaining the candidate item-sets and counting their repeated occurrences in the images Obviously MaxOccur discovers more frequent item-sets The na\250 021ve algorithm also 002nds the same frequent item-sets but is visibly capable of less performance in execution time The left graphic in Figure 6 shows the average number of frequent item-sets discovered with the three algorithms Apriori found on average 109 different frequent k-item-sets while MaxOccur1 and Na\250 021ve found 148 on the same data sets and MaxOccur2 found 145 on average The discrepancy between MaxOccur1 and MaxOccur2 is basically due to the different de\002nition of support The price we pay in performance loss with MaxOccur is gained by more frequent item-sets and thus more potentially useful association rules with recurrent items discovered ofimages Apriori Na\250 021ve MaxOccur1 MaxOccur2 10K 6.43 70.91 13.62 13.68 25K 15.66 176.69 32.35 34.11 50K 30.54 359.38 66.07 67.44 75K 44.93 514.33 97.27 101.23 100K 60.75 716.01 130.12 137.81 Table 9 Average execution times in seconds with different number of images 0 100 200 300 400 500 600 700 800 10K 25K 50K 75K 100K Apriori MaxOccur1 MaxOccur2 Na\357ve time images Figure 5 Scale up of the algorithms 6 Discussion and conclusion We have introduced in this paper multimedia association rules based on image content and spatial relationships between visual features in images using coarse to 002ne resolution approach and we have demonstrated the preservation and changes in topological features during resolution re\002nement We have put forth a Progressive Resolution Re\002nement approach for mining visual media at different resolution levels and have presented two algorithms for the discovery of content-based multimedia association rules These rules would be meaningful only in a homogeneous image collection a collection of semantically similar images or received from the same source channel Many improvements could still be added to the multimedia mining process to speed up the discovery or to re\002ne or generalize the discovered results 017 One major enhancement in the performance of the multimedia association rule discovery algorithms is the addition of some restrictions on the rules to be discovered Such restrictions could be given in a metarule form Meta-rule guided mining consists of dis#ofimages 033 0 0  25 0  20 0  15 0  10 0  05 10K 1.43 2.20 2.70 5.06 13.51 25K 2.80 4.78 6.31 11.20 32.35 50K 6.27 9.28 11.59 22.74 66.07 75K 8.24 13.57 17.69 33.94 97.27 100K 11.32 17.63 23.13 46.74 130.12 Table 10 Average execution time in seconds of MaxOccur with different thresholds 


 0 20 40 60 80 100 120 140 160 MaxOccur2 MaxOccur1 Na\357ve Apriori Apriori MaxOccur1 MaxOccur2 Na\357ve F k  Figure 6 Frequent item\255sets found by the dif\255 ferent algorithms covering rules that not only are frequent and con\002dent but also comply with the meta-rule template For example with a meta-rule such as 223 H-Next-to X Y   Colour x red  Overlap Y Z   P  Y Z  224 one need only to 002nd frequent 3-item-sets of the form f HNext-to\(red Y  Overlap Y 003  P  Y 003  g where Y is an attribute value and P a visual descriptor or spatial relationship predicate Obviously such a 002lter would greatly reduce the complexity of the search problem A method for exploiting meta-rules for mining multilevel association rules is given in  017 We have approximated an object in an image to a locale which is an area with a consistent visual feature such as colour Objects in images and videos are obviously more complex In a recent paper 9 re gions and their signatures are used as objects in a similarity retrieval system A computationally ef\002cient way to identify distinct objects in images is however still to be proposed Automatically identifying real objects and using spatial relationships between real objects would reduce the number of rules discovered and make them more signi\002cant for some multimedia applications 017 Object recognition or identi\002cation in image processing and computer vision is a very active research 002eld Accurately identifying an object in a video for example as being an object in itself is a very dif\002cult task We believe that data mining techniques can help in this perspective Multimedia association rules with spatial relationships using the motion vector of locales as a conditional 002lter can be used to discover whether locales moving together in a video sequence are part of the same object with a high con\002dence 017 There are many application domains where multimedia association rules could be applied and should be tested such as global weather analysis and weather forecast medical imaging solar surface activity understanding etc We are investigating the application with Magnetic Resonance Imaging MRI to discover associations between lesioned structures in the brain or between lesions and pathological characteristics Further development and experiments with mining multimedia data will be reported in the future References 1 R  A gr a w al and R  S r i kant  F ast a l gor i t h ms f o r m i n i n g a ssociation rules In Proc VLDB  pages 487\226499 1994 2 M  J  E genhof er  Spatial Query Languages  PhD thesis University of Maine 1989 3 M  J  E genhof er and J  S har ma T opol ogi cal r e l a t i ons between regions in r 2 and z 2 In Advances in Spatial Databases SSD'93  Singapore 1993 4 U  M  F ayyad S  G  D j or go vski  a nd N  W e i r  A ut omat i n g the analysis and cataloging of sky surveys In U Fayyad G Piatetsky-Shapiro P Smyth and R Uthurusamy editors Advances in Knowledge Discovery and Data Mining  pages 471\226493 AAAI/MIT Press 1996 5 Y  F u a n d J Han  M e ta-ru le-g u i d e d m in in g o f a sso ciatio n rules in relational databases In Proc 1st Int Workshop Integration of Knowledge Discovery with Deductive and ObjectOriented Databases  pages 39\22646 Singapore Dec 1995 6 J  H an an d Y  F u  Disco v e ry o f mu ltip le-le v el asso ciatio n r u l es from large databases In Proc VLDB  pages 420\226431 1995 7 Z  N  L i  O R Z a 250 021ane and Z Tauber Illumination invariance and object model in content-based image and video retrieval Journal of Visual Communication and Image Representation  10\(3\:219\226244 September 1999 8 R  M iller a n d Y  Y a n g  Asso ciatio n r u l es o v e r i n t erv a l d ata In Proc ACM-SIGMOD  pages 452\226461 Tucson 1997 9 A  N atse v  R Rasto g i  a n d K Sh im W ALR U S A s imilar ity retrieval algorithm for image databases In Proc ACMSIGMOD  pages 395\226406 Philadelphia 1999  R Ng L  V  S  L akshmanan J  H an a nd A Pang E x ploratory mining and pruning optimizations of constrained associations rules In Proc ACM-SIGMOD  Seattle 1998 11 R Srik an t a n d R Ag ra w a l M i n i n g q u a n titati v e asso ciatio n rules in large relational tables In Proc ACM-SIGMOD  pages 1\22612 Montreal 1996  P  S t ol or z H  N a kamur a  E  M esr obi an R  M unt z E  S h ek J Santos J Yi K Ng S Chien C Mechoso and J Farrara Fast spatio-temporal data mining of large geophysical datasets In Proc Int Conf on KDD  pages 300\226305 1995  O  R  Z a 250 021ane Resource and Knowledge Discovery from the Internet and Multimedia Repositories  PhD thesis School of Computing Science Simon Fraser University March 1999  O  R  Z a 250 021ane,J.Han,Z.-N.Li,J.Y.Chiang,andS.Chee MultiMediaMiner A system prototype for multimedia data mining In Proc ACM-SIGMOD  Seattle 1998  O  R  Z a 250 021ane J Han Z.-N Li and J Hou Mining multimedia data In CASCON'98 Meeting of Minds  Toronto 1998 


18001  balancing mechanism which requires further investi gation 4.5 Speedup Figure 12 shows the speedup ratio for pass 2 vary ing the number of processors used, 16 32 48 and 64 where the curve is normalized with the 16 processor execution time The minimum support value was set to 0.4 4.5 0.5 1 1 0 I 10 20 30 40 50 60 70 number of mxessors Figure 12 Speedup curve NPA HPA and HPA-ELD attain much higher lin earity than SPA HPA-ELD an extension of HPA for extremely large itemset decomposition further in creases the linearity HPA-ELD attains satisfactory speed up ratio This algorithm just focuses on the item distribution of the transaction file and picks up the extremely frequently occurring items Transferring such items could result in network hot spots HPA-ELD tries not to send such items but to process them locally. Such a small mod ification to the original HPA algorithm could improve the linearity substantially 4.6 Effect of increasing transaction Figure 13 shows the effect of increasing transac tion database sue as the number of transactions is increased from 256,000 to 2 million transactions We used the data set t15.14 The behavior of the results does not change with increased database size The minimum support value was set to 0.4 The num ber of processors is kept at 16 As shown each of the parallel algorithms attains linearity 5 Summary and related work In this paper we proposed four parallel algorithms for mining association rules A summary of the four database size Sizeup 0 I 0 500 loo0 1500 uxw amount of transaction thousands Figure 13 Sizeup curve algorithms is shown in Table 5 In NPA the candi date itemsets are just copied amongst all the proces sors Each processor works on the entire candidate itemsets NPA requires no data transfer when the supports are counted However in the case where the entire candidate itemsets do not fit within the mem ory of a single processor the candidate itemsets are divided and the supports are counted by scanning the transaction database repeatedly Thus Disk 1/0 cost of NPA is high PDM, proposed in 6 is the same as NPA which copies the candidate itemsets among all the processors Disk 1/0 for PDM should be also high The remaining three algorithms SPA HPA and HPA-ELD partition the candidate itemsets over the memory space of all the processors Because it better exploits the total system's memory, disk 1/0 cost is low SPA arbitrarily partitions the candidate itemsets equally among the processors Since each processor broadcasts its local transaction data to all other pro cessors the communication cost is high HPA and HPA-ELD partition the candidate itemsets using a hash function which eliminates the need for transac tion data broadcasting and can reduce the comparison workload significantly HPA-ELD detects frequently occurring itemsets and handles them separately which can reduce the influence of the workload skew 6 Conclusions Since mining association rules requires several scans of the transaction file its computational requirements are too large for a single processor to have a reasonable response time This motivates our research In this paper we proposed four different parallel algorithms for mining association rules on a shared nothing parallel machine and examined their viabil 29 


Table 5 characteristics of algorithms ity through implementation on a 64 node parallel ma chine the Fujitsu AP1000DDV If a single processor can hold all the candidate item sets parallelization is straightforward It is just suf ficient to partition the transaction over the proces sors and for each processor to process the allocated transaction data in parallel We named this algo rithm NPA However when we try to do large scale data mining against a very large transaction file the candidate itemsets become too large to fit within the main memory of a single processor In addition to the size of a transaction file a small minimum support also increases the size of the candidate itemsets As we decrease the minimum support computation time grows rapidly but in many cases we can discover more interesting association rules SPA HPA and HPA-ELD not only partition the transaction file but partition the candidate itemsets among all the processors We implemented these al gorithms on a shard-nothing parallel machine Per formance evaluations show that the best algorithm HPA-ELD attains good linearity on speedup by fully utilizing all the available memory space which is also effective for skew handling At present we are doing the parallelization of mining generalized association rules described in 9 which includes the taxonomy is-a hierarchy Each item belongs to its own class hierarchy In such mining associations between the higher class and the lower class are also examined Thus the candidate itemset space becomes much larger and its computation time also takes even longer than the naive single level association mining Parallel pro cessing is essential for such heavy mining processing Acknowledgments This research is partially supported as a priority research program by ministry of education We would like to thank the F\221ujitsu Parallel Computing Research Center for allowing us to use their APlOOODDV sys tems References l R.Agrawal T.Imielinski and ASwami 223Min ing Association Rules between Sets of Items in Large Databases\224 In Proc of the 1993 ACM SIGMOD International Conference on Manage ment of Data pp207-216 May 1993 2 R.Agrawal and RSrikant 223Fast Algorithms for Mining Association Rules\224 In Proc of the 20th International Conference on Very Large Data Bases pp.487-499 September 1994 3 J.S.Park M.-S.Chen and P.S.Yu 223An Effec tive Hash-Based Algorithm for Mining Associ ation Rules\224 In Proc of the 1995 ACM SIG MOD International Conference on the Manage ment of Data SIGMOD Record Vo1.24 pp.175 186 June 1995 4 H.Mannila H.Toivonen and A.I.Verkamo 223Ef ficient Algorithms for Discovering Association Rules\224 In KDD-94:AAAI Workshop on Knowl edge Discovery in Databases pp.181-192 July 1994 5 A.Savasere, E.Omiecinski and S.Navathe 223An Effective Algorithm for Mining Association Rules in Large Databases\224 In Proc of the 21th International Conference on Very Large Data Bases pp.432-444 September 1995 6 J.S.Park M.-S.Chen and P.S.Yu 223Efficient Parallel Data Mining for Association Rules\224 In Proc of the 4th International Conference on In formation and Knowledge Management pp.31 36 November 1995 7 T.Shintani and M.Kitsuregawa 223Considera tion on Parallelization of Database Mining\224 In Institute of Electronics Information and Com munication Engineering Japan SIG CPS Y95 88 Technical Report Vo1.95 No.47 pp.57-62 December 1995 8 T.Shimizu T.Horie and H.Ishihata 223Perfor mance Evaluation of the APlOOO Effects of message handling broadcast and barrier syn chronization on benchmark performance-\224  In S WO PP 22292 9.2 ARC 95 Information Processing Society of Japan Vo1.92 No.64 1992 9 R.Srikant and R.Agrawal 223Mining Generalized Association Rules\224 In Proc of the 21th Inter national Conference on Very Large Data Bases pp.407-419 September 1995 30 


Plenary Panel Session 30 XML Databases   Moderator: Michael Carey, IBM Almaden Research Center USA Panelists Adam Bosworth, Microsoft Corporation USA David De Witt University of Wisconsin-Madison, USA Alon Levy University of Washington USA Bruce Lindsay IBM Almaden Research Center USA Jennifer Widom Stanford University USA Demo Session 1 Web Query Optimizer  661 V Zadorozhny L Bright L Raschid T Urhan and M Vidal ReQueSS: Relational Querying of Semi-structured Data  664 R Sunderraman The IDEAL Approach to Internet-Based Negotiation for E-Business  666 J Hammer C Huang Y Huang C Pluempitiwiriyawej M Lee H Li L Wang Y Liu and S Su READY A High Performance Event Notification Service  668 R Gruber B Krishnamurthy, and E Panagos A Multimedia Information Server with Mixed Workload Scheduling  670 G Nerjes DISIMA An Object-Oriented Approach to Developing an Image Database System  672 V Oria T Ozsu P Iglinski B Xu and L Cheng Demo Session 2 The Collaboration Management Infrastructure  677 H Schuster D Baker A Cichocki D Georgakopoulos and M Rusinkiewicz Assisting the Integration of Taxonomic Data The LITCHI Toolkit  679 I Sutherland J Robinson S Brandt A Jones S Embury W Gray R White and F Bisby TheaterLoc: Using Information Integration Technology to Rapidly Build Virtual Applications  681 G. Barish Y.4 Chen D Dipasquo, C Knoblock S Minton I Muslea and C Shahabi Lineage Tracing in a Data Warehousing System  683 Y Cui and J Widom xiii 


The Mentor-Lite Prototype A Light-Weight Workflow Management System  685 J Weissenfels M Gillmann 0 Roth, G Shegalov and W Wonner Location Prediction and Queries for Tracking Moving Objects  687 0 Wolfson B Xu and S Chamberlain Semiorder Database for Complex Activity Recognition in Multi-Sensory Environments  689 S Bhonsle A Gupta S Santini and R Jain Tutorial 1 Web Information Retrieval  693 M Henzinger Tutorial 2 Mobile and Wireless Database Access for Pervasive Computing  694 P Chrysanthis and E Pitoura Tutorial 3 Data Mining with Decision Trees  696 J Gehrke Tutorial 4 Directories Managing Data for Networked Applications  697 D Srivastava Tutorial 5 Indexing High-Dimensional Spaces Database Support for Next Decade\222s Applications  698 S Berchtold and D Keim xiv 


 T5.I2.D100K T10.I4.D100K T15.I4.D100K T10.I6.D400K T10.I6.D800K T10.I6.D1600K Optimizations across Databases 5 0 5 10 15 20 25 30 35 40 45 Improvement COMP TREE COMP-TREE 1 2 4 8 1 2 4 8 1 2 4 8 2 4 8 2 4 8 1 2 4 8 Processors Databases Figure 5 Effect of Computation and Hash Tree Balancing good as the COMP optimization The reason that the hash tree balancing is not suf\336cient to offset inherent load imbalance in the candidate generation in this case The most effective approach is to apply both optimizations at the same time COMP-TREE The combined effect is suf\336cient to push the improvements in the 40 range in the multiple-processor case On 1 processor only hash tree balancing is bene\336cial since computation balancing only adds extra cost 5.4 Short-circuited Subset Checking Figure 6 shows the improvement due to the short-circuited subset checking optimization with respect to the unoptimized version The unoptimized version is the Apriori algorithm due to Agrawal et al 5 The results are presented for dif ferent number of processors across dif ferent databases The results indicate that while there is some improvement for databases with small transaction sizes the optimization is most effective when the transaction size is large In this case we get improvements of around 25 r the unoptimized version To gain further insight into this optimization consider 336gure 7 It shows the percentage improvement obtained per iteration on applying this optimization on the T20.I6.D100K database It shows results only for the uni-processor case r similar results were obtained on more processors We observe that as the iteration k increases there is more opportunity for shortcircuiting the subset checking and we get increasing bene\336ts of up to 60 The improvements start to fall off t the high end where the number of candidates becomes small resulting in a small hash tree and less opportunity for short-circuiting It becomes clear that is an extremely effective 15 Proceedings of the 1996 ACM/IEEE Conference on Supercomputing \(SC\22296 0-89791-854-1/96 $ 10.00 ACM 


 T5.I2.D100K T10.I6.D800K T15.I4.D100K T20.I6.D100K procs across Databases 0 5 10 15 20 25 Improvement 1 2 4 8 Figure 6 Effect of Short-circuited Subset Checking 23456789101112 Iterations 0 10 20 30 40 50 60 improvement T20.I6.D100K Figure 7  Improvement per Iteration  proc   16 Proceedings of the 1996 ACM/IEEE Conference on Supercomputing \(SC\22296 0-89791-854-1/96 $ 10.00 ACM 


optimization for larger transaction sizes and in cases where there are large number of candidate k itemsets 6 Conclusions In this paper e presented a parallel implementation of the Apriori algorithm on the SGI Power Challenge shared memory multi-processor We also discussed a set of optimizations which include optimized join and pruning computation balancing for candidate generation hash tree balancing and short-circuited subset checking We then presented experimental results on each of these Improvements of more than 40 were obtained for the computation and hash tree balancing The short-circuiting optimization was found to be extremely effective for databases with large transaction sizes Finally we reported the parallel performance of the algorithm While we d good speed-up we observed a need for parallel I/O techniques for further performance gains References  R Agra wal T  Imielinski and A Swami Database mining A performance perspecti v e  I n IEEE Trans on Knowledge and Data Engg  pages 5\(6 1993  R Agra wal T  Imielinski and A Swami Mining association rules between sets of items in lar ge databases In Proc M SIGMOD Intl Conf Management of Data  May 1993  R Agra wal H Mannila R Srikant H T o i v onen and A I V erkamo F ast disco v ery of association rules In U F et al editor Advances in Knowledge Discovery and Data Mining  MIT Press 1996  R Agra wal and J Shafer  P arallel mining of association rules design implementation and e xperience Technical Report RJ10004 IBM Almaden Research Center San Jose CA 95120 Jan 1996  R Agra wal and R Srikant F ast algorithms for mining association rules In Proc 20th VLDB Conf  Sept 1994  M Cierniak W  Li and M J Zaki Loop scheduling for heterogeneity  I n 4th IEEE Intl Symposium on High-Performance Distributed Computing also as URCS-TR 540 CS Dept Univ f Rochester  Aug 1995  M Holsheimer  M  K ersten H Mannila and H T o i v onen A perspecti v e on databases and data mining In 1st Intl Conf Knowledge Discovery and Data Mining  Aug 1995  M Houtsma and A Swami Set-oriented mining of association rules In RJ 9567  IBM Almaden Oct 1993  H Mannila H T o i v onen and I V erkamo Ef 336cient algorithms for disco v ering association rules In AAAI Wkshp Knowledge Discovery in Databases  July 1994  J S P ark M Chen and P  S Y u  A n e f fecti v e hash based algorithm for mining association rules In Proc M SIGMOD Intl Conf Management of Data  May 1995 17 Proceedings of the 1996 ACM/IEEE Conference on Supercomputing \(SC\22296 0-89791-854-1/96 $ 10.00 ACM 


 J S P ark M Chen and P  S Y u  E f 336cient parallel data mining for association rules T echnical Report RC20156 IBM T J Watson Research Center Aug 1995  G Piatetsk y-Shapiro Disco v ery  presentation and analysis of strong rules In G P S et al editor  KDD  AAAI Press 1991  A Sa v asere E Omiecinski and S Na v athe An ef 336cient algorithm for mining association rules in large databases In Proc 21st VLDB Conf  1995  M J Zaki M Ogihara S P arthasarathy  and W  Li P arallel data mining for association rules on shared-memory multi-processors Technical Report 618 Department of Computer Science University of Rochester 618 1996 18 Proceedings of the 1996 ACM/IEEE Conference on Supercomputing \(SC\22296 0-89791-854-1/96 $ 10.00 ACM 


