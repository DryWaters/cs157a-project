Yun Chen School of Publics Economics&Administration Shanghai University of Finance & Economics Shanghai, China chenyun@mail.shufe.edu.cn Yuebo Liu Division of Science & Technology Shanghai university of Engineering Science Shanghai,China liuyuebo@gmail.com 
204During the product configuration design stage, it is 
Abstract 
Interesting knowledge exploring for product component selection Li Yu Academy of Modern Service Industries Shanghai University of Finance & Economics Shanghai, China yuli_shufe@163.com  
important to find useful knowledge to reduce the dedicated efforts of engineers. To fulfill this task, the quality and interestingness of knowledge plays the decisive part. This paper utilizes Apriori algorithm to mine rules from historical data base In addition the traditional criterions - support and confidence the criterion - interestingness is also applied to filter rules that might misguide design engineers. The validity of the proposed model is illustrated by a case of electrical bicycles 
Keywords- Apriori algorithm; customer needs; product component; product configuration design 
I I NTRODUCTION Product configuration design is a form of design that maps a set of functional requirements into an assembly of selected pre-defined components while satisfying a set of constraints 1  T o m e a t t h e i n cr ea si ng and t i m e va r y i ng m a r k i ng ni c h e s  companies have to accomplish this stage within less time and expense. Discover product configuration knowledge from existing design cases is an efficient way to handle this situation 2 o w e ve r  co nfi gur a t i o n kno w l e d ge t h at  e m b o d i ed i n  historical database is implicit and difficult to interpret. Then, it becomes imperative for engineers to find useful information to 
meet various functional requirements Past researches on product configuration design explore multiple solutions to learn knowledge from historical design cases. Romanowski and Nagi proposed a novel, systematic data mining-based methodology to generate generic bills of materials from historical databases [3 Ba se d o n  a  se t o f  product data comprising product requirements specification and configuration information, Huang et al. adopted an association rule mining algorithm to discover useful patterns between requirement specification and product components 
including the correlation among product components [4 Similarly, Shao et al. combines data mining and rough set to tackle the relationship between customer needs, product specifications and configuration alternatives   It can be seen that mining association rules from the existing design cases is an effective method to reduce the dedicated efforts of engineers. To guarantee the quality of the association rules, most researches use support and confidence criterion to select valuable rules. However, rules with high support and confidence still could be useless or even 
misleading [6 i nst t h i s  de fi c i e n c y  o u r pa per  i n t r od uc ed  a new criterion - interestingness to maintain the correctness and interestingness of configuration knowledge. This criterion can be used to filter uninteresting rules out of the rule base. The remainder can then help engineers educe suitable product components, i.e. design alternatives, for different functional requirements The rest of this paper is organized as follows. In section 2 the framework of the work is discussed. In section 3, the association rule extraction with three criterions is illustrated. In 
section 4, a case study of association rule extraction in a electrical bicycle company is presented. Finally in section 5 the main contribution of this paper is summarized and the future work is discussed II P ROBLEM FORMULATION Product configuration refers to the process through which the customer\220s needs are translated into the product information needed for tendering and manufacturing \(typically product cost, bill of materials \(BOM\ production cycle, etc  n d produ ct conf i g u ra tion des i g n is a proces s t h at  resources and relative quantities must be carefully selected or developed through an iterative process for each feasible configuration o im prov e t h e w o rk i n g eff icie n c y a n d 
reduce the developing expense of product configuration design, design engineers should make full use of the knowledge of existing products or historical product [4 a ta mining is considered as an effective method to extract knowledge from the past design data. This paper utilize Apriori algorithm to mine association rules for supporting This research is supported by the Shanghai key scientific and 978-1-4244-4994-1/09/$25.00 \2512009 IEEE 
technological project \(Grant No. 08DZ1120500 


configuration design. The framework of the method can be seen in Fig. 1  Figure 1. Problem formulation In our method, association rule mining based product configuration design can be divided into four steps 1\ At the beginning stage of product design, design engineers develop new components for different functional requirements based on their experience and design principles 2\The successful design cases are stored in the historical database as references. Each case is composed of functional requirements \(FRs\nd corresponding configuration alternatives \(DPs 3\nfiguration rules are extracted from existing design database using Apriori algorithm. In accordance with the three criterions: confidence, support and interestingness good association rules are selected and stored in knowledge base 4\hen a new functional requirement emerges designers can quickly derive suitable alternatives with the help of configuration rules This paper focus on the third step of the whole process i.e., association rule extraction from existing configuration cases with Apriori algorithm, which will be discussed in detail at the next section. Here, each configuration case contains several functional requirements and configuration alternatives The functional requirements of a case can be described as a vector p FV  12     I f rfr fr    2  1  P p  where P is the total number of function requirement vector and I is the number of functional features or attributes. Each functional requirement attribute 1 2 i f ri I  may take on one out of a finite set of options 12     i J iii i f rfrfr fr  where i J denotes the option number of the th i feature. Thus the requirement information of a particular case p FV can be depicted by a vector of certain options of these features. For example 21 3 12     p I f rfr fr  FV where 2 1 f r refers to the second option of feature 1 f r that is chosen by the th p case 1 2 f r the first option of feature 2 f r and 3 I f r the third option of feature I f r  Similarly, the configuration alternatives of a case can be described as a vector q DV  12     II dp dp dp  1 2  qQ  where Q is the total number of configuration alternative vector and I I is the number of alternatives. Each configuration alternative 1 2 i dp i II  may take on one out of a finite set of options 12     i L iii i dp dp dp dp  where i L denotes the option number of the th i alternative. Thus the requirement information of a particular case p DV can be depicted by a vector of certain options of these alternatives Therefore, based on the design cases and product documentation, each configuration records T is depicted as follows    1 2  hh hH  FV DV where H is the number of historical configuration records. These coupled vectors that reflect the mapping relationship among functional requirements and configuration alternatives are used for association rule mining. It does help design engineers fulfill the configuration design task with less time and expense III R ULE EXTRACTION WITH A PRIORI ALGORITHM Apriori algorithm is an association rule mining technology used to discover useful patterns in historical database It is w i del y u s e d  in m a ny f i elds s u c h  a s m a rk et  analysis, financial management, manufacturing, geographic information analysis, etc Traditional Apriori algorithm uses support and confidence to select rules. However, it is inadequate as those rules with high support and confidence still could be useless or even misleading o en s u re th e qu ali t y a n d interes ti n g n e s s  of the extracted rules, this article uses three criterions while mining association rules. As illustrated in Fig. 2, association rules are obtained against support, confidence and interestingness Figure 2. Association rule mining Firstly, use Apriori algorithm to generate association rules with high support and confidence. Assume that T     1 2  hh hH  FV DV is a database of configuration cases. Then, an association rule can be expressed as IF A THEN C, where A and C are specific attribute values of functional requirements and configuration alternatives separately. The support and confidence value of a association rule can be calculated as following equations 


  sup\(A C TA C T  1  con   TA C AC TA  2 where T\(A\ is the number of cases in database T satisfying all the conditions in the antecedent A, T\(A&C\ is the number of samples in database T satisfying all the conditions in both antecedent A and consequent C T is the number of transactions. The support and confidence values fall between zero and one To guarantee the quality of rules, minimal support and confidence threshold is set. The rules with high support and confidence are preserved. That is, only the rule that covers most of the configuration cases in database and has few negative cases will be selected to the association rule base Secondly, interestingness is utilized to filter rules. To show the effect of interestingness, let us assume that a rule çIF A THEN C AC  hose support is 0.5 and confidence is 0.6, i.e  sup\(A C 0.5 TA C T    con  0.6  TA C AC TA   Although the rule shows high support and confidence, it is not a good rule if the support of the consequent part C is 0.65, i.e  sup  0.65 TC C T   Denote the negative form of the above rule as IF A THEN C Its confidence is    con  0.9 con    TA C TC TA C AC AC TTA TA        That is to say, A and C are in fact negative associated. This negative dependence leads to not considering AC  as a good rule, otherwise engineers might make wrong decisions Hence, the criterion of interestingness is applied to eliminate such rules. This paper uses a data-driven and domain-independent method to calculate the interestingness of a ru sup  I  1 sup  sup  AC AC AC     3 This measure gives an indication of the dependence of A and C. If A and C are dependent, the function I  AC  is bigger than 0. If A and C are independent, the function I  AC  tends to be 0. If the relationship between A and C are weaker than independent, the function I  AC  is smaller than 0. In our research, rules with I  0 AC  are considered as interesting rules, whereas rules with I  0 AC  are considered to be uninteresting and eliminated from the rule base IV C ASE STUDY In this section, the actual data obtained from a company is used to verify the effectiveness of the proposed method This company is one of the producers of electrical bicycles Electrically powered bicycle \(EPB\ is a bicycle that generally operates by electric motor propulsion with the ability to use human power assistance if needed. Without generating pollution, it is easy to ride even against strong winds or riding up hills. Nowadays in china, more and more people prefer riding an electrical bicycle for recreation or commuting. Faced with the challenge that accomplishes configuration design within short lead time and low cost, design engineers need to effectively interact with useful knowledge of existing design database. Hence, this research tries to extract association rules between functional requirements and configuration alternatives. These rules can help design engineers understand the internal logic of configuration design and develop proper products The existing configuration cases of the EBP company are used as the database. For illustrative simplicity, each case contains two functional requirements and nine configuration alternatives. The two functional requirements of EBP and its options can be seen in Table I. Table II shows the nine configuration alternatives of EBP. Twelve configuration cases are used for rule extraction. As illustrated in Table III, the first column is the configuration case ID and the following columns represent its functional requirements and configuration alternatives. For more details about these data readers might refer to the literature of Sh  Table I Functional requirements of EBP Functional requirements Options Maximum Speed 1 f r  16 1 1 f r  18 2 1 f r  20 3 1 f r  Driving range 2 f r  40 1 2 f r  50 2 2 f r  60 3 2 f r  Table II Configuration alternatives of EBP Configuration alternatives Options Battery 1 dp  12amp.H lead-acid 1 1 dp 15amps.H nickel-hydrogen  2 1 dp  Charger 2 dp  Slow-charging 1 2 dp Quick-charging 2 2 dp  Controller 3 dp  Basic 1 3 dp Intelligent 2 3 dp  Ele-Engine 4 dp  Without brush and teeth 1 4 dp Having brush without teeth 2 4 dp Having teeth without Brush 3 4 dp  Framework 5 dp  Motor-like with absorber 1 5 dp Common without absorber 2 5 dp  Seat 6 dp  Common 1 6 dp Luxury 2 6 dp  Lamps & Lanterns  7 dp  Common 1 7 dp Luxury 2 7 dp  


Instruments 8 dp  Common 1 8 dp Luxury 2 8 dp  Type & spoke  9 dp  Steel wire spoke 1 9 dp Aluminum spoke 2 9 dp   Table III The existing configuration cases ID Functional requirements Configuration Alternatives 1 f r 2 f r 1 dp 2 dp 3 dp 4 dp 5 dp 6 dp 7 dp 8 dp 9 dp 01 1 1 f r 2 2 f r 1 1 dp 2 2 dp 2 3 dp 3 4 dp 2 5 dp 2 6 dp 1 7 dp 02 1 1 f r 2 2 f r 1 1 dp 2 2 dp 2 3 dp 3 4 dp 1 7 dp 03 1 1 f r 2 2 f r 1 1 dp 1 2 dp 2 4 dp 2 5 dp 1 7 dp 2 9 dp  12 3 1 f r 3 2 f r 2 1 dp 2 2 dp 2 3 dp 2 4 dp 1 7 dp 1 8 dp Then, Apriori algorithm is used to mine association rules from the twelve configuration cases. The algorithm is implemented in Matlab 7.0 on the Pentium 4 3.06 GHz PC with the following parameters: Support = 0.25, Confidence 0.5. As a result, 39 association rules are extracted as listed in Table IV. Each row of the table can be translated into an association rule. Take rule No.3 as an example, it can be expressed as: IF \(Maximum Speed=16\THEN Controller=intelligent\with Support = 0.25 and Confidence 0.75 Table IV Association rules against support and confidence No Antecedent Consequent Support Confidence 1 3 1 f r 2 2 dp 0.25 1 2 1 f r 2 2 dp 0.25 0.6 1 1 f r 2 3 dp 0.25 0.75  39 1 2 f r 2 2 dp 0.25 0.6 Although the rules in Table IV have high support and confidence values, they still could be useless for design engineers. For example, the rule No.2: IF \(Maximum Speed=18\ THEN \(Charger=quick-charging\ has support value 0.25 and confidence value 0.6. And the support of its antecedent part is 0.42 and the support of its consequent part is 0.67. Then, the negative form of rule No.2 is IF \(Maximum Spee 18\ THEN \(Charger=quick-charging\. The negative ruleês confidence is 0.71. It is bigger than the origin ruleês confidence 0.6, which means that the antecedent part and the consequent part of rule No.2 are in fact negatively associated Therefore, interestingness criterion is utilized to filter such rules. For instance, the interestingness value of rule No.2 is 0.25 I1-0.110 0.42*0.67  So the rule No.2 should be eliminated from the rule base. After the calculation of each ruleês interestingness value, 36 rules are remained as listed in Table V. These rules can help design engineers understand the mapping relationship between EBP functional requirements and EBP configuration alternatives Table V Remaining association rules No Antecedent Consequent Support Confidence Interestingness 1 3 1 f r 2 2 dp 0.25 1 0 1 1 f r 2 3 dp 0.25 0.75 0  0 36 2 2 f r 1 1 dp 0.33 1 0 V C ONCLUSION This work proposes a method to mine association rules from historical case base for improving the working efficiency of configuration design. To ensure the quality and interestingness of knowledge, three criterions are used to select association rules: support, confidence and interestingness. Apriori algorithm is utilized for rule mining against those criterions. To demonstrate the effect of the proposed method, a case study of electrical bicycles is investigated. The results show that our method can generate rules with good performance Future work can be: develop an integrated methodology of how to use the extracted knowledge, apply the method in a more sophisticated product, etc R EFERENCES 1 B o b J  W i e l ing a G uus S c hr e i be r  Co nf ig ur a tio nD e s i g n P r o b l e m  Solving, IEEE Expert: Intelligent Systems and Their Applications, Vol 12, No. 2. March 1997, pp. 49-56 2 P r o duc t co nf ig ur at io n sy ste m s  state o f the ar t, co n c e p t u al iz at io n a n d  extensions 3 Car o l J   Ro m a no w s ki a n d R a ke s h N a g i  2 0 0 4  A dat a m i n i ng a ppr o a ch  to forming generic bills of materials in support of variant design activities. Journal of Computing and Information Science in Engineering, 4 \(4\Ö328 4 A uto m ati n g  kno w l e dge acq uis it io n f o r co ns tr a i n t b as e d  pr o d u c t  configuration 5 X  Y S h a o Z H W a n g P  G  Li C  X J  F e n g  I n t egr a t i n g d a t a  mining and rough set for customer group-based discovery of product configuration rules, International Journal of Production Research, 1366588X, Volume 44, Issue 14, 2006, Pages 2789 Ö 2811 6 G ho s h, A  N a th,B  2 00 4  Mul t i o bje ct iv e r u l e m i ni ng us ing g e ne ti c  algorithms. Information Sciences, 163\(1Ö3\ 123Ö133 7 P r o duc t co nf ig ur a t io n an d in te r f i r m co o r d in at io n an i nno v a t i v e  solution from a small manufacturing enterprise 8 C on fi gu r a ti on Des i gn of C o m p lex I n t e gra t e d M a nu fa ct u r i n g Sy s t em s  9 A gr aw a l R S r i k a n t R  1 99 4 F a s t  A l g o r i thm s f o r  Mi ni ng A s s o ciatio n  Rules. In: Proceeding of the 20th Int. Conference on Very Large Databases. Santiago, Chile: 487-499 


  Figure 1. Building applications Model Weights of the condition attribu tes of Bank Loan are presented in Table 2. ERIM measure is defined se d  on the weight of attribut es, and these weights were determined to depend on the concept hierarchy, the attributes of the same hierarchy are same weight and equal weight of that hierarchy. But in this article the author is not set up the concept hierarchy because data source of Bank Loan has a few attributes T ABLE 2  W EIGHTS OF CONDITION ATTRIBUTES OF THE B ANK L OAN  Number Condition attribute Weight 1 Money 7 2 Interest 3 3 Period 3 4 Original payment 1 5 Interest payment 1 6 Prestige 7 7 Number of previous loans 4 8 Age 7 9 Marital Status 4 10 Number of dependent 4 11 Ensuring debit 8 12 Income 8 13 Afford to debit 8 Experimental result Table 3 is presented the results of 15 times for the experiment with three RIM, ERIM and AWERIM measures Fig.2 is represented by drawings about accuracy in cases for each measure from the data in Table 3  Discussion Although the number of rules using three RIM, ERIM and AWERIM measures lower th an entire set of rules if the rule set does not use any these measures but subclasses that are built by three measures give test results which are the more correct than when subclasses are not built by three these measures, especially when the AWERIM measure is used \(see table 3\IM measure is a advanced RIM measure but result of the ERIM measure is not the better result of RIM measure. Compared with the 2 measures proposed by Jiye Li \(RIM ERIM\AWERIM measure of this article almost gives the better results T ABLE 3  R ESULTS OF 15 TIMES FOR EXPERIMENTS WITH RIM  ERIM AND AWERIM MEASURES ON DATA SOURCE OF B ANK L OAN  All rules RIM ERIM AWERIM Number   of rules Accuracy   of rules Accuracy   of rules Accuracy   of rules Accuracy 1 185 71.32 131 87.84% 131 87.84 131 93.24 2 152 68.70%  144 84.21% 144 77.63 144 88.16 3 163 70.67 86 86.67% 86 81.33 86 89.33 4 196 70.37 131 87.65% 131 87.65 131 91.36 5 174 65.85%  164 75.61% 164 78.05 164 82.93 6 176 76.62%  128 85.71% 128 87.01 128 87.01 7 183 62.82% 162 78.21% 162 78.21 162 78.21 8 198 64.79 123 80.28% 123 80.28 123 81.69 9 167 70.51 98 83.33% 98 83.33 98 88.60 10 177 69.62 138 80.52% 138 80.52 138 80.52 11 198 72.37 152 77.63% 152 80.26 152 85.53 12 191 67.90 140 82.72% 140 82.72 140 87.65 13 178 64.38 118 82.19% 118 82.19 118 90.41 14 200 63.85 164 79.49 164 79.49 164 82.19 15 183 70.51%  150 93.59% 150 91.03 150 93.59 1955 Proceedings of the Ninth International Conference on Machine Learning and Cybernetics, Qingdao, 11-14 July 2010 


  Figure  2. The Chart compares the accuracy of the subclasses that are used RIM, ERIM, and AWERIM measures 6  Conclusion In the article, the authors pr esent technical evaluation based on the rough set theory of Li Jiye, RIM and ERIM measures, propose a AWERIM measure. Experimental results on data source of Bank Loan prove effectiveness of rule set used AWERIM measure and compare them with ERIM and RIM measures At the present the authors intend to build applications with multiple attributes of data source to test the AWERIM measure performance used concept hier n d develop other measure by combin ing two kind of subjective and objective measures to evaluate the rule Reference 1  Jiye Li, Nick Cercone, W. H . Wong, Lisa Jing Yan 2009 Enhancing Rule Importance Measure Using Concept Hierarchy Faculty of Computer Science and Engineering, York University 2  Jiye Li, Nick Cercone \(2005 Discovering and Ranking Important Rules Granular Computing, IEEE International Conference on Volume 2 3  P. Tan, V. Kumar, J. Sivastava \(2002 Selecting the Right Interestingness Measure for Association Patterns in SIGKDDê02 ACM 4  M. J. Zaki, C. J. Hsiao \(2005 Efficient Algorithms for Mining Closed Itemsets and Their Lattice Structure IEEE Transactions on Knowlegde and Data Engineering 5  Z. Pawlak \(1991 Rough Sets Ö Theoretical Aspects of Reasoning about Data Kluwer Academic Publishers, Dordrecht 6  A. Skowron, C. Rauszer \(1991 The Discernibility Matrices and Functions in Information Systems  7  Aleksander Ohrn \(1999 Discernibility and Rough Sets in Medicine: Too ls and Applications PhD thesis Department of Computer and Information and Science, Norwegian University of Science and Technology, Trondheim Norway. The ROSETTA Homepage, http://www.id i.ntnu.no/~aleks/rosetta 8  N. H. Son \(1997 Discretization of Real Value attributes A Boolean Reasoning approach. Thesis for Doctor of Philosophy 9  S. Mutter \(2004 Classification usin g Association Rules A thesis of Diploma of Computer Science at the University of Freiburg  1956 Proceedings of the Ninth International Conference on Machine Learning and Cybernetics, Qingdao, 11-14 July 2010 


7 ForestCoverType  data is shown in Figure 6 Appendix as an example The tool takes this data as input and produces the hierarchical clusters of data by setting different clustering parameters With the help of this tool user can see  the generated hierarchy of the clusters along with the data present in each cluster. For the experiment we sele cted the row wise clustering option and the algorithm used f or this type of clustering was the Euclidean algorithm. The reason for this choice is that Euclidean distance is the m ost commonly used type of distance measure in cluster analysis It uses raw data instead of standardized data to compute the distances Using the complete linkage method the hierarchal clusters are produced, it can be seen from the Figu re 2 that 3 distinct clusters are produced where each one of them is having its specific hierarchy B Automatic Schema generation In this step the cluster results file which was ex ported using the HCE tool becomes the input of the automat ic schema builder. We developed a prototype to automat e the process of schema generation The prototype takes t he clustered data and generates the schema of any part icular type such as star snowflake or galaxy/constellatio n The prototype has been developed using the C sharp C  programming language in Microsoft Visual Studio.net 2005 Once the hierarchical clustering has been done, the  next step is to extract this hierarchical information in the form of cluster information tables which are fed into the d eveloped prototype called Automatic Schema Generator Figure  3 depicts the main interface of the Automatic Schema Generator having the clustered relationship data C luster names are the abbreviations which are formed using the first letters of each cover type for example clus ter name for C1 is PCD, which means cover types of Ponderosa pine Cottonwood and Douglas-fir PCD All other names are abbreviated by using the first alphabetical letters  After reading the cluster relationship file the bu tton of Create Schema as shown in the following diagram displays the schema selection window. Figure 4 show s the schema selection window of automatic schema builder  Using this selector window cluster name and type o f schema can be selected to build database in the dat abase server. User can select from star, snowflake and ga laxy or constellation options of schema type using the radi o button The ìGenerateî button on the bottom of schema selec tor window performs the following major functions 1\Generates automatic database in the database serv er 2\Creates dimension and fact tables for the schema type selected 3\Manage relationships among the tables 4\Upload data in the fact and dimension tables from the clustered file After performing the above mentioned functions the  control is passed to the schema visualization windo w which gives a glimpse of the schema created automatically  as shown in Figure 5  Fig 2: Hierarchical clusters generated by HCE tool Fig 3 User interface of automatic schema builder Fig 4 Schema Selector window 41 


Fig 5 Schema visualization window V CONCLUSION AND FUTURE WORK In this paper we reviewed the literature regarding  the integration of OLAP with data mining and automatic generation of OLAP schema. Literature review reveal ed the fact that none of the previous works targeted at th e automatic schema generation from the mined data set  Furthermore the works in the past pose a number of limitations. The major limitation of the previous w ork was the absence of a model that can produce the three b asic types of OLAP schema star, snowflake and galaxy Based on these observations we presented the model for th e integration of data mining and OLAP along with the automatic generation of OLAP schema. We have develop ed a prototype for the automatic schema generation Th is developed prototype takes mined data and produces t he schema of userís choice Finally we implemented the  proposed model and evaluated the results with the h elp of experiment It is evident from the result that the prototype system overcomes the manual schema design and implementation requirement in the data warehousing environment We are working on the enhancement of t he proposed model for automatic schema generation One  possible way of enhancement is the use of other dat a mining techniques along with OLAP for the schema generation. Further more, we are exploring how OLAP can be further extended and enhanced to meet the new challenges and to make it more effective efficient  and intelligent OLAP REFERENCES 1  S   C h a u d h u r i  a n d  U   D a y a l   A n  o v e r v i e w  o f  d a t a  warehousing and OLAP technology ACM SIGMOD Record  Vol 26 1997\, pp 6574 2  A   C u z z o c r e a   D   S a c c a  a n d  P   S e r a f i n o   A  h i e r a rchy driven compression technique for advanced OLAP visualizati on of multidimensional data cubes in Proc of 8th Intíl Conf on Data Warehousing and Knowledge Discovery \(DaWak Springer Verlag 2006\, pp. 106-119 3  S   M a n s m a n n  a n d  M   S c h o l l   E x p l o r i n g  O L A P  a g g r e gates with hierarchical visualization techniques, in Proc. of ACM Symposium on Applied Computing 2007\, pp. 1067-1073 4  F a y y a d  U  M   P i a t e s k y S h a p i n o  G    S m y t h  P   a n d  U thurusany R From datamining to knowledge discovery: An overvie w,îin Proc. of Advances in data mining and knowledge discovery MIT Press, pp. 134 5   S   G o i l  a n d  A   C h o u d h a r y    H i g h  p e r f o r m a n c e  O L AP and data mining on parallel computers Data Mining and Knowledge Discovery vol. 1, no. 4, pp. 391-417, Dec. 1997 6   S   A s g h a r   D   A l a h a k o o n  a n d  A   H s u    E n h a n c i n g  OLAP functionality using selforganizing neural networks  Neural, Parallel and Scientific Computations vol. 12, no. 1, pp. 1-20, March 2004 7   R   B   M e s s a o u d   O   B o u s s a i d  a n d  S   R a b a s e d a    A new OLAP aggregation based on the AHC technique,î in Proc. of the 7th ACM Intíl Workshop on Data Warehousing and OLAP DOLAP ACM New York, 2004, pp. 65-72 8   J   H a n    T o w a r d s  o n l i n e  a n a l y t i c a l  m i n i n g  i n  l arge databases ACM SIGMOD Record vol. 27, no. 1, pp. 97-107, March 1998 9   V   M a r k l   F   R a m a s a k  a n d  R   B a y e r    I m p r o v i n g  OLAP performance by multidimensional hierarchical clustering in Proc of the 1999 Intíl Symposium on Database Engineering and Applica tions IDEAS 1999, p. 165 10   V   M a r k l  a n d  R   B a y e r    P r o c e s s i n g  r e l a t i o n a l  OLAP queries with UB-trees and multidimensional hierarchical clusteri ng in Proc of the Intíl. Workshop on Design and Management of Dat a Warehouses DMDW\, 2000, pp. 1-10 11   N   K a r a y a n n i d i s   T   S e l l i s  a n d  Y   K o u v a r a s    CUBE file A file structure for hierarchically clustered OLAP cubes  Advances in Database Technology LNCS Springer Verlag Berlin-Heidelberg pp. 621-638, 2004 12   D   T h e o d o r a t o s  a n d  A   T s o i s    H e u r i s t i c  o p t i m ization of OLAP queries in multidimensionally hierarchically cluste red databases,î in Proc of the 4th ACM Intíl Workshop on Data Warehou sing and OLAP DOLAP\, ACM New York, 2001, pp. 48-55 13   K   H a n n   C   S a p i a  a n d  M   B a l a s c h k a    A u t o m a t i cally generating OLAP schemata from conceptual graphical models,î in  Proc. of the 3rd ACM Intíl Workshop on Data Warehousing and OLAP  DOLAP ACM New York, 2000, pp. 9-16 14   V   P e r a l t a   A   M a r o t t a  a n d  R   R u g g i a    T o w a r d s the automation of data warehouse design Technical Report TR-03-09 InCo Universidad de la Rep˙blica, Montevideo, Uruguay, J une 2003 15   N   T r y f o n a   F   B u s b o r g  a n d  J   G   B   C h r i s t i a n sen StarER A conceptual model for data warehouse design,î Proc of the 2nd ACM Intíl. Workshop on Dataarehousing and OLAP \(DOLAP ACM New York, 1999, pp. 3-8 16   Y   S o n g   e t   a l     S A M S T A R   A n  a u t o m a t i c  t o o l for generating star schemas from an entity-relationship diagram in Proc of the 27th Intíl. Conf. on Conceptual Modeling LNCS 2008, pp. 522-523 17   S   R   M a d d i  a n d  V   K h a n    C o m p a r a t i v e  a n a l y s i s of on-line analytical processing tools,î University essay from IT-uni versitetet I Gˆteborg, Sweden 2007 18   H   Z h u    O n l i n e  a n a l y t i c a l  m i n i n g  o f  a s s o c i a t ion rules Master Thesis, Simon Fraser University, 1998, pp. 1-117 19   J   F o n g   H   K   W o n g  a n d  A   F o n g    O n l i n e  a n a l ytical mining Webpages tick sequences J. of Data Warehousing vol. 5, no. 4, pp. 5967, 2000 20   S   D z e r o s k i   D   H r i s t o v s k i  a n d  B   P e t e r l i n    Using data mining and OLAP to discover patterns in a database of patients  with Y chromosome deletions,î in Proc. AMIA Symp 2000, pp. 215ñ219 21  F   D e h n e   T   E a v i s  a n d  A   R a u C h a p l i n    C o a r s e grained parallel online analytical processing OLAP for data mining in Proc of the Intíl Conf. on Computational Science ICCS\, 2001, 589-598 22   J   H a n   S   H   S   C h e e  a n d  J   Y   C h i a n g    I s s u es for on-line analytical mining of data warehouses,î in Proc. of the SIGMOND Workshop on Research Issues on Data Mining and Knowledge Discov ery DMKD\, Seattle, 1998, pp. 2:1-2:5 23   J   A   B l a c k a r d   D   J   D e a n  a n d  C   W   A n d e r s o n  Forest cover type The UCI KDD Archive http://kdd.ics.uci.edu   I r v i n e CA University of California Department of Information  and Computer Science \(1998 24   J   S e o   e t   a l     I n t e r a c t i v e  c o l o r  m o s a i c  a n d dendrogram displays for signal/noise optimization in microarray data analys is,î in Proc. of the Intl. Conf. on Multimedia and Expo-Volume 3 2003, pp. 461-464 42 


9 Appendix Fig 6: Forest Cover Types of the U.S. \(Source. USGS National Atlas of US Summary of Forest Cover Type Data Type Multivariate Abstract The forest cover type for 30 x 30 meter cells obtai ned from US Forest Service \(USFS\ Region 2 Resource Information System RIS\ data Data Characteristics The actual forest cover type for a given observatio n \(30 x 30 meter cell\ was determined from US Fores t Service \(USFS\ Region 2 Resource Information System RIS data Independe nt variables were derived from data originally obta ined from US Geological Survey \(USGS\ and USFS data. Data is in raw form \(not scaled\ and contains binary \(0 or 1 columns of data for qualitative independent variables \(wilderness areas and soil types Summary Statistics Number of instances observations 581012 Number of Attributes 54 Attribute breakdown 12 measures, but 54 columns of data \(10 quantitativ e variables, 4 binary wilderness areas and 40 binary soil type variables Missing Attribute Values None 43 


   C4.2 Open GL has excellent documentation that could help the developer learn the platform with ease C4.3 Developer has very little ex perience in working with Open GL platform  For our case study, alternative B i.e. Adobe Director was the most favorable alternative amongst all the three. It catered to the reusability criteria quite well and aimed at meeting most of the desired operational requirements for the system   6. CONCLUSION & FUTURE WORK  The main contribution of this paper is to develop an approach for evaluating performance scores in MultiCriteria decision making using an intelligent computational argumentation network. The evaluation process requires us to identify performance scores in multi criteria decision making which are not obtained objectively and quantify the same by providing a strong rationale. In this way, deeper analysis can be achieved in reducing the uncertainty problem involved in Multi Criteria decision paradigm. As a part of our future work we plan on conducting a large scale empirical analysis of the argumentation system to validate its effectiveness   REFERENCES  1  L  P Am g o u d  U sin g  A r g u men ts f o r mak i n g an d  ex p lain in g  decisions Artificial Intelligence 173 413-436, \(2009 2 A  Boch m a n   C ollectiv e A r g u men tatio n    Proceedings of the Workshop on Non-Monotonic Reasoning 2002 3 G  R Bu y u k o zk an  Ev alu a tio n o f sof tware d e v e lo p m en t  projects using a fuzzy multi-criteria decision approach Mathematics and Computers in Simualtion 77 464-475, \(2008 4 M T  Chen   F u zzy MCD M A p p r o ach t o Selec t Serv ice  Provider The IEEE International Conference on Fuzzy 2003 5 J. Con k li n  an d  M. Beg e m a n   gIBIS: A Hypertext Tool for Exploratory Policy Discussion Transactions on Office Information Systems 6\(4\: 303  331, \(1988 6 B P  Duarte D e v elo p in g a p r o jec ts ev alu a tio n sy ste m based on multiple attribute value theroy Computer Operations Research 33 1488-1504, \(2006 7 E G  Fo rm an  T h e  A n a l y t ic Hier a rch y P r o cess A n  Exposition OR CHRONICLE 1999 8 M. L ease  an d J L  L i v e l y  Using an Issue Based Hypertext System to Capture Software LifeCycle Process Hypermedia  2\(1\, pp. 34  45, \(1990 9  P e id e L i u   E valu a tio n Mo d e l o f Custo m e r Satis f a c tio n o f  B2CE Commerce Based on Combin ation of Linguistic Variables and Fuzzy Triangular Numbers Eight ACIS International Conference on Software Engin eering, Artificial Intelligence Networking and Parallel Distributed Computing, \(pp 450-454 2007  10  X  F L i u   M an ag e m en t o f an In tellig e n t A r g u m e n tatio n  Network for a Web-Based Collaborative Engineering Design Environment Proceedings of the 2007 IEEE International Symposium on Collaborative Technologies and Systems,\(CTS 2007\, Orlando, Florida May 21-25, 2007 11 X. F L i u   A n In ternet Ba se d In tellig e n t A r g u m e n tatio n  System for Collaborative Engineering Design Proceedings of the 2006 IEEE International Symposium on Collaborative Technologies and Systems pp. 318-325\. Las Vegas, Nevada 2006 12 T  M A sub jec tiv e assess m e n t o f altern ativ e m ission  architectures for the human exploration of Mars at NASA using multicriteria decision making Computer and Operations Research 1147-1164, \(June 2004 13 A  N Mo n ireh  F u zzy De cisio n Ma k i n g b a se d o n  Relationship Analysis between Criteria Annual Meeting of the North American Fuzzy Information Processing Society 2005 14 N  P a p a d ias HERMES Su p p o rti n g A r g u m e n tative  Discourse in Multi Agent Decision Making Proceedings of the 15th National Conference on Artifical Intelligence \(AAAI-98  pp. 827-832\dison, WI: AAAI/MIT Press,  \(1998a 15  E. B T riantaph y llo u   T h e Im p act o f  Ag g r e g atin g Ben e f i t  and Cost Criteria in Four MCDA Methods IEEE Transactions on Engineering Management, Vol 52, No 2 May 2005 16 S  H T s a u r T h e Ev alu a tio n o f airlin e se rv ice q u a lity b y  fuzzy MCDM Tourism Management 107-115, \(2002 1 T  D W a n g  Develo p in g a f u zz y  T O P S IS app r o ach  b a sed  on subjective weights and objective weights Expert Systems with Applications 8980-8985, \(2009 18 L  A  Zadeh  F u z z y Sets   Information and Control 8  338-353, \(1965  152 


                        





