Mining Association Rules Consisting of Download Servers from Distributed Honeypot Observation Masayuki Ohrui Hiroaki Kikuchi Department of Information Science and Technology Graduate School of Engineering Tokai University 4-1-1 Kitakaname Hiratsuka Kanagawa 259-1292 Japan yama@cs.dm.u-tokai.ac.jp kikn@cs.dm.u-tokai.ac.jp Masato Terada Hitachi Incident Response Team HIRT Hitachi Ltd 890 Kashimada Kawasaki Kanagawa 212-8567 Japan masato.terada.rd@hitachi.com Abstract This paper aims to 036nd interested association rules known as data mining technique out of the dataset of downloading logs by focusing on the coordinated activity among downloading servers The result of the analysis shows the association rules of the downloading servers and that of the malwares Keywords Association Rules Malware Botnets Coordinated Attack Sequential Pattern I I NTRODUCTION The botnet has a feature that cooperative attacks for multiple servers making a victim infected by a set of malwares 1 F o r e xampl e  T abl e I s ho w s s e quen t i a l i nfections observed the Cyber Clean Center CCC DATAset 2009 the captured packets data by 94 honeypots 2 i n which a host is infected by three malwares PE_VIRUT.AV  TROJ_BUZUS.AGB and WORM_SWTYMLAI.CD as sched 
uled in the same way Although the these servers are assigned different IP addresses it turns out to be a correlation in the malware infections In this paper we call the multiple infections made by several servers the botnets coordinated attacks  The discovery of the coordinated attacks is however very difﬁcult because it is necessary to investigate huge amount of captured data for looking for common sequential patterns For example the CCC DATAset 2009 of downloading logs  c ont ai ns more t h an 30 000 pack et s e v e n i n t op 4 IP addresses shown in Figure 1 There are many difﬁculties in identifying coordinated attacks 1 The number of infections depends on IP address of honeypot 2 The number of infections is not stable There is a period when no malware is observed at all before after many infections happen 3 The complexity of generating is high Since 1,335 kinds of malware will be observed in one year 2 t h ere a re pos s i bl e 1  335 C 3  395  654  395 combination of three kinds of distinct malware chosen out of total number of slots of 365 day  94 honeypots  24 hour 0 1000 
2000 3000 4000 5000 6000 7000 8000 Apr-08 May-08 Jun-08 Jul-08 Aug-08 Sep-08 Oct-08 Nov-08 Dec-08 Jan-09 Feb-09 
Mar-09 Apr-09 May-09   TOP01 TOP02  
TOP03  
TOP04  
Figure 1 Number of downloadings observed in one year  3 slots/hour 2  470  320  it is not feasible to examine 1  Therefore a coordinated attacks is hard to be discovered Then in this paper we try to introduce an association analysis Apriori well-known the data mining technique from large-scale data in order to extract association rules of coordinated attacks Apriori algorithm was proposed by Agrawal et al 4 B y pruning useless combinations with the minimum support and conﬁdence the association rules can be efﬁciently extracted In this paper we apply Apriori Program 5 t o t he al ert l og in order for extracting the most frequently attack patterns in a year The paper is organized as follows Firstly the algorithm of the association analysis is explained An example the association analysis is presented and how to detect the association rules is shown Secondly we explain experimental data and experiment objectives Thirdly we show the experimental result The attack patterns has combinations of malwares and coordination between download servers We verify dependency of honeypots and observation time 1 The deﬁnition of the slot is described later by Section III-A 
2010 13th International Conference on Network-Based Information Systems 978-0-7695-4167-9/10 $26.00 © 2010 IEEE DOI 10.1109/NBiS.2010.73 541 


Table I S AMPLE OF COORDINATED ATTACKS OF MALWARE Time Source IP address Dst Port Protocol MW 0:02:11 124.86.***.111 47556 TCP PE_VIRUT.AV 0:03:48 67.215.*.206 80 TCP TROJ_BUZUS.AGB 0:03:48 72.10.***.195 80 TCP WORM_SWTYMLAI.CD 0:36:46 124.86.**.109 33258 TCP PE_VIRUT.AV 0:36:52 72.10.***.195 80 TCP WORM_SWTYMLAI.CD 0:36:52 67.215.*.206 80 TCP TROJ_BUZUS.AGB 0:46:56 124.86.**.109 33258 TCP PE_VIRUT.AV 0:48:52 67.215.*.206 80 TCP TROJ_BUZUS.AGB 0:48:52 72.10.***.195 80 TCP WORM_SWTYMLAI.CD Table II H IGH RANK 10 OF SOURCE IP ADDRESS FROM P ACKETS CAPTURED DATA Rank Source IP address Infections Average MW Honeypot ID 1 72.10.***.74 462246 3884.4 119 91 2 72.10.***.195 399562 8324.2 48 92 3 85.114.***.2 33283 1147.7 29 82 4 85.114.***.207 32202 870.3 37 78 5 67.215.*.206 26780 3825.7 7 59 6 211.95.**.6 19641 198.4 99 85 7 72.10.***.26 14951 287.5 52 82 8 92.48.**.63 11699 117.0 100 69 9 67.18.***.250 10060 76.8 131 68 10 72.8.***.164 5099 127.5 40 81 respectively Finally we conclude this paper II B UILDING B LOCKS Apriori is an algorithm of data mining for extracting association rules of the form X  antecedent  002 Y  consequent  from a given set A support is a probability of set of an association rule  X 002 Y  to be shown out of all transactions N whichis deﬁned as Supp  X 002 Y   X 003 Y  N A conﬁdence is a probability of the rule is satisﬁed namely a chance of Y is true if X is true The deﬁnition is given by Conf  X 002 Y   X 003 Y  X Apriori is a well-known algorithm for association rule discovery due to Agrawal et al 4  I t allo ws to ef cien tly discover all useful association rules by excluding the rules those support and conﬁdence are smaller than giving minimum support and conﬁdence With the minimum support we can squeeze many useless rules to be examined For example the association rule B C 002 E in Table III has support and conﬁdence as Supp  B C 002 E 2  4=0  5  Conf  B C 002 E 2  2=1  Table III E XAMPLE OF TRANSACTION TID A B C D E 1 1 1 1 2 1 1 1 3 1 1 1 1 4 1 1 Thus the rule of B C 002 E is support 50 and conﬁdence 100 In other word this rule shows with probability of 50 and B C 002 E appears with probability of 100 when B and C appear III E XAMINATION M ETHOD A Experimental Data In order to verify efﬁciency of our proposed method we apply the Apriori algorithm to the experimental data CCC DATAset 2009 More than 90 independent honeypots have observed malware trafﬁc at the Japanese tier-1 backbone under coordination of the Cyber Clean Center  CCC CCC DATAset 2009 consists of the access log of attack for a year during May 1 2008 until April 30 2009 94 honeypots are periodically rebooted every 20 minutes We call the time interval time slot in this paper Observation in 2 days gives 145 time slots A transaction consists of malware names that are downloaded in a time slot Similarly malware downloading logs is divided in terms of time slots In out experiment we use vulnerable Windows XP as honeypot 
542 


B Experiment Objectives Our experiments are shown as follows 1 Association rules of malware names extracted from the captured packets data 2 Association rules of downloading servers extracted from the captured packets data 3 Dependency on location of honeypots in extracting rules from malware downloading logs 4 Dependency of observation time in extracting rules from malware downloading logs The malware names are identiﬁed by commercial antivirus signature In the 1st and 2nd experiments we investigate relativity strength of the coordinated attacks from two viewpoints of malware name and IP address We compare the result of manual analysis in Table I with one in the automated method In the 3rd experiment we aim to extract general association rule in the sense that a common patterns are observed on a different honeypots The purpose of 4th experiment is to examine whether association rules varies in long period IV E XPERIMENTAL R ESULTS A Association Rules of Malwares Malicious coordinated servers send same kind of malware to a single target host Table IV shows an instance of sequences of malware observed in a each time slot indicating 58 infected slots out of 145 slots The most frequent infection observes 11 distinct names of malware at a single slot We apply the Apriori algorithm to dataset of malware shown in Table IV and successfully discover signiﬁcant association rules of malware in Table V This result shows all association rules with support more than 10 and conﬁdence more than 80 A support is a percentage of the slots that the association rule appears for 145 slots A conﬁdence is deﬁned as a conditional probability of malware of consequent of the rule to be observed given malware of antecedent of the rule We are interested in whether the rule of coordinated attacks pattern PE_VIRUT.AV 002 TROJ_BUZUS.AGB  WORM_SWTYMLAI.CD marked as Table V is automatically detected or not Unfortunately Table V does not contain the exactly same rules to the rule but has many similar association rules to No.5 PE_VIRUT.AV  TROJ_BUZUS.AGB 002 WORM_SWTYMLAI.CD and rule No.6 PE_VIRUT.AV  WORM_SWTYMLAI.CD 002 TROJ_BUZUS.AGB Fromthe observation of Table V we found signiﬁcant correlation between TROJ_BUZUS.AGB and WORM_SWTYMLAI.CD in Rule No.1 2 3 B Association Rules of Downloading Servers IP address We investigate the correlation of downloading servers using the Apriori algorithm Table VI shows the association rules of IP address of downloading servers We specify the minimum support of 10 and conﬁdence of 50 The input of out analysis is data that consists of IP address from which the list of malware in Table IV are downloaded Note that the malware name does not mean one-to-one corresponding IP Address e.g PE_VIRUT.AV is downloaded from 16 in rule distinct IP addresses Note that some IP addresses are assigned for particular malware For example addresses 114.145.**.166 and 122.18.***.123 used 12 and 21 times in rule No.1 and 2 respectively are mainly used for PE_VIRUT.AV  While rules No.3 and 4 are dedicated to downloading TROJ_BUZUS.AGB and WORM_SWTYMLAI.CD However we fail to detect the rst downloading server for PE_VIRUT.AV in Table I C Dependency on Honeypot We are interested in whether the extracted association rules depends are honeypots or not We show the numbers of honeypots that have observed the top 10 association rules of malware in Table VII We investigate 94 honeypot IDs in March 13 2009 For example 36 out of 94 honeypots have observed common rule No.1 suppressing the difference of support and conﬁdence Figure 2 shows the number of association rules by number of distinct honeypots that observe the rule denoted by k  The vertical axis shows number of distinct association rules N  k  where k honeypots detect the rule We note that using the most common association rules using TROJ_BUZUS.AGB and WORM_SWTYMLAI.CD are typically observed by single honeypot On the otherhand the rule consisting of TROJ_BUZUS.AGB and WORM_SWTYMLAI.CD has been widely observed by more than 1/3 honeypots The widely observed hosts can be considered as ones being used for coordinated attacks We also note that only speciﬁc malware is used to coordinate attack D Lifecycle of Association Rule of Malware A duration of coordinated attacks is not so long Table VIII shows the number of association rule observed in Honey003 with the minimum conﬁdence more than 80 Association rules are observed 365 days Table VIII shows that PE_VIRUT.AV is observed throughout year The top 3 frequent malware names PE_VIRUT.AV PE  TROJ_BUZUS.AGB TROJ  WORM_SWTYMLAI.CD WORM  are detected as correlated in the association rules as follows 1 PE_VIRUT.AV WORM_SWTYMLAI.CD 002 TSPY_KOLABC.CH  2 TROJ_BUZUS.AGB 002 WORM_SWTYMLAI.CD  3 TSPY_KOLABC.CH 002 WORM_SWTYMLAI.CD  
543 


Table IV S EQUENCES OF MALWARES OBSERVED IN A TIME SLOT Time Slot Sequence of Malware 0 PE_VIRUT.AV TROJ_BUZUS.AGB WORM_SWTYMLAI.CD 2 WORM_ALLAPLE.IK PE_VIRUT.AV WORM_SWTYMLAI.CD TROJ_BUZUS.AGB 3 PE_VIRUT.AV TROJ_BUZUS.AGB WORM_SWTYMLAI.CD PE_VIRUT.AV 14 BKDR_POEBOT.GN TROJ_BUZUS.AGB WORM_SWTYMLAI.CD 15 BKDR_MYBOT.AH PE_VIRUT.AV    141 PE_BOBAX.AK WORM_SWTYMLAI.CD WORM_AUTORUN.CZU WORM_IRCBOT.CHZ Table V A SSOCIATION RULES OF MALWARE INFECTIONS Rule Antecedent Consequent Supp Conf 1 TROJ_BUZUS.AGB 002 WORM_SWTYMLAI.CD 41.4 100 2 WORM_SWTYMLAI.CD 002 TROJ_BUZUS.AGB 46.6 88.9 3 TROJ_BUZUS.AGB BKDR_POEBOT.GN 002 WORM_SWTYMLAI.CD 10.3 100 4 WORM_SWTYMLAI.CD BKDR_POEBOT.GN 002 TROJ_BUZUS.AGB 10.3 100 5 PE_VIRUT.AV TROJ_BUZUS.AGB 002 WORM_SWTYMLAI.CD 29.3 100 6 PE_VIRUT.AV WORM_SWTYMLAI.CD 002 TROJ_BUZUS.AGB 29.3 100  PE_VIRUT.AV 002 WORM_SWTYMLAI.CD TROJ_BUZUS.AGB N/A N/A Table VI A SSOCIATION RULES OF DOWNLOADING SERVERS TO THE PACKETS CAPTURED DATA No Antecedent Consequent Supp Conf Corresponding Malwares Corresponding Rank 1 114.145.**.166 002 122.18.***.123 12.1 85.7 PE 002 PE 2 122.18.***.123 002 114.145.**.166 15.5 66.7 PE 002 PE 3 67.215.*.206 002 72.10.***.195 46.6 100 TROJ 002 WORM TOP5 002 TOP2 4 72.10.***.195 002 67.215.*.206 46.6 100 WORM 002 TROJ TOP2 002 TOP5 Table VII N UMBER OF HONEYPOTS THAT HAVE THE ASSOCIATION RULES OF MALWARE IN M ARCH 13 2009 No Antecedent Consequent Honeypots 1 TROJ_BUZUS.AGB 002 WORM_SWTYMLAI.CD 36 2 WORM_SWTYMLAI.CD 002 TROJ_BUZUS.AGB 36 3 TROJ_BUZUS.AGB BKDR_VANBOT.AHH 002 WORM_SWTYMLAI.CD 12 4 WORM_SWTYMLAI.CD BKDR_VANBOT.AHH 002 TROJ_BUZUS.AGB 12 5 TROJ_DLOADR.CBK 002 UNKNOWN 8 6 TROJ_BUZUS.AGB PE_VIRUT.AV 002 WORM_SWTYMLAI.CD 7 7 WORM_SWTYMLAI.CD PE_VIRUT.AV 002 TROJ_BUZUS.AGB 7 8 PE_VIRUT.AV TROJ_BUZUS.AGB 002 WORM_SWTYMLAI.CD 6 9 TROJ_AGENT.ANDF 002 UNKNOWN 6 10 PE_VIRUT.AV WORM_SWTYMLAI.CD 002 TROJ_BUZUS.AGB 6 We see the rst Rule is related with WORM_SWTYMLAI.CD  which is the most frequent malware over a long period We note that Rule 1 and 3 contain TSPY_KOLABC.CH which was not found in 2-days analysis in Section IV-A Figure 3 shows the distribution of activities of the top 3 association rules except for UNKNOWN deﬁned by 1 BKDR_VANBOT.HI 002 BKDR_SDBOT.BU  2 BKDR_POEBOT.AHP 002 TROJ_QHOST.WT  3 TSPY_KOLABC.CH 002 WORM_SWTYMLAI.CD  The period of the above rules is short The reason of short period is that the short period of coordinated attacks is hard to be detected Moreover coordinated pattern is constantly renewed every time new malware is developed V C ONCLUSIONS In this paper we proposed an automated method to detect the association rule of malware for coordinated attacks We showed that our proposed method can extract all coordinate attacks correctly The result of our experiment shows strong correlation between PE_VIRUT.AV  TROJ_BUZUS.AGB and WORM_SWTYMLAI.CD  The widely observed rules are likely to be coordinated attacks As a result of our observation in a long term the 
544 


tb 0 50 100 150 200 250 1 2 3 4 5 6 7 8 12 36 Number of Ass. Rules N\(k Number of Honeypots k Figure 2 Number of association rules by number of honeypot observing rules Table VIII N UMBER OF RULES CONTAINING MALWARE PE  TROJ  WORM PE TROJ WORM 2008/05 31 0 0 2008/06 76 0 0 2008/07 111 0 0 2008/08 5 0 0 2008/09 8 0 0 2008/10 44 0 0 2008/11 27 0 0 2008/12 35 0 0 2009/01 135 0 0 2009/02 125 0 226 2009/03 79 53 74 2009/04 30 0 0 duration of coordinated attacks is very short mostly within a month It is hard to detect signiﬁcant association rules because PE_VIRUT.AV is distributed by multiple servers Our future works include considering the relation of time of the malwares We plan to apply yet another algorithm of data mining in 0 5 10 15 20 25 30 35 Oct-08 Nov-08 Dec-08 Jan-09 Feb-09 Mar-09 Apr-09 May-09   BKDR_VANBOT.HI => BKDR_SDBOT.BU BKDR_POEBOT.AHP => TROJ_QHOST.WT  TSPY_KOLABC.CH => WORM_SWTYMLAI.CD  Figure 3 Distribution of activities of top 3 rules excepting label UNKNOWN A CKNOWLEDGEMENT We thank Mr Masashi Fujiwara Mr Hiroshi Nakakoji and Mr Tetsuro Kito at Hitachi Ltd Mr Shunji Mastuo at Tokai University and Mr Nur Rohman Rosyid at King Mongkut’s Institute of Technology Ladkrabang for their useful suggestions R EFERENCES  K  K uw aba r a H Ki kuchi  M  T erada a nd M F u j i w ara Heuristics for Detecting Types of Infections from Captured Packets IPSJ Malware Workshop MWS2009 pp 397-402 2009 2 M  H at ada Y  N a kat s ur u M T e r a da and Y  S hi noda  D a t a set for anti-malware research and research achievements shared at the workshop IPSJ Malware Workshop MWS2009 pp 1-8 2009  T  K obo ri  H  K i kuchi and M  T erada Int errel a t i o n b etween Interactive and Non-interaction Sensors IPSJ Malware Workshop MWS2008 Vol 3 pp 67-74 2008 4 R  A g r a w a l R T  Imie lin sk i a n d A Sw a m i  M in in g A sso ciation Rules between Sets of Items in Large Databases Proceedings of ACM SIGMOD-93 pp 207-216 1993 5 C hr i s t i a n B or gel t  A p r i or i A ssoci at i o n R ul e I nduct i o n  http://www.borgelt.net/apriori.html 6 N  R  R osyi d M O h r u i  H  K i kuchi and P  S oor aksa M  Terada Frequent Sequential Attack Patterns of Malware in Botnets IPSJ Technical Report Computer Security Group CSEC48 Vol.2010-CSEC-48 No.37 2010 
545 


6  Ha n J   K a m b er M   20 01   Data mining Concepts and techniques  Data mining on what kind of data. Academic press. Morgan Kaufmann 7  A g r a w a l  R., I m iel ins k i, T   S w am i, A  N  19 93  Mi ni ng  association rules between set of items in large databases Proceedings of the 1993 ACM SIGMOD International Conference on Management of Data pp. 207-216 8  C h ou d h a r y A  K  H a r d i n g  J A T i wa r i  M  K 2 0 0 8  D a t a  mining in manufacturing: a review based on the kind of knowledge Journal Intell Manufacturing  9 J i a o J   Z h an g Y   20 05 Produ ct  port foli o i d en ti fic a t i on b a s e d o n  association rule mining Computer Aided Design 37 149-172 10  P a wa r  P  A   Ag g a r w a l   A  K 2 0 0 4  As s o c i a t i v e r u l e m i n i n g o f  mobile data           services usage for preference analysis personalization & promotion Proceeding of WSEAS International Conference on Simulation, Modeling and Optimization   A j ok u  P N  Nn aj i B   20 06  I m p r ovi n g p r od uc ti vi t y in manufacturing environments using data mining Artificial Intelligence and data mining workshop   J e ges  R  M ont e C a rlo s i m u la ti on  i n M S E x c e l http://www.projectsmart.co.uk/docs/monte-carlo-simulation.pdf [12 March 20   M e t r op oli s  N   19 87 T h e b e gi n n in g of t h e m o n t e c a r lo m e t h o d  Los Alamos Science 1987 Special issue dedicated to Stanislaw Ulam 125-130  A g ra w a l R   Sri k a n t  R   19 94 F a s t a l gori t h m s for m i ni ng  association rules in large databases Proceedings of the 20th International Conference on Very Large Databases pp. 487 - 499  W i t t en  I  H   Fra n k   E   2 005   Data mining: Practical machine learning tools and techniques 2nd Ed. New York. Elsevier  Ned u n c h ezh ia n  R   A n bu m a n i  K   2 007 Pos t  m i n i n g Di s c overi n g  valid rules from different sized data sources International Journal of Information Technology 3 \(1\: 47-53 17  K h atta k A  M K h a n  A  M T a hir  R a she e d L e e  Y K an d L e e  S   2009. Comparative Analysis of XLMiner and Weka for Association Rule Mining and Clustering The International Conference on Database Theory and Application pp. 82-89 18  W e bb, G  I  20 07 D i s c o v e r i ng S i g n if ica n t P a t t e r ns  M a c h i n e  Learning 68\(1\. Netherlands: Springer, pp. 1-33  A  G i on i s  H M a nn i l a  T  Mi eli k a i n en  a nd P. T s a p a r a s  2 007  Assessing Data Mining Results via Swap Randomization, ACM Transactions on Knowledge Discovery from Data \(TKDD\ 1 \(3 Article No. 14  G a u r a v  N P   Prabh ak a ran B  200 9 A s s o c i at i on ru le m i ni n g in multiple, multidimensional time series medical data Proceedings of the 2009 IEEE International conference multimedia and expo pp 1716-1719 1464 2010 10th International Conference on Inte lligent Systems Design and Applications 


with the Alignment and NQueens benchmarks Results are similar with both versions Although a deeper analysis will be needed the results suggest two main hypothesis 017 The Intel Compiler does not implement thread switching and thus untied tasks cannot bene\002t from this feature which should avoid imbalances This is particularly evident in the Alignment benchmark which has been reported to scale 017 Task scheduling constraints do not seem to impact signi\002cantly the performance results at most there is a 4 difference between the versions The other applications show a similar behavior D Other opportunities for analysis The Intel Compiler does not implement mechanisms that allow the user choose among different task scheduling policies but other OpenMP compilers e 16 that have such capabilities One interesting study is to 002nd how task scheduling policies and how they can mantain locality across tasks can affect the performance results of the benchmarks of the suite In previous sections we have discussed how implementing a cut-off mechanism can affect application performance but we have not discussed due to space limitations how the different cut-off values i.e at which point in the recursion we cut relate with the creation of parallelism and the overall performance Choosing a low cut-off value can restrict parallelism opportunities but choosing a high cut-off value can saturate the system with a large amount of tasks which have no thread available to execute them The right choice depends many times of the input data set Comparing the application behaviour using different cut-off values or testing runtime features which allow to modify dynamically the cut-off can also be interesting analyses The quality of implementations for different task generation schemes e.g in the SparseLU benchmark which can use a single or multiple generator scheme taskwait constructs or other task related implementation details could also be analyzed with our benchmark suite proposal V C ONCLUSIONS AND F UTURE WORK We have presented BOTS  Barcelona OpenMP Task Suite  built with the double motivation of coping with the great characteristics of the multicore processors and offer a set of benchmarks to evaluate OpenMP tasking We think that BOTS will help implementors and programmers to have a better understanding of the OpenMP tasking model and its performance implications Each of these benchmarks comes also with different versions to test different aspects of the tasking model For example they can be used to evaluate task scheduling alternatives tiedness   Also a number of input sets are provided so that benchmarks can be used as tests or really stress the processors and memory system in your machine It is interesting to note that we have tried to select benchmarks with diverse characteristics In this paper we have highlighted the differences and we have shown their evaluation on an SGI Altix machine with up to 32 processors and we report some of their characteristics per task e.g operations memory writes    Their evaluation also shows that there is plenty of work to do at all levels  architecture compiler runtime system programming model to improve certain benchmarks given that their current scalability is very limited This suite can be used to obtain useful data of the strenghts and weaknesses of an OpenMP implementation that can help developers to improve it Currently we are working to add new benchmarks to the suite to cover more problem domains and scenarios We are as well planning to do a full cross-vendor evaluation to 002nd which is the current state of the OpenMP tasking implementations A CKNOWLEDGMENTS This research was supported by the Spanish Ministry of Science and Innovation contracts no TIN2007-60625 and CSD2007-00050 the European Commission in the context of the SARC project contract no 27648 the HiPEAC Network of Excellence contract no IST-004408 the IBM CAS Program and the Mare Incognito project under the BSC-IBM collaboration agreement R EFERENCES  O ARB OpenMP Applicati on Program Interf ace v  3.0  May 2008  J M Bull Measuring Synchronizati on and Scheduling Ov er heads in OpenMP in First European Workshop on OpenMP  September 1999  LLNL OpenMP Performance Suite Description 2001 A v ailable https://computation.llnl.gov/casc/RTS Report/openmp perf.html  A Dorta C Rodriguez F  de Sande and A Gonzalez The OpenMP Source Code Repository Euromicro Conference on Parallel Distributed and Network-Based Processing  vol 0 pp 244ñ250 2005  C Bienia S K umar  J P  Singh and K Li The P ARSEC Benchmark Suite Characterization and Architectural Implications in Proceedings of the 17th International Conference on Parallel Architectures and Compilation Techniques  2008 pp 72ñ81  H Jin M Frumkin and J Y an The OpenMP Implementation of NAS Parallel Benchmarks and Its Performance NASA Ames Research Center Technical Report NAS-99-011 1999 A v ailable citeseer.ist.psu.edu/408248.html 
130 
130 


 D H Baile y  E  Barszcz J T  Barton D S Bro wning R L Carter D Dagum R A Fatoohi P O Frederickson T A Lasinski R S Schreiber H D Simon V Venkatakrishnan and S K Weeratunga The NAS Parallel Benchmarks The International Journal of Supercomputer Applications  vol 5 no 3 pp 63ñ73 Fall 1991 A v ailable citeseer.nj.nec.com/bailey95nas.html  H Jin and R F  V  der W ijng aart Performance Characteristics of the Multi-zone NAS Parallel Benchmarks J Parallel Distrib Comput  vol 66 no 5 pp 674ñ685 2006  V  Aslot M Domeika R Eigenmann G Gaertner  W  B Jones and B Parady SPEComp A New Benchmark Suite for Measuring Parallel Computer Performance Lecture Notes in Computer Science  vol 2104 pp 1  10 2001  A v ailable citeseer nj.nec.com/aslot01specomp.html  C Bienia S K umar  and K Li  P ARSEC vs SPLASH-2 A Quantitative Comparison of Two Multithreaded Benchmark Suites on Chip-Multiprocessors IEEE International Symposium on Workload Characterization 2008  pp 47ñ56 2008  K K usano S  Satoh and M Sato Performance Ev aluation of the Omni OpenMP Compiler in Prooceedings of the Third International Symposium on High Performance Computing  2000 pp 403ñ414  S Shah G Haab P  Petersen and J Throop Fle xible Control Structures for Parallellism in OpenMP in 1st European Workshop on OpenMP  September 1999  P  C Fischer and R L Probert Ef 002cient Procedures for Using Matrix Algorithms in Proceedings of the 2nd Colloquium on Automata Languages and Programming  SpringerVerlag 1974 pp 413ñ427  M Frigo C E Leiserson and K H Randall The Implementation of the Cilk-5 Multithreaded Language in Proceedings of the ACM SIGPLAN 1998 conference on Programming Language Design and Implementation  1998 pp 212ñ223  E A yguad  e N Copty A Duran J Hoe\003inger Y Lin F Massaioli E Su P Unnikrishnan and G Zhang A Proposal for Task Parallelism in OpenMP in Proceedings of the 3rd International Workshop on OpenMP  Beijing China June 2007  X T eruel X Martorell A Duran R Ferrer  and E A yguad  e Support for OpenMP Tasks in Nanos v4 in CAS Conference 2007  October 2007  E A yguad  e A Duran J Hoe\003inger F Massaioli and X Teruel An Experimental Evaluation of the New OpenMP Tasking Model in Proceedings of the 20th International Workshop on Languages and Compilers for Parallel Computing  October 2007  A Duran J Corbal  an and E Ayguad  e Evaluation of OpenMP Task Scheduling Strategies in Proceedings of the 4th International Workshop on OpenMP  2008  H L v an der Spek E M Bakk er  and H A W ijshof f Char acterizing the performance penalties induced by irregular code using pointer structures and indirection arrays on the intel core 2 architecture in Computing Frontiers 2009  May 2009  M Burtscher  P  Carribault M K ulkarni K Ping ali C Cascaval and C von Praun Lonestar benchmark suite http://iss.ices.utexas.edu/lonestar 2009  B Chamberlain J Feo J Le wis and D Mizell An Application Kernel Matrix for Studying the Productivity of Parallel Programming Languages in W3S Workshop 26th International Conference on Software Engineering  May 2004 pp 37ñ41  M C and A Rogers Softw are Caching and Computation Migration in Olden 1995  G Myers and S Selznick and Z Zhang and W  Miller Progressive Multiple Alignment with Constraints in RECOMB 97 Proceedings of the 002rst annual international conference on Computational molecular biology  New York NY USA 1997 pp 220ñ225  J Coole y and J T uk e y  An Algorithm for the Machine Calculation of Complex Fourier Series Mathematics of Computation  vol 19 pp 297ñ301 1965  S R Das and R M Fujimoto A Performance Study of the Cancelback Protocol for Time Warp SIGSIM Simul Dig  vol 23 no 1 pp 135ñ142 1993  S G Akl and N Santoro Optimal P arallel Mer ging and Sorting Without Memory Con\003icts IEEE Transactions on Computers  vol 36 no 11 pp 1367ñ1369 1987  A Duran J Corbal  an and E Ayguad  e An Adaptive Cut-off for Task Parallelism in Proceedings of the 2008 ACM/IEEE conference on Supercomputing  IEEE Press 2008  J Bal art A Duran M Gonz 036 alez X Martorell E Ayguad  e and J Labarta Nanos Mercurium a Research Compiler for OpenMP in Proceedings of the European Workshop on OpenMP 2004  October 2004 
131 
131 


