  
 
 
  


                               


                       


                   


   


N 005 002 005 200 400 600 800 1000 2 0.22 0.44 0.67 0.88 1.11 3 0.33 0.66 0.97 1.32 1.65 5 0.55 1.08 1.64 2.14 2.75 10 1.2 2.2 3.2 4.3 5.5 20 2.1 4.3 6.5 8.7 10.8 TABLE I T IME S ECONDS  USED BY ALL PARTIES FOR DATA ENCRYPTION 003 200 400 600 800 1000 Time 0.15 0.32 0.48 0.63 0.8 TABLE II T IME S ECONDS  USED BY EACH MODERATOR that these computational costs do not include the overhead of key generation and computing two parameters 032 and 033  However generating these parameters belongs to the preparation period of the mining process Therefore it can be implemented before the protocol is executed without affecting the computation time of the protocol For evaluating the efìciency of the protocol in practice we build an experiment on the privacy preserving frequency mining in C environment which runs on a laptop with CPU Pentium M 1.8 GHz and 1GB memory The used cryptographic functions are derived from Open SSL Library To measure the computation cost of the frequency mining protocol in worst case we assume that all parties involve in the protocol except the miner are the moderators We measure the computation cost of the frequency mining protocol for 10 parties Before executing the protocol we generate a pair of keys for each party with the size of public keys set at 512 bits Table 1 illustrates our measurements of all partiesês computation time in the submission phase it is in regard to 010 and 010 017 010  for a typical scenario where 010 003 004\005\005\005  010 017 010 003\002\005 The computation time of all parties is about 10.8 seconds Table 2 illustrates our measurements of a moderatorês computation time it is linear in 010 and does not depend on  and 010 017 010 For a typical scenario where 010 003 004\005\005\005  the computation time of a moderator is about 0.8 seconds The minerês computation time it is linear in 010  010 017 010  and   However it is very small it only is 021\020 0126 when 010 003 004\005\005\005\005  010 017 010 003\002\005  and  003\004\005  V P RIVACY PRESERVING FOR CLASSIFICATION RULES LEARNING IN TWO DIMENSION DISTRIBUTED SETTING A Privacy preserving association rules mining 1 Association rules and frequent itemset The association rules mining problem can be formally stated in Let  003  002 006 005 006 007\007\007\006  002 003 be the set of all items Let 002\003 a transaction database where each transaction 020 is a set of items such that 020 012   Associated with each transaction is a unique identiìer denoted by 020&\002  We say that a transaction 020 contains  a set of some items in  if  012 020  The problem is to nd the association rules that have an implication of the form  016  014 6\006  015  where  012    012   and  017  003 7  The support 6 and the conìdence  of the rule  016  are deìned as 6 003 014 006  020  007\003 020 006  020  007 010 002\003 010  003 014 006  010  007\003 020 006  020  007 020 006  007 Where 020 006  007 stands for the number of transactions containing the set  in 002\003 and 010 002\003 010 denotes the total number of transactions in 002\003  The strong association rules are required to meet a minimum support  6 021\003\014  and a minimum conìdence   021\003\014  deìned by the miner A set of items is referred as an itemset An itemset that contains 016 items is a 016 itemset The support count of an itemset is the number of transactions containing the itemset The minimum support count is deìned as 6 021\003\014 010 002\003 010 An itemset is frequent if its support count is not less than the minimum support count Association rule mining is a twostep process 1 Finding all frequent itemsets 2 Generating strong association rules from the frequent itemsets Agrawal et al 2 presented the Apriori algorithm to efìciently identify frequent itemsets for boolean association rules The name of the algorithm is based on the fact that the algorithm uses the Apriori property i.e all nonempty subsets of a frequent itemset must also be frequent 2 Finding a frequent itemset Assume that the transactions set 002\003 is two-dimension distributed into 011\012 parties as in Section 002 007\005  Each party 014 003\004  015 003\004 006 007\007\011\006 016 003\004 006 007\007\006 012 wns 002\003 003\004 that contains information about certain attribute set  003 004 004 and certain records Given a candidate set  of the 016 items the parties wish to cooperatively nd whether or not the candidate set is frequent from the joint transaction set  002\003  without disclosing each partyês individual transactions and even the local frequent itemsets Assume that  is partitioned into parts  004  where 016 011 017  S 012\002 004 006 007\007\006 012 003  Each  004 consists of items 011  003 004 004  Note that if  is frequent in 002\003  it is frequent in at least one horizontal partition 002\003 003  where 002\003 003 003 002\003 003 002 020 007\007\007 020 002\003 003\021  In addition if  004 is frequent in 002\003 003 every  004  016 011 017  is frequent in 002\003 003\004  Considering a map from each 002\003 003\004 to a binary number that is done by each 014 003\004 as follows 8 003\004 003 002 004 006 if  004 is frequent in 002\003 003\004  005 006 otherwise Thus 002\003 is mapped to the binary matrix 011 004 012    Hence  is frequent in at least one horizontal partition 0029 003 as long as at least a row 015 in  with all elements are 004  As the result 8 003 003 003 004 004 010 8 003\004 013\010 017 010 003\005  Clearly using frequency mining can allow the miner to nd a random permutation of  031 036 002   031 036 012  Therefore the miner can identify whether  is frequent or not without knowing  be frequent in which 002\003 003  3 Finding all frequent itemsets and their support counts In the classic Apriori algorithm The k e y issue is computing the support of an itemset To nd out if a particular itemset is frequent we count the number of records where the values for all the attributes in the itemset are 1 Thus the 
101 


problem is to compute the frequency of values tuples that all values in the tuple are 004  The privacy preserving protocol for nding frequent itemsets and support counts follows Apriori algorithm as below 1 002 Finding an item 004 Itemsets is frequent 003 2 022 002 003  3 The miner sets  002 003 021 4 for each  011 022 002 do 5 The miner uses the frequency mining protocol to identify whether or not  is frequent 6 if  is frequent then 7 The miner does  002 003  002 020  8 Let  011  003 004 004  the miner broadcasts the requirement for computing 017\024++;\036 006  007 to all 014 003\004  015 011\002 004 006 007\007\007\006 011 003  9 All parties involve in frequency mining protocol to compute 017\024++;\036 006  007 10 end if 11 end for 12 for 002  003\002   037 005 002 006 003 021  016\016 003 do 13 The miner does 022 037 Approri-gen  037 005 002  14 for each  011 022 037 do 15 The miner uses the frequency mining protocol to identify whether or not  is frequent 16 if  is frequent then 17 The miner does  037 003  037 020  18 Let  consists of items partitioned into the sets  004  where 016 011 017  017 007\002 004 006 007\007\007\006 012 003  the miner broadcasts the requirement for computing 017\024++;\036 006  007 to all 014 003\004  016 011 017  19 The miner and the parties involve in frequency mining protocol to compute 017\024++;\036 006  007 20 end if 21 end for 22 end for 4 Analysis of protocol Statement 1 Correctness If all participants follow the protocol then the minerês result is the frequent itemsets and the support count of each frequent itemset Proof Candidate itemsets are generated by the Apriorigen procedure The correctness of that procedure has proved  The 022 037 sets are generated correctly as long as the input to the procedure is correct We show by induction that the  037 sets are generated correctly At steps 004 013 022 with  003\004   002 is correctly generated by the frequency mining protocol Assume that  037 005 002 has been correctly generated then 022 037 is correctly generated by Apriorigen procedure Since frequency ming protocol is correct the support count of each  011 022 004 005 002 is computed correctly Hence  037 is generated correctly from  037 005 002  The entire frequent itemsets and the support counts gives correct results Statement 2 Privacy The protocol preserves the privacy of the honest users against the miner and up to 011\012 013 002 corrupted parties as long as there is at least an honest be the moderator Proof Since all support count computations and frequent itemsets identiìcation are done independently using frequency mining This statement follows immediately from Theorem 2 5 Evaluation of complexity The communication analysis critically depends on the number of frequency computations called We incur the cost of privacy preserving frequency mining for each call Let 036 be the maximum size of a frequent itemset and let 022 003  015 003\004 006 007\007\007\006 036  and  003  015 003\004 006 007\007\007\006 036  represent the number of candidate itemsets and the found number of frequent itemsets at each round the total communication consists of cost of nding frequent and the cost of the support counts computation that is 022 003 003 012 003 006\002 006\020  016\002 022 003 007 0114 016\006\020  016\002  003 007 0104 bits Similarity the computational complexity is 5 006 003 012 003 006\002 006\006  016 022 003 007 011 016\006  016  003 007 010 007 modular exponentiations B Privacy preserving learning of ID3 tree in two-dimension distributed data Using the primitive of proposed privacy-preserving frequency mining we can learn ID3 trees in two-dimension distributed data without loss of accuracy The minerês algorithm has the same complexity as the original ID3 tree algorithm except for an additional linear overhead factor Which has a value determined by the number of times frequency mining protocol using to compute gain 1 ID3 decision tree learning we rstly present a brief review of ID3 decision trees An ID3 tree is a rooted tree containing nodes and edges Each internal node is a test node and corresponds to an attribute The edges going out of a node correspond to the possible values of that attribute The ID3 algorithm works as follows The tree is constructed top-down in a recursive fashion At the root each attribute is tested to determine how well it alone classiìes the samples The best attribute is then chosen and the samples are partitioned according to this attribute The ID3 algorithm is then recursively called for each child of this node using the corresponding subset of data Thus major problem of the algorithm is choosing the best attribute that can achieve the maximum information gain at each node Clearly the problem of choosing the best attribute can be reduced to computing entropies that require computation of the frequency of tuples of va 2 Protocol of privacy-preserving ID3 tree learning Let 002\003 be a data set that has the set of non-class attributes 005 003 002 005 002 006 007\007\006 005  003 and  the class attribute Without loss of generality we assume that all attributes have the same domain size d 002 037 002 006 007\007\007\006 037 002 003  002\003 is two-dimension distributed into 011\012 parties as in Section 002 007\005  Each party 014 003\004  015 003 004 006 007\007\011\006 016 003\004 006 007\007\006 012 wns 002\003 003\004  There are 011 parties 014 003\021  015 003\004 006 007\007\011 007 holding the classiìcation attribute   The parties wish to cooperatively build the 002 023 decision tree classiìer from the joint data set of all parties without disclosing each partyês individual transactions and even the number of the local records Assume that parties have set a system as the computation model described in Section 023  In this section we use frequency protocol as the primitive to design the privacy protocol for building decision tree following the ID3 
102 


Algorithm PrivacyPreservingID3 006 005\006 006 002\003 007 1 If 005 is empty return a leaf-node with the class value assigned to the most of all transactions in 002\003  2 Use the privacy preserving method to count the number of records with each class label If 002\003 consists of records which have the same class label 8  return a leaf node with 8  3 Otherwise Determine the best attribute 005 003 for 002\003 using the privacy-preserving method For 005 003 003 002 037 002 006 007\007\007\006 037 002 003 let 002\003 006 037 002 007  002\003 006 037 002 007 be a partition of 002\003 that every record in 002\003 006 037 005 007 has attribute value 037 005  Return a tree whose root is labeled 005 003  the root has outgoing edges labeled 037 002  037 002 s.t each edge 037 005 goes to the tree 014 036\0158\037"\033\014 036\6\\0368\015\011\031&\002 023\006 005 013 005 003 006\(\006\002\003 006 037 005 007\007 007 3 Analysis of protocol The communication/computation depends on the number of records number of vertically partition number of attributes number of attribute values per attribute number of classes and complexity of the tree For a rough analysis the cost of computation involves in terms of the time number of frequency mining protocol called to build the tree Assume that there are 036 nodes in nal classiìcation tree In total each node needs  006\004 016 004 007 the calls of frequency mining protocol All node of the tree need 036 006\004 016 004 007 the frequency computation Therefore in total the entire classiìcation process will require O 036\004<\010 006  016 010 017 010 007  encryptions and O 036\004<\010 006  016 010 017 010 007 4  bits communication VI C ONCLUSION In this paper we proposed a method for privacy-preserving classiìcation learning in two-dimension distributed data which has not been investigated previously Basically the proposed method is based on the ElGamal encryption scheme and it ensures strong privacy without loss of accuracy We illustrated the applicability of the method by applying it to design the privacy preserving protocol for some learning methods such as association rules mining decision tree learning We conducted experiments to evaluate the complexity of the protocols The experimental results showed that the protocols are efìcient and practical R EFERENCES  A Evmie vski R Srikant R Agra w al and J Gehrk e Pri v ac y preserving mining of association rules In Proc of the Eighth ACM SIGKDD International Conference on Knowledge Discovery and Data Mining ACM Press pp 217-228 2002  C C Aggarw al P S Y u Eds Pri v ac y-Preserving Data Mining Models and Algorithms Series Advances in Database Systems Springer Vol 34 2008  D Agra w al and C Aggarw al On the design and quantiìcation of pri v ac y preserving data mining algorithms In Proc ACM SIGMOD pp 247-255 2001  D Boneh The decision Dif fe-Hellman problem In ANTS-III V o l 1423 of LNCS pp 48-63 1998  F  W u J Liu and S Zhong An ef cient protocol for pri v ate and accurate mining of support counts Pattern Recognition Letters Vol 30 Issue 1 1 pp 80-86 2009  O Goldreich F oundations of Cryptography  B asic T ools V o l 1 Cambridge University Press 2001  H Martin and S Kazue Ef cient receipt-free v oting based on homomor phic encryption In Proc of Advances in Cryptology-Eurocrypt 2000  J Benaloh and D T uinstra Receipt-free secretballot elections e xtended abstract In Proc of the 26th Annual ACM Symposium on Theory of Computing ACM Press pp 544-553 1994  J V aidya and C Clifton Pri v ac y preserving nai v e Bayes classiìer for vertically partitioned data In Proc of the 2004 SIAM Conference on Data Mining 2004  J V aidya and C Clifton Pri v ac y preserving association rule mining in vertically partitioned data In Proc of the eighth ACM SIGKDD International Conference on Knowledge Discovery and Data Mining pp 639-644 2002  Luong T D Ho T B 2010 Pri v ac y Preserving Frequenc y M ining in 2-Part Fully Distributed Setting IEICE Trans Information Systems to appear  M Kantarcoglu and J V aidya Pri v ac y preserving nai v e Bayes classiìer for horizontally partitioned data In IEEE ICDM Workshop on Privacy Preserving Data Mining pp 3-9 2003  M.Freedman K.Nissim and B.Pinkas Ef cient pri v ate matching and set intersection In Proc of Eurocrypt Vol 3027 of LNCS Springer-Verlag pp 1-19 2004  R Agra w a l a nd R Srikant Pri v ac y preserving data mining In Proc of ACM SIGMOD Conference on Management of Data pp 439-450 2000  R Agra w al R Srikant and D Thomas Pri v ac y preserving OLAP  I n Proc of the 2005 ACM SIGMOD International Conference on Management of Data SIGMOD 05 ACM pp 251-262 2005  R Agra w a l a nd R Srikant Pri v ac y-preserving data mining In Proc of the ACM SIGMOD Conference on Management of Data ACM Press pp 439-450 2000  R.Agra w al T  Imielinski and A.Sw ami Mining association rules between sets of items in large databases In Proc of the 1993 ACM SIGMOD international Conference on Management of Data 207-216 1993  S Zhong Z Y a ng and T  Chen k-Anon ymous data collection Journal of Information Sciences Vol 179 Issue 17 pp 2948-2963 2009  V S V e rykios E Bertino I.N F o vino L.P  Pro v e nza Y  Saygin and Y Theodoridis State-of-the-art in privacy preserving data mining ACM SIGMOD Record Vol 3 No 1 pp 50-57 2004  Y  Lindell B Pinkas Pri v ac y preserving data mining In Adv ances in Cryptology Crypto2000 Vol 1880 of LNCS Springer-Verlag pp 36-53 2000  Y  Tsiounis and M Y ung On the security of ElGamal-based encryption In Public Key Cryptographyê98 Vol 1431 of LNCS pp 117-134 1998  Z Y a ng S Zhong R.N Wright Pri v ac y-preserving classiìcation of customer data without loss of accuracy In Proc of the 2005 SIAM International Conference on Data Mining SDM pp 21-23 2005  W  Du and Z Zhan Using randomized response techniques for pri v ac y preserving data mining In Proc of the Ninth ACM SIGKDD International Conference on Knowledge Discovery and Data Mining ACM Press pp 505510 2003  W  Du and Z Zhan Building decision tree classiìer on pri v ate data In Proc of IEEE International Confonference on Privacy Security and Data Mining pp 1-8 2002 
103 


              


   


                        





