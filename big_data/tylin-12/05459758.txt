DMCMS: A Data Mining Based Course Management System Liu Kan, Xiao Xingyuan School of Information Zhongnan University of Economics and Law Wuhan, P.R China liukan@znufe.edu.cn Liu Ping School of Information Management Wuhan University Wuhan, P.R China pliuleeds@126.com Abstract In this paper, a course management system has been designed on the basis of data mining methods such as association rules classification and clustering This system aims at analyzing the hidden relationship between the students’ academic grades and various data of students’ perf ormance in class, and the findings can be used as guidance for better teaching and learning in the future Keywords-data mining; course management; information systems I INTRODUCTION With the rapid development of information processing technology, all the course mana gement systems in universities are constantly improving Therefore, a large amount of historical data about classes and students’ academic performance has been collected, but these data has not been taken advantage of to do more in-depth analysis for useful information for teaching, and it’s certainly a waste of teaching resources. In this situation, we proposed a data mining based course management system \(DMCMS\og the course data generated during every class. In th is system, association rules decision trees and clustering are integrated to do a comprehensive mining for the hidden relationships between the students’ academic grades and these course data. Our aim is to make full use of course data fo r valuable information to improve the teaching/learning quality II RELATED WORK During the last several years, data mining techniques have been used by many researchers to evaluate and enhance the higher education tasks. J. F Superb took va rious factors including the personal background of each student, the performance of each student in his studies and each student’s perceptions into account, adopted discriminate analysis, neural networks, random forests and decisi on trees to classify students into three groups and then predict those students' academic  as a classification approach to analyze student data where the Rosetta toolkit was used to evalu ate the student data to describe different dependencies between the attributes and the student  d the results of analyzing data from a large collection of the so-called concurrent version system \(CVS\d model is used to extract all information of student performance in writing the code of assignments and to find some st atistical patterns or predicators that can be used to enhance st udents’ performance in writing the code Similarly, in web-based educational system, Minaei [4 used classification techniques to analyze features extracted from log data and marks in the final exam and predict students perform used association rules algorithms to find out that mistakes were often related to each other when students’ mistakes were noted down. The purpose is for the teacher to ponder and to review the course material or emphasize subtleties while explaining concepts to students III SYSTEM FUNCTIONS A Basic Idea Data mining based course management system \(DMCMS is mainly divided into two modules 000x Basic information management is designed to collect course data generated in teaching and students performance data. Simple statistic methods are also realized in this module 000x Data mining module used data mining methods such as association rules, decision trees and clustering to do a comprehensive analysis for the hidden relationships between students’ academic grades and course data Fig. 1 shows the functional structure of DMCMS Figure 1 Functional structure of DMCMS 
2010 Second International Workshop on Education Technology and Computer Science 978-0-7695-3987-4/10 $26.00 © 2010 IEEE DOI 10.1109/ETCS.2010.392 145 


B Data Source There are two types of data in the system daily data and exam data. Daily data is generated in each class, including the contents of each class, the approaches adopted by teachers, the students’ learning effect, the attendance and seat choosing information of students While the exam data is obtained after middle and final examination including the mark of each classroom content occupied in test, the exam mark, usual-time mark and the final mark. The data used in our experiment is collected from 117 students in Information Management Department in a university during their learning of the course Decision Analysis 000\003 IV BASIC INFORMATION MANAGEMENT A User Management User management is designed to add delete and modify user information, and the administrator sets permissions for users, and only the users with permissions can access different interfaces. Fig. 2 shows the main interface for administrator after login Figure 2 Main Interface of DMCMS B Class Management Teacher class management is designed for teachers to fill in the basic information of each class. Fig. 3 shows the interface of teacher class management. Seat management is designed to set the basic information of classrooms and seats. Student class management is designed for students to fill in the activity data about students in each class Figure 3 Interface of teacher class management C Test Management This section is designed for teachers to fill in the mark of each class content occupied in test according to the analysis of the tests \(including middle and final exams the final mark is also input into database in this system D Information Search Information search is designed for users to search various class data and students’ mark from database. Fig 4 shows the result of score information search Figure 4 Information Search interface in DMCMS E Statistic Management 000x Basic statistics are mainly designed to do statistic analysis for exam data, which shows the highest mark the lowest mark and the average mark of a class in the examination. For example, the basic statistic result of class 06090302 in their Deci sion Analysis examination is shown in Fig. 5 Figure 5 Basic Statistic results 000x Bar Chart is used to show the number of students at different levels in examination. The experiment result is shown in Fig. 6 Figure 6 Bar Chart in DMCMS 
146 


000x Pie Chart is used to show the score proportion of each class content in examination. The result of experiment is shown in Fig. 7 Figure 7 Pie Chart in DMCMS Fig 7 says, among all the class contents, Overview and Solving of Utility Function have played important roles in examination, so these two contents should be priority in usual learning and review before examination V D ATA MINING This module is designed to analyze the data collected in the system by data mining method s [6  Association rules decision trees and clustering analys is are applied in this system A Association Rules We implemented association rules by Apriori algorithm First, the data has been discre dited, master\(i for the students’ learning effect in classroom i, the value of this attribute are {1,2,3,4,5}, and test\(i\ark of question i in final examination the value of this attribute are A,B,C,D}, and score\(i for the final mark of students the value of this attribute are {A,B,C,D}. Fig. 8 shows the result of association rules Figure 8 Apriori Result in DMCMS In Fig. 8, the 4th association rule suggests that students whose learning effect in the first class is 5 and in the third class is 3 will get B in the 6th question in final examination According to this rule, student s should stress the importance of the contents in the first and the third classes B Decision Tree From decision tree it is easy to generate rules in the form IF condition THEN outcome. In this system, decision tree is used to find the important factors which influence students academic grades. The result is designed to be displayed in a visible way, which will be more convenient for users to find the rules. The experiment result is shown in Fig. 9 Figure 9 Decision Tree Results in DMCMS According to Fig. 9, the students whose attendance is high or mild will get a grade as B with the probab ility of 55.072 Thus we can draw a conclusion that the student should not be absent from classes C Clustering Clustering is to find data points that naturally group together, and splitting the full data set into a set of clusters The partition-based K-means algo rithm is applied in this system There are 22 attributes in the dataset, they are score attribute 8 attendance attributes with value {0,1,2}, and the last 13 attributes stand for the students’ learning effect in 13 classes, the value of these attributes are {1,2,3,4,5}. Fig 10 shows the clustering result Figure 10 K-means Result in DMCMS 
147 


We can draw a conclusion that the average grade in Cluster0 is obviously lower than Cluster1, the attendance in Cluster0 is very low, which means the students with poor grades should not be absent from classes  VI CONCLUSION In this paper, DMCMS: a data mining based course management system has been developed, and applied in many university courses and achieved satisfactory results. This research provided a certain guidance to teachers’ teaching and students’ learning in the future However, the system is still not so perfect, and needs further improvements. Firstly, a systematic deviation existed in the mining results, which may be causes by the self complexity of education objects, or the volume of data is not large en ough. Secondly, the algorithms applied in the system remain to be further optimized, and lastly, more data mining techniques should be applied in the system R EFERENCES  J.F. Super b y  Determ i nation of fact or s influe ncing th e achievem ent of  the first-year university students using data mining methods. Journal of Educational Data Mining, 2006   P. Varapron et al Using Roug h Set theory for Auto m a tic Data Analy sis 29th Conference on Science and Technology of Thailand. 2003  K. Mi erle, K. Lav e n and G. Wils on. Mining Student CVS Repositories for Performance Indic ators, 2005, pp. 1-5  B. MinaeiBidgoli, D A. Kashy G. Kortemeyer and W. F. Punch Predicting student performance: an  application of data mining methods with the educational web-based system LON-CAPA Proceedings of ASEE/IEEE Frontiers in Education Conference, Boulder CO: IEEE \(2003  A. Me rceron and K. Yacef A We b-based Tutoring Tool with Mining Facilities to Improve Learning and Teaching". Proceedings of 11th International Conference on Artificial Intelligence in Education F.Verdejo and U. Hoppe \(Eds\, Sydney, IOS Press, 2003, pp.201-208  Han Jiawei Micheline Ka m b er. Data Mining Concepts and Techniques Morgan Kaufmann; 2 edition, 2005   Ian H. W i tten, Ei be Frank. Data Mining Practical Machine Learning Tools and Techniques with Java Implementations. Morgan Kaufmann; 2 edition, 2007 
148 


 Figure 2  Dependency network  Figure 3  Example of strong coupling The data mining package used also allows the rules to be visually presented. Figure 2 displays a dependency network in which each node represents a file. Each edge represents a pair wise association rule 
58 


Figure 3 displays an example of a zoom over a strong coupling between several forms of the system and its main form B  Data Validation In order to build more confidence on what was being mined, a sample of the generated rules was validated by the programmers. They used the visual representation of the rules and confirmed the consistency of the main associations presented by the dependency networks  The number of original transaction records gathered throughout eight years of operation of the version control system, was 256,804. However, after a careful data analysis, we identified that of the 256,804 original records 153,288 accounted for marks on the files \(labels\nd 69,592 were directory changes. In the end, only 33,924 changes in 4.096 files were taken into account V  R ESULTS  As seen in tables 2 and 3, our results reached averages higher than the averages presented in Zimmerman et al [5   These results suggest that association rules obtained in our industrial environment are better than those obtained in the published OSS domains. In addition, low standard deviation shown in Table 5 indicates that the values do not spread too much around the averages. Our next step was to test this evidence using inferential statistics A  Analysis and interpretation The analysis started by calculating the harmonic mean for the data presented in Zimmerman et al for eight OSS projects [5  T h is d ata is s h o w n in T a bl e 2   T h ey s e rv e as  a baseline of comparison for the results we obtained in the industrial environment, shown in Table 3 For the statistical testing, we established an apriority significance level 001 0.05. The Kolmogorov-Smirnov Test ensured that the sample was normally distributed. As seen in Table 4, we found p-values of 0.996 and 0.982 for the Navigation and Error Prevention F-measure 000  respectively.  As the p-value is the lowest possible significance with which it is possible to reject the null hypothesis, and they are larger than 0.05, we cannot reject the hypothesis that the data is normally distributed TABLE II  R ESULTS FOR COARSE GRANULARITY IN 9 AND ITS FMEASURE R=R ECALL   P    P RECISION  Suppor t Confidence Project R 000 P 000 F 000 measure R 000 P 000 F 000 measure ECLIPSE 0.17 0.26 0.21 0.03 0.48 0.06 GCC 0.44 0.42 0.43 0.29 0.82 0.43 GIMP 0.27 0.26 0.26 0.08 0.74 0.14 JBOSS 0.25 0.37 0.30 0.05 0.44 0.09 JEDIT 0.25 0.22 0.23 0.01 0.44 0.02 KOFFICE 0.24 0.26 0.25 0.04 0.61 0.08 POSTGRES 0.23 0.24 0.23 0.05 0.59 0.09 PYNTHON 0.24 0.36 0.29 0.03 0.67 0.06 Average 0.26 0.30 0.28 0.07 0.60 0.12 Navigation Prevention 0.1 0.9 13  In order to assure that we could use the T-test for independent samples, we had to test the equality of variances for the independent samples. The Levene Test, shown in Tables 6, produced p-values of 0.544 and 0.908, above 0.05 allowing us to accept the equality of variances for the samples TABLE III  R ESULTS FOR COARSE GRANULARITY IN AN INDUSTRIAL ENVIRONMENT R    R ECALL   P    P RECISION  Support Confidence Project, Description R 000 P 000 F 000 measure R 000 P 000 F 000 measure CadAlmox, Warehouse System Utilities 0.83 0.56 0.67 0.41 0.87 0.56 Cadastros, Requests System 0.79 0.61 0.69 0.30 0.94 0.45 Cliente, Customer System 0.87 0.73 0.79 0.56 0.98 0.71 Contabil, Accounting System 0.65 0.53 0.58 0.37 0.85 0.52 Fiscal, Tax System 0.89 0.62 0.73 0.43 0.93 0.59 FrameWork, Corporate Framework 0.59 0.71 0.64 0.35 0.97 0.51 GUF, Cosmetic System 0.73 0.61 0.66 0.51 0.93 0.66 Legado, Sales System 0.91 0.54 0.68 0.43 0.90 0.58 Logistica, Logistics System 0.67 0.71 0.69 0.42 0.96 0.58 SECV, Administration System 0.74 0.51 0.60 0.40 0.87 0.55 SisAlmox, Warehouse System 0.90 0.48 0.63 0.57 0.86 0.69 SisAP, Survey System 0.86 0.50 0.63 0.29 0.91 0.44 SisComo, Lending System 0.57 0.46 0.51 0.39 0.88 0.54 SisCusteio, Budget System 0.68 0.51 0.58 0.54 0.96 0.69 SisManutencao, Portal Configuration System 0.67 0.50 0.57 0.55 0.80 0.65 SisMkt, Marketing System 0.89 0.67 0.76 0.60 0.92 0.73 SisPortal , Web Portal 0.83 0.68 0.75 0.65 0.92 0.76 Web Services 0.65 0.56 0.60 0.50 0.87 0.64 Average 0.76 0.58 0.65 0.46 0.91 0.60 Navigation Prevention 13 0.1 0.9  Finally, we applied the T-Test and, in both cases, we obtained the p-value of 0.000, significantly lower than 0.05 rejecting our null hypotheses 000 1\(F-measure 000  000 2\(Fmeasure 000 We can, therefore, infer that better effectiveness of file modification prediction was achieved in our industrial projects than in the OSS projects Zimmermann et al [5 analyzed. The threats to validity to this conclusion are analyzed in the next section TABLE IV  K OLMOGOROV S MIRNOV T EST  18 18 6533 6028 7.444E-02 9.380E-02 096 110 096 110 076 102 409 466 996 982 N Mean Std. Deviation Normal Parameters a,b Absolute Positive Negative Most Extreme Differences Kolmogorov-Smirnov Z Asymp. Sig. \(2-tailed Navigation Prevention Test distribution is Normal a Calculated from data b  TABLE V  G ROUP S TATISTICS G ROUP 1    C LOSED S OURCE   G ROUP 2    O PEN S OURCE  18 6533 7.444E-02 1.755E-02 8 2750 6.969E-02 2.464E-02 18 6028 9.380E-02 2.211E-02 8 1213 1293 4.573E-02 Projects 1 2 1 2 Navigation Prevention N Mean Std Deviation Std. Error Mean 
59 


TABLE VI  L EVENE AND T  T ESTS FOR N AVIGATION AND P REVENTION   379 544 12.182 24 000 3783 3 106E-02 3142 4424 12.507 14.376 000 3783 3 025E-02 3136 4431 014 908 10.751 24 000 4815 4 479E-02 3891 5740 9.481 10.421 000 4815 5 079E-02 3690 5941 Equal variance assumed Equal variance not assumed Equal variance assumed Equal variance not assumed Navigatio n Preventio n F Sig Levene's Test for E quality of Variances t df Sig 2-tailed Mean Difference Std. Error Difference Lower Upper 95% Confidence Interval of the Difference t-test for Equality of Means B  Threats to Validity In spite of having achieved statistical significance in the study, one must consider the following threats to the validity of our study   We cannot conclude that all closed-source projects will yield similar results as the one we have obtained, process maturity can play a large role on the prediction effectiveness   Other software characteristics such as size and complexity may affect the association results. We have not test for those variables   The projects that we analyzed were stable and had a few number of transactions per day \(Table 1\ Less stable or more dynamic projects may yield different results   Like in t h e  or der i ng o f  cha nge s m a y i n fl ue nc e  the results for Navigation and Error Prevention VI  C ONCLUSIONS AND FUTURE WORK  This article shows that software module modification association rules derived from our stable industrial environment were more effective than those derived from the OSS projects reported in the literature. As association rules are already being successfully applied for impact analysis in this context [5  o u r  resu l t s i n d i c a tes th at th ey c a n  als o  b e  effectively applied in industrial environments such as the one we studied  We believe that this finding may stimulate further studies in the industry and, hopefully, motivate them to invest on association mining to support software maintenance and evolution activities  It is important to observe that in our analysis systems with little evolutive maintenance, such as the Marketing and the Customer Management System, yield rules with precision and recall better than the average. This was expected as more stable systems should yield better association rules Also, independent of the number of transaction per day systems with small training sets, such as the Accounting and the Web Services Systems, yield rules with precision and recall worse than the average. This was also expected, as this number training examples helps to strengthen the rules As mentioned before, we adapted the software engineering experimental process described in Wohlin et al  o so ft w a r e  r e po si t o r i e s m i ni ng e x p e r i m e nt s. We be l i e v e that the studies, applications, and tools for software repository mining can benefit from this type of approach Rigorous experimental description facilitates replication of studies and the executing of systematic reviews and other types of secondary analysis in the field [18  C o n s id e r in g th e  number of studies being done in the area, we believe that experimental formalism combined with approaches like standardization of data exchange formats among software repositories [1  can  con t ri b u t e t o f a cili tat e th e ex ecu t i o n  and replication of studies in the area As future work, we will start to look at fine granularity associations, analyzing classes and methods as opposed to files. We will also analyze relationships between coupling and the associations mined from version control systems We are currently finishing a Microsoft Visual Studio plug-in to use the mined rules to aid programmers on the fly It will work as a monitor that verifies saved files and warns programmers about unverified associated files. This will facilitate the programmers’ impact analysis effort and mitigate errors during program modification. After its completion, the plug-in will be experimentally evaluated in carefully controlled case studies. Lastly, we will use our Data Warehouse [6 o t e st s e ve ra l  o t her so ft w a r e m i ni ng  techniques over the data we have already gathered and preprocessed A CKNOWLEDGMENT  This study could only be developed due to the full support of CIAL–Brazil and its staff. This work is partially 
60 


supported by CNPq – Brazil’s National Research and Development Council R EFERENCES  1  Mendonça, M. G. and Sunderhaft, Nancy L \(1999\. Mining Software Engineering Data: A Survey. A DACS State-of-the-Art Report Available at http://www.dacs.dtic.mil/techs/datamining/datamining.pdf 2  Mithun Acharya, Tao Xie, Jian Pei, and Jun Xu \(2007\. Mining API Patterns as Partial Orders from Source Code: From Usage Scenarios to Specifications. In Proceedings of the 6th joint meeting of the European Software Engineering Conference and the ACM SIGSOFT Symposium on the Foundations of Software Engineering \(ESEC/FSE 2007\ Dubrovnik, Croatia, pp. 25-34 3  Zimmermann, T.; Kim, S.; Whitehead ,E. J. and Zeller, A \(2007 Predicting Faults from Cached History. In Proc. of the 29th International Conference on Software Engineering \(ICSE 2007 pages 489–498 4  Lucas Layman, Nachiappan Nagappan, Sam Guckenheimer, Jeff Beehler, Andrew Begel \(2008\. Mining software effort data preliminary analysis of visual studio team system data. In Proceedings of the International Working Conference on Mining Software Repositories, pages 43-46 5  Zimmermann, T., Zeller, A., Weissgerber, P., and Diehl, S \(2005 Mining Version Histories to Guide Software Changes. IEEE Transactions on Software Engineering, 31, 429-445 6  Colaço, Methanias, Mendonça, M. G., Rodrigues, Francisco \(2009 Data Warehousing in an Industrial Software Development Environment.  Paper submitted to 33th IEEE Software Engineering Workshop 7  T. T. Ying \(2003\. Predicting source code changes by mining revision history. Master’s thesis, University of British Columbia, Canada 8  T. Zimmermann, S. Diehl, and A. Zeller \(2003\. How history justifies system architecture \(or not\. In Proc. International Workshop on Principles of Software Evolution, Helsinki, Finland, pages 73–83 9  H. Gall, M. Jazayeri, and J. Krajewski \(2003\. CVS release history data for detecting logical couplings. In Proc. International Workshop on Principles of Software Evolution, Helsinki, Finland, pages 13–23   Robert Michael Dondero, Jr \(2008\. Predicting Software Change Coupling. PhD dissertation, Drexel University, USA   Michail \(2000\. Data mining library reuse patterns using generalized association rules. In International Conference on Software Engineering, pages 167–176   Wohlin, P. Runeson, M. Host, M. C. Ohlsson, B. Regnell, and A Wesslén \(2000\. Experimentation in software engineering: an introduction. Kluwer Academic Publishers, ISBN: 0-7923-8682-5   R. van Solingen and E. Berghout \(1999\. The Goal/Question/Metric Method: A practical guide for quality improvement of software development. McGraw-Hill   C. J. V. Rijsbergen \(1979\ Information Retrieval, 2nd edition Butterworths, London   Zimmermann T. and Weibgerber, P \(2004\ Preprocessing CVS data for fine-grained analysis. In Proc. International Workshop on Mining Software Repositories \(MSR04\, Edinburgh   K. Fogel and M. O’Neill \(2002\. cvs2cl.pl: CVS-log-message-toChangeLog conversion script. Available at http://www.redbean.com/cvs2cl   R. Agrawal and R. Srikant \(1994\ Fast algorithms for mining association rules. In Proceedings of the 20th Very Large Data Bases Conference \(VLDB\, pages 487–499. Morgan Kaufmann   T. Dyba, B. Kitchenham, and M. Jorgensen \(2005\. Evidence-based software engineering for practitioners. Software, IEEE, 22\(1\65   Sunghun Kim, Thomas Zimmermann, Miryung Kim, Ahmed E Hassan, Audris Mockus, Tudor Girba, Martin Pinzger, E. James Whitehead Jr., Andreas Zeller \(2006\. TA-RE: An Exchange Language for Mining Software Repositories. In Proceedings of the Third International Workshop on Mining Software Repositories Shanghai, China, pp. 22-25   Michael Grossman and Robert Katz \(1986\. A new approach to means of two positive numbers. International Journal of Mathematical Education in Science and Technology, Volume 17 Number 2, pages 205 – 208 
61 


Application of Chaotic Particle Swarm Optimization Algorithm in Chinese Documents Classification 763 Dekun Tan Qualitative Simulation Based on Ranked Hyperreals 767 Shusaku Tsumoto Association Action Rules and Action Paths Triggered by Meta-actions 772 Angelina A. Tzacheva and Zbigniew W. Ras Research and Prediction on Nonlinear Network Flow of Mobile Short Message Based on Neural Network 777 Nianhong Wan, Jiyi Wang, and Xuerong Wang Pattern Matching with Flexible Wildcards and Recurring Characters 782 Haiping Wang, Fei Xie, Xuegang Hu, Peipei Li, and Xindong Wu Supplier Selection Based on Rough Sets and Analytic Hierarchy Process 787 Lei Wang, Jun Ye, and Tianrui Li The Covering Upper Approximation by Subcovering 791 Shiping Wang, William Zhu, and Peiyong Zhu Stochastic Synchronization of Non-identical Genetic Networks with Time Delay 794 Zhengxia Wang and Guodong Liu An Extensible Workflow Modeling Model Based on Ontology 798 Zhenwu Wang Interval Type-2 Fuzzy PI Controllers: Why They are More Robust 802 Dongrui Wu and Woei Wan Tan Improved K-Modes Clustering Method Based on Chi-square Statistics 808 Runxiu Wu Decision Rule Acquisition Algorithm Based on Association-Characteristic Information Granular Computing 812 JianFeng Xu, Lan Liu, GuangZuo Zheng, and Yao Zhang Constructing a Fast Algorithm for Multi-label Classification with Support Vector Data Description 817 Jianhua Xu Knowledge Operations in Neighborhood System 822 Xibei Yang and Tsau Young Lin An Evaluation Method Based on Combinatorial Judgement Matrix 826 Jun Ye and Lei Wang Generating Algorithm of Approximate Decision Rules and its Applications 830 Wang Yun and Wu-Zhi Qiang Parameter Selection of Support Vector Regression Based on Particle Swarm Optimization 834 Hu Zhang, Min Wang, and Xin-han Huang T-type Pseudo-BCI Algebras and T-type Pseudo-BCI Filters 839 Xiaohong Zhang, Yinfeng Lu, and Xiaoyan Mao A Vehicle License Plate Recognition Method Based on Neural Network 845 Xing-Wang Zhang, Xian-gui Liu, and Jia Zhao Author Index 849 
xiii 


   C4.2 Open GL has excellent documentation that could help the developer learn the platform with ease C4.3 Developer has very little ex perience in working with Open GL platform  For our case study, alternative B i.e. Adobe Director was the most favorable alternative amongst all the three. It catered to the reusability criteria quite well and aimed at meeting most of the desired operational requirements for the system   6. CONCLUSION & FUTURE WORK  The main contribution of this paper is to develop an approach for evaluating performance scores in MultiCriteria decision making using an intelligent computational argumentation network. The evaluation process requires us to identify performance scores in multi criteria decision making which are not obtained objectively and quantify the same by providing a strong rationale. In this way, deeper analysis can be achieved in reducing the uncertainty problem involved in Multi Criteria decision paradigm. As a part of our future work we plan on conducting a large scale empirical analysis of the argumentation system to validate its effectiveness   REFERENCES  1  L  P Am g o u d  U sin g  A r g u men ts f o r mak i n g an d  ex p lain in g  decisions Artificial Intelligence 173 413-436, \(2009 2 A  Boch m a n   C ollectiv e A r g u men tatio n    Proceedings of the Workshop on Non-Monotonic Reasoning 2002 3 G  R Bu y u k o zk an  Ev alu a tio n o f sof tware d e v e lo p m en t  projects using a fuzzy multi-criteria decision approach Mathematics and Computers in Simualtion 77 464-475, \(2008 4 M T  Chen   F u zzy MCD M A p p r o ach t o Selec t Serv ice  Provider The IEEE International Conference on Fuzzy 2003 5 J. Con k li n  an d  M. Beg e m a n   gIBIS: A Hypertext Tool for Exploratory Policy Discussion Transactions on Office Information Systems 6\(4\: 303  331, \(1988 6 B P  Duarte D e v elo p in g a p r o jec ts ev alu a tio n sy ste m based on multiple attribute value theroy Computer Operations Research 33 1488-1504, \(2006 7 E G  Fo rm an  T h e  A n a l y t ic Hier a rch y P r o cess A n  Exposition OR CHRONICLE 1999 8 M. L ease  an d J L  L i v e l y  Using an Issue Based Hypertext System to Capture Software LifeCycle Process Hypermedia  2\(1\, pp. 34  45, \(1990 9  P e id e L i u   E valu a tio n Mo d e l o f Custo m e r Satis f a c tio n o f  B2CE Commerce Based on Combin ation of Linguistic Variables and Fuzzy Triangular Numbers Eight ACIS International Conference on Software Engin eering, Artificial Intelligence Networking and Parallel Distributed Computing, \(pp 450-454 2007  10  X  F L i u   M an ag e m en t o f an In tellig e n t A r g u m e n tatio n  Network for a Web-Based Collaborative Engineering Design Environment Proceedings of the 2007 IEEE International Symposium on Collaborative Technologies and Systems,\(CTS 2007\, Orlando, Florida May 21-25, 2007 11 X. F L i u   A n In ternet Ba se d In tellig e n t A r g u m e n tatio n  System for Collaborative Engineering Design Proceedings of the 2006 IEEE International Symposium on Collaborative Technologies and Systems pp. 318-325\. Las Vegas, Nevada 2006 12 T  M A sub jec tiv e assess m e n t o f altern ativ e m ission  architectures for the human exploration of Mars at NASA using multicriteria decision making Computer and Operations Research 1147-1164, \(June 2004 13 A  N Mo n ireh  F u zzy De cisio n Ma k i n g b a se d o n  Relationship Analysis between Criteria Annual Meeting of the North American Fuzzy Information Processing Society 2005 14 N  P a p a d ias HERMES Su p p o rti n g A r g u m e n tative  Discourse in Multi Agent Decision Making Proceedings of the 15th National Conference on Artifical Intelligence \(AAAI-98  pp. 827-832\dison, WI: AAAI/MIT Press,  \(1998a 15  E. B T riantaph y llo u   T h e Im p act o f  Ag g r e g atin g Ben e f i t  and Cost Criteria in Four MCDA Methods IEEE Transactions on Engineering Management, Vol 52, No 2 May 2005 16 S  H T s a u r T h e Ev alu a tio n o f airlin e se rv ice q u a lity b y  fuzzy MCDM Tourism Management 107-115, \(2002 1 T  D W a n g  Develo p in g a f u zz y  T O P S IS app r o ach  b a sed  on subjective weights and objective weights Expert Systems with Applications 8980-8985, \(2009 18 L  A  Zadeh  F u z z y Sets   Information and Control 8  338-353, \(1965  152 


                        





