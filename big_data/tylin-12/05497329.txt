May 12 2010 15:23 RPS  Trim Size 8.50in x 11.00in I EEE icfcc 2010-lineupúvol-1 F340 An Incremental Associative Classification algorithm used for Malware Detection  FENG Shaorong School of Information Science and Technology, Xiamen University  Xiamen, Fujian, 361005 China  shaorong@xmu.edu.cn HAN Zhixue School of Information Science and Technology, Xiamen 
University  Xiamen, Fujian, 361005 China  Jessehan@yahoo.cn   Abstract Associative classification\(AC\ promising approach used for auto malware de tection. However, when data operation occurs \(training data added over time traditional AC algorithms have to re-learn repetitive which is expensive or even become invalid ly because of massive data and limited computing resource To resolve the challenges above, an efficient increme ntal associative classification algorithm \(EIAC\which can keep the last mining results and learn from the new data set. First, EIAC learns new potential ruleitems from the new data set; and then updates the frequent count of original and potential ruleitems by constructing and searching 
two trees base d on FP-Tree respectively; at last, updates the classification association rules with the frequent information of updated ruleitems. The promising studies on real daily data collection and prediction illustrate that: compared with the traditional AC and other classification methods, EIAC can maintain the classification association rules effectively and en sure a higher predictability of the classification model. So it can be well used for malware detection Keywords-Association  Classification  Incremental Learning   Malware Detection I   I NTRODUCTION  Malware is a program designed to infiltrate or damage a computer system without the owner's consent. Nowadays massive malware has presented a major security threat to 
computer users. Auto Malware Detection becomes a key technique for Network Security 1 Associative classification\(AC 2-5 can be successfully used for malware detection. In malware detection the data set for training is always very large and frequently updated. However, when the training set changeed, the existing AC algorithms always scan the changed data set in order to reflect the changes done  We propose an efficient incremental associative classification algorithm\(EIAC\on FP-Tree. It maintains the classification association rules \(CARs incrementally by keeping the la st mining results and learning the new data. A comprehensiv e experimental study on a large collection of PE files obtained from the anti-virus laboratory of KingSoft Corporati 
on is performed to compare the incremental algorithm wi th non-incremental algorithm Promising experimental results demonstrate that EIAC outperforms non-incremental algorithms and other classification methods in efficiency and accuracy both II  R ELATED W ORK  Utilizing association rule discovery method to construct classification systems is a promising approach 2 Associative classification method has been used in malware detection system IMDS 4 which adopts the improved OOA_Fast_FPgrowth algorithm to generate CARs for building the classifier. But without consider ing the efficient incremental maintain problem, whitch restricts the practical application 
of this method seriously. In malware detection, the data set for training is always very la rge and frequently updated, as a result the traditional method has to relearn the complete updated database every time to reflect the changes of the training data. Furthermore, as the training data set grows rapidly, it wastes the learned information seriously, and will aggravate the exhaustion of computational resource for one time mining So far, there are rarely studies on the incremental learning of associative classification  But there had been some studies on incremental association rule discovery algorithms, and we can use their ideas for reference to solve the incremental AC mining problem. FUP 7 and FUP2 8 are proposed to handle all update cases when data is added to and deleted from a database. So far, researchers had 
proposed some incremental association rule algorithms based on FP-Tree 9 Such as methods in [10 dealing with the association rule updating probl em with minimum support changed and data operations occurred respectively  the authors focus on how to generate new frequent patterns after new transaction data added to training database Considering the challenges above, we propose an efficient incremental associative classification algorithm EIAC\based on FP-Tree. It maintains the classification association rules \(CARs\entally by keeping the last mining results and learning the new data. As avoiding relearning the history data an d using the compact FP-Tree structure, EIAC outperforms no n-incremental algorithm and other classification methods in efficiency and accuracy both III  T HE 
E FFICIENT I NCREMENTAL A SSOCIATIVE C LASSIFICATION A LGORITHM  In this paper resting on the analysis of Windows APIs called by PE files, we apply associative classification method in malware detection. That is to find out how a set of API calls support the specific objectives: Class= Malware and Class= Benign This research is supported by the National Natural Science Foundation of China u nder Grant No. 50604012 V1-757 978-1-4244-5824-0/$26.00 c  2010 IEEE 


May 12 2010 15:23 RPS  Trim Size 8.50in x 11.00in I EEE icfcc 2010-lineupúvol-1 F340 A  Problem description In this section, we will introduce the definitions used in EIAC algorithm Definition 1 Support and Confidence  Let I  I 1 I 2 I m   be an itemset. The support and confidence of the corresponding class association rule are defined as    100 num I Class DB os DB   1    100   num I Class DB oc num I DB   2 Where the function num\(I Class, DB  returns the number of data in DB where I  Class hold and num\(I, DB  means the number of data which contains I  Definition 2 Frequent Ruleitem 2  Given mos as the user-specified minimum support I is called frequent ruleitem in DB if os  mos  Definition 3 Class Association Rules  Given moc as the user-specified minimum confidence. The rule is a class association rule if oc  moc And I is called an accurate ruleitem B  EIAC algorithm Let L be the set of frequent rulei tems in original database DB  MC be the set of frequent ruleitems relating to Malware BC be the set of accurate ruleitems relating to Benign MRS  be the set of CARs related objective is Malware BRS be the set of CARs related objective is Benign. After an incremental db db contains only new malware data DB  NC is the set of frequent ruleitems in db which are relating to Malware. There are two steps in EIAC algorithm: Updating the frequent ruleitems and updating the CARs 1\ Update of frequent ruleitems based on FP-Tree  The following properties are useful Lemma 1 For each frequent ruleitem which is not accurate in MC It may generate a new malware rule I  Malware\(os,oc We can compute the rule’s os   oc in updated database according to the following formulates       num I Malware DB num I Malware db os DB db               num I Malware DB num I Malware db oc num I Malware DB db num I Benign DB    4 Lemma 2 A frequent ruleitem I in db can become a winner in the updated database DB  db if and only if       num I Class db mos db    5      num I Class DB db mos DB db r 6 Lemma 3 If an original frequent ruleitem I becomes a loser, then every longer ruleitem containing it cannot be a winner Based on the above analysis and properties, the update of frequent ruleitems in DB  db is outlined as follows a  Filtering out the ruleitems wh ich appeared in MC from NC: NC=NC-NC  MC. Then for every ruleitem I  NC updating its corresponding support count in DB db  and choose the new frequent ruleitems First, scan DB to delete items which are not 1-ruleite m in NC and order remainder items descending by their fre quent count in NC; Second construct a FP-Tree for pruned DB; Finally, update the frequent count of each potential ruleitem in DB  db by searching the FP-Tree b  For every ruleitem I  MC, updating its corresponding support count in DB  db First, scan db to delete items which are not 1-ruleitem in MC  and order remainder items descending by their frequent count in MC Second, construct a FP-Tree for pruned db; Finally, update the frequent count of each original ruleitem by searching the FP-Tree c F or every ruleitem  calculate its corresponding support count in db by constructing and searching it like above  For every ruleitem above, if num  I  Class DB  db  mos  DB|+|db means that it is not a frequent ruleitems in DB db  we call it as a loser. Then we can delete it. At last, we g et the frequent ruleitem set NC  MC  relating to Malware and the frequent ruleitem set BC relating to Benign in updated database 2\ Update of CARs There are only new malware data in db, so only new malware rules may be generated. The process of CARs update consists of three ma jor parts: updating original malware rules; updating benign rules; generating new malware rules. Based on the enou gh information of frequent ruleitmes, the updating of CARs is very easy as follows a  Update original malware rules For every CAR in MRS I  Malware\(os,oc Check I in updated MC If I disappeared, which means the rule is invalid in the updated database. We can remove this rule from MRS straightly. Else we need to get the corre sponding support count of I from MC  And compute the rule’s os and oc in updated database 4 oc   moc then the rule is still invalid in the upd ated database. So we remove this rule from MRS straightly Else, update the rule’s value of support and confidence in updated database DB  db  b  Updating benign rules For every CAR in BRS   I  Benign\(os,oc support count in db Then compute the rule’s os and oc according to the following formulates    os DB os  D  Bdb r   7      os DB oc os DB num I Malware db r  r   8 If os  mos or oc  moc then the rule invalidates in the updated database. So we remove this rule from BRS  straightly. Else, update the rule’s value of support and confidence in updated database DB  db  c  Generating new malware rules New malware rules come from two parts: Original frequent ruleitems which were not accurate in MC but become accurate in updated database generating new malware rules; New frequent ruleitems may generate new malware rules V1-758 2010 2nd International Conference on Future Computer and Communication Volume 1 


May 12 2010 15:23 RPS  Trim Size 8.50in x 11.00in I EEE icfcc 2010-lineupúvol-1 F340 For every frequent ruleitem which was not accurate in MC. It may generate a new malware rule I  Malware\(os,oc We can compute the rule’s os and oc in updated database according to formulates \(3\\(4 For each potential frequent ruleitem in NC, it may generate a new malware rule I  Malware\(os,oc We compute its os and oc in updated database according to formulates \(3\\(4 For every ruleitem I above, if its os  mos and oc   moc the ruleitem do generate a new malware rule in updated database. Then we add the new rules into MRS straight. Else this ruleitems is still just frequent but not accurate to compose a rule 3\ The EIAC algorithm outline Input 1\the original database 2\db: an incremental malware data set 3 ms relating to Malware in DB 4\frequent and accurate ruleitems relating to Benign in DB 5\related objective is Malware 6\related objective is Benign 7\NC: the set of frequent ru leitems in db, and relating to Malware 8\os: user-specified minimum support 9\oc: user-specified minimum confidence Output 1\ms relating to Malware in DB  db 2\frequent ruleitems relating to Benign in DB  db 3\set of CARs related objective is Malware in DB  db 4\objective is Benign in DB  db Algorithm update the frequent ruleitems set 1\=NC-MC  NC 2\=Update_FrequentItemsets\(MC, db 3\=Update_FrequentRuleitems\(NC, DB 4\ms\(BC, db update original rules and generate new rules 5\=Update_Rules\(MRS, MC BRS, BC Generate new rules from the frequent itemsets which aren’t accurate ruleitems in MC 7\Generate_NewRules\(MC',MRS Generate new rules from potential frequent itemsets in NC 8\wMRS=NewMRS  Generate_NewRules\(NC', MRS Union all rules 9\=MRS  NewMRS IV E XPERIMENT AND A NALYSIS We conduct two sets of experiments on the large collection of PE files obtained from the anti-virus laboratory of KingSoft Corporation. First we evaluate the performance of EIAC and traditional OOA_Fast_Fp-growth on a large data set. The second, we verify the precision of our classifier and other classification methods Both the experiments are conducted under the environment of Windows XP OS plus Intel Core Duo 1.66GHz CPU and 1GB of RAM A Experimental data set In this study, we use 10,000 malicious executables and 10,000 benign executables as tr aining data set, other 5,000 malicious and 5,000 benign executables as test data set Useful information include: FileSort, as the PE type FileName, as the name of the executables; APISeq, as Windows APIs called by PE files B Results and analysis 1 Evaluation between EIAC and OOA_Fast_Fp-growth Because of the higher efficiency of OOA_Fast_Fpgrowth than Apriori and Fp-g rowth me we can directly use OOA_Fast_Fp-growth as a non-incremental comparison algorithm The experimental data is a rranged as follow: split the 20,000 training data set DB as 5 parts: DB={DB0, DB1 DB2, DB3, DB4}; Where DB0 in cludes 6,000 malicious and benign executables respectiv ely; DB1 and DB2 are both 2000 malicious executables;D B3 and DB4 are both 2000 Benign executables The experiments were done as follow: Set mos=0.05  moc=0.7 \(recommend by malware analysis  and mining experts\C incremental learning: mining DB0 as the initial learning database us ing OOA_Fast_Fp-growth in order to get the initial frequent patterns and CARs. Then mining the other 4 parts of data using the incremental methods EIAC; as the comparison experiments, re-learn the updated data set as a whole repetitive using OOA_Fast_Fpgrowth, when the other 4 data sets were added one by one The results are shown in table whe  re FAIL means the algorithm is invalid to get rule s within limited computational recourse TABLE I C OMPARISON OF T WO ALGORITHMS Data set Re-learning with OOA_Fast_Fp-growth Numbers of CARs/CPU Time\(hour Incremental learning with EIAC Numbers of CARs/CPU Time\(hour DB 0 40035/1 40035/1 DB 1 40329/2 40329/0.5 DB 2 40147/5 40147/0.45 DB 3 FAIL 41786/0.6 DB 4 FAIL 43467/0.65 We can find that, re-l earning the whole updated database waste the learned information, and also exhaust the computational resource as the database becoming too large However, using our incremental learning algorithm EIAC avoid re-learning. So with the same values of parameters Volume 1 2010 2nd International Conference on Future Computer and Communication V1-759 


May 12 2010 15:23 RPS  Trim Size 8.50in x 11.00in I EEE icfcc 2010-lineupúvol-1 F340 mos, moc\aintain the CAR set efficiently solved the incremen tal learning problems of frequent data insertion 2 Comparison of differe nt classification algorithms In this set of experiments, we compare EIAC with Support Vector Machine and Decision Tree methods. That is using the J4.8 version of Decision Tree implemented in WEKA  and the SVM implemented in LIBSVM package  setting mos to 0.294 and moc to 0.98 respectively for EIAC. Then mine the 20,000 executables as training data, and validate the accuracy of each classifier on other 10,000 executables. Results shown in Table n indicate our method achieve most accurate malware detection Where TP, TN, FP, FN, DR, and ACY refer to True Positive True Negative, False Positive, False Negative, Detection Rate, and Accuracy respectively TABLE II C OMPARISON OF DIFFERENT CLASSIFIERS Classifiers TP TN FP FN DR ACY Decision 4078 4885 115 922 81.56 89.63 Lib SVM 4401 4857 143 599 88.02 92.58 EIAC 4453 4897 103 547 89.06 93.50 From the comparison, we observe that EIAC outperforms other classification methods in both detection rate and accuracy. Decision Tree method exhaust too much RAM. In order to deal with large data set, researchers improved it with many techniques \(sampling, s cattering\hich descend the accuracy especially with noise. For SVM, the overlapping between Malware and Benign data cause the trouble to separate them exactly, especially the unbalance of data in the overlapping field. All of these reasons declined the accuracy And some works 5 proved that a classifier with frequent pattern analysis is generally e ffective to solve the scalability and over fitting issues V C ONCLUSIONS AND FUTURE WORK In this paper, we introduce an efficient incremental updating associative classifi cation algorithm \(EIAC\ed on Fp-Tree, the main contributi ons are: \(1\Considering the frequent adding operation on training database, EIAC can maintain the set of CARs incr ementally; \(2\Fp-tree for reference, it can maintain the classifier efficiently; \(3 Considering the relationship between data attributions with class entirely, it achieve higher detection accuracy than other classifiers. Experimental results improved that EIAC algorithm can quickly and effectively maintain the classification rules, and ensure the predictability of the classification model used for malware detection Furthermore, as a universal classification algorithm, EIAC can be directly used for ma ny other categorization tasks such as text mining and News classification etc A CKNOWLEDGMENT This research is supported by the National Natural Science Foundation of China under Grant No. 50604012 which title is “Research on Key Techniques in mining industry Data Warehouse”. Financial supports from this Program\(NNSF\y appreciated. The helpful comments from two anonymous reviewers are also gratefully acknowledged R EFERENCES  N. Idika A. P  Mathur. A S u rvey of Malwa r e Dete ction   m e nt of Co m p uter Science  Purd ue University 2007  B. Liu W  Hsu, and Y Ma. Integr a t i ng classification and association rule mi P r oceedings of the Fourth International Conference  on Knowledge Discovery and Data Mining. New York City, 1998 80-86  Fadi Thabtah. A review of asso ciative classification m i ning [J Proceedings of The Knowledge Engineering Review, 2007, 22\(1\765  Yanfang Ye  Dingding W a ng Tao Li, and Dongy i Ye IMDS Intelligent malware detection system e dings of ACM International Conference on Knowledge Discovery and Data Mining SIGKDD\se, California, 2007: 1043-1047  H. Cheng, X. Yan, J. Han, and C  Hsu. Discri m i native frequent  pattern analysis for effective classification  2007 international conference on data engineering ICDE-07, Istanbul Trukey, 2007  Fadi Thabtah. Challenges and Interesting Research Directions in Associative Classi International Conference on Data Mining-Workshops \(ICDMW’06 Hong Kong: IEEE, 2006:785-792  Cheung D W  et al. Maintenance of discovered association rules in  large databases: an incremental updating technique [C of the 12th International Conference on Data Engineering. New Orleans, Louisana, 1996: 106-114  Cheung D W et al. A General increm ental technique for m a intaining discovered associa oceedings of the 5t h International Conference on Database Systems for Advanced Applications DASFAA’97 Australia, 1997  Han J, Jian P, Yiwen Y Mining frequent patterns wi thout candidate  e 2 000 ACM SIG M O D International  Conference Management of Data. Dallas, 2000: 1-12  Zhu YuQ uan, Sun ZhiHui, Ji XiaoJ un I n crem ental updating algorithm based on frequent pattern tree for mining association rules   Jour nal of Co m puter s , 2003 , 26 1  9196  Yang M i ng et al  Fast incr e m ental u pdating o f fr equen t item s ets [J   Journal of Applied Sciences, 2003 , 21 \(4\ : 367-372  H. W i tten and E. Frank. Data m i ning: Practical m a chine learning tools with Java implem Newa rk City Morgan Kaufmann, 2005  C Hsu and C  L i n  A co m p ar ison of m e thods for  m u lticlass suppor t  vector m Transactions on Neural Networks, 2002  13\(2\:415-425 V1-760 2010 2nd International Conference on Future Computer and Communication Volume 1 


 V I S IMULATION INPUT S    In our simulation, we  suppos e  that  all replicas have  the same ch a racteristics, such as number of jobs to be run  file processing time, delays between each job submission  maximum queue size in each computing element, size and  number of requested files and speed of input/output storage  operation s  to see the effect of ne t work resources onl y We  tested and compared the two selection strategies with our  strategy, traditional and random models                                                     In traditional selection method, the best replica is  the one which has the lea s t number of hops \(routers\, the  highest bandwidth or the minimum round trip time to reach  the computing site. In random method replica manager  selects randomly one of the available replicas to serve user's  request. Figure 4, shows the flowchart of  ES T  ste p s    A  Get data grid job: in our simulation we assume that  there is a job  J with four fil e s  required for  analyzing   B  By contacting  RLS  all   Logical and Pysica l  names  of replicas are collected   C  Getting Single Trip Time STT  Being a node of  PRAGM A  Data Grid  7    w e co n s t r u ct  NH F  using  Ipre f  service of  PRAGM A  infrastructure. We  contact data grid nodes and get the  STT s  for  different periods of time and save  STT s  values in a  file called  NHF.xl s  as it is shown in  Table I   Therefore, our grid configuration file re f lects the  real network nodes and links of the  PRAGMA Gri d  7   D  Convert  STT s  v alues to logical values using a  mapping function   E  Applyin g  Association Rule s   To apply  an  A prior i  algorithm on logical values of   STT Tabl e   Table I I  we use  MLMine r  softwar e     The steps which  we followed are    1  Use a spreadsheet software to open   NH F x l s  fil e   2  From the  XLMine r  menu, select  Ad d In s  menu then  Affinit y  after that chose  Association rule s The  Association Rules dialog box appear s  as it is shown  in  Figur e  6  the n  sele c ts  the  input data format a s  Data in binary matrix format     3  Enter all input data in the  Association Rule s  box  such a s  minimum confidence and support a n d  make the selections  o f  the  binary data of  ST T  an d  click  Finish button. The result will be shown as in  Figure  7    6 0  21 3  6 5  20 2  30 3  20 5  30 5  20 2  30 0  21 2  31 3  21 2  31 0  20 2  30 7  T ABLE  I   T RANSACTIO N S  T ABL E   ST T S VALUE S  Y  N  Is  NH F  availab l e   Y  Figur e  5   F lowcha r t of ESM    Apply  A priori  algorith m  t o  get  the  A R  Compute  Improvement of  Rules  I\(Rule   Convert  NH F  t o  LH F  Get recen t  NH F  from Ipre f  Get the first Job  from job queu e  Get the physical  name s  of  replicas\222 sites  from  RL S  Y  N  Similar to  pre. job  s  replicas    I\(Rule  0  Use  a rule to get  associate d  site s  Get the next Job  from job queu e  
191 


                                                               0  1  0  1  0  1  0  1  0  1  0  1  0  1  0  1  1  1  0  0  0  1  0  1  1  1  0  0  0  1  0  1  0  1  1  1  0  1  0  1  0  1  1  1  0  1  0  1  0  1  1  1  0  1  0  1  0  1  1  1  0  1  0  1  0  1  1  1  0  1  0  1  0  1  1  1  1  1  0  1  0  1  1  1  1  1  0  1  0  1  1  1  1  1  0  1  0  1  1  1  1  1  0  1  0  1  1  1  1  1  0  1  0  1  1  1  1  1  0  1  0  1  1  1  1  1  0  1  Figure  7 XLMiner  menue of  Association Rules    Improv   Figure  7   Apriori  Associa t ion Rules    T ABLE  II    L OGICAL VALUE S   S TANDARD  F OR M  Figure  6   Association Rules   window  in XLMiner softwar e  
192 


 F  To check the validity of association rules  E quatio n  1  is use d  as  it is done i n  th e  last column of  Figur e  7   G  Select one  of th e  rules which have Improvement  value more than   1     H  In case if there is another job asking to get the files  and the s e files are available in the same sites then  choose another rule to serve the new request  Otherwise  apply  Aprior i  algorithm for recent STTs  of  new replicas sites    VI I   I NTERPRETING THE  R ESULT S    This section means to explain how the association  rul e s work better than the traditional and random methods  As it is shown in  Figure 7 after applying  Aprior i  algorithm  we get  602  different rules which can be used to select the  best combination of replica sites   Let us explain Figure 7  in details    Rule #1: if Site\(s S 4  S 7  are selected then this implies  that site\(s S 3  can also be selected at the same time. This  rule has 100% confidence    In other words, it means if site  S 4   and  S 7  are selected to  work together to transfer the requested files, t h en this  implies site\(s  S 3  can also be selected to share the work at  the same time. This rule has confidence  100  This  particular rule has  confidence  of  100  meaning that  S 4  S 7   and  S 3  can be selected as a best set of replicas by  Replica  Manage r  to ge t  requested files. To compute the correlation  of this rule and see how far it is better than choosing the site  randomly, we use an Improvement equation     indicates that it has support of  26  transactions, meaning that in transaction  Single Trip  Time  Table  there are  2 6  concurrent uncongested trips of  S 4  S 7   i.e. these sites have similar network conditions in particular  time      indicates the total number of transactions  involving uncongested trips of  S 3   in  Rule 1  is equal to  174    This is a piece of a side information; it is not involved  in calculating the confidence or support for the rule itself       is the number of transactions where   S 4   S 7 as well as   S 3 has uncongested trips. In  Rule 1  it is equal  to  2 6       or   indicates how much  more likely we are to encounter  S 4  and  S 6  transaction if we  consider just those transactions where  S 3  S 5 and  S 8  have  uncongested trips. As compared to the entire population of  the transactions, it's t h e  confidenc e  divided by  support \(c   where the latter is expressed as a percentage   For  Rule 1 the  confidenc e is  100   support \(c  in  percentage   174/194\*100 = 89.6 9 So, th e    Lift ratio = 100/89.69.1 = 1.1   As it is clearly shown in  Figure 7  some r u les with  an improvement value less than one means this is an  unreliable rule. Whereas the rule with a value more than one  means this rule is better than random replica selection with  number of time equal to improvement value as it is shown in  Figure 8                   When improvement value is more than 1 it is better to use  EST to select replica sites, because it selects the sites able to  work simultaneously    I n  Figure  9  we sho w  the  comparison between EST and  traditional model using highest bandwidth a s  a criterion to  select the best replica. As we can observe our technique has  a better performance most of the times because it selects the  sites which have the stable links. In traditional method the  site which has the highest bandwidth does not always me a n  to be the best because sometimes this highest bandwidth  link can be congeste d   Let us declare more by the following  scenario  o f  Figure 1 0 suppose   S 0   be the computing site  and let   S 1  S 3   S 1 4   be replica sites  Red stars referring to  congested router s   Using traditional selection method the  file will be got from S14 since it has less number of Hops  routers\ and highest and also has highest bandwidth link         Figure 8. Improvement ratio for different rule s  Figure 9. Traditional selection strategy and ES T    
193 


               Using  ES T the replica   S 3    is selected as a best replica  because the link b etween  C S  and  R S  is uncongested     VII I   C ONCLUSIO N  In this paper we presented a dynamic replica  selection strategy that aims to adapt at ru n time its criteria to  flexible QoS binding contracts specified by the service  provider and/or the client. The adapta b ility feature  addressed by our replica selection strategy is inferred from  the observation that the basic metrics, which influence the  QoS that the user perceives when accessing a replica  depend directly on the application being replicated and on  the cli e nts\222 preferences. To reach this objective that, we  used   the concept of association rules of data mining  approach to the most stable links sites in order to reduce the  searching space the response time and network resources  consumed    A CKNOWLEDGEMENT S  Au t hors wish to express their sincere thanks to  Prof. Arun Agarwal, from GridLabs Department of  Computer and Information Sciences, University of  Hyderabad, India for providing all the infrastructural and  computational support required to carry out this work  His  academic suggestions to improve the quality of the work are  also highly appreciated and acknowledged   R EFERENCE S     M  Rashedur Rahma n   Ken Barke r   Reda Alhaj j    Replica  selection in grid environment:a dat a mining approac h    Distributed systems and grid computing \(DSGC\,pp: 695  226  700  2005    J. Gwertzman and M. Seltzer    The case for geographical  push  cashing  In Proceeding of the 5th Workshop on Hot ZTopic in  Operating Systems, 1995     R. Kavitha, I. Foster   Design and evaluation of replication  strategies for a high performance data gri d  in, Proceedings of  Computing and High Energy and, Nuclear P h ysics, 2001   S. Vazhkudai, J. Schopf, I. Foster   Predicting the performance of  wid e area data transfer s  in: 16th International PDPS, 2002   S. Vazhkudai, J. Schopf   Using regression techniques to predict  large data transfer s  in: Computing: Infrastru c ture and  Applications, The International Journal of High Performance  Computing Applications, IJHPCA , August, 2003   A. Abbas, Grid Computing    A Practical Guide to Technology  and  A PPLICATION S    2006   http://goc.pragm a grid.net/wiki/index.php/UoHy d   S. Vazhkudai, S Tuecke, I. Foster   Replica selection in the  globus data gri d  in: First IEEE/ACM International Conference  on Cluster Computing and the Grid, CCGrid 2001   J. Guyton and M. Schwartz   L o cating nearby copies of replicated  internet server s    In Proceeding of ACM SIGCOM M 222  95, 1995   A. Tirumala, J. Ferguson, Iperf 1.2   The TCP/UDP Bandwidth  Measurement Tool, 2002   R. Wolski, Dynamically forecasting network performance using  the Network Weat h er Service, Cluster Computing \(1998   Yunhong Gu, Robert L. Grossman   UDT: UD P based data  transfer for hig h speed wide area network s  Computer  Networks, Volume 51, Issue 7, 16 May  2007, Pages 1777 1799  Elsevier   R.M. Rahman, K. Barker, R. Alhajj   Predicting the performance  of GridFTP transfer s  in: Proceedings of IEEE Symposium of  Parallel and Distributed Systems, 2004, New Mexico, USA, p  238a   J. F. Kurose, K.W. Ross   Compute r  Networking A To p Down  Approach Featuring the Interne t 3rd edition   S. Venugopal, . R. Buyya,"The Gridbus Toolkit for Service  Oriented Grid and Utility Computing: An Overview and Status  Report"2004   R   Agrawal  T  Imielinski  A.Swami    Mining associatio n  rules  between sets of items in large database s  In: Proc. ACM  SIGMOD Intl. Conf. Management Data, 199 3  R  M Rahman, K Barker and R Alhajj   Replica selection  strategies in data gri d    Jou r nal of Parallel and Distributed  Computin g   Volume 68, Issue 1 2 Pages 156 1 1574, December  2008   A. Jaradat, R. Salleh and A. Abid   Imitating K Means to  Enhance Data Selectio n  Journal of Applied Sciences 9 \(19  356 9 3574, 2009, ISSN 181 2 5654, Asian Ne t work for Scientific  Informatio n 2009   S. Venugopal, . R. Buyya, K. Ramamohanarao, "A taxonomy of  Data Grids for distributed data sharing, management, and  processing". ACM Comput. Surv. 38, 1 \(Jun. 2006  AC M   New  York, NY, US A  http://www.resample.com/xlminer/help/Index.ht m  A   K Pujar i    Data mining technique s    Hyderabad : Universities  Press, 2002   G. Williams, M. Hegland and S. Roberts   A Data Mining  Tutoria l  IASTED International Conference on Parallel and  Distributed Computing and Networks P DCN\22298\ 14 December  199 8   T  Ceryen, and M. Kevin, 2005   Performance characterization of  decentralized algorithms for replica selection in dstributed object  system s  Proceedngs of 5th International Workshop on Software  and Performance, July 11  14, Palm a de Mallorca, Spain, pp  25 7 262    F  Corina, and M. Mesaac, 2003  A scalable replica selection  strategy based on flexible contract s  Proceedings of the 3rd  IEEE Workshop on Internet Applications, June 2 3 24, IEEE  Computer Society Washington, DC, USA p p: 9 5 99   R. M. almuttari, R. Wankar, A. Negi, C.R. Rao   Intelligent  Replica Selection Strategy for Data Gri d    In proceeding of the  1 0 t h  International conference on Parallel an d  Distributed  Proceedin g  Techniques and Applications  IEEE Computer  Society W a shington, DC  WorldComp2010, GCA2010   LasVega s   USA  Volume3  pp: 9 5 100  July 1 2 1 5 201 0   Cisco Distributed Director  http://www.cisco.com/warp/public/cc/pd/cxsr/dd/index.shtm l  M   Sayal, Y. Breitbart, P. Scheuermann, R  Vingralek   Selection  algorithms for replicated web server s  In Proceeding of the  Workshop on Internet Server Performance,1998   E. Zegura, M. Ammar, Z. Fei, and S. Bhattacharjee   Applicatio n layer anycasting: a se r ver selection architecture and  use in a replicated web servic e  IEEE/ACM Transactions on  Networking, vol. 8, no. 4, pp. 45 5 226 466, Aug. 2000     Figur e  10   Data Grid and their associated network geometr y   
194 


Application of Chaotic Particle Swarm Optimization Algorithm in Chinese Documents Classification 763 Dekun Tan Qualitative Simulation Based on Ranked Hyperreals 767 Shusaku Tsumoto Association Action Rules and Action Paths Triggered by Meta-actions 772 Angelina A. Tzacheva and Zbigniew W. Ras Research and Prediction on Nonlinear Network Flow of Mobile Short Message Based on Neural Network 777 Nianhong Wan, Jiyi Wang, and Xuerong Wang Pattern Matching with Flexible Wildcards and Recurring Characters 782 Haiping Wang, Fei Xie, Xuegang Hu, Peipei Li, and Xindong Wu Supplier Selection Based on Rough Sets and Analytic Hierarchy Process 787 Lei Wang, Jun Ye, and Tianrui Li The Covering Upper Approximation by Subcovering 791 Shiping Wang, William Zhu, and Peiyong Zhu Stochastic Synchronization of Non-identical Genetic Networks with Time Delay 794 Zhengxia Wang and Guodong Liu An Extensible Workflow Modeling Model Based on Ontology 798 Zhenwu Wang Interval Type-2 Fuzzy PI Controllers: Why They are More Robust 802 Dongrui Wu and Woei Wan Tan Improved K-Modes Clustering Method Based on Chi-square Statistics 808 Runxiu Wu Decision Rule Acquisition Algorithm Based on Association-Characteristic Information Granular Computing 812 JianFeng Xu, Lan Liu, GuangZuo Zheng, and Yao Zhang Constructing a Fast Algorithm for Multi-label Classification with Support Vector Data Description 817 Jianhua Xu Knowledge Operations in Neighborhood System 822 Xibei Yang and Tsau Young Lin An Evaluation Method Based on Combinatorial Judgement Matrix 826 Jun Ye and Lei Wang Generating Algorithm of Approximate Decision Rules and its Applications 830 Wang Yun and Wu-Zhi Qiang Parameter Selection of Support Vector Regression Based on Particle Swarm Optimization 834 Hu Zhang, Min Wang, and Xin-han Huang T-type Pseudo-BCI Algebras and T-type Pseudo-BCI Filters 839 Xiaohong Zhang, Yinfeng Lu, and Xiaoyan Mao A Vehicle License Plate Recognition Method Based on Neural Network 845 Xing-Wang Zhang, Xian-gui Liu, and Jia Zhao Author Index 849 
xiii 


   C4.2 Open GL has excellent documentation that could help the developer learn the platform with ease C4.3 Developer has very little ex perience in working with Open GL platform  For our case study, alternative B i.e. Adobe Director was the most favorable alternative amongst all the three. It catered to the reusability criteria quite well and aimed at meeting most of the desired operational requirements for the system   6. CONCLUSION & FUTURE WORK  The main contribution of this paper is to develop an approach for evaluating performance scores in MultiCriteria decision making using an intelligent computational argumentation network. The evaluation process requires us to identify performance scores in multi criteria decision making which are not obtained objectively and quantify the same by providing a strong rationale. In this way, deeper analysis can be achieved in reducing the uncertainty problem involved in Multi Criteria decision paradigm. As a part of our future work we plan on conducting a large scale empirical analysis of the argumentation system to validate its effectiveness   REFERENCES  1  L  P Am g o u d  U sin g  A r g u men ts f o r mak i n g an d  ex p lain in g  decisions Artificial Intelligence 173 413-436, \(2009 2 A  Boch m a n   C ollectiv e A r g u men tatio n    Proceedings of the Workshop on Non-Monotonic Reasoning 2002 3 G  R Bu y u k o zk an  Ev alu a tio n o f sof tware d e v e lo p m en t  projects using a fuzzy multi-criteria decision approach Mathematics and Computers in Simualtion 77 464-475, \(2008 4 M T  Chen   F u zzy MCD M A p p r o ach t o Selec t Serv ice  Provider The IEEE International Conference on Fuzzy 2003 5 J. Con k li n  an d  M. Beg e m a n   gIBIS: A Hypertext Tool for Exploratory Policy Discussion Transactions on Office Information Systems 6\(4\: 303  331, \(1988 6 B P  Duarte D e v elo p in g a p r o jec ts ev alu a tio n sy ste m based on multiple attribute value theroy Computer Operations Research 33 1488-1504, \(2006 7 E G  Fo rm an  T h e  A n a l y t ic Hier a rch y P r o cess A n  Exposition OR CHRONICLE 1999 8 M. L ease  an d J L  L i v e l y  Using an Issue Based Hypertext System to Capture Software LifeCycle Process Hypermedia  2\(1\, pp. 34  45, \(1990 9  P e id e L i u   E valu a tio n Mo d e l o f Custo m e r Satis f a c tio n o f  B2CE Commerce Based on Combin ation of Linguistic Variables and Fuzzy Triangular Numbers Eight ACIS International Conference on Software Engin eering, Artificial Intelligence Networking and Parallel Distributed Computing, \(pp 450-454 2007  10  X  F L i u   M an ag e m en t o f an In tellig e n t A r g u m e n tatio n  Network for a Web-Based Collaborative Engineering Design Environment Proceedings of the 2007 IEEE International Symposium on Collaborative Technologies and Systems,\(CTS 2007\, Orlando, Florida May 21-25, 2007 11 X. F L i u   A n In ternet Ba se d In tellig e n t A r g u m e n tatio n  System for Collaborative Engineering Design Proceedings of the 2006 IEEE International Symposium on Collaborative Technologies and Systems pp. 318-325\. Las Vegas, Nevada 2006 12 T  M A sub jec tiv e assess m e n t o f altern ativ e m ission  architectures for the human exploration of Mars at NASA using multicriteria decision making Computer and Operations Research 1147-1164, \(June 2004 13 A  N Mo n ireh  F u zzy De cisio n Ma k i n g b a se d o n  Relationship Analysis between Criteria Annual Meeting of the North American Fuzzy Information Processing Society 2005 14 N  P a p a d ias HERMES Su p p o rti n g A r g u m e n tative  Discourse in Multi Agent Decision Making Proceedings of the 15th National Conference on Artifical Intelligence \(AAAI-98  pp. 827-832\dison, WI: AAAI/MIT Press,  \(1998a 15  E. B T riantaph y llo u   T h e Im p act o f  Ag g r e g atin g Ben e f i t  and Cost Criteria in Four MCDA Methods IEEE Transactions on Engineering Management, Vol 52, No 2 May 2005 16 S  H T s a u r T h e Ev alu a tio n o f airlin e se rv ice q u a lity b y  fuzzy MCDM Tourism Management 107-115, \(2002 1 T  D W a n g  Develo p in g a f u zz y  T O P S IS app r o ach  b a sed  on subjective weights and objective weights Expert Systems with Applications 8980-8985, \(2009 18 L  A  Zadeh  F u z z y Sets   Information and Control 8  338-353, \(1965  152 


                        





