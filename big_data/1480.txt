Linguistic Association Rules Shounak Roychowdhury Oracle Corporation 500 Oracle Parkway Redwood Shores CA 94404 USA Email sroychow@us.oracle.com Witold Pedrycz Department of Electrical  Computer Engineering University of Alberta Edmonton AB T6G 2G6 Canada Email pedrycz@ee.ualberta.ca Abstract The class of Apriori algorithms are popular association rule mining techniques However these algorithms are computationally expensive In this paper we propose a another 
novel approach to extract association rules The method represents an itemset information as a cell of a hypercube The hypercube encodes associations between the items of each transaction Apart from proposing the main result we also propose Linguistic Association Rules Linguistic Association Rules encode Fuzzy information and represent summarized rules 1 Introduction By mining huge data repositories we discover latent useful and previously unknown information Recently in this area researchers are extensively focusing on development of 
faster and new algorithms of data mining Since the advent of Agarwal et a1 ll\222s proposal the association rules have become one of the cornerstones representing the market-basket analysis in the data mining research We describe a scenario that explains the need for discovering association rules Many readers might note that many of today\222s online bookstores recommend their customers to buy different types of books in the related areas by tracking their clickstream patterns And association rules can 
be used to track these pattems In our scenario we assume that the customer has bought a few different books on related to data mining Next time the person visits that online bookstore she finds that the web page recommends her books on clustering Her earlier buying patterns were analyzed along with the buying pattems of other customers by mining association rules Recommendations like Data Mining Clustering these are instances of association rules As we note 
that an association rule encodes statistical information that implies 223Data Mining\224 is related to 223clustering\224 Similarly other topics related to data mining can be discovered And in this fashion any business store can use these new-fangled association rules to generate new profitability opportunities The items often co-occur together in a database transaction and the set of these items is known as an itemset An association rule denoted by X  Y where X and Yare itemsets Note that these rules 
are not logical implications or actual rules However their role is to encode information about associations within itemsets. In other words these rules indicate the strength of coupling of items within the itemsets for a given set of transactions From a statistical perspective it is observed that the association rules locate the groups of itemsets The co occurrence of any particular itemset intuitively suggest that there may be some form of association binding or there may exist a relationship that binds these items together The idea is 
not to discover what type of relationship does the transaction set encodes, but to figure out the relational association that inherently exists Since the original proposal of association rules by Agarwal et a1 I the fundamental reasoning to derive these rules has remained the same Only better performing algorithms have been proposed in recent years 2,3,5,9,101 In most of the algorithms the construction of association rules follows two distinct steps They are Extraction 
of frequent itemsets  To find out how many itemsets dominate or influence the data This phase is an expensive procedure and requires many I/O operations Generation of Association Rules  The rules are generated from the set of extracted frequent Itemsets This operation is less expensive and is fairly simple Researchers have proposed many various algorithms and they have improved the computational complexity of 0-7803-7@78-3/0lL$lO.W C IEEE Page 645 


the algorithms over the years More specifically a substantial amount of research has gone in developing algorithms that improve upon the computation factor of finding itemsets efficiently Computation of association rules requires identifying of a structure in the domain ofL{S}x where LIS is the lattice of a set Sand 31 is the domain of real numbers The substructure is shown in Figure 1 In the Figure 1 B C and BC are identified as these sets have higher frequency values that the threshold value of 10 states only one major result that this method has produced for a given dataset 2 Association Rules: Earlier Works In this section we will briefly review few algorithms that have been proposed in the literature 2.1 Apriori Algorithm Aganval and Srikant 2 proposed the idea of building rules from transactional databases. The idea was to mine all association rules from a given database with respect to a set of minima1 threshold measures These measures were called support eupp and confidence conj The support measured the frequency of itemsets throughout the database It is mainly a frequency based measure For instance if an itemset AB had a frequency of 20 in 50 transactions then we would compute Supp\(AB as 20150 Therefore we note that this is a frequency-based measurement. On the other hand we have Conf of a rule AB  C that is defined as AB 4 AC 2 Supp ABC Conf AB 3 C  SUP\(AB  Figure 1 B C and BC are identified as itemsets of interests as these sets have higher frequency values than that of the threshold value of 10 Note that each transaction is a part of the lattice The frequency of itemset cumulates during the database scan This particular observation has lead us to propose this model where computing of all the itemsets is performed in only one database pass Another aspect of our model lies in our belief that a typical transaction does not produce high frequency of large itemsets \(as we approach towards the top of the lattice Using this idea an additional control parameter is introduced apart from the traditional parameters like support and confidence This parameter facilitates the user to specify the maximum cardinality of the itemset that the association rule should focus and discard other itemsets that have cardinalities larger than desired cardinality This is a major step as it regulates the number of rules produced and can aid to manageability of the rules On conceptually comparing this work with other well known works like and DIC[lO and others, we find that we do not spend time to identify the candidate itemsets and thereby avoid overhead computation In the following sections we will briefly examine the other algorithms that have been proposed in the literature Section 3 explains our algorithm The following section These measures are still primarily used in most of the algorithms that extract association rules Briefly, apriori uses the downward closure property see 2 for details that any subset of frequent itemset is also frequent. During each iteration of this algorithm a set of candidate itemsets is generated and latter from this candidate set a frequent-set is finally computed Frequent set stores the valid itemset The implementation this algorithm uses a data structure called Hash Set to store the itemsets The method\222s computational expensiveness is one of the serious drawhacks. Moreover many association rules are generated which can be overwhelming The algorithm is Begin L  Frequent 1-itemsets for k  2 L  0 k C  Set of New Candidates for all transactions t E Database for all k-subsets s oft if s E C Lk  c E C I c.count  minsupp Set of all frequent itemset  U  L End The other methods in this class of algorithm are namely the SETM method 2 generalized association rules 4 and quantitative 0-7803-7@78-3/0U$l0.00 C IEEE Page 646 


2.2.1 Alternative methods Sarvare et al[S proposed the Partition method In this method the database is horizontally partitioned into non overlapping partitions Each partition is locally computed in the memory using tid-apriori method described in 2 by Agarwal and Srikant Global frequent itemsets should be locally frequent sets in each partition When compared with apriori the results were encouraging as the algorithm was able to reduce CPU and I/O overhead. For details refer to 5 On the other hand Dynamic Itemset Count DIC IO algorithm finds new itemsets using a few passes over the databases using the sampling technique that was originally proposed by Toivonen.[7 significantly improving the results of apriori algorithm They also provided with another measure of evaluation called conviction in lieu of confidence Silverstein et al 9 are have extended association rules to analysis of dependence rules This work is taking the market-basket analysis into more generic framework of implication rules 3 The Proposed Method This is the main section that explains how our algorithm in detail It also introduces a simple yet a novel approach to our understanding of association rules In the process we also propose transactional hypercube which is the cornerstone of our mining process 3.1 Definitions Definition 1  An attribList is defined as a set of attributes of a dataset. It is denoted by Ci I i\200 1  m  where Ci is i attribute and m denotes the cardinality of the attrib List The attribList should have at least one attribute For a table in database the attributes are columns Definition 2 An attribute can have binary value The attribute has value 1 if the attribute exits Otherwise the attribute value would be 0 Definition 3 A transactionstring is an attriblist and each attribute has a binary value ExamDle 1  O 1 1 0 1 is a transactionstring with c o c  1 c  1 c4 o c  1 We model each transaction of the dataset as transactionstring Definition 4 Assume that A is an attribList as defined in the Definition 1 We define a transactional hypercubeM such that k I M,=xA where k can take value from 1 to k m  Note that k encodes the degree of the transactional hypercube M  Definition 5 A cell is defined as occurrence of more than one attribute A cell encodes an association between two or more attributes Examde 2 Following the Example 1 a cell c,C is composed of C andC  Therefore in our case a cell represents an itemset C,C Definition 5 The cell value is computed by the following binary function f   1 ci=l cj=l 0 c,=o e 0 e c,=o Note that the above function is a logical AND function And we use this function to compute the values in the cell ExamDle 3 Following the Example 2 the cell value is c,c  0 Definition 6 Binary operation  of two transactional hypercubes of same dimension is possible And the addition is performed on a cell-to-cell basis Examde 4 Let M and M are two transactional hypercubes to be added to form ML We perform cell wise addition as mentioned below CiCj  CiCj  CiCj to get the following M M CB M  Similarly other operations like subtraction multiplication and division are possible However for our analysis we do not need those here 3.2 Transactional Hypecubes Itemsets are encoded in cell in a transactional hypercube for us Therefore there is no need for us to find candidate itemsets etc The type of approach most of the association rule algorithms define and use A cell in M encodes an itemset with two attributes For example we had  C,C  in the Example 2 Similarly to encode the three attributes C,C,C at a time we need a cell in M   C,C4C,C  four at time in M and so on till 0-7803-7@78-3/0U$l0.00 C IEEE Page 647 


we exhaust our m Initially this may look strange from a computational point of view as these dimensions keep on increasing but interestingly we have to many zeros that spare our computational life With a few more common c2 c3 c4  c2 c3 c4 C Figure 2 A transactional hypercube of dimension 2 Note that the cell C,C  C,C is 0 sense reduction our computational factor is taken care off quite smoothly When a transactional hypercube M is constructed it creates m2 cells Out of these cells the diagonal cells  CiCi that encode self-information is useless. Now using the property of associativity of the cells we can safely discard CjCi cells In a transactional hypercube of dimension higher than 2 it can be easily realized that the cells actually exist only a small number of valid Note that  y  m  We use sparse matrices to compute the cells Only these cells represent a transactional hypercube Addition of these transactional hypercubes is computationally fast and effective We are fortuitous because lattice is a unique structure and is embedded in these transactional hypercubes 3 3.3 The Algorithm The algorithm consists of two parts 1 Itemset computation and 2 Association rule generation 3.3.1 Iternset Computation Let the user select a user-defined itemset cardinality level This parameter is not the same as the support parameter Moreover this is a new parameter that is introduced in this algorithm. The parameter allows the user control the extraction of association rule for a given cardinality of the itemset All the algorithms defined in the literature continue till no larger candidate itemsets the can be found For instance if we have an attribList of 10 items In this case if the user wants to have only the set of rules that are generated from itemsets with 6 items it is very much possible to handle such situation Since computation of itemsets are independent with respect to itemset cardinality so there is no impact if need not derive the higher order itemset This significantly improves the computation time This is a significant change in our approach in the extraction few association rules and flexibility that it renders make this algorithm quite desirable. Furthermore if the user wants to use all itemset cardinality levels that to is possible Algorithm to compute itemsets Begin U user defined Itemset level  max of u would be n for k  2; k  U k create MPk  initialize cell value to 0 for all transactions t E Database Begin Fetch the binary transactionstring of the transaction t for k  2 k  U k Begin Compute M MPk  MPt  M End Normalize for k  2 k  U k Begin MPk  MPk I t 1 End accept if cell E MPt  cell.count  minsupp End Set of all frequent itemset  U MPk Once the itemsets are found, then for each itemset find association rule 3.4 I Association Rule Generation This part remains identical to the Apriori algorithm. We use the confidence measure Confof a rule  CiCjC  C  that is defined as 0-7803-7078-3/0l/$l0.00 C IEEE Page 648 


We know that an itemset C,C,C,C can generate CsCjC 9 Ci with 3 antecedents and one consequent And also we get rules with 2 antecedents and 2 consequents Consequently the rules have Confidence and support parameters for each of the rules c,cjc  c,,c,cjcs  c cicsc  cj cicj  c,c,,cic  c*cj c,cj  c,ci cicj  c,c 01 10101101 4 Computational Result The plots in Figure 3 shows that a relationship between execution time and support value Note that as the support increases the execution time decrease However large support values tend to eliminate most of the itemsets Therefore large support values are not very desirable At low support values much of itemsets are produced And 12345676910 support value  X 0.1 Figure 3 Series 1 denotes Apriori algorithm wherear Series 2 is our proposed method the execution time is definitely higher Our proposed algorithm produces series 2 whereas the series 1 provides the results of the Apriori algorithm In the future we would like to extend this technique and analyse the storage and temporal complexities We used all the dimensions in our example in order to be comparable with the Apriori algorithm 5 Linguistic Association Rule The above algorithm works for binary attributes In the next section we will use this algorithm in our study of linguistic association rules Researchers began to extend binary attributes to quantitative attributes Srikant et al proposed an algorithm to find association rules followed by partitioning the attribute domain by combing the adjacent partitions and then transforming the problem into a binary problem Strict partitioning of intervals lead to non intuitive restrictions To solve such problems researchers approached started mapping the intervals to binary attributes by performing a mapping between the intervals and the Boolean value Later researchers have extended the intervals to fuzzy sets and generated fuzzy association rules For details refer to 15,16,17 However we view that itemsets themselves can be arranged in such a way where the attributes in the universe of discourse can be arranged as fuzzy sets, as shown in Figure 4 Rubber Plastic Wood Figure 4 The universe of discourse of the transaction is represented by the three fuzzy sets The Cs represent the attributes that are made up of rubber plastic or wood Fuzzy association rule is defined on quantitative attributes but the linguistic association rule is defined on binary attributes From the above figure we can note that C,has a membership of 0.5 where C has membership value of 0.8 In the reality C might be rubber ball C might be a automobile type The degree of rubber content might be differentiating these products And so are the items are classified in Rubber, Plastic Wood The linguistic association rules derived using the above universe of discourse and the association rule given below for the binary attributes having confidence of 50 we have O 2 41  6 7 8 91 conf  0.5 and Rubber><l.O><Rubber><0.8><Plastic<l.O  Plastic><0.5><Wood><O.8><Wood><l.O Wood><l.O   confidence factor  50 This rule linguistic rule can be further summarized using a T T-conorm T*\(<Rubber><l .O><Rubber><0.8 Plastic4 O  Plastic><0.5>&T*\(<Wood><O.8><Wood><l.O Wood><l.O confidence factor  50 T<Rubber><l.O>&<Plastic<l.O  Plastic><0.5 Wood><l.O confidence factor  50 to Page 649 


Now we may note that for a given user choice level we can summarize information from various itemsets to find more condensed association rules at a higher granular level 6 Conclusions We have proposed a new method of computing itemsets The method employs construction of transactional hypercube We use the transactional hypercube of different dimensions simultaneously to accommodate the computation of itemsets of different cardinalities Therefore we only make one database pass while we compute all the itemsets We also introduced another parameter apart from the standard parameters like support and confidence that can allow users to restrict the generation of itemsets larger than certain cardinality References 1 2 3 4 5 6 7 8 R Agrawal T Imielinski, and Swami Mining association rules between sets of items in large databases In Proc of the ACM SIGMOD Conference on Management of Data, pages 207-2 16 Washington D.C May 1993 RAgrawal and R Srikant Fast Algorithms for Mining Association Rules In Proc of the 20th Int'l Conference on Very Large Databases, Santiago Chile, September 1994 R Agrawal H Mannila R Srikant H Toivonen and A I Verkamo Fast discovery of association rules In Advances in Knowledge Discovery and Data Mining U Fayyad G Piatetsky-Shapiro P Smyth R Uthurusamy Eds AAA1 Press Melo Park CA 1996 R Srikant and Agrawal Mining Generalized Association Rules In Proc of the 2 1 st Int'l Conference on Very Large Databases, Zurich Switzerland September 1995 A Savasere, E. Omiecinski, and S Navathe An efficient algorithm for mining association rules in large databases In 21st VLDB Conference 1995 R Srikant, and Agrawal R Mining quantitative association rules in large relational tables In Proceedings of the ACM SIGMOD Conference on Management of Data, Montreal, Canada, June 1996 H Toivonen Sampling large databases for association rules In 22nd VLDB Conference, 1996 J Han and Y Fu Discovery of multiple-level association rules from large databases In Proc of 9 10 11 12 13 14 the 21st Int'l Conference on Very Large Databases Zurich, Switzerland, September 1995 S Brin R Motwani and C Silverstein Beyond market baskets: Generalizing association rules to correlations SIGMOD Record \(ACM Special Interest Group on Management of Data 26\(2 265 1997 S Brin R Motwani, J D Ullman and S Tsur Dynamic itemset counting and implication rules for market basket data SIGMOD Record \(ACM Special Interest Group on Management of Data\26\(2 1997 J.-S Park M.-S Chen, and P S Yu Eflcient Parallel Data Mining for Association Rules Proceedings of the 4th Intern'l Conf. on Information and Knowledge Management, pages 3 1-36 Nov 29  Dec. 3 1995 H Toivonen M Klemettinen P Ronkainen K Hatonen and H Mannila Pruning andgrouping of discovered association rules In Workshop Notes of the ECML-95 Workshop on Statistics Machine Learning and Knowledge Discovery in Databases pp 47  52, Heraklion, Greece, April 1995 MLnet R Srikant and R Agrawal Mining Quantitative Association Rules In Proceedingsof the 1996ACM SIGMOD Intemational Conferenceon Management of Data, pages 1  12, Montreal, Canada June 1996 G Piatestsky-Shapiro Discovery analysis and presenfation of strong rules In G Piatestsky Shapiro editor, Knowledge Discovery in Databases AAAIIMIT Press 199 1 15 K.C.C Chan W.-H Au 1997\"Mining Fuzzy Association Rules," Proc of the Sixth Intemational Conference on Information and Knowledge Management F Golshani K Makki eds Las Vegas, NV, USA 209-21 5 16 K Hirota W Pedrycz \(1996\"Linguistic Data Mining And Fuzzy Modelling," Proc of the Fifth IEEE Intemational Conference on Fuzzy Systems New Orleans LA USA, IEEE, 1488-1492 17 A Maeda, H.Ashida Y Taniguchi Y Takahashi 1 995 Data Mining System Using Fuzzy Rule Induction Proceedings of 1995 IEEE International Conference on Fuzzy Systems. Yokohama Japan IEEE 45-46 18 S Roychowdhury Extraction of Association Rules using Transactional Hypercubes," submitted Conference on VLDB 2001. Rome 0-7803-7078-3/0U$l0.00 C IEEE Page 650 


in Btree storage structure respectively The schemas of the relations are STUDENT logname c8 regno int advisor int, entry int year c2 scheme c6 uccacode c6 status cl examno int school c4 HOUSEHOLD hserno int persno int region c10 npersons int typaccm c10 bedrooms int centheat c4 ncars int ownrent c5 mortgage c4, cost int loan int The machine used was a 33Mhz SPARC-ELC with Ingres files held on a 2GB Fujitsu SCSI running synchronously Both relations are based on actual data used within the University Rules in our rules set were derived from the system by 12 91 The rule sets for each relation contained 50 rules The experiment was done for several thousand queries on both relations which was based on many observations using different featured rules in order to analyse the time saving using SQO For example if the rules contain any index attribute or not From our tests the following results were observed a For the both relations if the original query is refuted by any rule, the saving on average was 99.15 If the answer to the original query was found by one of the matching rules alone the saving on average was 99.53 b If the rule contained an indexed attribute the savings on average were up to 86.40 for 221STUDENT\222 and 83.52 for 221HOUSEHOLD\222 c In queries for which no indexed condition could be found, the saving on average was 6.39 for the relation 221STUDENT\222 and 1.94 for the relation 221HOUSEHOLD\222 The poorer result from the 221HOUSEHOLD\222 data was due to the lower number of instances per block compared with the 221STUDENT\222 relation 5 Conclusions This paper has described a fast query transformation process in SQO which constructs a near optimum query taking into account all matching rules The results are encouraging and promise large savings even when the rule set is large since transformation time is in linear function of rule set cardinality We are now extending our current work in statistics and knowledge discovery to address the issue of complex queries such as join queries and maintaining rules set 13 181 Acknowledgement We would like to thank John Ford  Tony Lawson in Computer Science Dept and Ken Miller  other personnel in the ESRC Data Archive at University of Essex Thanks also to Prof Tahir Sisman at Yildiz University for all his support during this research References I S Chakravarthy J Grant and J Minker 223Logic-based approach to semantic query optimisation\224 ACM on Database Systems Vol 15 No 2, 1990, pp. 162-207 2 K.C Chan and A.K.C Wong 223A statistical test for extracting classificatory knowledge form databases\224 Knowledge Discovery in Databases Ed The AAA1 Press 1991 pp 107-123 3 G Graefe and D Dewitt 223The EXODUS optimiser generator\224 In Proc of the 1987 ACM-SIGMOD Conf on Management of Data May 1987 pp 160-1711 4 J Han Y Cai and N Cercone 223Data-driven discovery of quantitative rules in relational databases\224 IEEE on Knowledge and Data Eng Vol5 no 1 Feb 1993 pp 29-40 5 C Hsu and C.A Knoblock, \223Rule induction for semantic query optimisation\224 In Proceedings of the Eleventh International Conf on Machine Learning 1994  I F Imam R S Michalski and L. Kerschberg 223Discovering attribute dependence in database by integrating symbolic learning and statistical analysis tests\224 Knowledge Discovery in Databases Workshop 1993 pp 264-275 7 J J King 223QUIST A system for semantic query optimisation in relational databases\224 In Proceeding of the 7 th VLDB Conference, Sept. 1981 pp 510-517 8 B G T Lowden 223An Approach to Multikey Sequencing in an equiprobable keyterm retrieval situation\224 Proceedings of the Eighth Annual International ACM SIGIR Conference on Research and Development in Information Retrieval, 1985 pp 92-96 9 B G T Lowden J Robinson and K Y Lim 223A semantic query optimiser using automatic rule derivation\224, Proc Fifth Annual Workshop on Information Technologies and Systems Netherlands, 68-76 December 1995 pp 68-76 lo L F Mackert and G M Lohman 223R optimizer validation and performance evaluation for local queries\224, Proc ACM-SIGMOD 1986 pp 84-95  111 G.Piatetsky-Shapiro and C Matheus 223Measuring data dependencies in large databases\224 Knowledge Discovery in Databases Workshop 1993 pp 162-173 12 A Sayli and B G T Lowden 223The use of statistics in semantic query optimisation\224, Thirteenth European Meeting on Cybernetics and Systems Research Vienna April 1996 pp 991-996 325 


 131 M SCHKOLNICK and P TIBERIO 223Estimating the cost of updates in a relational database\224 ACM Trans Database Systems 10,2 June 1985 pp 163-179  141 S Shekhar J Srivastava and S Dutta 223A formal model of trade-off between optimisation and execution costs in semantic query optimization\224 Proceedings of the 14th VLDB Conference Los Angeles, California, 1988 pp 457-467 15 S Shekhar B Hamidzadeh and A Kohli Learning transformation rules for semantic query optimisation a data driven approach. IEEE, 1993 pp 949-964 16 S.T Shenoy and Z.M Ozsoyoglu 223Design and implementation of semantic query optimiser\224 IEEE Transactions on Knowledge and Data Engineering Vol 1 No 3 Sept. 1989 pp 344-361 17 M.D Siegel E Sciore and S Salveter 223A method for automatic rule derivation to support semantic query optimisation\224 ACM Transactions on Database Systems Vol 17 No 4 Dec 1992, pp 563-600  181 C Yu and W Sun 223Automatic knowledge acquisition and maintenance for semantic query optimisation\224 IEEE Trans Knowl. Data Eng 1 3 Sept. 1989, pp 362-375 326 


of the query expression without ha ving the global view of the in ten tion There is a big c hance that the enco ded pro cedure ma y not b e the b est w a y to compute the rules dep ending on the database instance F urthermore as w e understand it their prop osals require p oten tially large n um ber of name generation for relations and attributes The names that are needed are usually database dep enden t and th us p ossibly cannot b e gathered at query time An additional pro cess needs to b e completed to gather those v ariables b efore actual computations can b egin 5  9 Optimization Issues While it w as in tellectually c hallenging to dev elop a declarativ e expression for asso ciation rule mining from deductiv e databases there are sev eral op en issues with great promises for resolution In the w orst case the least xp oin tneedsto generate n 2 tuples in the rst pass alone when the database size is n  Theoretically  this can happ en only when eac h transaction in the database pro duces an in tersection no de and when they are not related b y subset-sup erset relationship In the second pass w e need to do n 4 computations and so on The question no w is can w e a v oid generating and p erhaps scanning some of these com binations as they will not lead to useful in tersections F or example the no de b 0 3 in gure 11 is redundan t A signican t dierence with apriori lik e systems is that our system generates all the item sets top do wn in the lattice without taking their candidacy as a large item set in to consideration Apriori on the other hand do es not generate an y no de if their subsets are not large item sets themselv es and thereb y prunes a large set of no des Optimization tec hniques that exploit this so called an ti-monotonicit y prop ert y of item set lattices similar to apriori could mak e all the dierence in our setup The k ey issue w ould b e ho ww e push the selection threshold minim um supp ort inside the top do wn computation of the no des in the lattice in our metho d F or the momen t and for the sak e of this discussion let us consider a higher supp ort threshold of 60 for the database T of gure 9 No w the l-en v elop e will b e the one sho wn in ligh ter dashed lines in gure 11 and the no des under this line will b e the large item sets Notice that no ww eha v eto discard no des ad 2 0 and d 0 2 to o This raises the question is it p ossible to utilize the supp ort and condence thresholds pro vided in the query and prune candidates for in tersection an y further Ideas similar to magic sets transformation 3  24 ma y be b orro w ed to address this issue The only problem is that pruning of an y no de dep ends on its supp ort coun t whic h ma y come at a later stage By then all no des ma y already ha v e b een computed and th us pushing selection conditions inside aggregate op erator ma y b ecome non-trivial Sp ecial data structures and indexes ma y also aid in dev eloping faster metho ds to compute ecien t interse ction joins that w e ha v e utilized in this pap er W e lea v e these questions as op en issues that should be tak en up in the future F ortunately though there has been a v ast b o dy of researc h in optimizing Datalog programs including recursiv e programs suc h as the one w e ha v e used in this pap er and hence the new questions and researc h 5 Recall that their prop osal requires one to express the mining problem to the system using sev eral queries and up date statemen ts that utilizes information ab out the database con ten ts to ac hiev e its functionalit y  c hallenges that this prop osal raises for declarativ e mining ma y exploit some of these adv ances Needless to emphasize a declarativ e metho d preferably a formal one is desirable b ecause once w e understand the functioning of the system w e will then be able to select appropriate pro cedures dep ending on the instances to compute the seman tics of the program whic hw e kno wis in tended once w e establish the equiv alence of declarativ e and pro cedural seman tics of the system F ortunately  w e ha v e n umerous pro cedural metho ds for computing asso ciation rules whic h complemen t eac h other in terms of sp eed and database instances In fact that is what declarativ e systems or declarativit y buy us  a c hoice for the most ecien t and accurate pro cessing p ossible 10 Conclusion Our primary goal for this pap er has b een to demonstrate that mining asso ciation rules from an y rst-order kno wledge base is p ossible in a declarativ ew a y  without help from an y sp ecial to ols or mac hinery  and that w e can no wha v ea v ery in tuitiv e and simple program to do so W eha v esho wn that it is indeed p ossible to mine declarativ ekno wledge b y exploiting the existing mac hinery supp orted b ycon temp orary inference engines in programming languages e.g Prolog or kno wledge base systems e.g RelationLog XSB LD L  CORAL All w e require is that the engine b e able to supp ort set v alued terms grouping aggregate functions and set relational op erators for comparison functionalities whic hmostofthesesystemscurren tly supp ort W e ha v e also demonstrated that our formalism is grounded on a more mathematical foundation with formal prop erties on whic h the seman tics of the R ULES system rely  W e ha v e also raised sev eral op en issues related to eciency and query optimization whic h should b e our next order of business As future researc h w e plan to dev elop optimization tec hniques for mining queries that require non-trivial lo ok ahead and pruning tec hniques in aggregate functions The dev elopmen ts presen ted here also ha v e other signican t implications F or example it is no w p ossible to compute c hi square rules 4 using the building blo c ks pro vided b y our system Declarativ e computation of c hi square rules to our kno wledge has nev er b een attempted for the man y pro cedural concepts the computation of c hi square metho d relies on In a separate w ork 2 w e sho w that the coun ting metho d prop osed in this pap er can be eectiv ely utilized to generate the exp ectations needed in order to compute suc h rules rather easily  These are some of the issues w e plan to address in the near future The motiv ation imp ortance and the need for in tegrating data mining tec hnology with relational databases has b een addressed in sev eral articles suc h as 12  13 They con vincingly argue that without suc h in tegration data mining tec hnology ma y not nd itself in a viable p osition in the y ears to come T o b e a successful and feasible to ol for the analysis of business data in relational databases suc htec hnology m ust b e made a v ailable as part of database engines and as part of its declarativ e query language Our prop osal for declarativ e mining bears merit since it sheds ligh t on ho w rst order databases can be mined in a declarativ e and pro cedure indep enden t w a y so that the optimization issues can b e delegated to the underlying database engine Once suc h argumen ts are accepted sev eral systems 9 


related issues b ecome prime candidates for immediate atten tion F or example traditionally database systems supp orted declarativ e querying without the necessit y to care ab out the pro ceduralit y of the queries In this pap er w eha v e actually demonstrated that asso ciation rule mining can b e view ed as a Datalog query  It is immediate that a direct mapping from the Datalog expressions presen ted in this pap er to SQL can be dev elop ed with no problem at all W e can then rely on ecien t database pro cessing of the query in an optimized fashion Hence w ecomeclose to the essence of the visions expressed b y the leading database researc hers and practioners 12  References 1 Rak esh Agra w al and Ramakrishnan Srik an t F ast algorithms for mining asso ciation rules in large databases In VLDB  pages 487{499 1994 2 Anon ymous A declarativ e metho d for mining c hisquare rules from deductiv e databases T ec hnical rep ort Departmen t of Computer Science Anon ymous Univ ersit y USA F ebruary 2001 3 C Beeri and R Ramakrishnan On the po w er of magic In Pr o c e e dings of the 6th A CM Symp osium on Principles of Datab ase Systems  pages 269{283 1987 4 Sergey Brin Ra jeev Mot w ani and Craig Silv erstein Bey ond mark et bask ets Generalizing asso ciation rules to correlations In Pr o c A CM SIGMOD  pages 265 276 1997 5 D Chimen ti et al The LD L system protot yp e IEEE Journal on Data and Know le dge Engine ering  2\(1 90 1990 6 Jia w ei Han Jian P ei and Yiw en Yin Mining frequen t patterns without candidate generation In Pr o c A CM SIGMOD  pages 1{12 2000 7 Marcel Holsheimer Martin L Kersten Heikki Mannila and Hann uT oiv onen A p ersp ectiv e on databases and data mining In Pr o c of the sixth A CM SIGKDD Intl Conf  pages 150{155 Mon treal Queb ec 1995 8 Flip Korn Alexandros Labrinidis Y annis Kotidis and Christos F aloutsos Ratio rules A new paradigm for fast quan tiable data mining In Pr o c of 24th VLDB  pages 582{593 1998 9 Brian Len t Arun N Sw ami and Jennifer Widom Clustering asso ciation rules In Pr o c of the 3th ICDE  pages 220{231 1997 10 Mengc hi Liu Relationlog At yp ed extension to datalog with sets and tuples In John Llo yd editor Pr oc e e dings of the 12th International L o gic Pr o gr amming Symp osium  pages 83{97 P ortland Oregon Decem ber 1995 MIT Press 11 Rosa Meo Giusepp e Psaila and Stefano Ceri An extension to SQL for mining asso ciation rules Data Mining and Know le dge Disc overy  2\(2 1998 12 Amir Netz Sura jit Chaudh uri Je Bernhardt and Usama M F a yy ad In tegration of data mining with database tec hnology  In Pr o c e e dings of 26th VLDB  pages 719{722 2000 13 Amir Netz Sura jit Chaudh uri Usama M F a yy ad and Je Bernhardt In tegrating data mining with SQL databases In IEEE ICDE  2001 14 Ra ymond T Ng Laks V S Lakshmanan Jia w ei Han and Alex P ang Exploratory mining and pruning optimizations of constrained asso ciation rules In Pr o c A CM SIGMOD  pages 13{24 1998 15 Jong So o P ark Ming-Sy an Chen and Philip S Y u An eectiv e hash based algorithm for mining asso ciation rules In Pr o c A CM SIGMOD  pages 175{186 1995 16 Karthic k Ra jamani Alan Co x Bala Iy er and A tul Chadha Ecien t mining for asso ciation rules with relational database systems In Pr o c e e dings of the International Datab ase Engine ering and Applic ations Symp osium  pages 148{155 1999 17 R Ramakrishnan D Sriv asta v a and S Sudarshan CORAL  Con trol Relations and Logic In Pr o c of 18th VLDB Confer enc e  pages 238{250 1992 18 Konstan tinos F Sagonas T errance Swift and Da vid Scott W arren XSB as an ecien t deductiv e database engine In Pr o c of the A CM SIGMOD Intl Conf  pages 442{453 1994 19 Sunita Sara w agi Shib y Thomas and Rak esh Agra w al In tegrating mining with relational database systems Alternativ es and implications In Pr o c A CM SIGMOD  pages 343{354 1998 20 Ashok a Sa v asere Edw ard Omiecinski and Shamk an tB Nav athe An ecien t algorithm for mining asso ciation rules in large databases In Pr o c of 21th VLDB  pages 432{444 1995 21 Pradeep Sheno y  Ja y an t R Haritsa S Sudarshan Gaura v Bhalotia Ma y ank Ba w a and Dev a vrat Shah T urb o-c harging v ertical mining of large databases In A CM SIGMOD  pages 22{33 2000 22 Abraham Silb ersc hatz Henry F Korth and S Sudarshan Datab ase System Conc epts  McGra w-Hill third edition 1996 23 Shib y Thomas and Sunita Sara w agi Mining generalized asso ciation rules and sequen tial patterns using SQL queries In KDD  pages 344{348 1998 24 J D Ullman Principles of Datab ase and Know le dgeb ase Systems Part I II  Computer Science Press 1988 25 Mohammed J Zaki Generating non-redundan t association rules In Pr o c of the 6th A CM SIGKDD Intl Conf  Boston MA August 2000 1 0 


OM OM 006 OD8 01 012 014 016 018 02 022 False alarm demity Figure 9 Percentage of tracks lost within 200 seconds using three-scan assignment with PD  0.9 TI  O.ls Figure 11 T2  1.9s and T  Is ij  20 and 0  0.1 24 1 22  20  E fls 0  8l 16 0 n 14  12  0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 T1/12 PD Average track life of three-scan assignment with PD varying TI  0-ls T2  1.9s T  Is X  0.02 ij LO and   0.1 mareuvenng index Figure 12 Percentage of lost tracks of 4-D assipment in 200 seconds with maneuvering index varying X  0.01 Ti  0.1 T2  1.9s and T  IS PD  0.98 Figure 10 Percentage of lost tracks of 4-D assignment in 200 SeoDllCls with TI and T2 varying PD  0.98 X  0.02 q 20 and 0  0.1 4-1607 


Figure 13 Average gate size for Kalman filter Figure is relative as compared to nq and curves are parametrized by ij/r with unit-time between each pair of samples 1.2 Iy I 1.1 0.5 I A CRLB for he unifm samiina I  0.4 0.35 d 3 03 i7 3 0.25 0 0.M 0.04 0.06 008 0.1 0.12 0.14 0.16 0.18 0.2 False A!am DemW V I    Figure 14 CramerRao Lower Boundfor Mean Square Error of uniform and nonuniform sampling schemes with Ti  O.ls T2  1.9s T  IS PD  0.9 ij  5 and U  0.25 1 unifon sampling r-ls ked i non-uniform sampling loge inlewi I ti non-uniform sampling shod interva I 0.9 0.8 I Figure 15 MSE comparison of three-scan assignment with Ti and T2 varying I'D  1 X  0.01 ij  20 and U  0.1 4-1608 


Plenary Panel Session 30 XML Databases   Moderator: Michael Carey, IBM Almaden Research Center USA Panelists Adam Bosworth, Microsoft Corporation USA David De Witt University of Wisconsin-Madison, USA Alon Levy University of Washington USA Bruce Lindsay IBM Almaden Research Center USA Jennifer Widom Stanford University USA Demo Session 1 Web Query Optimizer  661 V Zadorozhny L Bright L Raschid T Urhan and M Vidal ReQueSS: Relational Querying of Semi-structured Data  664 R Sunderraman The IDEAL Approach to Internet-Based Negotiation for E-Business  666 J Hammer C Huang Y Huang C Pluempitiwiriyawej M Lee H Li L Wang Y Liu and S Su READY A High Performance Event Notification Service  668 R Gruber B Krishnamurthy, and E Panagos A Multimedia Information Server with Mixed Workload Scheduling  670 G Nerjes DISIMA An Object-Oriented Approach to Developing an Image Database System  672 V Oria T Ozsu P Iglinski B Xu and L Cheng Demo Session 2 The Collaboration Management Infrastructure  677 H Schuster D Baker A Cichocki D Georgakopoulos and M Rusinkiewicz Assisting the Integration of Taxonomic Data The LITCHI Toolkit  679 I Sutherland J Robinson S Brandt A Jones S Embury W Gray R White and F Bisby TheaterLoc: Using Information Integration Technology to Rapidly Build Virtual Applications  681 G. Barish Y.4 Chen D Dipasquo, C Knoblock S Minton I Muslea and C Shahabi Lineage Tracing in a Data Warehousing System  683 Y Cui and J Widom xiii 


The Mentor-Lite Prototype A Light-Weight Workflow Management System  685 J Weissenfels M Gillmann 0 Roth, G Shegalov and W Wonner Location Prediction and Queries for Tracking Moving Objects  687 0 Wolfson B Xu and S Chamberlain Semiorder Database for Complex Activity Recognition in Multi-Sensory Environments  689 S Bhonsle A Gupta S Santini and R Jain Tutorial 1 Web Information Retrieval  693 M Henzinger Tutorial 2 Mobile and Wireless Database Access for Pervasive Computing  694 P Chrysanthis and E Pitoura Tutorial 3 Data Mining with Decision Trees  696 J Gehrke Tutorial 4 Directories Managing Data for Networked Applications  697 D Srivastava Tutorial 5 Indexing High-Dimensional Spaces Database Support for Next Decade\222s Applications  698 S Berchtold and D Keim xiv 


 T5.I2.D100K T10.I4.D100K T15.I4.D100K T10.I6.D400K T10.I6.D800K T10.I6.D1600K Optimizations across Databases 5 0 5 10 15 20 25 30 35 40 45 Improvement COMP TREE COMP-TREE 1 2 4 8 1 2 4 8 1 2 4 8 2 4 8 2 4 8 1 2 4 8 Processors Databases Figure 5 Effect of Computation and Hash Tree Balancing good as the COMP optimization The reason that the hash tree balancing is not suf\336cient to offset inherent load imbalance in the candidate generation in this case The most effective approach is to apply both optimizations at the same time COMP-TREE The combined effect is suf\336cient to push the improvements in the 40 range in the multiple-processor case On 1 processor only hash tree balancing is bene\336cial since computation balancing only adds extra cost 5.4 Short-circuited Subset Checking Figure 6 shows the improvement due to the short-circuited subset checking optimization with respect to the unoptimized version The unoptimized version is the Apriori algorithm due to Agrawal et al 5 The results are presented for dif ferent number of processors across dif ferent databases The results indicate that while there is some improvement for databases with small transaction sizes the optimization is most effective when the transaction size is large In this case we get improvements of around 25 r the unoptimized version To gain further insight into this optimization consider 336gure 7 It shows the percentage improvement obtained per iteration on applying this optimization on the T20.I6.D100K database It shows results only for the uni-processor case r similar results were obtained on more processors We observe that as the iteration k increases there is more opportunity for shortcircuiting the subset checking and we get increasing bene\336ts of up to 60 The improvements start to fall off t the high end where the number of candidates becomes small resulting in a small hash tree and less opportunity for short-circuiting It becomes clear that is an extremely effective 15 Proceedings of the 1996 ACM/IEEE Conference on Supercomputing \(SC\22296 0-89791-854-1/96 $ 10.00 ACM 


 T5.I2.D100K T10.I6.D800K T15.I4.D100K T20.I6.D100K procs across Databases 0 5 10 15 20 25 Improvement 1 2 4 8 Figure 6 Effect of Short-circuited Subset Checking 23456789101112 Iterations 0 10 20 30 40 50 60 improvement T20.I6.D100K Figure 7  Improvement per Iteration  proc   16 Proceedings of the 1996 ACM/IEEE Conference on Supercomputing \(SC\22296 0-89791-854-1/96 $ 10.00 ACM 


optimization for larger transaction sizes and in cases where there are large number of candidate k itemsets 6 Conclusions In this paper e presented a parallel implementation of the Apriori algorithm on the SGI Power Challenge shared memory multi-processor We also discussed a set of optimizations which include optimized join and pruning computation balancing for candidate generation hash tree balancing and short-circuited subset checking We then presented experimental results on each of these Improvements of more than 40 were obtained for the computation and hash tree balancing The short-circuiting optimization was found to be extremely effective for databases with large transaction sizes Finally we reported the parallel performance of the algorithm While we d good speed-up we observed a need for parallel I/O techniques for further performance gains References  R Agra wal T  Imielinski and A Swami Database mining A performance perspecti v e  I n IEEE Trans on Knowledge and Data Engg  pages 5\(6 1993  R Agra wal T  Imielinski and A Swami Mining association rules between sets of items in lar ge databases In Proc M SIGMOD Intl Conf Management of Data  May 1993  R Agra wal H Mannila R Srikant H T o i v onen and A I V erkamo F ast disco v ery of association rules In U F et al editor Advances in Knowledge Discovery and Data Mining  MIT Press 1996  R Agra wal and J Shafer  P arallel mining of association rules design implementation and e xperience Technical Report RJ10004 IBM Almaden Research Center San Jose CA 95120 Jan 1996  R Agra wal and R Srikant F ast algorithms for mining association rules In Proc 20th VLDB Conf  Sept 1994  M Cierniak W  Li and M J Zaki Loop scheduling for heterogeneity  I n 4th IEEE Intl Symposium on High-Performance Distributed Computing also as URCS-TR 540 CS Dept Univ f Rochester  Aug 1995  M Holsheimer  M  K ersten H Mannila and H T o i v onen A perspecti v e on databases and data mining In 1st Intl Conf Knowledge Discovery and Data Mining  Aug 1995  M Houtsma and A Swami Set-oriented mining of association rules In RJ 9567  IBM Almaden Oct 1993  H Mannila H T o i v onen and I V erkamo Ef 336cient algorithms for disco v ering association rules In AAAI Wkshp Knowledge Discovery in Databases  July 1994  J S P ark M Chen and P  S Y u  A n e f fecti v e hash based algorithm for mining association rules In Proc M SIGMOD Intl Conf Management of Data  May 1995 17 Proceedings of the 1996 ACM/IEEE Conference on Supercomputing \(SC\22296 0-89791-854-1/96 $ 10.00 ACM 


 J S P ark M Chen and P  S Y u  E f 336cient parallel data mining for association rules T echnical Report RC20156 IBM T J Watson Research Center Aug 1995  G Piatetsk y-Shapiro Disco v ery  presentation and analysis of strong rules In G P S et al editor  KDD  AAAI Press 1991  A Sa v asere E Omiecinski and S Na v athe An ef 336cient algorithm for mining association rules in large databases In Proc 21st VLDB Conf  1995  M J Zaki M Ogihara S P arthasarathy  and W  Li P arallel data mining for association rules on shared-memory multi-processors Technical Report 618 Department of Computer Science University of Rochester 618 1996 18 Proceedings of the 1996 ACM/IEEE Conference on Supercomputing \(SC\22296 0-89791-854-1/96 $ 10.00 ACM 


