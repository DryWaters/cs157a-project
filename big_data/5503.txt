An intruder detection approach based on infrequent rating pattern mining Jos  eMar  a Luna Aurora Ram  rez Jos  eRa  ul Romero and Sebasti  an Ventura Dept Of Computer Science and Numerical Analysis University of C  ordoba Abstract This work presents a novel proposal for incremental intruder detection in collaborative recommender systems We explore the use of rare association rule mining to reveal the existence of a suspected raid of attackers that would alter the normal behaviour of a rating-based system In this position paper we have extended our previous G3PARM algorithm which has already proven to serve as a solid method for extracting frequent association rules G3PARM is an evolutionary algorithm that uses G3P  Grammar Guided Genetic Programming  which provides expressiveness and exibility enough to adapt and apply the base context-free grammar to each speci“c problem or domain We fully outline moreover the complete exploration and detection model which includes some further post-analysis steps Finally as a proof of concept we validate the scalability ef“ciency and accuracy of our proposal showing the results obtained when different malicious intruders want to attack an on line recommender system I I NTRODUCTION In our daily life it is customary to take our decisions based on the opinions and suggestions of others whose tastes are apparently similar to ours So with the advance of virtual communities and collaborative recommender systems CRS to share views and interests among users has become a routine activity and it is usual for users to act on the basis of what they hear from others e.g when purchasing goods booking a ight etc Thus CRS use historical data on user preferences to recommend items A common way to generate these recommendations is to analyze how other users behave and predict the anity for items that were not rated yet by the target user An user-based collaborative recommendation algorithm attends to such predictions which are usually calculated based on the similarity between neighbors to the target user Nevertheless these systems are not free of problems and prediction models have to face the manipulation and fraudulent use of the system by malicious parties aka attackers which may inject fake user proles in order to inuence the rating of certain items that want to be promoted or demoted Although most systems apply different techniques to prematurely detect attackers and restrict their registration it is really difcult to anticipate the attackers behaviour once they have successfully joined the application In consequence most current proposJ.M Luna  Student Member IEEE  A Ram  rez J.R Romero  Member IEEE  and S Ventura  Senior Member IEEE  are with the Dept of Computer Science and Numerical Analysis University of C  ordoba Rabanales Campus 14071 C  ordoba Spain Email  i32luarj i72raqua jrromero sventura  uco.es als 3 4 are actually based on the analysis of the system data sources and existing user proles A prole-injection attack is a common way to distort recommendations Basically it consists in adding several new users to the system using different ctitious identities Each of these users will rate a target item as well as other random items that other regular users belonging to the group of interest would also rate In this way real intentions are concealed and it makes the attack more difcult to trace There are different types of prole-injection attacks depending on whether the target item should be promoted push attack or demoted nuke attack Intrusion detection does not only concern rating-based systems Indeed there exists many other application domains for which anomaly detection i s a n important issue too Examples include network intrusion frauds e.g banking assurance companies etc medical anomalies industrial damages sensor networks text processing and so on In general anomaly detection searches for patterns in data that do not follow the behaviour expected Therefore different approaches for intrusion detection have been proposed e.g neural networks statistical techniques etc data mining DM being a widely used process to explore and extract comprehensible and useful knowledge from these large data sources More precisely association rule mining ARM is a very well-known method for discovering interesting patterns and close relations between items in datasets An association rule  is an e xpression of the form     where  and  are sets of items and        being the antecedent and  the consequent So an association rule should be interpreted as follows if all items in  exist in a transaction then it is highly probable that all items in  are also in the transaction and  and  should not have any common items Rare association rule mining RARM is a recent trend in ARM that on the contrary searches for non-frequent unusual or exceptional association rules by mining rare or infrequent itemsets i.e itemsets that do not occur frequently in the data RARM deserves our special attention since searching for non-ordinary items can help to discover potential intruders throughout the dataset maintained by the rating system Many techniques have been already proposed to mine association rules Apriori 9 and FP-Gro wth 10 being the most referenced classical algorithms Furthermore evolutionary proposals are also remarkable and their results usually go beyond the performance achieved by the former e.g in terms of scalability Precisely G3PARM Grammar Guided Genetic 682 978-14 2 44 81 3 6-1/10/$26  00 c  2010 I EEE 


Programming for Association Rule Mining is a n o v e l evolutionary approach in this eld Its behaviour is based on a context-free grammar CFG that permits us to adapt the rules syntax to each specic application domain G3PARM makes use of a xed size auxiliary population comprised of those individuals each individual represents an association rule that exceed a certain support and condence threshold On the other hand most current RARM proposals are based on variations of these classical approaches Apriori-Inverse  ARIMA 13 or Rarity 14 are some rele v ant e xamples In this position paper we explore the use of RARM to detect and extract infrequent rating patterns from CRS-specic data sources To do this we have developed an extension of the G3PARM specially devoted to the discovery of infrequent or rare rules However this is just a rst but core step in the entire process as explained later Note that it is necessary to analyze the rules mined too and subsequently to apply this knowledge to the dataset evolved over time as it can contain malicious ratings from an attacker This paper is structured as follows Section II presents the whole intrusion detection process and describes the different steps followed to x the dataset after a potential malicious attack until intruders are completely removed from the system Then Section III details the experimentation including a description of the dataset used the experimental set-up and how the approach is applied to the case study The results obtained are also presented in this section Finally some concluding remarks and future work are highlighted in Section IV II T HE SUSPICIOUS ATTACKER DETECTION PROCESS In this section we outline an overview of the intruder detection process and explore with an example each step required to the process be successfully completed including the mining of rare rules the analysis of rating patterns and the subsequent detection of suspicious attackers A An overview of the approach The process for detecting suspicious attackers in user-based recommendation systems implies several different steps as shown in Figure 1 Originally the ratings dataset only contains uncorrupted user preferences per item i.e votes and scores casted in the course of time by users concerning to a given subject of matter movies books music or whatever Table I extracted from sho w s a n e xample of ratings using some generic kind of items where each cell represents the specic score given by the user to an item Scores are bound from 1 i.e the user dislikes the item to 5 i.e the user likes the item For the sake of clarity this dataset will be used in this section to facilitate comprehension of the approach A rst step to perform over the uncorrupted dataset is to mine those association rules that are comprised by infrequent combinations of ratings A modication of the G3PARM algorithm is used with this purpose as it returns the set of best individuals i.e most infrequent association rules obtained from the nal generation after the evolutionary process Each attribute of the rule is encoded as an item with a quantitative  Dataset Dataset Rare association rules Attack injection G3PARM modified Analysis of the rating patterns List of attackers A1           C1 A2           C2  An           Cn   Dataset Dataset Attackers Fig 1 Overview of the intruder detection process TABLE I E XAMPLE OF A PUSH ATTACK FAVORING THE TARGET ITEM Item6 Item1 Item2 Item3 Item4 Item5 Item6 User1 5233 User22441 User3 313 12 User4 4231 1 User5 332131 User6 3 1 2 User7 4 3 3 3 2 User8 5 1 5 1 Attacker1 5 3 2 5 Attacker2 5 1 4 2 5 Attacker3 5 2 2 2 5 value that represents the rating of the item the support of the attribute being the number of user proles that satisfy the attribute rating With the elapse of time the uncorrupted dataset evolves and new suspicious user proles are included attack injection containing malicious ratings that may alter the normal behaviour of the recommendation system For example in Table I three new attacker proles  Attacker1-3  have been injected to promote Item6  Then using the rating rules previously obtained from the uncorrupted dataset new recommendations must be analyzed in this corrupted dataset so we determinate whether signicant suspicious changes were made 20 1 0 1 0 th I nt er nati o na lCo nf ere n ce o n I nt ell i ge nt S ys t e m sDes i g n and App l i c ati o n s 68 3 


in rating patterns with time More specically the support variation of the attributes comprised by the infrequent rules obtained in the previous step must be analyzed Hence if there is a support variation greater than a minimum threshold then the item referred could probably be considered as attacked Finally having these suspicious items the list of attackers is obtained and their scores removed from the dataset As a result a new uncorrupted dataset is obtained so the detection process cycle begins again B D i s coverin g infrequent ratin g pattern s The G3PARM algorithm see Figure 2 for a general description is a very efcient algorithm in mining knowledge and allows us to obtain feasible solutions without requiring large amounts of memory Precisely this is a major advantage over classical proposals which are usually restricted in terms of scalability and performance G3PARM is an evolutionary algorithm that makes use of G3P to dene individuals and allows us to obtain association rules from datasets with different types of attributes i.e both categorical and numerical attributes G3P is an extension of Genetic Programming GP where each individual is a derivation tree that generates and represents a solution using the language dened by a CFG It permits to adapt the rules mined to each specic scope of application In fact in case of intruder detection we will only consider continuous attributes since they represent the score per rating Figure 3 shows the CFG modied to only deal with quantitative attributes  Fig 2 General description of the G3PARM algorithm Fig 3 Context-Free Grammar used by G3PARM in intruder detection The evaluation of each individual is performed by calculating the value returned by the tness function Unlike G3PARM this variation of the algorithm searches for the minimum support for each rule this measure being dened as the ratio of records that contain both the antecedent and the consequent to the total number of records in the dataset Instead our proposal denes a new tness function see Equation 1 to be maximized where  is the support value of the association rule and  states for the support threshold predetermined by the conguration parameters Notice that G3PARM uses two genetic operators i.e crossover and mutation to generate new individuals in each generation of the evolutionary process The crossover obtains offsprings by swapping the derivation subtrees of two parents from two compatible selected nodes On the other hand the mutation operator selects a node from a rule and acts according to the node type If the node is a non-terminal node a new derivation is performed from this node if the node is a terminal node the genetic operator changes the value of this node at random 012\015         if     otherwise 1 Once the new individuals are obtained by applying the crossover and mutation operators the algorithm updates an auxiliary population by ranking individuals according to the support measure and those that exceed a certain threshold for this measure and condence measure are included in the auxiliary population In order to update the auxiliary population two thresholds are applied to the support measure a minimum and a maximum threshold Only those individuals that have a condence value greater than a minimum condence threshold and a support value greater than the minimum support threshold but less than the maximum are included in the auxiliary population Unlike the original G3PARM algorithm this new proposal performs an important postprocessing step once the algorithm execution is completely nished This step takes the resulting individuals from the auxiliary population and simplies rules that contain redundant attributes or inconsistent expressions e.g the rule           might be simplied in the rule       Furthermore this postprocessing also applies an order for the attributes that comprise each rule e.g the rule           would be ordered as            C  Ana lys i s of the ratin g pattern s For each rare rule mined by the evolutionary algorithm using the original uncorrupted rating dataset the relative support    of every attribute should be calculated Later once the dataset has evolved comprising suspicious ratings these calculations should be computed again so each attribute will have a new support value    As a result the increment of this relative support measure      is obtained for each attribute and serves as an input to calculate   dened by Equation 2 i.e the probability that an attribute or item is attacked Thus those values of   greater than any other value and exceeding a minimum threshold should be considered as a potential attack to this item 68 4 20 1 0 1 0 t h I nt er nati o na lCo nf ere n ce o n I nt ell i ge nt S ys t e m sDes i g nan dA pp l i c ati o n s 


                          2 where   is the relative support obtained by dividing the absolute support obtained by counting votes of the original dataset by the number of instances of the corrupted dataset i.e none of the new instances of the dataset the attack injection satises the attribute of the rule Similarly   represents the relative support obtained if all the instances of the attack injection are satised by the attribute of the rule For example based on Table I the following infrequent combinations of ratings are obtained and expressed in terms of rare association rules Ru l e1         012        Ru l e2                012 Then we rst calculate absolute and relative supports for each attribute that appears in those infrequent rules mined from the uncorrupted dataset i.e counting votes of U s er1-8  Ru l e1  absolute 015 1 1 6  relative 015 0.16 0.14 1.00  Ru l e2  absolute 015 1 2 4  relative 015 0.20 0.33 0.66  After a potential malicious attack this measure is calculated once again but including the users Attacker1-3  too Ru l e1  absolute 015 1 1 6  relative 015 0.10 0.10 0.66  Ru l e2  absolute 015 2 2 4  relative 015 0.25 0.25 0.57  From these rules and measures the values of               and   can be calculated as shown in Table II TABLE II R ESULTING MEASURE VALUES FROM THE EXAMPLE Item1 Item2 Item3 Item4 Item5 Item6   0.16 0.14 0.20 0.66 0.33 1.00   0.10 0.10 0.25 0.57 0.25 0.66     0.06 0.04 0.05 0.09 0.08 0.33   0.11 0.10 0.12 0.44 0.22 0.66   0.44 0.40 0.50 0.77 0.55 1.00     0.28 0.26 0.30 0.22 0.33 0.33   0.23 0.15 0.16 0.40 0.24 1.00 Notice that according to the previous results Item6 is the item that achieves the highest value of   i.e a probability of 100 is properly obtained by the item under attack and extremely difers from the other items The attribute Item4 has the second highest probability value According to the original scores of Item4  once the user Attacker3 votes as 3 in favor   is raised to 0.40 Whether this value is considered as a potential attack or not depends on a predetermined threshold for the value of   that should be experimentally dened depending on the dataset-specic characteristics   indicates whether an attribute is being potentially attacked or not However different factors may meddle in this value so a high value of   does not always imply that the item of interest was intentionally promoted by malicious attackers Therefore it is also important to analyze how effective the potential attack is in the dataset With this purpose we dene the inuence measure 015\012  as indicated in Equation 3 where   and  012 are the minimum and maximum values of the score rating scale allowed by the recommendation system respectively and   is the increment of the average score for an item before and after the potential attack 015\012       012    3 Following the Mobasher’s example Table III shows the average rating      for each attribute using the original uncorrupted dataset and the average rating      for each attribute using the dataset evolved Finally   shows the increment that the average score has undergone with time Notice that negative values imply that the average score of a given item has decreased i.e the item has been demoted whereas positive values imply an increase i.e the item has been promoted TABLE III A NALYSIS OF THE AVERAGE RATINGS Item1 Item2 Item3 Item4 Item5 Item6    3.50 2.71 3.00 1.66 3.00 1.33    4.00 2.44 3.00 1.77 2.75 2.55   0.50 0.27 0.00 0.05 0.25 1.22 With these values Table IV gives the resulting attack inuence on each attribute or item As can be noted Item6 obtains the highest inuence value 0.30 as well as the highest attack probability        In consequence we can assure that this item was promoted despite its inuence in the entire dataset is too limited noticed that only three different attack proles were injected In any case the value of 015\012 obtained for Item6 is signicantly greater than the inuence values obtained by the rest of attributes Remember that according to   in Table II Item4 would have been potentially attacked too However the inuence value claries this point since such an attack would not have any inuence on the dataset i.e no other item except Item6 was signicantly inuenced by the malicious users Attacker1-3  TABLE IV 012\015 MEASURE VALUES FOR EACH ATTRIBUTE Item1 Item2 Item3 Item4 Item5 Item6 0.029 0.010 0.000 0.005 0.005 0.300 D  Extraction of the intruder sl i s t The nal step in the attacker detection process consists in nding out which users should actually be considered as intruders A preliminary list of attackers can be experimentally built by analyzing both the attack probability    and the injection inuence 015\012  as previously done in Section II-C So for each item potentially attacked we need to carefully study which new user prole satises the item Then those 20 1 0 1 0 t h I nt er nati o na lCo nf ere n ce o n I nt ell i ge nt S ys t e m sDes i g nan dA pp l i c ati o n s 68 5 


proles that only appear in the potentially corrupted dataset and stand out from others because of the values of both measures will be considered as malicious intruders Once these proles are completely removed from the dataset a new iteration of the process would start with the elapse of time In the Mobasher’s example Item6 was clearly identied as an attacker Thus according to Table I we just need to know which users voted for Item6 with a high score if a push attack is considered Attacker1-3 are the malicious users that interfere in the normal behaviour of the user-based recomendation system III E XPERIMENTATION AND RESULTS Several different experiments have been carried out to detect potential attacks over an user-based recommendation system With this purpose in mind the aforementioned variation of the G3PARM algorithm was executed using a specic rating-based dataset Moreover the whole approach proposed in Section II has been followed All the experiments used in this study have been performed on an Intel Core i7 machine with 12Gb main memory and running CentOS 5.4 The algorithm proposed has been written in Java using JCLEC a J a v a library for evolutionary computation In the following sections we describe the dataset used detail the experimental set-up and introduce a brief description of the attack proles injected for the experimentation Finally we show the results obtained by different experiments A D ata s et and experimenta ls et-up In our experiments we used the free available Jester dataset Anonymous Ratings from the online Jester Online Joke Recommender System 1  This dataset consists of 4.1 million continuous ratings of 100 jokes from 73,421 users Table V summarizes the conguration parameters used for the experimentation TABLE V E XPERIMENTATION SET UP  Parameter Value Population size 50 individuals Number of generations 100  012\012 0.9  015 0.2 Maximum number of derivations CFG 24 Auxiliary population size 30 individuals Condence threshold 0.9 Minimum suppport threshold 0.0005 Maximum suppport threshold 0.125   10   10 B Execution of the RARM a lg orithm In order to obtain a diverse set of association rules ve different executions of the G3PARM modied algorithm have been carried out with ve different seeds Once the G3PARM 1 Jester Collaborative Filtering Dataset http://goldberg.berkeley.edu jester-data algorithm reaches a certain number of generations 100 generations in our proposal individuals from the auxiliary population are returned As explained before this population comprises the best individuals i.e those that exceed a minimum threshold of condence and support and have a support value less than a maximum threshold Finally the set of rules obtained from the auxiliary population are normalized by using the post-processing step implemented in this G3PARM algorithm version Table VI shows the average support and condence of the rules obtained in each experiment The value   is the number of rules that compose the auxiliary population once the algorithm reaches the maximum number of generations TABLE VI A VERAGE RESULTS FOR EACH MEASURE PER EXECUTION Support Con“dence N Rules Experiment1 0.0340 0.9796 146 Experiment2 0.0324 0.9864 146 Experiment3 0.0431 0.9742 149 Experiment4 0.0312 0.9814 149 Experiment5 0.0499 0.9835 148 Average 0.0381 0.9810 147.6000 Finally we present some signicant rules obtained in this rst step of the intruder detection process described in this paper Ru l e1      012                  012      Ru l e1 norma l ized           012       012      Ru l e2          012  012               012   Ru l e2 norma l ized         012  012                012   These rules show the infrequent ratings of 100 different jokes Scores are bound from 10 i.e the user dislikes the item to 10 i.e the user likes the item C  Attack injection As we know the main goal of an attacker is to distort the normal behavior of a ltering recommender system in order to promote or demote a specic item Formally a proleinjection attack has a set of proles added to the system through an attacker with different ctitious user identities To 686 20 1 0 1 0 t h I nt er nati o na lCo nf ere n ce o n I nt ell i ge nt S ys t e m sDes i g nan dA pp l i c ati o n s 


conceal the real intentions of an attacker it is necessary to rate items that are not the target item This paper is focused on the use of push attacks that consist in promoting an item selected by adding high ratings to the target item It also requires some ller rating in order to simulate a normal user behavior e.g rating the most popular items There are many ways to create a push attack 17  Random attack  This attack assigns the highest rating to the target item and random ratings to the ller items  Avera g e attack  In this attack a previously knowledge about the system is required The average rating of each item is assigned to each ller item In order to promote the target item the highest rating is assigned to this item  Bandwa g on attack  The attacker inserts some ller ratings like the random attack but also high rating in the most frequently rated items This model allows the association between the most visibility items and the target item  Se g ment attack  This attack tries to reduce the knowledge needed to create a push attack by pushing an item to a group of users with specic preferences Focusing on the average attack and in order to create this kind of attacks see Figure 4 a set of ller items    are randomly chosen and a random rating is generated in the domain 015            being the average rating for the item  and  being its standard deviation On the other hand the highest rating is assigned to the target item This process must be repeated in order to generate a set of attack proles the attack size The cardinality of the set      can also be different In our experiments we created six attacks with different  values over three items with a low number of highest rating joke58 joke74 and joke79 The attack size used in these experiments was 2500 that approximately represents the 10 of the dataset size Then every new attack prole is inserted into the dataset and a new dataset with an attack injection dataset is obtained  Filler items Target item Null items l i n-l-i n items I f I o I t Fig 4 Average attack schema D  D etection of s u s piciou s attacker s Once we have the dataset and a set of rare association rules we analyze the rating patterns For each experiment we obtain a subset of rules that have undergone a signicant change in some attributes higher than a user-dened threshold probability For these rules the 015\012 measure will indicate the current item attacked With a threshold probability of 80 more than 30 rules were obtained as shown in Table VII All of these rules present the item attacked in their expression with 92 or 100 of attack probability In this case no rules with a signicant change in a ller item have been found The values of the 015\012 measure are always higher than zero in the attacked items For the rest of attributes ller items less than zero values are obtained so the suspicious item the item with a high attack probability is really the attacked item TABLE VII N UMBER OF RULES WITH THE ATTACKED ITEM P  0.8 Attacked item 015 20 015 30 015 40 015 50 015 60 Joke58 3232323232 Joke74 3737373737 Joke79 3636363636 Using this threshold probability the number of ller items inserted in the dataset is not signicant because the number of rules obtained for each  value is the same With a high value of the threshold probability only the attacked item presenting a great change in the corrupted dataset will exceed this threshold because the ller items are inserted with a less frequency than the target item If we change the threshold probability to 50 some new rules are found with the item attacked Table VIII If the number of ller items increases   takes values over 50 there will be some ller items that will appear in the new dataset close to the frequency of the target item Thus these items can be confused with the items attacked Table IX shows the number of rules with a higher change than the threshold probability caused by the high appearance of ller items in the attack In these cases the ller items can be considered to be attacked items because their attack probability is higher than the real target item probability When this happens the 015\012 measure gives us the current inuence of the attack in the dataset For example one of the association rules obtained in our experiments has one ller item with a probability to be an attack of 50 and the target item of 20 Yet the inuence measures obtained were 0.006 for the ller item and 0.022 for the target item TABLE VIII N UMBER OF RULES WITH THE ITEM ATTACKED P  0.5 Attacked item 015 20 015 30 015 40 015 50 015 60 Joke58 4444444444 Joke74 3737373737 Joke79 3939393939 TABLE IX N UMBER OF RULES WITH FILLER ITEMS Attacked item 015 20 015 30 015 40 015 50 015 60 Joke58 0 0 0 51 265 Joke74 0 0 0 81 279 Joke79 0 0 0 143 359 20 1 0 1 0 t h I nt er nati o na lCo nf ere n ce o n I nt ell i ge nt S ys t e m sDes i g nan dA pp l i c ati o n s 687 


IV C ONCLUDING REMARKS AND FUTURE WORK This position paper has shown a novel proposal for the detection of malicious attack injections in user-based recommendation systems A core step in this process consists in mining infrequent combinations of user ratings on items e.g movies books music and so on With this purpose we have introduced a variation of our previous algorithm G3PARM that is specially devoted to rare association rule mining Since G3PARM is an evolutionary algorithm that uses G3P we have taken advantage of some important characteristics aforementioned such as its adaptability to the scope of application as well as its scalability which allows it to face up to large datasets comprising a great deal of attributes or items Precisely this latter point is an usual shortcoming of current attack detection proposals The attack probability   and the 015\012 measure used in the analysis of the rating patterns allows us to extract the suspicious attacked items state the real inuence of these items and nally extract the target item that the attacker promoted In our experiments both the attacked items and some ller items were catalogued as suspicious but the ller items are discarded later thanks to the inuence measure As a future work we plan to test different types of attacks because CRD are susceptible to a wide range of attacks In this respect we will be able to prove our new detection process in more complex attack injections like the bandwagon attack Although most of the current proposals analyzed datasets with attacks we also propose to explore how this method would react in non-simulated environments i.e where the increment of the dataset presents both usual rating proles and attacker proles A CKNOWLEDGMENT This work has been supported by Spanish Research Projects P08-TIC-3720 TIN2008-06681-C06-03 and FEDER founds R EFERENCES  F  Zhang L Bai and F  Gao AU s er Tru s t-Ba s ed C o ll aborative Fi l terin g Recommendation A lg orithm  2009 pp 411–424  C W illiams B Mobasher  R  B urk e and R  Bhaumik D etectin g Pro l e Injection Attack s in C o ll aborative Fi l terin g A Cl a ss iÞcation-Ba s ed Approach  2007 pp 167–186  C W illiams B Mobasher  a nd R Burk e Defending Recommender Systems Detection of Prole Injection Attacks Service Oriented C omputin g and App l ication s  vol 1 no 3 pp 157–170 2007  S X W u and W  Banzhaf The use of computational intelligence in intrusion detection systems A review App l ied Soft C omputin g  vol 10 no 1 pp 1–35 2010  B Mobasher  R  B urk e R Bhaumik and C  W illiams T o w ard T rustworthy Recommender Systems An Analysis of Attack Models and Algorithm Robustness A C MTran s  Internet Techno l   vol 7 no 4 p 23 2007  V  Chandola A Banerjee and V  K umar   Anomaly Detection A Survey A C M C omput Surv  vol 41 no 3 pp 1–58 2009  R Agra w al T  Imielinski and A N Sw ami Mining Association Rules between Sets of Items in Large Databases in Proceedin gs of the 1993 A C M SIGMO D Internationa lC onference on Mana g ement of D ata SIGMO D 93  Washington D.C 1993 pp 207–216  C Bor gelt Ef cient Implementations of Apriori and Eclat  i n 1 s t Work s hop on Frequent Item s et Minin g Imp l ementation s FIMIÕ03  Melbourne Florida USA 2003  F  Bodon A T i re-based APRIORI Implementation for Mining Frequent Item Sequences in 1 s t Internationa l Work s hop on Open Source D ata Minin g  Frequent Pattern Minin g Imp l ementation  2005 pp 56–65  J Han J Pei Y  Y i n and R Mao Mining Frequent P atterns without Candidate Generation A Frequent-Pattern Tree Approach D ata Minin g and Know l ed g e D i s cover y  vol 8 pp 53–87 2004  J M Luna J R Romero and S V entura G3P ARM A Grammar Guided Genetic Programming Algorithm for Mining Association Rules in IEEE Wor l d C on g re ss on C omputationa l Inte ll i g ence W CC I 2010  Barcelona Spain 2010 pp 2586–2593  Y  K o h a nd N Rountree Findin g Sporadic Ru l e s U s in g Apriori-Inver s e  2005 pp 97–106  L Szathmary  A  N apoli and P  V altche v  T o w ards Rare Itemset Mining in 19th IEEE Internationa lC onference on Too ls with ArtiÞcia l Inte ll i g ence I C TAI 07  vol 1 2007 pp 305–312  L T r oiano G Scibelli and C Birtolo  A Fast Algorithm for Mining Rare Itemsets in Proceedin gs of the Ninth Int l  C onference on Inte ll ig ent S ys tem sD e s i g n and App l ication s  2009 pp 1149–1155  J R K o za Genetic Pro g rammin g  On the Pro g rammin g of C omputer s b y Mean s of Natura l Se l ection  C omp l ex Adaptive S ys tem s  TheMIT Press December 1992  S V e ntura C Romero A Zafra J Delgado and C Herv  as J C LE C  a Framework for Evo l utionar yC omputation  ser Soft Computing Springer Berlin  Heidelberg 2007 vol 12 pp 381–392  S Lam and J  Riedl Shilling recommender systems for fun and prot  in Proceedin gs of the 13th Internationa l WWW C onference NewYork NY 2004 688 20 1 0 1 0 t h I nt er nati o na lCo nf ere n ce o n I nt ell i ge nt S ys t e m sDes i g nan dA pp l i c ati o n s 


Figure 3 Plots of the ratios j S 1 i j  j S i j and j S 1 i  S 1 j j  j S i  S j j  R EFERENCES  E Cohen M Datar S Fujiwara A Gionis P Indyk R Motwani J D Ullman and C Yang Finding interesting associations without support pruning IEEE Trans Knowl Data Eng  vol 13 no 1 pp 64–78 2001  Y.-K Lee W.-Y Kim Y D Cai and J Han Comine Ef\002cient mining of correlated patterns in Proc IEEE International Conference on Data Mining ICDM 2003  IEEE Computer Society 2003 pp 581–584  E Omiecinski Alternative interest measures for mining associations in databases IEEE Trans Knowl Data Eng  vol 15 no 1 pp 57–69 2003  J Han and M Kamber Data Mining Concepts and Techniques 2nd edition  Morgan Kaufmann 2006  R Agrawal and R Srikant Fast algorithms for mining association rules in large databases in Proc International Conference On Very Large Data Bases VLDB 1994  Morgan Kaufmann Publishers Inc Sep 1994 pp 487–499  J Han J Pei Y Yin and R Mao Mining frequent patterns without candidate generation A frequent-pattern tree approach Data Min Knowl Discov  vol 8 no 1 pp 53 87 2004  N Jiang and L Gruenwald Research issues in data stream association rule mining SIGMOD Record  vol 35 no 1 pp 14–19 2006  Y Zhu and D Shasha Statstream Statistical monitoring of thousands of data streams in real time Morgan Kaufmann 2002 pp 358–369  G Cormode and S Muthukrishnan What's hot and what's not tracking most frequent items dynamically ACM Trans Database Syst  vol 30 no 1 pp 249–278 2005  E D Demaine A L  opez-Ortiz and J I Munro Frequency estimation of internet packet streams with limited space in Proc 10th Annual European Symposium Algorithms ESA 2002  2002 pp 348–360  J X Yu Z Chong H Lu Z Zhang and A Zhou A false negative approach to mining frequent itemsets from high speed transactional data streams Inf Sci  vol 176 no 14 pp 1986–2015 2006  A Chakrabarti G Cormode and A McGregor Robust lower bounds for communication and stream computation in STOC  C Dwork Ed ACM 2008 pp 641–650  S Guha and A McGregor Stream order and order statistics Quantile estimation in random-order streams SIAM Journal on Computing  vol 38 no 5 pp 2044–2059  N Alon Y Matias and M Szegedy The space complexity of approximating the frequency moments J Comput Syst Sci  vol 58 no 1 pp 137–147 1999  J Misra and D Gries Finding repeated elements Sci Comput Program  vol 2 no 2 pp 143–152 1982  R M Karp S Shenker and C H Papadimitriou A simple algorithm for 002nding frequent elements in streams and bags ACM Trans Database Syst  vol 28 pp 51–55 2003  M Charikar K Chen and M Farach-Colton Finding frequent items in data streams Theor Comput Sci  vol 312 no 1 pp 3–15 2004  A Campagna and R Pagh Finding associations and computing similarity via biased pair sampling in Proc 9th IEEE International Conference on Data Mining ICDM 2009    Finding associations and computing similarity via biased pair sampling Invited for publication in Knowledge an Information Systems  2010  E Kushilevitz and N Nisan Communication complexity  New York Cambridge University Press 1997  J S Vitter Random sampling with a reservoir ACM Trans Math Softw  vol 11 no 1 pp 37–57 1985  D Dubhashi and D Ranjan Balls and bins a study in negative dependence Random Struct Algorithms  vol 13 no 2 pp 99–124 1998 
128 
128 


Application of Chaotic Particle Swarm Optimization Algorithm in Chinese Documents Classification 763 Dekun Tan Qualitative Simulation Based on Ranked Hyperreals 767 Shusaku Tsumoto Association Action Rules and Action Paths Triggered by Meta-actions 772 Angelina A. Tzacheva and Zbigniew W. Ras Research and Prediction on Nonlinear Network Flow of Mobile Short Message Based on Neural Network 777 Nianhong Wan, Jiyi Wang, and Xuerong Wang Pattern Matching with Flexible Wildcards and Recurring Characters 782 Haiping Wang, Fei Xie, Xuegang Hu, Peipei Li, and Xindong Wu Supplier Selection Based on Rough Sets and Analytic Hierarchy Process 787 Lei Wang, Jun Ye, and Tianrui Li The Covering Upper Approximation by Subcovering 791 Shiping Wang, William Zhu, and Peiyong Zhu Stochastic Synchronization of Non-identical Genetic Networks with Time Delay 794 Zhengxia Wang and Guodong Liu An Extensible Workflow Modeling Model Based on Ontology 798 Zhenwu Wang Interval Type-2 Fuzzy PI Controllers: Why They are More Robust 802 Dongrui Wu and Woei Wan Tan Improved K-Modes Clustering Method Based on Chi-square Statistics 808 Runxiu Wu Decision Rule Acquisition Algorithm Based on Association-Characteristic Information Granular Computing 812 JianFeng Xu, Lan Liu, GuangZuo Zheng, and Yao Zhang Constructing a Fast Algorithm for Multi-label Classification with Support Vector Data Description 817 Jianhua Xu Knowledge Operations in Neighborhood System 822 Xibei Yang and Tsau Young Lin An Evaluation Method Based on Combinatorial Judgement Matrix 826 Jun Ye and Lei Wang Generating Algorithm of Approximate Decision Rules and its Applications 830 Wang Yun and Wu-Zhi Qiang Parameter Selection of Support Vector Regression Based on Particle Swarm Optimization 834 Hu Zhang, Min Wang, and Xin-han Huang T-type Pseudo-BCI Algebras and T-type Pseudo-BCI Filters 839 Xiaohong Zhang, Yinfeng Lu, and Xiaoyan Mao A Vehicle License Plate Recognition Method Based on Neural Network 845 Xing-Wang Zhang, Xian-gui Liu, and Jia Zhao Author Index 849 
xiii 


   C4.2 Open GL has excellent documentation that could help the developer learn the platform with ease C4.3 Developer has very little ex perience in working with Open GL platform  For our case study, alternative B i.e. Adobe Director was the most favorable alternative amongst all the three. It catered to the reusability criteria quite well and aimed at meeting most of the desired operational requirements for the system   6. CONCLUSION & FUTURE WORK  The main contribution of this paper is to develop an approach for evaluating performance scores in MultiCriteria decision making using an intelligent computational argumentation network. The evaluation process requires us to identify performance scores in multi criteria decision making which are not obtained objectively and quantify the same by providing a strong rationale. In this way, deeper analysis can be achieved in reducing the uncertainty problem involved in Multi Criteria decision paradigm. As a part of our future work we plan on conducting a large scale empirical analysis of the argumentation system to validate its effectiveness   REFERENCES  1  L  P Am g o u d  U sin g  A r g u men ts f o r mak i n g an d  ex p lain in g  decisions Artificial Intelligence 173 413-436, \(2009 2 A  Boch m a n   C ollectiv e A r g u men tatio n    Proceedings of the Workshop on Non-Monotonic Reasoning 2002 3 G  R Bu y u k o zk an  Ev alu a tio n o f sof tware d e v e lo p m en t  projects using a fuzzy multi-criteria decision approach Mathematics and Computers in Simualtion 77 464-475, \(2008 4 M T  Chen   F u zzy MCD M A p p r o ach t o Selec t Serv ice  Provider The IEEE International Conference on Fuzzy 2003 5 J. Con k li n  an d  M. Beg e m a n   gIBIS: A Hypertext Tool for Exploratory Policy Discussion Transactions on Office Information Systems 6\(4\: 303  331, \(1988 6 B P  Duarte D e v elo p in g a p r o jec ts ev alu a tio n sy ste m based on multiple attribute value theroy Computer Operations Research 33 1488-1504, \(2006 7 E G  Fo rm an  T h e  A n a l y t ic Hier a rch y P r o cess A n  Exposition OR CHRONICLE 1999 8 M. L ease  an d J L  L i v e l y  Using an Issue Based Hypertext System to Capture Software LifeCycle Process Hypermedia  2\(1\, pp. 34  45, \(1990 9  P e id e L i u   E valu a tio n Mo d e l o f Custo m e r Satis f a c tio n o f  B2CE Commerce Based on Combin ation of Linguistic Variables and Fuzzy Triangular Numbers Eight ACIS International Conference on Software Engin eering, Artificial Intelligence Networking and Parallel Distributed Computing, \(pp 450-454 2007  10  X  F L i u   M an ag e m en t o f an In tellig e n t A r g u m e n tatio n  Network for a Web-Based Collaborative Engineering Design Environment Proceedings of the 2007 IEEE International Symposium on Collaborative Technologies and Systems,\(CTS 2007\, Orlando, Florida May 21-25, 2007 11 X. F L i u   A n In ternet Ba se d In tellig e n t A r g u m e n tatio n  System for Collaborative Engineering Design Proceedings of the 2006 IEEE International Symposium on Collaborative Technologies and Systems pp. 318-325\. Las Vegas, Nevada 2006 12 T  M A sub jec tiv e assess m e n t o f altern ativ e m ission  architectures for the human exploration of Mars at NASA using multicriteria decision making Computer and Operations Research 1147-1164, \(June 2004 13 A  N Mo n ireh  F u zzy De cisio n Ma k i n g b a se d o n  Relationship Analysis between Criteria Annual Meeting of the North American Fuzzy Information Processing Society 2005 14 N  P a p a d ias HERMES Su p p o rti n g A r g u m e n tative  Discourse in Multi Agent Decision Making Proceedings of the 15th National Conference on Artifical Intelligence \(AAAI-98  pp. 827-832\dison, WI: AAAI/MIT Press,  \(1998a 15  E. B T riantaph y llo u   T h e Im p act o f  Ag g r e g atin g Ben e f i t  and Cost Criteria in Four MCDA Methods IEEE Transactions on Engineering Management, Vol 52, No 2 May 2005 16 S  H T s a u r T h e Ev alu a tio n o f airlin e se rv ice q u a lity b y  fuzzy MCDM Tourism Management 107-115, \(2002 1 T  D W a n g  Develo p in g a f u zz y  T O P S IS app r o ach  b a sed  on subjective weights and objective weights Expert Systems with Applications 8980-8985, \(2009 18 L  A  Zadeh  F u z z y Sets   Information and Control 8  338-353, \(1965  152 


                        





