  1 Automated Software Verification & Validation An Emerging Approach for Ground Operations David G. Bell and Guillaume P. Brat USRA/RIACS NASA Ames Research Center MS 269/1, MS 269/2 Moffett Field, CA  94035-1000 650-604-{0771,1105 dbell@riacs.edu brat@email.arc.nasa.gov  Abstract Software is an increasingly critical component in aerospace systems, and automated software testing technologies that use formal methods are emerging as a new type of ground data system for verifying and validating software changes.  With each change made to software for use in operational settings, there is the opportunity for new bugs to be introduced that can cause potentially catastrophic results.  This research has evolved two formal method 
approaches for automated software verification and validation model checking and static analysis, with extensions of the approaches for multiple languages including Java, C and C++.  The research is removing the barriers to routine use of formal methods to gain high assurance for human-rated space missions.  These methods have been used on control software for a variety of mission critical systems including guidance, navigation and control GN&C\ subsystems, and for various projects such as the NASA Crew Exploration Vehicle \(CEV 1 2  T ABLE OF C ONTENTS  1  I NTRODUCTION 1  2  J AVA P ATH 
F INDER 2  3  C  G LOBAL S URVEYOR 4  4  C ASE E XAMPLES 5  5  C ONCLUSIONS 7  A CKNOWLEDGEMENTS 7  R EFERENCES 7  B IOGRAPHY 8  1 
 I NTRODUCTION  Software is an increasingly critical component in aerospace systems, with the number of lines of software code used in missions providing one measure of its increasing importance.  At the National Aeronautics and Space Administration \(NASA\the number of lines of code used in missions has increased exponentially over the last few decades, with the size of so ftware systems currently measured in millions of lines of code, versus thousands of lines of code as it was histor ically measured in the early days of the use of software in space flight missions \(See Figure 1 1  1  1-4244-1488-1/08/$25 00 ©2008 IEEE  2 IEEEAC paper #1426, Version 1, Updated October 22, 2007 
 Figure 1: Growth in si ze of software systems Costs associated with softwa re development and software failures are significant.  A database of aerospace system failures shows that software failures have caused significant launch delays and mission failures, resulting in significant costs and loss of data.  Table 1 shows recent aerospace losses caused by  Table 1: Recent aerospace losses caused by software errors System Cost FY04 Description All involved loss of data Ariane 5 1996 594M Software error shut down redundant inertial reference systems, resulting in loss of control and aerodynamic breakup 
Delta III 1998 336M Software error did not account for normal roll oscillation, resulting in loss of attitude control and auto-destruct Titan 4B 1999 1.5B Misplaced decimal point in Centaur flight software causes premature propellant depletion and deployment of payload in incorrect low orbit Mars Climate Oribiter 1999 524M Failure to use metric units in ground software trajectory models caused steeper than expect ed entry trajectory and destruction while entering the Martian atmosphere 
Zenit 3SL 2000 367M Software error caused premature second stage shutdown and the satellite failed to reach orbit Messenger 2004 23.9M Software testing and other factors caused launch delays and a new launch profile requiring an additional two years of cruise time to complete the mission with partial loss of data   
8 1700 3 32 160 430 1 10 100 1000 10000 Voyager 1977 Galileo 1989 Cassini 1997 MPF 1997 Shuttle 2000 ISS 2000 Mission Lines of Code \(Thousands 


  2 Software errors are also among the highest risks that could potentially lead to a loss of the Space Shuttle, where software errors continue to be discovered in Space Shuttle flight control software.  Since the Shuttle started operation in 1980, sixteen Critical-1 so ftware errors have been discovered in the released software. These problems occurred despite NASA having one of the most thorough and sophisticated software development and verification processes in existence The risk of software errors can be reduced through automated software verification and validation using formal methods This research has evolved two formal method approaches for automated software verification and validation model checking and static analysis, with extensions of the approaches for multiple languages including Java, C and C++.   These methods are used to reduce risks in various phases of the software life-cycle   Requirements Validation of software requirements with consistency and completeness checks to detect missing or ambiguous requirements    D esign Detection of software design errors by testing c onformance of design to requirements including detection of component interaction errors through component integration testing    Implementation Detection of software coding errors through runtime error checking, conformance testing of implementations to requirements and design, and detection of implementation-specific errors such as timing, memory usage and performance This paper describes two of the formal methods tools we are using for verification of aeros pace software. The first one called Java PathFi or JPF, i s  a m odel  checker for Java programs. The second one, called C Global Surveyor 4,5 o r CGS, is a static analyzer for C programs. The subsequent sections of this paper will describe the technical approach used in these two tools, followed by case examples of their applicati on to aerospace systems, and conclusions 2  J AVA P ATH F INDER  Java PathFinder \(JPF\an an alysis tool that can perform software model checking on Java programs. Since its inception, it has been extended with capabilities to perform symbolic execution, model check ing of Statecharts, and to deal with user interface issues This section presents an overview of model checking and JPF in layman’s terms Model checking Model checking is a technique that was invented for formally verifying communication protocols expressed as finite state systems [9 strated in Fig u r e 2  th is is achieved by verifying that a logical property \(derived from the requirements\s a model of the system being checked i.e., a model derived from the design phase or by abstraction of the code, or, the code itself property is said to be satisfied by the system. Properties are often expressed as temporal logic formulas, but simple assertions can also be checked In practice, assertions are easier to check than temporal properties, even though they require annotating the system under test with assert statements Explicit state model checking \(which is what we are using in this work\ses an explicit representation of the system's global state graph, usually given by a state transition function. An explicit state model checker evaluates the validity of temporal properties over the model by exploring all state transitions \(which are roughly equivalent to program statements in software model checking\Property validation amounts to a partial or complete exploration of the state space  Figure 2. Model checking process An important characteristic of explicit-state model checking is that it explores systemati cally every reachable state from the root. If one considers the example of a sequential program, this corresponds to a trace through the system. If one considers a multi-threaded program \(as in Figure 3 then it corresponds to exploring all the possible interleavings of the threads in the program as well as all the possible numerical values for unbounded \(or restricted to a range of\nputs 


  3 Figure 3. The exploration process Traditionally, the search follo ws a depth-first-search pattern. However, there have been attempts at using different search strategies including breadth-first-search and some based on heuristics Lastly, linear temporal logic properties are the properties most often checked by exp licit-state model checkers Temporal logic properties express temporal properties over an execution trace. Temporal ope rator can express the fact that   something always happens in a trace   something happens next in a trace, and   something will eventually happen in the trace This allows a user to expre ss properties such as “Always after p there is eventually q This particular example is interesting since it corresponds to a response property which is often used in specification for embedded systems especially in control\. In practice, users have problems expressing specification in Lin ear Time Logic \(LTL often explicit-state model ch eckers are used to verify assertions \(at some program point\ems due to multi-threading \(deadlocks race conditions, and so on The JPF model checker As mentioned previously  i s  an expl i c i t st at e m odel  checker loosely based on the SPIN model checker In SPIN, the Promela language is used to specify the model; it therefore requires a transla tion pass to check software programs   However, several approaches have been designed recently to make explicit-state model checking work directly on code. In our case, JPF is a model checker that works directly on Java bytecode. In JPF, as shown in Figure 3, the bytecodes of the program describe the state transitions, the state being defined by the actual state of the program at each program point \(o r by an abstraction of this state Figure 4 illustrates the JPF process from a user’s point of view. The user defines three elements 1  a set of data abstractions, which are used to make the model checking problem more scalable 2  a virtual machine \(VM definition of the property being checked during exploration 3  a set of scheduling decision, which defines data ranges that need to be explored as well as the scheduling of threads These three elements are then plugged into the JPF virtual machine \(JPF-VM\ilar to a regular Java virtual machine, except that it has the capacity of choosing its own scheduling, memorizing states, and a few other features necessary for the mode l checking process. The user also needs to indicate a search strategy \(e.g., depth first breadth first, or others\his is done, JPF starts exploring paths until it hits a violation of the property being checked. The path leading to th e error is then recorded and displayed as a trace through the program to the user. Note that JPF accepts bytecode as inputs \(and not the Java source files\ allows for the exploration of libraries used by the code. Of course, one might choose to give abstractions for these libraries so that the state space stays relatively small JPF extensions JPF has been extended so that it can go beyond its original purpose \(i.e., model checking Java programs\e are describing some of these extensions The Constellation program at NASA is in charge of the development of Orion \(Crew Exploration Vehicle Cargo Launch Vehicle\issions have selected a model-based development process for software. This means that software systems are first designed using models \(often Statecharts or Starcharts-lik e models\hen code is generated from the models. So, it is important for NASA to have the ability to check Statecharts models, and therefore JPF has been extended to deal with Statecharts. Since these models will often be incomplete, JPF also offers the user the 


  4 possibility of defining scripts that restrict the exploration to some specific region of the models. This JPF feature is used in the work described in  JPF also offers a symbolic execution capability. Symbolic execution manipulates symbolic representation of variable values instead of concrete values during state exploration This gives the user the ability of gathering constraints on the inputs and decision points chosen during the exploration of a given path. These constraints can then be used to generate test cases automatically 3  C  G LOBAL S URVEYOR  C Global Surveyor \(CGS atic program analyzer for C programs. CGS can analyze C software and identify memory corruption errors su ch as buffer overruns, out-ofbound array accesses, or null point er de-references. It has been shown to scale up to 540 thousands lines of code KLOCs Static analysis The goal of static analysis is to assess code properties without executing the code. Several techniques can be used to perform static analysis, such as theorem proving, data flow analysis  const r ai nt sol v i ng [8  and abst ract  interpretation [9,10  In  th is p a p e r we p r esen t CGS wh ich is based on abstract interpretation The theory of Abstract Interpretation pioneered by Patrick and Radhia Cousot in the mid 70's provides algorithms for building program analyzers wh ich can detect all runtime errors by exploring the text of the program  The program is not executed and no test case is needed. A program analyzer based on Abstract Interpretation is a kind of theorem prover that infers properties about the execution of the program from its text \(the source code\and a formal specification of the semantics of the language \(which is built in the analyzer undamental result of Abstract Interpretation is that program analyzers obtained by following the formal framework defined by Patrick and Radhia Cousot are guaranteed to cover all possible execution paths. Runtime erro rs are errors that cause exceptions at runtime. Typically, in C, either they result in creating core files or they cau se data corruption that may cause crashes The price to pay for exhaustive coverage is incompleteness the analyzer can raise false alarms on some operations that are actually safe. However if the analyzer deems an operation safe, then this property holds for all possible execution paths. The program analyzer can also detect certain runtime errors which occur every time the execution reaches some point in the pr ogram. Therefore, there are basically two complementary uses of a program analyzer   as a debugger that detects runtime errors statically without executing the program   as a certification tool which identifies safe areas of the code and regions with poten tially dangerous operations that have to be checked by a traditional validation process \(code reviewing, test writing, and so on For the second use the tool should achieve a good selectivity - the percentage of operations which are proven to be safe by the program analyzer. Indeed, if 80% of all operations in the program are marked as potentially dangerous by the analyzer, there are no benefits to using such technique. Figure 5 shows the place of static analysis in the software development lifecycle  Figure 4: The JPF model checking process 


  5 Figure 5. Static analysis in the SW development lifecycle  CGS overview CGS is a static analyzer for C programs. Actually, CGS has been tuned for embedded systems, such as those used or developed at NASA. In practice, CGS works like a smart compiler; it   parses the source code   creates a call graph of all the routine calls in the program   computes a control flow graph \(CFG\each of the routines in the program \(not e that a CFG represents all possible branching, like loops and if-then-else statements, in a program   defines numerical equati ons for each of the nodes which corresponds to program statements\n the CFGs to represent memory accesses \(start and length of the memory region being accessed and indices within this region   solves these equations, first the routine level, and second at the program level   computes safety reports for each operation in the program Figure 6. Static analysis vs. testing  So, the results of an analysis by CGS is a report classifying each operation into being safe \(all the time\unsafe \(in in some contexts that may be un-realizable\6 compares static analysis to traditional testing. The main difference is in the exhaustive coverage of static analysis for some error classes \(runtime errors\sure that all possible executions have been covered. In sound and complete \(as in CGS\alysis, one obtains an accurate picture of the safe, unsafe and potentially unsafe regions Extension to C CGS was created to analyze C programs. So far the flight software for most NASA missions has been developed in C However, C++ is being introduced both into flight and ground software. Therefore, we are developing a version of CGS that will be able to analyze C++. Furthermore, we will complement the C++ static an alyzer with a model checker MCP\mbolic execution engine \(TPGEN\e that prototypes already exis t for MC and TPGEN. All tools will be developed on top of the low-level virtual machine \(LLVM\ framework, which is an open-source framework for designing C++ analysis tools 4  C ASE E XAMPLES  In this section, we briefly describe some of the examples we have analyzed with JPF and CGS. They span a wide spectrum of aerospace applications ranging from space Mars missions, Space Shuttle, International Space Station to aeronautics examples DEOS example DEOS is a portable micro-kernel-based real-time operating system used at Honeywell fo r the Primus Epic avionics product line. It supports flexible, integrated modular 


  6 avionics applications by pr oviding space partitioning at the process level and time partitioni ng at the thread level. Space partitioning ensures that no process can modify the memory of another process without au thorization. Time partitioning ensures that a thread access to its CPU time budget cannot be impaired by actions of any other threads. These partitioning capabilities are important since they provide the ability for applications to shar e the same hardware without interfering with each other In DEOS, time partitioning is enforced by using the traditional rate monotonic scheduling \(RMA\In RMA, the threads with the most stringent real-time requirements have highest priorities. In theory, RMA guarantees that all threads can be scheduled if the sum of their utilities \(i.e., the ratio of computing time by the scheduling period\s below a certain threshold Our experiment consisted of fi rst translating the DEOS code from C++ to Java so that we could use JPF. It resulted in a Java program of 1400 lines with 20 classes and 6 threads. In order to analyze the kernel itself, additional code was written to simulate the behavior of user applications and the hardware environment. The re quirement was encoded as a method that observed the states of the kernel and asserted that budgets were allocated in each scheduling unit. The calls to this method were inserted whenever the kernel schedules an application process Then, we ran JPF until a d eadlock was reached. This deadlock is a real error that Honeywell had found after many analysis hours. They did not tell us where or what the error was. Fortunately, JPF found the error, but not at the first try. First, JPF ran out of memory; the state space being explored was too large. We therefore performed a sign abstraction on some of the integer variables in DEOS and re-ran the analysis. The sign abst raction abstracts values to their sign \(positive, negative, or zero\. Thus, it can abstract an unbounded value range to a range with three values. This abstraction was critical to allowing us to find the error Mars mission flight software The MPF \(Mars PathFinder\ily consists of flight software systems that were developed based on the flight software system for the Mars PathFinder mission They were re-used in the Deep Space One and Mars Exploration Rover \(MER\issions. We used this software family as a tune-up for CGS. Results are described in details    From a static analysis point of view, the three systems are quite similar since they use th e same \(object-oriented even though they were developed in C\ software architecture as well as some modules \(such as the quaternion library\For example, all systems are multi-threaded and they use the threading package of VxWo rks. Communication between threads is done using message queues. Even though messages are quite complex \(e.g., they contain not only data but also references to callback replies into arrays of integers. Thus, in some cases, the analysis loses information about for example the call flow, or the sizes of matrices passed from one module to the next. This was a major source of imprecision in our analyses. Another important factor is the size of these applications. Overall the increased complexity of the missions was reflected in the size of each application. As Table 2 shows, the size ranges from 140 KLOCs to 540 KLOCs and the number of threads increased from 23 to more than one hundred in MER Table 2. Software complexity for MPF family MPF DS1 MER Size \(in KLOCs 140 280 540 threads 23 40 100  The results for the MPF family were very good. This is not surprising since we design CGS to work well for this family. In fact, we used th e MPF and DS1 software as testbeds during the development of CGS. Overall, we obtained about 85% precision \(the percentage of checks that are classified with certainty as correct, incorrect, or unreachable\The average running times were about 1.5 hours for MPF and about 3 hours for DS1. The analysis of MER took much longer \(about 24 hours\There are two major reasons for that. First, the sheer size of MER \(540 KLOCs\s a big factor. The second reason for the slow response times lies in the imprecision of our alias analysis International Space Station examples The application of CGS to flight software for the shuttle and the International Space Station \(ISS technology infusion effort  W e anal y zed fi ve m odul es 1  The Application Processor \(AP\odule is part of the flight software for the Advanced Video Guidance Sensor \(AVGS as experiments on two Space Shuttle missions and will be the primary sensor for the close-proximity operation in the DART mission. The DART mission seeks to advance the state of the art in safe and reliable autonomous rendezvous capabilities at NASA. The AP module represents about 12 KLOCs of C code 2  The IO Processor \(IOP\odule is also part of the AVGS. It represents 7 KLOCs of C code 3  The goal of the Materials Science Research Rack MSRR\oard the ISS is to offer capabilities to facilitate a wide range of materials science investigations. For example, the facility will provide the common subsystems and interfaces required for the 


  7 operation of experiment hardware, accommodate telescience capabilities, and provide the capability for simultaneous on-orbit processing. This application consists of 55 KLOCs of C code 4  The Urine Processor Assembly UPA life support in the ISS. The UPA controller consists of 47 KLOCs of C code 5  Finally, the last module is the boot loader BOOTLDR\for the shuttle engine controller. It consis of 7 KLOC of C code. The MSFC development team is also in the proce ss of using static analyzers including CGS\o analyze the whole controller However, we do not have re sults for this experiment The analysis response times of these analyses were quite satisfying. Each analysis was only a matter of minutes on laptop \(i.e., machines that are slower and have less memory than the desktops we use fo r the analysis of the MPF family\Second, the precision was quite good \(around 85 On-board abort executive for CEV This section describes how we analyze the On-board Abort Executive \(OAE\JPF. Once again OAE was written in C and therefore we first had to translate it into Java. Fortunately, OAE is a small piece of software \(about 650 lines of code\plexity of OAE does not come from its size, but from the combination of abort conditions covered by th e software. This makes OAE difficult to validate by hand, hence, our use of JPF Actually, we did not try to model check OAE. Our goal was to show that we can use JPF \(and its symbolic execution capability\ generate test cases that cover all abort conditions, thus providing an unusual coverage criterion i.e., abort statement coverage We have generated 131 test cases that provide full coverage for all single flight rule failures in OAE. The first OAE prototype that we analyzed is only designed to handle single flight rule failures NASA's Guidance, Navigation, and Control group at Johnson Space Center used these test cases to identify some significant bugs in OAE, which resulted in rewrites of parts of the OAE code.  We are now analyzing the latest version of OAE \(with multiple faults test cases for that code. Results are not available at time of writing 5  C ONCLUSIONS  Formal method approaches for automated software verification and validation model checking and static analysis for Java, C and C++ are increasingly being utilized to improve software quality assurance in human-rated missions.  These methods have been successfully used on a number of aerospace applica tions ranging from space \(Mars missions, Space Shuttle, International Space Station\to aeronautics examples.  Software quality assurance is improved through creation of comprehensive test cases and identification of faults; as well as through reduced software development costs through automation of testing with increasingly higher precision ra tes reaching 85%.  Future work will continue to not only improve the performance of formal methods \(e.g., coverage, precision, speed scalability\ut also to improve the ease of use making such techniques a routine software quality assurance technique used in aerospace software development projects A CKNOWLEDGEMENTS  The work described in this paper was conducted by a team of computer scientists and software engineers in the reliable software engineering groups of the USRA Research Institute for Advanced Computer Science and the Intelligent Systems Division of the NASA Ames Research Center This paper is based upon work supported by NASA under awards NCC2-1426 and NNA07BB97C R EFERENCES    W  Vi sser, K. Havel und, G. B r at S. Park and F Lerda Model Checking Programs.” Automated Software Engineering Journal,volume 10, number 2, April 2003  G.J. Hol z m a nn, “The SPIN  M odel  C h ecker Addi sonWesley, 2004   S Thom pson G. B r at The M C P M odel C h ecker submitted to PEPM’08  Bound Checking for Large Embedded C Programs International Conference on Programming Language Design and Implementati on Proceedings, 231–242, 2004  G. Brat and A. Venet, “Preci se and scalable static program analysis of NASA flight softwa re”. In Proceedings of the 2005 IEEE Aerospace Conference, Big Sky, MT, 2005  G. B r at and W  Vi sser , “C om bi ni ng St at i c Anal y s i s and Model Checking for Software Analysis,” Proceedings of ASE2001. San Diego, November 2001  W  Landi Int erprocedural Aliasing in the Presence of Pointers Ph.D. thesis Rutgers University, 1992   A Ai ken and M  Fähndri c h, “Program Anal y s i s usi ng Mixed Term and Set Constraints”. In Proceedings of the 4 th International Static Analysis Symposium SAS’97 1997  P. C ousot and R  C ousot  St a t i c  Det e rm i n at i on of Dynamic Properties of Programs”. In Proceedings of 2 nd  International Symposium on Programming pages 106130, 1976 


  8  P. C ousot and R  C ousot Abst r act Int e rpret a t i on  a Unified Lattice Model for Static Analysis of Programs by Construction or Approximation of Fixpoints”. In Proceedings of 4 th Symposium on Principles of Programming Languages pages 238-353, 1977   E.M  C l arke, O. Grum berg, and, D.A. Pel e d, “M odel  Checking”. MI  G B r at  M   Gheorghi u D. Giannakopoulou, “Verification of plans and procedures,” submitted to IEEE Aerospace’08   G B r at M  Gheorghi u, D. Gi annakopoul ou Verification of plans and procedures,” submitted to IEEE Aerospace’08  Hergert  Paul M i ssi on Anom al y Dat a base \(1986  2004\elease Four," Prepared for the NASA Engineering for Complex Systems Program, April, 2004   B IOGRAPHY  Dr. David Bell is Director and Senior Scientist at the Research Institute for Advanced Computer Science, located at the NASA Ames Research Center Prior to working at NASA, David worked for ten years at the Xerox Palo Alto Research Center, and previously held an appointment at MIT where he led a research program in the Center for Innovation in Product Developmen t.  David is co-inventor of multiple patent and patentpending information system technologies, including XML query technologies related to NETMARK and the NASA Program Management Tool, and extensible blog technology called Sparrow Web; as well as co-inventor of distributed knowledge management software called Eureka.  David received his Ph.D. from Cornell University with a dissertation on the dynamics of product development processes  Dr. Brat received his Ph.D. in Electrical & Computer Engineering in 1998 \(The University of Texas at Austin USA\. He has specialized on the application of static analysis to software verification. From 1997 to June 1999, he worked at MCC where he led a project that developed static analysis tools for software verification. In June 1999, he joined the Automated Software Engineering group at the NASA Ames Research Center and focused on the application of static analysis to the verification of la rge software systems. He codeveloped and applied static analysis tools based on abstract interpretation to the verification of software for Mars missions at JPL, various ISS controllers at MSFC and the ISS Biological Research Project at the NASA Ames Research Center   


9 when attempting to adaptively cancel an interference with time-varying relative geometry, such as would occur with a spacecraft orbiting a distant planet Compensation of Antenna Pointing Errors Pointing error is also a significant source of gain loss for the large antennas of the DSN at 32 GHz. Presently a complex monopulse pointing system is used to aid in pointing the DSN 34-meter antennas at 32 GHz. The blind pointing requirement on the antennas is driven by the pull-in range of this monopulse system requiring elaborate pointing models and calibration.  Use of a focal plane array eliminates the need for a monopulse system entirely, and greatly reduces the requireme nts on blind pointing accuracy and associated calibration effort Figure 8 shows the gain of the 70-meter antenna for signals appearing off bore-site when a single corrugated horn is used as the feed, and for th e case of an 81-element array used with a re-imaging magnification factor of three. The response for the single horn feed effectively is that of a uniform aperture, resulting in a 3-dB beamwidth of approximately 7.5 mdeg. Theref ore in practice the antenna must be pointed, without feedback, to approximately this accuracy before an active pointi ng control system such as a monopulse system or CONSCAN can be employed to actively point to the beam peak.  On the other hand, the response of the focal plane array to off-axis signals is quite forgiving, as illustrated by the black curve on the figure. In this case the response is not limited by the inherent beamwidth of the antenna, but rather by the field of view of the array. For this particular magnification and array size pointing errors of greater than +/- 20 mdeg can be accommodated  by the array with essentially no gain loss These pointing requirements are consistent with typical 8 GHz \(X-Band\ues, allowing operation of the 70-meter antenna at 32 GHz with no requirement for an additional active pointing system or improvements to the present blind pointing performance of the antenna. While illustrated here for the 70-meter antenna, exactly the same advantages exist for application of the FPA on a smaller, 34-meter DSN antenna. Relaxation of antenna pointing requirements is considered a major advantage of the focal plane array over a single horn feed 3  S UMMARY AND C ONCLUSION  The operational advantages of a focal-plane array receiver for use on large antennas of the Deep Space Network have been discussed. Examples of gravity compensation of the 70-m antenna during 32-GHz operation has been used to illustrate these advantages. In addition, an adaptive 


10 algorithm for optimal combining of focal-plane array signals in a noisy environment, including interference, has been described and evaluated via simulation. Finally mitigation of antenna pointing errors via focal-plane array processing is illustrated, providing additional benefits over the use of a single receiving horn A CKNOWLEDGMENT  The research described in this paper was carried out at the Jet Propulsion Laboratory, California Institute of Technology, under a contract with the National Aeronautics and Space Administration R EFERENCES    V Vi l n rot t e r and Fort Dem onst r at i on and Eval uat i on of the Ka-Band Array Feed Compensation System on the 70-Meter Antenna at DSS 14," TMO PR 42-139, JulySeptember 1999, pp. 1-17, November 15, 1999    V Khai ki n, E. M a jorova, Yu. Pari jski j, M  Parnes, R   Shifman, V. Dobrov, V. Volkov, and S. Uman, “7x8 Element MMIC Array at 26-30 GHz for Radio Astronomy Applications,” in Proceedings of International Conference Perspective on Radio Astronomy: "Technologies for Large Antenna Arrays", The Netherlands, April 1999, pp.171182V  3 er, P. W In itial Stu d i es o f Array Feed s fo r th e 70-Meter Antenna at 32 GHz," TDA PR 42-104, OctoberDecember 1990, pp. 50-67, February 15, 1991  4 b r iale, W  A., M. J. Britcliffe, an d M. Bren n e r Gravity Deformation Measurements of NASA's Deep Space Network 70-Meter Reflector Antennas," IPN PR 42147, July-September 2001, pp. 1-15, November 15, 2001    L. Stutzm an and G.A Thiele  Antenna Theory and Design John Wiley and Sons Inc., New York, pp 210-218   V. Khai ki n, V. Dobrov, M  Parnes, V Vol kov A Golovkov, Yu. Rybakov, “Mu lti-channel array receiver modules for a radio telescope at 26-30 GHz,” in Proceedings of URSI/IEEE XXVII Convention on Radio Science, pp.176-178, Espoo, Finland, Oct.2002  7 ro tter, an d M. Srin iv asan Larg e Array Ch an n e l Capacity in the _Presence of Interference,” IPN PR 42-164 Jet Propulsion Laboratory, February 15, 2006  8 ro tter, V. A., Ro d e m i ch E. R., Dolinar, S. J., “Realtime combining of residual carrier array signals using ML weight estimates,” IEEE Tran sactions on Communications Volume 40, Issue 3, March 1992, pp. 604-615 B IOGRAPHY  Victor Vilnrotter  M'79, SM’02 received his Ph.D. in electrical engineering and communications theory from the University of Southern California in 1978.  He joined the Jet Propulsion Laboratory, Pasadena, Calif., in 1979, where he is a Principal Engineer in the Communications Systems Research section. His research interests include el ectronic compensation of large antennas with focal-plane arrays, adaptive combining algorithms for large antenna arrays, optical communications through atmospheric turbulence, and the application of quantum communications to deep-space optical links. He has published extensively in conferences and refereed journals, and has received numerous NASA awards for technical innovations   Michael Britcliffe earned the Bachelors of Science degree in Applied Physics from California State University Northridge in 1988. He has worked at the Jet Propulsion Laboratory since 1989 He is currently Technical Group Supervisor of the Antenna Microwave and Low Noise Amplifier group in the Ground Communications section   Daniel Hoppe received the BS and MS degrees in Electrical Engineering from the University of Wisconsin Madison in 1982 and 1983, and the Ph.D. from UCLA in 1994. In 1984 he joined the Jet Propulsion Laboratory in Pasadena CA where he is currently a Principal Engineer. At JPL he has developed software for the solution of electromagnetic scattering problems, designed microwave components for the large antennas of the Deep Space Network, and antennas for spacecraft applications Recently he worked on diffraction modeling of large spacebased telescopes. Dr. Hoppe is a part time lecturer teaching courses in electromagnetics and antennas at UCLA 


12 R Krishnapuram D Casasent Determination of threedimensional object location and orientation from Range Image IEEE Transactions on Pattern Analysis and Machine Intelligence 11\(11 1158 1167 November 1989 13 R Craig I Gravseth R P Earhart J Bladt S Barmhill L Ruppert C Centamore Processing 3D flash LADAR point-clouds in real-time for flight applications Proc SPIE 2007 Vol 6555 BIOGRAPHY Stphane Ruel is a project manager at Neptec Design Group in Ottawa Canada He currently leads development of novel 3D computer vision algorithms and sensor software for space applications Previously he served as an operations engineer on several Space Vision System SVS Space Shuttle missions He has a B.Sc in Computer Engineering and M.Sc in Aerospace Engineering from Laval University He is also alumni of the International Space University SSP in 2004 Tim Luu is a Vision Systems Engineer at Neptec Design Group Ltd At Neptec he develops 3D vision systems for space and defense applications Most of his time is spent developing real-time 3D pose estimation algorithms using sparse data from non-cooperative targets This research is mostly geared toward the field of autonomous rendezvous and docking Filling out his time is also control systems design 2D image registration onto 3D data as well as other 3D visualization techniques Tim received his M.A.Sc from Carleton University in Mechanical Engineering and his BASc from the University of British Columbia in Engineering Physics specializing in Mechanical Engineering 11 


 12 7  C ONCLUSIONS AND F UTURE W ORK  This research task started with an all-FORTRAN implementation of the FTIR spectrometry algorithm converted it to C code, and developed a number of H W/SW systems on the V4FX60 hybrid-FPGA The execution ti me of the all software C implementation of the FTIR spectrometry algorithm was recorded and used for comparison as a base case Two software-based optimizations were applied that reduced the executi on time by more than 4.5x These included modifying the cod e to use all single-precision math library functions no n-ANSI when dealing with single-precision data and utilizi ng the IBM Performance Libraries  Perflib  to improve the speed of all single and double-precision arithmetic The idea of using a DP-only Perflib was introduced and then used in conjunction with the single-precision APU-FPU to fu rther improve system performance The bulk of the research dealt with looking into ha rdwarebased improvements to the FTIR spectrometry system  These included the Xilinx APU-FPU, and a single-pre cision dot-product co-processor The APU-FPU delivered significant speedup for all single-precision floati ng-point operations The dot-product co-processor although ineffective in the FTIR spectrometry system due to poor spatial locality of the data, showed nearly a 2x im provement over the APU-FPU when working with smaller, sequent ially accessed data sets Furthermore it was implemented  as a load/store-based APU-connected FCM thus establishin g a reference for creating similar APU co-processors T he design of a non-system-bused CPU-coupled co-process or is frequently overlooked in design guides yet it is a  very effective way to offload software routines to hardw are implementation The ML410 development board on which all of this w ork was conducted, hosts the V4FX60 hybrid-FPGA contain ing two PPC405 processors This research task focused o n optimizing the performance of the FTIR spectrometry  algorithm on a single PPC405 core, however, the des ign can be extended to utilize both available cores. Figure 16 on the following page shows a dual-core design that can be  implemented on the ML410 board The two PPC405 processors each have dedicated PLB interfaces but s hare a common OPB. On the common OPB, the processors need to negotiate access to the RS232 UART and SystemACE CF  controller. This negotiation can be done through du al-ported shared BRAM accessible by each processor from thei r respective PLB. The ML410 board has two external me mory interfaces that are both utilized in this concept PPC405 CPU0 uses the DDR2 DIMM 256 Mbytes while PPC405 CPU1 utilizes the DDR on-board component memory 64  Mbytes\. Each of the processors has some dedicated on-chip memory OCM connected through OCM interface The instruction side OCM is particularly necessary so e ach processor can store its own boot code in its own on chip memory as booting both processors from external mem ory may not be possible Both processors have their own FPUs connected on dedicated FCB interfaces Since the processing of individual interferograms is a comple tely independent task an up to 2x reduction in executio n time may be possible with a dual-core system However o ne bottleneck that may limit the speedup is negotiatin g access to the shared CF card controller Additional improvement to the overall performance o f the FTIR spectrometry system may be possible by rewriti ng the software in C. The automatic conversion from FORTRA N to C using f2c most likely does not produce optimal code, and it is certainly not appealing to read Some functio ns may also need to be rewritten with an optimized pattern  of data access This can help in cases such as the dot-prod uct coprocessor Further performance improvement may be achieved by trying a different compiler one that is specifical ly targeted for the embedded PPC405 processor A V2P performanc e study done at the NASA Goddard Space Flight Center concluded that using the WindRiver Diab DCC 5.2 com piler provides a 38 performance increase over the GNU-GC C 3.4 compiler The comparison was based on running a  Dhrystone benchmark application on a 400 MHz PPC405 design The GNU-GCC compiler achieved 458 DMIPS while the WindRiver Diab DCC achieved 628 DMIPS as  reported by Xilinx\ [10   Implementing additional hardware co-processors may result in the further reduction of execution time Using t he dotproduct design as a reference the FFT function fo r example can be implemented in the hardware This w ill help in the spectrum computation component of the s oftware processing. It may be necessary to re-arrange the d ata access pattern for optimal co-processor performance to av oid the pitfall seen when deploying the dot-product core Finally, no embedded processing system is complete without an OS. Linux is a good choice and is supported by X ilinx in EDK It is important to first finalize the hardware  design prior to deploying the OS Support for the APU may be lacking in Linux and getting the OS to recognize th e hardware FPU may be a project in itself For the FTIR spectrometry algorithm this research task started the process of moving from an all software system to a mixed HW/SW implementation on the V4FX60 hybridFPGA In the best case a more than 8x speedup was achieved compared to the FTIR base system This implementation, although nearly 2x faster the V2P s ystem at NASA JPL still lags behind the current state-of-th e-art space processor  the BAE RAD750 However the marg in between the two was narrowed down significantly and with further research as suggested above will most lik ely be eliminated altogether Directly benefiting from the  work presented in this paper is a 3-year JPL technology 


 13 development task that will support the MATMOS on-bo ard processing implementation for a future flight i nstrument   Fig. 16 Dual-core concept targeting ML410 development boar d 


 14 R EFERENCES  1  D L Bekker Hardware and Software Optimization of Fourier Transform Infrared Spectrometry on HybridFPGAs  MS Thesis Rochester Institute of Technology Rochester NY August 2007 Available http://hdl.handle.net/1850/4805  2  P J Pingree J.-F L Blavier G C Toon and D  L Bekker An FPGA/SoC Approach to On-Board Data Processing  Enabling New Mars Science with Smart Payloads in IEEE Aerospace Conference 2007  Big Sky MT March 2007 Available http://ieeexplore.ieee.org/xpl/freeabs_all.jsp?isnu mber=4 144550&arnumber=4161501  3  S I Feldman D M Gay M W Maimone and N L Schryer, “A Fortran-to-C Converter,” Computing Scie nce Technical Report 149, AT&T Bell Laboratories, Murra y Hill NJ March 22 1995 Available http://www.netlib.org/f2c/f2c.pdf  4  IBM PowerPC Embedded Processor Performance Libraries tech rep IBM Microelectronics Divisi on Hopewell Junction, NY, December 12 2003 5  Virtex-4 Data Sheet: DC and Switching Characterist ics Datasheet DS302 Xilinx Inc San Jose CA March 27 2007 Available http://www.xilinx.com/bvdocs/publications/ds302.pdf  6  ML410 Embedded Development Platform  Xilinx Inc San Jose CA March 6 2007 Available http://www.xilinx.com/bvdocs/userguides/ug085.pdf  7  G Toon J.-F Blavier M McAuley and A Kiely Advanced On-Board Science Data Processing System for a Mars-orbiting FTIR Spectrometer R&TD Task 01STCR  R.05.023.048 NASA Jet Propulsion Laboratory Pasadena, CA, 2005 8  APU Floating-Point Unit v3.0 product specificati on Xilinx Inc San Jose CA January 26 2007 Availa ble http://www.xilinx.com/bvdocs/ipcenter/data_sheet/ap u_fp u.pdf  9  PowerPC 405 Processor Block Reference Guide Xilinx Inc San Jose CA July 20 2005 Available www.xilinx.com/bvdocs/userguides/ug018.pdf  10  D. Petrick, “Analyzing the Xilinx Virtex-II Pro Pow erPC with the Dhrystone Benchmark Applications,” tech. r ep NASA Goddard Space Flight Center Greenbelt Maryland Available http://klabs.org/DEI/Processor/PowerPC/v2pro_ppc_pe rf ormance_petrick.doc  B IOGRAPHY  Dmitriy Bekker has just completed his Masters Degree in Computer Engineering at the Rochester Institute of Technology in Rochester NY His areas of interest include FPGAs embedded systems digital signal processing and system architecture. He has coop  internship experience working at Brookhaven National Laboratory Syracuse Research Corporation NASA Dryden Flight Research Center, and the Jet Propulsion Laboratory. He recen tly won in the 2006 IEEE Student Design Contest for his pro ject in autonomous vehicle navigation. He is a member of IE EE Dr Lukowiak is an assistant professor in the Computer Engineering Department at Rochester Institute of Technology in Rochester NY His research interests are concentrated in the area of multidisciplinary projects that require modeling and hardware implementations FPGA and ASIC of data processing systems Dr Marcin Lukowi ak obtained his Ph.D in Technical Sciences from the P oznan University of Technology in October 2001 Muhammad Shaaban is an associate professor of computer engineering at the Rochester Institute of Technology His research interests include high performance computing processor microarchitecture heterogeneous and reconfigurable computing Shaaban has a PhD in Computer Engineering from the University of Souther n California. He is a senior member of the IEEE Dr. Blavier first joined the JPLMkIV Team in August 1985 as a contractor from Ball Aerospace He participated in the MkIV campaigns in McMurdo Antarctica groundbased and from Punta Arenas Chile NASA DC-8 In late 1987, he started graduate work with Profs Delbouille and Dubois at the University  of Liège Belgium his research tasks included install ing the 


 15 Fourier transform spectrometers at the Internationa l Scientific Station of the Jungfraujoch Switzerland  for atmospheric measurements and at the Institute of Astrophysics in Liège for laboratory measurements He was hired by JPL in August 1990 as MkIV cognizant engin eer and participated in all the MkIV campaigns since th en \(one DC-8 campaign 19 balloon campaigns Dr J.-F Bla vier obtained his Ph.D in Physics from the University o f Liège in July 1998 Paula Pingree is a Senior Engineer in the Instruments and Science Data Systems Division at JPL She has been involved in the design integration test and operation of several JPL flight projects most recently Deep Impact DI She has worked on the Tunable Laser Spectrometer development for the 2009 Mars Rover and is presently the Electronics CogE for the Juno Mission s Microwave Radiometer She also enjoys research and technology development for Smart Payloads in her s pare time Paula has a Bachelor of Engineering degree i n Electrical Engineering from Stevens Institute of Te chnology in Hoboken, NJ, and an MSEE degree from California State University Northridge.  She is a member of IEEE 


 16  A High Capacity Solid Sate Recorder \(HC-SSR\is suggested using devices predicated to be available for each decade.   The design is robu st and easily implemented using conservative design and manufacturing techniques D EFINITIONS  rad radiation absorbed dose\:   the dose causing 0.01 joule of energy to be absorbed per kilogram of matter.   As the absorption is greatly affected by the molecular structure of the material, citations should al so indicate the material as a subscript to the term 223rad\224, as in rad Si indicating Silicon equivalency.  For the purposes of this paper, radiation equivalency always assumes Silicon For completeness, it should be noted that System International replaced the \223rad\224 with the unit Gr ay \(Gy\nd having an equivalency of 100 rads = 1 Gy [27 How e v e r   the use of rads, kilorads, megarads remains in the industry vernacular and is used in this document Moore\222s Law Named after Fairchild Semiconductor technologist Gordon Moore, Moore\222s law was derived from empirical data which shows that the dimensions of basic memory cells will shrink by approximately 50% of the previous value every 30 to 36 months.  It is Moore\222s Law more or less, that forms the backbone of the ITRS examinations for memory devices A DDITIONAL M ATERIAL  Standard Dose Rates for Various Orbits and Missions per year Earth    LEO  100 rad \(protons  MEO  100 krad \(protons electrons  GEO  1 krad \(electrons  Transfer Orbit  10 krad \(protons electrons Mars     Surface  2 krad \(electrons  Orbit  5 krad \(protons  Transit  5 krad \(protons Jovian     Transfer  100 Mrad \(protons electrons A CKNOWLEDGEMENT  The research described in this paper was carried out at the Jet Propulsion Laboratory, California Institute of Technology, under a contract with the National Aeronautics and Space Administration.   The Author thanks the many who guided the concept and offered support all along the way.   With special thanks to fellow-JPL\222ers Gary Noreen who provided funding\nd Taher Daud who provided editing ad-hoc extraordinaire  R EFERENCES    G M o o r e C r a m m i ng m o re C o m pone nt s o n t o  Integrated Circuits Electronics vol. 38, no. 8, April 1965 2 G M o ore, "No Expo n e n tial is Forev er: B u t 223Forever\224 Can Be Delayed Digest of Technical Papers, International Solid State Circuits Conference pp. 1.1-1 thru 1.1-19, 2003  S eagate Tec hnology Com p any. Seagate Tec hnical Corporation. [Onlin http://www.seagate.com/docs/pdf/marrketing/Article _Perpendicular_Recording.pdf   B l u R ay Di sc Ass o ci at i on  2 00 5 M a rc h B l u-R a y  Disc Technical Papers  J Vel e v K  D B e l a shche n ko  an d et _al   2 0 0 7  October\ MSREC - University of Nebraska Onlin http://www.mrsec.unl.edu/research/nuggets/nugget_2 6.shtml  6 R Katti, "Honeywell Rad i atio n Hard en ed  No nVolatile Memory \(MRAM\ Product Development in Proceedings, IEEE No n-Volatile Memory Technology Symposium Orlando, 2004, pp. L2:1-15 7 S aif u n  Sem ico n d u c tor  2 008 NV M Techno log y  Over http://www.saifun.com/content.asp?id=113  


 17    J. Ta usc h  S. T y son a n d T T a i r ba nks  Multigenerational Radiation Response Trends in SONOSb ased NROM Flash Memories with Neutron Latch-up Mitigation," in NSREC Radiation Effects Workshop Honolulu, 2007, pp. 189-193 9  Semico n du c to r In du str y A s sociatio n SIA  2 008   August\ Home. [Online  www.itrs.net  1  S. Ty s o n P ri v a t e C o m m uni que Tra n sEl  Semiconductor, Albuquerque, NM, 2008 1  T. M i k o l a ji c k  and C U Pi n n o w  2 00 8 N o vem b er Indo-German Winter Academy, 2008, Course 3 Onlin http://www.leb.eei.unierlangen.de/winterakadem ie/2008/courses/course3_ material/futureMemory/Mikolajick_TheFutureofNV M.pdf   BAE System s North Am erica, [Data Sheet Microcircuit, CMOS, 3.3V, NVRAM 8406746, April 28, 2008, Rev A 1  N Ha dda d a n d T Scot t  A da pt i n g C o m m erci al  Electronics to the Natura lly Occurring Radiation Environment," in IEEE Nuclear and Space Radiation Effects Conference Short Course Tucson, 1994, pp iv-14 1  D. R  R o t h a n d et _al S EU a n d TI D Test i n g of t h e Samsung 128 Mbit and the Toshiba 256 Mbit flash memory," in Radiation Effects Data Workshop  Reno, 2000 1  F. I r o m and D N guy e n  S i n gl e E v ent  Ef fe ct  Characterization of High Density Commercial NAND and NOR Nonvolatile Flash Memories Honolulu, 2007 1  C Ha fer M  L a hey a n d et _al R adi a t i o n H a rd ness  Characterization of a 130nm Technology," in Proceedings IEEE Nuclea r and Space Radiation Effects Conference Honolulu, 2007 17  T. R O l dh am J. Fr iend lich  an d et_ a l, "TID  an d SEE Response of an Advanced Samsung 4Gb NAND Flash Memory," , Honolulu, 2007  R. C. Lac o e C MOS Scaling, Desi gn Princi ples a n d Hardening-by-Design Methodologies," in Nuclear and Space Radiation Effects Conference Short Course Notebook Monterey, 1993, pp. II-1 thru II142 1 J. Pat t e rs o n a n d S  Gue rt i n   E m e rgi ng S E F I M o des and SEE Testing for Highly-Scaled NAND FLASH Devices," in Proceedings 2005 Non-Volatile Memory Technology Symposium vol. CD-ROM, Dallas, TX 2005, pp. G-3, Session G ; Paper 3 2 J. Ta usc h  S. T y son a n d T F a i rba nks  Mulitgenerational Radiation Response Trends in SONOSb ased NROM Flash Memories with Neutron Latch-up Mitigation," in Honolulu Radaition Effects Data Workshop, NSREC, 2007, pp. 189-193 2 M Janai  B Ei t a n A Sha p pi r I B l o o m and G  Cohen, "Data Retention Reliability Model of NROM Nonvolatile Memory Products IEEE Transactions on Device and Materials Reliability vol. 4, no. 3, pp 404-415, September 2004 2 D N g uy en a n d F I r o m Tot al Io ni zi n g  Do se \(T ID  Tests on Non-Volatile Memories: Flash and MRAM," in 2007 IEEE Radiation Effects Workshop  vol. 0, Honolulu, 2007, pp. 194-198  G. Noree n  a n d et_al L ow Cost Deep Space Hybrid Optical/RF Communications Architecture," , Big Sky, Montana, 2009, Pre-print 2 T. Sasa da a n d S. I c hi kawa  A p p l i cat i o n o f  Sol i d  State Recorders to Spacecraft," in Proceedings, 54th International Astronautical Cogress Bremen, 2003 2 H Ka nek o  E rr or C o nt r o l C odi ng f o r  Semiconductor Memory Systems in the Space Radiation Environment," in Proceedings, 20th IEEE International Symposium in Defect and Fault Tolerance in VLSI Systems, DFT2005 Monterey 2005 2 T. Sasa da a n d H Ka nek o  D evel o p m e nt an d Evaluation of Test Circuit for Spotty Byte Error Control Codes," in Proceedings, 57th International 


 18  Astronautical Congress Valencia, 2006 27  Bu reau  In tern atio n a l d e s Po ids et Mesures. \(2 008  August\SI Base Units. [On http://www.bipm.org/en/si/base_units   B IOGRAPHY  Author, Karl Strauss, has been employed by the Jet Propulsion Laboratory for over 22 years.  He has been in the Avionics Section from day One.  He is considered JPL\222s memory technology expert with projects ranging from hand-woven core memory \(for another employer\o high capacity solid state designs.  He managed the development of NASA\222s first Solid State Recorder, a DRAM-based 2 Gb design currently in use by the Cassini mission to Satu rn and the Chandra X-Ray observatory in Earth Orbit.  Karl was the founder, and seven-time chair of the IEEE NonVolatile Memory Technology Symposium, NVMTS, deciding that the various symposia conducted until then were too focused on one technology.  Karl is a Senior IEEE member and is active in the Nuclear and Plasma Scie nce Society, the Electron Device Society and the Aerospace Electronic Systems Society Karl is also an active member of SAE Karl thanks his wonderful wife of 28 years, Janet, for raising a spectacular family: three sons, Justin, Jeremy Jonathan.  Karl\222s passion is trains and is developing a model railroad based upon a four-day rail journey across Australia\222s Northern Outback   


 19 Bollobás, B. 2001. Random Graphs. Cambridge University Press; 2nd edition. 500pp  Cawley, G. C., B. L. C. Talbot, G. J. Janacek, and M. W Peck. 2006. Sparse Bayesian Ke rnel Survival Analysis for Modeling the Growth Domain of Microbial Pathogens  Chiang C. L. 1960. A stochastic study of life tables and its applications: I. Probability distribution of the biometric functions. Biometrics, 16:618-635  Cox,  D. R. 1972. Regression models and life tables J. R Stat. Soc. Ser. B 34:184-220  Cox, D. R. 1975.   Partial likelihood Biometrika 62:269276  Cox, D. R. & D. Oakes. 1984 Analysis of Survival Data  Chapman & Hall. London  Cressie, N. A. 1993 Statistics for Spatial Data John Wiley Sons. 900pp  Duchesne, T. 2005. Regression models for reliability given the usage accumulation history. In "Modern Statistical and Mathematical Methods in Reliability". Edited by A. Wilson N. Limnios, S. Kelly-McNulty Y. Armijo. pp.29-40. World Scientific, New Jersey  Eleuteri, A., R. Tagliaferri, L. Milano, G. Sansone, D D'Agostino, S. De Placido,  M. Laurentiis. 2003.  Survival analysis and neural networks. Proceedings of the International Joint Conference on Neural Networks, Vol. 4 20-24 July 2003 Page\(s\:2631 - 2636  Ellison, E., L. Linger, and M Longstaff. 1997.  Survivable Network Systems: An Emerging Discipline, Carnegie Mellon, SEI, Technical Report CMU/SEI-97-TR-013, 1997  Fleming, T. R. & D. P. Harrington. 1991. Counting process and survival analysis. John Wiley & Sons. 429pp  Graver, J. and M. Sobel 2005. You may rely on the Reliability Polynomial for much more than you might think Communications in Statistics: Theory and Methods  34\(6\1411-1422  Graves, T. and M. Hamada. 2005. Bayesian methods for assessing system reliability: models and computation. In Modern Statistical and Mathematical Methods in Reliability". Edited by A. Wilson, et al. pp.41-53  Grimmett, G. 2006 The Random-Cluster Model Springer  Grimmett, G. 1999 Percolation Springer  Hougaard, P. 2000. Analysis of Multivariate Survival Data Springer. 560pp  Ibrahim, J. G., M. H. Chen and D. Sinha. 2005. Bayesian Survival Analysis.  Springer. 481pp  Jin Z. 2005. Non-proportional semi-parametric regression models for censored data. In "Modern Statistical and Mathematical Methods in Reliability". Edited by A. Wilson N. Limnios, S. Kelly-McNulty, Y. Armijo. pp.279-292 World Scientific  Kalbfleisch, J. D. & R. L. Prentice. 1980 The Statistical Analysis of Failure Time Data John Wiley & Sons.  New York. 1980  Kalbfleisch, J. D. &  R. L. Prentice, 2002. The Statistical Analysis of Failure Time Data.  Wiley-InterScience, 2nd ed 462pp  Lisboa, P. J. G. and H. Wong. 2001. Are neural networks best used to help logistic regression? Proceedings of International Joint Conference on Neural Networks, IJCNN 01. Volume 4, 15-19,  July 2001. Page\(s\:2472 - 2477 vol.4  Kauffman, R. J. and B. Wang. 2002. Duration in the Digital Economy. Proceedings of th e 36th Hawaii International Conference on System Sciences \(HICSS’03\ Jan 2003  Kaplan, E. L. & P.  Meier.  1958.  Nonparametric estimation from incomplete observations J. Amer. Statist. Assoc  53:457-481  Klein, J. P. and P. K. Goel 1992. Survival Analysis: State of the Art.  Kluwer Academic Publishes. 450pp  Klein, J. P. and  M. L Moeschberger. 20 03. Survival analysis techniques for ce nsored and truncated data Springer  Krings, A. and Z. S. Ma. 2006.  "Fault-Models in Wireless Communication: Towards Survivable Ad Hoc Networks MILCOM 2006, Military Communications Conference, 2325 October, 7 pages, 2006  Krings, A. W. 2008.  Survivable Systems.  in Information Assurance: Dependability and Security in Networked Systems Yi Qian, James Joshi, David Tipper, and Prashant Krishnamurthy, Morgan Kaufmann Publishers. \(in press  Lawless, J. F. 1982. Statistical models and methods for lifetime data.  John Wiley & Sons. 579pp  Lawless, J. F. 2003. Statistical models and methods for lifetime data.  John Wiley & Sons. 2nd ed. 630pp  Li, M. and P. Vitanyi. 1997. Introduction to  Kolmogorov Complexity and Its Applications. 2nd ed, Springer  Ma, Z. S. 1997.  Survival analysis and demography of Russian wheat aphid populations.  Ph.D dissertation, 307pp University of Idaho Moscow, Idaho, USA 


 20 Ma, Z. S., and E. J. Bechinski. 2008.  Developmental and Phenological Modeling of Russian Wheat Aphid Annals of Entomological Soc. Am In press  Ma, Z. S. and A. W. Krings. 2008a. The Competing Risks Analysis Approach to Reliability Survivability, and Prognostics and Health Management.  The 2008 IEEEAIAA AeroSpace Conference. BigSky, Montana, March 18, 2008. \(In Press, in the same volume  Ma, Z. S. and A. W. Krings 2008b. Multivariate Survival Analysis \(I\e Shared Frailty Approaches to Reliability and Dependence Modeling. The 2008 IEEE-AIAA AeroSpace Conference. BigSky Montana, March 1-8, 2008 In Press, in the same volume  Ma, Z. S. and A. W. Krings. 2008c. Multivariate Survival Analysis \(II\ Multi-State Models in Biomedicine and Engineering Reliability. 2008 IEEE International Conference on Biomedical Engineering and Informatics BMEI 2008\27th-30th, 2008 Accepted   Mani, R., J. Drew, A. Betz, P. Datta. 1999. Statistics and Data Mining Techniques for Lifetime Value Modeling ACM Conf. on Knowledge Discovery and Data Mining  Mazzuchi, T. A., R Soyer., and R. V Spring. 1989. The proportional hazards model in reliability. IEEE Proceedings of Annual Reliability and Maintainability Symposium pp.252-256  Meeker, W. Q. and L. A. Escobar. 1998. Statistical Methods for Reliability Data. Wiley-Interscience  Munson, J. C. 2003. Software Engineering Measurement Auerbach Publications  Nelson, W. 1969. Hazard plotting for incomplete failure data J. Qual. Tech 1:27-52  Nakagawa, T. 2006.  Shock and Damage Models in Reliability Theory. Springer  Osborn, B. 2005. Leveraging remote diagnostics data for predictive maintenance.   In "Modern Statistical and Mathematical Methods in Reliability". Edited by A. Wilson N. Limnios, S. Kelly-McNulty, Y. Armijo. pp. 353-363  Pena, E. A. and E. H. Slate. 2005. Dynamic modeling in reliability and survival analysis. In "Modern Statistical and Mathematical Methods in Reliability". Edited by A. Wilson N. Limnios, S. Kelly-McNulty, Y. Armijo. pp.55-71  Reineke, D. M., E. A. Pohl, and W. P. Murdock. 1998 Survival analysis and maintenance policies for a series system, with highly censore d data.  1998 Proceedings Annual Reliability and Maintainability Symposium. pp 182-188  Schabenberger, O. and C. A. Gotway. 2005. Statistical Methods for Spatial Data Analysis.  Chapman & Hall/CRC  Severini, T. A. 2000. Likelihood methods in statistics Oxford University Press  Shooman, M. L. 2002. Reliability of Computer Systems and Networks: Fault Tolerance, Analysis and Design. John Wiley and Sons. 551pp  Stillman, R. H. and M. S. Mack isack, B. Sharp, and C. Lee 1995. Case studies in survival analysis of overhead line components. IEE Conferen ce of the Reliability and Distribution Equipment. March 29-31, 1995. Conference Publication No. 406. pp210-215  Therneau, T. and P. Grambsch. 2000 Modeling Survival Data: Extending the Cox Model Springer  Wilson, A.  N. Limnios, S Kelly-McNulty, Y. Armijo 2005. Modern Statistical and Mathematical Methods in Reliability. World Scientific, New Jersey  Xie, M. 1991. Software Reliability Modeling. World Scientific Press    B IOGRAPHY   Zhanshan \(Sam\ Ma holds a Ph.D. in Entomology and is a Ph.D. candidate in Computer Science at the University of Idaho. He has published approximately 30 journal and 30 conference papers, mainly in the former field.  Prior to his recent return to academia, he worked as senior network/software engineers in software industry.  His current research interests include reliability and survivability of wireless sensor networks, fault tolerance survival analysis, evolutionary game theory, evolutionary computation and bioinformatics  Axel W. Krings is a professor of Computer Science at the University of Idaho.  He received his Ph.D. \(1993\ and M.S 1991\ degrees in Computer Science from the University of Nebraska - Lincoln, and his M.S. \(1982\ in Electrical Engineering from the FH-Aachen, Germany.  Dr. Krings has published extensively in the area of Computer Network Survivability, Security, Fault-Tolerance and Realtime Scheduling. In 2004/2005 he was a visiting professor at the Institut d'Informatique et Mathématiques Appliquées de Grenoble, at the Institut National Polytechnique de Grenoble, France.  His work has been funded by DoE/INL DoT/NIATT, DoD/OST and NIST 


States\nWAb-3.4: NEW RESULTS IN THE ANALYSIS OF DECISION-FEEDBACK 2118\nEQUALIZERS\nAhmed Mehana, Samsung Electronics, Co Ltd., United States; Aria Nosratinia, University of Texas at \nDallas, United States\nWAb-5: TARGET TRACKING II\nWAb-5.1: POSTERIOR DISTRIBUTION PREPROCESSING FOR PASSIVE 2125\nDTV RADAR TRACKING: SIMULATED AND REAL DATA\nEvan Hanusa, Laura Vertatschitsch, David Krout, University of Washington, United States\nWAb-5.2: DEPTH-BASED PASSIVE TRACKING OF SUBMERGED SOURCES  ............................................2130\nIN THE DEEP OCEAN USING A VERTICAL LINE ARRAY\nLisa Zurk, John K. Boyle, Jordan Shibley, Portland State University, United States\nWAb-5.3: GENERALIZED LINEAR MINIMUM MEAN-SQUARE ERROR 2133\nESTIMATION WITH APPLICATION TO SPACE-OBJECT TRACKING\nYu Liu, X. Rong Li, Huimin Chen, University of New Orleans, United States\nWAb-5.4: FEATURE-AIDED INITIATION AND TRACKING VIA TREE SEARCH ..........................................2138\nHossein Roufarshbaf Jill Nelson, George Mason University, United States\nxxxiii\nWAb-6: DIRECTION OF ARRIVAL ESTIMATION\nWAb-6.1: A SELF-CALIBRATION TECHNIQUE FOR DIRECTION 2145\nESTIMATION WITH DIVERSELY POLARIZED ARRAYS\nBenjamin Friedlander, University of California, Santa Cruz, United States\nWAb-6.2: CRAMER-RAO PERFORMANCE BOUNDS FOR SIMULTANEOUS  ..............................................2150\nTARGET AND MULTIPATH POSITIONING\nLi Li, Jeff Krolik, Duke University, United States\nWAb-6.3: COPY CORRELATION DIRECTION-OF-ARRIVAL ESTIMATION  .................................................2155\nPERFORMANCE WITH A STOCHASTIC WEIGHT VECTOR\nChrist Richmond, Keith Forsythe, MIT Lincoln Laboratory, United States; Christopher Flynn, Stevens nInstitute of Technology, United States\nWAb-6.4: LOCATING CLOSELY SPACED COHERENT EMITTERS USING 2160\nTDOA TECHNIQUES\nJack Reale, Air Force Research Laboratory / Binghamton University, United States; Lauren Huie, Air \nForce Research Laboratory, United States Mark Fowler, State University of New York at Binghamton, \nUnited States\nWAb-7: ENERGY- AND RELIABILITY-AWARE DESIGN\nWAb-7.1: LOW-ENERGY ARCHITECTURES FOR SUPPORT VECTOR 2167\nMACHINE COMPUTATION\nManohar Ayinala, Keshab K Parhi, University of Minnesota, United States\nWAb-7.2: TRUNCATED MULTIPLIERS THROUGH POWER-GATING FOR 2172\nDEGRADING PRECISION ARITHMETIC\nPietro Albicocco, Gian Carlo Cardarilli, University of Rome Tor Vergata, Italy; Alberto Nannarelli, \nTechnical University of Denmark Denmark; Massimo Petricca, Politecnico di Torino, Italy; Marco Re, \nUniversity of Rome Tor Vergata Italy\nWAb-7.3: A LOGARITHMIC APPROACH TO ENERGY-EFFICIENT GPU 2177\nARITHMETIC FOR MOBILE DEVICES\nMiguel Lastras Behrooz Parhami, University of California, Santa Barbara, United States\nWAb-7.4: ON SEPARABLE ERROR DETECTION FOR ADDITION ..................................................................2181\nMichael Sullivan, Earl Swartzlander, University of Texas at Austin, United States\nWPb-1: PAPERS PRESENTED IN 2012\nWPb-1.1 DYNAMICALLY RECONFIGURABLE AVC DEBLOCKING FILTER  .............................................2189\nWITH POWER AND PERFORMANCE CONSTRAINTS\nYuebing Jiang, Marios Pattichis, University of New Mexico\nxxxiv\n 


on science teams for numerous planetary missions including Magellan, Mars Observer, Mars Global Surveyor and Rosetta. He was the US Project Scientist for the international Mars NetLander mission, for which he was also principal investigator of the Short-Period Seismometer experiment, and is currently the Project Scientist for the Mars Exploration Rovers. He led the Geophysics and Planetary Geology group at JPL from 1993-2005, and is the JPL Discipline Program Manager for Planetary Geosciences. He has held several visiting appointments at the Institut de Physique du Globe de Paris. He has a BS in physics and a PhD in geophysics from the University of Southern California  David Hansen is a member of the technical staff in the Communications Systems and Operations Group at the Jet Propulsion Laboratory. Current work includes the development of the telecom subsystem for the Juno project. David received a B.S. in Electrical Engineering from Cornell University and an M.S. in Electrical Engineering from Stanford University  Robert Miyake is a member of the technical staff in the Mission and Technology Development Group at the Jet Propulsion Laboratory. Current work includes the development of thermal control subsystems for interplanetary flagship missions to Jupiter and Saturn missions to Mars and the Earth Moon, and is the lead Thermal Chair for the Advanced Project Design Team Robert graduated with a B. S. from San Jose State University, with extensive graduate studies at UCLA University of Washington, and University of Santa Clara  Steve Kondos is a consultant to the Structures and Mechanisms group at the Jet Propulsion Laboratory. He currently is generating the mechanical concepts for small Lunar Landers and Lunar Science Instrument packages in support of various Lunar mission initiatives. He also provides conceptual design, mass and cost estimating support for various Team X studies as the lead for the Mechanical Subsystem Chair. Steve is also involved with various other studies and proposals and provides mentoring to several young mechanical and system engineers. He graduated with a B.S. in Mechanical Engineering from the University of California, Davis and has 28 years of experience in the aerospace field ranging from detail part design to system of systems architecture development. He has worked both in industry and in government in defense, intelligence commercial and civil activities that range from ocean and land based systems to airborne and space systems. Steve has received various NASA, Air Force, Department of Defense and other agency awards for his work on such projects as the NASA Solar Array Flight Experiment, Talon Gold, MILSTAR, Iridium, SBIRS, Mars Exploration Rovers ATFLIR, Glory Aerosol Polarimeter System and several Restricted Programs  Paul Timmerman is a senior member of technical staff in the Power Systems Group at the Jet Propulsion Laboratory Twenty-five years of experience in spacecraft design including 22 at JPL, over 250 studies in Team-X, and numerous proposals. Current assignments include a wide variety of planetary mission concepts, covering all targets within the solar system and all mission classes. Paul graduated from Loras College with a B.S. in Chemistry in 1983  Vincent Randolph is a senior engineer in the Advanced Computer Systems and 


the Advanced Computer Systems and Technologies Group at the Jet Propulsion Laboratory. Current work includes generating Command and Data Handling Subsystem conceptual designs for various proposals and Team X.  He also supports Articulation Control and Electronics design activities for the Advanced Mirror Development project. Vincent graduated from the University of California at Berkeley with a B.S. in Electrical Engineering 18  pre></body></html 


i models into time and covariate dependent dynamic counterparts  ii models and reliability analysis in a more realistic manner  iii level  whether or not functional components \(loyal generals diagnose correctly and take proper actions such as fault mask of failed components \(traitors asymmetric  iv survivability analysis. Evolutionary game modeling can derive sustainable or survivable strategies \(mapped from the ESS in EGT such as node failures such as security compromise level modeling in the so-called three-layer survivability analysis developed in Ma \(2008a this article  v offer an integrated architecture that unite reliability survivability, and fault tolerance, and the modeling approaches with survival analysis and evolutionary game theory implement this architecture. Finally, the dynamic hybrid fault models, when utilized to describe the survival of players in EGT, enhance the EGT's flexibility and power in modeling the survival and behaviors of the game players which should also be applicable to other problem domains where EGT is applicable  5. OPERATIONAL LEVEL MODELING AND DECISION-MAKING  5.1. Highlights of the Tactical and Strategic Levels  Let's first summarize what are obtainable at both tactical and strategic levels. The results at both tactical and strategic levels are precisely obtainable either via analytic or simulation optimization. With the term precisely, we mean that there is no need to assign subjective probabilities to UUUR events. This is possible because we try to assess the consequences of UUUR events \(tactical level ESS strategies \(strategic level time prediction of survivability. The following is a list of specific points. I use an assumed Wireless Sensor Network WSN  i of UUUR events: \(a actions which can be treated as censored events; \(b Cont' of Box 4.2 It can be shown that the replicator differential equations are equivalent to the classical population dynamics models such as Logistic differential equation and LotkaVolterra equation \(e.g., Kot 2001 Logistic equation, or the limited per capital growth rate is similar to the change rate of the fitness  xfxfi which can be represented with the hazard function or survivor functions introduced in the previous section on survival analysis.  This essentially connects the previous survival analysis modeling for lifetime and reliability with the EGT modeling. However, EGT provides additional modeling power beyond population dynamics or survival analysis approaches introduced in the previous section. The introduction of evolutionary theory makes the games played by a population evolvable. In other words, each player \(individual 


other words, each player \(individual agent and players interact with each other to evolve an optimized system Box 4.3. Additional Comments on DHF Models  The above introduced EGT models are very general given they are the system of ordinary differential equations. Furthermore, the choice of fitness function f\(x complexity to the differential equation system.  The system can easily be turned into system of nonlinear differential equations. The analytical solution to the models may be unobtainable when nonlinear differential equations are involved and simulation and/or numerical computation are often required  In the EGT modeling, Byzantine generals are the game players, and hybrid fault models are conveniently expressed as the strategies of players; the players may have different failure or communication behaviors Furthermore, players can be further divided into groups or subpopulations to formulate more complex network organizations. In the EGT modeling, reliability can be represented as the payoff \(fitness, the native term in EGT of the game. Because reliability function can be replaced by survivor function, survival analysis is seamlessly integrated into the EGT modeling. That is, let Byzantine generals play evolutionary games and their fitness reliability function  The evolutionary stable strategy \(ESS counterpart of Nash equilibrium in traditional games ESS corresponds to sustainable strategies, which are resistant to both internal mutations \(such as turning into treason generals or nodes such as security compromises represent survivable strategies and survivability in survivability analysis. Therefore, dynamic hybrid fault models, after the extension with EGT modeling, can be used to study both reliability and survivability 13 risks such as competing risks which can be described with CRA; \(c captured with the shard frailty.  We believe that these UUUR events are sufficiently general to capture the major factors/events in reliability, security and survivability whose occurrence probabilities are hard or impossible to obtain  Instead of trying to obtain the probabilities for these events which are infeasible in most occasions, we focus on analyzing the consequences of the events.  With survival analysis, it is possible to analyze the effects of these types of events on survivor functions. In addition, spatial frailty modeling can be utilized to capture the heterogeneity of risks in space, or the spatial distribution of risks \(Ma 2008a d UUUR events introduced previously. These approaches and models that deal with the effects of UUUR events form the core of tactical level modeling  To take advantage of the tactical level modeling approaches it is obviously necessary to stick to the survivor functions or hazard functions models. In other words, survival analysis can deal with UUUR events and offer every features reliability function provides, but reliability function cannot deal with UUUR events although survivor function and reliability function have the exactly same mathematical definition. This is the junction that survival analysis plays critical role in survivability analysis at tactical level. However, we 


recognize that it is infeasible to get a simple metric for survivability similar to reliability with tactical level modeling alone. Actually, up to this point, we are still vague for the measurement of survivability or a metric for survivability. We have not answered the question: what is our metric for survivability? We think that a precise or rigorous definition of survivability at tactical level is not feasible, due to the same reason we cited previously  the inability to determine the probabilities of UUUR events However, we consider it is very helpful to define a work definition for survivability at the tactical level  We therefore define the survivability at tactical level as a metric, Su\(t t function or reliability function with UUUR events considered. In the framework of three-layer survivability analysis, this metric is what we mean with the term survivability. The "metric" per se is not the focus of the three-layer survivability analysis. It is not very informative without the supports from the next two levels  strategic and operational models.  However, it is obvious that this metric sets a foundation to incorporate UUUR effects in the modeling at the next two levels  Due to the inadequacy of tactical level modeling, we proposed the next level approach  strategic level modeling for survivability. As expected, the tactical level is one foundation of strategic level modeling ii objectives: \(a affect survivability which survival analysis alone is not adequate to deal with; \(b survivability at tactical level is necessary but not sufficient for modeling survivability, we need to define what is meant with the term survivability at strategic level  With regard to \(a behaviors or modes which have very different consequences. These failure behaviors can be captured with hybrid fault models. However, the existing hybrid fault models in fault tolerance field are not adequate for applying to survivability analysis. There are two issues involved: one is the lack of real time notion in the constraints for hybrid fault models \(e.g., N&gt;3m+1 for Byzantine Generals problem synthesize the models after the real-time notions are introduced. The solution we proposed for the first issue is the dynamic hybrid fault models, which integrate survivor functions with traditional hybrid fault models. The solution we proposed for the second issue is the introduction of EGT modeling  With regard to \(b modeling our problem at strategic level, EGT modeling is essentially a powerful optimization algorithm.  One of the most important results from EGT modeling is the so-called evolutionary stable strategies \(ESS We map the ESS in EGT to survivable strategies in survivability analysis.   Therefore, at the strategic level, our work definition for survivability refers to the survivable strategies or sustainable strategies in the native term of EGT, which can be quantified with ESS  In addition to integrating dynamic hybrid fault models another advantage for introducing EGT modeling at strategic level is the flexibility for incorporating other node behaviors \(such as cooperative vs. non-cooperative those behaviors specified in standard hybrid fault models, as well as anthropocentric factors such as costs constraints  Without UUUR events, both tactical and strategic level 


Without UUUR events, both tactical and strategic level models default to regular reliability models. This implies that, in the absence of UUUR events, reliable strategies are sustainable or survivable.  This also implies that three-layer survivability analysis defaults to reliability analysis however, the three-layer approach does offer some significant advantages over traditional reliability analysis, as discussed in previous sections. Nevertheless, when UUUR events exist, reliable strategies and survivable strategies are different. This necessitates the next operational level modeling  5.2. Operational Level Modeling and Decision-Making  When UUUR events are involved, we cannot make real time predictions of survivability at tactical and strategic levels This implies that the implementations of survivable 14 strategies need additional measures that we develop in this section.  Box 5.1 explains the ideas involved with possibly the simplest example  Figure 4 is a diagram showing a simplified relationship between action threshold survivability \(TS survivability \(ES view since both TS and ES are multidimensional and dynamic in practice. Therefore, the sole purpose of the diagram is to illustrate the major concepts discussed above The blue curve is the survivability when survivable strategies specified by ESS are implemented at some point before time s.  The system is then guaranteed to hold survivability above ES. In contrary, if no ESS implemented before time s, then the system quickly falls below to the survivable level at around 40 time units  T i m e 0 1 0 2 0 3 0 4 0 5 0 6 0 7 0 8 0 9 0 1 0 0 Su rv iv ab ili ty M et ric S u t 0 . 0 0 . 1 0 . 2 0 . 3 0 . 4 0 . 5 0 . 6 0 . 7 0 . 8 0 . 9 1 . 0 E S S  i s  I m p lm e n t e d N o  E S S  is  I m p lm e n t e d ts E S T S  Figure 4. A Diagram Showing the Relationship Between TS and ES, as well as timing of s and t, with s &lt; t  6. SUMMARY  The previous sections discussed the major building blocks 


The previous sections discussed the major building blocks for the new life-system inspired PHM architecture. This section first identifies a few minor aspects that have not been discussed explicitly but are necessary for the implementation of the architecture, and then we summarize the major building blocks in a diagram  6.1. Missing Components and Links  Optimization Objectives  Lifetime, reliability, fault tolerance, and survivability, especially the latter two, are application dependent. Generally, the optimization of reliability and survivability are consistent; in that maximization of reliability also implies maximization of survivability. However, when application detail is considered, optimization of lifetime is not necessarily consistent with the optimization of reliability. Consider the case of the monitoring sensor network as an example. The network reliability is also dependent on connectivity coverage, etc, besides network lifetime. What may be further complicated is the time factor. All of the network metrics are time-dependent. A paradoxical situation between lifetime and reliability could be that nodes never 'sleep                                                   


          Box 5.1 Operational Level Modeling  Assuming that the ESS solution for a monitoring sensor network can be expressed with the following simple algebraic conditions: survivability metric at tactical level SU = 0.7, Router-Nodes in the WSN &gt; 10%, Selfish Nodes &lt; 40%. Even with this extremely simplified scenario, the ESS strategies cannot be implemented because we do not know when the actions should be taken to warrant a sustainable system.  These conditions lack a correlation with real time  The inability to implement ESS is rooted in our inability to assign definite probabilities to UUUR events, which implies that we cannot predict when something sufficiently bad will jeopardize the system survivability What we need at the operational level is a scheme to ensure ESS strategy is in place in advance  The fundamental idea we use to implement the ESS strategy is to hedge against the UUUR events. The similar idea has been used in financial engineering and also in integrated pest management in entomology. This can be implemented with the following scheme  Let us define a pair of survivability metrics: one is the expected survivability \(ES threshold survivability or simply threshold survivability \(TS ES is equivalent to the survivability metric at tactical level. ES corresponds to ESS at strategic level, but they are not equivalent since ESS is strategy and ES is survivability. TS is the survivability metric value \(at tactical level and TS can be obtained from strategic level models. For example, TS = SU\(s t condition for the implementation of ESS. In other words, the implementation of strategies that ensures TS at time s will guarantee the future ES level at time t.  To make the implementation more reliable and convenient multiple dynamic TSs can be computed at time s1, s2 sk, with si &lt; t for all i.  These TS at times s1, s2, ..., sk should be monitored by some evaluation systems  Unlike tactical and strategic levels, the operational level modeling is approximate. The term "approximate means that we cannot predict the real time survivability or we do not know the exact time an action should be taken. Instead, the action is triggered when the monitored survivability metric SU\(r survivability \(TS scheme of TS and ES, we ensure the ES by taking preventative actions \(prescribed by ESS and triggered by the TS consequences of UUUR events  Figure 4 is a diagram showing the above concepts and the decision-making process involved 15 This wakefulness \(never 'sleep short period but at the expense of network lifetime. Of course, when the network is running out of lifetime, network reliability ultimately crashes. This example reminds us that 


reliability ultimately crashes. This example reminds us that multi-objective optimization should be the norm rather than exception  Constraints and Extensions  Many application specific factors and constraints are ignored in this article. For example, we mentioned about spatial heterogeneity of environment, but never present a mathematical description The spatial heterogeneity can be modeled with the so-called spatial frailty in multivariate survival analysis \(Ma 2008a  Evolutionary Algorithm  Evolutionary game modeling when implemented in simulation, can be conveniently implemented with an algorithm similar to Genetic Algorithms \(GA ESS in the evolutionary game model with simulation is very similar to GA. Dynamic populations, in which population size varies from generation to generation \(Ma &amp; Krings 2008f of node failures. Another issue to be addressed is the synchronous vs. asynchronous updating when topology is considered in the simulation. This update scheme can have profound influences on the results of the simulation. Results from cellular automata computing should be very useful for getting insights on the update issue  6.2. Summary and Perspective  To recapture the major points of the article, let us revisit Figure 3, which summarizes the principal modules of the proposed life-system inspired PHM architecture. The main inspiration from life systems is the notion of individuals and their assemblage, the population. Population is an emergent entity at the next level and it has emergent properties which we are often more concerned with. Survival analysis, which has become a de facto standard in biomedicine, is particularly suitable for modeling population, although it is equally appropriate at individual level. Therefore, survival analysis \(including competing risks analysis and multivariate survival analysis comprehensively in the context of PHM in a series of four papers presented at IEEE AeroSpace 2008 \(Ma &amp; Krings 2008a, b, c, &amp; d proposed architecture. Survival analysis constitutes the major mathematical tools for analyzing lifetime and reliability, and also forms the tactical level of the three-layer survivability analysis  Besides lifetime and reliability, two other major modules in Figure 3 are fault tolerance and survivability. To integrate fault tolerance into the PHM system, Dynamic Hybrid Fault DHF 2008e, Ma 2008a make real-time prediction of reliability more realistic and make real-time prediction of fault tolerance level possible DHF models also unite lifetime, reliability and fault tolerance under a unified modeling framework that consists of survival analysis and evolutionary game theory modeling  DHG models also form the partial foundation, or strategic level, for the three-layer survivability analysis. At the strategic level, the Evolutionary Stable Strategies \(ESS which is mapped to survivable or sustainable strategies, can be obtained from the evolutionary game theory based DHF models. When there is not any UUUR event involved reliability and survivability are consistent, and reliable strategies are survivable. In this case, the strategic level modeling up to this point is sufficient for the whole PHM system modeling, and there is no need for the next level  operational level modeling  When there are UUUR events in a PHM system, the 


When there are UUUR events in a PHM system, the inability to determine the occurrence probabilities of UUUR events makes the operational level modeling necessary Then the principle of hedging must be utilized to deal with the "hanging" uncertainty from UUUR events. In this case reliability strategies are not necessarily survivable strategies At the operational level modeling, a duo of survivability metrics, expected survivability \(ES survivability \(TS the survivable strategies \(ESS level are promptly implemented based on the decisionmaking rules specified with the duo of survivability metrics then the PHM system should be able to endure the consequences of potentially catastrophic UUUR events. Of course, to endure such catastrophic events, the cost may be prohibitively high, but the PHM system will, at least, warn decision-makers for the potentially huge costs.  It might be cheap to just let it fail  Figure 3 also shows several other modules, such as security safety, application systems \(such as Automatic Logistics CBM+, RCM, Life cycle cost management, Real-time warning and alert systems architectures, but we do not discuss in this paper. Generally the new architecture should be fully compatible with existing ones in incorporating these additional modules. One point we stressed is that PHM system can be an ideal place to enforce security policies. Enforcing security policies can be mandatory for PHM systems that demand high security and safety such as weapon systems or nuclear plant facilities.  This is because maintenance, even without human-initiated security breaches, can break the security policies if the maintenance is not planned and performed properly  In perspective, although I did not discuss software issues in this paper, the introduced approaches and models should provide sufficient tools for modeling software reliability and survivability with some additional extension. Given the critical importance of software to modern PHM systems, we present the following discussion on the potential extension to software domain. Specifically, two points should be noted: \(1 architecture to software should be a metric which can 16 replace the time notion in software reliability; I suggest that the Kolmogorov complexity \(e.g., Li and Vitanyi 1997 be a promising candidate \(Ma 2008a change is because software does not wear and calendar time for software reliability usually does not make much sense 2 software reliability modeling.  Extending to general survivability analysis is not a problem either. In this article I implicitly assume that reliability and survivability are positively correlated, or reliability is the foundation of survivability. This positive correlation does not have to be the case. A simplified example that illustrates this point is the 'limit order' in online stock trading, in which limit order can be used in either direction: that stock price is rising or falling.  The solution to allow negative or uncorrelated relationships between reliability and survivability are very straightforward, and the solutions are already identified in previous discussions. Specifically, multiple G-functions and multi-stage G-functions by Vincent and Brown \(2005 very feasible solution, because lifetime, reliability and survivability may simply be represented with multiple Gfunctions. Another potential solution is the accommodation of the potential conflicts between reliability and survivability with multi-objective GA algorithms, which I previously suggested to be used as updating algorithms in the optimization of evolutionary games  


 The integration of dynamic hybrid fault models with evolutionary game modeling allows one to incorporate more realistic and detailed failure \(or survival individual players in an evolutionary game. This is because dynamic hybrid fault models are supported by survival analysis modeling, e.g., time and covariate dependent hazard or survivor functions for individual players. If necessary, more complex survival analysis modeling including competing risks analysis and multivariate survival analysis, can be introduced.  Therefore, any field to which evolutionary game theory is applicable may benefit from the increased flexibility in modeling individual players.  Two particularly interesting fields are system biology and ecological modeling.  In the former field, dynamic hybrid fault models may find important applications in the study of biological networks \(such as gene, molecular, and cell networks 2008g conjecture that explains the redundancy in the universal genetic code with Byzantine general algorithm. In addition they conducted a comparative analysis of bio-robustness with engineering fault tolerance, for example, the strong similarity between network survivability and ecological stability \(Ma &amp; Krings 2008g survivability analysis can be applied for the study of survivals or extinctions of biological species under global climate changes \(Ma 2008b  In this paper, I have to ignore much of the details related to the implementation issues to present the overall architecture and major approaches clearly and concisely. To deal with the potential devils in the implementation details, a well funded research and development team is necessary to take advantages of the ideas presented here. On the positive side I do see the great potential to build an enterprise PHM software product if there is sufficient resource to complete the implementation. Given the enormous complexity associated with the PHM practice in modern engineering fields, it is nearly impossible to realize or even demonstrate the benefits of the architecture without the software implementation. The critical importance of PHM to mission critical engineering fields such as aerospace engineering, in turn, dictates the great value of such kind software product  6.3. Beyond PHM  Finally, I would like to raise two questions that may be interested in by researchers and engineers beyond PHM community. The first question is: what can PHM offer to other engineering disciplines? The second question is: what kinds of engineering fields benefit most from PHM? Here, I use the term PHM with the definition proposed by IEEE which is quoted in the introduction section of the paper  As to the first question, I suggest software engineering and survivability analysis are two fields where PHM can play significant roles. With software engineering, I refer to applying PHM principles and approaches for dealing with software reliability, quality assurance, and even software process management, rather than building PHM software mentioned in the previous subsection. For survivability analysis, borrowing the procedures and practices of PHM should be particularly helpful for expanding its role beyond its originating domain \(network systems that control critical national infrastructures is a strong advocate for the expansion of survivability analysis to PHM. Therefore, the interaction between PHM and survivability analysis should be bidirectional. Indeed, I see the close relationships between PHM, software engineering, and survivability as well-justified because they all share some critical issues including reliability survivability, security, and dependability  


 The answer to the second question is much more elusive and I cannot present a full answer without comparative analysis of several engineering fields where PHM has been actively practiced. Of course, it is obvious that fields which demand mission critical reliability and dependability also demand better PHM solutions. One additional observation I would like to make is that PHM seems to play more crucial roles for engineering practices that depend on the systematic records of 'historical' data, such as reliability data in airplane engine manufacturing, rather than on the information from ad hoc events.  This may explain the critical importance of PHM in aerospace engineering particularly in commercial airplane design and manufacturing.  For example, comparing the tasks to design and build a space shuttle vs. to design and manufacture commercial jumbo jets, PHM should be more critical in the latter task  17    Figure 2. States of a monitoring sensor node and its failure modes \(after Ma &amp; Krings 2008e     Figure 3. Core Modules and their Relationships of the Life System Inspired PHM Architecture    REFERENCES  Adamides, E. D., Y. A. Stamboulis, A. G. Varelis. 2004 Model-Based Assessment of Military Aircraft Engine Maintenance Systems Model-Based Assessment of Military Aircraft Engine Maintenance Systems. Journal of the Operational Research Society, Vol. 55, No. 9:957-967  Anderson, R. 2001. Security Engineering. Wiley  Anderson, R. 2008. Security Engineering. 2nd ed. Wiley  Bird, J. W., Hess, A. 2007.   Propulsion System Prognostics R&amp;D Through the Technical Cooperation Program Aerospace Conference, 2007 IEEE, 3-10 March 2007, 8pp  Bock, J. R., Brotherton, T., W., Gass, D. 2005. Ontogenetic reasoning system for autonomic logistics. Aerospace Conference, 2005 IEEE 5-12 March 2005.Digital Object Identifier 10.1109/AERO.2005.1559677  Brotherton, T., P. Grabill, D. Wroblewski, R. Friend, B Sotomayer, and J. Berry. 2002. A Testbed for Data Fusion for Engine Diagnostics and Prognostics. Proceedings of the 2002 IEEE Aerospace Conference  Brotherton, T.; Grabill, P.; Friend, R.; Sotomayer, B.; Berry J. 2003. A testbed for data fusion for helicopter diagnostics and prognostics. Aerospace Conference, 2003. Proceedings 2003 IEEE  Brown, E. R., N. N. McCollom, E-E. Moore, A. Hess. 2007 Prognostics and Health Management A Data-Driven Approach to Supporting the F-35 Lightning II. 2007 IEEE AeroSpace Conference  Byington, C.S.; Watson, M.J.; Bharadwaj, S.P. 2008 Automated Health Management for Gas Turbine Engine Accessory System Components. Aerospace Conference 2008 IEEE, DOI:10.1109/AERO.2008.4526610 


2008 IEEE, DOI:10.1109/AERO.2008.4526610 Environment Covariates &amp; Spatial Frailty Applications: AL; Life Cycle Mgmt; Real-Time Alerts CBM+, RCM, TLCSM; Secret Sharing and Shared Control 18 Chen, Y. Q., S. Cheng. 2005. Semi-parametric regression analysis of mean residual life with censored survival data Biometrika \(2005  29  Commenges, D. 1999. Multi-state models in Epidemiology Lifetime Data Analysis. 5:315-327  Cook, J. 2004. Contrasting Approaches to the Validation of Helicopter HUMS  A Military User  s Perspective Aerospace Conference, 2004 IEEE  Cook, J. 2007. Reducing Military Helicopter Maintenance Through Prognostics. Aerospace Conference, 2007 IEEE Digital Object Identifier 10.1109/AERO.2007.352830  Cox, D. R. 1972. Regression models and life tables.  J. R Stat. Soc. Ser. B. 34:184-220  Crowder, M. J.  2001. Classical Competing Risks. Chapman amp; Hall. 200pp  David, H. A. &amp; M. L. Moeschberger. 1978. The theory of competing risks. Macmillan Publishing, 103pp  Ellison, E., L. Linger, and M. Longstaff. 1997.  Survivable Network Systems: An Emerging Discipline, Carnegie Mellon, SEI, Technical Report CMU/SEI-97-TR-013  Hanski, I. 1999. Metapopulation Ecology. Oxford University Press  Hallam, T. G. and S. A. Levin. 1986. Mathematical Ecology. Biomathematics. Volume 17. Springer. 457pp  Hess, A., Fila, L. 2002.  The Joint Strike Fighter \(JSF concept: Potential impact on aging aircraft problems Aerospace Conference Proceedings, 2002. IEEE. Digital Object Identifier: 10.1109/AERO.2002.1036144  Hess, A., Calvello, G., T. Dabney. 2004. PHM a Key Enabler for the JSF Autonomic Logistics Support Concept. Aerospace Conference Proceedings, 2004. IEEE  Hofbauer, J. and K. Sigmund. 1998. Evolutionary Games and Population Dynamics. Cambridge University Press 323pp  Hougaard, P. 2000. Analysis of Multivariate Survival Data Springer. 560pp  Huzurbazar, A. V. 2006. Flow-graph model for multi-state time-to-event data. Wiley InterScience  Ibrahim, J. G., M. H. Chen and D. Sinha. 2005. Bayesian Survival Analysis. Springer. 481pp  Kacprzynski, G. J., Roemer, M. J., Hess, A. J. 2002. Health management system design: Development, simulation and cost/benefit optimization. IEEE Aerospace Conference Proceedings, 2002. DOI:10.1109/AERO.2002.1036148  Kalbfleisch, J. D., and R. L. Prentice, 2002. The Statistical Analysis of Failure Time Data. Wiley-InterScience, 2nd ed  Kalgren, P. W., Byington, C. S.   Roemer, M. J.  2006 Defining PHM, A Lexical Evolution of Maintenance and Logistics. Systems Readiness Technology Conference 


Logistics. Systems Readiness Technology Conference IEEE. DOI: 10.1109/AUTEST.2006.283685  Keller, K.; Baldwin, A.; Ofsthun, S.; Swearingen, K.; Vian J.; Wilmering, T.; Williams, Z. 2007. Health Management Engineering Environment and Open Integration Platform Aerospace Conference, 2007 IEEE, Digital Object Identifier 10.1109/AERO.2007.352919  Keller, K.; Sheahan, J.; Roach, J.; Casey, L.; Davis, G Flynn, F.; Perkinson, J.; Prestero, M. 2008. Power Conversion Prognostic Controller Implementation for Aeronautical Motor Drives. Aerospace Conference, 2008 IEEE. DOI:10.1109/AERO.2008.4526630  Klein, J. P. and M. L. Moeschberger. 2003. Survival analysis techniques for censored and truncated data Springer  Kingsland, S. E. 1995. Modeling Nature: Episodes in the History of Population Ecology. 2nd ed., University of Chicago Press, 315pp  Kot, M. 2001. Elements of Mathematical Ecology Cambridge University Press. 453pp  Krings, A. W. and Z. S. Ma. 2006. Fault-Models in Wireless Communication: Towards Survivable Ad Hoc Networks Military Communications Conference, 23-25 October, 7 pages, 2006  Lamport, L., R. Shostak and M. Pease. 1982. The Byzantine Generals Problem. ACM Transactions on Programming Languages and Systems, 4\(3  Lawless, J. F. 2003. Statistical models and methods for lifetime data. John Wiley &amp; Sons. 2nd ed  Line, J. K., Iyer, A. 2007. Electronic Prognostics Through Advanced Modeling Techniques. Aerospace Conference 2007 IEEE. DOI:10.1109/AERO.2007.352906  Lisnianski, A., Levitin, G. 2003. Multi-State System Reliability: Assessment, Optimization and Applications World Scientific  Liu, Y., and K. S. Trivedi. 2006. Survivability Quantification: The Analytical Modeling Approach, Int. J of Performability Engineering, Vol. 2, No 1, pp. 29-44  19 Luchinsky, D.G.; Osipov, V.V.; Smelyanskiy, V.N Timucin, D.A.; Uckun, S. 2008. Model Based IVHM System for the Solid Rocket Booster. Aerospace Conference, 2008 IEEE.DOI:10.1109/AERO.2008.4526644  Lynch, N. 1997. Distributed Algorithms. Morgan Kaufmann Press  Ma, Z. S. 1997. Demography and survival analysis of Russian wheat aphid. Ph.D. dissertation, Univ. of Idaho 306pp  Ma, Z. S. 2008a. New Approaches to Reliability and Survivability with Survival Analysis, Dynamic Hybrid Fault Models, and Evolutionary  Game Theory. Ph.D. dissertation Univ. of Idaho. 177pp  Ma, Z. S. 2008b. Survivability Analysis of Biological Species under Global Climate Changes: A New Distributed and Agent-based Simulation Architecture with Survival Analysis and Evolutionary Game Theory. The Sixth 


International Conference on Ecological Informatics. Dec 25, 2008. Cancun, Mexico  Ma, Z. S. and E. J. Bechinski. 2008. A Survival-Analysis based  Simulation Model for Russian Wheat Aphid Population Dynamics. Ecological Modeling, 216\(2 332  Ma, Z. S. and A. W. Krings. 2008a.  Survival Analysis Approach to Reliability Analysis and Prognostics and Health Management \(PHM  AIAA AeroSpace Conference, March 1-8, 2008, Big Sky, MT, 20pp  Ma, Z. S. and A. W. Krings. 2008b. Competing Risks Analysis of Reliability, Survivability, and Prognostics and Health Management \(PHM  AIAA AeroSpace Conference, March 1-8, 2008.  Big Sky, MT. 20pp  Ma, Z. S. and A. W. Krings. 2008c. Multivariate Survival Analysis \(I Dependence Modeling", Proc. IEEE  AIAA AeroSpace Conference, March 1-8, 2008, Big Sky, MT. 21pp  Ma, Z. S. and A. W. Krings., R. E. Hiromoto. 2008d Multivariate Survival Analysis \(II State Models in Biomedicine and Engineering Reliability IEEE International Conference of Biomedical Engineering and Informatics, BMEI 2008.  6 Pages  Ma, Z. S. and A. W. Krings. 2008e. Dynamic Hybrid Fault Models and their Applications to Wireless Sensor Networks WSNs Modeling, Analysis and Simulation of Wireless and Mobile Systems. \(ACM MSWiM 2008 Vancouver, Canada  Ma, Z. S. &amp; A. W. Krings. 2008f. Dynamic Populations in Genetic Algorithms. SIGAPP, the 23rd Annual ACM Symposium on Applied Computing, Ceara, Brazil, March 16-20, 2008. 5 Pages  Ma, Z. S. &amp; A. W. Krings. 2008g. Bio-Robustness and Fault Tolerance: A New Perspective on Reliable, Survivable and Evolvable Network Systems, Proc. IEEE  AIAA AeroSpace Conference, March 1-8, Big Sky, MT, 2008. 20 Pages  Ma, Z. S.  and A. W. Krings. 2009. Insect Sensory Systems Inspired Computing and Communications.  Ad Hoc Networks 7\(4  MacConnell, J.H. 2008. Structural Health Management and Structural Design: An Unbridgeable Gap? 2008 IEEE Aerospace Conference, DOI:10.1109/AERO.2008.4526613  MacConnell, J.H. 2007. ISHM &amp; Design: A review of the benefits of the ideal ISHM system. Aerospace Conference 2007 IEEE. DOI:10.1109/AERO.2007.352834  Marshall A. W., I. Olkin. 1967. A Multivariate Exponential Distribution. Journal of the American Statistical Association, 62\(317 Mar., 1967  Martinussen, T. and T. H. Scheike. 2006. Dynamic Regression Models for Survival Data. Springer. 466pp  Mazzuchi, T. A., R. Soyer., and R. V. Spring. 1989. The proportional hazards model in reliability. IEEE Proceedings of Annual Reliability and Maintainability Symposium pp.252-256  Millar, R.C., Mazzuchi, T.A. &amp; Sarkani, S., 2007. A Survey of Advanced Methods for Analysis and Modeling of 


of Advanced Methods for Analysis and Modeling of Propulsion System", GT2007-27218, ASME Turbo Expo 2007, May 14-17, Montreal, Canada  Millar, Richard C., "Non-parametric Analysis of a Complex Propulsion System Data Base", Ph.D. Dissertation, George Washington University, June 2007  Millar, R. C. 2007. A Systems Engineering Approach to PHM for Military Aircraft Propulsion Systems. Aerospace Conference, 2007 IEEE. DOI:10.1109/AERO.2007.352840  Millar, R. C. 2008.  The Role of Reliability Data Bases in Deploying CBM+, RCM and PHM with TLCSM Aerospace Conference, 2008 IEEE, 1-8 March 2008. Digital Object Identifier: 10.1109/AERO.2008.4526633  Nowak, M. 2006. Evolutionary Dynamics: Exploring the Equations of Life. Harvard University Press. 363pp  Oakes, D. &amp; Dasu, T. 1990. A note on residual life Biometrika 77, 409  10  Pintilie, M. 2006. Competing Risks: A Practical Perspective.  Wiley. 224pp  20 Smith, M. J., C. S. Byington. 2006. Layered Classification for Improved Diagnostic Isolation in Drivetrain Components. 2006 IEEE AeroSpace Conference  Therneau, T. and P. Grambsch. 2000. Modeling Survival Data: Extending the Cox Model. Springer  Vincent, T. L. and J. L. Brown. 2005. Evolutionary Game Theory, Natural Selection and Darwinian Dynamics Cambridge University Press. 382pp  Wang. J., T. Yu, W. Wang. 2008. Research on Prognostic Health Management \(PHM on Flight Data. 2008 Int. Conf. on Condition Monitoring and Diagnosis, Beijing, China, April 21-24, 2008. 5pp  Zhang, S., R. Kang, X. He, and M. G. Pecht. 2008. China  s Efforts in Prognostics and Health Management. IEEE Trans. on Components and Packaging Technologies 31\(2             BIOGRAPHY  Zhanshan \(Sam scientist and earned the terminal degrees in both fields in 1997 and 2008, respectively. He has published more than 60 peer-refereed journal and conference papers, among which approximately 40 are journal papers and more than a third are in computer science.  Prior to his recent return to academia, he worked as senior network/software engineers in semiconductor and software industry. His current research interests include: reliability, dependability and fault tolerance of distributed and software systems behavioral and cognitive ecology inspired pervasive and 


behavioral and cognitive ecology inspired pervasive and resilient computing; evolutionary &amp; rendezvous search games; evolutionary computation &amp; machine learning bioinformatics &amp; ecoinformatics                 pre></body></html 


