An Attribute-based Scheme for Service Recommendation using Association Rules and Ant Colony Algorithm Zhikui Chen 1, Zhuang Shao 1, Zhijiang Xie 2, and Xiaodi Huang 3 1 School of Software, Dalian University of Technology Dalian, Liaoning, China 2 College of Mechanical Engineering, Chongqing university, Chongqing city, China 3 School of Business and Information Technology, Charles Sturt University, Australia zkchen@dult.edu.cn, shzh cloud@hotmail.com, xzj99@vip.sina.com, xhuang@csu.edu.au AbstractWith the rapid development of m-commerce, predicting users navigation and making the service recommendation become more and more important. Most researches focus on predicting users navigation using context history and user preferences. But, the influence of the attributes of a service has been ignored. Simultaneously, some attributes are variable, so the recommendations are changeable. Therefore, the paper proposes an attribute-based scheme for service recommendation based on CASUP \(context-aware system considering user preference In proposed approach, the services are classified into several service clusters, and the service recommendations are carried out using Apriori algorithm and ant colony algorithm. Finally, the proposed model is validated by several simulation experiments which demonstrate the effects of the service attributes in mcommerce Index Termsm-commerce; service recommendation; Apriori Ant Colony algorithm I. INTRODUCTION Due to the rapid development of wireless communication and hardware techniques, the mobile commerce \(m-commerce 1] has become more and more popular. M-commerce has shown immense potential in the electronic market through the encouragement of the wide promotion of mobile communication technologies and rapid adoption of mobile devices with Internet capabilities. In the future, there is no doubt that the mobile devices \(e.g. hand-held PC, PDA and mobile phone will enable to facilitate users transactions over wireless networks. To make the transactions more convenient, providing proactive service recommendations to users becomes more important than ever before. The proactive service recommendation is based on the information that characterizes the situation of a user, also called as context awareness, including the users current positions, activities, and their surrounding environments. At present, the context information of users has 


been captured and processed on context-aware computing [2 Consequently, the wireless communication system plays an important role in m-commerce technologies In recent years, wireless communication systems focus on seamlessly integrating the existing wireless technologies and providing fast and pervasive access and service for mobile users. In this evolving environment, Wireless Sensor Networks WSNs  foreseen ubiquity intelligent, future mobile network, and are envisaged to play a key role in the vision of offering mobile personalized services, whenever and wherever needed, while supporting applications with broadband, wireless connectivity anytime and anywhere. The contextual information from sensor nodes is computed for the proactive service recommendation. Recent research has focused on the development of such services and scenarios. Providing the personalized service is the main objective of an agent-based framework CASUP  definition of proactive service recommendation based on the users context histories using context-aware computing. The CASUP provides the personalized services extracting the relationship between users profiles and services under the same context automatically. Although the context history has been considered, the attributes of services are not taken into account such as distance and interest. The next service is recommended based on the users preferences and association rules, but a sequence of services that is affected by service attributes is ignored In this paper, a navigation agent will replace existing association agent. An attribute-based scheme for service recommendation \(ABSSR and ant colony algorithm are used to extract the relationship among the services or service sequences for recommending the navigation. The proposed scheme has some contributions for service recommendation. Firstly, we propose the service cluster and a cluster association model. On the basis of association rules, a ranking list of service clusters is recommended to the users before service selection. Secondly, based on the service cluster selection, an ant colony navigation model is proposed to calculate a ranking list of service using ant colony algorithm. In this model, the attributes of the service are taken into account. Furthermore, this probabilistic model reflects the 


users interests dynamically The rest of this paper is organized as follows. In the next section, we present related work on the service recommendation. Section 3 presents our scheme, including the framework of ABSSR based on the preference management 978-1-4244-6557-6/10/$26.00 c 2010 IEEE Fig. 1. The relationship between cluster selection list and service selection list layer in the CASUP and two models. Especially, the ant colony navigation model will be discussed in detail. In Section 4, the experimental results are reported to evaluate the effectiveness of our approach. Finally, we conclude this paper in Section 5 II. RELATED WORK During recent years, context-aware computing has been a field of intense research. Several interesting approaches have been reported. Some researchers focused on inference of highlevel context such as users current activities [5-7]. The context histories are exploited as one possibility for the prediction of future context, selection of devices and adaptation. On this basis, some researches for providing the personalized services using users preference and the information from sensor data have been carried out [8-12]. The user profiles are estimated for service recommendations in efficient and manageable mechanisms. The CASUP, as mentioned above is the most representative one The CASUP is a prototype system of an agent-based framework that offers the personalized services utilizing the extracted users preferences and association rules. It is composed primarily of eight agents in four layers [4]. The data gathering layer is used for collecting sensor data, user data and service data. The context management layer is used for inferring a high-level context from a low-level context, storing collected information into context history and classifying the user profiles and the selected services under the same highlevel context. In the preference management layer, users preferences are extracted from context history to infer the association rules for recommending the next services, and the application layer provides the personalized services to the mobile devices of the users. In the preference management layer, the decision tree algorithm is adopted to extract the preferences of users for each service and association rules are used to extract the relationship among the services. It has been recognized that capturing and inferring the users preferences 


is important to offer the personalized services. However, little research has taken the attributes of services into account III. ATTRIBUTE-BASED SCHEME FOR SERVICE RECOMMENDATION In this section, we present an attribute-based scheme for service recommendation \(ABSSR users navigation. The ABSSR consists of two models: Cluster Association Model and Ant colony Navigation Model. Before presenting the framework of ABSSR, some definitions are given A. Definitions Firstly, several concepts are defined in order to describe the attribute-based scheme Definition 1 \(Service Attributes charactering a service. The attributes are the information of service themselves and the satisfaction from the users. Therefore, the services can be described by the service attributes such as introduction and location. Furthermore, the service attributes reflect influence on services from the users, including reputation of services, visiting frequency, spending time and so on In this research, some relevant attributes are extracted for describing service. We define frequency, distance and reputation as service attributes. frequency is the consumers visiting times within a time window in the past. distance is denoted as the distance between two services location, and reputation is the satisfaction degree that is received from the users in the past. reputation is calculated based on the method in [13 Definition 2 \(Service Cluster are similar to each other. The service cluster is the result of service classification based on similarity. Generally, it is too hard to manage the services due to huge quantity. Therefore all of the services are classified into several service clusters based on how similar the services are. For instance, in the Restaurant Cluster, there are Chinese restaurants, Korean food restaurants and food courts; the Entertainment Cluster includes cinemas, cafes and bars Definition 3 \(Service Recommendation List ranking services for users selection. The service recommendation lists are ranking lists for users selection. Because the Fig. 2. The framework of scheme services are classified into service clusters, there are two lists 


one is for cluster selection, and the other one is for relevant service selection. The users can make choices from the lists that are offered to PDA or mobile device. In each list, there are several service options that are sorted from the largest possibility to the smallest one. Meanwhile, a service search engine is provided to prevent the services that users want are not in the lists We present an example to make this definition precise Once a user finishes dinner in Chinese restaurant 1, the system generates a cluster recommendation list based on the Restaurant Cluster. And then, if the user selects Entertainment Cluster in the cluster selection list, the service selection list will be generated based on the service attributes using ant colony algorithm. The example is illustrated in Fig. 1 B. The Framework of ABSSR Figure 2 shows the framework of the preference management layer in the ABSSR. Based on the preference management layer of the CASUP, existing association agent is replaced by a navigation agent. Meanwhile, an ant colony KB and a database for storing service attributes are added Tbl 1. Association Rule Rule ID Rule Support Confidence R1 Restaurant ? Finance 10.0 35.0 R2 Restaurant ? Entertainment 12.0 37.0 R3 Sport ? Shopping 3.0 15.0  Tbl 2. Selection Probability Selection ID Selection Probability S1 Shopping mall 2 ? Cafeteria 3 45 S2 Cafeteria 3 ? Theatre 1 37  In the CASUP, the association rule is used for recommending the next service after offering the previous service based on Apriori algorithm [14]. In this study, the services are classified into service clusters, and we use Apriori algorithm to provide the next service cluster based on previous service cluster. Accordingly, the association rules in the association KB are changed, Tbl. 1 is an example. Based on a cluster selection, a service list is generated using ant colony algorithm 15]. From a service of previous cluster to another service of the next cluster, there is a probability based on the service attributes, frequency, distance and reputation. These probabil 


ities are saved in the ant colony KB as Tbl. 2. Moreover, the probabilities are dynamic, they are updated at regular intervals based on the users behavior C. The Models of ABSSR In the models, the Apriori algorithm and ant colony algorithm will be used. The Apriori algorithm is the most prevalent techniques to locate association rule. Ant colony algorithm aims at exploring optimal course sequences since such sequencing can predicate several possible items for the next steps 1 On the basis of the concept mentioned above, all of the services are classified into several clusters. Once a user stops a service, navigation agent will employed to offer a recommendation of the next service. In order to achieve that objective, the cluster of next service must be inferred by navigation agent based on the sequence of the selected cluster in the past. That is, the cluster selection should be done before calculating the service selection list. The sequence of recommended service clusters is based on the association rules in Association KB. The navigation agent can infer next cluster according to Support and Confidence in Tbl. 2 2 Real ants are capable of finding the shortest path from a food source to their nest based on the pheromone that they deposit on the ground. Ants choose their way probabilistically by the strong pheromone concentrations left on pheromone trails For providing service recommendations, we regard consumers service selections as artificial ants. The service selection depends on the attributes of services and consumers behaviors and some values of attributes are dynamic. Therefore, an appropriate approach to recommending services should be treated as a dynamic probabilistic one, where probabilities are updated within a specified time window. Our proposed approach is based on the ant colony navigation model that analyzes the attributes of services and consumers behaviors to recommend services. The most of parameters and functions used in this paper are same as the definitions in ant colony algorithm [15]. Furthermore, we modify heuristic information and the pheromone updating function by combining attributes of services a. Heuristic Information 


In this research, the heuristic information ?ij indicates the degree of connectedness from service i to j.The heuristic information ?ij is defined as follow ij Cij n k=1 Cik 1 where Cij is the degree of connectedness from service i to j. It represents the access times from service i to j. In the service cluster of service j, there are n different selections as the next service of the service i. This heuristic information is in fact the access proportion of the consumers from service i to service j among n services b. Pheromone Updating Function The pheromone trail intensity ?ij is the relational strength between the ith node and the jth node. The relational strength in this study is derived from the attribute values of services We update pheromone in a way as Ant-quantity system [16 does for. Specifically, the pheromone is updated as long as ants move from one node to another. The pheromone ?ij\(t updated according to ij\(t + 1 1 t m k+1 kij \(2 where 0 < ? < 1 is the pheromone evaporation rate, ?ij is the incremental intensity of locate pheromone trail from node i to j, and m is the number of consumers as ants. The value of ?kij is related to the values of three service attribute defined above: distance between two services, frequency and reputation of service j. Furthermore, ?kij is computed by kij   Q Aij if \(i,j 0 , otherwise 3 In Eq.\(3 


pathij as every time an ant goes from node i to j. Combining the three attribute values of the service i and service j, Aij is defined as follow Aij  distance2ij 1 frequency2j 1 reputation2j 4 Aij takes into account these important features: distanceij is the distance between the service i and service j, and based on the practical experience, distance is from 0 to 5 kilometers The larger distanceij is, the smaller ?ij is. frequencyj and reputationj are the attributes of service j, and their initial values are 1. The larger they are, the higher ?ij is. frequency is a measure of the consumers interest in a service. If a service is popular, in a time window, it will be visited more often by consumers than other services in the same cluster. Moreover we adjust the time window to make frequency ? [1, 50 Similarly, higher reputation of a service contributes to the consumers prefer selection, with a value from 1 through 10. Furthermore, to protect the same order among distance2ij 1 frequency2j and 1 reputation2j After using service i, the consumer selects the next service based on the remaining pheromone trail intensity on the path Using Pij\(t from service i at the time t, we have Pij\(t   ij\(t t k?allowedn ik\(t t j? allowedn 0 , otherwise 5 where allowedn is a set of selectable services after service 


i in the next step. ? and ? are the parameters that control the level of consideration of the pheromone trail D. The algorithm of ABSSR In the following, we present our approach in the form of the algorithm. We suppose that the user is using service S and he wants to stop it Step 1: Service Cluster Selection Based on the service S, we know the service cluster of S is sc1. The cluster selection list is generated using association rules. Suppose the user selects sc2 as the cluster of next service Step 2: Parameters Initialization This step is pre-processing, in which the parameters of and Q are initialized for ant colony navigation model. Moreover, a time window for frequency is set Step 3: Heuristic Information Calculation The heuristic information ? is evaluated according to the connectedness between S and some feasible services in sc2 Suppose there are n services denoted as S1, S2, . . . , Sn, can be as the next selection from service S, a set of heuristic information {?SS1 , ?SS2 , . . . , ?SSn} is calculated using Eq.\(1 Step 4: Pheromone Trail Intensity Calculation 0 5 10 15 0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 The connectedness between the service  i  and service  j   P ij Fig. 3. Pij variations by different value of the connectedness 1 1.5 2 2.5 3 3.5 4 4.5 5 0.48 0.49 


0.5 0.51 0.52 0.53 0.54 0.55 0.56 distanceij   P ij Fig. 4. Pij variations with the increment of distanceij 0 10 20 30 40 50 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 frequencyj   P ij Fig. 5. Pij variations with the increment of frequencyj 1 2 3 4 5 6 7 8 9 10 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.95 reputationj 


  P ij Fig. 6. Pij variations with the increment of reputationij Based on the attributes of service \(distance, frequency and reputation SS1 , ?SS2 , . . . , ?SSn} is calculated, according to Eqs.\(2-4 Step 5: Probability Calculation and Service Selection In this step the set of probability {PSS1 , PSS2 , . . . , PSSn are calculated on the basic of {?SS1 , ?SS2 , . . . , ?SSn} and SS1 , ?SS2 , . . . , ?SSn} using Eq.\(5 is generated in decreasing order of {PSS1 , PSS2 , . . . , PSSn Suppose that the user selects service S? in the list as the next service he wants Step 6: Updating After the user selects a service S? in the service selection list, the values of three attributes should be updated, including the connectedness between service S and S?, frequencyS and reputationS IV. EXPERIMENTAL RESULTS To evaluate the effectiveness of ABSSR, we utilize attributebased service recommendation to test the proposed ant colony navigation model. In the model, the probability in ant colony KB is related to the values of attributes of services Experiment 1: In this experiment, the impact on the probability from different values of the heuristic information ?ij In Eq.\(1 i to j. Without lose of generality, we set Cij from 1 to 15 In addition, in the service cluster of service j, there are four other services as the next service of service i, and they are set randomly between 1 and 15 With the parameters ? = 1 and ? = 8, the probability variation is illustrated in Fig. 3. From the result, with the same pheromone trail intensity, the more Cij is, the higher Pij is Experiment 2: In experiment 2, based on the same heuristic information ?ij, the relationship between Pij and the attributes will be analyzed. The change of attributes will impact on pheromone trail intensity ?ij. In the ABSSR, three attributes are considered: distance, frequency and reputation. If all of the attributes are inconsistent in the experiment, the results are confused. Consequently, we observe one attribute with 


two other remaining attributes be constant. To protect the same order among attributes, we fixed the parameters ? = 10 2500, ? = 1000, ? = 2 and ? = 1 In Fig. 4, the distance between the service i and j is increased from 1 to 5 \(kilometers attributes. From the figure, we can observe that the probability is decreased with the increment of the distanceij, and vice versa. Similarly, we varied the values of the frequencyj and reputationj to analyze the influence of Pij \(frequencyj is from 1 to 50, and reputationj is from 1 to 100 given in Fig. 5 and Fig. 6. The probability has an increase corresponding to the growths of frequencyj and reputationj V. CONCLUSION As the number of the users of networks has been increased greatly nowadays, the proactive service recommendation in m-commerce becomes an important issue. It is computed by the contextual information from sensor nodes. Although some researchers focus on context history, the attributes of a service have been ignored. In this paper, we have presented an attribute-based scheme for recommending services for consumers. For this end, we grouped all of the given services into several clusters, employed a cluster association model and an ant colony navigation model to track the consumers behaviors, and then calculate the degree of the influences from the attributes of services in relation to the recommendation After these, a service recommendation list is generated for consumers. The proposed models were implemented and the experimental results have shown that the varieties of the attributes do have affects on ranking lists. By refining the system, the proposed scheme could be further analyzed and potentially get its own place in practice REFERENCES 1] Smith, A.D.: Exploring m-commerce in terms of viability, growth and challenges. Int. J. Mobile Communications, 2006, 4\(6 2] Cao, Y., and Li, Y.: An intelligent fuzzy-based recommendation system for consumer electronic products. Expert Systems with Applications 2007, 33\(1 3] Buratti, C., Conti, A., Dardari, D., and Verdone, R.: An Overview on Wireless Sensor Networks Technology and Evolution, Sensors., 2009, 9 9 4] Hong, J., Suh, E.H., and Kim, J.: Context-aware system for proactive personalized service based on context history. Expert Systems with 


Applications, 2009, 36\(4 5] Sadeh, N.M., Chan, T.C., Van, L., and Kwon, O.: Creating an Open Agent Environment for Context-aware M-Commerce. In: Agentcities Challenges in Open Agent Environments, Ed. by Burg, Dale, Finin Nakashima, Padgham, Sierra, and Willmott, LNAI, Springer Verlag, 2003 pp. 152-158 6] Mayrhofer, R.: Context Prediction based on Context Histories: Expected Benefits, Issues and Current State-of-the-Art. In Proc. of the 1st Intl Workshop on Exploiting Context Histories in Smart Environments, May 2005 7] Samaan, N., and Karmouch, A.: A mobility prediction architecture based on contextual knowledge and spatial conceptual maps. IEEE Transactions on Mobile Computing, 2005, 4\(6 8] Jung, J.J.: Contextualized mobile recommendation service based on interactive social network discovered from mobile users. Expert Systems with Applications, 2009, 36\(9 9] Gong, R., Ning, K., and Li, Q.: Context modeling and measuring for proactive resource recommendation in business collaboration. Computers and Industrial Engineering , 2009, 57\(1 10] Kuo, M.H. Chen, L.C., and Liang, C.W.: Building and evaluating a location-based service recommendation system with a preference adjustment mechanism. Expert Systems with Applications, 2009, 36\(2 3543-3554 11] Luther, M., Fukazawa, Y., and Wagner, M.: Situational reasoning for task-oriented mobile service recommendation. The Knowledge Engineering Review, 2008, 23\(1 12] Kwon, O., and Kim, J.: Concept lattices for visualizing and generating user profiles for context-aware service recommendations. Expert Systems with Applications, 2009, 36\(2 13] Song, S., Hwang, K., Zhou, R., and Kwok, Y.K.: Trusted P2P transactions with fuzzy reputation aggregation. IEEE Internet Computing, 2005 9\(6 14] Wu, X.D., Kumar, V., Quinlan, J.R., Ghosh, J., Yang, Q., Motoda, H McLachlan, G.J., Ng, A., Liu, B., Yu, P.S., Zhou, Z.-H., Steinbach, M Hand, D.J., and Steinberg, D.: Top 10 algorithms in data mining, Knowl Inf. Syst., 2008, 14, \(1 15] Dorigo, M., and Gambardella, L.M.: Ant colony system: a cooperative learning approach to the traveling salesman problem. IEEE Trans. Evolut Comput. 1997,1\(1 16] Colorni, A., Dorigo, M. and Maniezzo, V.: Distributed optimization by ant colonies. Proc. of European Conf. on Artificial Life, \(Ed and Bourgine, P., Elsevier Publishing, Paris, France, 1991, pp. 134-142 


5 1559 8605 8 0 0 10172 4 1559 34172 129 1 4 2 35876 It can get the same frequent activities that PHP algorithm and improved PHP algorithm, in Tab.2 we can find that there is inverse ratio between frequent activity and minimum support count, when the minimum support counts decrease frequent activities increase, just as the real world. The cost of CPU time compared as Fig.2 of these two algorithms 213 124 89 73 57 53 52 65 0 40 80 120 160 200 240 4 5 6 7 Minimum Support Count T i m e  s e c o n d s  PHP Improved Fig.2 the compare CPU time cost of PHP and improved PHP From Fig.2, as support count decreasing, the CPU running 


time of these two algorithms gets increasing, but the PHP is much speeder than the other, especially when count in 6. so wen know the more frequent itemsets and their items, the more efficient of the algorithm V. THE APPLICATION After we got the frequent itemset by the improved PHP algorithm, we can generate the strong associate rule that satisfied minimum support and minimum confidence. The confidence can be computed by Confidence\(A ? B A | B A  B support_count\(A Support_count\(A  B support_count\(A And then we can use confidence threshold strengthen the association, we use improved PHP algorithm dig X company 2002 year sale data, minimum support is 5, 3-itemset, they are 83,549,915}, {485,558,1290}, {454,1097,1546 83,549,982}, {631,980,1490}, {454,1103,1546 810,1026,1469}, {360,830,1036}, and their none null subset as for frequent 3-item {83,549,915}, we can get 83 ? 549? 915,      confidence = 5/9 = 56 83 ? 915? 549,      confidence = 5/5 = 100 915 ? 549? 83,      confidence = 5/5 = 100 83? 915 ? 549,      confidence = 5/50 = 10 549? 83 ? 915,      confidence = 5/78 = 6 915? 83 ? 549,      confidence = 5/73= 7 If the minimum confidence threshold is 80%, only if 83 ? 915 ? 549and 915 ? 549 ? 83 can generate strong associate rules, after these rules, we can not only arrange the shelf of related goods in pairs or groups, but also combine those goods that have most consumers, promote the consumer the pretermission goods. For example, the stronger associate rule 83 ? 915? 549, from the database field product, we know product_id corresponding product_name, this stronger rule is pillow ? pillow clothe ? bedsheet , if there is someone bought pillow and pillow clothe, then promote good bedsheet is an efficient way of sale VI. CONCLUSION We put Hash candidates k-itemset into affair of Dk, that is itemset include in affair, so CPU running time decreased improved PHP algorithm is more efficiency, we can use this improved PHP algorithm in commercial database digging and 


other wide usages REFERENCES 1] YANG Xuejun. The application of CRM[J].computer application,2002\(5 2] CHEN Shuangqiu, LIU Dinghong, LI Hongxing, the costumer analysis and design based on data warehouse[J].computer engineering and application,2001\(4 3] Jawei Han and Micheline Kamber,Data Mining:Comcepts and Techniques \(2001 4] J.D.Holt,and S.M.Chung, Efficient Mining of Association Rules in Text Databases CIKM99,  Kansas City, USA, pp.234-242, \(Nov.1999 5] J.S.Park, M.S.Chen and P.S.Yu, Using a Hash-Based Method with Transaction Trimming for Mining Association Rules, IEEE Transactions on Knowledge and Data Engineering, Vol.9, No.5 Sept/Oct, 1997 6] S. A. zel and H. A. Gvenir, An Algorithm for Mining Association Rules Using Perfect Hashing and Database Pruning, in: Proceedings of  the Tenth Turkish Symposium on Artificial Intelligence and Neural Networks \(TAINN'2001 Eds Gazimagusa, T.R.N.C. \(June 2001 7] SUN Zhengxi, The theory and technology of Intelligent control M].Beijing Qinghua press, 1997 8] Mitani, Koji, CRM pursues economies of depth [J]. Japanese Journal of Diamond Harvard Business, 1999, \(617  the Tenth Turkish Symposium on Artificial Intelligence and Neural Networks \(TAINN'2001 Eds Gazimagusa, T.R.N.C. \(June 2001 7] SUN Zhengxi, The theory and technology of Intelligent control M].Beijing Qinghua press, 1997 8] Mitani, Koji, CRM pursues economies of depth [J]. Japanese Journal of Diamond Harvard Business, 1999, \(617  


algorithm could not extract the correct hierarchy with 30 assigning five labels incorrectly to the root label. None of the HE algorithms could extract the correct hierarchy in the absence of 40% multi-labels. With 40% and Voting, the number of labels falsely assigned to the root was 13, while with GT it was only three. For BoosTexter, Voting assigned two labels wrongly to the root label in the experiment with TABLE I 20 NEWSGROUPS ALL, -20%, -30% AND -40% RESULTS Measure all 20% 30% 40%ARAM FAM kNN BoosT. ARAM FAM kNN BoosT. ARAM FAM kNN BoosT. ARAM FAM kNN BoosT A 0.635 0.638 0.429 0.549 0.613 0.633 0.383 0.456 0.596 0.619 0.322 0.412 0.563 0.591 0.255 0.387 F1 0.694 0.696 0.565 0.677 0.675 0.688 0.528 0.604 0.662 0.677 0.469 0.566 0.640 0.657 0.392 0.542 F 0.691 0.692 0.480 0.605 0.671 0.688 0.429 0.507 0.658 0.676 0.364 0.465 0.630 0.652 0.296 0.441 OE 0.221 0.220 0.336 0.222 0.259 0.236 0.387 0.275 0.273 0.259 0.415 0.301 0.301 0.291 0.434 0.316 RL 0.100 0.098 0.124 0.073 0.108 0.110 0.128 0.077 0.098 0.103 0.132 0.079 0.101 0.106 0.135 0.082 C 4.188 4.168 6.080 4.164 4.397 4.446 6.184 4.286 4.246 4.340 6.326 4.328 4.334 4.463 6.397 4.379 AP 0.789 0.790 0.677 0.778 0.774 0.782 0.657 0.758 0.769 0.774 0.645 0.747 0.759 0.764 0.638 0.740 AUPRC 0.775 0.772 0.618 0.749 0.743 0.727 0.581 0.691 0.733 0.722 0.555 0.671 0.715 0.708 0.535 0.660 H-loss 0.103 0.123 0.121 0.094 0.102 0.098 0.124 0.108 0.106 0.103 0.132 0.117 0.115 0.111 0.145 0.122 Wins 1 5 0 3 1 6 0 2 2 6 0 1 2 6 0 1 LCAPD 0 0 0 0 0 0 0 0 0 0 0.12 0 0.05 0 0 0 0.51 0.26 0.17 0 CTED 0 0 0 0 0 0 0 0 0 0 0.14 0 0.07 0 0 0 0.50 0.21 0.21 0 TO* 0 0 0 0 0 0 0 0 0 0 0.11 0 0.05 0 0 0 0.39 0.18 0.15 0 30% removed labels and and six labels in the experiment with 40% removed labels. GT resulted in zero distances in the both cases. Assigning more labels to the root creates more shallow and wider hierarchies \(trivial case as stated before The good hierarchy extraction with ART networks demonstrates the system robustness  even with strongly damaged data the system can rebuild the original hierarchy C. RCV1-v2 Dataset The next experiment was based on the tokenized version of 


the RCV1-v2 dataset introduced in [21]. Only the topics label set consisting of 103 labels arranged in a hierarchy of depth four is examined here. Documents of the original training set of 23,149 were converted to TF-IDF weights and normalized Afterwards the set was splitted in 15,000 randomly selected documents as training and the remaining as test samples In this case, the Voting variant of HE applied to the TTML resulted in the LCAPD, CTED and TO* values 0.12, 0.15 and 0.13, respectively. The corresponding values of the GT variant are 0.05, 0.07 and 0.05. The poor performance of the Voting method is due to the fact that for the TTML only very high threshold values succeed in removing enough noise The Voting results are thus dominated by bad hierarchies extracted for all but the highest thresholds The classification and HE results for this dataset are shown in Table II. ML-ARAM has better performance results on this data set in all points than ML-FAM except for RL being the best of all classifiers in terms of the multi-label performance measures. BoosTexter is the best in terms of all ranking measures For both HE algorithms the distances of BoosTexter are the best, those of ML-FAM second, followed ML-ARAM and ML-kNN. All three distance measures correlate. Interesting is also that for ML-kNN the distance values obtained by both HE methods are almost the same The hierarchy extracted by GT from the TTML has much lower distances values as compared with the hierarchies extracted by both methods from predicted multi-labels. This reflects a specific problem of HE, since only a small fraction of the incorrectly classified multi-labels can prevent building of a proper hierarchy. For example, 16.5% of misassigned labels in the extracted hierarchy are responsible for about 80% of LCAPD calculated from the predictions of MLARAM. This large part of the HE error is caused by only 4% of the test data. Under these circumstances the other distances behave analogically. Most labels were not assigned making them trivial edges, but six labels were assigned to a false branch. This can happen when labels have a strong correlation and in the step Hierarchy Construction of the basic algorithm the parent is not unique in the confidence matrix. BoosTexters results suffer less from this problem because it generally sets more labels for each test sample 


Both HE algorithms behaved similarly on the predictions of the ART networks. They constructed a deeper hierarchy than the original one and wrongly assigned the same 11 labels to the root node. The higher distances come from Voting assigning more labels to the wrong branch. For MLkNN both algorithms again create very similar hierarchy trees, both misassigned 28 labels to the root label. For BoosTexter it was seven with Voting and eight with GT Voting produced a deeper hierarchy here D. WIPO-alpha Dataset The WIPO-alpha dataset1 comprises patent documents collected by the World Intellectual Property Organization WIPO ments. Preprocessing was performed as follows: From each document, the title, abstract and claims texts were extracted stop words were removed using the list from [20] and words were stemmed using the Snowball stemmer [22]. All but the 1%-most-frequent stems were removed, the remaining stems were converted to TF-IDF weights and these were normalized to the range of [0, 1]. Again, TF-IDF conversion and normalization were done independently for the training and the test set. The original hierarchy consists, from top to bottom, of 8 sections, 120 classes, 630 subclasses and about 69,000 groups. In our experiment, only records from the sections A \(5802 training and 5169 test samples H \(5703 training and 5926 test samples 1http://www.wipo.int/classifications/ipc/en/ITsupport/Categorization dataset/wipo-alpha-readme.html August 2009 TABLE II RCV1-V2 RESULTS Measure ARAM FAM kNN BoosT A 0.748 0.731 0.651 0.695 F1 0.795 0.777 0.735 0.769 F 0.805 0.787 0.719 0.771 OE 0.077 0.089 0.104 0.063 RL 0.087 0.086 0.026 0.015 C 11.598 11.692 8.563 5.977 AP 0.868 0.860 0.839 0.873 AUPRC 0.830 0.794 0.807 0.838 H-loss 0.068 0.077 0.097 0.081 Wins 4 0 0 5 LCAPD 0.29 0.22 0.25 0.20 0.34 0.34 0.21 0.18 


CTED 0.32 0.23 0.28 0.22 0.38 0.37 0.24 0.20 TO* 0.27 0.18 0.22 0.17 0.31 0.30 0.21 0.17 document in the collection has one so-called main code and any number of secondary codes, where each code describes a group the document belongs to. Both main and secondary codes were used in the experiment, although codes pointing to groups outside of sections A and H were ignored. We also removed groups that did not contain at least 30 training and 30 test records \(and any documents that only belonged to such small groups 7,364 test records with 924 attributes each and a label set of size 131 In this case, the Voting variant of the HE algorithm applied to the TTML resulted in the LCAPD, CTED and TO* values of 0.13, 0.12 and 0, respectively. GT showed the same values. Remarkable are the TO* distances, which are equal to 0. This is due to the fact that the WIPO-alpha hierarchy contains 16 single-child labels that are not partitioned by the true multi-labels: whenever a single-child label j is contained in a multi-label, so is its child, and vice versa. It is therefore theoretically impossible to deduce from the multilabels which of them is the parent of the other. As a result the HE algorithms often choose the wrong parent, resulting in higher LCAPD and CTED values. TO*, as described above is invariant under such choices The results obtained on the WIPO-alpha dataset are shown in Table III. The classification performance of the ART-based networks on this dataset is slightly worse than that of BoosTexter. Mostly in the terms of OE, RL, C, AP, AUPRC, and H-loss measures BoosTexter is better because its rankings are better and it assigned more labels to each sample. But the ART networks have better HE results because their predicted labels are more consistent with the original hierarchy. MLkNN has the worst classification results and distance values again. The reason for the high relative difference between LCAPD as well as CTED and TO* obtained for the ART networks or BoosTexter as compared to the results of the other datasets is because most of the labels were assigned in the right branch but not exactly where they belong Both HE algorithms extracted the same hierarchy from the predictions of ML-ARAM and a very similar hierarchy for ML-FAM. About 5% labels were assigned wrongly to the 


root label in the hierarchies of the ART networks. For MLTABLE III WIPO-ALPHA\(AH Measure ARAM FAM kNN BoosT A 0.588 0.590 0.478 0.564 F1 0.694 0.691 0.614 0.693 F 0.682 0.682 0.593 0.679 OE 0.052 0.057 0.110 0.042 RL 0.135 0.136 0.056 0.025 C 25.135 25.269 22.380 11.742 AP 0.790 0.785 0.724 0.802 AUPRC 0.720 0.684 0.688 0.762 H-loss 0.090 0.093 0.149 0.079 Wins 1 2 0 6 LCAPD 0.16 0.16 0.17 0.17 0.32 0.38 0.21 0.21 CTED 0.18 0.18 0.19 0.19 0.38 0.53 0.27 0.27 TO* 0.05 0.05 0.07 0.07 0.24 0.32 0.08 0.08 kNN both HE methods wrongly assigned about the half of the labels and about 20% of total labels were assgined to the root label. Here, GT extracted a much worse hierarchy as shown by CTED being 0.15 higher for GT than for Voting For BoosTexter both HE methods built the same hierarchy and no label was wrongly assigned to the root. All extracted hierarchies were one level deeper than the original one Although Voting produced worse hierarchies than GT on two previous datasets, this time its distance values were comparable or even better. In comparison to Voting, GT has higher values for all distances on the multi-labels of MLkNN. Voting has the advantage of being a much simpler method and of being more dataset independent. Still the tree distances have the same ranking order for all classifiers for both HE methods VI. CONCLUSION In this paper we studied Hierarchical Multi-label Classification \(HMC tive was to derive hierarchical relationships between output classes from predicted multi-labels automatically. We have developed a data-mining-system based on two recently proposed multi-label extensions of the FAM and ARAM neural networks: ML-FAM and ML-ARAM as well as on a Hierarchy Extraction \(HE algorithm builds association rules from label co-occurrences 


and has two modifications. The presented approach is general enough to be used with any other multi-label classifier or HE algorithm. We have also developed a new tree distance measure for quantitative comparison of hierarchies In extensive experiments made on three text-mining realworld datasets, ML-FAM and ML-ARAM were compared against two state-of-the-art multi-label classifiers: ML-kNN and BoosTexter. The experimental results confirm that the proposed approach is suitable for extracting middle and large-scale class hierarchies from predicted multi-labels. In future work we intend to examine approaches for measuring the quality of hierarchical multi-label classifications REFERENCES 1] M. Ruiz and P. Srinivasan, Hierarchical text categorization using neural networks, Information Retrieval, vol. 5, no. 1, pp. 87118 2002 2] N. Cesa-Bianchi, C. Gentile, and L. Zaniboni, Incremental algorithms for hierarchical classification, The Journal of Machine Learning Research, vol. 7, pp. 3154, 2006 3] , Hierarchical classification: combining Bayes with SVM, in Proceedings of the 23rd international conference on Machine learning ACM New York, NY, USA, 2006, pp. 177184 4] F. Wu, J. Zhang, and V. Honavar, Learning classifiers using hierarchically structured class taxonomies, in Proceedings of the 6th International Symposium on Abstraction, Reformulation And Approximation Springer, 2005, p. 313 5] L. Cai and T. Hofmann, Hierarchical document categorization with support vector machines, in Proceedings of the thirteenth ACM international conference on Information and knowledge management ACM New York, NY, USA, 2004, pp. 7887 6] C. Vens, J. Struyf, L. Schietgat, S. Dz?eroski, and H. Blockeel Decision trees for hierarchical multi-label classification, Machine Learning, vol. 73, no. 2, pp. 185214, 2008 7] E. P. Sapozhnikova, Art-based neural networks for multi-label classification, in IDA, ser. Lecture Notes in Computer Science, N. M Adams, C. Robardet, A. Siebes, and J.-F. Boulicaut, Eds., vol. 5772 Springer, 2009, pp. 167177 8] M. Zhang and Z. Zhou, ML-kNN: A lazy learning approach to multilabel learning, Pattern Recognition, vol. 40, no. 7, pp. 20382048 2007 9] R. Schapire and Y. Singer, BoosTexter: A boosting-based system for text categorization, Machine learning, vol. 39, no. 2, pp. 135168 


2000 10] K. Zhang, A constrained edit distance between unordered labeled trees, Algorithmica, vol. 15, no. 3, pp. 205222, 1996 11] A. Maedche and S. Staab, Measuring similarity between ontologies Lecture notes in computer science, pp. 251263, 2002 12] G. Carpenter, S. Martens, and O. Ogas, Self-organizing information fusion and hierarchical knowledge discovery: a new framework using ARTMAP neural networks, Neural Networks, vol. 18, no. 3, pp. 287 295, 2005 13] A.-H. Tan and H. Pan, Predictive neural networks for gene expression data analysis, Neural Networks, vol. 18, pp. 297306, April 2005 14] G. Carpenter, S. Grossberg, N. Markuzon, J. Reynolds, and D. Rosen Fuzzy ARTMAP: A neural network architecture for incremental supervised learning of analog multidimensional maps, IEEE Transactions on Neural Networks, vol. 3, no. 5, pp. 698713, 1992 15] Y. Freund and R. Schapire, A decision-theoretic generalization of online learning and an application to boosting, Journal of computer and system sciences, vol. 55, no. 1, pp. 119139, 1997 16] K. Zhang and T. Jiang, Some MAX SNP-hard results concerning unordered labeled trees, Information Processing Letters, vol. 49 no. 5, pp. 249254, 1994 17] G. Tsoumakas and I. Vlahavas, Random k-labelsets: An ensemble method for multilabel classification, Lecture Notes in Computer Science, vol. 4701, p. 406, 2007 18] K. Punera, S. Rajan, and J. Ghosh, Automatic construction of nary tree based taxonomies, in Proceedings of IEEE International Conference on Data Mining-Workshops. IEEE Computer Society 2006, pp. 7579 19] T. Joachims, A probabilistic analysis of the Rocchio algorithm with TFIDF for text categorization, in Proceedings of the Fourteenth International Conference on Machine Learning. Morgan Kaufmann Publishers Inc. San Francisco, CA, USA, 1997, pp. 143151 20] A. McCallum, Bow: A toolkit for statistical language modeling, text retrieval, classification and clustering, 1996 http://www.cs.cmu.edu/ mccallum/bow 21] D. Lewis, Y. Yang, T. Rose, and F. Li, RCV1: A new benchmark collection for text categorization research, The Journal of Machine Learning Research, vol. 5, pp. 361397, 2004 22] M. Porter, Snowball: A language for stemming algorithms, 2001 http://snowball.tartarus.org/texts/introduction.html 


the US census data set. The size of pilot sample is 2000, and all 50 rules are derived from this pilot sample. In this experiment the ?xed value x for the sample size is set to be 300. The attribute income is considered as a differential attribute, and the difference of income of husband and wife is studied in this experiment. Figure 3 shows the performance of the 5 sampling 331 6DPSOLQJ9DULDQFH             9D UL DQ FH R I V WL PD WL RQ  9DU 9DU 9DU 5DQG a timation 6DPSOLQJ&RVW    


      6D PS OL QJ  RV W 9DU 9DU 9DU 5DQG b 6DPSOLQJ$FFXUDF          5  9DU 9DU 9DU 5DQG c Fig. 2. Evaluation of Sampling Methods for Association Rule Mining on the Yahoo! Dataset procedures on the problem of differential rule mining on the US census data set. The results are also similar to the experiment results for association rule mining: there is a consistent trade off between the estimation variance and sampling cost by setting their weights. Our proposed methods have better performance than simple random sampling method 


We also evaluated the performance of our methods on the Yahoo! dataset. The size of pilot sampling is 2000, and the xed value x for the sample size is 200. The attribute price is considered as the target attribute. Figure 4 shows the performance of the 5 sampling procedures on the problem of differential rule mining on the Yahoo! dataset. The results are very similar to those from the previous experiments VI. RELATED WORK We now compare our work with the existing work on sampling for association rule mining, sampling for database aggregation queries, and sampling for the deep web Sampling for Association Rule Mining: Sampling for frequent itemset mining and association rule mining has been studied by several researchers [23], [21], [11], [6]. Toivonen [23] proposed a random sampling method to identify the association rules which are then further veri?ed on the entire database. Progressive sampling [21], which is based on equivalence classes, involves determining the required sample size for association rule mining FAST [11], a two-phase sampling algorithm, has been proposed to select representative transactions, with the goal of reducing computation cost in association rule mining.A randomized counting algorithm [6] has been developed based on the Markov chain Monte Carlo method for counting the number of frequent itemsets Our work is different from these sampling methods, since we consider the problem of association rule mining on the deep web. Because the data records are hidden under limited query interfaces in these systems, sampling involves very distinct challenges Sampling for Aggregation Queries: Sampling algorithms have also been studied in the context of aggregation queries on large data bases [18], [1], [19], [25]. Approximate Pre-Aggregation APA  categorical data utilizing precomputed statistics about the dataset Wu et al. [25] proposed a Bayesian method for guessing the extreme values in a dataset based on the learned query shape pattern and characteristics from previous workloads More closely to our work, Afrati et al. [1] proposed an adaptive sampling algorithm for answering aggregation queries on hierarchical structures. They focused on adaptively adjusting the sample size assigned to each group based on the estimation error in each group. Joshi et al.[19] considered the problem of 


estimating the result of an aggregate query with a very low selectivity. A principled Bayesian framework was constructed to learn the information obtained from pilot sampling for allocating samples to strata Our methods are clearly distinct for these approaches. First strata are built dynamically in our algorithm and the relations between input and output attributes are learned for sampling on output attributes. Second, the estimation accuracy and sampling cost are optimized in our sample allocation method Hidden Web Sampling: There is recent research work [3 13], [15] on sampling from deep web, which is hidden under simple interfaces. Dasgupta et al.[13], [15] proposed HDSampler a random walk scheme over the query space provided by the interface, to select a simple random sample from hidden database Bar-Yossef et al.[3] proposed algorithms for sampling suggestions using the public suggestion interface. Our algorithm is different from their work, since our goal is sampling in the context of particular data mining tasks. We focus on achieving high accuracy with a low sampling cost for a speci?c task, instead of simple random sampling VII. CONCLUSIONS In this paper, we have proposed strati?cation based sampling methods for data mining on the deep web, particularly considering association rule mining and differential rule mining Components of our approach include: 1 the relation between input attributes and output attributes of the deep web data source, 2 maximally reduce an integrated cost metric that combines estimation variance and sampling cost, and 3 allocation method that takes into account both the estimation error and the sampling costs Our experiments show that compared with simple random sampling, our methods have higher sampling accuracy and lower sampling cost. Moreover, our approach allows user to reduce sampling costs by trading-off a fraction of estimation error 332 6DPSOLQJ9DULDQFH      


     V WL PD WL RQ R I 9D UL DQ FH  9DU 9DU 9DU 5DQG a timation 6DPSOLQJ&RVW          6D PS OL QJ  RV W 9DU 9DU 


9DU 5DQG b 6DPSOLQJ$FFXUDF          5  9DU 9DU 9DU 5DQG c Fig. 3. Evaluation of Sampling Methods for Differential Rule Mining on the US Census Dataset 6DPSOLQJ9DULDQFH             9D UL DQ FH R I V WL 


PD WL RQ  9DU 9DU 9DU 5DQG a timation 6DPSOLQJ&RVW          6D PS OL QJ  RV W  9DU 9DU 9DU 5DQG b 6DPSOLQJ$FFXUDF         


    5  9DU 9DU 9DU 5DQG c Fig. 4. Evaluation of Sampling Methods for Differential Rule Mining on the Yahoo! Dataset REFERENCES 1] Foto N. Afrati, Paraskevas V. Lekeas, and Chen Li. Adaptive-sampling algorithms for answering aggregation queries on web sites. Data Knowl Eng., 64\(2 2] Rakesh Agrawal and Ramakrishnan Srikant. Fast algorithms for mining association rules. In Proceedings of the 20th International Conference on Very Large Data Bases, pages 487499, 1994 3] Ziv Bar-Yossef and Maxim Gurevich. Mining search engine query logs via suggestion sampling. Proc. VLDB Endow., 1\(1 4] Stephen D. Bay and Michael J. Pazzani. Detecting group differences Mining contrast sets. Data Mining and Knowledge Discovery, 5\(3 246, 2001 5] M. K. Bergman. The Deep Web: Surfacing Hidden Value. Journal of Electronic Publishing, 7, 2001 6] Mario Boley and Henrik Grosskreutz. A randomized approach for approximating the number of frequent sets. In ICDM 08: Proceedings of the 2008 Eighth IEEE International Conference on Data Mining, pages 4352 Washington, DC, USA, 2008. IEEE Computer Society 7] D. Braga, S. Ceri, F. Daniel, and D. Martinenghi. Optimization of Multidomain Queries on the Web. VLDB Endowment, 1:562673, 2008 8] R. E. Ca?isch. Monte carlo and quasi-monte carlo methods. Acta Numerica 7:149, 1998 9] Andrea Cali and Davide Martinenghi. Querying Data under Access Limitations. In Proceedings of the 24th International Conference on Data Engineering, pages 5059, 2008 10] Bin Chen, Peter Haas, and Peter Scheuermann. A new two-phase sampling based algorithm for discovering association rules. In KDD 02: Proceedings of the eighth ACM SIGKDD international conference on Knowledge discovery and data mining, pages 462468, New York, NY, USA, 2002 ACM 


11] W. Cochran. Sampling Techniques. Wiley and Sons, 1977 12] Arjun Dasgupta, Gautam Das, and Heikki Mannila. A random walk approach to sampling hidden databases. In SIGMOD 07: Proceedings of the 2007 ACM SIGMOD international conference on Management of data pages 629640, New York, NY, USA, 2007. ACM 13] Arjun Dasgupta, Xin Jin, Bradley Jewell, Nan Zhang, and Gautam Das Unbiased estimation of size and other aggregates over hidden web databases In SIGMOD 10: Proceedings of the 2010 international conference on Management of data, pages 855866, New York, NY, USA, 2010. ACM 14] Arjun Dasgupta, Nan Zhang, and Gautam Das. Leveraging count information in sampling hidden databases. In ICDE 09: Proceedings of the 2009 IEEE International Conference on Data Engineering, pages 329340 Washington, DC, USA, 2009. IEEE Computer Society 15] Loekito Elsa and Bailey James. Mining in?uential attributes that capture class and group contrast behaviour. In CIKM 08: Proceeding of the 17th ACM conference on Information and knowledge management, pages 971 980, New York, NY, USA, 2008. ACM 16] E.K. Foreman. Survey sampling principles. Marcel Dekker publishers, 1991 17] Ruoming Jin, Leonid Glimcher, Chris Jermaine, and Gagan Agrawal. New sampling-based estimators for olap queries. In ICDE, page 18, 2006 18] Shantanu Joshi and Christopher M. Jermaine. Robust strati?ed sampling plans for low selectivity queries. In ICDE, pages 199208, 2008 19] Bing Liu. Web Data Mining: Exploring Hyperlinks, Contents, and Usage Data \(Data-Centric Systems and Applications Inc., Secaucus, NJ, USA, 2006 20] Srinivasan Parthasarathy. Ef?cient progressive sampling for association rules. In ICDM 02: Proceedings of the 2002 IEEE International Conference on Data Mining, page 354, Washington, DC, USA, 2002. IEEE Computer Society 21] William H. Press and Glennys R. Farrar. Recursive strati?ed sampling for multidimensional monte carlo integration. Comput. Phys., 4\(2 1990 22] Hannu Toivonen. Sampling large databases for association rules. In The VLDB Journal, pages 134145. Morgan Kaufmann, 1996 23] Fan Wang, Gagan Agrawal, Ruoming Jin, and Helen Piontkivska. Snpminer A domain-speci?c deep web mining tool. In Proceedings of the 7th IEEE International Conference on Bioinformatics and Bioengineering, pages 192 199, 2007 24] Mingxi Wu and Chris Jermaine. Guessing the extreme values in a data set a bayesian method and its applications. VLDB J., 18\(2 25] Mohammed J. Zaki. Scalable algorithms for association mining. IEEE Transactions on Knowledge and Data Engineering, 12:372390, 2000 


333 


