  AN ALGORITHM OF LOCATING ORDER MINING BASED ON SEQUENCE NUMBER GANG FANG, HONG YING, JIANG XIONG, YONG-JIAN ZHAO Chongqing Three Gorges University Chongqing 404000 P.R. China E-MAIL: cqwzjsjfg@163.com, dcs-yh 263.net, xjcq123@sohu.co m, zhao8956@163.com Abstract At present, existing associati on rules mining algorithms have redundant candidate freque nt itemsets and repeated computing. This paper proposes an algorithm of locating order mining based on sequence numb er, which is suitable for mining long frequent itemsets. In ord er to fast search long frequent itemsets, the algorithm adopts not only traditional down search but also the method of locating order of subset to generate candidate frequent items ets. It has two aspects, which are different from traditional down se arch mining algorithm. One is that the algorithm need locate order of subsets of non frequent itemsets via down search. The other is that the algorithm uses character of attribute sequence number to compute support for only scanning database once. The algorithm may efficiently delete repeated L-candidate fre quent itemsets generated by L+1\loca ting subsetsê order, whose efficiency is improved. The resu lt of experiment indicates that the algorithm is suitable for mining long frequent itemsets, and it is faster and more efficient th an present algo rithms of mining long frequent itemsets Keywords Long frequent itemsets; Down search; Locating order Sequence number; Association rules 1  Introduction In order to reduce redundant candidate frequent itemsets and the times of scanning database, people propose some mining algorithms, such as, IDMFI A as In order to easily generate candidate frequent itemsets and fast compute support, some binary mining al gorithms were presented, such as in [2, 3, 4, and ori as in faster than Apri ori for binary logic operation, and B-ARDSM is also fas ter than IDMFIA when double mining, and although ARNBSN  er t h an B-Apri ori it is only suitable for mining short frequent itemsets. ITDASN as in  is suitable for mining long frequent itemset s, but there are still redundant candidate frequent itemsets and repeated computing when mining algorithm generates L-candidate frequent itemsets of L+1\ itemsets. A nd so, this paper proposes an algorithm of locating order mining based on sequence number, denoted by ALOMSN, whi ch is suitable for mining long frequent itemsets, and is faster and more efficient than ITDASN as in 2  Base Notions and Properties Definition 1 Binary Transaction BT  transaction T is expressed as character string b 1  b 2  b m  b k   0, 1 k 1 m if i k  T and then b k 1, otherwise b k 0 Example let I 1, 2, 3, 4, 5, 6} be an itemsets, if a transaction is expressed as T i 2, 5, 6}, and then BT i  010011 Definition 2 Digital Transaction DT is an integer and its value is decimal integer of binary transaction Example if BT 010010\ then DT 18 Definition 3 Digital Item DI and it is the simplest digital transaction which only expresses an item attribute Example let I  i 1  i 2  i m and then DI 1 1 DI m  2 m-1  Definition 4 Digital Transaction Length DTL  integer, it is equal to the su m of ç1é in Binary Transaction Definition 5 Suppose digital transaction of T 1 is denoted by DT 1 digital transaction of T 2 is denoted by DT 2 If T 1  T 2  and then DT 1  DT 2  DT 1 is regarded as subset of DT 2 which is regarded as superset of DT 1  Definition 6 Sequence Number SN is a group of ordered number, here, these numbers may be repeated, and each number is called a sub-Item of sequence number Example let SN 46, 124, 65, 125, 79, 62, and 112} be a sequence number, thereinto, 124 is called a sub-Item of Sequence Number Definition 7 Sub Item Dimension SID s an integer it is equal to the sum of ç1é in binary code of sub-Item Example, let 58 be a sub-Item, and then SID 58 SID  111010 2 4 Definition 8 Sequence Number Dimension SND  an integer, it is equal to the sum of items SID contained by 403 2010 IEEE 978-1-4244-6527-9/10/$26.00 Proceedings of the Ninth International Conference on Machine Learning and Cybernetics, Qingdao, 11-14 July 2010 


  SN  Example, let SN 58, 30, 63, 121, 79, 63, and 109} be a sequence number, and SND  SID 58 SID 30 SID  63 SID 121 SID 79 SID 63 SID 109\4 + 4 6 + 5 + 5 + 6 + 5 = 35 Property 1 Let I  i 1  i 2  i k if DTL m  DTL n  L 1, and then if and only if DTL  DT m  DT n  L the number of same items is L 1 DT m and DT n  3  The mining algorithm based on sequence number 3.1  Data Structure and the Rule of Locating Order Data Structure Candidate  Int value; // saving DT  Int length; //saving DTL  Int LNo; // saving the va lue of locating order Int n ew int[m  saving the site of item  CSet  NFSet According to Property 1 we may let the rule of location order be expressed as follows Rule Each L 1\ubset of L non frequent itemsets is located only once when it is firstly generated from L non frequent itemsets to L 1\ubset, i.e. locating order of subset is only one when it is saved in CSet  LNo  Example, here are two transactions 5-{61, 55 DT 53 is not only 4-subset of 61, b ut also 4-subset of 55, obviously it is the third time that 61 generates 53 when 61 generates its all 4-subsets, it is the second time that 55 gener ates 53 when 55 generates its all 4-subsets, and so, locating order of 53 is not 2 but 3 because 55 wonêt generate 53 and neednêt judge according to these rules of generating subset in chapter 3.2 3.2  The Key Technique of Gener ating Candidate Frequent Itemsets The key technique is that the method of generating  l 1\ndidate frequent itemsets by locating subsetês order is used to down search frequent itemsets There are three problems to solve by the algorithm which are expressed as follows 1\he algorithm need delete a specified item of l non frequent itemsets 2\he algorithm need delete repeated l 1 frequent itemsets of l non frequent itemsets 3\gorithm need delete redundant l 1\ndidate frequent itemsets, which are subset of frequent itemsets or superset of nonfrequent itemsets As we all known, presented algorithm is easy to solve the third problem. The algorithm uses the feature of locating order to solve the rest proble ms, i.e. it can automatically delete an item of l non frequent itemsets to generate  l 1\ndidate frequent itemsets, and then uses the relation between length and order of subset to delete repeated  l 1\ndidate itemsets Let I  i 1  i 2  i m be an itemsets, and let ISet save digital item DI ely ISet  t 2 t  t 0 m 1\uppose there are N  l non frequent itemsets, let NFSet save them, and let CSet save l 1\Aiming to each NFSet  i  ich  saves i the first l non frequent itemsets, these rules of generating subset are expressed as follows Rule 1 Aiming to each l non frequent itemsets, namely NFSet  i  e su m o f   l 1\subset generated by NSet  i   denoted by Sum  NFSet  i  length  NFSet  i  LNo  Rule 2 when NFSet  i  rat es j the first l 1\set, if location identifier deleted by NFSet  i  is de note d  by  ID and ID   NFSet  i  LNo  j 1 Rule 3 when NFSet  i  ge ne r a tes j the first l 1 which is saved by CSet  j  valu e of its domain are expressed as follows CSet  j  value  NFSet  i  value  ISet  NFSet  i  location ID   CSet  j  length  NFSet  i  length-1  CSet  j  LNo  NFSet  i  LNo  j 1\, namely ID  CSet  j  location [0... \(CSet j length-1   NFSet  i  location [0 ID 1 ID 1É \(NFSet i length-1  Let i 1  i 2  i m be a transaction, whose digital transaction is denoted by CT its information of data structure is expressed as follows CT  value 2 m-1  CT  length  m  CT  LNo 0 CT  location [0 0 CT  location m 1  m 1 The algorithm of generating   l 1\date itemsets is expressed as follows Input: there are N  l non frequent itemsets, and these itemsets are saved NFSet  Output: there are C  l 1\hese itemsets are saved CSet  Generate-Candidate\(NFSet,CSet 1\OR i 1 i  N  i  2\FOR j 1 j NFSet i  length NFSet i  LNo  j  3 ID NFSet i  LNo  j 1 4\     C valu e=NFSet i  value  ISet [NFSet i  location ID   5\ CSet[C length NFSet i  length 1 6\ CSet[C LNo NFSet i  LNo  j 1 7\     FOR k 0 k  ID  k  Delteing ID the first item 8\     C location  NFSet i  location k   9\FOR k  ID 1 k NFSet i  length  k  10\      CS  location  NFSet[i  location k   11\M = 0 404 Proceedings of the Ninth International Conference on Machine Learning and Cybernetics, Qingdao, 11-14 July 2010 


  12 13 3.3  The Key Technique of Computing Support The method of computing support adopted by the algorithm is expressed as follows Step1: According to definition 1 the algorithm extracts Binary Transaction from original database Step2: Aiming to each item, its corresponding Binary code is turned into Sequence Number in subsection according to definition 6  Step3: Aiming each candidate frequent itemsets, we knew that every item in candidate has own Sequence Number and then we will use Boolean calculation compute these Sequence Number in turn, and fina lly the result is new Sequence Number Step4: Computing Sequence Number Dimension of the new Sequence Number according to definition 8 Its value is equal to support of candidate frequent itemsets For example, there are ten transactions in database. The course of computing support is expressed as follows Step1: Extracting Binary Transaction from database T 1 a, b, c, e, f     BT 1 111011 2  T 2 a, c, d, e, f     BT 2 101111 2  T 3 a, b, e, f BT 3 110011 2  T 4 a, b, c BT 4 111000 2  T 5 b, c, d, e, f     BT 5 011111 2  T 6 c, d, e, f BT 6 001111 2  T 7 a, c, d, f       BT 7 101101 2  T 8 c, d, e BT 8 001110 2  T 9 a, b, c, e, f     BT 9 111011 2  T 10 b, d, e, f BT 10 010111 2  Setp2: Computing Sequence Number of each sub-Item in database is expressed as table 1 T ABLE 1  C OMPUTING S EQUENCE N UMBER  No. a  b c d e f BT 1 1 1 1 0 1 1 BT 2 1 0 1 1 1 1 BT 3 1 1 0 0 1 1 BT 4 1 1 1 0 0 0 BT 5 0 1 1 1 1 1 Item 1 30 23 27 9 29 29 BT 6 0 0 1 1 1 1 BT 7 1 0 1 1 0 1 BT 8 0 0 1 1 1 0 BT 9 1 1 1 0 1 1 BT 10 0 1 0 1 1 1 Item 2  10 3 30 29 23 27 SN 30 10 23 3 27 30 9 29 29 23 29 27 Step3: Let C = {c, d and e} be a candidate frequent itemsets, and then Computing its support, denoted by Support C SN \({c}\27, 30 SN \({d}\ {9, 29 SN \({e}\29, 23 SN \({c, d, e}\{27&9&29, 30&29&23  9, 20 Support \(C\ = SND \({9, 20  SND \(9\SND \(20 2 + 2  4 3.4  The Process of Search Frequent Itemsets FSet saving frequent itemsets FI  NFSet saving NFI of searching down same length CSet saving candidate frequent itemsets of searching down same length Step1 The algorithm changes original transaction into mining transaction, namely, origi nal database is turned into D  on descending by digital tr ansaction according to definition 1 and 2  Step2 The algorithm computes support of first candidate frequent itemsets wh ich contain all item attributes if it is frequent itemsets, and then it will be written to FSet  then algorithm goes to Step5 Otherwise, it will be written to NFSet  Step3 The algorithm generates frequent itemsets. There are two parties as follows Firstly, the algorithm us es the function of Generate Candidate  NFSet  CSet o generate l 1 l non frequent itemsets And then, aiming to each l 1\sets of CSet if it is not subset of FSet then computing its su pport by chapter 3.3 If it is a frequent itemset then it is written to FSet otherwise it is a non frequent item sets which is written to NFSet  Step4 The algorithm needs repeat doing Step3 until frequent itemsets isnêt generated by algorithm Step5 The algorithm output FSet  4  Comparing the capa bility of algorithms According to the content of reference [4  e  knew that ARNBSN is more efficient than B-Apriori when mining short frequent itemsets, ITDASN is only suitable for mining long frequent itemsets. Hence, here we only compare ALOMSN with ARNBSN and ITDASN 4.1  Analyzing the Capability of Algorithms ARNBSN: The algorithm is similar to B-Apriori when generating candidate frequent ite msets, but the method of 405 Proceedings of the Ninth International Conference on Machine Learning and Cybernetics, Qingdao, 11-14 July 2010 


  computing support is computing Sequence Number Degree The algorithm only need scan once all these transactions and use Boolean calculation to compute this Sequence Numbers Degree, and so the efficiency of algorithm is improved efficiently. It is more efficient th an B-Apriori, but it is only suitable for mining short frequent itemsets ITDASN: The algorithm is only suitable for mining long frequent itemsets since this do wn search strategy is adopted It uses the way of binary B oolean calculation to generate binary candidate frequent items ets, and uses the method of computing Sequence Number Degree to obtain support of candidate frequent itemsets. But the algorithm have redundant candidate frequent itemsets and repeated computing when it generates L-candidate frequent itemsets of L+1\sets ALOMSN: The algorithm is also suitable for mining long frequent itemsets through down search. It also uses the method of computing Sequence Number dimension to obtain support of candidate frequent itemsets. The algorithm uses the way of binary Boolean cal culation to generate binary candidate frequent itemsets, but the algorithm need locate order of subsets when it generates L-candidate frequent itemsets of \(L+1\item sets, and so the algorithm is able to delete redundant candidate frequent itemsets and repeated computing to improve efficiency 4.2  Comparing the Experiment of Algorithms Now we use these results of experiment to testify above analyses. We use three mining algorithms to generate frequent itemsets from these transactions, their Binary Transactions are expressed as digital from 1 to 4095, there are 12 items attribute in database, i.e m 12 N 4095 Our experimental circumstances are expressed as follow R\PU 420 1.60 GHz, 1.24G language of the procedure is Visual C# 2005.NET, OS is Windows XP Professional The result of generating frequent itemsets about algorithms ARNBSN and ALOMSN is expressed as Fig. 1 and the result of generating frequent itemsets about algorithms ITDASN and ALOMSN is expressed as Fig. 2 here is absolute support. As the support and length of frequent itemsets change, the runtime of ARNBSN and ALOMSN is expressed as Fig 3. As the support and length of frequent itemsets change, the runtime of ITDASN and ALOMSN is expressed as Fig 4  Figure 1. The experimental result of ARNBSN and ALOMSN  Figure 2. The experimental result of ITDASN and ALOMSN   0 200 400 600 800 1000 1200 1400 24\(2 12\(3 4.9\(4 2.4\(5 1.2\(6 0.9\(7 0.48\(8 0.24\(9 Support%\(Length Runtime  M illise c o n d ARNBSN ALOMSN  Figure 3. Comparing runtime of ARNBSN and ALOMSN             Figure 4. Comparing r untime of ITDASN and ALOMSN 5  Conclusions This paper proposes an algorithm of locating order mining based on sequence number, which is suitable for 406 Proceedings of the Ninth International Conference on Machine Learning and Cybernetics, Qingdao, 11-14 July 2010 


  mining long frequent itemsets. The result of experiment indicates that the algorithm is faster and more efficient than present algorithms of mining long frequent itemsets  Acknowledgements This work was fully sup ported by science and technology research projects of Chongqing Education Commission. \(Project No. KJ091108 References 1  Ji GL, Yang M. Song YQ. Sun ZH. Fast Updating Maximum Frequent Itemsets. Journal of Computers 2005, 28\(1\128-135  2  Chen G, Zhu YQ, Yang HB, Study of Some Key Techniques in Mining Association Rule, Journal of Computer Research and Develop ment, 2005, 42 \(10 1785-1789 3  Fang G, Wei ZK, Yin Q. An Algorithm of Association Rules Double Search Mining Based on Binary. In Proc of 7th International Confere nce on Machine Learning and Cybernetics, Kunming, China. IEEE press 2008:184-189 4  Fang G, Wei ZK, Liu YL. An Algorithm of Improved Association Rules Mining. In Proc. of 8th International Conference on Machine Learning and Cybernetics Baoding, China. IEEE press, 2009: 133 - 137 5  Fang G, LIU YL, Xiong J, Ying H. An Improved Top-Down Data Mining Algorithm for Long Frequents In Proc. of 20 09 International Conference on Artificial Intelligence and Compu tational Intelligen ce, Shanghai China. IEEE press, 2009: 312 - 316  407 Proceedings of the Ninth International Conference on Machine Learning and Cybernetics, Qingdao, 11-14 July 2010 


locate   s conditional PLMS-tree in the mining of sequence     s super-patterns. In line 7 through 9, we examine the mps of each node n  and record their minimum mps This value will be used in next step  In line 12 through line 18, secondly, we generate candidate  patterns and output sequential patterns according to each item's icount  Three conditions may occur here The first is that the icount satisfies MIS   This sequence is directly appended to icount 40% which reaches the MIS bde 30%, pattern bde   can be joined into the sequential patterns set. We can see that an infrequent pattern's super set become frequent pattern in this case that is why we need to consider about the  mps  value The other sequential patterns which are started from other items are generated in the same way Finally we can have the complete sequential patterns with MMS by MSCP-growth algorithm the sequential patterns set. The second is that the icount doesn't  V  C ONCLUTION satisfy MIS   but satisfies mps That is, the sequence is currently not a sequential pattern but its super-pattern i.e appending suffix in the sequence has possibility to be Therefore both two conditions have to keep growing and recursively call procedure MSCP-growth for further examining their super-patterns. The third is that the count of sequence doesn't satisfy both MIS   and mps It means that any super- pattern of the sequence   will never be a sequential pattern The procedure will terminate while the root set becomes empty  We use the constructed PLMS-tree in Fig.12 to explain the  mining process in detail At first the  RS  is root and we trace all nodes belong to the first item e in HT According to the nlink of  item e from HT we find \(_ e 1:11111001 n 1 at first, the  position code shows that n 1 is a descent node of RS and n 1 is not recounted in the same branch  n 1  icount  will be add into icount  since n 1 does not have any child node, no node will be  joined into nRS According to the nlink in \(_ e 1:11111001\, the  next node \(_ e 2:101 n 2 will be found n 2 is a descent node of  root and n 2 is not recounted n 2  icount will be added into icount  n 2  also has a child node \(_ c 2:1011\, that can be joined into the  nRS to be a new root set if we need to growth this pattern. And  the next node \(_ e 1:10111011\ is recounted so the node count of this node will not be added into icount Since the icount of In this study, we first address the rare item problem in the  mining of sequential patterns To generate more interesting patterns we extend the concept of MMS on sequential pattern mining and propose an algorithm named MSCP growth to discover complete set of sequential pattern with MMS In experimental study we will compare three well-known traditional methods including GSP PrefixSpan and PLWAP tree with MSCP-growth using several synthetic datasets as well as real-life datasets. Some research directions are briefly  discussed First users may have to tune items supports many times while discovering useful patterns Instead of restarting the whole mining process it is valuable if a support tuning mechanism can be developed Second the concept of MMS can be further applied to constraint-based sequential pattern mining such as time constraints or duration constraints    R EFERENCES item  e  is 60 which reaches the candidate growth condition we mentioned before, we use the nRS and e as a candidate pattern to generate new patterns Pattern  e  also reaches the threshold of sequential pattern i.e MIS e  and can be joined into the sequential patterns set. The second step uses the node in the nRS  _ c 2:1011\, as the new root set of conditional tree to growth new pattern\(s According to  HT  the  icount  of first item e  rooted by _ c 2:1011 is 20 which does not reach the candidate growth condition The  icount  of second item  c  in  HT rooted by _ c 2:1011 is 40 which reaches the condition to growth new candidate patterns so we use the child nodes of _ c 2:1011 _ a 1:10111\ and \(_ b 1:10111\, as nRS to generate new candidate patterns. This pattern also larger than MIS ec which means it can be joined into the sequential patterns set. The complete sequential patterns set with beginning item  e  can be generated by repeating these steps  The reason we use the mps value and candidate growth will  show in following example. We trace the item b now, the icount  of item b is 100% which reaches the condition to generate new candidate and the threshold to be joined into the sequential patterns set. As the tracing step goes, we have the icount of item d 60 in the suffix tree of pattern  b  it reaches the  mps  value=30%, which is the second condition to candidate growth we mentioned before, and it means that this pattern still has possibility to be part of sequential pattern Noted that it doesn't reach MIS bd 65 which means it is not a sequential pattern In the next candidate growth step, we have item e with 1     2    3     4     5      6     7     8      9   Y.-H. Hu and Y.-L. Chen, "Mining association rules with multipl  e minimum supports: a new mining algorithm and a support tuning  mechanism Decision Support Systems vol. 42, is. 1, pp.1-24, 2006  R. Agrawal and R. Srikant, "Mining sequential patterns ata  D Engineering \(ICDE'95 Taipe i, Taiwan, Mar, 1995, pp.3-14  J. Pei, J. Han, B. Mortazavi-Asl, and H. Zhu, "Mining access patterns  efficiently from web logs  Lecture notes in computer science  pp.396 407, 2000  C. Ezeife and Y. Lu, "Mining web log sequential patterns with position  coded pre-order linked wap-tree  Data Mining and Knowledge Discovery vol. 10, no. 1, pp.5-38, 2005  B. Liu, W. Hsu, and Y. Ma, "Mining association rules with multiple  minimum supports  Proceedings of the fifth ACM SIGKDD international conference  San Diego CA USA August 15-18 1999 p.341  K. Wang, Y. He, and J. Han, "Mining frequent itemsets using support  constraints  Proceedings of the 26 th  international conference on VLDB  2000, Cairo, Egypt, pp.43-52  Y. Lee, T. Hong, and W. Lin, "Mining fuzzy association rules with  multiple minimum supports using maximum constraints Lecture notes in computer science vol. 3014, pp.1283-1290, 2004  M. Tseng and W. Lin, "Mining generalized association rules with  multiple minimum supports  International Conference on Data Warehousing and Knowledge Discovery DaWaK'01  Munich Germany, 2001, pp.11-20  Y. Lee, T. Hong, and W. Lin, "Mining association rules with multiple  minimum supports using maximum constraints  International Journal of Approximate Reasoning vol. 40, pp.44-54, 2005      182 


s2,c2 from Xl sl,c1  s,C association rule X3 s,c  B. Post Mining o/Non-redundant Association Rules /or Sensor Data Estiamtion In this subsection, we describe our proposed technique for post mining of non-redundant association rules for sensor data estimation purpose. This algorithm is developed based on non-redundant informative association rules which means all rules cannot be derived from other rules and the left hand side and right hand side of the selected rules contain the input itemset. There are some research works that can generate the closed itemsets and corresponding association rules using generated closed itemsets [3 , 18 Based on our previous works [8] we assume to have the non-redundant association rules ready and the criteria of selecting the rules from non-redundant rules further reduce the number of rules to the minimum In this algorithm, dn.vm is treated as one item in association rules. Dn represents the sensor which is indexed as n. Vm represents the value of the sensor n is read as m. In the following figure, Xinput is the itemset represent the current round of sensor readings, it can be represented by a set of dn.vm pairs. Xl and X2 are the itemsets in left hand side and right hand side of association rules. Z represents all items in X2/Xinput. Index\(z z and value of sensor value pair z. Confidence{Xl=>X represents the confidence of the rule Xl=>X2 Support\(Xl=>X2 C represents the confidence of association rule, dn V represents the identifier and value pair of the sensor dn Xestimate represents the returned estimation itemset which contains the senor identifiers with missing values in the current round of readings of stream data and their corresponding estimated values. Sspecify represents the user specified support, and Cspecify represents the user-specified confidence The algorithm is described as below. The input of the procedure Estimate includes the current round of sensor reading, current association rule confidence, user-specified minimum support and user-specified minimum confidence 


In line 4, all association rules that satisfy with the conditions of minimum support and confidence are selected The confidence of the select association rules are calculated in line 5. The condition of line 6 filters out the rules whose left hand side itemset Xl does not contain the itemset Xinput in this case, sensor identifier is filtered based on the enriched contextual information. The condition of line 7 filters out the rules whose right hand side itemset X2 does not contain new estimated items. Each new item was processed in line 8 and 9 so that missing sensor values are V5-104 2010 2nd International Conference on Education Technology and Computer \(ICETC modified and updated. At the end of this procedure, an iterative call of the same procedure keep on searching and processing for the new association rules that are able to make contribution on the sensor value estimation Input: \( 1 contains missing values 2 3 Output: Xestimste: a set containing the senor ids with missing values in the current round of sensor readings and their corresponding estimated values Method 1 Xestirnste = <\\l 2 Cinput=l 3 Procedure Estimate\(XinpUb Cinpub Sspecify, Cspecify 4 for all \(rule: X,=>X2 and Support\(X,=>X2 Confidence\(X,=>X2 5 C = Conjidence\(X,=>X2 6 if \(X,EAinput 7 if\(X2\\Xinput*<\\l 8 for all \(ZEX2\\Xinput and zE Xestimste 9 Xestimste = Xestimste U z 10 n = index\(z 1 1  d., v= dn v +C*value\(z 12 end for 13 end if 14 Estimate\(X2, C, Sspecify, Cspecify 15 end if 16 end for 17 end procedure 


Figure 1. The post mining of non-redundant association rule for sensor data estimation IV. EXPERIMENTAL STUDY The performance of our proposed approach is studied by means of simulation. Several different simulation experiments are conducted in order to evaluate the proposed technique and compare it with the Average Window Size A WS linear trend approach, and with the WARM approach, the state-of-the-art data estimation algorithm in sensor databases using 2-frequent itemsets based association mining [6]. We compared the estimation accuracy, running time and memory space usage when applying different methods to the application dataset The dataset was collected in year 2000 at various locations throughout the city of Austin, Texas. The data represents the current location, the time interval, and the number of vehicles detected during this interval. All sensor nodes report to a single server. The sensors are deployed on city streets, collect and store the number of the vehicles detected for a given time interval. The vehicle counts taken as sensor readings that are used as input for our simulation experiments are traffic data provided by [2 A. Performance Study of Estimation Accuracy The evaluation of the estimation accuracy of the missing values is done by using the average Root Mean Square Error RMSE I'\(xa, -Xe 1 ___ l __ lI_?''? ____ _ numStates # estimations where Xa; and Xe; are the actual value and the estimated value, respectively; #estimations is the number of estimations performed in a simulation run; and numStates is the number of subsets, in which the actual readings are distributed The expression u  xa, -Xe estimations error and is an estimate of the standard deviation under the assumption that the errors in the estimated values \(i.e. Xai Xei 


see the smaller the RMSE, the better the estimation accuracy From Figure 2, we can see that the proposed technique gives the best average estimation result of the above approaches regarding the accuracy, followed by the WARM approach. The linear interpolation, A WS, and linear trend approaches perform no better than WARM and the proposed approaches. From Figure 2, we can also see that the proposed technique gives the best estimation result on the maximum estimation accuracy, which is the root square error for the maximum difference between the estimated and accurate values 0.6 0.5 0.4 w n 0.3 cz 0.2  Average 0.1  Maximum 0 l' ?? 0" </.,oQ Figure 2. Perfonnance study of average and maximum estimation accuracy for traffic monitoring application B. Performance Study of Running Time Figure 3 illustrates the running time in seconds of A WS linear interpolation, linear trend, WARM and proposed approaches. The experimental results show that in terms of running time, the WARM and proposed approaches are outperformed by A WS, linear interpolation and linear trend V5-105 2010 2nd International Conference on Education Technology and Computer \(ICETC approaches. The proposed approach is faster than the WARM technique 0.03 v 0.025 0.02 E U.uJ c 0.01 0.005 0 a  r 


r r r  9  Figure 3. Performance study of running time for traffic monitoring application in seconds C. Performance Study of Memory Usage Figure 4 illustrates the memory usage of A WS, linear interpolation, linear trend, WARM and proposed approaches in MB. The experimental results show that in terms of memory space, the WARM approach is outperformed by all the other four approaches. The results of the simulation experiments show that for 108 sensors the needed memory space using WARM is much higher than that using proposed approach. This is because the closed lattice data structure uses less memory space than the cube data structures, and it only stores the condensed closed itemsets information Figure 4. Performance study of memory usage for traffic monitoring application in MB V. CONCLUSTIONS Sensor stream applications are becoming very common with the advances in technologies for sensor devices. In this paper we propose a method to post mine non-redundant association rules, and used the result to produce missing data estimation in sensor network applications. The objective is to further reduce the resulting rules from non redundant association rule mining based on the users request, and apply the retrieved meaningful information to perform missing data estimation in wireless sensor networks We have evaluated the proposed technique with real data from a wireless sensor network of a traffic monitoring site Our proposed method is able to estimate missing sensor value with both time and space efficiency, and greatly improves the estimation accuracy. Our performance study 


shows that proposed post mining of association rule mining technique for missing sensor data estimation is an area worth to explore REFERENCES 1] Agrawal, R., & Imielinski, T., & Swami, A., "Mining association rules between sets of items in massive databases", International Conference on Management of Data, 1993 2] Austin, F. I., "Austin Freeway ITS Data Archive", Retrieved January 2003 from http://austindata.tamu.eduidefauIt.asp 3] Bastide, Y., & Pasquier, N., & Taouil, R, & Stumme, G., & Lakhal L., "Mining minimal non-redundant association rules using frequent closed itemsets", First International Conference on Computational Logic, 2000 4] Cool, A. L., "A review of methods for dealing with missing data The Annual Meeting of the Southwest Educational Research Association, 2000 5] Deshpande, A., & Guestrin C., & Madden, S., "Using probabilistic models for data management in acquisitional environments", The Conference on Innovative Data Systems Research, 2005 6] Halatchev, M., & Gruenwald, L., "Estimating missing values in related sensor data streams", International Conference on Management of Data, 2005 7] Iannacchione, V. G., "Weighted sequential hot deck imputation macros", Proceedings of the SAS Users Group International Conference, 1982 8] Nan Jiang, "Discovering Association Rules in Data Streams Based On Closed Pattern Mining", SIGMOD Ph.D. Workshop on Innovative Database Research, 2007 9] Li, Y., & Liu, Z. T., & Chen, L., & Cheng, W., & Xie, C.H Extracting minimal non-redundant association rules from QCIL The 4th International Conference on Computer and Information Technology, 2004 10] Little, R 1. A., & Rubin, D. B., "Statistical analysis with missing data", New York: John Wiley and Sons, 1987 II] McLachlan, G., & Thriyambakam, K., "The EM algorithm and extensions", New York: John Wiley & Sons, 1997 12] Mitchell, T., "Machine Learning", McGraw Hill, 1997 13] Papadimitriou, S., & Sun, 1., & Faloutsos, C., "Streaming pattern discovery in multiple time-series", The International Conference on Very Large Databases, 2005 14] Rubin, D., "Multiple imputations for nonresponce in surveys", New York: John Wiley & Sons, 1987 


15] Shafer, 1., "Model-Based Imputations of Census Short-Form Items In Proceedings of the Annual Research Conference, 1995 16] Taouil, R., & Pasquier, N., & Bastide, Y., & Lakhal, L., "Mining bases for association rules using closed sets", International Conference on Data Engineering, 2000 17] Wilkinson & The AP A Task Force on Statistical Inference, 1999 18] Zaki, M. 1., Hsiao, C. 1., "Efficient algorithms for mining closed itemsets and their lattice structure", IEEE Transactions on Knowledge and Data Engineering, 2005 V5-106 


General Chair f!!\f  Organizing Chairs  f!!\f  f$% \f!!\f  Organizing Co-chairs f    f  f\f   f\f\f   f*!\f!\f.\f  f f  Program Committee Chairs  f\f\f   f!!\f  Publication Chair 0   


200 250 300  The size of dataset/10,000 R es po ns e tim e S    a 0 50 100 150 200  The size of dataset/10,000 R es po ns e tim e S    b 0 10 20 30 40 50 


60  The size of dataset/30,000 R es po ns e tim e S    c Fig. 9 The scalability of our algorithm compared with FP-growth  Paper [12] proposed a way to reduce times of scanning transaction database to reduce the cost of I/O IV. CONCLUSIONS AND FUTURE WORK This paper first discusses the theory of foundations and association rules and presents an association rules mining algorithm, namely, FP-growth algorithm. And then we propose an improved algorithm IFP-growth based on many association rules mining algorithms. At last we implement the algorithm we propose and compare it with algorithm FPgrowth algorithm. The experimental evaluation demonstrates its scalability is much better than algorithm FP-growth 177 Now, lets forecast something we want to do someday Firstly, we would parallelize our algorithm, because data mining needs massive computation, and a parallelable environment could high improve the performance of the algorithm; Secondly, we would apply our algorithm on much more datasets and study the run performance; At last, we would study the performance when the algorithm deal with other kinds of association rules  REFERENCES 1] S. Sumathi and S. N. Sivanandam. Introduction to Data Mining and its Applications, Springer, 2006 2] V. J. Hodge, J. Austin, A survey of outlier detection 


methodologies, Artificial Intelligence Review, 2004, 22 85-126 3] Han, J. and M. Kamber. Data Mining: Concepts and Techniques. Morgan Kaufmann, San. Francisco, 2000 4] Jianchao Han, Mohsen Beheshti. Discovering Both Positive and Negative Fuzzy Association Rules in Large Transaction Databases, Journal of Advanced Computational Intelligence and Intelligent Informatics 2006, 10\(3 5] Jiuyong Li, Hong Shen, Rodney Topor. Mining Informative Rule Set for Prediction. Journal of Intelligent Information Systems, 2004, 22\(2 6] Jianchao Han, and Mohsen Beheshti. Discovering Both Positive and Negative Fuzzy Association Rules in Large Transaction Databases. Journal of Advanced Computational Intelligence, 2006, 10\(3 7] Doug Burdick, Manuel Calimlim, Jason Flannick Johannes Gehrke, Tomi Yiu. MAFIA: A Maximal Frequent Itemset Algorithm. IEEE Transactions on Knowledge and Data Engineering, 2005, 17\(11 1504 8] Assaf Schuster, Ran Wolff, Dan Trock. A highperformance distributed algorithm for mining association rules. Knowledge and Information Systems, 2005, 7\(4 458-475 9] Mohammed J. Zaki. Mining Non-Redundant Association Rules. 2004, 9\(3 10] J.Han, J.Pei, Y.Yin, Mining frequent patterns without candidate generation, Proceedings ACM SIGMOD 2000 Dallas, TX, May 2000: 1-12 11] P.Viola, M.Jones. Rapid Object Detection Using A Boosted Cascade of Simple Features. Proc. IEEE Conf. on Computer Vision and Pattern Recognition, 2001 12] Anthony K. H. Tung, Hongjun Lu, Jiawei Han, Ling FengJan. Efficient Mining of Intertransaction Association Rules. 2003, 154\(1 178 


For each vertex b in g form j forests body\(a, g, i s.t. bodyAnt\(a, g, i a, g, i with itemsets Ant\(b b and each subset of itemsets Ant\(b b in P\(a, g, j Assign to each leaf l of trees bodyAnt\(a, g, i bodyCons\(a, g, i a fresh variable Vm,M, m, M = size\(itemset\(l Assign to each leaf l of tree headAnt\(a, g, j the variable assigned to itemset l in some leaf of some tree bodyCons\(a, g, i TABLE II.  EXPERIMENTAL DATA Conf. #rules #pruned #dftrs PtC 0.5 6604 2985 1114 0.6 2697 2081 25 0.75 1867 1606 10 0.8 1266 1176 0 0.95 892 866 1 0.98 705 699 1 DSP 0.5 2473 1168 268 0.6 1696 869 64 0.75 1509 844 89 0.8 1290 1030 29 0.95 1032 889 15 0.98 759 723 1 Arry 0.5 770 492 82 0.6 520 353 60 0.75 472 327 39 0.8 408 287 22 0.95 361 255 25 0.98 314 243 30  Our induction algorithm has been launched for each combination of thresholds. Our scheme eliminates all redundant rules in the sense of [25, 31], i.e. those association rules that are not in the covers. All the meta-rule deductive schemes implicitly included in [25] and [31] are induced by our method. The percentage of pruning, thus, outperforms [25 


The results produced for k=3, support 0.25 and confidences between 0.7 and 0.99 are shown in Fig. 3, in terms of pruning percentage \(vertical axis when applied to low confidences \(from 0.7 to 0.9 The percentage of pruning achieved diminishes as the confidence is superior to 0.9. Nevertheless, the pruning is effective with confidence of 0.99 in the majority of cases Pruning at Support = 0.25 0,00 5,00 10,00 15,00 20,00 25,00 30,00 35,00 40,00 45,00 50,00 0,7 0,8 0,9 0,95 0,99 Confidence P ru n in g L e v e l Case 1 Case 2 Case 3  Figure 3.  Pruning experiences at support 0.25  V. DISCUSSION AND CHALLENGES It is important to discuss the technique presented here with focus on the purpose the technique pursues:  to produce semantic recommendation The reader should have noticed that the algorithm presented 


relies strongly on "choice". For instance, the algorithm chooses ears in the graph to form an order for elimination, and the choice is arbitrary. This strategy is essential to maintain low complexity \(polynomial practical. Nevertheless, a warned reader may conclude that this arbitrary choice implies that there are many compactions to produce and therefore the approach as a whole does not show to produce an optimal solution. And the reader is right in this conclusion. Since the goal is compaction, the search for an optimal solution can be bypassed provided a substantial level of pruning is achieved To complete the whole view, we describe how web service descriptions are complemented with the association rules as recommendations. In effect, under our scheme, the document describing the web service is augmented with a set of OWL/RDF/S triples that only incorporate the non-pruned rules with the format of Example 1, that is, the set ARmin of the compaction program obtained by our algorithm, together with the thresholds applied to the mining process and a registered URI of a registered description service. The assumptions and defeaters are not added to the web service description. If the associations encoded in the triples are not sufficient for the client \(a search engine, for instance widening of the response to the description service identified by the given URI, and then the assumptions and defeaters are produced. The reasoning task required for deriving all the implicitly published rules is client responsibility Notice that, under this scheme, the actual rules that appear as members of the set initial ARmin set are irrelevant; the only important issue is the size of the set The developed scheme also supports an extension of the algorithm that admits the assignment of priorities to rules and to itemsets, in order to allow the user to produce a more controlled program as output. Nonetheless, the importance of the extension has not been already tested, and therefore it is beyond the subject of the present paper It would be also interesting to design a scheme that supports queries where the client provides an itemset class and values for support and confidence and the engine produces a maximal class of inferred associated itemsets as a response. This scheme is also under development, so we have not discussed this aspect here 


VI. CONCLUSION In this paper, we have presented a defeasible logic framework for managing associations that helps in reducing the number of rules found in a set of discovered associations. We have presented an induction algorithm for inducing programs in our logic, made of assumption schemas, a reduced set of association rules and a set of counter-arguments to conclusions called defeaters, guaranteeing that every pruned rule can be effectively inferred from the output. Our approach outperform those of [17], because all reduction compactions presented there can be expressed and induced in our framework, and several other patterns, particular to the given datasets, can also be found. In addition, since a set of definite clauses can be obtained from the induced programs, the knowledge obtained can be modularly inserted in a richer inference engine Abduction can be also attempted, asking for justifications that explain the presence of certain association in the dataset The framework presented can be extended in several ways Admitting defeaters to appear in the head of assumption, to define user interest Admitting arithmetic expressions within assumptions for adjustment in pruning Admitting set formation patterns as itemset constants Extending the scope, to cover temporal association rules REFERENCES 1]  R. Agrawal, and R. Srikant: Fast algorithms for mining association rules In Proc. Intl Conf. Very Large Databases. \(1994 2]  A. V. Aho, J. E. Hopcroft, J. Ullman. The design and analysis of computer algorithms, Addison-Wesley, 1974 3]  G. Antoniou, D. Billington, G. Governatori, M. J. Maher, A. Rock: A Family of Defeasible Reasoning Logics and its Implementation. ECAI 2000: 459-463 4]  G. Antoniou, D. Billington, G. Governatori, M. J. Maher: Representation results for defeasible logic. ACM Trans. Comput. Log. 2\(2 2001 5]  A. Basel, A. Mahafzah, M. Al-Badarneh: A new sampling technique for association rule mining, Journal of Information Science, Vol. 35, No. 3 358-376 \(2009 6]  R. Bayardo and R. Agrawal: Mining the Most Interesting Rules. In Proc of the Fifth ACMSIGKDD Intl Conf. on Knowledge Discovery and Data Mining, 145-154, \(1999 


7]  R. Bayardo, R. Agrawal, and D. Gunopulos: Constraint-based Rule Mining in Large, Dense Databases. Data Mining and Knowledge Discovery Journal, Vol. 4, Num-bers 2/3, 217-240. \(2000 8]  A. Berrado, G. Runger: Using metarules to organize and group discovered association rules. Data Mining and Knowledge Discovery Vol 14, Issue 3. \(2007 9]  S. Brin, R. Motwani, J. Ullman, and S. Tsur: Dynamic itemset counting and implication rules for market basket analysis. In Proc. ACMSIGMOD Intl Conf. Management of Data. \(1997 10] L. Cristofor and D.Simovici: Generating an nformative Cover for Association Rules. In ICDM 2002, Maebashi City, Japan. \(2002 11] Y. Fu and J. Han: Meta-rule Guided Mining of association rules in relational databases. In Proc. Intl Workshop on Knowledge Discovery and Deductive and Object-Oriented Databases. \(1995 12] B. Goethals, E. Hoekx, J. Van den Bussche: Mining tree queries in a graph. KDD: 61-69. \(2005 13] G. Governatori, D. H. Pham, S. Raboczi, A. Newman and S. Takur: On Extending RuleML for Modal Defeasible Logic. RuleML, LNCS 5321 89-103. \(2008  14] G. Governatori and A. Stranieri. Towards the application of association rules for defeasible rules discovery In Legal Knowledge and Information Systems, JURIX, IOS Press, 63-75. \(2001 15] J. Han, J. Pei and Y. Yin: Mining frequent patterns without candidate generation. In Proc. ACM-SIGMOD Intl Conf. Management of Data 2000 16] C. Hbert, B. Crmilleux: Optimized Rule Mining Through a Unified Framework for Interestingness Measures. DaWaK: LNCS 4081, 238247. \(2006 17] E. Hoekx, J. Van den Bussche: Mining for Tree-Query Associations in a Graph. ICDM 2006: 254-264 18] R. Huebner: Diversity-Based Interestingness Measures For Association Rule Mining. Proceedings of ASBBS Volume 16 Number 1, \(2009 19] B. Johnston, Guido Governatori: An algorithm for the induction of defeasible logic theories from databases. Proceedings of the 14th Australasian Database Conference, 75-83. \(2003 20] P. Kazienko: Mining Indirect Association Rules For Web Recommendation. Int. J. Appl. Math. Comput. Sci., Vol. 19, No. 1, 165 186. \(2009 21] M. Klemettinen, H. Mannila, P. Ronkainen, H. Toivonen, and A Verkamo: Finding interesting rules from large sets of discovered association rules. In Proc. 3rd Intl Conf. on Information and Knowledge 


Management. \(1994 22] M. J. Maher, A. Rock, G. Antoniou, D. Billington, T. Miller: Efficient Defeasible Reasoning Systems. International Journal on Artificial Intelligence Tools 10\(4 2001 23] C. Marinica, F. Guillet, and H. Briand: Post-Processing of Discovered Association Rules Using Ontologies. The Second International Workshop on Domain Driven Data Mining, Pisa, Italy \(2008 24] N. Pasquier, Y. Bastide, R. Taouil, and L. Lakhal: Closed sets based discovery of small covers for association rules. In Proc. BDA'99 Conference, 361-381 \(1999 25] N. Pasquier, R. Taouil, I. Bastide, G. Stume, and  L. Lakhal: Generating a Condensed Representation for Association Rules. In Journal of Intelligent Information Systems, 24:1, 29-60 \(2005 26] P. Pothipruk, G. Governatori: ALE Defeasible Description Logic Australian Conference on Artificial Intelligence.  110-119 \(2006 27] J. Sandvig, B. Mobasher Robustness of collaborative recommendation based on association rule mining, Proceedings of the ACM Conference on Recommender Systems \(2007 28] W. Shen, K. Ong, B. Mitbander, and C. Zaniolo: Metaqueries for data mining. In Fayaad, U. et al. Eds. Advances in Knowledge Discovery and Data Mining. \(1996 29] I. Song, G. Governatori: Nested Rules in Defeasible Logic. RuleML LNCS 3791, 204-208 \(2005 30] H. Toivonen, M. Klemettinen, P. Ronkainer, K. Hatonen, and H Mannila: Pruning and grouping discovered association rules. In ECML Workshop on Statistics, Machine Learning and KDD. \(1995 31] M. Zaki: Generating Non-Redundant Association Rules. In Proc. of the Sixth ACMSIGKDD Intl Conf. on Knowledge Discovery and Data Mining, 34-43, \(2000 32] w3c. OWL Ontology Web Language Reference. In http://www.w3.org/TR/2004/REC-owl-ref-20040210 33] w3c. RDF/XML Syntax Specification. In: http://www.w3.org/TR/rdfsyntax-grammar 34] w3c. RDF Schema. In: http://www.w3.org/TR/rdf-schema      


 8   2  3\f            8  D    F  \b 1 8 & #J      b 1  1  4    2  


4 1    9  E 1  2 4 1    9 1   4      8 2  8 1  D 1        1 1  b 


     b b b b b  K            8          2 D 9   F  \b 1 8 ,+J  9 


     b 1     1 2  9 1  12 L 1   9  8       1  2      2   


     b b b b b  K            2  0 \b f  b\f      9       


  8 2   E 1   1     M13 31L 1    b  8E 1   1 #3\b?### 1  1     E 1   1 \b?###3        


1   1   b 1  2 2 18 2     8              1    2 \b 1    2  


    2          2   1 L 2 1   1   L 2 2    2 1  2        


    8  2H D \b A             2  2H D \b A 2 \f 3%\f  f   4%\f f !  , \f\b  C    2    2 


 6    3 1      253 6   1 L 2    6   1         f\b3\f       


               1     1     8 2    E       2  1   


     2 8    b 4      1 8             1 2     1  8 2  


1 9    8      2 1       1     2    8    2 3\f        


     8 D 4 9  F  \b 1 8 #J 9 1     2 1   2 #-@ 1   2 9  E 1   1   2 9      6  


    8  8   1  D 1         1 F  \b0         2 D    F  \b 1 8  9  


  1 9  1   E 1  2 9     1 1 F  \b       1    18   F   1    1 #-$+  \b  2 2  


1 D     1 #-$+.B- 0/:% .0             9 1      18    1 6     1 2  1  1  


1   6      2    1 2 E 8 D 1      1 2   1   1 #-4  #-@E     2  1  1  1       


 8     1          2 F    6   F  2   8    2 C<CC/C N\bO 5      


CD    b$44NO F P Q 6   2 b$$$ ,=\b\bA  A N,O 2 C C  b$$4N  92 2   f  9-\b$$4 B N?O  !-    91  2 1 HH111-18-N+O    -1 :3%   2     0-4 


     b N4O 2   2- \f  C b$@$ \b# >\b\b$3\b$N@O  f :.% 9 /9 \f    1  6  f 2  4   A254 


Advantages of Our M ethod Advantages of Our M ethod Exploit the memory v ertical data format utilizes slidin g windows to g form a much larger database to analyze  Flexibility in Choosing what to choose  Choosing what to choose to build the rules Computational and memory efficiency We have a team working only on this aspect 45 Associative IDS for NextGen Frameworks Dr S Dua LA Tech 45 


Preliminary Results Intra transaction Relations Data rate simulator NH-134 Mb HOP PATH update \(Y/N Inference 11.5 Y Y 2 0.120 N N      Y   n 0.345 N NH134 Y/N   Inf 1 0.150 N N 2 0 120 Y N Inter transaction Relations 2 0  120 Y N       5 5.55 0.456 Y Relations  n 0.345 N N Nmap on DMRL nmap.org 


Anticipated Outcome Anticipated Outcome Develop algorithm capable of learning from a given heterogeneous diverse Develop algorithm capable of learning from a given heterogeneous diverse data ff Dynamic algorithmic f ramework designed to shi f t modalities and sampling rates based on complex logic Flexibility of integration into the Snort intrusion detection system 47 Associative IDS for NextGen Frameworks Dr S Dua LA Tech 47 


References References Aircraft Cockpit Image courtesy USAF http://www.faa.gov htt p   www.faa g ov  air traffic  technolo gy  p g  _ gy  Acharya R Dua S Du X Sree V Chua C K Automated Diagnosis of Glaucoma Using Texture and Higher Order Spectra Features To appear in IEEE Transactions on Information Technology in Biomedicine  Du X Dua S 2011 Cancer Prognosis Using Support Vector Regression in Imaging  Modality World Journal of Clinical Oncology 2  1   44 49 Du X Dua S 2010 Salient Frame Extraction Using Support Vector Regression and Motion Features pp 5 Proc of the National Aerospace and Electronics Conference July 14 16 2010 D M P D S 2010 Di i i ti Ft d Cl ifi ti Mthd f D essaue r  M  P  D ua S  2010  Di scr i m i na ti ve F ea t ures an d Cl ass ifi ca ti on M e th o d s f or Accurate Classification 1st ed vol 7704 pp 14 Bellingham WA Proceedings of SPIE Dessauer M P Dua S 2010 Low Resolution Vehicle Tracking using Dense and Reduced Local Gradient Features Maps 1st ed vol 7694 pp 8 Bellingham WA Proceedings of SPIE SPIE 


Acknowledgements Acknowledgements Fundin g A g encies  US 4 1 Million direct fundin g g g 4 g LA BoR NIH NSF AFRL AFOSR and NASA Research Team Samuel Kasimalla Brandy McKnight Dr Pradeep Chowriappa Connor Johnson Vasanth Nair Mihir Chowriappa  Connor Johnson  Vasanth Nair  Mihir Karnik Mohit Jain and Swadheen Songmen Associative IDS for NextGen Frameworks Dr S Dua LA Tech 49 All the respective Logos belong to their owners 


Rf d Rdi R e f erence d R ea di ngs Copyright of cover pages held by respective publishers 


Thank You Questions Thank You  Questions Dr Sumeet Dua E mail sdua@latech.edu Web http://dmrl.latech.edu Associative IDS for NextGen Frameworks Frameworks Dr S Dua LA Tech 51 Image Source roadtrafficsigns.com 


