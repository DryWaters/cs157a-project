Integrating Formal Analysis and Design to Preserve Security Properties   Riham Hassan Shawn Bohner Sherif El-Kassas Michael Hinchey  Department of Computer Science, Virginia Tech  Department of Computer Science, Virginia Tech Department of Computer Science, The American University in Cairo  Rose-Hulman Institute of Technology, University of Limerick rhabdel@cs.vt.edu  sbohner@vt.edu  sherif@aucegypt.edu  
mike.hinchey@lero.ie    Abstract  The use of formal methods has long been advocated in the development of secure systems. Yet, methods for deriving design from requirements that guarantee retention of the intended security properties remain largely unrealized on a repeatable and consistent basis. We present the FADES \(Formal Analysis and Design approach for Engineering Security\ that integrates KAOS \(Knowledge Acquisition in autOmated Specifications\ with the B specification language to derive security design specifications and further implementation from security requirements. We 
demonstrate the capability of the approach to handle changes to security requirements by introducing corrective changes to the security requirements of a case study, the spy network system.  The objective is to bridge the gap between formal requirements and design for security requirements.   Our initial results show promise with FADES in preserving security properties and detecting security vulnerabilities early during requirements. Encouraged by these, we are more quantitatively assessing the FADES capabilities  1. Introduction  Security is a growing concern as we develop increasingly large and complex systems supporting 
more distributed and integrated capabilities in the public and private sectors A ccordin g to t h e C E R T  Coordination Center \(CERT/CC\, security incidents reported have grown exponentially over the past decade [3 T h e im pact s on so ciet y are still bei n g  f e lt  According to Viega and McGraw, one of the major sources of vulnerability has been poor-quality software  rity i s us u a l l y cons i d ered af ter th e f act an d  often in an ad-hoc manner resulting in insecure software products. Even in security evaluation securing software is recognized as a function of formal 
specification and transformation -- as evidenced with the requisite formalism in Common Criteria Evaluation Assessment Levels \(EAL\d 7 Security requirements play a crucial role in designing secure software. With poor specification of security requirements, many security issues become vulnerabilities that are pushed to maintenance for resolution practic e, it has not been clear how to engineer security systematically throughout the software lifecycl  Lack of rigor in specifying and designing security 
requirements directly contributes to the problem of poor software security. A formal security requirements elaboration method encapsulated in an uncomplicated interface and transformed to a formal language is needed to rigorously derive design specifications that maintain properties of the requirements model The use of formal methods for producing highly assured software has long been accepted and advised for developing secure systems o r s e cu rit y  requirements, the extra effort of employing formal methods in specifying security can be justified when 
rigor applies to security specific elements of software product \(allocating the cost to the vulnerable aspects of the software\wever, in practice, the extra cost is traded off against alleviating substantial losses that may result from poor security engineering practices The ineffective handling of changes to software security specifications often results in the introduction of vulnerabilities. Conflicts with existing security features along with the lack of procedural resolution strategies are significant reasons behind poorly secured 
software products. Software security evolution still lacks clear and consistent procedures that deal with security specifications changes in a provable way Further, insufficient traceability information at key stages of software development makes it difficult to handle changes in security specifications Proceedings of the 42nd Hawaii International Conference on System Sciences - 2009 1 978-0-7695-3450-3/09 $25.00 © 2009 IEEE 


In this paper, we address some of these concerns through the FADES approach. We outline the method and present a case study of the security requirements for a spy network system that has been devised by Fontaine in [7  T h e sp y ne t w o r k s y ste m b r o a d c a s ts  secret revelations into a network of spies around the world. We model and implement the security requirements of the spy network system using FADES to preserve security properties. Further, we illustrate the mechanisms embedded in FADES to efficiently handle changes of security requirements and analyze security vulnerabilities resulting from change Following this introduction, section 2 outlines relevant related work and the underlying technologies employed by FADES; namely KAOS security extension and B. Section 3 describes the FADES approach and how it handles security-specific elements. Section 4 develops security requirements of the spy network system using FADES. Section 5 gives an example of corrective changes to security requirements and how to implement them using FADES. Section 6 outlines our preliminary conclusion  2. Background  This section outlines research efforts in employing formal methods to software security and briefly describes the two underlying technologies employed in FADES, which are KAOS security extension described in n d t h e B f o r m al developm e n t  m e th od. K A O S  was selected as it presents a systematic approach to capturing the essence of security requirements in a convenient and understandable form \(a goal graph\. B was selected based on its effective mechanisms for systematic elaboration and refinement and good tool base  2.1 Related work  Stepney et. al. in a v e pres e n ted a cas e s t u d y  for an electronic smart card system, which consists of a number of electronic purses that carry financial value each hosted on a smart card. Stepney et. al. in  have used Z as a formal development platform to construct a security requirements specifications model that has been further refined to derive design and implementation specifications. Our initial results of comparing FADES to Stepney et. al. approach have shown that FADES is more capable in building a complete and consistent security requirements model with the ability to perform threat analysis and mitigation as it employs KAOS for requirements analysis while Stepney s approach specifies the system directly in Z Massacci, et. al. in h a v e pres e n ted a  comprehensive case study of the application of secure TROPOS requirements engineering method for compliance to the Italian legislation on privacy and data protection. Secure TROPOS is close in spirit to KAOS except that TROPOS starts with agents rather than goals. Unlike our work in this paper that has been able to derive design and implementation from the security requirements of the SNS system, Massacci et al. work has only led to the definition and analysis of ISO-17799-like security management scheme   2.2 Extending KAOS for security  Van Lamsweerde in a s des c ribed a g e n e ral  approach for eliciting, analyzing and modeling functional and non-functional requirements of software systems based on KAOS framework that employs firstorder temporal logic. He then customized his goaloriented approach to handle security requirements in specif h is s u bs ectio n f o cu s e s on t h e s ecu rit y  specific approach  KAOS  is based on considering requirements as goals to be achieved by the envisioned system. A goal is a prescriptive statement of intent about some systems whose satisfaction requires the cooperation of some of the system agents while agents are active components such as humans, devices, legacy software or software-to-be components  a m s w eerde  differentiates between goals and domain properties i.e., descriptive statements about the environment such as physical laws, organization norms or policies  Goals are organized in a hierarchy obtained from the refinement of higher level goals into lower-level goals using the AND/OR refinement mechanism Higher-level goals are strategic, coarse-grained and involve multiple agents while lower-level goals are technical, fine-grained and involve fewer agents The resulting hierarchy is a directed, acyclic-graph AND-refinement relates a goal to a set of subgoals where the satisfaction of the higher-level goal requires the satisfaction of all its subgoals. The OR-refinement relates a goal to a set of alternative subgoals in which the achievement of the higher-level goal requires the achievement of at least on of its subgoals Goal refinement ends when every subgoal is realizable by some individual agent assign  A requirement is a terminal goal in the goal graph assigned to an agent \(active object\ the software-tobe while an assumption is a terminal goal assigned to an agent in the environment. In the security requirements context, assumptions might be used to capture security policies in the environment. Goals are oprerationalized into operations performed by agents to achieve these goals. Goals and operations refer to Proceedings of the 42nd Hawaii International Conference on System Sciences - 2009 2 


entities \(passive objects\at are incrementally derived from the goals specifications to produce a structural model of the system Obstacles are undesirable goals that hinder desired goals from being achieved. Obstacles are elaborated as goals and Van Lamsw h a s def i n e d a f o r m al  systematic procedure for identifying all the possible obstacles of a certain goal.  Obstacles are then analyzed based on their criticality to the well-being of the whole system and resolution mechanisms are used to generate alternative resolutions such as goal substitution and obstacle prevention In the security requirements context, attackers are malicious agents in the environment and threats are obstacles intentionally set up by attackers while assets are to be protected against th Lamsweerde has specified some generic specification patterns for eliciting security goals such as confidentiality, integrity, availability, privacy authentication and non-repudiation. The general method for elaborating security requirements is to systematically iterate the following steps   Instantiate specification patterns associated with property classes   Derive anti-model specifications threatening such specifications   Derive alternative countermeasures and define new requirements or modify some existing requirements  2.3 The B Method  B is a method for specifying, designing and coding software systems that integrates formal proof techniques in software developmen  T h e bas i c idea of B development is to start with an abstract model of the system under development while more detailed models are built by refining the initial model A key merit of this refinement mechanism is the ability to preserve already proven system properties in higher level models. B models are accompanied by mathematical proofs, called proof obligations that guarantee correctness and effectiveness of system development The B method is based on the Abstract Machine Notation \(AMN\which provides structuring mechanisms to support modularity and abstraction in an object-based styl eac h B m a c h i n e  encapsulates its variables and operations. At the most abstract level it is obligatory to describe the static properties of a model s data by means of an invariant  predicate [11  T h is g i v e s rise to proof oblig ation s  u s ed  to guarantee development correctness rit y  engineering is a good domain to make use of the correctness of development capabilities of the B method. Software systems with security requirements exhibit a strong need for assured development that allows for adding more details on an abstract system model without violating the already proven security properties B models rarely need to make assumptions about the size of the system being deve T h e price to pay is to face possibly complex mathematical theories and difficult proofs; however, the re-use of developed models and the structuring mechanisms available in B help decrease the complexity    3. The FADES Approach  This section summarizes the FADES approach that is being applied to the spy network system in order to model and implement its security requirements. A more detailed treatise is provided in  FADES is a requirements-driven software engineering approach that derives design specifications from a set of security requirements modeled using KAOS security extension framework. FADES provides a secure software engineering methodology that integrates the KAOS security extension h ic h is  characterized by the ability to formally build a complete, consistent and clear requirements model with the B method, which provides formal guarantees for the correctness of the system development. Our research showed that KAOS is promising in that it could be extended with an extra step of formality in order to fully implement security requirements while preserving the requirements properties of completeness, consistency and clarity er extending KAOS with more formality in a development framework like B allows for tracing requirements at the various steps of development; that is, during both the design and implementation FADES elaborates security requirements using KAOS in order to build a complete, consistent and unambiguous requirements model. The KAOS security extension is based on modeling security requirements as goals, which is relatively intuitive and close to the way people perceive requirements as expressed in natural language. Further, the method formally analyzes possible threats and performs threat mitigation while building the security requirements model resulting in the detection and resolution of security vulnerabilities very early in development The choice of B as a formal development platform for elaborating security design specifications assists in preserving security properties of requirements when design specifications are being derived. B has the notion of model refinement that allows for building a Proceedings of the 42nd Hawaii International Conference on System Sciences - 2009 3 


detailed model of design from an abstract model of requirements while preserving the security properties of the requirements model Employing formal methods in FADES provides a reasonable approach to the challenge of developing secure software products with formal evidence of correctness. Recognizing that formal methods reduce security risks but entails more cost, we justify this cost by applying FADES only to security, which is a critical aspect of the system. Further, software systems that are evaluated for security at the Common Criteria \(CC EAL 6 and 7 need formal evidence assuring the security of the software. This makes software products developed using the FADES approach securely compliant with CC higher levels FADES provides means for transforming the security requirements model built with KAOS to an equivalent one in B using some transformation rules that are briefly described.  The whole system is represented either as a single abstract B machine or multiple abstract B machines related to each other based on the size of the system. Each KAOS entity passive object\ represented as a B machine encapsulating its KAOS attributes, representing the system state, in the form of the B machine variables and the KAOS domain properties in the form of the B machine invariant. The system machine\(s\ include entity machines. Each KAOS operation is represented as a B operation in the system machine and uses the entities either as parameters or return values. The precondition of each KAOS operation is directly mapped to the precondition of the corresponding B operation since both are represented in first-order predicate logic. Post conditions of KAOS operations have no direct mapping in B and should be enforced by the B operation specification and refinement. KAOS goals are not transformed to B as they are indirectly transformed through KAOS operations that realize these goals The B model that has been transformed from KAOS representing security requirements is then refined using non-trivial B refinements that generate design specifications conforming to the security requirements. Figure 1 illustrates a general model of the FADES approach. FADES allows for deriving one artifact, which is design from another artifact, which is a requirements model using formal representation Hence, the links between artifacts are clear enough to provide traceability information Traceability information is available in FADES for both forward \(tracing requirements to design\ and backward \(tracing design decisions to requirements traceability. Forward traceability from requirements to design could be shown through the refinement steps in B that builds a more detailed model from a more abstract one. This means that FADES is capable of building traceability links from each requirement to it realization in design through the refinement steps in B Backward traceability of de sign specifications to the original set of security requirements can be formally shown through the B proof obligations that show how each B refinement step preserves the constraints of the abstract model being refined   Figure 1:  General Model of the FADES Approach  4. The Spy Network System \(SNS  This section examines the FADES approach through a case study of a spy network system designed by Fontaine [7  Unli ke  m a n y c a se st ud ie s i n t h e  security literature, the SNS case study is of a size small enough to be manageable and large enough to be convincing.  Further, the SNS has a set of security requirements that are commonly mandated in most communication-based systems making it a good framework for applying FADES to this category of systems. The spy network case study has been derived from two real case studies, the British National Health Service \(NHS\d the eBay online auction website The next subsections briefly describe the SNS security requirements followed by discussing how to elaborate these requirements in KAOS. We then outline how the KAOS requirements model is transformed to B followed by refining the B model to obtain security design specifications and generate implementation  4.1 The SNS security requirements Proceedings of the 42nd Hawaii International Conference on System Sciences - 2009 4 


 Fontaine in a s des c ribed th e S N S t h at ai m s at  broadcasting secret revelations into a network of spies around the world. The big boss supervises all missions allocates spies to missions, and appoints bosses to teams. Spies collect revelations about the enemy and target them to other members of the team working on the mission. The SNS has the following security requirements   Revelation integrity every copy of a revelation should be identical to the original revelation written by the author   Revelation confidentiality a revelation might only be known by spies working in the mission   Revelation authentication every revelation is attributable to an author and the purported author of the revelation should be correct   Mailbox access control a mailbox should only be accessed by its subscribed spy  4.2 KAOS Security Requirements Model  Fontaine has applied the KAOS security extension to the spy network case study [7  W e ha ve u s e d  Objectiver \(a commercial software requirements modeling tool built by Van Lamsweerde and his team who have created the KAOS framework\ as a tool to build the KAOS requirements model. The high level goal of the SNS is to make the system secure defined as  The first step in building the security goal graph is to refine the high-level goal using the traditional classification [4 to f o u r su b g o a ls as sh o w n in Fi g u re  2  Figure 2:  Refinement of Security Goals Security goals are instantiated from some security generic patterns for resource integrity, confidentiality authentication, availability, and access control. The following is the instantiation of the four security goals         The second step to build the security requirements goal graph is to analyze and refine the security goals elaborated in the first step by finding conflicts and obstacles to security, that is, perform threat analysis and resolution. Due to space limitations, we will show how to find threats to the RevelationIntegrity goal as an example. Resolution strategies to potential security threats are proposed In order to obtain the security threats to the goal RevelationIntegrity, we start by negating the goal RevelationIntegrity to get the following   The following object model increment is required    Regressing through the Corrupted relationship, we get   A strong mitigation would be achieved through the following goal  Proceedings of the 42nd Hawaii International Conference on System Sciences - 2009 5 


 This goal is further refined in multiple steps that are not shown here due to space limitation The third step in building the security goal graph is to resolve obstacles. We show the resolution of the obstacle to the goal RevelationIntegrity as follows: a way to operationalize the RevelationIntegrity goal is to have digital signatures. Each revelation has a signature that depends on the revelation text and the author s identity     After building the goal graph, leaf goals are assigned to agents responsible for achieving these goals through means of operations. KAOS operations are used to operationalize \(i.e. fulfill\irements Operations constrain the space of solutions that could be used by solution providers to design the system that shall meet the requirements. The step of goal Operationalization bridges the gap between the problem description space \(requirements\d the solution space \(design T h e f o llo w i ng operation s  have been obtained during goal operationalization Operation SignRevelation and VerifyRevelation operationalize RevelationIntegrity goals. Operation EncryptRevelation and DecryptRevelation operationalize RevelationConfidentiality goals Operation CertifySpy operationalizes RevelationAuthentication goals while AccessMailbox opreationalizes MailboxAccessControl goals Operation SignRevelation Input  Spy{arg sp}, Revelation{arg rev}, Privatekey  {arg pk Output  Signature {res sig DomPre   rev1:Revelation\ Signed\(rev1, sig, pk DomPost  rev2:Revelation\ Signed\(rev2, sig, pk ReqPreFor RevelationSignedWhenSent  CreatorOf\(sp, pk Operation VerifyRevelation Input  Spy{arg sp}, Revelation{arg rev}, Publickey  {arg pk}, Signature {arg sig Output  Boolean {res verified DomPre   rev1:Revelation\ Verified\(rev1, sig  Pk DomPost  rev2:Revelation\ Verified\(rev2, sig, pk ReqPreFor RevelationVerifiedWhenReceived  Knows\(sp, pk ReqPreFor RevelationDecryptedWhenReceived  msg:Message, prk: PrivateKey Decrypted\(msg, prk\ ^ CreatorOf\(sp, prk Operation EncryptRevelation Input  Spy{arg sp}, Revelation{arg rev}, Publickey  {arg pk Output Message {res msg DomPre   rev1:Revelation\ Encrypted\(rev1,  pk DomPost  rev2:Revelation\ Encrypted\(rev2, pk ReqPreFor RevelationEncryptedWhenSent  Knows\(sp, pk ReqPreFor RevelationSignedWhenSent   prk: PrivateKey, sig:Signature Signed\(rev, sig, prk\orOf\(sp, prk ReqPostFor RevelationEncyptedWhenSent  About\(msg, rev Operation DecryptRevelation Input  Spy{arg sp}, Message{arg msg}, Privatekey  {arg pk Output  Revelation {res rev DomPre   msg1:Message\ecrypted\(msg1,  pk DomPost  msg2:Message\ypted\(msg2, pk ReqPreFor RevelationDecryptedWhenReceived  CreaterOf\(sp, pk ReqPostFor RevelationDecryptedWhenReceived  Knows\(sp, rev.Content Operation CertifySpy Input  Spy{arg sp}, Publickey{arg pk Output  Boolean {res Authenticated DomPre  Certified\(sp, pk DomPost Certified\(sp, pk ReqPreFor RevelationVerifiedWhenReceived  rev:Revelation,, sig:Signature Verified\(rev, sig, pk\rOf\(sp, pk Operation AccessMailbox Input  Spy{arg sp}, Mailbox{arg ma}, Password  {arg pa Output  Boolean {res accessed DomPre  Accessed\(ma, sp DomPost Accessed\(ma, sp ReqPreFor MailboxAccessControl  Subscribed\(ma, sp ReqPreFor MailboxAccessedWithPassword  pa = ma.Password The above operations are transformed to B to construct the initial B machine that is further refined Proceedings of the 42nd Hawaii International Conference on System Sciences - 2009 6 


inside B using the B refinement mechanism to derive design specifications and generate implementation The rational for transforming KAOS operations to B while not transforming the rest of the goal graph is that operations sums up all the behaviors that agents need to have to fulfill their requirements, which are the leaf goals in the goal graph. The mechanism of constructing the goal graph shows that high level goals are refined using AND/OR refinement steps until leaf goals are derived meaning that the fulfillment of leaf goals implies the fulfillment of the higher level goals in the goal graph. Therefore, it is safe to only transform KAOS operations used to express behaviors of agents that perform them to fulfill the leaf goals in the goal graph without compromising the completeness and consistency properties of the requirements model  4.3 Transforming Security Requirements to B  The initial B machine obtained from transforming the requirements model obtained in section 3.2 to B includes an abstract representation of each KAOS operation as a B operation. KAOS operations preconditions are mapped to preconditions of their corresponding B operations. Machine invariants in B are constructed from the invariants of the KAOS objects manipulated by KAOS goals. For further details on the transformation scheme, refe e  have employed the B-Toolkit, which is one of the two most famous commercial tools for B development as a tool to develop our B model and refine it to derive design specifications and implementation. We highlight the significant parts of the B machine as follows MACHINE SpyNetwork \(maxSpies The SpyNetwork machine has a set representing all the spies in the network. The machine invariant defines the types of the machine variables that represent the state of the machine. The machine variables include the set of spies as well as their security attributes such as their mailbox passwords, their public and private keys  The KAOS operations are mapped to the following B operations. We use the signRevelation and accessMailbox operations as examples of KAOS operations that are transformed to their B equivalents and refine them in B due to space limitation     4.4 Derivation of Design and Implementation  The abstract machine obtained from transforming the KAOS operations to B is then refined to formally derive design specifications and implementation of the SNS security requirements. Each B refinement step prior to the implementation refinement reflects some design decision\(s\ the refining B machine to the refined B machine until implementation is obtained. The refinement mechanism in B provides means for documenting design decisions and building forward traceability links from requirements to design This is achieved through building a more detailed model from a more abstract one The first refinement step for the SNS focuses on data refinement through making the design decision of representing the pool of spies as an array of spies and we will show how the signRevelation and accessMailbox operations are refined accordingly as examples. From the traceability perspective, we can see that this data refinement step does not address the realization of a specific security requirement in the system. It rather concentrates on building a concrete data structure representing the internal system state in a form realizable by programming languages while implementation is generated  Proceedings of the 42nd Hawaii International Conference on System Sciences - 2009 7 


  The second refinement step makes a design decision of employing DSA \(Digital Signature Algorithm\ as the signature algorithm to achieve the revelation integrity requirements. This refinement step provides traceability links between integrity requirements and the design that realizes them. The second refinement step is classified as a procedural refinement since it only removes the non-determinism of the digital signature algorithm being used without modifying the state representation of the refined machine. The second refinement step is not described in detail due to space limitation The next step is to refine SpyNetworkR1 \(the second refinement step\e implementation machine      The final step is to generate C code from the implementation machine. The programming language choice is based on the programming languages available in the B tool being used. Almost all the commercial B tools generate code in C and very few of them generate ADA. The security properties should be maintained by the design decisions and the semantics of the B machines rather than by specific security construct in the programming language to which the implementation machine is translated  5. Security Specification Changes  With the introduction of security changes to software systems, more vulnerability might be added to the system as a result of the maintenance activities Current security engineering approaches might not either consider maintenance activities or provide sufficient information to perform accurate impact analysis resulting in introducing security vulnerabilities. In this section, we demonstrate the Proceedings of the 42nd Hawaii International Conference on System Sciences - 2009 8 


capability of FADES to structurally handle changes of security specifications by providing sufficient traceability information allowing for more complete and accurate impact analysis of change. According to  e u s e o f a s o f t w a re m odel th at s t ores des i gn decisions and traceability links significantly improve the accuracy and completeness of impact analysis Maintenance activities are classified into four categories according e \(ch a ng es i n t h e  software environment\ective \(new user requirements\e \(fixing errors\d preventive \(prevent future problems\ave chosen an example of a corrective change since corrective changes consume 21% of change requests h e other three categories of maintenance activities will be part of our future work A defective scenario threatening revelation confidentiality is as follows: A spy leaves his team and gets reallocated to another team after a message has been sent. This scenario is not handled by the current encryption/decryption solution used to protect the confidentiality of revelations since the leaving spy would receive a revelation that he is no longer eligible to receive. To correct this defect, the KAOS framework provides a conflict construct that allows the expression of situations that contradict with system requirements. We introduce the following conflict to the RevelationConfidentiality goal   This conflict could be resolved using one of the patterns for conflict resolution y i n trodu ci n g a  new goal to anticipate the conflict   This goal could be assigned to a reliable agent such as the big boss. Analyzing the impact of introducing the new goal shows that the RevelationConfidentiality requirement would be affected by this change. The traceability information provided by the hierarchical structure of the goal graph and the KAOS refinement mechanism direct the change impact analysis to revisit the AND refinement of the RevelationConfidentiality goal. The new goal needs to be added as a subgoal to the refinement of the RevelationConfidentiality goal The goal graph for the RevelationConfidentiality goal would be modified as in Figure 4 \(notice the dark gray subgoal that has been added to the refinement of the RevelationConfidentiality goal  Figure 4:  Accommodating the New Goal Since the new goal is a leaf goal, it will be operationalized using the following operation Operation NotifyRelayWithReallocation Input  Spy{arg relay}, Spy{arg leavingSpy DomPre   relay leavingSpy DomPost  relay, leavingSpy:Spy\ Notified\(relay leavingSpy ReqPreFor  team1, team2:Team\mber\(relay team1\mber\(leavingSpy, team1  Member\(leavingSpy, team2 This operation needs to be transformed to B in order to propagate this corrective change to the derived design and implementation. According to the change impact analysis performed with respect to the transformation of the new operation to B, we discovered that the state representation \(Variables the SpyNetwork machine needs to be complemented with the following variables: team, relaySpies authorizedReceiversFrom, authorizedSendersTo. These variables represent the set of assigned relays of all teams as well as the set of spies authorized to send to or receive from relays. Constraints on these variables need to be added to the invariant of the machine as follows   The definition of the operation notifyRelayWithReallocation is given below while its refinement is not shown here due to space limitation Proceedings of the 42nd Hawaii International Conference on System Sciences - 2009 9 


  6. Conclusion and Future Work  This paper presented the FADES approach using the SNS case study. This research addressed a case study that represents a sample of the category of communication systems using the FADES approach This category of systems share a common set of security requirements that have been elaborated in the paper. This assists in verifying the applicability of FADES to communication systems that exhibit high security demands. We have also illustrated how the underlying formality allows for documenting design decisions and trace these decisions to their corresponding security requirements While this paper demonstrated the conceptual framework of FADES, a number of future research steps are ongoing. We have embarked on case studies from other categories of software systems for further refinement and to show its applications. Further FADES is being quantitatively compared to other relevant approaches that derive design from requirements. The comparison will involve the application of both FADES and the other comparable approaches to the same case studies to measure the strength and limitations of FADES as opposed to other relevant approaches Future work might involve the demonstration of the capability of FADES to structurally handle other categories of maintenance activities \(perfective adaptive and preventive  Acknowledgement  This work was supported in part by Science Foundation Ireland grant 03/CE2/I303_1 to Lero-the Irish Software Engineering Research Center www.lero.ie Thanks to Dr. Van Lamsweerde who granted us a free license of the Objectiver software that has facilitated our work in the elicitation and modeling of security requirements using the KAOS framework  References  1  A. van Lamsweerde Elaborating Security Requirements by Construction of Intentional AntiModels  Proc. ICSE 04: 26th Intl. Conf. on Software  Engineering May 2004 2  Wilander, J. & Gustavsson, J Security requirements  A field study of current practice  Symposium on Requirement Engineering for  Information Security SREIS 2005 Paris, France, 2005 3  CERT http://www.cert.org/stats/cert_stats.html  4  A. van Lamsweerde and E. Letier Handling Obstacles in Goal-Oriented Requirements Engineering  IEEE Transactions on Software Engineering Special Issue on Exception Handling, Vol. 26 No. 10, Oct. 2000, 9781005 5  Lehman M. M On understanding Laws, evolution and conversation in the large program lifecycle  Journal of Software & Systems vol. 1, pp. 213 - 221, 1980 6  Cimitile, A.; Fasolino, A.R.; Visaggio, G A Software Model for Impact Analysis: A Validation Experiment  Proceedings of the Sixth Working Conference on Reverse Engineering Oct. 1999, pg. 212-222 7  P.J. Fontaine Goal-Oriented Elaboration of Security Requirements M.S. Thesis, Dept. Computing Science University of Louvain, June 2001 8  Abdel-Moneim, Riham, et. al Goal-Oriented, BBased, Formal Derivation of Security Design Specifications from Security Requirements  Symposium on Requirements Engineering for Information Security Barcelona, Spain, 2008 9  J. Viega and G. McGraw Building Secure Software How to Avoid Security Problems the Right Way Addison-Wesley, 2001 10  Massacci, Fabio, et. al Using a Security Requirements Engineering Methodology in Practice: The Compliance with The Italian Data Protection Legislation  Computer Standards & Interfaces issue 27, pg. 445-455, 2005 11  Cansell, Dominique and M´ery, Dominique Foundations of the B Method  Proceedings of Computing and Informatics vol. 22, pg. 1-31, 2003 12  Sekerinski, Emil, et. al Program Development by Refinement: Case Studies Using the B Method  Springer, 1999 13  Cimitile, A.; Fasolino, A.R.; Visaggio, G A Software Model for Impact Analysis: A Validation Experiment  Proceedings of the Sixth Working Conference on Reverse Engineering Oct. 1999, pg. 212-222 14  Bowen, J., and Hinchey, M Application of Formal Methods Prentice Hall, 1995 15  Stepney, Susan, Cooper, et. al An Electronic Purse Specification, Refinement, and Proof  Programming Research Group, Oxford University Computing Labarotory England, July 2000 16  Abrial, J.-R The B Book: Assigning Programs to Meanings Prentice-Hall  Proceedings of the 42nd Hawaii International Conference on System Sciences - 2009 10 


  11  Raffi P. Tikidjian received his B.S degree in Computer Science from the University of Cal Poly Pomona in 2003 and went on to receive his M.S. degree in Computer Science speci alized in the area of Software Engineering from the University of Southern California \(USC in 2006.  He is presently a member of technical staff for the Reasoning, Modeling, and Simulation Group at the Jet Propulsion Laboratory and a PhD candidate in the Center for Systems and Software Engineering \(CSSE at the University of Southern California \(USC guidance of Dr. Barry Boehm His interests are in the areas of systems health management, simulation and modeling model based engineering technologies, software methodologies and processes, mobile and web application user interface design Doug Abraham is a Senior Engineer within the Architecture and Strategic Planning Office of JPL\222s Interplanetary Network Directorate.  As the Strategic Forecasting Lead, he oversees efforts to forecast future mission customer requirements and trends, assesses their implications for Deep Space Network evolution, and assists in the development of the roadmaps and plans needed to guide this evolution.  Doug also supports NASA HQ-led study activ ities pertaining to future lunar and Mars communications architectures Prior to his current assignment, Doug worked on the Galileo, Ulysses, and Cassini flight projects.  He has also worked on several pre-project formulation activities including Pluto Fast Flyb y and the \223Fire and Ice\224 collaboration with Russia Doug began his career as a graduate student intern in the International Space Station Program Office \(1988 graduated Magna Cum Laude from Texas A&M University in Physics \(1986\.S. in Technology and Science Policy, with specialization in technology assessment and electrical engi neering, from Georgia Tech 1990 Janet Wu received her Bachelor of Science \(2000\.S. \(2002 degrees in Planetary Science from the Massachusetts Institute of Technology in Cambridge, MA She has been a technical staff member in the Optical Communications group at the Jet Propulsion Laboratory in Pasadena, CA since 2002 


target incoming target incoming target incoming source outgoing Figure 6. EIS System Network View Meta-model operations are those used for service description and must be ultimately decomposed into elementary ones \(i.e. data processing, storing and transferring are estimated through parameter values that are propagated by service invocation parameters to parameters describing application operations constituting the service description which are further propagated to parameters describing elementary operations 4.3. EIS Architecture Design Task Implementation EIS Architecture Design tasks may be supported by existing tools [20]. Systems Modeling Language \(SysML 15] is considered as the most appropriate for EIS System Network model representation and requirement engineering, since it supports the concepts of requirements and resource allocation. As a direct consequence, SysML allows the representation of requirements as model elements which means that requirements are part of the system architecture. For representation purposes, a SysML pro?le for EIS System Network meta-model \(?gure 6 mented as a plugin to MagicDraw modeling tool [2]. In order to facilitate model exchangeability, EIS System Network model is being realized in XML, which is a standard exchangeable format. In order to exchange data with speci?c software tools, model transformations will be accomplished through appropriate XSLTs developed for each tool for example as the one transforming XMI to the EIS System Network document type description \(DTD 5. Case Study In the following we discuss the case of renovating a legacy information system supporting a large-scale public organization based on the proposed concepts. The organization supports more than 350 interconnected regional of?ces and its main purpose is to provide services to the public both citizens and businesses. Regional of?ces are divided into three categories according to their size and information infrastructure requirements \(large, medium and small More than 15.000 employees work in the organization having on-line access to the legacy system. There are more than 300 different services provided to the public, while each citizen is required to register in the one belonging to his/her residential area, called residential of?ce. Some of them require the actual presence of citizens in their residential of?ce Existing system architecture is based on a fat clientserver architecture. All application logic is programmed within the client platform, while data is distributed in local database servers located in each regional of?ce. A Central database is supported in the Datacenter for data synchronization and lookup purposes. The Datacenter and all regional of?ces participate in a private TCP/IP network to facilitate ef?cient data replication. Most data related to a speci?c citizen are maintained as local data in his/her residential of?ce. Client programs access the local database to store data, while they access the central database mostly for lookup purposes. Local data are asynchronously replicated in the central database using a transaction management system \(TMS Proceedings of the 42nd Hawaii International Conference on System Sciences - 2009 8 to facilitate communication with the central database. The central database provides the overall view of each citizen  s record 


record To enhance the level of services provided by the organization, we decided to establish an enhanced e-services environment through an e-government portal. The main target of the portal is to minimize the need for citizen  s presence in regional of?ces and intents to deal with all the drawbacks of the current e-service platform. It provides easy access to citizens and businesses twenty four hours per day, seven days per week. It also promotes the increase of e-services to users, facilitating the organization to accomplish its strategic goals. The portal facilitates on-line transactional services and ensures on-line access to the databases of the legacy information system Provision of transactional e-services re?ects the operation of the legacy system and thus results in its renovation. In order to effectively support both systems \(e.g the portal and the legacy system able to apply the same policies and minimize maintenance cost. Thus, it was decided to explore the renovation of the legacy information system by adopting modern technological trends, such as multi-tiered application architecture server-based computing and light clients. It was decided also to rewrite application code based on J2EE architecture to develop a web interface for the legacy information system in order to support a uni?ed environment for both the legacy system and the portal. This decision affected the legacy system architecture, described in System Network View. Some of issues raised included: \(a database architecture? It is currently distributed. Should it become centralized? What are the implications in the network infrastructure? \(b complished to minimize maintenance cost Though EA was never fully described, the organization had already decided to establish an EA based on Zachman framework a few years ago. RUPmethodology was used for software development, thus application description models were developed within Rational Rose platform. In order to be able to apply the proposed tasks identi?ed in section 4, relative information had to be extracted from the corresponding cells. Application description \(e.g. applications and modules tracted from corresponding Rational Rose ?les. Though the process was not automated, the provision of System Network meta-model, helped architecture designer to identify the information needed to obtain from software designers Detailed service description in terms of load requirements could not be extracted from software description. This was crucial in order to decide upon Intranet and Datacenter architecture. This information was collected by interviewing software developers The new system has to deal with a number of require&lt;&lt;Site&gt;&gt Central Organization Building lt;&lt;ServerProcess&gt;&gt Oracle Central database lt;&lt;Site&gt;&gt Medium Regional Office lt;&lt;Site&gt;&gt Datacenter server room lt;&lt;Site&gt;&gt Large Regional Office lt;&lt;Site&gt;&gt Small Regional Office oracle L.R.O lt;&lt;ServerProcess&gt;&gt tuxido L.R.O lt;&lt;ServerProcess&gt;&gt lt;&lt;Site&gt;&gt L.R.O. department tuxido Central 


tuxido Central lt;&lt;ServerProcess&gt;&gt lt;&lt;Site&gt;&gt R.O. server room lt;&lt;ClientProcess&gt;&gt oracle net lt;&lt;Site&gt;&gt Organization lt;&lt;ClientProcess&gt;&gt tuxido lt;&lt;ClientProcess&gt;&gt application lt;&lt;UserProfile&gt;&gt officer lt;&lt;invoke&gt;&gt lt;&lt;invoke&gt;&gt lt;&lt;invoke&gt;&gt lt;&lt;invoke&gt;&gt lt;&lt;invoke&gt;&gt lt;&lt;invoke&gt;&gt lt;&lt;invoke&gt;&gt lt;&lt;initiate&gt;&gt Figure 7. Topology View - Existing System ments, with security and availability being the most important ones. Security issues have to do with the security of the network, security of data, authentication control, etc. Availability requirements deal with the backup subsystem, the recovery system and high availability UPS. Privacy must be enforced with the use of cryptography and compression techniques. All these requirements were identi?ed during the System Architecture design process and consequently exported in System Motivation cell where all system requirements are gathered using a simpli?ed text-based requirement description method System Architecture design tasks were performed by existing tools already described in [20]. The existence of System Network meta-model and its implementation in XML facilitated tool integration and interoperability. The identi?cation of primary EIS engineering activities served by Zachman matrix rows and columns facilitated a better understanding between software developers, architecture designers and organization management and enhanced discrete methodology integration. Existing and renovated application architecture of the legacy system de?ned by Topology View are presented in ?gures 7 and 8 respectively. The screenshots are from the MagicDraw [2] tool, enhanced with EIS pro?le to provide the appropriate functionality 6. Conclusions &amp; Future Work MB-EISE process based on Zachman framework was explored in the paper. The designer may adjust basic MB-EISE activity model for each cell, formulate a methodology-independent EIS cell-related view, and ?nally identify methods and tools appropriate for implementing each speci?c task. One could argue that in such a case, 36 distinct EIS sub-views should be de?ned, each of them being rather complex, while basic MB-EISE activity should be adjusted 36 times, resulting in a very complicated process Proceedings of the 42nd Hawaii International Conference on System Sciences - 2009 9 lt;&lt;Site&gt;&gt Central Organization Building lt;&lt;ServerProcess&gt;&gt Oracle Application Server lt;&lt;ServerProcess&gt;&gt Oracle Central database lt;&lt;Site&gt;&gt Medium Regional Office lt;&lt;Site&gt;&gt Datacenter server room lt;&lt;Site&gt;&gt Large Regional Office lt;&lt;Site&gt;&gt 


lt;&lt;Site&gt;&gt Small Regional Office lt;&lt;Site&gt;&gt L.R.O. department lt;&lt;Site&gt;&gt Organization lt;&lt;ClientProcess&gt;&gt web browser lt;&lt;ServerProcess&gt;&gt Web Server lt;&lt;UserProfile&gt;&gt officer &lt;&lt;initiate&gt;&gt lt;&lt;invoke&gt;&gt lt;&lt;invoke&gt;&gt lt;&lt;invoke&gt;&gt Figure 8. Topology View - Renovated System However, EIS engineering process, as enterprise architecture, is itself complex. The bene?t of the proposed approach is that all aspects \(simple or complex form and modular fashion. Cell-related sub-views and corresponding meta-models, as well as cell-related MB-EISE activity model may be progressively formed according to the designer  s priorities and perspectives Having a black-box view of each Zachman cell, the proposed approach focuses on EIS view integration and interview consistency. The notion of external entities when de?ning EIS cell-related views provides the means for interoperability with external cells, while at the same time facilitates atomicity within the limits of each cell. We are currently emphasizing Business and System rows, and especially Function and Network cells, exploring in parallel Motivation column and the way non-functional requirements are managed Having a white-box view of each Zachman cell, it is evident that the de?nition of a technology neutral metamodel and the identi?cation of basic engineering tasks, corresponding to EIS cell-related views, contributes to the integration of different methodologies and tools. A library of EIS System Network models has been already implemented in XML. Emphasis is given to requirements management and especially requirements derivation References 1] Institute For Enterprise Architecture Developments http://www.enterprise-architecture.info 2] MagicDraw UML. http://www.magicdraw.com 3] A. Aurum and C. Wohlin. Engineering and Managing Software Requirements. Springer, 2005 4] F. S. d. Boer, M. M. Bonsangue, J. Jacob, A. Stam, and L. W N. v. d. Torre. A Logical Viewpoint on Architectures. In EDOC, pages 73  83. IEEE Computer Society, 2004 5] E. R. Byrne. IEEE Standard 830: Recommended Practice for Software Requirements Speci?cations, 1998 6] B. Dave and D. Jim. The new, improved RUP SE Architecture Framework, 2005. IBM Rational Edge 7] D. J. de Villiers. Using the Zachman Framework to assess RUP. Rational Edge, 2001 8] J. A. Estefan. Survey of Model-based Systems Engineering \(MBSE May 2007 9] A. Fatolahi and F. Shams. An investigation into applying UML to the Zachman Framework. Information Systems Frontiers, 8\(2  143, 2006 10] M. Glinz. On non-functional Requirements. 15th IEEE International Requirements Engineering Conference, 2007 11] F. Goethals, W. Lemahieu, M. Snoeck, and J. Vandenbulcke. An overview of enterprise architecture framework deliverables. In Banda RKJ \(ed Introduction. ICFAI University Press., 2006 12] H.-P. Hoffmann. Harmony-SE/SysML Deskbook: ModelBased Systems Engineering with Rhapsody, Rev. 1.51 Telelogic/I-Logix white paper. Telelogic AB, May 2006 


Telelogic/I-Logix white paper. Telelogic AB, May 2006 13] IEEE. IEEE Recommended Practice for Architectural Description for Software-Intensive Systems - Std 1471. Technical report, oct 2000 14] O. M. G. Inc. UML 2.0 Superstructure Speci?cation, October 2004 15] O. M. G. Inc. Systems Modeling Language \(SYSML i?cation. Version 1.0, September 2007 16] INCOSE. INCOSE Handbook SE Process Model, September 2003. http://g2sebok.incose.org 17] Institute for Electrical and Electronic Engineers. IEEE Std 15288 -2004, Systems Engineering -System Life Cycle Processes, June 2005 18] A. v. Lamsweerde. Goal-Oriented Requirements Engineering: A Guided Tour. In Fifth IEEE International Symposium on Requirements Engineering \(RE  01 19] S. Leist and G. Zellner. Evaluation of current architecture frameworks. In H. Haddad, editor, SAC, pages 1546  1553 ACM, 2006 20] M. Nikolaidou and N. Alexopoulou. Enterprise Information System Engineering: A Model-Based Approach Based on the Zachman Framework. In HICSS  08. IEEE Computer Society, 2008 21] M. Nikolaidou and D. Anagnostopoulos. A systematic approach for con?guring web-based information systems Journal of Distributed and Parallel Databases, 17\(3  290, May 2005 22] C. M. Pereira and P. Sousa. A method to de?ne an Enterprise Architecture using the Zachman Framework. In H. Haddad A. Omicini, R. L. Wainwright, and L. M. Liebrock, editors SAC, pages 1366  1371. ACM, 2004 23] K. Pohl and E. Sikora. Supporting the Co-Design of Requirements and Architectural Artifacts. In 15th IEEE International Requirements Engineering Conference \(RE  07 pages 258  261, India Habitat Center, New Delhi, 2007 24] J. Schekkerman. How to Survive in the Jungle of Enterprise Architecture Frameworks: Creating or Choosing an Enterprise Architecture Framework. Trafford, 2003 25] J. F. Sowa and J. A. Zachman. Extending and Formalizing the Framework for Information Systems Architecture. IBM Systems Journal, 31\(3  616, 1992 Proceedings of the 42nd Hawaii International Conference on System Sciences - 2009 10 pre></body></html 


C. \(2005 Implementation and Use in an Existing Clinical Information System. In Connecting Medical Informatics and Bio-Informatics: Proceedings of MIE2005 - The XIXth International Congress of the European Federation for Medical Informatics, 328-333. IOS Press, 2005  4] Fetterman, D. M. Ethnography, 2nd ed. Thousand Oaks CA: Sage, 1997  5] Furukawa, N.  Ikeda, H.  Kato, Y.  Sako, H. D-Pen: a digital pen system for public and business enterprises. In Frontiers in Handwriting Recognition 2004: Proceedings of the Ninth International Workshop on Frontiers in Handwriting Recognition \(IWFHR-9 2004  6] Guimbreti  re, F. 2003. Paper augmented digital documents. In Proceedings of the 16th Annual ACM Symposium on User interface Software and Technology Proceedings of the 42nd Hawaii International Conference on System Sciences - 2009 9 UIST ?03 November 2003  7] Holman, D., Vertegaal, R., Altosaar, M., Troje, N., and Johns, D. 2005. Paper windows: interaction techniques for digital paper. In Proceedings of the SIGCHI Conference on Human Factors in Computing Systems \(CHI ?05 Portland, Oregon. New York: ACM, 2005  8] Kiewra, K., DuBois, N., Christian, D., McShane, A Meyerhoffer, M., &amp; Roskelley, D. Note-taking functions and techniques. Journal of Educational Psychology, 83 240-245, 1991  9] Kobayashi, K. Combined effects of note-taking/reviewing on learning and enhancements through interventions: a meta-analytic review. Educational Psychology, 26, 459-477, 2006  10] Liao, C., Guimbreti  re, F., and Hinckley, K. 2005 PapierCraft: a command system for interactive paper. In Proceedings of the 18th Annual ACM Symposium on User interface Software and Technology \(UIST ?05 Seattle, WA. New York: ACM, 2005  11] Livescribe. Pulse Smartpen [electronic device http://www.livescribe.com/, last retrieved May 28, 2008  12] Logitech. io2 Digital Pen [electronic device http://www.logitech.com/index.cfm/mice_pointers/digital_ pen/devices/408&amp;cl=us,en, last retrieved May 28, 2008  13] Norrie, M. C., Signer, B., and Weibel, N. Print-n-link weaving the paper web. In Proceedings of the 2006 ACM Symposium on Document Engineering \(DocEng '06 New York: ACM, 2006  14] Randall, D., Harper, R., and Rouncefield, M Fieldwork for Design: Theory and Practice. London Springer-Verlag, 2007  15] Searle, J. R. Speech Acts: An Essay in the Philosophy of Language. Cambridge: Cambridge Univ. Press, 1969  16] Sellen, A. J. and Harper, R. H. The Myth of the Paperless Office. Cambridge, MA: MIT Press, 2003  17] Signer, B. and Norrie, M. C. 2007. PaperPoint: a paper-based presentation and interactive paper prototyping 


paper-based presentation and interactive paper prototyping tool. In Proceedings of the 1st international Conference on Tangible and Embedded interaction \(TEI ?07 Baton Rouge, Louisiana. New York: ACM, 2007  18] Tanabe, K., Yoshihara, M., Kameya, H., Mori, S Omata, S., Ito, T., Automatic Signature Verification Based on the Dynamic Feature of Pressure. Proceedings of the Sixth International Conference on Document Analysis and Recognition \(ICDAR ?01 Computer Society, 2001   Proceedings of the 42nd Hawaii International Conference on System Sciences - 2009 10 pre></body></html 


The HyspIRI mission utilizes innovative techniques to both reduce the amount of data that must be transmitted to the ground and accommodate the required data volume on the ground The infrastructure and techniques developed by this mission will open the door to future high data volume science missions The designs presented here are the work of the authors and may differ from the current HyspIRI mission baseline A CKNOWLEDGMENTS This research was carried out at the Jet Propulsion Laboratory California Institute of Technology and was sponsored by the Space Grant program and the National Aeronautics and Space Administration R EFERENCES  K W ar\002eld T  V  Houten C Hee g V  Smith S Mobasser B Cox Y He R Jolly C Baker S Barry K Klassen A Nash M Vick S Kondos M Wallace J Wertz Chen R Cowley W Smythe S Klein L Cin-Young D Morabito M Pugh and R Miyake 223Hyspiri-tir mission study 2007-07 002nal report internal jpl document,\224 TeamX 923 Jet Propulsion Laboratory California Institute of Technology 4800 Oak Grove Drive Pasadena CA 91109 July 2007  R O Green 223Hyspiri summer 2008 o v ervie w  224 2008 Information exchanged during presentation  S Hook 2008 Information e xchanged during meeting discussion July 16th  R O Green 223Measuring the earth wi th imaging spectroscopy,\224 2008  223Moore s la w Made real by intel inno v ation 224 http://www.intel.com/technology/mooreslaw/index.htm  T  Doggett R Greele y  S Chein R Castano and B Cichy 223Autonomous detection of cryospheric change with hyperion on-board earth observing-1,\224 Remote Sensing of Environment  vol 101 pp 447\226462 2006  R Castano D Mazzoni N T ang and T  Dogget 223Learning classi\002ers for science event detection in remote sensing imagery,\224 in Proceedings of the ISAIRAS 2005 Conference  2005  S Shif fman 223Cloud detection from satellite imagery A comparison of expert-generated and autmatically-generated decision trees.\224 ti.arc.nasa.gov/m/pub/917/0917 Shiffman  M Griggin H Burk e D Mandl and J Miller  223Cloud cover detection algorithm for eo-1 hyperion imagery,\224 Geoscience and Remote Sensing Symposium 2003 IGARSS 03 Proceedings 2003 IEEE International  vol 1 pp 86\22689 July 2003  V  V apnik Advances in Kernel Methods Support Vector Learning  MIT Press 1999  C Bur ges 223 A tutorial on support v ector machines for pattern recognition,\224 Data Mining and Knowledge Discovery  vol 2 pp 121\226167 1998  M Klemish 223F ast lossless compression of multispectral imagery internal jpl document,\224 October 2007  F  Rizzo 223Lo w-comple xity lossless compression of h yperspectral imagery via linear prediction,\224 p 2 IEEE Signal Processing Letters IEEE 2005  R Roosta 223Nasa jpl Nasa electronic parts and packaging program.\224 http://nepp.nasa.gov/docuploads/3C8F70A32452-4336-B70CDF1C1B08F805/JPL%20RadTolerant%20FPGAs%20for%20Space%20Applications.pdf December 2004  I Xilinx 223Xilinx  Radiation-hardened virtex-4 qpro-v family overview.\224 http://www.xilinx.com/support/documentation data sheets/ds653.pdf March 2008  G S F  Center  223Tdrss o v ervie w  224 http://msp.gsfc.nasa.gov/tdrss/oview.html 7  H Hemmati 07 2008 Information e xchanged during meeting about LaserComm  223W orldvie w-1 224 http://www digitalglobe.com/inde x.php 86/WorldView-1 2008  223Sv albard ground station nor way.\224 http://www.aerospacetechnology.com/projects/svalbard 7 2008  223Satellite tracking ground station 224 http://www.asf.alaska.edu/stgs 2008  R Flaherty  223Sn/gn systems o v ervie w  224 tech rep Goddard Space Flight Center NASA 7 2002  223Geoe ye-1 f act sheet 224 http://launch.geoeye.com/launchsite/about/fact sheet.aspx 2008  L-3 Communications/Cincinnati Electronics Space Electronics 7500 Innovation Way Mason OH 45040 T-720 Transmitter  5 2007 PDF Spec Sheet for the T720 Ku-Band TDRSS Transmitter  L-3 Communications/Cincinnati Electronics Space Electronics 7500 Innovation Way Mason OH 45040 T-722 X-Band  7 2007 PDF Spec Sheet for the T-722  J Smith 07 2008 Information e xchanged during meeting about GDS  J Carpena-Nunez L Graham C Hartzell D Racek T Tao and C Taylor 223End-to-end data system design for hyspiri mission.\224 Jet Propulsion Laboratory Education Of\002ce 2008  J Behnk e T  W atts B K obler  D Lo we S F ox and R Meyer 223Eosdis petabyte archives Tenth anniversary,\224 Mass Storage Systems and Technologies 2005 Proceedings 22nd IEEE  13th NASA Goddard Conference on  pp 81\22693 April 2005 19 


 M Esf andiari H Ramapriyan J Behnk e and E So\002nowski 223Evolving a ten year old data system,\224 Space Mission Challenges for Information Technology 2006 SMC-IT 2006 Second IEEE International Conference on  pp 8 pp.\226 July 2006  S Marle y  M Moore and B Clark 223Building costeffective remote data storage capabilities for nasa's eosdis,\224 Mass Storage Systems and Technologies 2003 MSST 2003 Proceedings 20th IEEE/11th NASA Goddard Conference on  pp 28\22639 April 2003  223Earth science data and information system esdis project.\224 http://esdis.eosdis.nasa.gov/index.html  M Esf andiari H Ramapriyan J Behnk e and E So\002nowski 223Evolution of the earth observing system eos data and information system eosdis\\224 Geoscience and Remote Sensing Symposium 2006 IGARSS 2006 IEEE International Conference on  pp 309\226312 31 2006Aug 4 2006  223Earth science mission operations esmo 224 http://eos.gsfc.nasa.gov/esmo  E Masuoka and M T eague 223Science in v estig ator led global processing for the modis instrument,\224 Geoscience and Remote Sensing Symposium 2001 IGARSS 01 IEEE 2001 International  vol 1 pp 384\226386 vol.1 2001  M Esf andiari H Ramapriyan J Behnk e and E So\002nowski 223Earth observing system eos data and information system eosdis 227 evolution update and future,\224 Geoscience and Remote Sensing Symposium 2007 IGARSS 2007 IEEE International  pp 4005\2264008 July 2007  D McAdam 223The e v olving role of tape in the data center,\224 The Clipper Group Explorer  December 2006  223Sun microsystems announces w orld s 002rst one terabyte tape storage drive.\224 http://www.sun.com/aboutsun/pr/200807/sun\003ash.20080714.2.xml July 2008  223P anasas 227 welcome 224 http://www panasas.com  R Domikis J Douglas and L Bisson 223Impacts of data format variability on environmental visual analysis systems.\224 http://ams.confex.com/ams/pdfpapers/119728.pdf  223Wh y did nasa choose hdf-eos as the format for data products from the earth observing system eos instruments?.\224 http://hdfeos.net/reference/Info docs/SESDA docs/NASA chooses HDFEOS.php July 2001  R E Ullman 223Status and plans for hdfeos nasa's format for eos standard products.\224 http://www.hdfeos.net/hdfeos status HDFEOSStatus.htm July 2001  223Hdf esdis project.\224 http://hdf.ncsa.uiuc.edu/projects/esdis/index.html August 2007  223W elcome to the ogc website 224 http://www.opengeospatial.org 2008  223Open gis Gis lounge geographic information systems.\224 http://gislounge.com/open-gis Christine M Hartzell received her B.S in Aerospace Engineering for Georgia Institute of Technology with Highest Honors in 2008 She is currently a PhD student at the University of Colorado at Boulder where she is researching the impact of solar radiation pressure on the dynamics of dust around asteroids She has spent two summers working at JPL on the data handling system for the HyspIRI mission with particular emphasis on the cloud detection algorithm development and instrument design Jennifer Carpena-Nunez received her B.S in physics in 2008 from the University of Puerto Rico where she is currently a PhD student in Chemical Physics Her research involves 002eld emission studies of nanostructures and she is currently developing a 002eld emission setup for further studies on nano\002eld emitters The summer of 2008 she worked at JPL on the HyspIRI mission There she was responsible for the science analysis of the data handling system speci\002cally de\002ning the data level and processing and determining potential mission collaborations Lindley C Graham is currently a junior at the Massachusetts Institute of Technology where she is working towards a B.S in Aerospace Engineering She spent last summer working at JPL on the data handling system for the HyspIRI mission focusing on developing a data storage and distribution strategy 20 


David M Racek is a senior working toward a B.S in Computer Engineering at Montana State University He works in the Montana State Space Science and Engineering Laboratory where he specializes in particle detector instruments and circuits He spent last summer working at JPL on compression algorithms for the HyspIRI mission Tony S Tao is currently a junior honor student at the Pennsylvania State University working towards a B.S in Aerospace Engineering and a Space Systems Engineering Certi\002cation Tony works in the PSU Student Space Programs Laboratory as the project manager of the OSIRIS Cube Satellite and as a systems engineer on the NittanySat nanosatellite both of which aim to study the ionosphere During his work at JPL in the summer of 2008 Tony worked on the communication and broadcast system of the HyspIRI satellite as well as a prototype Google Earth module for science product distribution Christianna E Taylor received her B.S from Boston University in 2005 and her M.S at Georgia Institute of Technology in 2008 She is currently pursing her PhD at the Georgia Institute of Technology and plans to pursue her MBA and Public Policy Certi\002cate in the near future She worked on the ground station selection for the HyspIRI mission during the summer of 2008 and looks forward to working at JPL in the coming year as a NASA GSRP fellow Hannah R Goldberg received her M.S.E.E and B.S.E from the Department of Electrical Engineering and Computer Science at the University of Michigan in 2004 and 2003 respectively She has been employed at the Jet Propulsion Laboratory California Institute of Technology since 2004 as a member of the technical staff in the Precision Motion Control and Celestial Sensors group Her research interests include the development of nano-class spacecraft and microsystems Charles D Norton is a Principal Member of Technical Staff at the Jet Propulsion Laboratory California Institute of Technology He received his Ph.D in Computer Science from Rensselaer and his B.S.E in Electrical Engineering and Computer Science from Princeton University Prior to joining JPL he was a National Research Council resident scientist His work covers advanced scienti\002c software for Earth and space science modeling with an emphasis on high performance computing and 002nite element adaptive methods Additionally he is leading efforts in development of smart payload instrument concepts He has given 32 national and international keynote/invited talks published in numerous journals conference proceedings and book chapters He is a member of the editorial board of the journal Scienti\002c Programming the IEEE Technical Committee on Scalable Computing a Senior Member of IEEE recipient of the JPL Lew Allen Award and a NASA Exceptional Service Medal 21 


this paper, we only generate the size-2 patterns in the BFS phase. It will be interesting to investigate the impact on the performance if the ?rst phase is stopped at a deeper level Also, the projection is a very ef?cient method for ?nding patterns, especially for parallel implementation of pattern mining algorithms [1]. We plan to adapt the projection ideas into our algorithm and design an ef?cient parallel algorithm for mining maximal hyperclique patterns References 1] R. Agarwal, C. Aggarwal, and V. Prasad. A Tree Projection Algorithm For Generation of Frequent Itemsets. pages 350 371, Feb 2001 2] R. Agrawal, T. Imielinski, and A. Swami. Mining Association Rules between Sets of Items in Large Databases. In Proc. of the ACM SIGMOD Conference on Management of Data, pages 207216,May 1993 3] R. Agrawal and R. Srikant. Fast Algorithms for Mining Association Rules. In Proc. of the 20th Intl Conference on Very LargeData Bases, 1994 4] R. Bayardo. Ef?ciently mining long patterns from databases In Proc. of the ACM SIGMOD Conference, 1998 5] R. Bayardo and R. Agrawal. Mining the Most Interesting Rules. In Proc. of the ACM SIGKDD Conference, 1999 6] D. Burdick, M. Calimlim, and J. Gehrke. Ma?a: AMaximal Frequent Itemset Algorithm for Transactional Databases. In Proc. of IEEE Conf. on Data Engineering, 2001 7] Y. Huang, H. Xiong, W. Wu, and Z. Zhang. A Hybrid Approach for Mining Maximal Hyperclique Patterns. In In Technical Report UTDCS-34-04, Department of computer science, University of Texas - Dallas, 2004 8] J.Han, J.Pei, and Y. Yin. Mining Frequent Patterns without Candidate Generation. In Proc. of the ACM SIGMOD International Conference on Management of Data, 2000 9] M.J.Zaki and C.Hsiao. ChARM: An ef?cient algorithm for closed itemset mining. In Proc. of 2nd SIAM International Conference on Data Mining, 2002 10] R.Rymon. Search through Systematic Set Enumeration. In Proc. Third Intl Conference on Principles of Knowledge Representation and Reasoning, 1992 11] H. Xiong, M. Steinbach, P.-N. Tan, and V. Kumar. HICAP: Hierarchial Clustering with Pattern Preservation. In Proc. of 2004 SIAM International Conference on Data Mining \(SDM 12] H. Xiong, P.-N. Tan, and V. Kumar. Mining Strong Af?nity Association Patterns in Data Set with Skewed Support. In Proc. of the Third IEEE International Conference on Data Mining \(ICDM Proceedings of the 16th IEEE International Conference on Tools with Artificial Intelligence \(ICTAI 2004 1082-3409/04 $20.00 © 2004 IEEE 





