Machine Learning for Software Engineering Case Studies in Software Reuse Justin S Di Stefano Tim Menzies Lane Department of Computer Science West Virginia University PO Box 6109 Morgantown WV 26506-6109 USA justin@lostportal.net  tim@menzies.com Abstract There are many machine learning algorithms currently available In the 21st century the problem no longer lies in writing the learner but in choosing which learners to run on a given data set In this paper we argue that the 002nal choice of learners should not be exclusive in fact there are distinct advantages in running data sets through multiple learners To illustrate our point we perform a case study on a 
reuse data set using three different styles of learners association rule  decision tree induction  and treatment  Software reuse is a topic of avid debate in the professional and academic arena it has proven that it can be both a blessing and a curse Although there is much debate over where and when reuse should be instituted into a project our learners found some procedures which should signi\002cantly improve the odds of a reuse program succeeding KEYWORDS AI algorithms AI in software engineering AI in data mining machine learning reuse empirical studies treatment learning association rule learning decision tree learning C4.5 J4.8 J4.8 PART APRIORI TAR2 
1 Introduction In the 21st century there are too many machine learning tools Users are overwhelmed with possibilities and choosing which learners to apply to their data can be a daunting task The challenge now is not in building or designing a learner but in sorting through the reams of mature and ef\002cient ones in order to 002nd a subset which will prove useful A problem just as proli\002c and important as choosing which learners to run is making sure that you have run  1 Submitted to the 14th IEEE International Conference on Tools with Arti\002cial Intelligence November 4-6 2002 Washington D.C http www.nvc.cs.vt.edu/ictai2002  August 25 2002 Wp ref 
http://www.csee.wvu.edu/\230justin/wp/02/toolsai swreuse.tex Attribute Morisio et.al this paper state Application Domain Not analyzed 243 Size of Baseline 
Not analyzed X Production Type X 243 high-level control Top Management Commitment X 243 low-level control 
Reuse Approach 243 X Domain Analysis 243 X Figure 1 Conclusions where we disagree with Moriso et.al 243  X  no/some evidence re\255 spectively in this data set that this attribute is relevant to determining success or failure 
of a reuse project enough to produce a stable and viable conclusion When faced with the task of choosing a proper subset of learners our belief is that researchers stop to soon i.e they derive their conclusions after running just one learner However with the relative ease of running multiple learners there is no reason why those results cannot be cross-checked with other tools In fact running multiple learning algorithms on a data set can produce quite varied and useful results To illustrate this point we use the data set from Morisio et.al s 223Success and Failure Factors in Software Engineering\224 This data is a collection of intervie w results with industrial projects involved in the introduction of reuse The interviews were performed by Morisio Ezran and Tully The industrial projects presented are a sub 
set of 288 Process Improvement Experiments funded by the European Commission In each case the project was chosen because it represented a serious attempt at implementing a reuse process In their paper the researchers Morisio et.al  ran the CART machine learner on their data set a list of success and failure cases for the implementation of a software Proceedings of the 14th IEEE International Conference on Tools with Artificial Intelligence \(ICTAI\22202 1082-3409/02 $17.00 \251 2002 IEEE 


reuse program in various corporations and drew their conclusions based on it's output However we show here that if further learning using other learning algorithms is performed on the data set some different and essential results can be produced Figure 1 highlights the differences between our results and those obtained by Morisio et.al  For a full listing of all the attributes collected please refer to the original article In reevaluating the data from the above mentioned paper the J4.8 J4.8 P AR T 13 APRIORI 2 and TAR2.2 machine learners were run on the data set J4.8 is a decision tree induction learner based on C4.5 which operates by splitting data into subsets for each particular value of an attribute J4.8 PART 002nds classi\002cation rules based on partial decision trees speci\002cally the decision trees produced by J4.8 APRIORI is an association rule learner  in that it attempts to 002nd associations between various attributes of the data set Finally TAR2.2 is a treatment learner  A treatment learner uses an algorithm which instead of 002nding classi\002cations or associations attempts to 002nd one or a conjunction of attribute ranges which predict for an increased frequency of the best class and/or a decreased frequency of the worst This is especially useful in cases where a best and worse class can easily be de\002ned such as with the success and failure of a software reuse program The rest of this paper shows how we generated Figure 1 We will show that using a variety of learners on a data set instead of limiting oneself to a single class of machine learner can produce more de\002nitive and useful results We will also present some conclusions about the various factors which can effect the potential success or failure of a software reuse program 2 Background 2.1 Learning The goal of learning is to 002nd important patterns in data sets Analyzing these data sets by hand is problematic at best and can take substantial time and effort It is both quicker and easier if a computer can be 223taught\224 to search for these patterns In order to facilitate this many different types of learners have evolved including but not limited to decision tree learners  classi\002cation rule learners  association rule learners  and treatment learners  Each of these machine learners was used in our analysis of the data set they are described in the following sections 2.1.1 Decision Tree Learners and J4.8 Decision Tree Learners attempt to 002nd paths which arrive at a speci\002c class instance J4.8 speci\002cally uses a method called decision tree induction In this method data is split using a standard recursive splitting technique which produces a decision tree whose leaf nodes contain training examples of one class This means that the output of the J4.8 algorithm is a 223decision tree\224 garnered from the provided data which suggests a path that can be taken in order to arrive at a speci\002c class instance i.e success J4.8 is a java port of the C4.5 algorithm C4.5 uses a heuristic entropy measure of information content to build its trees The attribute that offers the largest information gain is selected as the root of a decision tree The example set is then divided up according to which examples do/do not satisfy the test in the root For each divided example set the process is then repeated recursively The information gain of each attribute is calculated as follows A tree C contains p examples of some class and n examples of other classes The information required for the tree C is as follows I  p n   241 265 p  p  n 266 log 2 265 p p  n 266 241 265 n p  n 266 log 2 265 n p  n 266 Say that some attribute A has values A 1  A 2  A v  If we select A i as the root of a new sub-tree within C  this will add a sub-tree C i containing those objects in C that have A i  We can then de\002ne the expected value of the information required for that tree as the weighted average E  A   v X i 1 265 p i  n i p  n 266 I  p i  n i  The information gain of branching on A is therefore gain  A   I  p n  241 E  A  2.1.2 Classi\002cation Rule Learners and J4.8 PART A classi\002cation rule learner operates by identifying a rule that covers instances in a speci\002c class and excludes ones not in the class separates them out and continues learning on the remaining instances More speci\002cally  J4.8 PART is a partial decision tree rule learner The algorithm parses the pruned decision trees output by the J4.8 algorithm and searches for rules which can be deduced from the tree In some cases classi\002cation rules can be signi\002cantly more compact and easier to read than decision trees In addition rules are often preferred to decision trees since each rule seems to represent an independent 223nugget\224 of knowledge 2.1.3 Association Learners and APRIORI Association rule learners are a generalization of classi\002cation rule learners they can predict for any attribute of the data set not just the class Association rule learners 2 Proceedings of the 14th IEEE International Conference on Tools with Artificial Intelligence \(ICTAI\22202 1082-3409/02 $17.00 \251 2002 IEEE 


can 002nd signi\002cant inter-relationships between attributes For example APRIORI often reveals that some attributes predict for others In these cases it maybe useful to remove the dependent attribute\(s since they are unnecessary during evaluation and tend to slow down and confuse the learning process 2.1.4 Treatment Learners and TAR2 Treatment learners differ from most other learners in that instead of attempting to 002nd a predictor for a class they attempt to 002nd a treatment which predicts for an increased frequency of the best class and a decreased frequency of the worst This type of learner is extremely useful when you are evaluating a data set which has clearly ordered classes i.e success and failure TAR2 seeks attribute ranges that occur more frequently in the highly scored classes than in the lower scored  and produces v arious rules based on those attributes It also allows for the selection of how many attributes should be used to produce a rule This allows for the production of a varied and extensive set of rules which can involve only a single attribute range or a range for every attribute present in the data set A detailed description of the mining algorithm for TAR2 follows TAR2 seeks attribute ranges that occur more frequently in the highly scored classes than in the lower scored classes Let a:r be some attribute range e.g DomainAnalysis  yes  then 242 a:r is a heuristic measure of the worth of a:r to improve the frequency of the best class 242 a:r uses the following de\002nitions X  a:r   is the number of occurrences of that attribute range in class X e.g success  DomainAnalysis:yes   9  all  a:r   is the total number of occurrences of that attribute range in all classes e.g all  DomainAnalysis:yes   9 best  the highest scoring class e.g best  success  rest  the non-best class e.g rest  f ailure  score  the score of a class X is X Using these de\002nitions 242 a:r is calculated as follows 242 a:r  P X 2 rest  best 241  X  244  best  a:r  241 X  a:r   all  a:r  A treatment is a subset of the attribute ranges with an outstanding 242 a:r value To apply a treatment TAR2 rejects all example entries that contradict the conjunction of the attribute ranges in the treatment The ratio of the classes in the remaining examples is compared to the ratio of classes in the original example set The best treatment is the one that most increases the relative percentage of preferred classes 22 2.1.5 Comparison It is dif\002cult to 002nd a paper article or study which compares multiple learning algorithms Many people have written or spoke about the various bene\002ts and problems with different learners but normally those studies refer only to learners in the same class such as classi\002cation learners However there are exceptions Almeida and Lounis did a study on the use of machine learned models for estimating correction costs In their article they compare the NewID CN2 6 C4.5 21 and FOIL machine learning algorithms The y conclude that The results show that the inductive logic programming algorithms are superior to the topdown induction decision tree top-down induction attribute value rules and covering algorithms  While their conclusion is born out by their data and testing techniques they make no mention of the fact that while the FOIL learner may have performed better in their test it would behoove the practicing researcher to try all the available learners before attempting to reach a conclusion about their data set 3 The Tests In the following sections we provide the breakdown of our testing methods and results and those from Morisio et.al s study 3.1 Morisio et.al.'s Test In their study Morisio et.al chose to separate the attributes from the data set into three classes namely State Variables  High-Level Control Variables  and Low-Level Control Variables  They de\002ne the different classes in this way 262 State Variables Attributes over which a company has no control 262 High-Level Control Variables Key high-level management decisions about a reuse program 262 Low-Level Control Variables Speci\002c approaches to the implementation of reuse Furthermore Morisio et.al chose to restrict their analysis to the state and high-level control variables Their reasoning is that the high-level control variables temporally and/or logically precede the low-level control variables For instance they say a decision to introduce reuse processes both logically and temporally precedes a decision 3 Proceedings of the 14th IEEE International Conference on Tools with Artificial Intelligence \(ICTAI\22202 1082-3409/02 $17.00 \251 2002 IEEE 


about whether to perform domain analysis and about when to to develop assets While the reasoning for breaking up the attributes is sound Morisio et.al s conclusions are skewed by their choice to exclude the low-level control variables One of their main conclusions was that not addressing two or more high-level control variables led to failure Ha ving said this however they say nothing about which speci\002c approach to take in the implementation of reuse for example which reuse-speci\002c processes to implement In essence their conclusions tell a company where to go without giving them the directions on how to get there When analyzing a data set it is important that all the attributes be properly analyzed Otherwise important patterns and information may be missed This was the problem with Morisio et.al s analysis of the data set By choosing to exclude certain attributes they have inappropriately constrained their learner and limited the scope of their conclusions 3.2 Our Tests In analyzing this data set we have left all the variables intact and unclassi\002ed with the sole exception of the Repository attribute which was excluded when running APRIORI because it has value 223 yes 224 for all cases In addition we have run a selection of various machine learners in order to ensure that all available patterns are discovered For each machine learner we compare our results with those from the original paper by Morisio et.al  The learners are presented in the order in which they were run In order to validate the results from the learners a common practice called 10-way cross validation was performed In this scheme the data set is split into 10 separate pieces each with the same distribution of classes The algorithms then learn on 9 of the sets and test the learned model on the 10th If the error rate during cross validation is low the exact de\002nition of low can vary depending on the domain and data set your are working with then the learned model can be considered valid 3.2.1 APRIORI APRIORI was run 002rst since it is useful to know about any dependencies in a data set before running other learning algorithms Results from APRIORI must be evaluated carefully however since some dependencies will appear which have no 223real-world\224 meaning What we are looking for from the output of APRIORI is a dependency which can be linked to a real-world situation such as T opM anagementCommitment  no   RewardsP olicy  no  In this data set however no such conclusions were found Since APRIORI failed to generate a usable dependency it neither con\002rmed nor denied the conclusions of Morisio et.al  3.2.2 J4.8 In this test the data was run through the J4.8 machine learner without any modi\002cations The class was simply the success or failure of the software reuse program The resulting tree used only one attribute Human Factors  The tree is shown below Human Factors  yes success 16.0/1.0 Human Factors  no failure 8.0 This tree has an error rate in 10 way cross-validation of just 4.2 After running the above test we removed the attribute Human Factors from the data and ran J4.8 again The resulting tree is show below Reuse Processes Introduced  yes success 15.0/1.0 Reuse Processes Introduced  no failure 8.0/1.0 Reuse Processes Introduced  NA failure 1.0 The error rate on this decision tree after running 10 way cross-validation is 20.8 As you can see this tree also only uses one attribute Reuse Processes Introduced  The original evaluation performed by Morisio et.al used a machine learner called CART CART is very similar to J4.8 and also produces a decision tree That decision tree is shown below Human Factors  yes Type of software production  product-family success Type of software production  isolated failure Human Factors  no failure The difference between the two algorithms is evident in their outputs J4.8 is driven to 002nd the simplest tree possible with an acceptable failure rate while CART is attempting to 002nd the tree with the lowest failure rate regardless of simplicity In this case the CART algorithm was successful in 002nding a tree with a 0 failure rate by using two attributes 3.2.3 J4.8 PART Rule learners like J4.8 PART can simplify complicated decision trees In this study the decision trees from x 3.2.2 are very simple Therefore the output from J4.8 PART is nothing more than a simple restatement of those trees For completeness sake the output from the J4.8 PART algorithm is shown below for both of the decision trees from x 3.2.2 FIRST TREE Human Factors  yes success 16.0/1.0  failure 8.0 4 Proceedings of the 14th IEEE International Conference on Tools with Artificial Intelligence \(ICTAI\22202 1082-3409/02 $17.00 \251 2002 IEEE 


SECOND TREE Reuse Processes Introduced  yes success 15.0/1.0  failure 9.0/1.0 Once again these results closely agree with the tree produced by CART 3.2.4 TAR2 As was discussed above TAR2 is a 223Treatment Learner\224 which can produce very different results than normal classi\002cation and decision tree learners Running this learner generated 3 stable under 10 way cross-validation and useful results As was explained above the results from TAR2 are attribute ranges which select for the best class in this case success The 3 attribute ranges which are most useful in selecting for success of a reuse project are Size of Baseline  L Domain Analysis  yes Reuse Approach  tight None of these attributes appear in the original evaluation performed by Morisio et.al  This is a combination of the choice by Morisio et.al to leave out the low-level control variables and a result of the limiting depth of running only a single learner 4 Conclusions Our conclusions take 2 forms 262 About reuse 262 About learning x 4.1 will present a general decision path to use when instituting a reuse program and x 4.2 will present our view on the use of multiple machine learning algorithms 4.1 Software Reuse After applying multiple machine learners several conclusions can be drawn about the potential success of a reuse program First and foremost and in agreement with Morisio et.al s conclusions the single largest deciding factor for success is 223Human Factors\224 This conclusion makes sense as people are more likely to be successful in implementing reuse if they are properly trained and aided in doing so Next and in no particular order the additional factors effecting reuse are 223Reuse Processes Introduced\224 223Size of Baseline\224 224Reuse Approach\224 and 224Domain Analysis\224 To summarize the basic steps that should be taken in order to increase the chance of success for a software reuse program we present a small rule table in two parts The 002rst part is areas where we agree with the conclusions by Morisio et.al  and the second is where our conclusions differ from theirs IN AGREEMENT 1 Train aid and entice people to write reusable code 2 Introduce reuse speci\002c processes DIFFERING 3 Don't bother trying to get reusable code out of small projects 4 Perform Domain Analysis 5 Make sure that reusable work products are tightly coupled These steps should aid in beginning a reuse program in any company In fact based on the Morisio et.al data our learners are telling us that these 5 simple steps will increase the chances for success dramatically 4.2 Multiple Learners As we have shown a single learner or single type of leaner is not suf\002cient to 002nd all the applicable patterns buried in a data set With the increasing speed and memory capacity of computers it is no longer a matter of days to run an ef\002cient machine learner in many cases it is not even a matter of hours Given the relative ease of running multiple learners our thesis is that a good analysis of a data set should use multiple learners Many mature machine learning tools are freely available through public domain downloads For example the J4.8 J4.8 PART and APRIORI implementations used in this paper came from the WEKA toolkit http://www.cs waikato.ac.nz/ml/weka  Also our TAR2 machine learner is available from http://www.ece.ubc.ca twiki/bin/view/Softeng/TreatmentLearner  Acknowledgements This research was conducted at West Virginia University under NASA contract NCC2-0979 The work was sponsored by the NASA Of\002ce of Safety and Mission Assurance under the Software Assurance Research Program led by the NASA IV&V Facility Reference herein to any speci\002c commercial product process or service by trade name trademark manufacturer or otherwise does not constitute nor imply its endorsement by the United States Government References 1 C Abts B Clark S Devnani-Chulani E Horowitz R Madachy D Reifer R Selby and B Steece COCOMO II 5 Proceedings of the 14th IEEE International Conference on Tools with Artificial Intelligence \(ICTAI\22202 1082-3409/02 $17.00 \251 2002 IEEE 


model de\002nition manual Technical report Center for Software Engineering USC 1998 http://sunset.usc edu/COCOMOII/cocomox.html#downloads  2 R Agrawal and R Srikant Fast algorithms for mining association rules In Proceedings of the 20th International Conference on Very Large Databases  1994 Available from http://www.almaden.ibm.com/cs people/ragrawal/papers/vldb94_rj.ps  3 K.-D Althoff M Nick and C Tautz Improving organizational memories through user feedback In F Bomarius editor Proc of the Workshop on Learning Software Organizations LSO in conjunction with the11th International Conference on Software Engineering and Knowledge Engineering SEKE'99 Kaiserslauten Germany  pages 27\22644 June 1999 4 R Boswell Manual for newid January 1990 5 L Breiman J H Friedman R A Olshen and C J Stone Classi\002cation and regression trees Technical report Wadsworth International Monterey CA 1984 6 P Clark and T Ng The cn2 induction algorithm Machine Learning  3:261\226283 1989  P  Coad D North and M May\002eld Object Models Strategies Patterns and Applications  Prentice Hall 1997 8 P Cohen V Chaudhri A Pease and R Schrag Does prior knowledge facilitate the development of knowledge-based systems In AAAI'99  1999 9 W Cunningham The checks pattern language of information integrity In J Coplien and D Schmidt editors Pattern Languages of Program Design  Addison-Wesley 1995 Also avialable at http://c2.com/ppr/checks.html  10 W Frakes and C Fox Sixteen questions about software reuse Communications of the ACM  38\(6 June 1995 11 E Guerrieri Reuse success when and how In Proceedings of WISR9 The 9th annual workshop on Institutionalizing Software Reuse  1999 Available from http://www/umcs.maine.edu/\230ftp/wisr wisr9/final-papers/Guerrieri.html  12 L Holder Intermediate decision trees 1995 Available from http://www-cse.uta.edu/\230holder/pubs ijcai95.ps  13 I.H.Witten and E Frank Data Mining Practical Machine Learning Tools and Techniques with Java Implementations  Academic Press 2000 14 N Kerth Caterpillar's fate A pattern language for transformation from analysis to design In J Coplien and D Schmidt editors Pattern Languages of Program Design  Addison-Wesley 1995 Also available from http://c2.com/ppr/catsfate.html  15 J Lee M Gruninger Y Jin T Malone A Tate G Yost and other members of the PIF working group The PIF Process Interchange Format and framework Knowledge Engineering Review  13\(1 Feb 1998 16 H L Mauricio A de Almeida and W L Melo An investigation on the use of machine learned models for estimating correction costs In Proceedings of the 21st International Conference on Software Engineerin Kyoto Japan  1997 17 T Menzies Se/ke reuse research Common themes and empirical results In S Chang editor Handbook of Software Engineering and Knowledge Engineering Volume II  WorldScienti\002c 2002 Available from http://tim.menzies com/pdf/00reuse.pdf  18 M Morisio M Ezran and C Tully Success and failure factors in software reuse IEEE Transactions on Software Engineering  28\(4 2002 19 D Perry Some holes in the emperor's reused clothes In Proceedings of WISR9 The 9th annual workshop on Institutionalizing Software Reuse  1999 Available from http://www/umcs.maine.edu/\230ftp/wisr wisr9/final-papers/Perry.html  20 J Quinlan Learning logical de\002nitions from relations Machine Learning  5\(3 August 1990 21 R Quinlan C4.5 Programs for Machine Learning  Morgan Kaufman 1992 ISBN 1558602380 22 T.Menzies and Y Hu The tar2 treatment learner 2002 Available from http://www.ece.ubc.ca/twiki pub/Softeng/TreatmentLearner/intro.pdf  23 M Uschold M King S Moralee and Y Zorgios The enterprise ontology The Knowledge Engineering Review  13\(1 Feb 1998 6 Proceedings of the 14th IEEE International Conference on Tools with Artificial Intelligence \(ICTAI\22202 1082-3409/02 $17.00 \251 2002 IEEE 


 0 1 1 1 0 1 1 1  1 1 1 0   r 1 r 2 r 3 r 4  r x r y  c 1 c 2   3 c 2 0 1 c 1 c 2      Maximum hits = 2 Figure 5 Maximum hits pruning the miss counter for  c 1 c 2   even though both c 1 and c 2 are 1 in r 4  Because cnt  c 1   1 and cnt  c 2   3 before reading r 4  the numbers of remaining 1's for each column are 3 and 2 respectively Therefore we know that there are at most 2 rows with both c 1 and c 2 in the following rows Since this pair has already had 1 hit in r 2  the maximum possible number of hits c hit isatmost 3 and the maximum possible similarity d Sim  c 1 c 2  is c hit   ones  c 1  ones  c 2  000 c hit   5  Let rem  c i  be the number of remaining 1's of c i i.e rem  c i   ones  c i  000 cnt  c i   Then the maximum number of hits with c i and c j such that ones  c i  024 ones  c j  is calculated as follows 017 If rem  c i  024 rem  c j   all remaining 1's of c i can match 1's of c j  Therefore the maximum possible hits c hit is ones  c i  000 mis  c i  017 If rem  c i   rem  c j  then rem  c i  000 rem  c j  of the remaining 1's of c i can not match 1's of c j  Therefore the maximum possible hits c hit is ones  c i  000 mis  c i  000  rem  c i  000 rem  c j   Using c hit  we can calculate the maximum possible similarity d Sim  c i c j  c hit   ones  c i  ones  c j  000 c hit   which can be used for candidate pruning 5.3 DMC\255sim algorithm The overall algorithm to 002nd similar column pairs is following Algorithm 5.1  DMC-sim 1 Same as Step 1 of DMC-imp  2 Extract 100%-similar i.e identical columns We only have to keep candidates such that ones  c i   ones  c j  with no miss To avoid memory explosion we also apply a variant of the DMC-bitmap algorithm The main points that we should modify it are following 017 Compare those columns that have the same number of 1's since we want to extract identical pairs 017 Extract those column pairs c i and c j that have the same bitmap instead of counting the number of 1's in bm  c j   bm  c k   3 Remove columns c j such that ones  c j  024 1  1 000 minsim  000 1  Note that the cut-off threshold is not 1  1 000 minsim   since there might be less-than-100 similar pairs between the columns whose number of 1's are d 1  1 000 minsim  000 1 e and d 1  1 000 minsim  e  4 Extract less-than-100 similar columns by using a variant of DMC-base and DMC-bitmap algorithms The modi\002cation points are following 017 Skip Step 1 of DMC-base and scan the sparsest bucket 002rst 017 Keep candidates such that ones  c i  ones  c j  is minsim or more 017 Discard candidates whenever the maximum possible similarity d Sim  c i c j  islessthan minsim  6 Performance Evaluation We implemented our algorithms DMC-imp and DMCsim  on a Sun Ultra 2  2 002 200 MHz 256MB memory workstation In this section we describe the data sets that we used for our experiments Then we show the experimental results of both algorithms To compare DMC algorithms with a-priori and Min-Hash algorithms we have done an experiment with applying both support pruning and con\002dence pruning Note that support pruning can be applied to DMC and Min-Hash algorithms in the same manner as a-priori  Finally we show sample rules extracted from news articles 6.1 Data sets Table 1 shows the size of the data sets we used in our experiments The meaning of each data set is followings 1 Web access log This data set consists of the log entries from the sun Web server The columns in this case are the URL's and the rows represent distinct 


client IP address that have accessed the server recently An entry is set to 1 if there has been at least one hit for that URL from that particular client IP The data set Wlog  has more than 200,000 rows and 75,000 columns We also prepared the data set WlogP by pruning those columns with 10-or-fewer 1's The pruned data set WlogP has 13,000 columns 2 Web-page-link graph This data represents the URL link graph for the Stanford site which has about 700,000 pages Both columns and rows are the URL's An entry is set to 1 if there is a link from the page p i to the page p j  The rows are p i and the columns are p j in the data plinkF andtherowsare p j and the columns are p i in the data plinkT  Extracting similar columns from plinkF means extracting pages that are referred to by similar sets of pages while extracting from plinkT means extracting pages that have similar sets of links 3 News documents This data News  consists of 84,000 Reuters news documents Each row is a document and each column is a word Stop words  which appear among the documents very frequently are pruned before processing and 170,000 words remain By using implication rules with low-support pruning we can get sets of words each of which is related to a news topic To compare the performance with other algorithms we also prepare a smaller data set NewsP  since other algorithms could not be applied to our data sets in a reasonable execution time on our machine due to its memory size 4 Dictionary This is an on-line version of the 1913 Webster's dictionary that is available through the Gutenberg Project 15  C ol umns are head words words being de\002ned and rows are de\002nition words words used in the de\002nition There are 96,000 head words and 45,000 de\002nition words We can get similar de\002nition words such as brother-in-law and sisterin-law  by extracting similarity rules Table 1 Real data sets Data Rows Columns Wlog 218,518 74,957 WlogP 203,185 13,087 pliknF 173,338 697,824 plinkT 695,280 688,747 News 84,672 170,372 NewsP 16,392 9,518 dicD 45,418 96,540 6.2 Experimental results In this section we discuss our experimental results We use 6 sets of the data 226 Wlog  WlogP  linkF  linkT  News and dicD 226 for evaluating DMC-imp and DMC-sim Wealsouse one small data set NewsP for comparing the performance among the algorithms including a-priori and Min-hash  Fig 6 shows the experimental results The left graphs are for 002nding implication rules and the right graphs are for 002nding similarity rules Fig 6\(a and b plot the execution time with a different threshold Each execution can be 002nished in a reasonable time if we want to extract 85%-ormore rules The execution time decreases lineally according to increasing the threshold in general Fig 6\(c and d shows the details of the execution time for Wlog  The execution time for pre-scanning is small compared to other execution times The execution time for 002nding 100 rules is also small and constant for each threshold while the execution time for 002nding less than 100 rules depends on the threshold The execution times of DMC-imp and DMC-sim for plinkT have a gap between 80 and 75 threshold Fig 6\(e and f show the detail of the execution time In these cases the low-memory algorithm DMC-bitmap  jumps up from 22 to 398 seconds in the case of DMCimp and from 27 to 399 seconds in the case of DMC-sim  respectively The reason why this jump-up occurs is that larger rows that are handled in the DMC-bitmap includes many columns that have frequency 4 Since we can not prune columns with frequency 4 if the threshold is 75 or less the execution time for DMC-bitmap was dramatically increased If we could apply low-support pruning before executing algorithms it would not occur Fig 6\(g and h show the maximum memory size for the counter array that keeps candidate IDs and their misscounters DMC-sim requires much less memory than DMCimp since DMC-sim can use the two additional pruning techniques that we mentioned in Sec 5 Except DMCimp for News with 75%-or-less threshold all executions can 002t in main memory Since we apply the DMC-bitmap algorithms the memory requirement does not explode even as the threshold decreases For example the memory requirement for plinkT does not jump up even if the threshold decreases from 80 down to 70 while the execution time does In order to compare the DMC algorithms to a-priori and Min-Hash  we generated a pruned data set of news documents NewsP  We created this data from 16,392 news documents and pruned the columns with minimum support threshold 35 0.2 and maximum support threshold 3278 20 Since the number of remaining columns was 9518 the counters for all pairs could be 002t in main memory that required 172MB This situation is best for a-priori since 


   0 100 200 300 400 500 600 700 800 65 70 75 80 85 90 95 100 Confidence threshold Execution time \(sec    0 100 200 300 400 500 600 700 800 65 70 75 80 85 90 95 100 Similarity threshold Execution time \(sec Wlog WlogP plinkF plinkT News dicD   0 50 100 150 200 65 70 75 80 85 90 95 100 Confidence Threshold Memory \(MB    0 50 100 150 200 65 70 75 80 85 90 95 100 Similarity Threshold Memory \(MB Wlog WlogP plinkF plinkT News dicD a b g h   e plinkT 0 100 200 300 400 500 600 700 65 70 75 80 85 90 95 100 Confidence threshold Time \(sec   c Wlog 0 100 200 300 400 500 600 700 65 70 75 80 85 90 95 100 Confidence threshold Time \(sec   f plinkT 0 100 200 300 400 500 600 700 65 70 75 80 85 90 95 100 Similarity threshold Time \(sec     d Wlog 0 100 200 300 400 500 600 700 65 70 75 80 85 90 95 100 Similarity threshold Time \(sec 100-bitmap 100%-base 100%-bitmap 100%-base Pre-scaning    i NewsP 0 50 100 150 200 65 70 75 80 85 90 95 100 Confidence threshold Time \(sec DMC-imp a-priori K-Min    j NewsP 0 50 100 150 200 65 70 75 80 85 90 95 100 Similarity threshold Time \(sec DMC-sim a-priori Min-Hash Figure 6 Experimental results 


polgar -> international polgar -> old polgar -> judit polgar -> champion polgar -> youngest polgar -> chess polgar -> kasparov polgar -> men polgar -> highest polgar -> top polgar -> soviet polgar -> players polgar -> federation polgar -> player polgar -> ranked polgar -> grandmaster polgar -> garri  j udit -> soviet j udit -> hungary kasparov -> chess kasparov -> game kasparov -> champion grandmaster -> soviet grandmaster -> champion grandmaster -> chess garri -> chess garri -> kasparov garri -> soviet garri -> championship garri -> champion Figure 7 Sample rules the memory optimization techniques for DMC and MinHash will not improve their performance signi\002cantly Fig 6\(i and j show the execution times of these algorithms The K-Min algorithm is a variant algorithm of Min-Hash  which can extract implication rules instead of similarity rules However it could not extract complete sets of true rules therefore we plotted the execution time when the number of false negatives was less than 10 The other algorithms including Min-Hash for 002nding similarity rules could extract complete sets of true rules In this experiment a-priori is best for 002nding implication rules with 75%-or-less con\002dence threshold and Min-Hash is best for 002nding similarity rules with 70%or-less similarity threshold respectively However the DMC algorithms are best for 002nding both implication and similarity rules with high threshold 6.3 Extracted rules Text-mining by using extracted implication rules with low-support pruning is one of the interesting applications for our algorithms Fig 7 shows sample rules we extracted from News with an 85 con\002dence threshold and with a support pruning less than 5 These rules are extracted by selecting all rules related to keyword Polgar and its successors recursively This set of rules indicates information about Miss Judit Polgar who is 12-years-old has been ranked No 1 in the women's world chess 7 Conclusion and future works We presented two new algorithms DMC-imp and DMCsim  for 002nding implication and similarity rules Our algorithms do not use support pruning but use con\002dence or similarity pruning which reduces the memory size signi\002cantly We also proposed the other pruning techniques row re-ordering  100%-rule pruning  columndensity pruning and maximum-hits pruning  In order to evaluate the performance of the algorithms we used 4 sets of data Web-access logs Web-page-link graph news documents and a dictionary The algorithms have been implemented on a Sun Ultra 2  2 002 200 MHz 256MB memory workstation According to the experimental results our algorithms can be executed in a reasonable time The algorithms that proposed previously can not execute on our data sets since the algorithms required more than 256MB memory Therefore we compared performance by using the News data sets by pruning by using support threshold 35 so that all counters for a-priori can 002t in main memory The comparison results shows that DMC-imp can execute 1.7 times faster than a-priori  and 1.9 times faster than K-Min  and that DMC-sim can execute 5.9 times faster than apriori  and 1.7 times faster than Min-Hash  in case of an 85 threshold The followings are future research topics 017 Our algorithm can not extract rules among more than two columns while a-priori can do so However by grouping similarity and implication rules as showed in Sec 6.3 we can get useful groups of rules among more than two columns This idea can be applied to other data sets which generates more interesting rules 017 The memory requirement for News with less than 80 con\002dence threshold exceeds 256MB To be scalable this algorithm a parallel algorithm based on a divideand-conquer technique such as FDM 6 f or a-priori  is necessary References 1 R  A g r a w al T  I mielin sk i an d A  S w a mi M in in g Association Rules Between Sets of Items in Large Databases In Proceedings of the ACM SIGMOD Conference on Management of Data 1993 pp 207\226 216  R  A gra w al and R  S ri kant  F as t A l gori t h ms for Mining Association Rules In Proceedings of the 20th 


International Conference on Very Large Databases 1994  R  J  B ayardo J r  R  A gra w al and D  G unopul os  Constraint-Based Rule Mining in Large Dense Databases In Proceedings of the 15th International Conference on Data Engineering 1999 pp 188\226197 4 S  B rin  R Mo tw an i J.D Ullman  a n d S Tsu r  Dynamic itemset counting and implication rules for market basket data In Proceedings of the ACM SIGMOD Conference on Management of Data 1997 pp 255\226264  A  B roder  On the r esemblance and c ontainment of documents In Compression and Complexity of Sequences SEQUENCES'97  1998 pp 21\22629  D  W  C heung J  H a n V  T  N g  e t a l  A Fast Distributed Algorithm for Mining Association Rules In Proceedings of Conference on Parallel and Distributed Information Systems 1996 pp 31\22642 7 E  C o h e n  Size-Estimatio n F rame w o rk with Applications to Transitive Closure and Reachability Journal of Computer and System Sciences 55 1997 441\226453 8 E  C o h e n  M Datar  S Fu jiw ara A Gio n i s et al Finding Interesting Associations without Support Pruning In Proceedings of the 16th International Conference on Data Engineering  2000  R O D uda and P E H art Pattern Classi\002cation and Scene Analysis  A Wiley-Interscience Publication New York 1973  A  G i oni s  P  Indyk and R  M ot w a ni  S i m i l a ri t y Search in High Dimensions via Hashing In Proceedings of the 25th International Conference on Very Large Databases 1999 11 D Go ld b e r g  D  Nich o l s B.M Ok i an d D  T erry  Using collaborative 002ltering to weave an information tapestry Communications of the ACM 55 1991 1\226 19  S  G uha R  R as t ogi  a nd K  S h i m  C U R E A n Ef\002cient Clustering Algorithm for Large Databases In Proceedings of the ACM-SIGMOD International Conference on Management of Data 1998 pp 73\22684  R  Mot w ani a nd P  R a gha v a n Randomized Algorithms Cambridge University Press 1995  J  S  P a rk M S  C hen and P S  Y u A n ef fect i v e hash-based algorithm for mining association rules In Proceedings of the ACM SIGMOD Conference on Management of Data 1995 pp 175\226186  P r oj ect G u t e nber g  http:..www.gutenberg.net  1999  N Shi v akumar and H  G arcia-Molina B u ilding a Scalable and Accurate Copy Detection Mechanism In Proceedings of the 3rd International Conference on the Theory and Practice of Digital Libraries  1996  H.R  V a rian and P  R esnick E ds C A C M S pecial Issue on Recommender Systems Communications of the ACM 40 1997 


User Anomaly Description programmer2 logs in from beta secretary logs in at night sysadm logs in from jupiter programmer1 becomes a secretary secretary becomes a manager programmer1 logs in at night sysadm becomes a programmer manager1 becomes a sysadm manager2 logs in from pluto Table 12 User Anomaly Description User Normal Anomaly programmer2 0.58 0.79 0.00 secretary  1  1  0.00 sysadm 0.84 0.95 0.00 programmer1 0.31 1.00 0.04 secretary 0.41 0.98 0.17 programmer1  1  1  0.00 sysadm 0.64 0.95 0.00 manager1 0.57 1.00 0.00 manager2 1.00 1.00 0.00 Table 13 Similarity with User's Own Pro\002le tivities of each time segment am pm and nt We treat the 5th week as the training period during which we compare the patterns from each session to the pro\002le of the time segment We record the normal range of the similarity scores during this week The data in the 6th week has some user anomalies as described in Table 12 For each of the anomalous sessions we compare its patterns against the original user's pro\002le and then compare the resulting similarity score against the recorded normal range of the same time segment In Table 13 the column labeled 223Normal\224 is the range of similarity of each user against his or her own pro\002le as recorded during the 5th week A 1 here means that the user did not login during the time segment in the 5th week The column 223Anomaly\224 is the similarity measure of the anomalous session described Table 12 We see that all anomalous sessions can be clearly detected since their similarity scores are much smaller than the normal range For example when the sysadm becomes programmer see Table 12 his/her patterns have zero matches with the sysadm's pro\002le while for the whole 5th week the pm similarity scores are in the range of 0.64 to 0.95 Unfortunately formal evaluation statistics are not available to determine the error rates of this approach However this initial test indicates a path worthy of future study 6 Related Work Network intrusion detection has been an on-going research area 17  M ore r ecent s ystems e g B ro 18   NFR 6  a n d EMERALD  1 9  a ll mad e e x ten s ib ility th eir primary design goals Our research focuses on automatic methods for constructing intrusion detection models The meta-learning mechanism is designed to automate the extention process of IDSs We share the same views discussed in 20 t h at an ID S s houl d b e b ui l t us i n g s t a ndard components We believe that the operating system and networking community should be responsible for building a robust 223Event\224 box In 10  a l gori t h ms for a nal y zi ng us er s h el l c ommands and detecting anomalies were discussed The basic idea is to 002rst collapse the multi-column shell commands into a single stream of strings and then string matching techniques and consideration of 223concept drift\224 are used to build and update user pro\002les We believe that our extended frequent episodes algorithm is a superior approach because it considers both the association among commands and arguments and the frequent sequential patterns of such associations 7 Conclusions and Future Directions In this paper we outline a data mining framework for constructing intrusion detection models The key idea is to apply data mining programs to audit data to compute misuse and anomaly detection models according to the observed behavior in the data To facilitate adaptability and extensibility we propose the use of meta-learning as a means to construct a combined model that incorporate evidence from multiple lightweight base models This mechanism makes it feasible to introduce new ID components in an existing IDS possibly without signi\002cant re-engineering We extend the basic association rules and frequent episodes algorithms to accommodate the special requirements in analyzing audit data Our experiments show that the frequent patterns mined from audit data can be used as reliable user anomaly detection models and as guidelines for selecting temporal statistical features to build effective classi\002cation models Results from the 1998 DARPA Intrusion Detection Evaluation Program showed our detection models performed as well as the best systems built using the manual knowledge engineering approaches Our future work includes developing network anomaly detection strategies and devising a mechanical procedure to translate our automatically learned detection rules into modules for real-time IDSs A preliminary project in collaboration with NFR has just started 12 


8 Acknowledgments We wish to thank our colleagues at Columbia University Chris Park Wei Fan and Andreas Prodromidis for their help and encouragement References 1 R  A g r a w a l  T  I m i e lin sk i a n d A  S w a m i  M in in g a sso c i a tion rules between sets of items in large databases In Proceedings of the ACM SIGMOD Conference on Management of Data  pages 207\226216 1993 2 P  K  C han a nd S  J S t ol f o  T o w ar d p ar al l e l a nd di st r i b u t e d learning by meta-learning In AAAI Workshop in Knowledge Discovery in Databases  pages 227\226240 1993 3 W  W  C ohen Fast ef f ect i v e r ul e i nduct i on I n Machine Learning the 12th International Conference  Lake Taho CA 1995 Morgan Kaufmann 4 U  F ayyad G P i at et sk yS h api r o and P  S myt h  T he KDD process of extracting useful knowledge from volumes of data Communications of the ACM  39\(11\:27\22634 November 1996 5 K  I l gun R  A K e mmer e r  and P  A  P or r a s S t at e t r a nsition analysis A rule-based intrusion detection approach IEEE Transactions on Software Engineering  21\(3\:181\226 199 March 1995 6 N  F  R  I n c  N etw o rk 003ig h t reco rd er  h ttp www n fr co m  1997 7 V  J acobson C  L e r e s and S  M cC anne t cpdump a v ai l a bl e via anonymous ftp to ftp.ee.lbl.gov June 1989 8 C  K o  G Fin k  a n d K  L e v itt Au to m a te d d e t e c tio n o f v u l nerabilities in privileged programs by execution monitoring In Proceedings of the 10th Annual Computer Security Applications Conference  pages 134\226144 December 1994 9 S  K umar and E  H  S paf f or d A s of t w ar e a r c hi t ect ur e t o support misuse intrusion detection In Proceedings of the 18th National Information Security Conference  pages 194\226 204 1995  T  L a ne and C  E  B r odl e y  S equence m at chi n g a nd l ear ni ng in anomaly detection for computer security In AAAI Workshop AI Approaches to Fraud Detection and Risk Management  pages 43\22649 AAAI Press July 1997  W  L e e a nd S  J S t ol f o  D at a m i n i n g a ppr oaches f o r i nt r u sion detection In Proceedings of the 7th USENIX Security Symposium  San Antonio TX January 1998  W  L ee S  J S t ol f o  a nd K W  Mok Mi ni ng i n a d at a\003 o w environment Experience in intrusion detection submitted for publication March 1999  T  L unt  D et ect i n g i nt r uder s i n comput er syst ems I n Proceedings of the 1993 Conference on Auditing and Computer Technology  1993  T  L unt  A  T amar u F  Gi l h am R  J agannat h an P  N eumann H Javitz A Valdes and T Garvey A real-time intrusion detection expert system IDES 002nal technical report Technical report Computer Science Laboratory SRI International Menlo Park California February 1992  H Manni l a and H  T oi v onen Di sco v e r i ng gener a l i zed episodes using minimal occurrences In Proceedings of the 2nd International Conference on Knowledge Discovery in Databases and Data Mining  Portland Oregon August 1996  H Manni l a  H  T oi v onen and A  I  V er kamo D i s co vering frequent episodes in sequences In Proceedings of the 1st International Conference on Knowledge Discovery in Databases and Data Mining  Montreal Canada August 1995  B M ukherjee L T  Heberlein and K  N  L e v itt Netw ork intrusion detection IEEE Network  May/June 1994  V  Paxon B r o  A syst em f o r d et ect i n g n et w o r k i n t r uder s in real-time In Proceedings of the 7th USENIX Security Symposium  San Antonio TX 1998  P  A P o r r a s a nd P  G Neumann E m er al d E v ent m oni t o r i ng enabling responses to anomalous live disturbances In National Information Systems Security Conference  Baltimore MD October 1997  S  S t ai nf or dC h en C ommon i nt r u si on det ect i o n f r a me w o r k  http://seclab.cs.ucdavis.edu/cidf  S  J S t ol f o  A  L  P r odr omi d i s  S  T sel e pi s W  L ee D W  Fan and P K Chan JAM Java agents for meta-learning over distributed databases In Proceedings of the 3rd International Conference on Knowledge Discovery and Data Mining  pages 74\22681 Newport Beach CA August 1997 AAAI Press  S unS of t  Mount ai n V i e w  C A  SunSHIELD Basic Security Module Guide  13 


 30 40 50 60 70 80 90 100 110 120 30 40 50 60 70 80 90 10 0 Execution Time [s Number of Nodes Figure 13 Execution time of HPA program pass 2 on PC cluster 2 Scan the transaction database and count the support count Each processing node reads the transaction database from its local disk 000 itemsets are generated from that transaction and the same hash function used in phase 1 s applied to each of them Each of the 000 itemsets is sent to certain processing node according the hash value For the itemsets received from the other nodes and those locally generated whose ID equals the node\220s ID the hash table is searched If hit its support count value is incremented 3 Determine the large itemset After reading all the transaction data each processing node can individually determine whether each candidate 000 itemset satisfy user-specified minimum support or not Each processing node sends large 000 itemsets to the coordinator where all the large 000 itemsets are gathered 4 Check the terminal condition If the large 000 itemsets are empty the algorithm terminates Otherwise the coordinator broadcasts large 000 itemsets to all the processing nodes and the algorithm enters the next iteration 4.2 Performance evaluation of HPA algorithm The HPA program explained above is implemented on our PC cluster Each node of the cluster has a transaction data file on its own hard disk Transaction data is produced using data generation program developed by Agrawal designating some parameters such as the number of transaction the number of different items and so on The produced data is divided by the number of nodes and copied to each node\220s hard disk The parameters used in the evaluation is as follows The number of transaction is 5,000,000 the number of different items is 5000 and minimum support is 0.7 The size of the data is about 400MBytes in total The message block size is set to be 16KBytes according to the results of communication characteristics of PC clusters discussed in previous section The disk I/O block size is 64KBytes which seems to be most suitable value for the system Note that the number of candidate itemset in pass 2 s substantially larger than for the other passes which relatively frequently occurs in association rules mining Therefore we have been careful to parallelize the program effectively especially in pass 2 so that unnecessary itemsets to count should not be generated 14 Proceedings of the ACM/IEEE SC97 Conference \(SC\22297 0-89791-985-8/97 $ 17.00 \251 1997 IEEE 


The execution time of the HPA program pass 2 is shown in figure 13 as the number of PCs is changed The maximum number of PCs used in this evaluation is 100 Reasonably good speedup is achieved in this application as the number of PCs is increased 5 Conclusion In this paper we presented performance evaluation of parallel database processing on an ATM connected 100 node PC cluster system The latest PCs enabled us to obtain over 110Mbps throughput in point-to-point communication on a 155Mbps ATM network even with the so-called 217\217heavy\220\220 TCP/IP This greatly helped in developing the system in a short period since we were absorbed in fixing many other problems Massively parallel computers now tend to be used in business applications as well as the conventional scientific computation Two major business applications decision support query processing and data mining were picked up and executed on the PC cluster The query processing environment was built using the results of our previous research the super database computer SDC project Performace evaluation results with a query of the standard TPC-D benchmark showed that our system achieved superior performance especially when transposed file organization was employed As for data mining we developed a parallel algorithm for mining association rules and implemented it on the PC cluster By utilizing aggregate memory of the system efficiently the system showed good speedup characteristics as the number of nodes increased The good price/performance ratio makes PC clusters very attractive and promising for parallel database processing applications All these facts support the effectiveness of the commodity PC based massively parallel database servers Acknowledgment This project is supported by NEDO New Energy and Industrial Technology Development Organization in Japan Hitachi Ltd technically helped us extensively for ATM related issues References  R Agrawal T Imielinski and A Swami Mining association rules between sets of items in large databases In Proceedings of ACM SIGMOD International Conference on Management of Data  pages 207--216 1993  R Agrawal and R Srikant Fast algorithms for mining association rules In Proceedings of International Conference on Very Large Data Bases  1994  A C Arpaci-Dusseau R H Arpaci-Dusseau D E Culler J M Hellerstein and D A Patterson High-performance sorting on Networks of Workstations In Proceedings of International Conference on Management of Data  pages 243--254 1997  D.S Batory On searching transposed files ACM TODS  4\(4 1979  P.A Boncz W Quak and M.L Kersten Monet and its geographical extensions A novel approach to high performance GIS processing In Proceedings of International Conference on Extending Database Technology  pages 147--166 1996 15 Proceedings of the ACM/IEEE SC97 Conference \(SC\22297 0-89791-985-8/97 $ 17.00 \251 1997 IEEE 


 R Carter and J Laroco Commodity clusters Performance comparison between PC\220s and workstations In Proceedings of IEEE International Symposium on High Performance Distributed Computing  pages 292--304 1995  D.J DeWitt and J Gray Parallel database systems  The future of high performance database systems Communications of the ACM  35\(6 1992  J Gray editor The Benchmark Handbook for Database and Transaction Processing Systems  Morgan Kaufmann Publishers 2nd edition 1993  J Heinanen Multiprotocol encapsulation over ATM adaptation layer 5 Technical Report RFC1483 1993  M Kitsuregawa M Nakano and M Takagi Query execution for large relations on Functional Disk System In Proceedings of International Conference on Data Engineering  5th pages 159--167 IEEE 1989  M Kitsuregawa and Y Ogawa Bucket Spreading Parallel Hash:A new parallel hash join method with robustness for data skew in Super Database Computer SDC In Proceedings of International Conference on Very Large Data Bases  16th pages 210--221 1990  M Laubach Classical IP and ARP over ATM Technical Report RFC1577 1994  D.A Schneider and D.J DeWitt Tradeoffs in processing complex join queries via hashing in multiprocessor database machines In Proceedings of International Conference on Very Large Data Bases  16th pages 469--480 1990  T Shintani and M Kitsuregawa Hash based parallel algorithms for mining association rules In Proceedings of IEEE International Conference on Parallel and Distributed Information Systems  pages 19--30 1996  T Sterling D Saverese D.J Becker B Fryxell and K Olson Communication overhead for space science applications on the Beowulf parallel workstaion In Proceedings of International Symposium on High Performance Distributed Computing  pages 23--30 1995  T Tamura M Nakamura M Kitsuregawa and Y Ogawa Implementation and performance evaluation of the parallel relational database server SDC-II In Proceedings of International Conference on Parallel Processing  25th pages I--212--I--221 1996  TPC TPC Benchmark 000\001 D Decision Support Standard Specification Revision 1.1 Transaction Processing Performance Council 1995 16 Proceedings of the ACM/IEEE SC97 Conference \(SC\22297 0-89791-985-8/97 $ 17.00 \251 1997 IEEE 


In accordance with 1910.97 and 1910.209 warning signs are required in microwave areas For work involving power line carrier systems this work is to be conducted according to requirements for work on energized lines Comments s APPA objects to the absolute requirement implied by the word ensure regarding exposure to microwave radiation and recommends revision of s l iii to read when an employee works in an area where electromagnetic radiation levels could exceed the levels specified in the radiation protection guide the employer shall institute measures designed to protect employees from accidental exposure to radiation levels greater than those permitted by that guide  I1 an employee must be stationed at the remote end of the rodding operation Before moving an energized cable it must be inspected for defects which might lead to a fault To prevent accidents from working on the wrong cable would require identification of the correct cable when multiple cables are present Would prohibit an employee from working in a manhole with an energized cable with a defect that could lead to a fault However if the cable cannot be deenergized while another cable is out employees may enter the manhole but must protect against failure by some means for example using a ballistics blanket wrapped around cable Requires bonding around opening in metal sheath while working on cable Underaround EIectrical Installations t Comments t This paragraph addresses safety for underground vaults and manholes The following requirements are contained in this section Ladders must be used in manholes and vaults greater than four feet deep and climbing on cables and hangers in these vaults is prohibited Equipment used to lower materials and tools in manholes must be capable of supporting the weight and should be checked for defects before use An employee in a manhole must have an attendant in the immediate vicinity with facilities greater than 250 volts energized An employee working alone is permitted to enter briefly for inspection housekeeping taking readings or similar assuming work could be done safely Duct rods must be inserted in the direction presenting the least hazard to employees and APPA recommends that OSHA rewrite section 7\regarding working with defective cables This rewrite would include the words shall be given a thorough inspection and a determination made as to whether they represent a hazard to personnel or representative of an impending fault As in Subsection \(e EEI proposes the addition of wording to cover training of employees in emergency rescue procedures and for providing and maintaining rescue equipment Substations U This paragraph covers work performed in substations and contains the following requirements Requires that enough space be provided around electrical equipment to allow ready and safe access for operation and maintenance of equipment OSHA's position A2-16 


is that this requirement is sufficiently performance oriented to meet the requirements for old installations according to the 1987 NEW Requires draw-out circuit breakers to be inserted and removed while in the open position and that if the design permits the control circuits be rendered inoperative while breakers are being inserted and removed stated in the Rules and requests that existing installations not be required to be modified to meet NESC APPA recommends that Section u 4 i which includes requirements for enclosing electric conductors and equipment to minimize unauthorized access to such equipment be modified to refer to only those areas which are accessible to the public Requires conductive fences around substations to be grounded Power Generation v Addresses guarding of energized parts  Fences screens, partitions or walls This section provides additional requirements and related work practices for power generating plants  Entrances locked or attended Special Conditions w  Warning signs posted  Live parts greater than 150 volts to be guarded or isolated by location or be insulated  Enclosures are to be according to the 1987 NESC Sections llOA and 124A1 and in 1993 NESC  Requires guarding of live parts except during an operation and maintenance function when guards are removed barriers must be installed to prevent employees in the area from contacting exposed live parts Requires employees who do not work regularly at the substation to report their presence Requires information to be communicated to employees during job briefings in accordance with Section \(c of the Rules Comments U APPA and EEI provide comments as follows Both believe that some older substations \(and power plants would not meet NESC as This paragraph proposes special conditions that are encountered during electric power generation, transmission and distribution work including the following Capacitors  Requires individual units in a rack to be short circuited and the rack grounded  Require lines with capacitors connected to be short circuited before being considered deenergized Current transformer secondaries may not be opened while energized and must be bridged if the CT circuit is opened Series street lighting circuits with open circuit voltages greater than 600 volts must be worked in accordance with Section q\or t and the series loop may be opened only after the source transformer is deenergized and isolated or after the loop is bridged to avoid open circuit condition Sufficient artificial light must be provided where insufficient naturals illumination is present to enable employee to work safely A2-17 


US Coast Guard approved personal floatation devices must be supplied and inspected where employees are engaged in work where there is danger of drowning Required employee protection in public work areas to include the following  Warning signs or flags and other traffic control devices  Barricades for additional protection to employees  Barricades around excavated areas  Warning lights at night prominently displayed Lines or equipment which may be sub to backfeed from cogeneration or other sources are to be worked as energized in accordance with the applicable paragraphs of the Rules Comments w APPA submits the following comments regarding this Special Conditions section Recommends that the wording regarding capacitors be modified to include a waiting period for five minutes prior to short circuiting and grounding in accordance with industry standards for discharging of capacitors For series street light circuits, recommends that language be added for bridging to either install a bypass conductor or by placement of grounds so that work occurs between the grounds Recommends modification of the section regarding personal floatation devices to not apply to work sites near fountains decorative ponds swimming pools or other bodies of water on residential and commercial property Definitions x This section of the proposed Rules includes definitions of terms Definitions particularly pertinent to understanding the proposal and which have not previously been included are listed as follows Authorized Employee  an employee to whom the authority and responsibility to perform a specific assignment has been given by the employer who can demonstrate by experience or training the ability to recognize potentially hazardous energy and its potential impact on the work place conditions and who has the knowledge to implement adequate methods and means for the control and isolation of such energy CZearance for Work  Authorization to perform specified work or permission to enter a restricted area Clearance from Hazard  Separation from energized lines or equipment Comments x The following summarizes the changes in some of the definitions which APPA recommends Add to the definition for authorized employee It the authorized employee may be an employee assigned to perform the work or assigned to provide the energy control and isolation function  Recommends that OSHA modify the definition for a line clearance tree trimmer to add the word qualified resulting in the complete designation as a qualified line clearance tree trimmer Recommends that OSHA modify the definition of qualified employee" to remove the word construction from the definition since it is felt that knowledge of construction procedures is beyond the scope of the proposed rule resulting in APPA's new A2-18 I 


wording as follows more knowledgeable in operation and hazards associated with electric power generation transmission and/or distribution equipment Recommends that OSHA add a definition for the word practicable and replace the word feasible with practicable wherever it appears in the proposed regulations and that practicable be further defined as capable of being accomplished by reasonably available and economic means OTHER ISSUES Clothing OSHA requested comments on the advisability of adopting requirements regarding the clothing worn by electric utility industry employees EEI has presented comments which indicates research is underway prior to establishing a standard for clothing to be worn by electric utility employees However EEI's position is that this standard has not developed to the extent that it could be included in the OSHA Rules Both APPA and EEI state that they would support a requirement that employers train employees regarding the proper type of clothing to wear to minimize hazards when working in the vicinity of exposed energized facilities Grandfathering Due to the anticipated cost impact on the utility industry of the proposed Rules requiring that existing installations be brought to the requirements of the proposed Rules both APPA and EEI propose that the final Rules include an omnibus grandfather provision This provision would exempt those selected types of facilities from modification to meet the new rules EEI states that if the grandfathering concept is incorporated that electric utility employees will not be deprived of proper protection They propose that employers be required to provide employees with a level of protection equivalent to that which the standard would require in those instances in which the utility does not choose to modify existing facilities to comply with the final standard Rubber Sleeves OSHA requests comments from the industry on whether it would be advisable to require rubber insulating sleeves when gloves are used on lines or equipment energized at more than a given voltage EEI states its position that utilities should continue to have the option of choosing rubber gloves or gloves and sleeves to protect employees when it is necessary to work closer to energized lines than the distances specified in the clearance tables Preemuting State Laws EEI requests that the final Rules be clear in their preempting state rules applicable to the operation and maintenance work rules for electric power systems. This is especially critical since some states now have existing laws which are more stringent than the proposed OSHA Rules Examples are 1 in California and Pennsylvania where electric utility linemen are prohibited from using rubber gloves to work on lines and equipment energized at more than certain voltages and 2 in California and Connecticut where the live line bare hand method of working on high voltage transmission systems is prohibited One utility Pacific Gas  Electric has obtained a variance from the California OSHA to perform live line bare-hand transmission maintenance work on an experimental basis Coiiflicts Between the Rilles and Part 1926 Subpart V Since many of the work procedures in construction work and operation and maintenance work are similar and difficult to distinguish between EEI requests that the final order be clear in establishing which rule has jurisdiction over such similar work areas A2-19 v 


IMPACTS ON COSTS AND ASSOCIATED BENEFITS In its introduction to the proposed rules OSHA has provided an estimate of the annual cost impact on the electric utility industry for the proposed des of approximately 20.7 million OSHA estimates that compliance with this proposed standard would annually prevent between 24 and 28 fatalities and 2,175 injuries per year The utilities which have responded to this proposed standard through their respective associations have questioned the claims both of the magnitude of the cost involved and the benefit to the industry in preventing fatalities and lost-time injuries Both EEI and APPA feel that the annual cost which OSHA estimates are significantly lower than would be realized in practice Factors which APPA and EEI feel were not properly addressed include the following OSHA has not accurately accounted for cost of potential retroactive impacts including retrofitting and modifying existing installations and equipment OSHA has not consistently implemented performance based provisions in proposed rules  many portions require specific approaches which would require utilities to replace procedures already in place with new procedures Estimates were based on an average size investor-owned utility of 2,800 employees and an average rural cooperative of 56 employees, which are not applicable to many smaller systems such as municipal systems OSHA has not adequately addressed the retraining which would be necessary with modifying long-established industry practices to be in accordance with the OSHA rules EEI claims that OSHA's proposed clearance requirements would not allow the use of established maintenance techniques for maintaining high voltage transmission systems and thus would require new techniques For an example of the cost which is estimated to be experienced as a result of the new Rules one of the EEI member companies has estimated that approximately 20,000 transmission towers would need to be modified to accommodate the required step bolts in the Rules at an estimated cost of 6,200,000 Additionally this same company estimates that the annual cost of retesting live line tools for its estimated 1,000 tools would be 265,000 Additionally, both EEI and APPA question the additional benefits which OSHA claims would result from implementation of the new Rules APPA questions the estimates of preventing an additional 24 to 28 fatalities annually and 2,175 injuries per year in that it fails to account for the fact that the industry has already implemented in large part safety measures which are incorporated in the Rules EEI and APPA also point out that many preventable injuries cannot be eliminated despite work rules enforcement and safety awareness campaigns since many such accidents which result in fatalities are due to employee being trained but not following the employer's training and policies PRESENT STATUS OF RULES According to information received from the OSHA office in February 1993 the final Rules are to be published no later than July 1993 and possibly as soon as March 1993 OSHA closed their receipt of comments in March 1991 and no further changes in the rules are thought possible A2-20 


CONCLUSION The OSHA 1910.269 which proposes to cover electric utility operation and maintenance work rules affects a multitude of working procedures as are summarized in this paper It is not possible at the present time to assess the final structure of the Rules as may be proposed in 1993 or subsequent years Since the comments from the utility associations APPA and EEI were made following the initial release of the proposed OSHA Rules in 1989 a significant amount of time has elapsed where other events have occurred which may affect the form of the final Rules The 1993 NESC went into effect in August 1992 and includes some of the requirements to which the commenters objected For example a significant requirement in the Part 4 of the 1993 NESC requires that rubber gloves be utilized on exposed energized parts of facilities operating at 50 to 300 volts This requirement is in conflict with EEl\222s proposed change to the OSHA Rules which would still allow working such secondary facilities without the use of rubber gloves Electric utilities are advised to review the January 31 1989 proposed operation and maintenance Rules as summarized in this paper and to review their procedures which would be affected by application of the Rules Many of the procedures proposed in the Rules provide valuable guidance in electric utilities\222 operation and maintenance activities Where the cost impact is not significant, it is recommended that utilities consider implementing such procedures in expectation of the Rules being published in the next few months Also it would be appropriate for electric utilities to review the 1993 edition of the NESC since there are portions of the Rules which have resulted in changes in the NESC These changes mainly occur in Part 4 Rules for the Operation of Electric Supply and Communications Lines and Equipment The concerns which the commenters have addressed regarding the cost impact and the resulting benefits experienced as a result of the promulgation of the Rules are real ones and must be addressed in the final Rules As a result this paper cannot present a conclusion regarding the full impact of the Rules The development of such Rules continue to be an ongoing matter and will undoubtedly require later analysis when the final rules are published A2-21 


