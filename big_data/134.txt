   Abstract 227Frequent Set Mining \(FSM\, an important phase of Association Rule Mining, is the process of generating frequent sets that satisfy a specified minimum support threshold. This paper explores FSM in temporal data domain or FTP mining and proposes an efficient algorithm for the same. Existing algorithms for FTP mining are based on Apriori\222s level wise principle. In conventional or transactional data domain, Apriori has been proven to suffer from the repeated scans limitation and has been succeeded by several algorithms that overcome the setback. The proposed algorithm eliminates Apriori\222s repeated scans limitation in temporal domain, requiring only two overall scans of the original input. Experimental results demonstrate the significant improvements in execution time of the proposed algorithm as opposed to the Apriori based one  Index Terms 227Apriori principle, Association mining Frequent set mining, High level knowledge, Knowledge engineering, Multimedia data mining, Sequences, Temporal support, Tree data structures I.  I NTRODUCTION  ata Mining is the non-trivial process of extraction of previously unknown and potentially useful information from huge databases [12   T h e  a d ve n t a n d gr ow t h of i n t e r n e t  has resulted in an enormous increase in the amount of multimedia data such as images, video, text etc. available these days.  There is an imminent need to discover useful information from them. The process of discovering high level knowledge and information from multimedia data is referred to as Multimedia Data Mining \(MDM\ [1   2    3   I t d if f er s  from conventional data mining in the presence of data specific properties such as temporal for audio/video data and spatial for static images. Conventional data mining algorithms do not incorporate data specific properties in the mining process and mined knowledge and hence are not suited for multimedia data. MDM primarily concentrates on adapting existing or evolving new algorithms to mine information from multimedia data  Association Rule Mining \(ARM\, Data Classification and Clustering, a few of the existing data mining techniques find    This work was supported in part by the All India Council for Technical Education, AICTE, under Grant 1-10/NDF\(PG\/NIT\(TRICHY\/2003-2004 N.P. Gopalan is with the Department of Computer Applications, National Institute of Technology Tiruchirapalli, Tamil Nadu INDIA 620 015. \(e-mail gopalan@nitt.edu B. SivaSelvan is with the Department of Computer Science Engineering, National Institute of Technology Tiruchirappali, Tamil Nadu INDIA 620 015. \(e-mail: siva.selvan@gmail.com  1-4244-0370-7/06/$20.00 \2512006 IEEE immediate application in the domain of multimedia data Classification and Clustering are used for class determination or grouping of video/image inputs [1   2    3    4    5   A R M  could be employed to establish relationships among the constituents of the multim edia i  4 6  7  8  9    R e f e r e n c e 2] di s c us s e s  v a r i o us kn o w l e dge t y pe s t ha t  can be mined from video data. The generated associations can be employed to perform video classification and hence determine the nature of the movie; such as being romantic tragedy, comedy, etc. Amongst the above mentioned techniques, Video Association Mining \(VAM\ is a relatively new and emerging research trend  FTP mining, a key step of VAM is the research focus of this paper. The proposed algorithm eliminates the repeated scans limitation of Apriori based FTP mining algorithm [6   7    1 0   and requires only two overall original input scans. Frequent and Infrequent single patterns are identified by the first scan Various possible patterns\222 temporal count is generated by the second scan, which updates the m-ary tree constructed at the end of first scan.  A simple tree traversal subject to the minimum support threshold generates the complete frequent temporal patterns  The paper is organized as follows: Section 2 discusses association rules and frequent set mining in transactional domain. FSM in temporal domain, our research objective is discussed in Section 3. Section 4 presents the proposed m-ary tree based algorithm and establishes the significant reduction in number of repeated scans. Performance analysis of the proposed algorithm in comparison to Apriori is carried out in Section 5. Section 6 summarizes our research work and concludes with future research directions II.  F REQUENT S ET M INING FSM ARM is the process of identifying frequently related items in a transactional database. It is employed in market basket analysis to forecast sales, evolve efficient shelf space and other management strategies [11  1 2  A n A s s o c i atio n R u le  is an expression of the form X Y, where X & Y are itemsets. An item-set is basically a collection of items. The above rule is interpreted as the presence of items in X implying the presence of items in Y. Support and Confidence are two statistical parameters that govern ARM [12  Two phases of ARM are \(i\requent item-set or set mining and \(ii\ Rules Generation. The latter is a relatively less complex and straightforward phase compared to FSM Research over the years has primarily focused on this phase An m-ary tree based F requent T emporal P attern FTP\ mining algorithm N.P. Gopalan  and B. SivaSelvan  D 


 resulting in efficient algorithms for FSM. Algorithms differ in their methodology, data structures employed and number of input scans required. Reference r o v i de s a de t a i l e d survey of algorithms for FSM. Apriori, the first algorithm for FSM is based on a level wise principle and candidate set generation logic [11 I t i s ba s e d on t h e  a n t i m on ot on i c  property of set theory, which states that \223Every subset of a frequent set is also frequent\224 Apriori first constructs frequent 1 item-sets or L 1 subjecting candidate set C 1 to the minimum support threshold. Higher level candidate sets C i are constructed from previous level frequent sets L i-1 Frequent sets at a particular level are generated by subjecting the corresponding level candidate set to the support factor. This process is iterated till no further new candidate sets can be generated. The level wise principle results in repeated input scans overhead and hence is a time consuming strategy. Algorithms that have evolved for FSM primarily overcome this setback of Apriori.   Frequent Pattern FP\ growth adopts a pattern growth approach to FSM process and requires only two overall original input scans T h e  first scan identifies frequent 1 item-sets and the second scan grows a FP tree whose nodes represent items and arcs denote reordered transactions. FP and other algorithms for FSM are not suited to FTP mining as they result in loss of temporal property because of transaction reordering or requirement of several repeated input scans [13 A l go r i t hm s t ha t do no t  incorporate temporal properties violate the basic requirement of MDM. FTP mining discussed in next section is the process of generating frequent patterns subject to temporal property and finds application in VAM to identify frequently occurring events in video data. It is also employed for summarization classification and predictio  7  1 0    III.  FTP  M INING OR FSM  I N T EMPORAL D OMAIN  The process of mining frequent patterns in temporal domain, FTP mining is a crucial phase of VAM, which is the process of discovering associations in a given video. In the context of video data, one can establish associations between the various objects in a frame that are representative of a scene. Associations can also be established at higher levels of abstraction such as relationships between director, movie type movie plot, etc. A real time application of the generated associations would be to predict futuristic events based on the occurrence of a certain sequence of events frequently References 7 10] di s c us s a l go ri t hm s f o r V A M   treating it as a two phased process involving \(i Transformation and \(ii\ Mining phases. Transformation phase converts the original video data to an alternate transactional data format suitable for mining. Resulting output is a sequence of clusters, a cluster being a collection of video shots. Video shot clustering is done on the basis of intra cluster similarity By the end of this phase, the process of VAM gets reduced to the task of frequent pattern mining. Since video inputs posses temporal properties, the frequent pattern mining process is governed by two data specific parameters namely temporal support and temporal distance threshold, as opposed to support and confidence for FSM in transactional domain   10   12   Temporal Distance \(TD\ is the number of items that appear between any two items in the original input, which can also be viewed as a sequence. Temporal support is the number of times a particular pattern appears in the input sequence subject to the temporal distance factor. As an example, temporal distance of pattern AB in input sequence ADEB is 2 and in the input sequence ABABACABC, the temporal support of pattern ABC for TD is 2 and TD=0 is 1.   An infinite temporal distance threshold covers patterns of all temporal distances Existing algorithms for VAM employ Aprior\222s level wise principle for FTP mining. Though the level wise nature of Apriori offers smooth transition to temporal domain, the number of repeated scans is far greater than its transactional counterpart, as a result of having to generate ordered patterns Temporal domain differentiates pattern AB from BA and hence the number of possible candidate patterns, repeated scans become huge. Table I illustrates Apriori\222s level wise execution for a sample input sequence A B C B C C A C B C C A B C A B A C B C. Temporal support and distance factors used are 4 and Temporal support count of patterns is indicated in parenthesis. The table clearly establishes the repeated scans limitation, which forms the basis of our research work TABLE  I L EVEL W ISE E XECUTION O F A PRIORI A LGORITHM  Input Sequence L 1 C 2 L 2 C 3 L 3  A B C B C C A C B C C A B C A B A C B C A\(5 B\(6 C\(9 AA\(2 AB\(5 AC\(4 BB\(3 BA\(4 BC\(6 CC\(4 CA\(3 CB\(5 AB\(5 AC\(4 BA\(4 BC\(6 CC\(4 CB\(5 ABC\(4 ACB\(4 ACC\(3 BAC\(3 BCA\(3 BCC\(3 CCB\(3 CCC\(3 CBA\(3 CBC\(4  ABC\(4 ACB\(4 CBC\(4  FTP mining can also be treated as Sequence Pattern Mining SPM\. GSP, an Apriori principle based SPM algorithm does not meet our requirement of avoiding the huge repeated scans setback [16  F r eeS p an  P r ef i x S p an an d S P A D E  ar e a f e w o f  the other existing SPM algorithms 1 8 1 9 F r e e S pa n and PrefixSpan adopt a pattern growth strategy similar to FP growth but incorporate ordering aspect in the mining process The database projection logic used in these algorithms reduces the repeated input scans significantly compared to Apriori and also the scans are over a trimmed database as opposed to the original database scans in Apriori   18  S P M  a l go ri t hm s  are not suited to FTP mining, as they require the input to be in the form of transactional records. Transactionalizing the input sequence to a record format results in loss of temporal continuity across records. Thus there is a compelling research requirement of efficient algorithms for mining frequent temporal patterns 


 IV.  P ROPOSED FTP  M INING A LGORITHM B ASED O N m-ary  T REE mFTP  m-FTP employs an m-ary tree in the process of FTP mining. It requires only two overall scans of the original input sequence. The first scan generates frequent single patterns or L 1 filtering out infrequent ones.  A complete m-ary tree, where m is |L 1 is constructed. A tree whose nodes can have a maximum of m children is referred to as an m-ary tree. An mary tree where all nodes have necessarily m descendants is called a complete m-ary tree The root of the m-ary tree is e \(empty node\ and the complete m-ary tree is grown from e. Tree paths or arcs at a particular level represent the m frequent 1 patterns identified at the end of the first scan. Patterns of all lengths are represented by possible paths from the root to the various nodes in the tree. To supplement the counting strategy, two additional parameters namely count and traversed are maintained for every tree path. Count denotes the temporal count of the respective pattern/path in the original input sequence while traversed is a flag variable to reflect path traversals. Once it is enabled, it remains so throughout the algorithm\222s execution For the first element of the input sequence, the m-ary tree is traversed from its root and the respective path bearing the same label as that of the element encountered is traversed Associated count parameter is incremented and traversed parameter is enabled. For the remaining sequence elements the algorithm in addition to traversing the path from the root that bears the same label as that of the input element, also traverses other paths whose traversed parameter is enabled Path counts at a particular level are incremented subject to updates in their immediate pr eceding level. Count of B in the path AB is incremented to 2 only when A\222s count has been incremented to 2. Count of a path or pattern in the tree is the count of the last encountered symbol in the path. Count of pattern ACB is the count of symbol B in the path ACB Repetitive patterns such as BB are handled in a case specific manner. A pattern BB\222s count will be incremented to 2 only when B\222s count has reached 4, implying that for the pattern BB to occur twice in an input sequence, B should appear 4 times. The repetitive case specific increment depends on tree depth. For repetitive patterns of length 2 such as BB the root path count should be twice the child or leaf path count for an increment to occur. For patterns of length or at depth 3 root path count should be thrice the leaf path count for an increment to occur. Once the tree has been updated for all input sequence elements, frequent patterns are generated by retaining those paths whose counts satisfy the temporal support threshold. A detailed description of the algorithm is given in Fig. 1 and an illustration for the sample input sequence considered in Section III is shown in Fig. 2 V  E XPERIMENTAL R ESULTS   D ISCUSSIONS  This section deals with performance analysis of the proposed algorithm in comparison to Apriori based FTP mining algorithm. All experiments have been conducted on a 256 MB RAM machine supporting LINUX 9. Algorithms are 1  The original input sequence is scanned once to identify frequent patterns of length 1 or L 1 L 1 is generated by subjecting the candidate patterns of length 1 to the minimum support threshold condition. Let |L 1 be m 2  A complete m-ary tree of height m with root as e is constructed 3  The m descendant paths of all nodes in the tree at a particular level are labeled with different possible symbols in L 1 Every path in the tree maintains two parameters namely count and traversed that are updated during the algorithm\222s execution 4  For the first input sequence element, the respective path from e that bears the same label as the element is traversed, its count is incremented and traversed parameter is enabled 5  For ever other input sequence element a  The respective path from e with the same label as the considered element is traversed, suitably updating the count and traversed parameters b  Also other paths in the tree whose traversed parameters have already been enabled are traversed. Count parameter is suitably incremented and traversed parameter is enabled, if they are not already enabled for paths whose labels match with the input element encountered With respect to repetitive patterns, counts at the leaf path level are incremented only when corresponding count at root path level has been incremented as a multiple of the tree depth 6  To generate frequent patterns, the m-ary tree at the end of Step 5 is traversed retaining those paths that satisfy the minimum support threshold specified  Fig. 1.  Proposed m-ary FTP mining \(m-FTP\ Algorithm  Fig. 2.  Proposed m-ary FTP mining \(m-FTP\ Algorithm\222s Final State  analysed for effect of sequence length and support factor on 


 execution time. Fig. 3 establishes the performance improvement of the proposed algorithm as a result of the reduced number of input scans. A similar qualitative growth pattern is observed for varied input sequences. The overall average improvement in performance of the proposed algorithm relative to Apriori based one is 73  The proposed algorithm is independent of the support factor as opposed to the level wise support dependent logic of Apriori. Execution time of Apriori is inversely proportional to support threshold and hence execution times at lowered support values are high compared to higher support values This is because of the level wise principle of Apriori, wherein as a result of the lowered support values, more patterns become frequent at a particular level. Candidate & subsequent   0 15 30 45 60 75 90 105 120 135 150 165 0 50 100 150 200 250 300 350 400 450 500 Sequence Length \(1:100 Time \(in seconds Apriori Proposed  Fig. 3.  Effect of Sequence Length on Execution Time   0 20 40 60 80 100 120 140 160 180 10 15 20 25 30 35 40 45 50 Support Time \(in seconds Apriori Proposed  Fig. 4.  Effect of Support on Execution Time   frequent pattern generation in the subsequent levels become more time consuming as a result of increase in the number of frequent patterns in the preceding level. Fig. 4 demonstrates the effect of support factor on execution time and clearly establishes the support independent nature of the proposed algorithm. m-FTP shows only slight variations in execution times due to run time resource allocation constraints, whereas apriori based algorithm exhibits considerable variations due to changing support factors. Varied input sequences establish a similar qualitative behaviour The proposed algorithm requires the support factor only during the initial scan that decides on frequent and infrequent single length patterns and finally to generate all possible frequent patterns. Apriori, on the other hand requires the support factor at each level to construct frequent patterns from candidate patterns. This support biased logic results in significant variations in ex ecution times at varied support factors. Execution time variations with Apriori are more as a result of the increased or decreased number of candidate and frequent patterns at varying support thresholds. The proposed algorithm is support independent and can be uniformly applied over all situations as opposed to Apriori\222s support dependent logic that makes it more favourable to less number of frequent patterns situations   VI.  C ONCLUSION  An efficient algorithm for frequent temporal pattern mining is proposed in this paper. FTP mining, one of the key phases of video association mining requires efficient algorithms since the existing versions are based on Apriori\222s level wise principle. The proposed work eliminates the repeated scans limitation of Apriori and requires only two scans of the original input. The algorithm could be employed in other domains as well where data are characterised by temporal properties. Further research will concentrate on reducing the overhead incurred as a result of the tree updating strategies  VII.  R EFERENCES  1  O. R.  Zaiane, J. Han, Z. Li and J. Chiang, "Multimedia Miner \226 A System Prototype," in Proc. 1998 ACM SIGMOD Intl. Conf. on Management of Data pp. 581-583 2  D. Wijesekara and D. Barbara, "Mining Cinematic Knowledge \226 Work in Progress," in Proc. 2000 Intl. Workshop on MDM-KDD pp. 98-103 3  O. R. Zaiane, Z. Li, J. Han and J. Hou, "Mining Multimedia Data," in Proc. 1998 CASCON: Meeting of Minds Conf pp. 83-96 4  O. R. Zaiane, M. L. Antonie and A. Coman, "Mammography Classification by an Association Rule based Classifier," in Proc. 2002 Intl. Workshop on MDM in conjunction with 8 th ACM SIGKDD pp. 6269 5  O. R. Zaiane, "Resource and Knowledge Discovery from the Internet Multimedia Repositories," Ph.D. dissertation, School of Computing Science, Simon Fraser Univ., 1999 6  X. Zhu and X. Wu, "Mining Video Associations for Efficient Database Management," in Proc. 2003 18 th IJCAI Conf pp. 1422-1432 7  X. Zhu and X. Wu, "Sequential Association Mining for Video Summarization," in Proc. 2003 ICME Conf pp. 333-336 8  J. Tesic, S. Newsam and B. S. Manujanth, "Mining Image Datasets using Perceptual Association Rules," in Proc. 2003 SIAM Intl. Conf. On Data Mining and Workshop on Mining Scientific and Engineering Datasets Conf pp. 71-77 9  O. R. Zaiane, J. Han and H. Zhu, "Mining Recurrent Items in Multimedia with Progressive Resolution Refinement," in Proc. 2000 ICDE Conf pp. 461-470 10  X. Zhu, X. Wu, A. K. Elmagramid, Z. Feng and L. Wu, "Video Data Mining: Semantic Indexing and Event Detection from the Association Perspective IEEE Trans. Knowledge and Data Engineering 17\(5\, pp 665-667, May 2005 11  R. Agrawal and R. Srikant, "Fast Algorithms for Mining Association Rules," in Proc. 1994 20 th Intl. Conf. on Very Large Databases \(VLDB  pp. 487-499 12  J. Han and M.Kamber, "Data Mining: Concepts and Techniques Morgan Kauffmann, 2000, ch. 6-8 13  B. Goethals, "Survey on Frequent Pattern Mining," Helsinki Institute for Information Technology, Tech. Rep., 2003 14  J. Han, J. Pei and Y. Yin, "Mining Frequent Patterns without Candidate Generation," in Proc. 2000 ACM SIGMOD Intl. Conf. on Management of Data pp. 1-12 


   S. Brin, J. Ullmann, R. Motwani and S. Tsur, "Dynamic Itemset Counting " in Proc. 1997 ACM SIGMOD Intl. Conf. on Management of Data pp. 255-264   R. Agrawal and R. Srikant, "Mining Sequential Patterns \226 Generalizations and Performance Improvements," in Proc. 1996 5 th Intl Conf. on Extended Database Technology \(EDBT pp. 3-17   J. Han and J. Pei, "Freespan: Frequent Pattern Projected Sequential Pattern Mining," in Proc. 2000 ACM SIGKDD Intl. Conf. On Knowledge Discovery in Databases pp. 355-359   J. Pei, J. Han, B. Mortazavi-Asl, J. Wang, H. Pinto, Q. Chen, U. Dayal and M. Hsu, "Mining Sequential Patterns by Pattern-Growth: The PrefixSpan Approach IEEE Trans. Knowledge and Data Engineering  16\(11\, pp. 1424-1440, Nov. 2004   M. Zaki, "SPADE: An Efficient Algorithm for Mining Frequent Sequences Machine Learning 42\(1/2\, pp. 31-60, 2001  VIII.  B IOGRAPHIES  N.P. Gopalan received the M.Sc. from Madras University in 1978 and the Ph.D in applied mathematics from Indian Institute of Science Bangalore, in 1983. Currently he is a Professor with the Department of Computer Applications in the National Institute of Technology Tiruchirapalli Tamil Nadu, India His research interests include algorithms combinatorics, data mining, and distributed parallel and grid computing    B. SivaSelvan received  his Masters degree from Indian Institute of Technology Madras, India in 2001. He has taught programming, data structures and algorithms, database and artificial intelligence courses at Sri Venkateswara College of Engineering, Chennai, India. He is a recipient of the National Doctoral Fellowship \(NDF\ and Early Faculty Induction Programme \(EFIP\ fellowship awarded by AICTE His areas of interest include databases, data mining, object oriented programming and artificial intelligence                                      


that our algorithm is complete in terms of producing all confident minimal rules. We omit the proof due to space limitations Figure 2. The formal algorithm 4.2 Ensuring rule minimality Suppose we have a set of items {1, 2, 3  11} with 11 being the fixed consequent. Suppose further that we are currently working with node 1 and that to the right of 1 we have two un-terminated nodes, 9 and 8,9. Both nodes will be considered with 1 because node 8,9 falls under node 8 in the tree and is thus independent of the result of the join of 1 and 9. A possible scenario would b e  f o r  b o t h  r u l e s   1  9  1 1  a n d  1  8  9  1 1   t o  s u c c e e d  thus we end up generating a non-minimal rule 1  8  9  1 1  i n  t h i s  c a s e    Another scenario we need to consider is when rule 9  1 1  h a s  s u p p o r t  0  o r  1   t h e n  t h e r e  i s  n o  n e e d  t o  t r y  r u l e  1  8  9  1 1  b e c a u s e  i t s  s u p p o r t  i s  a l s o  g o i n g  t o  b e  0  Input: an ordered list of items, minconf, and the consequent item set Output: set of minimal rules satisfying minconf Algorithm   C r e a t e  t h e  r o o t  n o d e   t h e  e m p t y  s e t     F o r  e v e r y  i t e m   I   i n  o u r  o r d e r e d  l i s t  o f  i t e m s   d o  the following o Generate a new node, n o Insert n under the root from right to left o Label n with I o Depending on the resulting confidence and s u p p o r t  o f   I  C    p r o c e e d  w i t h  o n e  o f  t h e  following   I f  s u p p o r t  o f   I  C   i s  l e s s  t h a n  2  t h e n  terminate n   I f  c o n f i d e n c e  o f   I  C   i s  g r e a t e r  o r  e q u a l  to minconf then terminate n and output I  C   a s  a  r u l e    I f  c o n f i d e n c e  o f   I  C   i s  i n  t h e  r a n g e   0   minconf terminated node, Unter-n, to the right n working from highest level in the tree down, and at each level processing nodes right to left   G e n e r a t e  a  n e w  n o d e   n n     I n s e r t  n n  u n d e r  n  f r o m  r i g h t  t o  l e f t      L a b e l  n n  w i t h  t h e  l a b e l  o f  U n t e r n   Note that the item set represented by nn is the union of the items in n and Untern   R e c u r s i v e l y  r e p e a t  t h e  c o n f i d e n c e  testing process for nn Proceedings of the 16th IEEE International Conference on Tools with Artificial Intelligence  ICTAI 2004 1082-3409/04 $20.00  2004 IEEE or 1. In this scenario, our algorithm will not produce undesired rules but will test for rules whose outcome is known beforehand which undesirable because this involves the time-consuming process of scanning a large database to compute the support and confidence of the rule  in cases where a non-vertical database layout is adopted To rectify this problem, we associate a temporary taboo list \(TL the nodes that are pruned under I. For example, if 1  9  1 1  i s  n o t  a  c o n f i d e n t  r u l e  o r  i t s  s u p p o r t  i s  l e s s  than 2, then we append 9 to 1  s taboo list \(TL1 for short r u l e  u n d e r  n o d e  1   1  X  1 1   w e  c h e c k  i f  a n y  s u b s e t  o f  X is in TL1. If so, we directly terminate X under 1 and add X to TL1. This may seem unfeasible at first however, an efficient implementation has been devised 


as we shall discuss in more details in section 5.2 5. Implementation &amp; performance analysis 5.1.  The P-tree technology2 Our implementation for this work is based on an efficient data structure, the P-tree \(Predicate or Peano tree relational data in a loss-less compressed column-wise format by splitting each attribute into bits, grouping bits at each bit position, and representing each bit group by a P-tree. To create P-trees from transactional binary data, we store all bit values in each binary attribute for all the transactions separately. In other words, we group all bits, for all transactions t in the table, in each binary attribute, separately. Each such group of bits is called a bit group. Figure 3 shows the process of creating P-trees from a binary relational table. Part b groups, one for each attribute in a show the resulting P-trees, P1 and P2, one for each of the bit groups in b recursively partitioning the bit groups into halves Each P-tree will record the total number of 1s in the corresponding bit group on the root level. The second level in the tree gives the number of 1s in each of the halves of the bit group. The first node from the left on the second level will give the number of 1s in the first half of the bit group; similarly, the second node will give the number of 1s in the second half of the bit group. This logic is continued throughout the tree with each node recording the number of 1s in either the first or the second half \(depending on whether it is the left or right node 2 Patents are pending for the P-tree technology parent node. In practice, we do not directly store the number of 1s, but a 1 if the node contains only 1s and a 0 otherwise. Nodes containing only 1s or only 0s are considered pure \(otherwise they are mixed partitioned further  called pure-1 and pure-0 respectively. This aspect is referred to as P-tree compression [10] [16] and is one of the most important characteristics of the P-tree technology. Note that we can easily differentiate between pure-0 nodes and mixed nodes by the fact that pure-0 nodes have no children \(i.e. they are leaf nodes P1-trees corresponding to the P-trees in Figure 3 P1-trees are manipulated using operations such as AND, OR, NOT and ROOTCOUNT \(the count of the number of  1  s in the bit group represented by the tree in order to query the underlying data. The reader is referred to [10] [16] for more details on P-trees and their logical operators   Figure 3. Construction of basic P-trees Figure 4. Pure-1 Trees Note that by using P-trees, we can compute the confidence of rules in a quick and efficient manner without any database scans represented by a P-tree, Pi; to get the support of an item, we issue a ROOTCOUNT operation on the P-tree of that item. To get the support of an item set of size more than one, we AND the P-trees of the items in the a 0 00 0 1 1   0 0 01 0 1 b 


b c 3 30 1 2 1   0 6 24 0 2 d Column1   Column2 0                 1 0                 1 0                 1 0                 1 1                 0 0                 0 1                 1 1                 1 b bit groups 0 0 0 0 1 0 1 1 1 1 1 1 0 0 1 1 a Proceedings of the 16th IEEE International Conference on Tools with Artificial Intelligence  ICTAI 2004 1082-3409/04 $20.00  2004 IEEE item set and then issue a ROOTCOUNT operation on the result 5.2.  Taboo lists For every new item I, we create a new node under the root and test for potential rules with all possible unterminated nodes lying to I  s right. The actual node creation order of the SE tree is the lexicographic subset ordering of the items in the given item list. For example, the node creation order for the set {1,2,3 would be: {1}, {2}, {1,2} ,{3}, {1,3}, {2,3}, {1,2,3 This ensures that every item set has all its subsets before it For every item, I, we maintain a TLI which saves the item sets whose outcomes, when joined with I, are known beforehand and thus need not be tested. In our implementation, each TLI is a P-tree having a size equal to the number of un-terminated nodes to the right of I \(i.e. all nodes that I will be tested with is used for nodes which, when joined with I, result in the firing of some pruning condition; thus, none of their supersets need to be tested with I. The remaining TLI entries will be 0s. For example, for the set of items 1,2,3,4}, suppose that the nodes created so far are 1}, {2}, {1,2} ,{3}, {1,3}, {2,3}, {1,2,3}. For node 4 we initialize a TL4 having 7 entries all containing 0s initially. If the joining of item 4 with node {2} results in firing at least one pruning condition, then the second entry pointing to item set {2} is flagged with 1, and so are all entries containing 2 \(i.e. entries pointing to 1,2}, {2,3} and {1,2,3 


1,2}, {2,3} and {1,2,3 tell which other entries contain item 2? We maintain for each item an index list as a P-tree \(called an index P-tree item exists in. For example, item 1 will have the following index list \(it will be stored as a P-tree but we are just listing the entries in a list for convenience 1,0,1,0,1,0,1. In other words, viewing the nodes of the SE tree in node creation order, item 1 occurs in node positions 1, 3, 5 and 7. Every new node added to the SE tree results in the expansion of all index P-trees by either a 1, if the corresponding item is in the new node added, or a 0, otherwise Going back to the previous scenario where the joining of item 4 with node {2} results in firing at least one pruning condition and thus node {2} need to be added to TL4, we simply OR the index P-tree of item 2 with TL4. In general, if we want to add node {x y  z} to some taboo list, TLI, we AND the index Ptrees for all items in the node \(i.e. AND index P-tree of x with that of y  with that of z us where item set {x, y  z} occurs. We then OR the resulting P-tree index with TLI which results in appending node {x, y  z} to TLI We maintain the taboo lists and index lists as Ptrees as this will give us faster logical operations and compression. In addition, in the case of taboo lists, it could speed the node traversal especially in cases where there many consecutive 1  s. For example suppose the entries in a taboo list are: 1111 0011 Figure 5 below shows the corresponding P-tree of the given taboo list Figure 5. The resulting taboo list in P-tree format In this example, instead of going through the first four nodes sequentially and then skipping them because they are flagged, using a P-tree to represent the taboo list, we can directly skip the first 4 entries because they form a pure-1 node on 2nd level of the Ptree It is worth mentioning that our traversal through the itemset space using taboo lists is very similar to a popular approach used in AI literature and known as Tabu search [13]. The idea in Tabu search is to traverse the space in a more effective manner by avoiding moves that result in revisiting points in the space previously visited whose outcome is known not to be acceptable \(hence the name "tabu   union of I and X produces an infrequent itemset implies that future joins of I with any superset of X will produce an infrequent itemset; a scenario similar in essence to revisiting a point in the search space whose outcome is known to be unsatisfactory and which could be circumvented by putting the point on a Tabu list. Because of the difference in context and problem definition, we refer to our lists as taboo lists instead of Tabu lists 5.3.  Comparison analysis To the best of our knowledge, no previous work has attempted to mine the type of rules we are considering We find [5] to be particularly interesting as it proposes an algorithm called Dense-Miner which is capable of mining association rules with fixed consequents at very low support thresholds. For the lack of a better benchmark, we will compare our approach with DenseMiner; however, we have to emphasize that a number 1                  0 0                    1 0 Proceedings of the 16th IEEE International Conference on Tools with Artificial Intelligence  ICTAI 2004 


ICTAI 2004 1082-3409/04 $20.00  2004 IEEE of fundamental differences exists between the two approaches which we briefly outline next   D e n s e M i n e r  m i n e s  a l l  a s s o c i a t i o n  r u l e s  w h i l e  w e  only mine minimal, confident rules   D e n s e M i n e r  u s e s  s u p p o r t  a s  a  p r u n i n g  m e c h a n i s m  while this is not the case in our work \(In reality we also use support pruning, but in our case, the support threshold is always set to 2  as an absolute threshold In terms of rule overlap between the two approaches, all rules produced by our approach that have a support value greater than the minimum support threshold used for Dense-Miner will be produced by Dense-Miner also Table 2. Data sets description Table 3 Connect-4 Dataset 0 500 1000 1500 2000 2500 3000 3500 20 30 40 50 60 70 80 90 100 Confidence Threshold Ti m e s  P-tree based Dense Miner PUMSB Dataset 0 500 1000 1500 2000 2500 40 50 60 70 80 90 100 Confidence Threshold T im e s  P-tree based Dense Miner Figure 6. Speed comparison All experiments were conducted on a P-II 400 with 128 SDRAM running Red hat Linux 9.1.  C++ was used for coding. We experimented on two real-life dense data sets, Connect-4 and PUMSB, which are available at the UCI data repository. Table 2 below briefly describes the two datasets by listing the number of transactions, items, and items per transaction for each data set Connect-4 Dataset 0 50 100 150 200 250 20 25 30 35 40 45 50 55 60 65 70 75 80 85 90 95 99 99 5 Confidence Threshold 


N um be r of ru le s PUMSB-4 Dataset 0 20000 40000 60000 80000 100000 120000 140000 160000 20 25 30 35 40 45 50 55 60 65 70 75 80 85 90 91 91 5 Confidence Threshold N u m be r of ru le s Figure 7. Number of rules produced Figure 6 shows the time in seconds needed to mines rules at different confidence thresholds by our approach \(P-tree based aforementioned, Dense-Miner mines all rules using support pruning. It uses a variant of support referred to as coverage and defines the minimum coverage threshold as the minimum support divided by support of the fixed consequent. Results for Dense-Miner are observed with minimum coverage threshold fixed at 1% and 5%, respectively Our approach, on the other hand, mines only minimal rules without using any support pruning. It is very clear from the figure that users interested in minimal rules without support would prefer our approach as the time needed is many orders of magnitude less than that of Dense-Miner The user might notice from both parts of Figure 6 how the two approaches differ in the way they produce the rules. Dense-Miner takes more time at lower confidence while our approach takes more time at higher confidence thresholds. This is mainly because our approach mines minimal rules using only confidence pruning and the higher the confidence threshold, the more difficult it would be to get confident rules high in the SE tree; as a result, the SE tree grows deeper and thus requires more time to traverse. Dense-Miner, on the other hand, mines all Trans. Items Items per trans Connect-4 67557 129 43 PUMSB 49046 7117 74 Proceedings of the 16th IEEE International Conference on Tools with Artificial Intelligence  ICTAI 2004 1082-3409/04 $20.00  2004 IEEE rules and it is very logical to have more rules satisfying lower confidence thresholds \(and vice versa obviously requires more time to mine The number of rules produced by Dense-Miner ranges from around 500,000 rules to less than 10 rules over both data sets. Figure 7 shows the number of rules produced by our approach over the two data sets at the 


produced by our approach over the two data sets at the different confidence thresholds. The same discussion presented in the previous paragraph applies here regarding the larger \(smaller produced at higher \(lower 6. Conclusion In this paper we proposed a framework based on SE-trees and the P-tree technology for extracting minimal, confident rules using fixed-consequent ARM Our methodology relieves the user from the burden of specifying a minimum support threshold by extracting the highest support rules that satisfy user confidence threshold. Albeit, to the best of our knowledge, no previous work has attempted to mine minimal confident rules with fixed consequents, we provide a comparison analysis study showing how well we compare to other close approaches in the literature In terms of limitations, we acknowledge that our approach suffers in situations where the desired rules lie deep in the tree because a large number of nodes and levels need to be traversed then. A future direction in this area targets finding measures for estimating the probability of rule availability along certain branches and quitting early in cases where such probability is low 7. References 1] R. Agrawal, T. Imielinski, and A. Swami, Mining association rules between sets of items in large databases Proceedings of the ACM SIGMOD \(Washington, D.C 1993 2] R. Agrawal and R. Srikant, Fast algorithms for mining association rules. Proceeding of the VLDB \(Santiago, Chile 1994 3] K. Ahmed, N. EI-Makky and Y. Taha  A note on  Beyond Market Baskets: Generalizing association rules to correlations  ACM SIGKDD Explorations, Vol. 1, Issue 2 pp. 46-48, 2000 4] Y. Bastide, N. Pasquier, R. Taouil, G. Stumme, and L Lakhal, Mining Minimal Non-Redundant Association Rules using Frequent Closed Item sets. Proceedings of the First International Conference on Computational Logic \(London UK 5] R. Bayardo, R. Agrawal, and D. Gunopulos, ConstraintBased Rule Mining in Large, Dense Databases. Proceedings of the IEEE ICDE \(Sydney, Australia 6] R. Bayardo and R. Agrawal, Mining the most interesting rules. Proceedings of the ACM SIGKDD \(San Diego, CA 1999 7] C. Becquet, S. Blachon, B. Jeudy, JF. Boulicaut, and O Grandrillon  Strong-association-rule mining for large-scale gene expression data analysis: a case on human SAGE data   Genome Biology, 3\(12 8] F. Coene, P. Leng, and S. Ahmed  Data Structure for Association Rule Mining: T-Tree and P-Trees  IEEE transactions on Knowledge and Data Engineering 16\(6 778, 2004 9] E. Cohen, M. Datar, S. Fujiwara, A. Gionis, P. Indyk, R Motwani, J. D. Ullman, and C. Yang  Finding interesting associations without support pruning  IEEE Transactions on Knowledge and Data Engineering, 13\(1  78, 2001 10] Q. Ding, M. Khan, A. Roy, and W. Perrizo, The p-tree algebra. Proceedings of the ACM SAC, Symposium on Applied Computing \(Madrid, Spain 11] Qin Ding, Qiang Ding, and W. Perrizo, Association Rule Mining on Remotely Sensed Images Using P-trees Proceedings of the PAKDD, Pacific-Asia Conference on Knowledge Discovery and Data Mining, Springer-Verlag Lecture Notes in Artificial Intelligence 2336, 66-79, May 2002 12] S. Fujiwara, J. D. Ullman and R. Motwani, Dynamic 


12] S. Fujiwara, J. D. Ullman and R. Motwani, Dynamic Miss-Counting Algorithms: Finding Implications and Similarity Rules with Confidence Pruning. Proceedings of the IEEE ICDE \(San Diego, CA 13] F. Glover  Tabu Search for Nonlinear and Parametric Optimization \(with Links to Genetic Algorithms  Discrete Applied Mathematics 49 \(1-3 14] M. Klemettinen, H. Mannila, P. Ronkainen, H Toivonen, and A. Verkamo, Finding interesting rules from large sets of discovered association rules. Proceedings of the ACM CIKM, International Conference on Information and Knowledge Management \(Kansas City, Missouri 1999 15] C. Ordonez, C. Santana, and L. de Braal, Discovering Interesting Association Rules in Medical Data. Proceedings of the IEEE Advances in Digital Libraries Conference Baltimore, MD 16] W. Perrizo, Peano count tree technology lab notes Technical Report NDSU-CS-TR-01-1, 2001 http://www.cs.ndsu.nodak. edu /~perrizo classes/785/pct.html. January 2003 17] Ron Raymon, An SE-tree based Characterization of the Induction Problem. Proceedings of the ICML, International Conference on Machine Learning \(Washington, D.C 275, 1993 18] N. Shivakumar, and H. Garcia-Molina, Building a Scalable and Accurate Copy Detection Mechanism Proceedings of the International Conference on the Theory and Practice of Digital Libraries, 1996 19] P. Tan, and V. Kumar, Interestingness Measures for Association Patterns: A Perspective, KDD  2000 Workshop on Post-processing in Machine Learning and Data Mining Boston, 2000 20] H.R. Varian, and P. Resnick, Eds. CACM Special Issue on Recommender Systems. Communications of the ACM 40 1997 Proceedings of the 16th IEEE International Conference on Tools with Artificial Intelligence  ICTAI 2004 1082-3409/04 $20.00  2004 IEEE pre></body></html 


per by Ganti et. al. [9] deals with the measurement of similarity \(or deviation, in the authors  vocabulary between decision trees, frequent itemsets and clusters Although this is already a powerful approach, it is not generic enough for our purpose. The most relevant research e?ort in the literature, concerning pattern management is found in the ?eld of inductive databases Proceedings of the 16th International Conference on Scientific and Statistical Database  Management \(SSDBM  04 1099-3371/04 $ 20.00  2004 IEEE meant as databases that, in addition to data, also contain patterns [10], [7]. Our approach di?ers from the inductive database one mainly in two ways. Firstly, while only association rules and string patterns are usually considered there and no attempt is made towards a general pattern model, in our approach no prede?ned pattern types are considered and the main focus lies in devising a general and extensible model for patterns Secondly, di?erently from [10], we claim that the peculiarities of patterns in terms of structure and behavior together with the characteristic of the expected workload on them, call for a logical separation between the database and the pattern-base in order to ensure e?cient handling of both raw data and patterns through dedicated management systems Finally, we remark that even if some languages have been proposed for pattern generation and retrieval 14, 11], they mainly deal with speci?c types of patterns \(in general, association rules sider the more general problem of de?ning safe and su?ciently expressive language for querying heterogeneous patterns 7. Conclusions and Future Work In this paper we have dealt with the issue of modelling and managing patterns in a database-like setting Our approach is enabled through a Pattern-Base Management System, enabling the storage, querying and management of interesting abstractions of data which we call patterns. In this paper, we have \(a de?ned the logical foundations for the global setting of PBMS management through a model that covers data patterns and intermediate mappings and \(b language issues for PBMS management. To this end we presented a pattern speci?cation language for pattern management along with safety constraints for its usage and introduced queries and query operators and identi?ed interesting query classes Several research issues remain open. First, it is an interesting topic to incorporate the notion of type and class hierarchies in the model [15]. Second, we have intentionally avoided a deep discussion of statistical measures in this paper: it is more than a trivial task to de?ne a generic ontology of statistical measures for any kind of patterns out of the various methodologies that exist \(general probabilities Dempster-Schafer, Bayesian Networks, etc. [16 nally, pattern-base management is not a mature technology: as a recent survey shows [6], it is quite cumbersome to leverage their functionality through objectrelational technology and therefore, their design and engineering is an interesting topic of research References 1] Common Warehouse Metamodel \(CWM http://www.omg.org/cwm, 2001 2] ISO SQL/MM Part 6. http://www.sql99.org/SC32/WG4/Progression Documents/FCD/fcddatamining-2001-05.pdf, 2001 3] Java Data Mining API http://www.jcp.org/jsr/detail/73.prt, 2003 4] Predictive Model Markup Language \(PMML http://www.dmg.org 


http://www.dmg.org pmmlspecs v2/pmml v2 0.html, 2003 5] S. Abiteboul and C. Beeri. The power of languages for the manipulation of complex values. VLDB Journal 4\(4  794, 1995 6] B. Catania, A. Maddalena, E. Bertino, I. Duci, and Y.Theodoridis. Towards abenchmark for patternbases http://dke.cti.gr/panda/index.htm, 2003 7] L. De Raedt. A perspective on inductive databases SIGKDD Explorations, 4\(2  77, 2002 8] M. Escobar-Molano, R. Hull, and D. Jacobs. Safety and translation of calculus queries with scalar functions. In Proceedings of PODS, pages 253  264. ACMPress, 1993 9] V. Ganti, R. Ramakrishnan, J. Gehrke, andW.-Y. Loh A framework for measuring distances in data characteristics. PODS, 1999 10] T. Imielinski and H. Mannila. A database perspective on knowledge discovery. Communications of the ACM 39\(11  64, 1996 11] T. Imielinski and A. Virmani. MSQL: A Query Language for Database Mining. Data Mining and Knowledge Discovery, 2\(4  408, 1999 12] P. Kanellakis, G. Kuper, and P. Revesz. Constraint QueryLanguages. Journal of Computer and SystemSciences, 51\(1  52, 1995 13] P. Lyman and H. R. Varian. How much information http://www.sims.berkeley.edu/how-much-info, 2000 14] R.Meo, G. Psaila, and S. Ceri. An Extension to SQL for Mining Association Rules. Data Mining and Knowledge DiscoveryM, 2\(2  224, 1999 15] S. Rizzi, E. Bertino, B. Catania, M. Golfarelli M. Halkidi, M. Terrovitis, P. Vassiliadis, M. Vazirgiannis, and E. Vrachnos. Towards a logical model for patterns. In Proceedings of ER 2003, 2003 16] A. Siblerschatz and A. Tuzhillin. What makes patterns interesting in knowledge discovery systems. IEEE TKDE, 8\(6  974, 1996 17] D. Suciu. Domain-independent queries on databases with external functions. In Proceedings ICDT, volume 893, pages 177  190, 1995 18] M.Terrovitis, P.Vassiliadis, S. Skadopoulos, E. Bertino B. Catania, and A. Maddalena. Modeling and language support for the management of patternbases. Technical Report TR-2004-2, National Technical University of Athens, 2004. Available at http://www.dblab.ece.ntua.gr/pubs Proceedings of the 16th International Conference on Scientific and Statistical Database  Management \(SSDBM  04 1099-3371/04 $ 20.00  2004 IEEE pre></body></html 


The reason of the hiding failure of SWA is the same in Fig.8 Notice the result at x = 0.7646 in Fig.14, because the hiding failure is occurred at the seeds of the sensitive patterns, a high weakness is produced As shown in Fig.15 and Fig.16, the misses cost and dissimil arity of our work decreases as RL2 increases. This is because the larger RL2 is, the less effect on non-sensitive patterns. Also weakness and dissimilarity of SWA are independent of RL2 5. Conclusion In the paper, a novel method improving the balance between sensitive knowledge protecting and discovery on frequent patte rns has been proposed. By setting entries of a sanitization matrix to appropriate values and multiplying the original database by the matrix with some probability policies, a sanitized database is gotten. Moreover, it can avoid F-I Attack absolutely when the confidence level given by users approximates to 1. The experimental results revealed that although misses cost and dissimilarity between the original and sanitized database of our process are little more than SWA, ours provide more safely protection than SWA. Unlike SWA, our sanitization process could not suffer from F-I Attack and the probability policies in our approach also take the minimum support into account, the users only need to decide the confidence level which affects the degree of patterns hiding 6. Reference 1] M. Atallah, E. Bertino, A. Elmagarmid, M. Ibrahim and V. Verykios Disclosure Limitation of Sensitive Rules", Proc. of IEEE Knowledge and Data Engineering Exchange Workshop 1999 2] R. Agrawal and R. Srikant. Fast algorithms for mining association rules. VLDB, Santiago, Chile, 1994 3] R. Agrawal and R. Srikant. Privacy preserving data mining. In ACM SIGMOD, Dallas, Texas, May 2000 4] E. Dasseni, V. Verykios, A. Elmagarmid and E. Bertino, Hiding Association Rules by Using Confidence and Support", Proc. of 4th Intl Information Hiding Workshop \(IHW 5] A. Evfimievski, J. Gehrke, and R. Srikant. Limiting Privacy Breac hed in privacy preserving data mining. SIGMOD/PODS, 2003 6] A. Evfimievski, R. Srikant, R. Agrawal, and J. Gehrke. Privacy preserving mining of association rules. KDD 2002 7] M. Kantarcioglu and C. Clifton. Privacy-preserving distributed mining of association rules on horizontally partitioned data. In ACM SIGMOD Workshop on Research Issues on Data Mining and Knowledge Discovery, June 2002 8] Guanling Lee, Chien-Yu Chang and Arbee L.P Chen. Hiding sensitive patterns in association rules mining. The 28th Annual International Computer Software and Applications Conference 9] Y. Lindell and B. Pinkas. Privacy Preserving Data mining. In CRYPTO, pages 36-54, 2000 10] S. R. M. Oliveira and O. R. Za  ane. Privacy Preserving Frequent Itemset Mining. In Proc. of IEEE ICDM  02 Workshop on Privacy Security, and Data Mining 11] S. R. M. Oliveira and O. R. Za  ane. Algorithms for Balancing Priv acy and Knowledge Discovery in Association Rule Mining. IDEAS  03 12] S. R. M. Oliveira and O. R. Za  ane. Protecting Sensitive Knowledge By Data Sanitization, ICDM  03 13] S. R. M. Oliveira, O. R. Za  ane and Y  cel Saygin. Secure Association Rule Sharing, PAKDD-04 14] Benny Pinks. Cryptographic Techniques For Privacy-Preserving D ata Mining. ACM SIGKDD Explorations Newsletter Vol. 4, Is. 2, 2002 15] S. J. Rizvi and J. R. Haritsa. Maintaining data privacy in association rule mining. VLDB, 2002 16] J. Vaidya and C. W. Clifton. Privacy preserving association rule mining in vertically partitioned data. KDD2002 17] Verykios, V.S.; Elmagarmid, A.K.; Bertino, E.; Saygin, Y.; Dasseni E. Association rule hiding. IEEE Transactions On Knowledge And Data Engineering, Vol. 16, No. 4, April 2004 Proceedings of the 29th Annual International Computer Software and Applications Conference  COMPSAC  05 0730-3157/05 $20.00  2005 IEEE pre></body></html 


pre></body></html 


Batt Power Batt Type Stabilization Type Propulsion Mechanism  of Solar Panels  of Solar Cells Manufacturing Qty Satellites in Constellation On-Orbit Spares Channels Number of Bands Data Storage Processing Power Source type Block Name Thermal Control Material Type Level of Technology Known Inheritance Propulsion station keeping Number of Axes Ground Based Spares Pointing Accuracy APPENDIX C EXISTING MODELS Numerous models are today in use for estimating spacecraft cost Two of the most common are the NASA/Air Force Cost Model and the Aerospace Small Satellite Cost Model Here is a description of the NAFCOM model The NASA/Air Force Cost Model NAFCOM is a parametric estimating toolfor space hardware It is based on historical NASA and Air Force space projects and is primarily used in the very early phases of a development project NAFCOM can be used at the subsystem or component levels The database currently includes 122 missions including 76 unmanned earth orbiting 24 unmanned planetary 11 launch vehicles 8 manned 3 engines It uses parametric relationships to estimate subsystem or component level costs for any aerospace hardware including earth orbital spacecraft manned spacecraft launch vehicle upper stages liquid rocket engines scientific instruments or planetary spacecraft 7 And for the Aerospace Small Satellite Cost Model SSCM employs a parametric methodology for estimation of program cost and is best suited to the early conceptual development phase of a spacecraft program during which time the design is likely to be less mature and when cost and performance trades can be easily performed SSCM consists of a collection of cost-estimating relationships or CERs which estimate the costs of developing andproducing a spacecraft system with the following subsystems  Attitude Determination and Control Subsystem ADCS  Propulsion  Power  Telemetry Tracking  Command TT&C  Command  Data Handling C&DH  Structure  Thermal CERs were also developed for integration assembly and test IA&T program management PM and systems engineering SE and launch and orbital operations support LOOS Individual subsystem cost estimates are statistically rolled up to yield a cost-risk distribution which provides the estimator with a range of cost estimates andpercentiles 8 The SSCM was calibrated from over 100 post-1990 Earth-orbiting andplanetary missions REFERENCES 1 Lack of Disciplined Cost-Estimating Processes Hinders Effective Program Management GAO study 04-642 2 Jilla Cyrus D and Miller David W Satellite Design Past Present and Future International Journal of Small Satellite Engineering 12 February 1997 3 Bearden David A A Complexity Based Risk Assessment of Low-Cost Planetary Missions:When Is A Mission Too Fast and Too Cheap Fourth IAA International Conference On Low-Cost Planetary Missions JHU/APL MAY 2-5 2000 4 Kellogg Mahr and Lobbia An Analogy-based Method for Estimating the Costs of Spacecraft IEEEAC paper 1371 Version 4 5 Hoeting Jennifer A Methodology for Bayesian Model Averaging An Update f 6]btp/ewiieiao iiAaos 7 Keith Smith NASA/Air Force Cost Model Science Applications International Corporation 8 18 


BIOGRAPHIES Lee Fischman served as Principle Investigator for this project Lee is Senior Director of Development at Galorath Incorporated where he directs much of the new product development and research at the firm He developed SEER for Software  Hardware Integrations with Microsoft Project the Comparison Sizing tool COTS Software model in addition to various data mining information extraction and expert systems Previously he was a software designerlprogrammer in the New York financial industry Lee earned a BA from the University of Chicago and an MA from UCLA both in economics Mike Kimel carried out statistical work on the project Mike is an Economist for Galorath Inc in addition to maintaining his own quantitative consulting practice He has also taught Economics and Advanced Statistics at the Graziadio School of Business and Management at Pepperdine University run the Competitive Strategy group for a Fortune 500 Telecom Company and worked as a Consultant at PriceWaterhouse LLC now PriceWaterhouse-Coopers He earned a Ph.D in Economicsfrom UCLA Troy Masters programmed analytic methods and is integrating the Far Out model into its parent product SEER for Hardware previously SEER-H Troy is a Software Engineer with Galorath Incorporated where he has been the primary developer for a range ofproducts He earned a BS in computer science from UCLA David J Pine was our subject matter expert helping us assemble data and gain insight into technical trends Dave is retired after a 34-year career with the National Aeronautics and Space Administration NASA currently is a consultant to various government and industry entities While at NASA his organizations in the Office of the Chief Financial Officer and later at the IPAO at Langley Research Center were responsible for the conduct of major NASA program analyses and evaluations for the NASA Administrator and Deputy Administrator From early 1988 through the end of 1990 he was the Deputy Program Manager for the Hubble Space Telescope Program specifically responsible for the telescope operations and science support aspects of the program He earned a BS in Aerospace Engineering from the Polytechnic Institute of Brooklyn and a Masters of Engineering Administration from the George Washington University 19 


  20 Angeles, where he also received a B.S. in Applied Mathematics  Eric Fetzer is a Senior Member of the Technical Staff at the Jet Propulsion Laboratory, Pasadena, California specializing in satellite observations of the atmosphere.  His scientific interests include planetary boundary layer processes, tropical phenomena, upper tropospheric variability, and climatologies of temperature, water vapor and clouds.  His technical interests include analysis of large data sets, and of multi-sensor observations. He has over 20 peer-reviewed publications and given numerous scientific presentations, public lectures and media interviews about climate science. Eric received a B.A. in Physics from the University of California Berkeley, and a Ph.D. in Astrophysical, Planetary and Atmospheric Sciences from the University of Colorado, Boulder   Amy Braverman is a Senior Statistician at the Jet Propulsion Laboratory, California Institute of Technology She holds a B.A. in Economics from Swarthmore College an M.A. in Mathematics from UCLA, and a Ph.D. in Statistics also from UCLA. Prior to her current position in JPL's Science Data Understanding Group, she was a Caltech Post-doctoral Scholar at the Jet Propulsion Laboratory, and a Scientist in the Flight Sciences Experiments Section of the Science Division. Dr Braverman conducts research on information-theoretic methods for the analysis of massive data sets and streams statistical data fusion, high-dimensional data analysis, and statistical analysis for climate model evaluation and diagnosis. She has published in both the statistics and geoscience literature, and is active in both communities She is a member of the Multi-angle Imaging SpectroRadiometer Science Team, and serves as a member of the Atmospheric Infrared Sounder Science Integration Team. Her responsibilities on both missions include designing data reduction algorithms for massive, remote sensing data sets. Dr. Braverman also holds an appointment in the Department of Statistics at UCLA as Adjunct Associate Professor, and is active in UCLA\222s Center for Environmental Statistics. She is member of the Committee on Applied and Theoretical Statistics of the US National Academy of Science. She has refereed for the Journal of the American Statistical Association, the Journal of Computational and Gr aphical Statistics, IEEE Transactions on Geoscience and Remote Sensing, and the Journal of Applied Meteorology and Climatology Seungwon Lee is a senior member of the High Capability Computing and Modeling Group at Jet Propulsion Laboratory. She is conducti ng research on comet gas dynamics, nonlinear dynamics control, climate model parameterization, Earth science data analysis, parallel computing, and advanced numerical algorithms. She received her Ph.D in Physics fr om the Ohio State University and her M.S. and B.S. in Physics from the Seoul National University, Korea  Matthew Henderson is software engineer in the High Capability Computing and Mode ling group at JPL. His current work includes Web Services and Instrument Data Level 2 subsetting. He received a B.S. Computer Science from CSU Pomona, and is currently pursuing M.S Computer Science  Steven J. Lewis is a member of the Information System and Computer Science staff member at the Jet Propulsion Laboratory.  He received a BS in Mathematics from the University of California, Los Angeles in June 2001, and the MS and Ph.D. Degree from Claremont Graduate University in May 2004 and May 2007, respectively.  He worked as a post doctoral fellow at Keck Graduate Institute from June 2007 until he joined JPL in March of 2008.  During his graduate and post doctoral work, his studies focused on applications of Bayesian methods to hidden Markov models with particular interest and application to protein sequencing.  His work at JPL has focused on integrating web services into various programming platforms for the purposes of accessing NASA satellite data, as well as developing object tracking so ftware and contributing to image enhancement and restoration efforts Van Dang is a member of the Science Data Understanding Group at the Jet Propulsion Laboratory. She was responsible for the NEWS Level 2 processing that generated the formal merged Level 2 data from multiple A-Train instruments  Manuel de la Torre is a Physicist from the Universidad Complutense at Madrid \(Spain\. After finishing his Ph.D work at the University of Bayreuth \(Germany\ on pattern formation in turbulent flows and a 7 1/2 year stunt as Ass and Assoc. Prof. at the Escuela T\351cnica Superior de Ingenieros Aeron\341uticos in Madrid \(Spain\, he came to the Jet Propulsion Laboratory on a 1-year Sabatical leave in 1997 wanting to apply fundamental concepts of nonlinear systems and geophysical fluid dynamics to something that might be directly useful to soci ety. He discovered the JPL as a great place to achieve that goal and extende d his stay a bit longer, becoming Technical staff and working on different aspects of remote sensing, validation of satellite instruments, and data analysis of atmospheric processes and climate  


