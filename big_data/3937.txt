Sequential Pattern Mining with Multiple Minimum Supports: a Tree Based Approach Ya-Han Hu Department of Information Management National Chung Cheng University Chia-Yi, Taiwan, R.O.C yahan.hu@mis.ccu.edu.tw Fan Wu Department of Information Management National Chung Cheng University Chia-Yi, Taiwan, R.O.C kfwu@mis.ccu.edu.tw Yi-Chun Liao Department of Information Management National Chung Cheng University Chia-Yi, Taiwan, R.O.C wagajim@gmail.com Abstract  Frequent pattern mining is an important data-mining method for determining correlations among items/itemsets Since the frequencies for various items are always varied, specifying a single minimum support cannot exactly discover interesting patterns. To solve this problem Liu et al. propose an aprioribased method to include the concept of multiple minimum supports \(MMS in short on association rule mining. It allows user to specify MMS to reflect the different natures of items Since the mining of sequential pattern may face the same problem, we extend the traditional definition of sequential patterns to include the concept of MMS in this study. For efficiently discovering sequential patterns with MMS, we develop a data structure, named PLMS-tree, to store all necessary information from database. After that, a pattern growth method named MSCP-growth is developed to discover all sequential patterns with MMS from PLMS-tree Keywords: Sequential pattern, multiple minimum supports pattern growth I I NTRODUCTION Sequential pattern mining is one of the most important research issues in data mining, which was first introduced by Agrawal and Srikant[2 an d can  be des c r i b e d as f o ll ow s  w e  are given a set of data-sequences, as the input data. Each datasequence contains an ordered list of transactions \(itemsets Given a user-specified minimum support threshold minsup  sequential pattern mining finds all subsequences with frequencies larger than minsup in a sequence database Some previous studies on association analysis [1 5-7 indicate that using only minsup as single frequency threshold does not deliberate on the nature of items in real-life applications. That is single minsup implicitly assumes that all items in the database have similar frequency. However, some items may appear very frequently in the database while others rarely appear Under such circumstance, if we set the value of minsup too high, we will not find those rules involving rare items in the database. On the other hand, if we set that value too low, it will generate a huge amount of meaningless patterns Therefore, Liu et al. [5 f irs t a d d r ess th is di lem m a als o k n o w n as the rare item problem d propose the concept of multiple minimum supports \(MMS in short to redefine the problem of association rule mining. The method allows users to specify different minsup s for different items \(MIS values\to reflect their unique natures and generate different association rules depending on which items are in the patterns Recently there have been some extended studies on MMS 1 5 7-9   T h es e r esea r c he s s h ow th at MMS can  b o th enh a n c e  the efficiency of the mining process and generate more interesting patterns. However, most of previous studies deal with the rare item problem on association rule mining but rarely on sequential pattern mining. In this study, we first extend the definitions of sequential pattern with consideration to MMS, which allows users to specify multiple item supports to reflect different frequencies of items. Items with low frequencies will be specified with lower minimum supports and patterns involving these items can be easily retrieved for further decision support The major problem on frequent pattern mining with MMS is that the downward closure property no longer holds in the mining process which means that a super-pattern of an infrequent pattern might be a frequent pattern. To effectively reduce the search space in level-wise methods Liu et al. [5 proposes the sorted closure property where all items in the dataset are sorted in ascending order by their MIS values. Keep this ordering in subsequent operations and let k patterns generated from k 1\pattern share the same prefix, i.e. the smallest minsup among all items in k patterns, the complete set of frequent patterns with MMS can be easily discovered. The sorted closure property, however, is invalid in sequential pattern mining since the order of events in a data-sequence cannot be altered. Therefore, to discover complete set of sequential patterns with MMS is not straightforward. Base on the new definitions of sequential pattern with MMS, we first propose an extended version of the PLWAP-tree structure [4  named Preorder Linked Multiple Supports tree PLMS-tree\ to compress and store all necessary information from sequence databases. After that, we extend PLWAP-Mine to develop an efficient algorithm, named Multiple Supports Candidate Pattern growth MSCP-growth\ for discovering complete set of sequential patterns with MMS. We extend PLWAP-tree and PLWAP-Mine because they have been proven to be a compact data structure and a highly efficient algorithm on sequential pattern mining The structure of this paper is as follows. In Section 2, we first review the concept of PLWAP-tree, which is considered as the basis of our approach Section 3 introduces the definition of sequential pattern mining with MMS. Our data structure 428 


PLMS-tree and the mining algorithm MSCP-growth will be presented in Section 4, and we have a conclusion in Section 5 II R ELATED WORK Preorder Linked WAP tree \(PLWAP-tree\ algorithm is proposed by Ezeife et al E x te nded fro m W A P t r e e 3  PLWAP-tree enhances its performance by avoiding reconstruction the intermediate tree The PLWAP-tree stores the sequence databases into a preorder linked tree, and each node in the PLWAP-tree has a unique binary code to indicate its position. The position code makes this tree be able to directly recognize the ancestors and descendants of a node by comparing the assigned position codes between nodes and avoid re-constructing the intermediate trees during the mining process. In order to makes it easier to explain how to implement the position codes, the PLWAP-tree uses an equivalent binary tree to represent the original tree. Given a node n  n  s first child node in the original tree is n  s left child node in equivalent binary tree and n  s first sibling node in the original tree is n  s right child node in equivalent tree. Fig. 1 is an example on describing how to represent WAP-tree as an equivalent binary tree and how to assign the position code on each node The rule of assigning the position code is as follows, given an equivalent binary tree, and nodes in the tree including a node n 1 a left child of n 1 named n 2 and a right child node of n 1 named n 3 Given n 1  s position code is  a   n 2  s position code will be assigned with an additional 1 in the bottom of  a  and becomes  a 1   n 3  s position code will be assigned with an additional 1 in the bottom of  a  and becomes  a 0  For example, the leftmost child of root node in tree is B, node B will be the root node of equivalent binary tree. The leftmost child node of B is D, and the first sibling node of B is C, so the equivalent binary tree is represen ted as Fig. 1 and the position codes of B, D and C are  1    11  and  10  respectively. The other nodes are assigned in the same way Figure 1 Identify the decendants by position code Fig. 1 also explains how to use position codes on identifing relationships between ancestors and descendants of a given node Given a node n with positon code  a  suppose we assighs an additional 1 in the bottom of  a  and becomes  a 1   all nodes with the same prefix  a 1  are descendants of n For example the position code of node B is 1 We assigns an additional 1 in the end of Bês postion code i.e 11 and each node with prefix ç11é is the descendant of nod e B III P ROBLEM DEFINITION In this section, we formally give definitions used in the discovery of sequential pattern with MMS Let I denote the set of items in the database, and a subset of I is called an itemset A customerês data sequence is an ordered list of items with time stamps. Therefore, a sequence, say  can be represented as a 1  t 1  a 2  t 2  a 3  t 3  a n  t n where a j is an item and t j stands for the time when a j occurs, 1 j n and t j 1 t j for 2 j n If several items occur at the same time in the sequence, they are ordered alphabetically Definition 1 Given an itemset I q  i 1  i 2  i m we say itemset I q occurs in  if integers 1 k 1  k 2  k m n exist such that i 1  a k 1  i 2  a k 2  i m  a km and t k 1  t k 2  t km We refer to k 1 and t k 1 jointly as the position and the time that I q occurs in  respectively Definition 2 Let   I 1  I 2  I s  I q  I for 1 q s\ be a sequence of itemset. Assume that each I q in  occurs in   Then we say sequence  occurs in  or is a subsequence of  if t I1  t I2  t Is where t Iq 1 q s the time, at which I q occurs in   Definition 3 A sequence database S is formed by a set of records sid  s where sid is the identifier of this datasequence and s is a data-sequence. For a given sequence  the support count of sequence  in S are defined as follows supp    sid  s  sid  s   S   is a subsequence in s  The following definitions are related to the concept of MMS. In this model, the definition of the minimum support is changed. Each item in the database can have its minsup which is expressed in terms of minimum item support MIS\ In other words, users can specify different MIS values for different items Definition 4 Let MIS i denote the MIS value of item i  i  I Given an itemset Iq  i 1  i 2    i m the MIS value of itemset I q  i 1 i 2  i m  1 k m denoted as MIS I q s equal to min[ MIS i 1 MIS i 2 MIS i m  Definition 5 Given a sequence   I 1 I 2  I s  I q  I for 1 q s e minimum support threshold of  denoted as MIS  is equal to min[ MIS I 1 MIS I 2 MIS I s  Definition 6 Given a sequence database S and a sequence   we call  is frequent in S or  is a sequential pattern in S if supp    MIS   By providing different minimum item support thresholds for different items, the user can effectively express different support requirements for different data-sequences. MMS allow us to have higher minimum supports for sequences involving highly frequent items, and also allow us to have lower minimum supports for sequences involving rare items. In summary, the problem we addressed can be stated as follows Given a sequence database S and a set of MIS values for all items in S we discover all sequential patterns that satisfy MIS   42 9 


IV T HE P ROPOSED ALGORITHM In this section, we first proposed a PLWAP-tree-like algorithm, called PLMS-tree, to store all necessary information from sequence database. After that, we than propose a new pattern growth algorithm, named MSCP-growth, to generate the complete set of sequential patterns with MMS based on the PLMS-tree A PLMS-tree construction The PLMS-tree is an extension of PLWAP-tree. But there are still some differences between these two tree structures The first is that PLWAP-tree contains only items with support no less than minsup while PLMS-tree retain items with support no less than MIS I i.e. the smallest MIS value among all items It is because items with support no less than MIS I have possibilities to be part of sequential patterns. The second is that in PLMS-tree we need to add some additional information into the tree structure for discovering complete set of sequential patterns. This part will be discussed later Similar to PLWAP-tree, PLMS-tree is composed of a header table and tree nodes. The header table stored related information of items in the sequence database, where iname records itemês name mis records the MIS value of this item and nlink records the link to the first node in the tree node shares the same item-name with this item in prefix order. Items in the header table are sorted in increasing order based on its MIS value The tree node stores the information including iname  iflag  icount  mps  pcode and the related node links plink  clink  slink and nlink The iflag and mps are two new fields. The iflag is used to identify the last item of a transaction. Since we consider multiple items in an event, the mining process has to distinguish whether the nodes with item-name i and their suffix are in the same itemset. The mps is the minimum possible support which is equal to the minimum MIS value among this node and all nodes in its suffix tree. This value is used to be part of threshold in our candidate pattern growth algorithm to reduce the number of candidate patterns. The iname records which item this node represents. The icount records the number of sequences represented by the portion of the path reaching this node. The pcode is position code used to identify the ancestor and descendent of this node. The related node links, including plink  clink  slink and nlink are linked to its parent node, first child node first sibling node and the next node sharing the same item name, respectively We use an simple tree with three sequences ab   a  abc  and ac to explain our tree in Fig. 2 first. Node a 3\ is not the last item of an itemset, it  s iflag is false. Node \(_ c 1\ is the last item of an itemset, it  s iflag is true. The mps value of node a 3 is 30% because the minimum MIS value in it  s suffix tree is 30%. The represent tree is used to describe the sequence database and the data structure tree shows the related node links between nodes, in the following content, we will use the represent to describe our example Based on the definitions of PLMS-tree, we proposed a PLMS-tree construction algorithm. As shown in Fig. 3, and we will use an example to explain the PLMS-tree constructing steps as follows Figure 2 Example tree Input : sequence database S and the MIS vale of each item in I Output PLMS-tree T header table HT Method : tree_construction S MIS value of each item i in I  1 Initial PLMStree T create root 2 Initial header table HT based on MIS value for each item i in I 3 For each sequence s in S 4 Call insert_tree s, T  insert s into the tree 5 End loop 6 For each node n in T 7 If with supp  n.iname MIS I  then 8 Call prune i, T prune items that cant reach the threshold 9 End if 10 E nd loop 11 For each node n in T 12 Call merge T merge nodes and give position code to each node 13  If n is a leaf node of T 14 Call thres_set T set the threshold to each node 15  End if 16 End loop 17 Call bulidLinkage\(root of T  build linkage with the same iname Figure 3 Algorithm 2  Tree construction In the following example, node n 1  iname 1  icount 1  pcode 1  denotes n 1 s item name, item count and position code respectively. The path from n 1 to its descendent n r is denoted as  iname 1  icount 1  pcode 1      iname r  icount r  pcode r  Given a sequence database and assume the MIS value of each item is defined as follows a 70 b 80 c 40 d 65 e 30 f 40%. Based on the MIS values above, we can sort each sequence shown in table I TABLE I S ORTED SEQUENCE DATABASE SID Unsorted sequence Sorted sequence 10  ac   ab   bc   ca   ab   cb  20  ac   ab   c   ca   ab   c  30  a   e   c   a   b   a   e   c   a   b  40  ac   f   ab   d   ca   f   ab   d  50  a   e   c   d   b   a   e   c   d   b  At the first step, we create a root node of tree T labeled as NULL A header table HT records all itemsê names and their MIS values. The first scan of database S inserts the sequences s into T by turns. We use the first two sequences to explain the insertion process as follows 1. The first sequence s 10  ca   ab   cb Since the child node of root is NULL, we create new nodes as Fig. 4\(a\. Noted that each sequences in the S is a combination of itemsets, we mark the last item i of each itemset as _ i to distinguish among 430 


itemsets, and the items in the same itemset are sorted by their MIS value in increasing order 2. For the second sequence s 20 it shares the same prefix  ca   ab   c with the s 10 But our study wants to discuss about the situation of itemset, the last item   c   in s 20 is the last item of one itemset, and the same item in s 10 is not, the last item   c   in s 20 will be considered as a different item with item   c   in s 10 The icount in branch c 1  _ a 1   a 1  _ b 1\ are increased by 1 because they shares the same prefix but the next item of s 20 i.e. \(c\ is not the same node with s 10  Item c in s 20 cannot share node with the item c in s 10 it will be a new child node \(_ c 1\ of \(_ b 2\ as Fig. 4\(b The remaining sequences will be inserted in the same way the insert algorithm is shown at Fig. 5 and the result after step 1 is shown at Fig. 6\(a Figure 4\(a Figure 4 \(b Figure 4 Tree construction steps Input : sequence s  PLMS-tree T Method : Insert_tree s , T  1 point to root 2 For each itemset t in s 3 Sort all items in t based on their MIS values in increasing order 4 If item i is the last item of t then 5 lastitem TRUE distinguish between itemset 6 End if 7  For each item i in t 8 If there exists a child node e which e  iname  i  iname and the same lastitem value then 9 e  icount  10 Point to e 11 Else 12 Create a new node e with e.iname  i  iname 13 Set the related information about e 14 Point to e 15 End if 16 End loop 17 If i appears in s the first time 18  supp  i  count item i  s support 19 End if 20 End loop Figure 5 Method: insert tree  insert S into tree At the second step, since all items in S are inserted into T it possibly has items with support less than MIS I i.e. these items are impossible to be part of sequential patterns. Follow the example above, the supports of each item is as follows a 100 b 80 c 100 d 40 e 40 f 20%. Since the MIS I is 30%, all nodes with iname  f will be removed because supp  f is less than MIS I The pruning step is shown in Fig. 6. In this case, node \(_ f 1\ is going to be removed and the node links related to \(_ f 1\ will be modified to keep the data structure right at the same time. Several links related to this node needed to be modified including node a 2\ês slink is linked to \(_ f 1\ and node a 1 plink is linked to \(_ f 1\ Node  a 2\s slink will be linked to \(_ f 1 s child node a 1\ and node  a 1\s parent link will linked to \(_ f 1\ês parent \(_ a 3 The complete pruning algorithm is shown in Fig. 7 Figure 6\(a\.                               Figure 6\(b Figure 6 PLMS-tree  Step 2  pruning Figure 7 Method: prune  remove infrequent items Since we prune some nodes from the tree, there might exist nodes sharing the same item name with their sibling node. The third step merges nodes with their sibling node if they share the same item name and assign position code to the nodes which do not need to be merged Follow the example in Fig. 6 we find that two child nodes of \(_ a 3\, i.e a 2\nd a 1\, share the same iname  a Moreover, both of them are not the last item of an itemset, so they will be merged together and the merging step is shown in Fig 8\(b At the same time, we modify the related node link to keep the data structure right. The node _ b 1\ês plink will be changed to the merged node a 3 node \(_ b 2\s slink is changed to \(_ b 1\ because they have the same parent node. The following two nodes \(_ b 2\nd \(_ b 1 will do so in the same way as Fig. 8\(c Figure 8\(a Figure 8 \(b Figure 8 \(c Figure 8 PLMS-tree  Step 3  merging steps The position code is assigned at the same time when we merge nodes by traversing T from root, if a given node n does Input : node n with supp n  iname MIS I  Method : prune e  1 Modify the link linked to e s child node and sibling node 2 Remove e 43 1 


not need to be merged, it will be assigned with a position code Since the leftmost node of root in T is c 3\ we use c 3\ be the root of equivalent binary tree, which means it is assigned with position code 1 As we motioned in section 2, its leftmost child \(_ a 3\ is assigned with an additional 1 in the bottom and becomes 11, the first sibling node \(_ c 1\ assigned with an addition 0 in the bottom and becomes 10. The other nodes in T are assigned with unique position code in the same way The result of PLMS-tree with position code is shown in Fig. 12, too and the merging and assigning algorithm shows in Fig. 9 Input : Tree T Method : merge T  1 Form the root of T trace each node e in T 2 If e  s slink  NULL then 3 For each sibling nodes of e 4  If this node is appeared the first time then 5 assign position code 6 Else 7 merge to the node with same node name 8 End if 9 End loop 10 Else 11 assign position code 12 End if Figure 9 Method: merge  merge tree and assign position code The fourth step is to set the mps value of each node e in T This value is used to record the minimal possible support in this nodeês suffix tree and it will play an important rule in our mining process. The mps is equal to the minimum MIS value between e and all nodes in e s suffix trees We trace form the leaf nodes in T to assign their mps value. In this case, the mps of node \(_ b 1:1111111\s 80% and its parent node c 1:11111 is 40%, so the mps value of c 1:11111\does not to be modified, but c 1:11111\ês parent node, \(_ b 3:1111\ês mps value is 80%, so the mps value of \(_ b 3:1111\ needs to be modified to 40 which is equal to itês childês mps value. The other nodes in T are assigned with mps vales in the same way The result of PLMS-tree with mps value is shown in Fig. 12 and the mps setting algorithm is shown in Fig. 10 Input : leaf node of T Method : thres_reset T  1 If e  plink  mps  e  mps then 2 e  plink  mps  e  mps 3 E lse 4 break 5 End if Figure 10 Method thres_reset T  The final step is building nlink between header table and the nodes, so we can trace all nodes with the same iname through header table. In this example, the nlink of item e in the header table is linked to \(_ e 1:11111001\ first, and the nlink of node \(_ e 1:11111001\ in linked to next node with the same item name \(_ e 2:101\ in prefix order. The other nodes are also linked together by the same way. The algorithm of building nlink shows in Fig 11 and the complete PLMS-tree with part of node link value shows in Fig. 12 B MSCP-growth After the PLMS-tree is constructed, we develop the MSCPgrowth algorithm to generate a complete set of sequential patterns with MMS. The complete pseudo code of MSCPgrowth is shown in Fig. 13. Due to the limit of space, we briefly explain the main procedure of MSCP-growth below Input : node n Method buildLinkage n  1 If n NULL then 2  If HT  n  iname  nlink  NULL then 3  HT  n.iname  n link  n  4  Else 5 link the last node linked by HT  n  iname  nlink  s nlink to n 6 End if 7 buildLinkage n  clink  8 buildLinkage n  slink  9 End if Figure 11 Method: thres_set  set mps to each node Figure 12 Complete PLMS-tree with part of node link Input : Root set RS root Output : the complete set of sequential patterns Method : MSCP growth RS   MIS   1 If RS is empty then return 2 For each item i with supp  i MIS I n HT 3 For each node n belongs to i in T 4  If n is a descendent node of RS and n is not recounted then 5  icount  n  i count 6 Join n s child into new root set nRS 7  If n.mps  mps then 8  mps  n.mps 9  End if 10  End if 11 End loop 12 If icount MIS   icount  mps then 13  Append i to  as   14 If icount MIS    then 15 Join   to sequential patterns set 16 End if 17  MSCP-growth nRS    MIS    18 End if 19 End loop Figure 13 Algorithm 3: MSCP-growth  generate sequential patterns set In line 2 through line 11, firstly, the algorithm counts each item i  s support in   s conditional PLMS-tree the suffix tree of root set RS In PLMS-tree, the nodes with the same iname in the same path cannot be counted more than once since each item in the same sequence can be counted once only. Here, the binary code can be used to quickly identify the relationships between any two nodes in PLMS-tree. While cumulating icount for node n in line 4 through line 6, the algorithm records n s child node in a new root set nRS The nRS will be used to 432 


locate    s conditional PLMS-tree in the mining of sequence     s super-patterns. In line 7 through 9, we examine the mps of each node n and record their minimum mps  This value will be used in next step In line 12 through line 18, secondly, we generate candidate patterns and output sequential patterns according to each item  s icount  Three conditions may occur here. The first is that the icount satisfies MIS   This sequence is directly appended to the sequential patterns set. The second is that the icount doesn  t satisfy MIS  t satisfies mps That is, the sequence is currently not a sequential pattern, but its super-pattern \(i.e appending suffix in the sequence\ has possibility to be Therefore, both two conditions have to keep growing and recursively call procedure MSCP-growth for further examining their super-patterns. The third is that the count of sequence doesn  t satisfy both MIS  nd mps It means that any superpattern of the sequence  will never be a sequential pattern The procedure will terminate while the root set becomes empty We use the constructed PLMS-tree in Fig.12 to explain the mining process in detail. At first, the RS is root and we trace all nodes belong to the first item e in HT According to the nlink of item e from HT  we find \(_ e 1:11111001 n 1 at first, the position code shows that n 1 is a descent node of RS and n 1 is not recounted in the same branch n 1  icount will be add into icount since n 1 does not have any child node, no node will be joined into nRS According to the nlink in \(_ e 1:11111001\ the next node \(_ e 2:101 n 2 will be found n 2 is a descent node of root and n 2 is not recounted n 2  icount will be added into icount  n 2 also has a child node \(_ c 2:1011 that can be joined into the nRS to be a new root set if we need to growth this pattern. And the next node \(_ e 1:10111011\ is recounted so the node count of this node will not be added into icount  Since the icount of item e is 60% which reaches the candidate growth condition we mentioned before, we use the nRS and e as a candidate pattern to generate new patterns. Pattern e also reaches the threshold of sequential pattern, i.e. MIS e and can be joined into the sequential patterns set. The second step uses the node in the nRS _ c 2:1011\, as the new root set of conditional tree to growth new pattern\(s\. According to HT the icount of first item e rooted by \(_ c 2:1011 is 20%, which does not reach the candidate growth condition. The icount of second item c in HT rooted by \(_ c 2:1011\ is 40%, which reaches the condition to growth new candidate patterns, so we use the child nodes of _ c 2:1011 _ a 1:10111\nd \(_ b 1:10111 as nRS to generate new candidate patterns. This pattern also larger than MIS ec  which means it can be joined into the sequential patterns set The complete sequential patterns set with beginning item e can be generated by repeating these steps The reason we use the mps value and candidate growth will show in following example. We trace the item b now, the icount of item b is 100% which reaches the condition to generate new candidate and the threshold to be joined into the sequential patterns set. As the tracing step goes, we have the icount of item d 60% in the suffix tree of pattern b it reaches the mps value=30%, which is the second condition to candidate growth we mentioned before, and it means that this pattern still has possibility to be part of sequential pattern. Noted that it doesn  treach MIS bd 65%, which means it is not a sequential pattern. In the next candidate growth step, we have item e with icount 40% which reaches the MIS bde 30%, pattern bde  can be joined into the sequential patterns set. We can see that an infrequent patternês super set become frequent pattern in this case, that is why we need to consider about the mps value The other sequential patterns which are started from other items are generated in the same way. Finally, we can have the complete sequential patterns with MMS by MSCP-growth algorithm V C ONCLUTION In this study, we first address the rare item problem in the mining of sequential patterns. To generate more interesting patterns, we extend the concept of MMS on sequential pattern mining and propose an algorithm, named MSCP growth, to discover complete set of sequential pattern with MMS In experimental study, we will compare three well-known traditional methods, including GSP, PrefixSpan and PLWAPtree with MSCP-growth using several synthetic datasets as well as real-life datasets Some r esearch directions are briefly discussed. First, users may have to tune items  supports many times while discovering useful patterns. Instead of restarting the whole mining process, it is valuable if a support tuning mechanism can be developed. Second, the concept of MMS can be further applied to cons traint-based sequential pattern mining, such as time constraints or duration constraints A CKNOWLEDGMENT This research was supported by the National Science Council of the Republic of China under the Grant NSC 982410-H-194-054 R EFERENCES 1 Y  H Hu and Y L  C h en   M ini ng a s s o c i at i o n ru les w i t h m u lt ip le minimum supports: a new mining algorithm and a support tuning mechanism Decision Support Systems vol. 42, is. 1 pp.1-24, 2006 2 R  A g ra w a l a n d R Srik ant   M in in g s e qu en ti a l pa tt ern s    Data Engineering \(ICDEê95  Taipei, Taiwan, Mar, 1995, pp.3-14 3 J. P e i, J  H a n B   Mo r t az av i A s l  an d H  Z h u   M i n i n g a cce ss pa tte r n s  efficiently from web logs Lecture notes in computer science pp.396407, 2000 4 C  E z e i f e an d Y  L u  M i n i n g w e b l o g s e que n tial p a t t e r ns w i t h  po s i tio n  coded pre-order linked wap-tree Data Mining and Knowledge Discovery vol. 10, no. 1 pp.5-38, 2005 5 B L i u  W  Hs u  an d Y M a   M in in g a s s o c i a t i o n r u les w i t h m u lt i p le minimum supports Proceedings of the fifth ACM SIGKDD international conference San Diego, CA, USA August 15-18, 1999 p.341 6 K W a ng Y  H e a n d J  H a n  M in i n g f r e que n t i t e m s e ts  us i n g s u ppo r t  constraints Proceedings of the 26 th international conference on VLDB  2000, Cairo, Egypt, pp.43-52 7 Y L e e  T  H o ng and W  L i n M i n i n g f u z z y asso ciati o n r u l e s w ith multiple minimum supports using maximum constraints Lecture notes in computer science vol. 3014, pp.1283-1290, 2004 8 M  T s e n g a n d W  L i n M i n i n g g e ne r a l i ze d as s o c i a tio n r u l e s w ith  multiple minimum supports International Conference on Data Warehousing and Knowledge Discovery \(DaWaKê01 Munich Germany, 2001, pp.11-20 9 Y L e e  T  H o ng and W  L i n M in i n g asso ci at io n r u l e s w ith mul t i p l e  minimum supports using maximum constraints International Journal of Approximate Reasoning vol. 40, pp.44-54, 2005 433 


H n n n n n n n n k k k k k k k k  nowledge representation m odels can be easily solved by PSR, which can be generat ed automatically In conclusion, there are summary comparisons and experiment verificati on given in above part. From summary comparisons of different models, PSR, PLSA, LDA, and OWL are all of semantic richness, but only PSR can be constructed automatically. VSM, EFCM, and PSR can be constructed automatically, but EFCM and PSR contain richer semantics than VSM. From experiment verifi cation, we find that poor semantics can be extracted by VSM, but EFCM and PSR can extract more semantics from text s.  In this point, both EFCM are different companies. But the latter article tells something about planting apple tree. Just judging the content of employment; demand 4\017\r respectively.  In the two groups, there is which denotes the development supported by So, PSR expresses the difference among them very well, which is generated readily automatically by machines As similar to grou p one, there are three pages which contain some common harden their systems. Herein In page two, there is and  So, how to distinguish these pages becomes more difficult because of the lac of clue information. However, with the help of text association rules, it can be determined whether association rules, the similarity and difference among them become obvious. In page one, there is  readers can infer that it is different from the former two pages, and there is something about  And, in page two, there is NSA Schaeffer NSA NSA NSA NSA The two pages have something to as a certain person whose job is to exchange information from one language to another language. That is to say, it is further proved that some issues that cannot be solved by other conversion degree-1 degree-2 assurance; infrastructure planting bytecode in a certain EFCM. At the same time, there is the support rate of eywords, these three pages are not easily di stinguished. However, with the is a computer program. But in page three eywords \(here, only one translator, employment T 4  0.094, conversion i I   T 4  0.313 T 6  0.268, employment T 6  0.107, prospect T 6  0.071, demand T 6  0.125, translator T 6  0.232 increasing T 6  0.018, growth T 6  0.036, population T 6  0.036, localization T 6  0.036, specialty T 6  0.036 Spanish T 6  0.036 prospect is a human or machine. In page one  root; grass person operating development apple development 002 Interpreter Vs. Compiler, denoted as translator prospect sun red hat programmer; person programmer programmer programmer; output T 5 0.071, compilation T 5 0.048, execution T 5 0.048, processor T 5 0.071, Perl T 5 0.095 programmer; output demand PSR PSR PSR eyword T 4 0.313, person T 4  0.063, programmer T 4  0.156, editor T 4  0.063, binary NSA platform; instruction soil soil interpreter interpreter interpreter interpreter interpreter binary;editor platform processor; execution platform platform; advantage translator; growth translator ;population translator; employment person;conversion translator ;population translator; prospect, translator interprete Perl bytecode; bytecode Perl interpreter, prospect, increasing, localization, specialty, translator, employment, population, growth, globalization shortage, demand, relay, Spanish, employer, occupation, skill, decade, expansion translator; growth increasing, translator demand; translator, specialty interpreter bcc32, binary, conversion, compilers, Borland, literate, task, package, programmer, editor,  person, string, rule operating, character bytecode; bytecode execution; processor demand translator localization demand translator, employment interpreter interpreter compilation; compilation interpreter interpreter interpreter translator prospect output; execution translator; increasing translator; employment prospect; translator, Spanish employment editor; programmer, editor platform; advantage instruction; instruction prospect; prospect prospect; prospect translator; increasing person; conversion programmer; programmer, person interpreter, BYTECODE, Pe rl, assembler, processor, 3gl assembly, PASCAL, platform compilation, output, instruction object, QBASIC, COBOL, advantage, programmer, visual, execution, Basic, manipulation execution; processor employment employment employment; demand prospect; prospect, employment translator; localization is apple sun apple planting e H sun to the page T 5 0.214, platform T 5 0.143, bytecode T 5 0.119, advantage T 5 0.048, programmer T 5 0.143 output FCM 002 002 002 002 002 002 002 002 002 002 002 002 002 002 002 002 002 002 002 002 002 002 002 002 002 002 002 002 002 002 002 002 002 002 002 002 002 002 002 002 002 002 002 002 002 002 002 002 002 002 002 002 002 002 002 002 002 002 002 002 002 002 002 002 002 002 002 002 002 002 002 002 002 002 002 002 002 002 002 002 002 002 002 002 002 002 002 002 bytecode; bytecode instruction; instruction editor;editor compilation compilation binary; editor output; execution bytecode bytecode editor; editor platform TABLE III G ROUP T WO CONTAINS THE SAME KEYWORDS  INTERPRETER  AND THREE PAGES ARE SEARCHED FROM G OOGLE   T 6 T j   which aims at the computer system security. In page three viewing VSM VSM VSM Webpage Two Webpage Three Webpage One EFCM EFCM denoted as Meaning of Computer Interpreter and Compiler, denoted as Interpreters and Translator-- Job Outloo 267 r}\267 267 267 267 267 267 and    editor person bytecode bytecode binary; editor programmer person programmer;person person which distinguishes the meanings of which is related with the assurance and the infrastructures supported by T 4 T 5 T 6 T 1 T 2  k i k i T j interpreter which means that contribution rate of the and and          267         eywords in three pages, the former two pages tell us the one similar event and the latter one tells us another. The former two pages tell that the Nati onal Security Agency more easily. So, in the former two pages eywords in the three types of models, and confidence of association rules in EFCM, PSR In Table II, although there are the common processor execution poses The titles of six pages are respectively denoted as  can be regarded as a computer program with the help of the association rules 


Group two Page three Interpreters and Translator \226 Job Outloo opf, B.,and Platt, J., editor s,Advances in Neural Information Processing Systems 18.MIT Press, Cambridge, MA  Fi Steyvers, and Padhraic Smyth. 2004. The author-topic model for authors and documents. In Proc. UAI, pp. 487\226494 418,523, 530, 531  McCallu m A Corrada-Emm anuel A., Wang X. The author-recipienttopic model for topic and role discovery in social networ 4\r\004 Page two Interpreter Vs. Compiler http://www.boo Page one NSA Offers Security Guidelines for Sun, Apple and Red Hat http://sun.systemnews.com/articles/141/4/Government 22604 Page one Meaning of Computer Interpreter and Compiler http://hubpages.com/hub/Meaning-of-ComputerInterpreter-and-Compiler  http://www.bls.gov/oco/ocos175.htm s. IDIAP, 2004  Blei, D M. and Lafferty J D. \(2006 Cor r e lated topic m odels. I n W e iss Y., Sch\366l Group one Page three Planting Apple Trees http://www.aboutappletrees.com/planting_apple_trees.s html nowledge is proposed based on the latest research of human concept learning, and many related theo ries of cognitive psychology about text understa nding are introduced 2\Secondly, we propose the machine-oriented nowledge as text assertion and text association rules holding different degrees, which have different understanding complex ity. Therefore, PSR is better than EFCM VI C ONCLUSION  In this paper, we have proposed power series representation of text nowledge representation 1 Firstly, power series representation of text eywords, which mixes the common k k k k k k k k k k k k k k k k k k in order that text es some contributions to the development of the nowledge, which supply the th eoretical foundation for the discovery of latent semantics A CKNOWLEDGMENT  The authors ac nowledge can be represented automatically, efficiently and compactly 3\ Thirdly, based on the machine-oriented nowledge the anony mous reviewers for the valuable remar s and advices given to this paper. Research wor Page two NSA helps Apple, Sun and Red Hat harden their systems http://www.h-online.co m/security/news/item/NSAhelps-Apple-Sun-and-Red-H at-harden-their-systems863889.html es R., McGuinness D. An Axiomatic Semantic Semantics for RDF RDF Schema and DAML+OIL, 2001\(11  Michael K. Sm ith, Deborah Mc Guinness, Raphael Volz, and Chris Welty.Web ontology language \(owl nov 2002  Fang, N; Luo X; Xu W. Measuring Textual Context Based on Cognitive Principles. Journal of Software Science and Computational Intelligence, Vol. 1, Issue 4. Pages: 61-89  Feld m a n J. \(2006 of human concept learning. Journal of Mathematical Psychology. \(50  Slo m an S A  L o ve B C    Ahn W  K    1998  Featur e centr ality and  conceptual coherence. Cognitive Science, 22, 189\226228  degree-2 hypothesis degree-2 hypothesis  we have studied the reasoning rule s of our model, which perform better than other models. Through the implement process of the reasoning rules, we can find the common information, differences and the collected domain A PPENDIX 1 TABLE IV T HREE ARE SIX W EB P AGES DIVIDED INTO TWO GROUPS FOR THIS EXPERIMENT FROM G OOGLE  Title Website  nowledge based on the hum an concept learning, which ma and PSR perform better than other models in expressing semantics However, EFCM can only express the whole contribution of all rags.com/research/interpreter-vscompiler-wcs nowledge and association rules included in text s. That is to say, PSR can distinguish these different sem antics from texts, which represents the common is supported by the Sh anghai Municipal Science and Technology Commission \(project no.09JC1406200\ the National Science Foundation of Ch ina \(project no. 90612010 and the Shanghai Leading Academic Discipline Project J50103 R EFERENCES   Tian, Y Y W a n g and K. Hu 2009  Tool for Autonomous Machine Learning Based on Concept Algebra Transactions of Computational Science, Spri nger, 5, 143-160  Feld m a n J Minim ization of Bool ean co m p lexity in hu m a n concept learning. Nature, 2000 407\(5\0-633  Rosen-Zvi,Michal, Tho m as Griffiths,Mar 


meani n g u s i ng t h e C ohen d ze Threats t o ity concern f actors t hat can inﬂuence our obs erv a t i ons  A l t hough bot h a s s o ci at i o n r ul e d i s co v e r y an d G r a n g e r cau sality test can statistically in f e r c o changes b et w een  l es or t e mporal l y cons equent changes  as in th e case o f G r a n g e r th is w o u l d n o t allo w t o c laim an yt hi ng about caus e ef fect rel a t i ons hi ps about changes o ccurri ng on a  l e and o n t hos e h a v i n g a change-coupl i n g re l a t i o n w i t h i t  Threats t o ex t e r n a l v a l i d i t y concern t he general i zat i o n of our  ndi ngs  A l t hough w e performed our anal ys es on four di f ferent s ys t e ms  b el ongi ng t o di f ferent domai ns and de v e l oped w i t h di f ferent p rogrammi ng l a nguages  w e are aw a r e t h a t a f u r t h e r e m p i r i c a l v a l i d a t i o n o n a l a r g e r s e t o f sy st e m s w o u l d b e b e n e  c i a l t o b e t t e r su p p o r t o u r  n d i n g s R TED W K As s t a t e d b y B o h n e r a n d Ar n o l d  1 5  am a j o r g o a l o f impact analys is is to identify the s oftw ar e w or k p r oducts af f ect ed by pr opos ed c hang es  Mos t of t h e e xi s t i n g c hange i m pact anal ys i s t echni ques aim a t e x p l o itin g t h e p r esen ce o f d e p e n d e n c ies i n t h e so u r ce code i dent i  ed by means o f s t a t i c anal ys i s 2  dynami c 3 or s p eci  c t echni ques s uch a s s t a t i c and or dynami c s l i c i n g 16  S o me i m pact anal ys i s t echni ques c ope wi t h p r o b l e m s s p e c i  c o f p a r t i c u l a r k i n d s o f a r t i f a c t s  for e xampl e  U ML model s 17  T here i s a l ar ge corpus of s t udi es rel a t e d t o c hange i m pact anal ys i s  h o w e v er a compl e t e s u rv e y of t h em i s be yond t h e s cope of t h i s paper  As m e n t i o n e d i n t h e i n t r o d u c t i o n  o n e l i m i t a t i o n o f e x i s t in g im p a c t a n a ly s is te c h n iq u e s is th a t th e y w o r k a s s u m in g the p res ence o f d ependencies b etween artif acts  Alternati v e approaches e x i s t t o o v e rcome s uch a l i m i t a t i on S o me of 4 18  are b as ed on info rmation r etrie v al i e the y ex p l o i t t h e t ex t u a l c o n t e n t o f t h e a r t i f a c t s  a s s u m i n g t h a t ac h a n g e t o a s o f t w a r e a r t i f a c t w i l l i m p a c t o t h e r  t e x t u a l l y sim ilar a r tif acts Th e w eak n e ss i s t h a t t h e se a p p r o a c h e s mi g h t f a i l t o  n d p e r t i n e n t l i n k s w h e n t h e s i mi l a r i t y i s lo w—wh ile ar tif acts a r e  i n d eed r elated—or m ight nd fa l s e p o s i t i v e s w h e n u n r e l a t e d a r t i fa c t s a r e t e x t u a l l y s i m i l a r  Ot h e r a p p r o a c h e s t h a t d o n o t r e l y o n c o d e d e p e n d e n c i e s a r e bas e d o n e xpert j udgment a nd code i n s p ect i o n 19  ho w ev e r  s ev e r a l s t u d i e s h av e s h o w n t h a t e x p e r t p r e d i c t i o n s a r e frequently incorrect or at leas t b ias e d b y s ubjecti v enes s  20  and s ource code i n s p ect i o n can be prohi bi t i v e l y e xpens i v e 21  The  rs t s t udi es ai med a t i dent i fyi ng l ogi cal change coupl i ngs w e re performed by G a l l al r s t o n c h a n g e releas es of a t elecommunication s ys tem  22  a nd then on commit h is tories e x tracted from C VS logs 23   T o o v er co m e th e lim itatio n s o f th e p r e v i o u s ch an g e im p act analys is approaches  a nd abo v e all t o c omplement t he recommendat i ons t h at coul d b e p ro vi ded b y t radi t i onal c hange impact analys is approaches  t wo a p p r o a c h e s w e r e d e v e l o p e d in p a r a lle l b y tw o d if f e r e n t r e s e a r c h g r o u p s  n a m e ly Y in g et  5 a nd Zi mmermann et al 1 6  B o t h us e a s s oci a t i o n r u les d isco v e r y  a wellk n o wn d a tam in in g p r actice—th at we s u mmari zed i n S ect i o n II-B t o d et ermi ne s e t s of  l es th a t w e r e c h a n g e d to g e th e r f r e q u e n tly in th e p a s t f r o m th e change hi s t ory o f t he code bas e  T he hypot hes i s i s t hat t he change patterns i nferred b y m eans o f a s s o ciation r ules i.e l e s c o c h a n g i n g i n t h e s a m e c h a n g e s e t  c a n b e u s e d t o recommend pot ent i a l l y rel e v a nt s ource code t o a d e v el oper performi n g a change T he y found t h at i n man y cas es t h e precis i on in the p erformed pr ediction i s o ften abo v e 70 and i n s ome cas es higher t han 90 w hile the r ecall o ften lo w e r th a n 2 5   a n d in s o m e c a s e s b e lo w 1 0   In a p re vi ous paper 7 w e i n t roduced t h e i dea o f u s i ng th e m u lti v a r i ate tim e s er ies f o r p r ed ictin g t h e im p act o f ac h a n g e  T h i s p a p e r c o n t i n u e s t h ee a r l y w o r k p r e v i o u s l y pr e s e nt e d a s f ol l o w s   we p r e s e n t a n e m p i r i c a l e v a l u a t i o n  t h r o u g h c h a n g e s fro m fo u r s o ft w a re s y s t e m s  o f G ra n g e r c a u s a l i t y t e s t  its co m p ar iso n with asso ciatio n r u le d isco v e r y  a n d th e ove r l a p o f t h e i r r e s u l t s  T h e p r e v i o u s w o r k o n l y s h o w e d th e a p p licab ility o f th e a p p r o ach o n a s u b s y s tem o f t h e a 7  md  o m p o s e d o f a b o u t 3 0  l e s o n l y   to tr ain t h e m u lti v a r i ate tim e s er ies m o d e l i n a w a y t h a t pro v i d es t h e  s t rengt h of t h e c hange coupl i n g rel at i on we u s e  l e c h a n g e f r e q u e n c i e s  i n s t e a d o f B o o l e a n va r i a b l e s i n d i c a t i n g w h e t h e r o r n o t  l e s c h a n g e d   we d e  n e a h y b r i d a p p r o a c h t h a t c o m b i n e s r a n k i n g o f bot h a s s o ci at i o n r ul es and G ranger  C AND W K IN P S In recent y ears  As s o ciation r ule d is co v e ry 11  has b een su c c e ssf u l l y a p p l i e d t o p r e d i c t c h a n g e c o u p l i n g s a m o n g  l e s by mi ni ng dat a from s oft w are repos i t o ri es 1  5  Thi s paper p erforms a n e mpirical comparis on of as s o ciation r ule di s c o v e ry w i t h a t echni que bas e d o n m ul t i v a ri at e t i m e s eri e s an aly s is a n d sp eciﬁcally o n th e G r a n g e r cau sality test  8   Re s u l t s o f a n e m p i r i c a l s t u d y p e r f o r m e d o n c h a n g e d a t a ex t r a c t e d f r o m C V S r e p o s i t o r i e s o f f o u r d i f f e r e n t s o f t w a r e sy st e m s F r e e B S D i 3 8 6  M y l y n  S q u i d  a n d R h i n o  sh o w th at  i o v e r a ll asso ciatio n r u le d isco v e r y e x h ib it a h ig h e r p r ecisio n th an Gran g e r cau sality test w h ile th e r ecall o f Gr an g e r cau sality test is i n m o s t cases h ig h e r f o r Gr an g e r cau sality o r at least c o m p a r a b l e an d  ii th e n u m b e r o f tr u e r eco m m e n d a tio n s p r o v id ed b y Gr an g e r cau sality test is h ig h e r th a n f o r a s s o c ia tio n r u le s  a n d a b o v e a ll th e tw o te c h n iq u e s p r o v id e a s e t o f r e c o m m e n d a tio n s h a v in g a v e r y lo w in te r s e c tio n  The a bo v e res u l t s s ugges t t h e opport uni t y of combi n i n g th e tw o te c h n iq u e s  A h y b r id te c h n iq u e o b ta in e d b y c o m bi ni ng ranki ng s c ores pro v i d ed by as s o ci at i o n rul es and b y Gran g e r cau sality allo w t o o b t ain  i a F measu r e a n d a r ecall 7 http://w w w  s am ba o r g 


hi gher t han t he t w o t echni ques a l one a nd i i  a p reci s i on i n bet w een t h e t w o  In s ummary  t he performed s t udy s ugges t s th e p o te n tia l o f m u lti v a r ia te tim e s e r ie s a n a ly s is to s u g g e s t change coupl i ngs compl e ment ary t o t hos e p ro vi ded b y a s so c i a t i o n r u l e s a n d t h e a d v a n t a g e s o f c o m b i n i n g t h e t w o te c h n iq u e s  Wo r k i n p r o g r e s s a i m s a t  i  u s i n g e n h a n c e d w a y s o f co m b in in g t h e tw o t ech n i q u e s  ii f u r t h e r v alid atin g t h e combi n ed t echni ques t hrough more cas e s t udi es as w e l l as by in v e stig atin g h o w ch an g e s t en d t o b e p r o p a g a ted i n p r o jects ha ving a d if ferent or ganizati on and  iii better unders tanding th e n atu r e o f c h a n g e co u p lin g i n f er r e d b y G r a n g e r cau sality te s t a s o p p o s e d to th o s e in f e r r e d b y m in in g a s s o c ia tio n r u le s  R EF ER EN C ES 1 T  Z i m m e rm a n n  P  W e i s g e rb e r  S  D i e h l  a n d A  Z e l l e r  Mi n i n g v er si on hi st or i e s t o gui de sof t w a r e changes  i n E 0 4  P r o c e e d i n g s o f t h e 2 6 t h In t e r n a t i o n a l C o n f e r e n c e o n Sof t w ar e E ngi neeri n g 2 0 0 4  p p  5 6 3  5 7 2  2 R  S  A rn o l d a n d S  A  B o h n e r   Im p a c t a n a l y s i s t o w a rd s a frame w o rk fo r c o m p a riso n   i n Pr o c e e d i n g s o f t h e C o n f e r e n c e on Sof t w ar e M ai nt enance  I C SM 1993 Mont r  eal  Quebec Ca n a d a  S e p t e m b e r 1 9 9 3 1 9 9 3  p p  2 9 2  3 0 1  3 J  L a w a n d G  R o t h e rm e l   W h o l e p ro g ra m p a t h b a s e d d y nami c i mpact anal ysi s   i n Pr o c e e d i n g s o f t h e 2 5 t h I n t e r n a tio n a l C o n fe r e n c e o n S o ftw a r e E n g in e e r in g  M a y 3 1 0  2 0 0 3  Po r t l a n d  O r e g o n  U S A I E E E C o m p u t e r S o c i e t y  2 0 0 3  p p  308–318  G  C anfora and L  C erul o Impact anal ysi s by mi ni ng sof t w a r e and c hange r e quest r e posi t o r i es  i n 11t h I E E E In t e r n a t i o n a l S y m p o s i u m o n S o f t w a r e M e t r i c s M E T R IC S 2005  1922 Sept em ber 2005 C om o I t al y I E E E C o m p u t e r So c i e t y  2 0 0 5  p  2 9  5 A  T  T  Y i n g  G  C  M u rp h y  R  N g  a n d M  C  C h u C a rro l l  P r ed i ct i n g s o u r ce co d e ch an g es b y m i n i n g r e v i s i o n h i s t o r y   IE E E T r a n s a c t i o n s o n S o f t w a r e E n g i n e e r i n g v o l  3 0  p p  5 7 4  586 S e p 2004 6 T  Z i m m e rm a n n  P  W e i  g e rb e r  S  D i e h l  a n d A  Z e l l e r  Mi n i n g v er si on hi st or i e s t o gui de sof t w a r e changes  IEEE Tr a n s  S o f t w a r e E n g  v o l 3 1 n o  6 p p  4 2 9  4 4 5  2 0 0 5  7 M  C eccarelli L Ceru lo  G C an fo ra a n d M  Di P e n t a  An ecl ect i c approach for c hange i m pact anal ysi s   i n Pr o c e e d i n g s of t h e A C M  I E E E 32r d I nt ernat i onal C onf er ence on Sof t w ar e En g i n e e r i n g  I C S E 1 0 1 0  N e w I d e a s a n d Em e r g i n g Re s u l t s N IE R  T r a c k  2 8 M a y 2 0 1 0  C a p e T o w n  S o u t h A f r i c a t o appear A C M P r e s s  2 0 1 0  ht t p    w w w  r cost  uni sanni o i t  md i p e n t a  p a p e r s  n i e r 2 0 1 0  p d f  8 C  W  J  G ra n g e r   In v e s t i g a t i n g c a u s a l re l a t i o n s b y e c o n o met r i c model s and cr o ssspect r al m et hods  a  vo l  3 7  n o  3  p p  4 2 4  4 3 8  1 9 6 9   N  D  M ukhopadhyay a nd S  Chatterjee Causality and pat h w a y s earch i n mi croarray t i me s eri e s e xperi ment   s v o l 2 3 n o  4 p p  4 4 2  4 4 9  2 0 0 7  1 0  A  H i n d l e  M  W  G o d fre y  a n d R  C  H o l t   M i n i n g re c u rre n t act i v i t i es  F o u r i er an al y s i s o f ch an g e e v en t s   i n ernatio n a l C o n fe r e n c e o n S o ftw a r e E n g in e e r in g  I C S E 2 0 0 9  M a y 1624 2009 V ancouver  C anada C om pani on V ol um e  pp 295–298 1 R Ag ra w a l T  Imie lin sk i a n d A  N  S w a mi  M i n i n g a s soci at i o n r ul es bet w een set s of i t ems i n l ar g e d at abases  in Pr o c e e d i n g s o f t h e 1 9 9 3 A C M S I G M O D I n t e r n a t i o n a l Co n f e r e n c e o n M a n a g e m e n t o f D a t a  W a s h i n g t o n  D  C  M a y 1993 A C M P r e s s  1 9 9 3  p p  2 0 7  2 1 6  2 J  D  H a m i l t o n  Ti m e S e r i e s A n a l y s i s P r i n c e t o n U n i v e r s i t y Pr e s s  J a n u a r y 1 9 9 4  3 J H Le e   Co m b i n i n g mu ltip le e v id e n c e fro m d if fe re n t propert i es o f w ei ght i n g s chemes  i n Pr o c e e d i n g s o f t h e 1 8 t h annual i n t e rnat i onal A C M S I G I R conf er ence on R e sear c h and de vel opm ent i n i nf orm a t i o n r et ri e v al N e w Y o r k  N Y  U S A  AC M  1 9 9 5  p p  1 8 0  1 8 8  4 D  S h e s k i n  Ha n d b o o k o f P a r a me t r i c a n d N o n p a r a me t r i c St at i s t i c al P r ocedur es  f ourt h edi t i on C h a p m a n  A l l  2007 5 R  A rn o l d a n d S  B o h n e r  Sof t w ar e C hang e I m pact A nal ysi s  Wi l e y I E E E C o m p u t e r S o c i e t y  1 9 9 6   M Kamkar   An o v ervi e w and comparat i v e cl assi  cat i o n o f pr ogr am sl i c i n g t echni ques  J S y s t  S o f t w  v o l 3 1 n o  3  1995 7 L  C  B ri a n d  Y  L a b i c h e  L  O S u l l i v a n  a n d M  M  S  ow ka A u t o m a t e d i m p a c t a n a l y s i s o f U M L m o d e l s   f Syst em s and Sof t w ar e v o l  7 9  n o 3  p p  3 3 9  3 5 2  2 0 0 6  1 8  A  C h e n  E  C h o u  J  W o n g  A  Y  Y a o  Q  Z h a n g  S  Z h a n g  and A  M i c hai l  C V S S ear ch S ear chi n g t hr ough sour ce code usi n g C V S comment s  i n ICSM 01 P r oceedi ngs of 17t h IE E E In t e r n a t i o n a l C o n f e r e n c e o n S o f t w a r e M a i n t e n a n c e  364  M L i ndv al l a nd K S a ndahl   P r act i cal i m pl i cat i ons of t r ace Sof t w ar e—P r act i c e and E x peri ence v o l  2 6 n o 1 0  pp 1161–1180 O c t  1996 0     H o w w e l l d o e x p e ri e n c e d s o ft w a re d e v e l o p e rs p re d i c t soft w a re change J S y s t  S o f t w  v o l 4 3  n o 1  p p  1 9  2 7  1998 1 S L Pﬂe e g e r  Sof t w ar e E ngi neeri ng T h eory and P r act i c e  Up p e r S a d d l e R i v e r  NJ  P r e n t i c e Ha l l  1 9 9 8   H Gal l  K Haj ek and M  J azayeri  Det ect i o n o f l ogi cal coupl i n g b ased on pr oduct r el ease h i s t o r y   i n Pr o c e e d i n g s o f th e I n te r n a tio n a l C o n fe r e n c e o n S o ftw a r e M a in te n a n c e  I C S M 98 1 9 9 8 p p  1 9 0  1 9 7   H Gal l  M Jazayeri  and J  K raj e wski   CVS r el ease h i s t o ry dat a f o r d et ect i n g l ogi cal coupl i ngs  i n 6t h I nt ernat i onal Wo r k s h o p o n P r i n c i p l e s o f S o f t w a r e E v o l u t i o n  I W P S E 2 0 0 3   12 S ept e m b er 2003 H e l s i n ki  F i n l and I E E E C o m p u t e r So c i e t y  2 0 0 3  p p  1 3  2 3  


                        





