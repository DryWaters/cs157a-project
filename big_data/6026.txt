Dr. Jordan Shropshire Associate Professor Department of Information Technology Georgia Southern University jshropshire@georgiasouthern.edu 
Analysis of Monolithic and Mi crokernel Architectures: Towards Secure Hypervisor Design 
 
Abstract 
 
This research focuses on hypervisor security from holistic perspective. It centers on hypervisor architecture the organization of the various subsystems which collectively compromise a 
virtualization platform. It holds that the path to a secure hypervisor begins w ith a big-picture focus on architecture. Unfortunately little research has been conducted with this perspective This study investigates the impact of monolithic and microkernel hypervisor architectures on th e size and scope of the attack surface. Six architectural features are compared: management API monitoring interface hypercalls, interrupts, netw orking, and I/O. These subsystems are core hyperv isor components which 
could be used as attack vectors. Specific examples and three leading hypervisor platforms are referenced ESXi for monolithic architecture; Xen and Hyper-V for micro architecture\. Th e results describe the relative strengths and vulnerabilities of both types of architectures. It is conclu ded that neither design is more secure, since both inco rporate security tradeoffs in core processes 
To achieve marked improvements in hypervisor security, it may be necessary to return to the drawing board. The majority of studies in this research space 
1 Introduction 
have so far provided incremental improvements in in security. Reconsidering the relationship between architecture and system risk could lead to significant reductions in risk The present study takes an initial step toward this goal by examining the vulnerabilities and security tradeoffs in hypervisor architectures Specifically, it compares monolithic and microkernel architectures. Monolithic hypervisors are completely contained within a single entity. Features such as hardware drivers, application program interfaces, and the virtualization stack are integrated into a thin layer 
of software which supports virtualization This platform exists wholly within security ring 0. By contrast, microkernel architectures consist of a relatively small hypervisor and a separate management partition. In this design, the hypervisor contains only the kernel, while the associated management partition contains drivers, virtualization managers, and administrative interfaces. Although both architectures perform the same risky processes, this analysis will indicate that they have different weaknesses and points 
of resilience [1 n ap preciation of th e sec u rit y  tradeoffs in each design is necessary in order to make informed acquisition decisions. By considering architectural weaknesses prior to developing new platforms, developers can integrate better controls and security features into their designs To understand the vulnerabilities in monolithic and microkernel architectures this research focuses on six hypervisor subsystems The subsystems serve as passages through the hardened perimeter. They have even been described as liab 
ilities in separate studies. If compromised, they may be used as potential attack vectors [2 3 T h ey are m a na g e m e n t i n ter f a ces  monitoring systems, hypercalls interrupts, I/O and networking. These interfaces serve as avenues into and out of the hypervisor and represent major attack vectors [2 o g a ug e th e sco p e of t h eir at tac k surfaces, the architectures ar e compared in terms of these subsystems The remainder of this paper is organized as follows: The following section provides background 
information on monolithic and microkernel architectures. It introduces examples of both architectures and discusses security issues related to security rings, trusted code base. After the background, the third section describes the threat model The fourth section analyzes the security of monolithic and microkernel architectures. It considers the impact of each subsystem on the scope of the attack surface. Finally, the last section provides concluding remarks and hint s toward future research 
2014 47th Hawaii International Conference on System Science 978-1-4799-2504-9/14 $31.00 © 2014 IEEE DOI 10.1109/HICSS.2014.615 5008 


Prior to conducting the analysis, some background information is necessary. Fir st, this section describes the basic components of hypervisors. Next, it addresses two relevant design issues: ring configuration and trusted code base. These factors influence the hypervisor attack surface. Finally, this section provides basic information on monolithic and microkernel architectures. The security implications of these architectures will be addressed in the analysis section All Type 1, bare-metal hypervisors perform the same basic job they act as an intermediary between virtual machines and underlying hardware. In order to share resources with hosted virtual machines, they abstract system hardware and broker usage requests Virtual machines may send these requests in the form of hypercalls. A hypercal l is a paravirtualization concept in which the virtual machine kernel is altered Instead of sending system calls which are intercepted by the hypervisor, they send deliberate system calls to specific subsystems. Hyperca lls are similar to system calls in that they bridge user-mode applications with kernel functions. Portions of the original virtual machine kernel are replaced with software that is engineered to interact with th e hypervisor directly. In response, hypervisors use interrupts to communicate with virtual machines. An interrupt is a signal sent to a processor indicating that an event needs immediate attention. The hypervisor receives these signals and determines which virtual machine should receive the interrupt. It also must ha ndle traps and exceptions resulting from one virtual machine while not impacting the hypervisor or other virtual machines To share processing capabilities among virtual machines, a scheduler is used. It abstracts the CPU into one or more virtual CPUs \(vCPUs\or each virtual machine. The vCPU appears as a normal CPU to virtual machines. To take advantage of multiprocessing, a host can be configured with multiple vCPUs. A vCPU in the hypervisor is akin to a process in a traditional operating system. Although a number of different scheduling algorithms exist, they all perform the same basic task. Resources such as networking and storage are also abstracted. They are usually represented by emulated devices, with a separate instance for each virtual machine. Even though their architectures differ, all major hypervisors use the same basic techniques to support virtual machine activity A defining feature of hypervisor architectures is the arrangement of security rings s e c u rit y ri n g i s  a hierarchical level of privilege within a computer system [5 a t e d co m m u n i t y Sec u r it y  rings are arranged from most privileged to least privileged. In most modern systems, they are numbered 0 through 3, where 0 is the innermost ring and 3 is the outermost. Ring 0 is usually reserved for the OS kernel. It interacts with hardware such as CPU and memory. If rings 1 and 2 are used, they correspond with privileged mode. This may include device drivers. Ring 3 is for user mode. It consists of untrusted applications. For the purposes of this research, ring 0 corresponds with the hypervisor, ring 1 corresponds with virtual machine kernel space, and ring 3 corresponds with virtual machine user space This arrangement mirrors descriptions from earlier studies Security rings limit the capabilities of executing programs by regulating access to shared memory They provide a security buffer against accidental or intentional corruption. A faul t or exception at an outer ring has less impact on system stability than an attack in an inner ring. Minimizing software access to kernel mode reduces security risks. With less trusted software there is a reduced likelihood of system destabilization A system of flags is used to associate permission level with specific memory segments.  A gate feature enforces these permissions. In order to cross between rings, a context switch occurs. A common design goal is to minimize the number of context switches a subsystem must make in order to perform a common task [6 y  g ati ng ac cess preve n ts prog ra m s  with reduced privileges from misusing resources that belong to trusted rings. Security rings correspond with CPU modes in some systems. This provides added hardware protection. It is noted that some hypervisors make use of advanced CPU features to run in special hardware-enabled security modes The Trusted Code Base \(TCB\includes components which support core system processes. For bare-metal hypervisors, this includes the hardware drivers, operating system, and software for abstraction and resource brokering. Its main responsibility is to sic functionality and security 7 A s w i t h m a ny  earlier  stu d ies of  hy per v isor  security, this research uses the definition of TCB that 8 A l so kn o w n as  
2.1 Hypervisors 2.2 Security Rings 2.3 Trusted Code Base 
 ensure the systemês ba is taken from the çOrange Book 
2 Background 
 
5009 


TSEC\escribes TCB as çall of the elements of the on which the protection is based.é The bounds of the 
the Trusted Computer System Evaluation Criteria system responsible for supporting the security policy and supporting the isolation of objects \(code and data TCB equate to the security perimeter referenced in some computer security literature. TSEC also states that the TCB should be as small as practically possible, considering the proc esses it must execute. It must be implemented in such a way that non-essential elements are excluded. Non-essential elements can be defined as components which do not need to be trusted in order to maintain normal operations [9 T o date  there has been little effort to define the components that hypervisors must consider to be part of their trusted code base All hypervisors perform the same basic tasks starting and maintaining virtual machines, abstracting system resources, and sharing hardware and assets Despite having a common purpose, their designs differ in order to meet specific performance expectations embody desired characteristics, emphasize certain roles, or limit inherent weaknesses [1 T h eir  differences can be summarized in terms of two common hypervisor designs: monolithic and microkernel architectures \(see Figure 1 Microkernel architectu res are designed to minimize code in the hypervisor space. Microkernel architectures retain few components within the actual hypervisor, making use a separate partition to handle networking, storage, hypercalls, and other support functions [10 T h e m a n a ge ment partition co ntains a n  independent operating system. It hosts the components which were shuffled out of the hypervisor. The management partition is considered part of the TCB This means that part of the trusted code base is retained outside of ring 0 in user space. It is given direct access to the kernel and system resources. It acts as an intermediary between virtual machines and the hypervisor kernel. Because the microkernel architecture makes use of a separate partition, the system is divided betwee n the hypervisor and the management plane To support virtual machines the microkernel hypervisor traps hardware requests and transfers them to the management partition. The partition processes the requests, funneling them through a virtualization stack before calling hardware drivers. Two widelyused hypervisors can be classified as having microkernel architectures. The first is Xen, an opensource platform sponsored by Citrix. Citrix sells cloud solutions which integrate modified versions of Xen The second platform is Hyper-V by Microsoft Although it is a relatively new entrant, it has a growing user base. Although Xen and Hyper-V utilize microkernel designs, their ar chitectures differ in some respects. In order to accurately compare hypervisor architectures, both platforms are included in this analysis In contrast to microkernel designs, monolithic architectures condense all the subsystems within a single entity. This includes the kernel and all of its subsystems, interfaces, and drivers. Compared to microkernel hypervisors, the monolithic architecture has a larger footprint. The entire hypervisor resides in ring 0, within kernel space. This means that the sum of its trusted code base lives in the most secure area Unlike the microkernel arch itecture, this design does not incorporate a management partition. Virtual machines are located directly above the hypervisor where a virtual machine monitor interacts with each guest. The virtual machine monitor receives hardware requests and from within the hypervisor Like microkernel architectures, monolithic architectures also support hypercall communication. However, the monolithic architecture does not integrate a separate partition For administration, external entities connect directly to the hypervisor via an application program interface. An example of a hypervisor with a monolithic architecture is the ESXi platform by VMware. ESXi is a bare-metal hypervisor offered as part of a larger cloud solution. Its major components are included the layer between the virtual machines and the hardware It expected that aggressors will have logical access to all hypervisor interfaces, but no physical access. Hackers are expe cted to pursue any weaknesses in the hypervisor attack surface Using 
3 Threat Model 
Figure 1: Microkern el \(left\onolithic right\rchitectures 
 
2.4 Monolithic and Microkernel Architectures 
5010 


size of the monitoring systemês footprint 
classic information security theory, the attack surface is defined as any part of the software that can be manipulated or is a potential vulnerability. An attack might stem from an entity with a virtual machine which is legitimately hosted on the hypervisor or it may be stimulated by an outsider. In the latter case, an attack might begin with a port scan of all virtual machines on the network. Finding a host with an open port, an attacker could compromise the associated application in order to gain entry into the virtual machine. Such attacks have been documented in the National Vulnerabilities Database 11 Once access i s  secured, the next step in the attack is to elevate privileges. A number of approaches have surfaced for achieving root level permissions[12  T h e pu rpose of  the attack may be to destabilize the hypervisor compromise other virtual machines, or disrupt hosted cloud services [13  T h e attack e r co u l d f o cu s on an y  number of vulnerable hypervisor subsystems This section describes the analysis of six features of hypervisors. For all of the elements, comparisons between monolithic and microkernel architecture are made. The analysis focuses on differences in subsystem footprint, distribution of trusted code, and impact of security ring configuration This section notes the vulnerabilities and security tradeoffs in the management interface The management interface allows remote agents to connect with a hypervisor and perform managerial duties such as initiating virtual machine migrations, provisioning hardware, and reconfiguring resource pools. An external agent may be automated or manually controlled. The management interface makes a prime target for attack. Once access is gained, attackers can manipulate software objects and classes for deviant purposes [15  F o r th e pu rpo s e of th i s research t h e  attack surface is interpreted as the breadth of classes and modifiable objects available to the application program interface  Microkernel architectures tend to require more configuration options. They need the flexibility to configure the operating system which controls the management partition. Hyper-V was found to support 14 main groups of classes and many thousands of objects. The majority of the objects are not associated with virtualization, but other functions built into the server in the management partition. This interface offers a high degree of flexibility in customizing the hypervisor, virtual machines, networking, and I/O. To cope with the risk of an extensive API, an access control platform is included. The Xen management interface includes 45 classes of objects. Access to all of these classes of objects creates many opportunities for malfeasance. Xen also includes fine-grained controls for limiting system access and enforcing permissions The management interfaces for the microkernel hypervisors have relatively large attack surfaces. This is because they also support the administration of an operating system in the management partitions Unlike microkernel designs, monolithic architectures do not need to manage operating systems in separate partitions. Therefore, the management interface for the monolithic architecture requires fewer classes than the microkernel architecture. For instance the ESXi management interface consists of 21 device profiles which can be modified to various degrees. To restrict user activity and improve security, ESXI makes use of a stripped down interface called BusyBox. This executable allows for basic file system interaction while restricting other usage. Based on number of objects in the management API, it appears that the monolithic architecture has a smaller attack surface. However, this does not mean that the microkernel architecture is better. Although the constrained management interface reduces the attack surface, it limits system customization because flexibility and supporting u tilities are not available The monitoring interface allows external devices to query a hypervisor, receive metrics of system state prepare virtual machine performance reports, or poll hardware. Attackers would be interested in tapping into the monitoring system and changing reported metrics [4 h ey co u l d u n d errep o rt sy ste m  load i n  order to hide illicit activities. To do this, they would exploit a seam in the monitoring framework [17  Larger footprints provide more opportunities for exploitation [18  T h e ref o re, this st u d y co nsiders t h e  in terms of the number of steps taken to receive a request, retrieve the monitoring data, and respond to the request. These metrics correspond with those used in an earlier study of hypervisor architecture [18 19   Hypervisors patterned in the microkernel architecture were considered first. Xen was found to be the longest at 14 steps. It was top heavy; 9 steps were conducted in ring 3 \(64.29%\ 2 steps were conducted in ring 1 \(14.29%\s were completed in ring 0 \(21.49%\Hyper-V was shorter than Xen at 13 steps.  5 of these steps occurred in ring 3 \(38.46%\5 were in ring 1 \(38.46%\, and 3 were in ring 0 \(23.8 
4 Analysis 
4.1 Management Interface 4.2 Monitoring 
 
5011 


Figure 2: Hyper-V monitoring path 
For purpose of illustration, the Hyper-V monitoring process is depicted in Figure 2 and the 13 steps are described here:  \(1\e virtual machine management service \(VMMS\ receives a request for monitoring data. \(2\he VMMS transfers to the WMI-provider \(windows management instrumentation\. \(3\he WMI reads the request and triggers the virtual interface driver \(VID\ ring 1 to gather the performance data. \(4\he request down the virtstack. \(5\he virtstack references the WinHV library in order to formulate the request 6\he root partition issues a hypercall to update the counter. \(7\dware performance is observed \(8 Collected statistics are moved to a shared memory page for retrieval by root partition. \(9\he hypervisor interrupts the root partition with the results. \(10\he performance data is moved up the virtstack to the VID 11\The virtual machine kernel interrupts the WMI with the results. Context switches from ring 1 to ring 3. \(12\hen the metric is prepared, the operation is passed to the VMMS. \(13\ The interface finishes the request by sending one or more datagrams across the network The ESXi hypervisor, an example of monolithic architecture, required 10 steps. All steps were completed in ring 0. The difference in process length may be attributed to the inclusion of the management plane. Monolithic architectur es are more compact While they leave a smaller attack surface they force all software into ring 0, risking the trusted code base This section analyzes weaknesses inherent in the hypercall subsystem. This interface is susceptible to attack by rooted virtual machines [20  Virtu al  machines use hypercalls to communicate with hypervisors. Each hypervisor platform supports a library of hypercalls In the wrong hands, these expedited hardware requests can be used for a number of attacks [15  T h e y can be used to co n d u ct Do S  attacks against other VMs or aimed at the hypervisor itself. With respect to the attack surface, it is assumed that larger hypercall libraries increase risk [21  T h e y  provide more tools with which to attack the hypervisor or deprive other virtual machines of hardware resources The analysis shows that Xen and Hyper-V support 100 and 113 hypercalls, resp ectively, wh ile th e ESXi 3.5 VMI module uses 82 hypercalls. It appears that microkernel architectures requ ire more hypercalls than monolithic architectures This is because microkernel hypervisors must provide hypercalls for supporting virtualization processes and for interaction with the OS in the management partition. Although microkernel architectures have a larger attack surface they are not necessarily more vulnerable than monolithic architectures Because a simple count of hypercalls provides one-dimensional perspective, a deeper inspection is necessary. To characterize the potential damage a hypercall library could invoke, this study projected the impact that each hypercall could cause if it was used maliciously. Hypercalls for the ESXi, Xen, and HyperV platforms were sorted into one of four groups based on the degree of potential damage. The first group of hypercalls is characterized as non-critical threats. The second group consists of hypercalls which could be used for passive activities such as system blueprinting or data gathering. The third group consists of hypercalls which could cause temporary system damage. The fourth group consists of hypercalls which could cause long-term damage. This method of assessment is based on an earlier study of Xen hypercalls [17  The results of the categorization indicate that the monolithic architecture supports more dangerous calls Over 75% of ESXi hypercalls fell into the third or fourth categories, indicating that they can cause short term or long term damage. This is in contrast the microkernel architectures, which supported more benign hypercalls \(see Ta ble 1 A key architectural feature which explains this difference is the inclusion of a management partition. The management partition serves as a buffer, processing hypercalls while minimizing access to the hypervisor kernel. The monolithic architecture lacks such a buffer and processes hypercalls within the hypervisor The entire process is performed in ring 0, potentially risking the TCB To recap, even though the monolithic architecture requires fewer hypercalls, those which are included present greater security risk 
4.3 Hypercalls 
 
5012 


The other aspect of virtual machine-hypervisor communication is the interrupt subsystem. Interrupts are used to communicate with virtual machines Hypervisors emulate the system hardware which is ordinarily used to generate interrupts. Though seemingly harmless, a rapid flow of interrupts will overwhelm a virtual machine, impeding its ability to support the cloud o do th is  attack e r s  w o u l d  need to gain access to the interrupt system and load the conduit with trivial interrupts The location of the emulator and its interrupt descriptor table has implications for information security. Emulators which are located in us er space are more susceptible to tampering. An attacker could trigger interrupts aimed at specific virtual machines causing denial of service. In contrast, emulators which are located in privileged zones are harder to reach However, if they are used as an attack conduit they would give access to the hypervisor kernel. The microkernel architecture feat ures an interrupt emulator in the management partition. The emulator exists in ring 3. They operate with minimal permissions but exist in a zone which has more attack vectors. The monolithic architecture retains its interrupt emulator in the hypervisor The emulator operates with more permissions than necessary, but exists in a more secure location This section describes the security risks and tradeoffs affecting the networking component The network subsystem provides each virtual machine with its own emulated network adapter. Traffic leaving a virtual machine is routed through the virtual network passed down the virtualization stack, and through the physical NIC before entering the network.  The network subsystem encompas ses a number of different elements, including hardware, drivers, shared storage and virtualization software. The network subsystem is a primary target for attack [17 If a v i rt u al m a c h ine  can be starved of traffic then the cloud will be disrupted. Alternatively attackers may seek to read or modify network packets by tapping into the network stack. It is necessary to mi nimize the size of this attack surface and expose as little as possible. For the purposes of this assessment, the attack surface is based on the distribution of trusted code and the number of steps in a basic network operation. This approach is based on an earlier study of the risks in backend interfaces [18   Regarding code distribution, microkernel architectures split the network process between the management partition and the hypervisor. The network subsystem is divided between kernel space in the hypervisor and user space in the partition However the impact of an attack will be limited to the management partition. In contrast to the microkernel 
Table 1: Ranking of Hypercalls for Microker nel \(left and middle and Monolithic \(right Architectures 
Microkernel Architecture Monolithic Architecture Microsoft Hyper-V Citrix Xen Server VMware ESX \(3.5 Non Critical Threat 2 Non Critical Threat 0 Non Critical Threat 3 Prospective Information Gathering for Illicit Purposes 19 Prospective Information Gathering for Illicit Purposes 7 Class 2 Prospective Information Gathering for Illicit Purposes 16 Class 3 Causation of Temporary or Reversible Damage 20 Causation of Temporary or Reversible Damage 20 Causation of Temporary or Reversible Damage 40 Causation of Permanent or Irreversible Damage 13 Causation of Permanent or Ir reversible Damage 11 Causation of Permanent or Irreversible Damage 19 
Hypercall Category  Calls Hypercall Category  Calls Hypercall Category Calls Class 1 Class 1 Class 1 Class 2 Class 2 Class 3 Class 3 Class 4 Class 4 Class 4 4.4 Interrupts 4.5 Networking 
 
5013 


make the network subsystemês vulnerable  
architecture, the entire network process occurs in ring 0 for monolithic architectures To compare the length of the network subsystems we counted the number of steps in the process of retrieving data from virt ual machines, passing it through the virtualization stack, and sending it out network adapters. A combination of manual code inspection and stack trace was used in this analysis The results indicate that the distributed subsystem in the microkernel architecture has a longer path. The network process took 31 steps for Hyper-V, the longest of all hypervisors. 14 of these steps occurred in ring 3 \(45.16%\2 occurred in ring 1 \(38.71 and 5 steps in ring 0 \(16.13%\ The network process took 25 steps for the Xen hy pervisor. 9 of the steps occurred in ring 3 \(36 10 occurred in ring 1 \(40 and 6 occurred in ring 0 \(24 Compared with the microkernel design, the network process in the monolithic architecture is more condensed. ESXi required just 20 steps to collect data from virtual machines and send it across the network Only 1 of the 20 steps occurre d in ring 3 \(5%\s occurred in ring 1 \(15%\e remaining 16 occurred in ring 0 \(80 For purposes of illustration, the ESXi network process is depicted in Figure 3 and the 20 steps are described here: \(1 pplication issues a system call to initiate an asynchronous network operation. \(2\he guest OS starts the network operation. \(3\he hypervisor traps the instruction and copies the packet into a temporary data store in ring 0. \(4\The hypervisor returns to the guest OS in ring 1. \(5\he guest returns to the appropriate application in ring 3 6\The emulated NIC \(vlance instance for strict virtualization\ device polls the temporary store and retrieves the packet. \(7 The emulator queries VMFS for the MAC address with the packet. \(8\he associated MAC address is r eturned for pairing with the datagram. \(9\he formed packet is retrieved by the virtual switch for routing. \(10\The packet exits the virtual switch process and enters the network stack 11\ The network stack finalizes the frame header and passes it to the drivers. \(12\ As the packet is being sent, a message is passed up the stack to inform the appropriate virtual NIC. \(13\The device driver transmits the packet onto the network. \(14\metime later, the hypervisor receiv es a response packet and stores it in a temporary buffer. \(15\The packet is passed up the network stack 16\he received packet elements enter the virtual switch for processing. \(17 The emulated NIC accepts the packet and reformats the header. \(18\The packet is loaded into shared storage using the VMbus. \(19 An interrupt is sent to the virtual machine kernel, alerting to the received packet. \(20\The guest kernel interrupts the guest application It appears that the network subsystem is more distributed in the microkernel architecture This minimizes the size of the hypervisor and improves its stability. This comes with the tradeoff of forcing trusted code to execute outside of ring 0 [22  In  contrast with the microkernel design, the monolithic architecture features a more condensed network subsystem. The majority of the network process occurs in kernel space. From a design standpoint, this as well as increases risk to the hypervisor kernel. With more lines of code in ring 0, the potential attack surface increases The I/O subsystem is another backend interface. It abstracts a physical device and provides a unique software emulation for each virtual machine. Although all hypervisors perform the same basic storage process, their I/O subsystems differ in several respects 6 e m o n o lit h ic archi t e ctu r e, th e I/O process is  condensed into hypervisor ring 0. This simplifies the architecture but increases kernel vulnerability. As more code is executed in trusted mode, the risk to the kernel increases and it becomes harder to distinguish between trusted and standard code The microkernel architecture stretches the I/O process across several rings from ring 3 in the 
4.6 Storage 
Figure 3: ESXi Network Path 
 
5014 


a virtual machineês request to write data to storage 
management partition to ring 0 in the hypervisor Because the I/O subsystem is part of the trusted code base, it should be retaine d in restricted areas However, the microkernel architecture locates part of the subsystem in less secure areas. Although this increases the risk that the I/O process will be compromised, it reduces access to the hypervisor kernel For each of the architectures, the length of the I/O path was measured in terms of steps. This approach to assessing I/O process length was used in a previous study of hypervisor security [18 23 T h is beg i n s  w i th  winds through the hypervisor virtualization stack, and ends with a completed write cycle. The storage process in the microkernel architecture was found to be longer. It passes thr ough a management partition before entering th e hypervisor Hyper-v was found to consist of 25 steps. 4 steps occurred at ring 3 \(16 15 steps occurred at ring 1 60%\d 6 occurred in ri ng 0 \(24%\t 23 steps Xen is nearly as long. Its ring 3 contains 6 steps 26.09%\g 1 consists of 12 steps \(52.17%\d ring 0 includes 5 steps \(21.74 To illustrate the storage process, the Xen I/O architecture is depicted in Fi gure 4 and the 23 steps are described here: \(1\The app lication issues a system call to initiate an asynchronous I/O operation. \(2\he guest OS starts the I/O op eration by passing data through the file structure. \(3\he instruction that starts the I/O is trapped by the hypervisor. \(4\he hypervisor returns to the guest OS given that this is an asynchronous I/O request. \(5\ The guest returns to the appropriate application. \(6\The hypervisor passes the I/O operation to Dom0 via the XenBus. \(7\he OS in the root partition passes the request to the IDE Emulator in the virtualization stack. \(8\he IDE emulator passes the request to the Xenstore agent. \(9 The trapped data is sent from Xenstore to the virtual file system. \(10\ The request is sent to the I/O stack in the kernel ring. \(11\ The I/O stack sends the data to the device drivers residing in Dom0. \(12\ The root partition uses the IOMMU to start the write process 13\ The OS returns to the virtual ring 3 software given that this is asynchronous. \(14\ After the write operation is complete, an interrupt is sent to the hypervisor. \(15\ The hypervisor interrupts Dom0 to let it know the I/O operation finished. \(16\ The device driver passes this message to the I/O stack. \(17\ The root partition updates the virtual file system. \(18\ The virtual hard disk informs the Xenstore that the I/O operation has completed. \(19\ Xenstore updates the IDE emulator. \(20\ The IDE emulator completes the I/O operation and issues a sy stem call to wake up the guest. \(21\ The root partition issues a hypercall to the hypervisor to update the guest. \(22\ An I/O complete interrupt is delivered to the guest via the Xenbus. \(23 The guest OS sends a corresponding interrupt to the application to alert it that th e I/O operation completed Based on these results, it appears that the bulk of the storage process occurs in ring 1 for microkernel hypervisors. Ring 1 contains the virtualization stack and the device drivers. Compared with microkernel hypervisors, the storage process in the monolithic hypervisor is relatively short It includes 16 steps. 1 of these steps occurs in ring 3 \(6.25%\ occur in ring 1 18.75%\d 12 occur in ring 0 \(75%\ The only parts of the I/O process wh ich occur outside of the hypervisor involve virtual machine interaction. The implication is that more privileges are given to the I/O subsystem than is necessary, putting the hypervisor kernel in jeopardy This manuscript explored the vulnerabilities and security tradeoffs in monolithic and microkernel architectures. It assessed the impact of six architectural features on the scope of the attack surface. A number of architectural differences had implications on the attack surface. One of the primary differences between architectures is the distribution of trusted code into a separate management partition. This improved hypervisor kernel isolation but increased the vulnerability of subsystems which had been migrated out of the hypervisor. Be cause both architectures have inherent weaknesses it is not possible to conclude that 
Figure 4 Xen Storage Path 
5 Conclusion 
 
5015 


1 C. He n ley   H y p er V Microk e rn elized o r Mo n o lit h ic  in ed: Microsoft Technet, 2011 2 Y. Oy a m a T  G i an Y. Chu b ach i, T  Sh in ag aw a, an d K  Kato, "Detecting malware signatures in a thin hypervisor," in Trento, Italy, 2008, pp. 1807-1814 3 F A r m a n d an d M G ien A P ractic al L o o k at Micro Kernels and Virtual Machine Monitors," in Las Vegas, NV, 2009, pp. 1 - 7 4 J. McDe r m o t t, B. Mo n tro se  M. L i J. Kirb y  an d M Kang, "Separation virtual machine monitors," in New Orleans, LA, 2012, pp. 419428 5 P. Ka rg er an d A  He rb ert A n  A u g m en ted Cap a b ility  Architecture to Support Lattice Security and Traceability of Access," in  Oakland, CA, 1984, pp. 2-12 6 T  Sh in ag aw a, E. Hid ek i, K. T a n i m o to S. Ha se g a w a K  Kourai, Y. Oyama, E. Kawai, K. Kono, S. Chiba, Y. Shinjo and K. Kato, "BitVisor: a thin hypervisor for enforcing i/o device security," in London, UK, 2009 7 R. Sailer, E. V a ld ez, T  Ja eg er, R. Perez, L. van Doorn, J Griffin, and S. Berger, "sHype: Secure hypervisor approach to trusted virtualized systems," J. Watson Research Center2005 8 D. o  De f e n s e   D ep artme n t o f De f e n s e  T r u sted  Computer System Evaluation Criteria," Department of Defense1985 9 J. Rus h b y  De sig n an d V e rif ica tio n o f Secu re Sy ste m s   in  Pacific Grove, CA, 1981, pp. 12 21 10  P  Co lp M. Na n a v a ti, J. Zhu  W   A iello G  Cok e r T   Deegan, P. Loscocco, and A. Warfield, "Breaking up is hard to do: Security and functionality in a commodity Hypervisor," in Cascais, Portugal, 2011, pp. 189-202 11 NIST  Na tio n a l Vuln erab il ities Da tabase   2013 12 D P e rez-Botero, J. Szef er and R. Lee, "Characterizing hypervisor vulnerabilities in cloud computing servers," in Hangzhou, CN, 2013, pp. 3-10 13  Microsof t  S ecu rity Bulletin s  2010 14 NIST  Na tio n a l Vuln erab il ities Da tabase   2013 15  L  McDa n iels an d K. Na n ce I d e n t ify i n g  W e ak n e ss es  in VM/Hypervisor Interfaces," in Wailea, HI, 2013 pp. 5089 - 5095 16  M. Bo lte, M. Siev ers G. Birkenheuer, O. Niehorster and A. Brinkmann, "Non-intrusive virtualization management using libvirt," in Leuven, BE, 2010, pp. 574-579 17 C  L i A  R a g huna t h a n a n d N  J h a   S e c u r e Vi r t ua l  Machine Execution under an Untrusted Management OS," in Miami, FL, 2010, pp. 172 - 179 18  P  Ka rg er an d D. Saff o rd   I/O f o r V irtu a l Mach in e  Monitors: Security and Performance Issues vol. 6, pp. 16 - 23, 2008 19 G  Cok e r X e n Secu ri ty Mo d u els X SM  in  San Jose, CA, 2006 
one is more secure than the other. Regardless of the size of the footprint or th e type of architecture, wellwritten and tested kernel code will provide better security. At best, it could be said that they meet different, competing objectives. Microkernel designs have minimal kernels and offer highly customizable management planes. They allow for tailored solutions and simplify the development process Monolithic architectures are preconfigured with necessary drivers and software in the trusted zone They require less domain knowledge to set up and provide fewer options for tampering This analysis will pr ove valuable to both IT professionals and softwa re engineers. Enterprise architects and information security professionals are often forced to make acquisition decisions will less than complete information. This research identified a number of factors to consider before implementing new technologies. However, the present study should not be considered comprehensive. Other design factors should be elicited in future research. This study should also be of interest to software engineers. Often security is considered late in the software development cycle. By analyzing security implications at the architectural level, this research attempts to incorporate security concerns earlier in the design process. Future studies should focus on approaches to compensating for security weaknesses in each type of architecture 
Cloud Computing Proceedings of the 27th Annual ACM Symposium on Applied Computing 6th IEEE Consumer Communications and Networking Conference CCNC Proceedings of the 28th Annual Computer Security Applications Conference 1984 IEEE Symposium on Security and Privacy Proceedings of the 2009 ACM SIGPLAN/SIGOPS international conference on Virtual execution environments 8th ACM Symposium on Operating System Principles 23rd ACM Symposium on Operating Systems Principles http://nvd.nist.gov  Proceedings of the 2013 international workshop on Security in cloud computing http://technet.microsoft.com/en-us/security/bulletin/MS10010#section1  http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-20131920  46th Hawaii International Conference on System Sciences \(HICSS Proceedings of the Conference on Design, Automation and Test in Europe DATE '10 2010 IEEE 3rd International Conference on Cloud Computing \(CLOUD IEEE Security Privacy Xen Summitt 
 
6 References 
 
5016 


IEEE Security Privacy IEEE Security & Privacy 27th IFIP TC 11 Information Security and Privacy Conference, SEC 2012 I/O processing in a virtualized platform: a simulation-driven approach VEE '07 
20 K. Na n ce, M. Bis h o p  an d B. Ha y    V irtu a l Mach in e Introspection: Observation or Interference vol. 6, pp. 32-27, 2008 21 Q. L i u  C  W e n g M. L i an d Y. L u o   A n In V M  Measuring Framework for In creasing Virtual Machine Security in Clouds vol. 8, pp 56-62, 2010 22 F  G a d a leta, N. Nik if o ra k is, J. Mu h lb e r, an d W  Joo se n  HyperForce: Hypervisor-enforced execution of securitycritical code," in Heraklion, Crete, Gr, 2012 pp. 126-137 23  V  Chad h a R Figu eu red o R  Illikk a l, R. Iy er, J. Mo se s and D. Newell, "I/O processing in a virtualized platform: a simulation-driven approach," in  San Jose, CA, 2007, pp. 116-125 
 
5017 


    11   Figure 21 Tail functions for the spacecraft power consumption \(due to data availability only ADCS components and avionics board are considered in this plot\. The plot shows results for data statistic, two expert statistics \(proportional and bisection weights\ and two Bayesian statistics. The vertical dotted and dashed lines indicate t he estimates at PDR and CDR. It can be noticed that in this case the statistics \(especially Bayesian\ fail in recognizing the underestimation at PDR  Differently from the other cases the risk analysis for the total power consumption shows some problems Specifically the statistics do not seem to identify the underestimation of the initial PDR estimate  The cause of this issue depends mostly on the estimates of the power consumption for the ADCS components, since the estimates of the power consumption for the avionics board seem to be more accurate Future work will focus on improving estimates for the ADCS components maybe developing a specific expert elicitation interview with control experts only  The last results of this paper were computed performing the analysis of variance The analysis considers how the variance of each factor component or subsystem affects the total variance The objective of this analysis is to identify the main drivers for mass and power fluctuations To compute the analysis [4   th e h y p o t h esi s  o f  i n d ep en d en c e between the distributions of the single components is assumed Hence the variance of fluctuations for mass and power is the sum of the single variances   4  5  The variance proportions coefficients are defined as the ratio of the variance of each component to the total variance They are computed as  6  7  The coefficients for mass fluctuations are shown in Figure 22  The coefficients for power fluctuations are shown in Figure 23     Figure 22 Analysis of variance for the spacecraft mass estimates. According to all the statistics, the components of the control system together with the avionics board seem to be the components that show the biggest variance in their estimation  


    12   Figure 23 Analysis of variance for the spacecraft power consumption estimates. The statistics offer different results on which component seems to be the principle driver for the variance of the power consumption estimate  Analysis of variance shows that all the statistics identify ADCS and avionics board components as the major drivers for the variance in the estimation of the total mass Regarding the power consumption, the analysis of variance presents conflicting results according to experts and Bayesian statistics the ADCS subsystem is the main driver of the variance, while according to data statistic the avionics board is the main driver This difference can also be correlated with the issues observed in the total powe r consumption probability density function Figure 20 and 21 Future work will focus on a more detailed analysis of the control system for the spacecraft A final comment is related to the weighting of the distributions In this analysis two weighting schemes have been used the proportional scheme and the bisection scheme While in previous works focused on communication system design only  1   5    3    4   the bisection rule achieved substantially better results in the case of this paper the two methods provide very similar outcomes and they both give reasonable estimates However since this is the first case in which the methodology has been applied by the authors to the entire spacecraft design, it is too early to claim that in all the cases the two schemes will perform in the same way More test cases need to be analyzed and additional interviews with experts need to be performed  Conclusions and suggestions for future work are presented in the next section  4  C ONCLUSIONS  This paper presents the first attempt to extend the probabilistic approach to design risk to the entire spacecraft design This approach has been developed initially by the authors primarily for the design of the communication subsystem. In this paper, the authors extend the approach to the different subsystems and focus their effort on small spacecraft which are becoming increasingly more developed in academia space agencies and industries The methodology is extended to the entire spacecraft the database now includes data on several spacecraft components and the expert elicitation interview includes questions on the different subsystems. A university satellite mission \(CASTOR\ developed at MIT is used as a test case Results show that the methodology is effective in analyzing each component and in identifying whether the initial estimate of mass and power consumption made at PDR was an overestimation or an underestimation Specifically the tail functions provide useful insights which can be applied by the engineers while designing the spacecraft. The system results are obtained by convolution of the results obtained for the single components and they show that the model is able to clearly identify underestimation for the spacecraft mass while it does not perform as well for the power consumption. Similar results are obtained in the analysis of variance proportions Future work will be dedicated to analyzing the issue on the power consumption estimate as well as in developing specific statistic al  approaches to include newly developed payloads for which no previous data are available or for which expertise in the field is somehow limited Finally future work will also focus on extending the model to the design of larger spacecraft than small satellites and to the design of satellite constellations  5 ACKNOWLEDGMENT  Part of this work was performed at the Jet Propulsion Laboratory California Institute of Technology under a contract with the National Aeronautics and Space Administration Part of this work was carried out at the Space System Laboratory Massachusetts Institute of Technology 6 APPENDIX  A breakdown of mass and power consumption data for each of the components at PDR and CDR is shown in the following table Table 2: Values of mass and power consumption at PDR and CDR for each of the components analyzed Component  Mass PDR Kg  Mass CDR Kg  Power PDR W  Power CDR W  Solar Panel  3.34  5.066  0  0  


    13  Battery  3.2  2.64  70  50  Avionics Board  0.35  0.21  4  1.8  Satellite Structure  4.82  15.09  0  0  Magnetometer  0.01  0.01  0.03  0.03  Sun Sensor  0.03  0.03  0.08  0.075  GPS receiver  0.02  0.32  0.5  0.8  IMU  0.02  0.16  0.8  0..285  Reaction Wheels Assembly  0.12  0.21  1.2  7   R EFERENCES    1   A Babuscia Statistical Risk Estimation for Communication System Design Ph.D Thesis Massachusetts Institute of Technology, 2012  2   A Babuscia and K M Cheung Statistical Risk Estimation for Communication System Design IEEE Systems Journal vol. PP, no. 99, pp. 1 12, 2012  3   A Babuscia and K M Cheung Statistical Risk Estimation for Communication Systems Design A Prelimi nary Look The Interplanetary Network Progress Report Vols. 42 188, pp. 1 33, 2012  4   A Babuscia K M Cheung and D W Miller Statistical Risk Estimation for Communication System Design: Development of Optimization Frameworks," in IEEE Aerospac e Conference Big Sky, Montana, 2013  5   A Babuscia and K M Cheung An approach to perform expert elicitation for engineering design risk analysis methodology and experimental results Journal of the Royal Statistical Society Series A Oct  2013   6   V Cortellessa Model Based Performance Risk Analysis IEEE 2005  7   L Meshkat A Holistic Approach for Risk Management During Design IEEE 2006  8   F. Barrientos, I. Tumer and D. Ullman, "Design Teams Complex Systems and Uncertain ties IEEE 2005  9   W L Oberkampf J C Helto C A Joslyn S F Wojkiewicz and S Ferson Challenge problems uncertainty in system response given uncertain parameters," Vols. 85\(11 19\, 2004  10   Y Asnayr V Bryl and P Giorgini Using risks analysis to evaluate alternatives IEEE 2006  11   M Fuchs and A Neumaier Autonomous Robust Design Optimization with potential clouds Reliability and Safety 2009  12   M Fuchs A Neumaier and D Girimonte Uncertainty modeling in autonomous robust spacecraft system design in Proceedings in Applied Mathematics and Mechanics 2007  13   M. Fuchs and A. Neumaier, "Potential based clouds in robust design optimization  Issue on Imprecision of Statistics and Applied Mathematics 2008  14   N O Siu and D L Kelly Bayesian parameter estimation in probabilistic risk assessment Reliability Engineering and System Safety vol 62 pp 89 116 1998  15   A. Babus cia, M. M. McCormack, M. Munoz, S. Parra and D W Miller MIT CASTOR Satellite development  implementation and testing of the communication system Acta Astronautica vol 81 pp. 111 121, 2012     


    14  B IOGRAPHY  Alessandra Babuscia received her  B.S and M.S  degrees from the Politecnico di Milano Milan Italy  in 2005  and 2007 respectively and her  Ph.D from the Massachusetts Institute of Technology  MIT Cambridge in 2012  She has been  a Post Doctoral Associate with  the Space System Laboratory MIT She has developed  communication systems for different university  missions  CommCube 1, CommCube 2, TSat, CASTOR, ExoPlanet TerSat   TALARIS She is currently Telecommunication E ngineer in the  Communication  Architecture Research Group NASA Jet Propulsion  Laboratory in  Pasadena CA Her current research interests include communication  architecture design st atistical risk estimation expert elicitation inflatable antennas commun ication system design for small satellites and CubeSats multi disciplinary design  optimization mission scheduling and planning  Dr Babuscia received the Amelia Earhart Fellowship in 2010 and 2011  became a Gordon Engineering Leadership Fellow in 2010 an d 2011 and  received the Teaching Assistant Award from the MIT Aeronautics and  Astronautics Department in 2010, and the Top Graduate Award in the B.S  Program in 2005 and in the M.S Program in 2007 from the Politecnico di  Milano   K ar Ming Cheung  received his  B.S.E.E degree  f rom the University of Michigan Ann Arbor in  1984 and his  M.S. and Ph.D. degrees from the  California Institute of Technology Pasadena in 1985  and 1987, respectively  He is currently a Principal Engineer and a Technical  Gr oup Supervisor with the Communication Architectures  and Research Section 332 Jet Propulsion  Laboratory JPL Pasadena His group supports  design and specification of future deep space  and near Earth communication systems and architectures  He has autho red or co authored over 30 journal and conference papers  in the areas of error correction coding data compression image processing  and telecom system operations He has been with JPL since 1987 where  he has been engaged in research development produc tion operation, and  management of advanced channel coding source coding synchronization  image restoration and communication analysis schemes  Dr Cheung has    Scheme   


    15                                                           


 16  56   Increase Cost Estimate Accuracy in Government  AIAA SPACE 2013 Conference and Exposition  0 vols American Institute of Aeronautics and Astronautics, 2013 57  J aso n  Ha y   J o h n  D  R ee v e s   E lain e Gr e s h a m   J u l ie Williams Predic  AIAA SPACE 2013 Conference and Exposition  0 vols American Institute of Aeronautics and Astronautics, 2013  B IOGRAPHIES   Sreeja Nag is a PhD candidate in Space Systems Engineering at the Massachusetts Institute of Technology and  a part-time research fellow at NASA Goddard Space Flight Center  She has a dual SM Candidate in Aeronautics  Astronautics Engineering along with Technology  Policy at MIT. She has summer research experience with NASA JPL in 2008, the European Space Agency \(ESTEC in 2010 and led the SPHERES Zero Robotics Program in 2011. Email sreeja_n@mit.edu                Jacqueline Le Moigne is the Assistant Chief for Technology in the Software Engineering Division at NASA Goddard where she is currently leading a study on Distributed Spacecraft Missions She has  performed extensive work in developing new technologies for remote sensing data analysis e.g image registration high-performance and onboard processing She has published over 100 publications and recently co  Jacqueline.LeMoigne@nasa.gov   Olivier de Weck is a Professor of Aeronautics and Astronautics and Engineering Systems at the Massachusetts Institute of Technology He is also the Executive Director of MIT Production in the Innovation Economy PIE Study and the CoDirector Center for Complex Engineering Systems at KACST and MIT  Email deweck@mit.edu   

















Mohammed Taj, Dwight Day, Ar lie Stonestreet, Tim Sobering Paper Number: 2227; Presentation Number: 8.0201 Finding the Gaps in Space GNC Hardware Adam Greenbaum, Tye Brady Paper Number: 2288; Presentation Number: 8.0202 Technology for a Robotic Asteroid Redirect Mission and Its Extensibility to Future Human Missions John Brophy Paper Number: 2451; Presentation Number: 8.0203 Advanced Launch Vehicle Systems and Technologies NASA's Space Launch System: An Enabling Capability for Discovery Stephen Creech Paper Number: 2014; Presentation Number: 8.0301 A Dual Thrust Axis Lander for Mars Exploration David Masten Paper Number: 2384; Presentation Number: 8.0302 Innovation at ULA: It Really Is Rocket Science Gregory Schiller Paper Number: 2407; Presentation Number: 8.0303 Launch Vehicle Mission Capability Enhancemen t through Global Positioning System Metric Tracking Timothy Gray Paper Number: 2556; Presentation Number: 8.0304 Lateral Autopilot Design Using H\211\366? for Reusable Launch Vehicles Sheelu Jose Paper Number: 2435; Presentation Number: 8.0305 Adaptation of the Morris Method to MultiDimensional Factors for Air-Launch-to-Orbit Separation Henri Sohier, Jean Loup Farges, Lahanier Helene Piet Paper Number: 2566; Presentation Number: 8.0306 Hosted Payloads Concept for an ASRG Hosted Payload Mission Erich Schulze Paper Number: 2462; Presentation Number: 8.0401 Exploiting Hosted Payload Opportunities Surrey's Lessons Learned from OTB and Other Missions Anita Bernie, John Paff ett, Marissa Brummitt Paper Number: 2231; Presentation Number: 8.0402 Table of Contents file:///L:/JOBS/563 35_IEEE AC/HTML CD/HTML/data/toc.htm 22 of 39 5/27/2014 2:12 PM 


Human Factors & Performanc e Real Time VR Environment for MAJIC A ttitude Control System Development and Implementation Jared Rize, Babak Cohanim, Jeffrey Hoffman Paper Number: 2090; Presentation Number: 8.0501 Musculoskeletal Human-Spacesuit Interaction Model Ana Diaz, Dava Newman Paper Number: 2156; Presentation Number: 8.0502 Level of Automation and Failure Frequency Ef fects on Simulated Lunar Lander Performance Jessica Marquez, Margarita Ramirez Paper Number: 2285; Presentation Number: 8.0503 Spacecraft Human-Rating: Historical Over view and Implementation Considerations David Klaus Paper Number: 2272; Presentation Number: 8.0504 Pilot Control and Stabilization of a Rate Controlled Vehicle in Hyper-Gravity Torin Clark, Michael Newman, Dan Merfeld Paper Number: 2250; Presentation Number: 8.0505 Dynamic Task Allocation in Operational Sy stems: Issues, Gaps, and Recommendations Aaron Johnson, Kevin Duda, Charles Oman, Tom Sheridan Paper Number: 2087; Presentation Number: 8.0506 The V2Suit \211\333\317Down\211\333 Tracking Algorithm Rebecca Vasquez, Akil Middle ton, Kevin Duda, Dava Newman Paper Number: 2213; Presentation Number: 8.0507 Human Performance with Procedure Automa tion to Manage Spacecraft Systems Debra Schreckenghost, Dorrit Billman, Tod Milam Paper Number: 2477; Presentation Number: 8.0508 A Mission Guided Investigatio n of Operational Functions and User Interface for MAJIC Celena Dopart, Babak Cohanim, Jeffrey Hoffman Paper Number: 2088; Presentation Number: 8.0509 Modular Bus Technologies, Components and Standardized Spacecraft Reusable, Modular, and Scalable Flight Software L. Jane Hansen, John Hanson Paper Number: 2172; Presentation Number: 8.0601 Development of Attitude Contro l Systems for Modular Spacecraft John Hanson, L. Jane Hansen Paper Number: 2148; Presentation Number: 8.0602 Table of Contents file:///L:/JOBS/563 35_IEEE AC/HTML CD/HTML/data/toc.htm 23 of 39 5/27/2014 2:12 PM 


The TET Satellite Bus \226 Futu re Mission Capabilities Anja Nicolai, Stephan Roemer, Silke Eckert Paper Number: 2465; Presentation Number: 8.0603 SMC's Standard Network Adapter for Payloads Garrett Ellis Paper Number: 2544; Presentation Number: 8.0604 Mechanical Systems, Design and Technologies Spin Stabilization Design and Te sting for the Van Allen Probes Simmie Berman, Heather Borowski Weilun Cheng, David Persons Paper Number: 2133; Presentation Number: 8.0701 Evaluation and Test of Different Gear Conc epts for Ka-band Antenn a Pointing Mechanisms Ralf Purschke, Alexander Hoehn Paper Number: 2098; Presentation Number: 8.0702 Europa Clipper Spacecraft Configuration Evolution Alexander Eremenko Paper Number: 2077; Presentation Number: 8.0703 Spacecraft Propulsion and Power Technologies Status of Propulsion and Entry Vehicle Techno logy Development under the NASA ISPT Program David Anderson, Eric Pencil, John Dankanich Paper Number: 2395; Presentation Number: 8.0801 Green Propellant Infusion Mission Program Overview Christopher Mclean, William Deininger, Bryce Unruh Paper Number: 2150; Presentation Number: 8.0802 Description of the Green Propellant In fusion Mission \(GPI M\sion System William Deininger Paper Number: 2627; Presentation Number: 8.0803 Applications of Micro-Cathode Arc Thruster as In-space Propulsion Subsystem for PhoneSat Samudra Haque, Gazulla Oriol Tintore, George Teel Greenfield Trinh, Eddie Ur ibe, Andres Dono Perez Michael Keidar, Elwood Agasid Paper Number: 2324; Presentation Number: 8.0804 Pulse Phase Modulation for On-Off Thruster Pair Runle Du, Jiaqi Liu Paper Number: 2069; Presentation Number: 8.0805 Autonomous Space Exploration Systems and Technologies Onboard and Self-Contained Landing Site Selection for Planet ary Landers/Hoppers Babak Cohanim, Jeffrey Hoffman, Tye Brady Table of Contents file:///L:/JOBS/563 35_IEEE AC/HTML CD/HTML/data/toc.htm 24 of 39 5/27/2014 2:12 PM 


Paper Number: 2028; Presentation Number: 8.0901 Vision-Based Terrain-Relative Navigation and Hazard Detection Onboard a Terrestrial Rocket Ted Steiner, Tye Brady Paper Number: 2101; Presentation Number: 8.0902 Morpheus Vertical Test Bed Flight Testing Jennifer Devolites Paper Number: 2562; Presentation Number: 8.0903 Rocket Validation of the ALHAT Autonomous GNC Flight System Steve Paschall, Tye Brady Paper Number: 2045; Presentation Number: 8.0904 New Technologies and Instruments for Scientific Balloon Missions The Use of 3D Printing to Enable High Altitude Balloon Missions Jeremy Straub Paper Number: 2039; Presentation Number: 8.1001 Rapid Development of Balloon-Borne CDH Syst em with a Focus on COTS and Open Source Software Zachary Dischner, Kevin Dinkel, Jedediah Di ller, Nicholas Truesdale, Eliot Young Paper Number: 2345; Presentation Number: 8.1002 Inexpensive Balloon-Borne Observator ies Using Modified COTS Telescopes Eliot Young, Robert Woodruff Paper Number: 2284; Presentation Number: 8.1003 Development of Meter-scale O-shaped and U-shap ed Oscillating Heat Pipes for GAPS Shun Okazaki, Hideyuki Fuke, Hiroyuki Ogawa Paper Number: 2188; Presentation Number: 8.1004 Development of a Meteorology and Remote Sens ing Experimental Platform: The LAICAnSat-1 Pedro Nehme, Renato Borges, Simone Battistini, Chantal Cappelletti Paper Number: 2159; Presentation Number: 8.1005 High Energy Replicated Optics to Explore the Sun: Flight Overview and Astrophysical Pointing Jessica Gaskin, Steven Christe, Ho dge Colleen Wilson, Albert Shih Brian Ramsey, Jeff Apple, Kurtis Dietz Paper Number: 2216; Presentation Number: 8.1006 A Solar Aspect System for the HEROES Mission Steven Christe, Albert Sh ih, Marcello Rodriguez, Kyle Gregory, Alexander Cramer, Melissa Edgerton Brian O'connor, Alexander Sobey, Jessica Gaskin Paper Number: 2400; Presentation Number: 8.1007 10 Meter Sub-Orbital Large Balloon Reflector \(LBR Christopher Walker Table of Contents file:///L:/JOBS/563 35_IEEE AC/HTML CD/HTML/data/toc.htm 25 of 39 5/27/2014 2:12 PM 


Paper Number: 2630; Presentation Number: 8.1008 First Results from the Hard X-ray Polarimeter X-Calibur Matthias Beilicke Paper Number: 2205; Presentation Number: 8.1009 Design and Performance of the BRRI SON UV-VIS Fine Pointing System Jedediah Diller, Kevin Dinkel, Zachary Dischner, Nicholas Truesdale, Eliot Young Paper Number: 2308; Presentation Number: 8.101 Enabling Systems and Technolo gies for CubeSat/Smallsats A Reusable Command and Data Handling Sy stem for University CubeSat Missions Shaina Johl, Gokul Anandayuvaraj, Sean Horton Paper Number: 2403; Presentation Number: 8.1101 Design and Scientific Return of a Miniaturized Particle Telescope Onboard the CSSWE CubeSat Quintin Schiller Paper Number: 2408; Presentation Number: 8.1102 Fractionated and Distributed Systems Satellite-to-Satellite Optimization Approa ch for Opportunistic Inter-Satellite Links Cruz Ignasi Lluch, Alessandro Aliakbargolkar Paper Number: 2270; Presentation Number: 8.1201 Air Vehicle Systems and Technologies UAV Systems & Autonomy Modeling, Analysis and Fabrication of a Thru st Vectoring Spherical VTOL Aerial Vehicle Sagar Bose, Shibu Clement, Rohan Ve rma, Aditya Tripathi, Kriti Garuda Paper Number: 2097; Presentation Number: 9.0202 Aerodynamic Analysis of BlimPlane- a Conc eptual Hybrid UAV for Venus Exploration Mofeez Alam, Kumar Ashish, Sanjay Limaye Paper Number: 2313; Presentation Number: 9.0203 Aggressive Navigation Using High-S peed Natural Feature Point Tracking Christopher Raabe, John Vian, Emad Saad Paper Number: 2329; Presentation Number: 9.0204 Development of a Multipurpose Tactic al Surveillance System Using UAV's Rodrigo Rangel Paper Number: 2251; Presentation Number: 9.0205 A New Hybrid Motor Glider-Quadrotor MAV for In-Flight/V-STOL Launching Rafael Coronel B. Sampaio, Andr\351 C. Hernandes, Marcelo Becker, Fernando M. Catalano, Fabio Zanini Joao L. E. M. Nobrega, Caio Martins Table of Contents file:///L:/JOBS/563 35_IEEE AC/HTML CD/HTML/data/toc.htm 26 of 39 5/27/2014 2:12 PM 


Paper Number: 2501; Presentation Number: 9.0206 SquidCop: Design and Evaluation of a No vel Quadrotor MAV for In-\225\302\342ight Launching Air-Ground Missions Rafael Coronel B. Sampaio, Andr\351 C. Hernandes, Marcelo Becker, Fernando M. Catalano, Fabio Zanini Joao L. E. M. Nobrega, Caio Martins Paper Number: 2500; Presentation Number: 9.0207 Development of a Circulation Control Wing for UAVs Konstantinos Kanistras, Matthew Rutherford, Kimon Valavanis Paper Number: 2439; Presentation Number: 9.0208 Comparing the Economic and Regulatory State of UAS & Commercial Space Flight Harrison Wolf Paper Number: 2555; Presentation Number: 9.0209 Modeling of Real-Time Flight Control System for Small Coaxial Helicopter Seong Jin Lee Paper Number: 2530; Presentation Number: 9.021 Quantification of High Level Safety Crit eria for Civil Unmanned Aircraft Systems Xun Lin, Neale Fulton, Mark Horn Paper Number: 2619; Presentation Number: 9.0211 Three-dimensional Path Planning for Unmann ed Aerial Vehicles Based on Fluid Flow Xiao Liang Paper Number: 2707; Presentation Number: 9.0212 Airborne Imaging for Cultural Heritage Tom Wypych Paper Number: 2717; Presentation Number: 9.0213 Artificial Homeostasis for Vehicle Contro l Architecture of Unmanned Spacecraft Carlos Insaurralde, Emil Vassev Paper Number: 2543; Presentation Number: 9.0214 Multi Disciplinary Optimization Design of Modern Airship Based on Genetic Algorithm Masood Mayanbari Paper Number: 2647; Presentation Number: 9.0215 Aircraft Systems & Avionics Stochastic 4D Trajectory Optimizati on for Aircraft Conflict Resolution Yoshinori Matsuno, Takeshi Tsuchiya Paper Number: 2207; Presentation Number: 9.0301 Estimating the Internal Volume Requirement in a Multivariate Design Synthesis of a BWB Aircraft Paulinus Okonkwo Paper Number: 2281; Presentation Number: 9.0303 Table of Contents file:///L:/JOBS/563 35_IEEE AC/HTML CD/HTML/data/toc.htm 27 of 39 5/27/2014 2:12 PM 


A Novel Pump Design for an Efficient and Compact Electro-Hydraulic Actuator Gabriele Altare, Andrea Vacca, Carl Richter Paper Number: 2651; Presentation Number: 9.0304 Short-Term Turning in Presence of Wind as a Trajectory Optimization Problem Kamran Turkoglu Paper Number: 2652; Presentation Number: 9.0305 Air Vehicle Flight Controls Optimal Position Transfer Analysis of Stratospheric Airs hip in Wind Field Zhou Jianghua, Li Zhaojie, Sheng Wang, Jiang Luhua Paper Number: 2071; Presentation Number: 9.0401 Analyses and Comparisons for Several Flight Co ntrol Configuration of Stratospheric Airship Jing Gang Miao, Fan Wang, Yan Chu Yang, Xiang Qiang Zhang Paper Number: 2142; Presentation Number: 9.0402 Software and Computing Computational Modeling Multi-resolution Rapid Prototyping of Vehicle Cooling Systems Maciej Pindera Paper Number: 2019; Presentation Number: 10.0101 Feature Selective Validation Rohit Nijhawan Paper Number: 2024; Presentation Number: 10.0102 Designing a Fuzzy Logic Controller for the Reyn olds Number in a Blowdown Supersonic Wind Tunnel Shahrbabaki Amin Nazarian, Ali Shahriyari, Manshadi Mojtaba Dehghan Paper Number: 2146; Presentation Number: 10.0103 Bird Strike Analysis of Jet Engine Fan Blade Narender Lakshman, Ratnesh Raj, Yagnavalkya Mukkamala Paper Number: 2158; Presentation Number: 10.0104 Ammonia-Water Solution Clou d Modeling of Gas Giant Planets via Phase Equilibrium Calculations Virgil Adumitroaie Paper Number: 2513; Presentation Number: 10.0105 Computational Modeling of Chan nel Length Modulation in Ca rbon Nanotube Field Effect Transistors Adam Bushmaker Paper Number: 2538; Presentation Number: 10.0106 Flow Regimes in an Air Conditio ned Measuring Equipment Laboratory Table of Contents file:///L:/JOBS/563 35_IEEE AC/HTML CD/HTML/data/toc.htm 28 of 39 5/27/2014 2:12 PM 


Ahmed Farag Paper Number: 2691; Presentation Number: 10.0107 A Multiscale Turbulence Prediction and Al ert System for Airports in Hilly Regions Adil Rasheed, Karstein S\314\374rli Paper Number: 2679; Presentation Number: 10.0108 Software Engineering Autonomous Real Time Requirements Tracing George Plattsmier, Howard Stetson Paper Number: 2100; Presentation Number: 10.0201 TSEpoch: An Object Oriented Design for Representing Time Lawrence Brown, Jon Vandegriff Paper Number: 2348; Presentation Number: 10.0202 Open Source RTOS Implementation for on Board Computer \(OBC\SAT-2 Bheema Rajulu, Sankar Dasiga, Naveen Iyer Paper Number: 2413; Presentation Number: 10.0203 On Development of Hilbert-Huan g Transform Data Processing Real Time System with 2-D Capabilities Semion Kizhner Paper Number: 2703; Presentation Number: 10.0204 A Test Scripting Framework for Automated Flig ht SW V&V Testing: Van Allen Probes Lessons Learned Jeremiah Finnigan Paper Number: 2010; Presentation Number: 10.0205 Confidence in Spacecraft So ftware: Continuous Process Improvement in Requirements Verification Kristin Wortman, Maria Spezio Paper Number: 2072; Presentation Number: 10.0206 Testing of Safety-Critical Systems An Aerospace La unch Application Ahmed Gario, Anneliese Andrews, Seana Hagerman Paper Number: 2495; Presentation Number: 10.0207 Software Architecture and Design Abstraction of Abstraction \226 an Outline of General Schedulin g Platform for Space Missions Jinjiang Xing Paper Number: 2655; Presentation Number: 10.0302 The Study of the Virtual Machine fo r Space Real-Time Embedded Systems Sooyeon Kang, Hyungshin Kim Paper Number: 2695; Presentation Number: 10.0303 Table of Contents file:///L:/JOBS/563 35_IEEE AC/HTML CD/HTML/data/toc.htm 29 of 39 5/27/2014 2:12 PM 


Robust and Modular On-board Architec ture for Future Robotic Spacecraft Steffen Jaekel, Martin Stelzer, Hans Herpel Paper Number: 2376; Presentation Number: 10.0304 Model-based Systems and Software Engineering TES' Model-based Systems Engineering \(MBSE\FACETM Applications Stephen Simi Paper Number: 2110; Presentation Number: 10.0401 SOS for SoS: A New Paradigm fo r System of Systems Modeling Matthew Hause Paper Number: 2320; Presentation Number: 10.0402 MBSE without a Process-Based Data Architecture Is Just a Set of Random Characters Robert Crain Paper Number: 2111; Presentation Number: 10.0403 Model-Based GN&C Simulation and Flight Soft ware Development for Orion Missions beyond LEO Ryan Odegard, Zoran Milenkovic Paper Number: 2128; Presentation Number: 10.0404 A Model-Driven Visualization Tool for Use wi th Model-Based Systems Engineering Projects Kathryn Trase, Eric Fink Paper Number: 2192; Presentation Number: 10.0405 Integrated Model-Based Systems Engineering MBSE\d to Simulation of the RAX CubeSat Mission David Kaslow, Sara Spangelo, Grant Soremekun, Hongman Kim Paper Number: 2289; Presentation Number: 10.0406 New HiL Evaluation of an H-In f Controller on the Stabilization of a MAV in Flight Simulation Rafael Coronel B. Sampaio, Andr\351 C. Hernan des, Marcelo Becker Fernando M. Catalano Paper Number: 2521; Presentation Number: 10.0407 Model-Based Requirements Generation Brian London Paper Number: 2584; Presentation Number: 10.0408 Automatic Code Generation for Spacecra ft Attitude Determination and Control Bryce Carpenter Paper Number: 2686; Presentation Number: 10.0409 Implementing Artificial Intelligence for Aerospace Integrating Artificial Intelligence Techniqu es to Generate Ground Station Schedules Costas Tsatsoulis, Michele Van Dyne Paper Number: 2103; Presentation Number: 10.0501 Table of Contents file:///L:/JOBS/563 35_IEEE AC/HTML CD/HTML/data/toc.htm 30 of 39 5/27/2014 2:12 PM 


Missile Trajectory Optimization Usin g a Modified Ant Colony Algorithm Zachary Kiyak, Timothy Ledlow Paper Number: 2185; Presentation Number: 10.0502 Missile System Design Using a Hybrid Evolving Swarm Algorithm Timothy Ledlow, Zachary Kiyak Paper Number: 2225; Presentation Number: 10.0503 Distributed Multi-Agent Systems \226 a Litera ture Survey and Inquisitive Discussion Christopher Elliott Paper Number: 2504; Presentation Number: 10.0504 Star Tracker Orientation Optimization Using Non-dominated Sorting Genetic Algorithm \(NSGA Fabricio Carvalho, Francisco Salazar Paper Number: 2616; Presentation Number: 10.0505 Human-Computer Interaction Exploration with Live Stereoscopic 3D Video in Mixed Reality Environments Jason Kimball, Tom Wypych Paper Number: 2347; Presentation Number: 10.0601 Limitations of Crowdsourcing Using the EMS1998 Scale in Remote Disaster Sensing Andrew Huynh, Michael Eguchi Albert Lin, Ronald Eguchi Paper Number: 2602; Presentation Number: 10.0602 An EMG Enhanced Impedance and Force Control Framework for Telerobot Operation in Space Ning Wang, Chenguang Yang Michael Lyu, Zhijun Li Paper Number: 2675; Presentation Number: 10.0603 Cloud Computing Secure Hybrid Cloud Computing: Approach and Use Cases Kapil Bakshi Paper Number: 2078; Presentation Number: 10.0701 Cloud Computing for Geodetic Imaging Da ta Processing, Analysis, and Modeling Andrea Donnellan, Jay Parker, Jun Wang, Yu Ma, Marlon Pierce Paper Number: 2223; Presentation Number: 10.0702 A Survivability-Centered Rese arch Agenda for Cloud Comp uting Supported ERM Systems Zhanshan \(Sam Paper Number: 2696; Presentation Number: 10.0703 Diagnostics, Prognostics and Health Management \(PHM PHM for Aerospace Subsystems, Components and Structures Uncertainty in Prognostics: Computat ional Methods and Practical Challenges Table of Contents file:///L:/JOBS/563 35_IEEE AC/HTML CD/HTML/data/toc.htm 31 of 39 5/27/2014 2:12 PM 


Shankar Sankararaman, Kai Goebel Paper Number: 2338; Presentation Number: 11.0101 Current/Pressure Transducer Application of Model-Based Prognostics Using Steady State Conditions Christopher Teubert, Matthew Daigle Paper Number: 2323; Presentation Number: 11.0102 Prognostics for Electronics and Avionic Systems Universal Auto-Calibration for a Rapid Batte ry Impedance Spectrum Measurement Device John Morrison, William Morrison Paper Number: 2030; Presentation Number: 11.0201 Integrated Diagnostics and Time to Maintenanc e Estimation for Complex Engineering Systems Mohammad Azam, David Kleinman, Somnath Deb, Deepak Haste, Suvasri Mandal Paper Number: 2642; Presentation Number: 11.0202 Algorithms and Advanced Concepts for Diagnostics and PHM Automatic Systems Diagnosis without Behavioral Models Rui Abreu Paper Number: 2162; Presentation Number: 11.0401 The Use of Data Signatures in Condition Based Maintenance Plus Charles Crabb Paper Number: 2674; Presentation Number: 11.0402 Design Attributes for Diagnostics and Prognostics Health Monitoring Requirements Elicitation via House of Quality Gianluca Nicchiotti Paper Number: 2473; Presentation Number: 11.0601 Total Ownership Cost Reduction for Complex Sy stems through the Design and Application of CBM Jeffrey Banks Paper Number: 2565; Presentation Number: 11.0602 PHM Technologies for Reliability and System Maintenance J69-T-25A Engine Comp onent Failure Analysis Irfan Manarvi Paper Number: 2443; Presentation Number: 11.0701 Analyzing T-53 Series Engines Defect Trends through Maintenance History Irfan Manarvi Paper Number: 2446; Presentation Number: 11.0702 Table of Contents file:///L:/JOBS/563 35_IEEE AC/HTML CD/HTML/data/toc.htm 32 of 39 5/27/2014 2:12 PM 


Systems Health Mana g ement for Space Systems and Operations Model-Based Fault Management for Spacecraft Autonomy Prather Ksenia Kolcio, Paul Zetocha, Louis Breger Paper Number: 2026; Presentation Number: 11.0801 Maturation of Health Management Technologies via Ground/Flight Testing and Research Robust Monitoring of Turbofan Sensors Jerome Lacaille Paper Number: 2059; Presentation Number: 11.1001 Application of Model-based Prognost ics to a Pneumatic Valves Testbed Matthew Daigle, Chetan Kulkarni, George Gorospe Paper Number: 2293; Presentation Number: 11.1002 PHM for Astronauts and Pilots Performance Assessment & Motion Planning Optimization in a Su rgical Trainer for Potential Space Use Aakarsh Rao, Minsik Hong, Akash Shankaran, Jerzy Rozenblit, Wolfgang Fink Paper Number: 2511; Presentation Number: 11.1101 Planning a Pilot Project on the ISS for Crew Health Management & Maintenance beyond LEO Wolfgang Fink, Alexandre Popov, Andrew Hess Paper Number: 2680; Presentation Number: 11.1102 Real-time Online Health Analytics for Interplanetary Space Missions J. Mikael Eklund, Carolyn Mc Gregor Paper Number: 2604; Presentation Number: 11.1103 Personal Health Care and Corresponding Techno logy with Prognostic Capability. Issues and Challenges Olha Kevorkova, Alexandre Popov Paper Number: 2649; Presentation Number: 11.1104 Portable System to Monitor Astronaut Ocul ar Health and the De velopment of the VIIP Syndrome Wolfgang Fink, David Hilmers, Mark Tarbell Paper Number: 2657; Presentation Number: 11.1105 Probabilistic Design for Reliability of Aerospace Electronics Application of Multi-Parametric Boltzma nn-Arrhrnius-Zhurkov Model in Aerospace Optoelectronics Ephraim Suhir Paper Number: 2009; Presentation Number: 11.1201 Table of Contents file:///L:/JOBS/563 35_IEEE AC/HTML CD/HTML/data/toc.htm 33 of 39 5/27/2014 2:12 PM 


Aerospace Electronic Packaging: Thermal St ress in Bi- and Tri-Material Assemblies Ephraim Suhir Paper Number: 2015; Presentation Number: 11.1202 Prediction of Remaining Useful Life of Ball-Gr id-Array Interconnections from Testing on Board Level Laurent Bechou, Derigny David Gucik Paper Number: 2126; Presentation Number: 11.1203 Utilizing Confidence Bounds in Failure Mode Effects Analysis \(FMEA\d Risk Assessment Marc Banghart Paper Number: 2114; Presentation Number: 11.1204 Reliability Testing for Efficien t Validation and Qualification Joseph Bernstein Paper Number: 2049; Presentation Number: 11.1205 HALT, FOAT, and Their Role in Making a Viable Device into a Reliable Product Ephraim Suhir Paper Number: 2050; Presentation Number: 11.1206 Using Physics of Failure to Predict System Level Reliability for Avionic Electronics Greg Caswell Paper Number: 2053; Presentation Number: 11.1207 Injection-Coupled Devices \(ICDs\peration Pr inciple, Applications Design-for-Reliability Konstantin Tapero, Victor Murashev Pavel Ivshin, Sergey Legotin, Andrey Krasnov, Dmitry Elnikov Ephraim Suhir Paper Number: 2157; Presentation Number: 11.1208 Improved Methods for Development of High Reliability Electronics Jue Li Paper Number: 2183; Presentation Number: 11.1209 Long Term In-vacuum Reliability Testing of 980nm Laser Diode Pump Modules for Space Applications Laurent Bechou Paper Number: 2165; Presentation Number: 11.121 Some Major Guiding Principles to Make Future Manned Missions to Mars Safe and Reliable Jean Marc Salotti, Ephraim Suhir Paper Number: 2083; Presentation Number: 11.1211 Designing with Consideration of the Human Fact or: Changing the Paradigm for Higher Safety Sylvain Hourlier, Ephraim Suhir Paper Number: 2614; Presentation Number: 11.1212 PHM for Autonomous Systems A Battery Health Monitoring Framework for Planetary Rovers Table of Contents file:///L:/JOBS/563 35_IEEE AC/HTML CD/HTML/data/toc.htm 34 of 39 5/27/2014 2:12 PM 


Matthew Daigle, Chetan Kulkarni Paper Number: 2291; Presentation Number: 11.1301 PHM for Propulsion Systems Fusing an Ensemble of Divers e Prognostic Life Predictions Oliver Laslett, Zaidan Martha Arbayani Bin, Robert Harr ison, Andrew Mills Paper Number: 2191; Presentation Number: 11.1401 Ground and Space Operations Spacecraft Development and F light Operations:  Challenges Successes, Failures and Lessons Learned Redesign of CloudSat's Maneuver s for Robust Delta-V Operations Ian Gravseth Paper Number: 2131; Presentation Number: 12.0101 ARTEMIS Operations \226 Experi ences and Lessons Learned Manfred Bester Paper Number: 2464; Presentation Number: 12.0102 Juno Spacecraft Operations Lessons Learned for Early Cruise Mission Phases Jeff Lewis Paper Number: 2554; Presentation Number: 12.0103 Changing the Paradigm GSFC's Role in th e MAVEN Mission. Lessons Learned from the MOS/GDS Effort John Hughes, Rosa Carlos Gomez, Brian Thibaudeau Francis Wasiak, Agustin Alfonzo, Juan Cifuentes Paper Number: 2705; Presentation Number: 12.0104 Design of a Spacecraft I&T Facility at the John s Hopkins University Applied Physics Laboratory William Liggett Paper Number: 2200; Presentation Number: 12.0105 Flight/Ground Systems, Mission Planning and Operations Careful and Accurate Placement of Avionics Boxes during Maintenance of Flight Hardware Damon Stambolian, Shihab Asfour, Moataz Eltoukhy Paper Number: 2361; Presentation Number: 12.0201 Design and Development of a Free-Floati ng Hexrotor UAV for 6-DOF Maneuvers Evan Kaufman, Kiren Caldwell, Daewon Lee, Taeyoung Lee Paper Number: 2527; Presentation Number: 12.0202 Using Vicon Bodybuilder and Plug-In-Gait to Generate L5/S1 Angles, Forces and Moments Damon Stambolian, Shihab Asfour, Moataz Eltoukhy Paper Number: 2656; Presentation Number: 12.0205 Table of Contents file:///L:/JOBS/563 35_IEEE AC/HTML CD/HTML/data/toc.htm 35 of 39 5/27/2014 2:12 PM 


MAVEN Information Security Governance, Risk Management, and Compliance \(GRC Learned Eduardo Takamura, Kevin Mangum, Ro sa Carlos Gomez Francis Wasiak Paper Number: 2700; Presentation Number: 12.0206 Aerospace Aircraft Information Display System for Flight Operations in ND Ronald Marsh Paper Number: 2212; Presentation Number: 12.0207 Managing Life Cycle Cost and Risk - Affordability Operability, Sustainability, and Automation A Critical Analysis of Additive Manufacturi ng Technologies for Aerospace Applications Atin Angrish Paper Number: 2601; Presentation Number: 12.0301 Human Space Flight Operations and Processing Space Shuttle Launch Probability Analysis: Un derstanding History So We Can Predict the Future Grant Cates Paper Number: 2502; Presentation Number: 12.0401 Payload and Instrument Operations and Processing Cold Atom Laboratory Mission System Design Melissa Soriano, Anita Sengupta, Kristen Virkler Paper Number: 2084; Presentation Number: 12.0501 Extreme Environment SImulation - a New Capability to Simulate Venus and Other Planetary Bodies Tibor Kremic Paper Number: 2353; Presentation Number: 12.0502 Management, Systems Engineering and Cost System Simulation and Verification Response Surface Based Performance Anal ysis of an Air-Defense Missile System Kerem Gunaydin, Tayfun \307imen Paper Number: 2208; Presentation Number: 13.0101 Modeling and Simulation of Asteroid Retrieval Using a Flexible Capture Mechanism Havard Grip, Jonathan Cameron, Calvin Kuo Steven Myint, Masahiro Ono, Marco Quadrelli Paper Number: 2488; Presentation Number: 13.0102 Analysis of Rover Transmission Interruption Guinian Feng Table of Contents file:///L:/JOBS/563 35_IEEE AC/HTML CD/HTML/data/toc.htm 36 of 39 5/27/2014 2:12 PM 


Paper Number: 2585; Presentation Number: 13.0103 Risk Management: Application and Lessons Learned Low-Cost, Risk-Reduction Testing of Class D Spacecraft Photovoltaic Systems Joshua Forgione Paper Number: 2605; Presentation Number: 13.0201 A Practical Application of a Systems Engineering Process in Space Avionics Design and Development Patrick Phelan Paper Number: 2645; Presentation Number: 13.0202 Cost and Schedule Tools, Methods and Processes Historical Mass, Power, Schedule & Cost Growth for NASA Science Instruments Robert Bitten, Stephen Shinn Paper Number: 2107; Presentation Number: 13.0301 Life-cycle Cost Simulation of a New Implemen tation Process of Government Space Systems Paul Speth, Paul Blessner, Tim Blackburn Paper Number: 2240; Presentation Number: 13.0302 Exploring Classification Algorithms for Early Mission Formulation Cost Estimation Net Marc Sanchez, Daniel Selva, Alessandro Aliakbargolkar Paper Number: 2304; Presentation Number: 13.0303 NASA Instrument Cost Model for Expl orer-like Mission Instruments \(NICM-E Joseph Mrozinski, Agahi Hamid Habib, George Fox Paper Number: 2537; Presentation Number: 13.0304 Enterprise Modeling for Cubesats Louise Anderson, Christopher Lo we, David Kaslow, Eric Sudano Rose Yntema, Sharanabasaweshwara Asundi, Sara Spangelo Paper Number: 2341; Presentation Number: 13.0305 Cost and Risk Analysis of Small Satel lite Constellations for Earth Observation Sreeja Nag, Jacqueline Le Moigne, Olivier De Weck Paper Number: 2459; Presentation Number: 13.0306 FTE Tool, a Practical Tool for Analyzing St affing Levels and Cost across Missions Justin Mc Neill Paper Number: 2279; Presentation Number: 13.0307 Management Tools, Methods and Processes The Legacy of Faster-Better-Cheaper: Too Much Risk or Over-reaction to Failure Merrill Robin Dillon, Peter Madsen Paper Number: 2017; Presentation Number: 13.0401 Table of Contents file:///L:/JOBS/563 35_IEEE AC/HTML CD/HTML/data/toc.htm 37 of 39 5/27/2014 2:12 PM 


Risk-Based Space System Design: A Novel Prob abilistic Approach to Design Risk for Small Satellites Alessandra Babuscia, Kar Ming Cheung Paper Number: 2091; Presentation Number: 13.0402 Collaborative Engineering in Competitive Environments: Th e PTSS Integrated Systems Engineering Team James Leary, Patrick Stadte r, Patrick Binning, David Durey, Jae Heiner, Stephen Kendrick, Dan Schwab Dana Southwood Paper Number: 2130; Presentation Number: 13.0403 Model Linking to Improve Visibility and Re usability of Models during Space System Development Meenakshi Deshmukh, Ren\351 Schwarz, Lopez Rosa Paris Paper Number: 2224; Presentation Number: 13.0404 Boeing's 702 Product Line : Sy stem Engineering a Cost Effective Product Portfolio Strategy Richard Milford Paper Number: 2402; Presentation Number: 13.0405 NASA's New Space Flight Project Requirements Earlier Definition for Later Cost Stability Jeffery Webster Paper Number: 2549; Presentation Number: 13.0406 Using Monte Carlo Simulation as Support for Decision Making While Negotiating a PBL Contract Jan Block Paper Number: 2668; Presentation Number: 13.0407 Using Organizational Messages to Improve the Recognition of Near-Miss Events on Projects Merrill Robin Dillon, Catherine Tinsley Paper Number: 2016; Presentation Number: 13.0408 Mission Modeling, Concept Optimization and Concurrent Design Multi-stakeholder Interactive Simulati on for Federated Satellite Systems Paul Grogan, Alessandro Aliakbargolkar, Olivier De Weck Paper Number: 2163; Presentation Number: 13.0501 Remote Sensing Satellite System Overall Effectiveness Analysis and Modeling Abou Bakr Elhady Paper Number: 2671; Presentation Number: 13.0502 Deep Space Navigation Mission Design and Analysis Tool Prather Ksenia Kolcio, Paul Graven Paper Number: 2023; Presentation Number: 13.0503 Systems Architecture, Engineeri ng and System of Systems Optimization of a Small Sate llite Tridyne Propulsion System Table of Contents file:///L:/JOBS/563 35_IEEE AC/HTML CD/HTML/data/toc.htm 38 of 39 5/27/2014 2:12 PM 


Brian Cohen, Robert Legge Paper Number: 2036; Presentation Number: 13.0601 Experiments in Knowledge-intensive System Architecting: Interactive Architecture Optimization Daniel Selva Paper Number: 2217; Presentation Number: 13.0602 Computer-aided Design & A ssessment of Disaggregate Space System Architectures Robert Thompson Paper Number: 2214; Presentation Number: 13.0603 In-Space Transportation Infrastructure Arch itecture Decisions Using a Weighted Graph Approach Peter Davison, Bruce Cameron Paper Number: 2257; Presentation Number: 13.0604 Trade Space Evaluation of Ascent and Return Ar chitectures for a Mars Sample Return Mission Farah Alibay, Zachary Bailey Paper Number: 2298; Presentation Number: 13.0605 Technology Transfer and Commercialization NASA Innovation Ecosystem: Host to a Go vernment Technology Innovation Network Jill Hardash Paper Number: 2570; Presentation Number: 13.0701 Consideration of Risk versus Reward in Balancing Technology Portfolios Richard Terrile, Andrea Belz Paper Number: 2639; Presentation Number: 13.0702 Promoting \(and Provoking The Politics of Space Launch: All Launch Systems Are Not Nominal Mark Bitterman Paper Number: 2392; Presentation Number: 13.0801 Students Touch Space in Zero Robotics Pr ogramming Competition with Free Downloadable Curriculum Jenny Liu Paper Number: 2673; Presentation Number: 13.0802 From STEM to STEAM: Towards Aerospace Partnerships with Cu ltural Heritage Diagnostics Ashley Richter Paper Number: 2598; Presentation Number: 13.0803 Table of Contents file:///L:/JOBS/563 35_IEEE AC/HTML CD/HTML/data/toc.htm 39 of 39 5/27/2014 2:12 PM 


1 D     1 #-$+.B- 0/:% .0             9 1      18    1 6     1 2  1  1  


1   6      2    1 2 E 8 D 1      1 2   1   1 #-4  #-@E     2  1  1  1       


 8     1          2 F    6   F  2   8    2 C<CC/C N\bO 5      


CD    b$44NO F P Q 6   2 b$$$ ,=\b\bA  A N,O 2 C C  b$$4N  92 2   f  9-\b$$4 B N?O  !-    91  2 1 HH111-18-N+O    -1 :3%   2     0-4 


     b N4O 2   2- \f  C b$@$ \b# >\b\b$3\b$N@O  f :.% 9 /9 \f    1  6  f 2  4   A254 


Advantages of Our M ethod Advantages of Our M ethod Exploit the memory v ertical data format utilizes slidin g windows to g form a much larger database to analyze  Flexibility in Choosing what to choose  Choosing what to choose to build the rules Computational and memory efficiency We have a team working only on this aspect 45 Associative IDS for NextGen Frameworks Dr S Dua LA Tech 45 


Preliminary Results Intra transaction Relations Data rate simulator NH-134 Mb HOP PATH update \(Y/N Inference 11.5 Y Y 2 0.120 N N      Y   n 0.345 N NH134 Y/N   Inf 1 0.150 N N 2 0 120 Y N Inter transaction Relations 2 0  120 Y N       5 5.55 0.456 Y Relations  n 0.345 N N Nmap on DMRL nmap.org 


Anticipated Outcome Anticipated Outcome Develop algorithm capable of learning from a given heterogeneous diverse Develop algorithm capable of learning from a given heterogeneous diverse data ff Dynamic algorithmic f ramework designed to shi f t modalities and sampling rates based on complex logic Flexibility of integration into the Snort intrusion detection system 47 Associative IDS for NextGen Frameworks Dr S Dua LA Tech 47 


References References Aircraft Cockpit Image courtesy USAF http://www.faa.gov htt p   www.faa g ov  air traffic  technolo gy  p g  _ gy  Acharya R Dua S Du X Sree V Chua C K Automated Diagnosis of Glaucoma Using Texture and Higher Order Spectra Features To appear in IEEE Transactions on Information Technology in Biomedicine  Du X Dua S 2011 Cancer Prognosis Using Support Vector Regression in Imaging  Modality World Journal of Clinical Oncology 2  1   44 49 Du X Dua S 2010 Salient Frame Extraction Using Support Vector Regression and Motion Features pp 5 Proc of the National Aerospace and Electronics Conference July 14 16 2010 D M P D S 2010 Di i i ti Ft d Cl ifi ti Mthd f D essaue r  M  P  D ua S  2010  Di scr i m i na ti ve F ea t ures an d Cl ass ifi ca ti on M e th o d s f or Accurate Classification 1st ed vol 7704 pp 14 Bellingham WA Proceedings of SPIE Dessauer M P Dua S 2010 Low Resolution Vehicle Tracking using Dense and Reduced Local Gradient Features Maps 1st ed vol 7694 pp 8 Bellingham WA Proceedings of SPIE SPIE 


Acknowledgements Acknowledgements Fundin g A g encies  US 4 1 Million direct fundin g g g 4 g LA BoR NIH NSF AFRL AFOSR and NASA Research Team Samuel Kasimalla Brandy McKnight Dr Pradeep Chowriappa Connor Johnson Vasanth Nair Mihir Chowriappa  Connor Johnson  Vasanth Nair  Mihir Karnik Mohit Jain and Swadheen Songmen Associative IDS for NextGen Frameworks Dr S Dua LA Tech 49 All the respective Logos belong to their owners 


Rf d Rdi R e f erence d R ea di ngs Copyright of cover pages held by respective publishers 


Thank You Questions Thank You  Questions Dr Sumeet Dua E mail sdua@latech.edu Web http://dmrl.latech.edu Associative IDS for NextGen Frameworks Frameworks Dr S Dua LA Tech 51 Image Source roadtrafficsigns.com 


