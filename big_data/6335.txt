A New Share Frequent Itemsets Mining using Incremental BitTable Knowledge Chayanan Nawapornanan 1 and Veera Boonjing 1,2 1 Software Systems Engineering Laboratory, Department of Mathematics and Computer Science Faculty of Science, King Mongkut's Institute of Technology Ladkrabang, Bangkok 10520, Thailand 2 National Centre of Excellence in Ma thematics, PERDO, Ba ngkok 10400, Thailand cherry_miti@hotmail.com 1  boonjv@gmail.com 1,2 Abstract The share measure has been proposed as an important measure for mining association rules. The value of share itemsets provides useful information such as total profits and total customer purchased quantities associated with itemsets in database. The share-frequent itemsets mining problems become a very important research issue in data mining. Existing share-frequent itemsets mining algorithms are based on static database so knowledge must be rebuilded when the minimum share threshold is changed or database is modified either appended or updated. This paper proposes a novel BitTable knowledge for incremental and interactive share-frequent itemsets mining in multiple minimum share thresholds without rebuilding BitTable knowledge.  It is effective for incremental and interactive mining to take advantage of the previous BitTable knowledge and the previous mining results I INTRODUCTION Association rules mining is one of an important research topics in data mining.  It aims for finding relationship between data in a large database.  In addition, association rules mining is widely employed; for example, in cross marketing e w produ ct  developmen on al  services, and credit approval assessment for e-business T h e process of disco v erin g all the association rules [7 m p rise s o f t w o step s  1 discovering all frequent itemsets that satisfying a minimum support threshold, and 2\Creating of all rules from discovered frequent itemsets that meet the confidence threshold Most of the researchers are in terested in solving problems on creating frequent itemsets because it is costly, and consumes high resources Suppose we want to determine purchasing model from purchasing database Advantag es of hidden data association include consideration of product location on shelves.  If the hidden data relation is known, the product that customers mostly purchase together can be located nearby.  Each product is called item, and itemset is group of products that customers mostly purchase together in one transaction.  The support of the itemsets indicates how importance of itemsets of transaction in datab w e v e r, t h is s u pport is only considered number of transactions that the itemsets are purchased.  The  purchasing quantity is not analysed.  Hence this value cannot identify total costs and profits of itemsets [8 1997, [9 pro pos ed a s h are confidence framework that considers quantitative analysis which would be more benefit Presently, many algorithms for finding share-frequent itemsets have been developed includin 12  Ho w e v e r, th os e  algorithms do not support a çbuild once mine manyé concept Previous research works were developed for finding one time share-frequent itemsets from a set of database.  This is not efficient as the process of know ledge creation and data mining must be performed for every valu e of minimum share and this is occurred when the database is modified as well.  Therefore interactive share-frequent itemsets finding is required.  This is because practically users request for share-frequent itemsets at several minimum shares and can be explored more quickly This motivates researchers in seeking for a mechanism to collect data without changing the minimum share value Knowledge could be modifiable and share-frequent itemsets finding could be done in interactive manner.  This paper; hence proposes a mechanism for data collection by using a BitTable knowledge that allows data to be modified without re-building the table II BASIC DEFINITIONS In this section, the terms used for describing share-frequent itemsets mining are defined as follows [13  Definition 1 DB ={T 1 T 2 T n  is a database of transaction T i where T i is a set of items Example 1 We use the same example of database which was used in [13 L et t h e T a b l e I b e a DB. It cons ists of eight transactions T1, T2, T3, T4, T5, T6, T7  and  T8 with eight items a, b, c, d, e, f, g and  h Definition 2 The measure value mv\(i p T q resents the quantity of item i p in transaction T q  Example 2 From Table 1, the quantity of item A in transaction T 8 is 4. Therefore, mv\(A,T 8   TABLE I EXAMPLE OF AN INCREMENTAL TRANSACTION DATABA SE WITH COUNTING TID Transaction Count Initital DB  T1 T 2 T 3 T 4 T5 A,B,C,D,E,G,H F,H B,C,D C,E B,D 1,1,1,1,1,1,1 4,3 4,3,3 4,1 3,2 DB  T6 T 7 T 8 B,C,D B,C,D,E A,F,G 3,2,1 3,4,1,2 4,1,1 358 


Definition 3 The total measure value of DB, TMV\(DB is the quantity of all transaction in database      q p q T i q p DB T T i mv DB TMV      1 Example 3 From Table 1, TMV\(DB Definition 4 The itemset measure value of an itemset X  in transaction T q  imv\(X,T q easure value of all items belonging to X where X = is a k-itemset X  i1,i2,...,in}, and 1  k  n     X i q p q p T i mv T X imv        2 Example 4 From Table 1, imv\(A,T 8 v\(A,T 8 4 and imv\(AF,T 8 v\(A,T 8  mv\(F,T 8 4+1 = 5 Definition 5 The local measure value of an itemset X of all transactions in DB X DB X is a set of transaction containing itemset X, is a total itemset measure value of itemset X in DBX       X i q p DB T p x q T i imv X lmv      3 Example 5 From Table 1, lmv\(bc\ imv\(bc,T 1 mv\(bc,T 3  imv\(bc,T 6 imv\(bc,T 7 3+4\21 Definition 6 The share value of an itemset X, SH\(X\is a ratio of local measure value of X to the total measure value of DB         DB TMV X lmv X SH   4 Example 6 From Table 1, SH\(bc\lmv\(bc\/TMV\(DB\ = 21/56 0.375 Definition 7 The itemset X is share-frequent if SH\(X  min_share where min_share is a minimum share threshold Example 7 From Table 1, suppose min_ share 0.20, we can say that  b cé is a share frequent itemset since SH\(bc\75 III RELATED WORK The problem of finding frequent itemsets is to completely discover frequent itemsets in transactional database satisfying a minimum support threshold defined by users. AIS algorithm was the first algorithm that generates all frequent itemsets which was proposed in T h e downward clo sure property  is to prune any subsets that are not in frequency then all of its super frequents must be infrequent  The Apriori algorithm used this property to prune infrequent itemsets but it suffers from the level-wise candidate generation-and-test problem and needs several database scans. The FP-g rowth algorithm 3 solv e d th e problem of candidate generation-and-test by using a tree-based called FP-Tree.  It needs two-times database scans to find frequent itemsets according to given minimum threshold by users Discovering mentions above support measure considers only the binary occurrences \(0/1\i.e., either absent or present of the items in one transaction. In reality, A length of transaction is about purchasing a full basket. Customers usually do not buy one item for one piece. In 1997, Carter et. al. have firstly introduced the share-confidence model to discover useful knowledge about numerical attributes associated with items in a transaction 12  T h is n u m e ri cal attribu t e  ref lect s all t h e prof its  costs of the items and associates to the transaction items.  The downward closure property cannot be used for finding sharefrequent itemsets, but some algorithms use this property such as the ZP and Z S P  8    T h ese algorithm s are v e r y t i m e consuming and do not work efficient in larger databases. Other algorithms have been proposed to mine share-frequent itemsets but it cannot discover all share-frequent itemsets, such as SIP  CA C [11 and I A B 8  L ater th e Fas t S h are Me asu re  ShFSM\go es to im prov e th e prev ious algorithms by using the level closure property However ShFSM wastes computational times on the join and the prune steps of candidate generation in each pass, and generates too many useless candidates. The Direct Candidates Generation DCG w as propos ed  T h e DC G al g o rithm outperf or m s th e  ShFSM by generating candidated itemsets without pruning and joining steps in each iteration. The DCG can maintain the downward closure property by using the local measure value Definition 3\he number of candidate is generated when the DCG is less than the ShFSM but the DCG suffers from the level-wise candidate generation and-test problems and needs several database scans The algorithms mentioned above were mostly designed for finding share-frequent itemsets at one minimum share value on one static database.  Once the minimum share or the data in database is changed the data structuring process must be re done.  The adaptive BitTable knowledge; therefore, is presented In addition, interactive querying share-frequent itemsets enables users to employ by themselves IV OUR APPROACH Our approach employs an incr emental BitTable Structure as an incremental knowledge. We propose to effectively mine sharefrequent itemsets from the knowledge Our mining results are ready for querying share-frequent itemsets using SQL A Constructing th e BitTable Knowledge  BitTable is a set of binary whos e each bit represents an item 17  1 or 0 rep r esen ts either present or absent as already discussed in [13 and  1 4   This paper treats a BitTable knowledge as a set of integer where each integer represents quantity of an item. For example, transaction T3 as shown in Table I, we store 4, 3, and 3 to item B C, and D respectively The BitTable is constructed once and it is not rebuild when data is modified The BitTable contains all information of all transactions in a database.  Its construction requir es only a single data scan. Each 359 


transaction is loaded into the algorithm  After that, each item in transaction is read.  Two temporally variables are defined.  The first one is for keeping value of each item, and the second one is for its quantity. When all items in transaction are read, two temporally variables are employed to construct an insert statement, and the command will be executed and then be kept in the BitTable.  This process is repeated for all transaction With this algorithm, data can be modified.  For data modification, it starts with ascendant sorting items in the BitTable.  After that, each transac tion is loaded and each item is read.  As data appending proc ess, temporally variables are defined.  The first variable is for introducing a query statement to filter transaction that contains same items.  Then, modified transaction is compared to th e filtered transaction.  If the modified transaction is found, an update statement is introduced for modifying data in the BitTable  Input Transactions of type DB, DB+, and DBu DBu is an update transaction Output BitTable Procedure  1 For each transaction 2     For each item i 3          tm p_qty  qty  Keep the item and quantity of item in temporary variable as titled tmp_i and tmp_qty respectively 4     End For 5     If \(transactio n type is DB or DB 6         The SQL insert statement is constructed from the tmp_i and tmp_qty then execute SQL insert statement respectively 7     End If Else 8 The tmp_i is arranged by lexicography 9 The SQL query statement is constructed with the tmp_i for filtering  transaction then SQL query statement is executed and its kept into Result Set\(RS\vely 10        For each transaction t  RS 11             For each item k  t 12 The SQL update statement is constructed from  tmp_i and tmpnew_qty then SQL update  statement is executed on BitTable 13             End For 14        End For  16 End else 17 End For Fig. 1. The construction of BitTable Knowledge   TABLE II THE BITTABLE KNOWLEDGE IS CONSTRUCTED AFTER SCAN DATABASE ONCE TId\\Item A B C D E F G H 1 1 1 1 1 1 1 1 1 2 0 0 0 0 0 4 0 3 3 0 4 3 3 0 0 0 0 4 0 0 4 0 1 0 0 0 5 0 3 0 2 0 0 0 0 6 0 3 2 1 0 0 0 0 7 0 3 4 1 2 0 0 0 8 4 0 0 0 0 1 1 0 B.   Finding Share-Frequent Itemsets  In this subsection, we present an algorithm for finding sharefrequent itemsets. It has objective to discover value of sharefrequent itemset either it is greater than zero using the definition mention in section II. Then, the share-frequent itemsets is collected to the ShareItemset Tab le. We describe the algorithm in Fig. 2 as below The process starts with determination of TMV. In step 2, we determine all possible itemsets as non-empty elements of power set of set all items in BitTable. For each itemset obtained from step 2, we calculate its share value. An itemset with share value greater than 0 is inserted into ShareItemset Table. Example of information in ShareItemset Ta ble is as shown in Table III Input BitTable Output ShareItemset Table Procedure  1 Determine TMV 2 Determine all possible itemsets 3 For each itemset 4 Determine LMV 5      SH = LMV/TMV 6 IF SH > 0 7            Insert itemset, LMV and SH to ShareItemset Table 8      End IF 9  End For Fig. 2 Algorithm for finding the share-frequent itemset and then insert to ShareItemset Table   Table III THE EXAMPLE OF THE SHAREITEMSET TABLE AFTER THE SECOND PROCESS DONE  Id Itemset LMV value Share value 1 a,f 16 0.239 2 a,g 15 0.224 3 b 14 0.209 4 b,c 21 0.313 5 b,d 22 0.328 6 b,c,e 12 0.179 7 b,c,d 27 0.403 8 c 17 0.254 9 c,d 16 0.239 10 c,e 19 0.284 11 e,g 8 0.119 12 e,f 9 0.134  C Querying the Share frequent Itemsets From subsection B the ShareItemset Table is tabulated.  From this table, the share-frequent itemsets can be queried by SQL 360 


From data in Table III, if users need to find share-frequent itemset at minimum share of 0.20, the executed command is as follows Select Itemset fro m ShareItemset where share 0.20  The value of minimum share \(0.20\ be modified to meet usersê requirement.  Table IV and V illustrates the results Table IV THE RESULT OF SHARE-FREQUENT ITEMSET IS PASSED MINIMUM SHARE AT 0.20 Id Itemset Share value 1 a,f 0.239 2 a,g 0.224 3 b 0.209 4 b,c 0.313 5 b,d 0.328 6 b,c,d 0.403 7 c 0.254 8 c,d 0.239 9 c,e 0.284 Table V THE RESULT OF SHARE-FREQUENT ITEMSET IS PASSED MINIMUM SHARE AT 0.25 Id Itemset Share value 1 a,f 0.239 2 b,c 0.313 3 b,d 0.328 4 b,c,d 0.403 5 c 0.254 6 c,e 0.284 V ANALYSIS AND DISCUSSION In this section, we discuss the time complexity of proposed algorithms. We summarize the notation used in the best-case and the worst-case for our proposed algorithm as shown in Table VI   Our proposed BitTable construction algorithm can construct the BitTable knowledge with O  mn me complexity. For updating, the time complexity is O  mnpq  To determine all share-frequent s itemsets with share values greater than 0 using Algorithm 2, we need to test 2 m 1 itemsets Therefore, the time complexity of Algorithm 2 is O\(2 m  VI CONCLUSIONS AND FUTURE WORK Existing algorithms of share-frequent itemsets mining are developed for the static dataset and they have to rebuild their knowledge and mine the share-frequent itemsets every time when minimum share is changed or the dataset is modified.  In this paper, we propose an effi cient BitTable knowledge that can capture the incremental data very ef ficiently so it will append and mine only for a new transaction. It considerably reduces mining time by using previous BitTable knowledge and mining results. One can use SQL for querying share-frequent itemsets at his/her minimum share values, without new mining. For the future work, we will improve time complexity for finding sharefrequent itemsets and process for updating the BitTable knowledge R EFERENCES 1   Agrawal, R., Imielinski, T., Swami, A, çMining Association Rule between S ets of Items in Large Database SIGMOD ê93 ACM Press, Washington DC, United state, June 1993, 207-216 2 Agrawal, R., and Srikant R, çFast Algorithm for Mining Association Rules VLDB 1994 Morgan Kaufmann, Chile September 12-15, 1994 487-499 3  S. Kotsiantis, and D. Kanellopoulos, çAssociation Rules Mining: A Recent Overviewé , Proc. GESTS Inter national Transactions on Computer Science and Engineering, vol. 32\(1\6, pp. 71-82 4  P.Gong, C. Yang, H Li, and W. Kou, çThe Application of Improved Association Rules Data Mining Algorithm Apriori in CRM IEEE Transactions on Knowledge and Data Engineering, 2007 5 S. Liao, C. Hsieh, and S. Huang, çMining product maps for new product development in Expert Systems with Applications, vol. 34, 2008, 50-62 6 A. Omari, S. Conrad, and S. Alcic, çDesigning a Well Structured E-Shop Using Asso ciation Rule Mining,é IEEE Transactions on Knowledge and Data Engineering, 2008 7 K. Neelu, A. Neeru, and P. K. R., çAn Algorithm for Mining Multidimensional Association Rules using Boolean Matrix,é IEEE International Conference on Recent Trends in Information Telecommunication and Computing, 2010 8 B.Barber, H. J. Hamilton, çExtracting share frequent itemset with infrequent subsetsé, Data mining and Knowledge Discovery, July 2003 153-185 9 C. L. Carter, H. J. Hamilton, and N. Cercone, çSha re based measures for itemsets In: H. J. Komorowski, J. M. Zytkow \(eds.\ 1 st European Conf on the Principles of Data Mining and Knowledge Discovery. Lecture Notes in Computer Science, Vol. 1263, Springer-Verlag, Berlin Heidelberg New York, 1997, 14-24  B. Barber and H. J. Hamilton, çAlgorithms for mining share frequent itemsets containing infrequent subsetsé, in Proc PKDD 2000  316-324  B. Barber and H. J. Hamilton, çParametric algorithm for mining share frequent itemsets,é Journal of In telligent Information Systems, vol. 16 2001, 277-293 12  A   F  Cho w dh ur y  T  K  Sy e d an d J  By e o ng Soo, çAn Efficient Method for Incremental Mining of ShareFrequent Patterns,é in International Asia Pacific Web Conference, 2010, 147-153 Table VI The NOTATION Symbols Definition m The total number of all items in database  n The total number of all transaction in database  p The total number of all items in transaction of ResultSet scenario when db update q The total number of all transaction in ResultSet \(scenario when db update  ResultSet are the set of transactions after the BitTable is filtered 361 


13 Y  C  L i, J  S  Y e h an d C.C. Chang, çA fast algorithm for mining share frequent itemsets,é in Proc APWeb 2005 417-428  J. Han, J. Pei, Y. Yin, and R. Mao, çMining frequent patterns without candidate generation: a frequentpattern tree approach,é Data M ining and Knowledge Discovery, vol. 8, 2004, 53-87  J. Haiwei, çA Counting Mining Algorithm of Maximum Frequent Itemset Based on Matrix,é in Proc FSKD 2010 1418-1422  D. Jie and H. Min, çBitTableFI: An efficient mining frequent itemsets algo rithm,é  in Knowledge Based Systems 20 2007, 329-335  D.Burdick, M. Calimlim, J. Flannick, J. Gehrke, T.M. Yiu, çMAFIA: a maximal frequent itemset algorithm,é IEEE Transactions on Knowledge and Data Engineering 17\(11\ \(205\, 1490-1504  Y C  L i  J  S Yeh an d C C Chang, çDirect candidates generation: a novel algorithm for discovering complete sharefrequent itemsets,é in Proc FSKD 2005, pp. 551-560 362 


greater than 70 A. Steps of the experiment Example 1: extraction of characteristic views Based on a minimum support of 50% and a minimum confidence threshold of 80%, we tested our method on a 3D object of the class Helicopter. The obtained outcomes are shown in figure 2 Figure 2. Characteristic views of the object  m1312.off Example 2: Research of objects that are similar to the 2D requested view Using a minimum support of 50% and a minimum confidence threshold of 80%, the research of similarity according to our method and the use of probability on a 2D request example produces the outcomes displayed in figure3 Figure 3. 3D objects that are similar to the requested 2D view of class airplane B. Measurement of performance indices For a more accurate analysis of performance, a study in terms of curve \(Recall/Precision be denoted by the following fomula \(Osada     We apply our algorithm  CHARM and Extraction of association rules between views and the Kmeans algorithm over 10 requested views of the same object of the class airplane of the Benchmark base. These views are randomly selected by a program. ie from a 342 views of the object "fighter", Our search algorithm selects a random 10 views queries. Figure 4 displays results comparing Kmeans \(in red algorithm in blue Figure 4. Curves of Recall/ Precision with values of 10 requested views To measure the performance of our algorithm, we applied the two indices of performance mentioned above Figure 4 displays the Recall/Precision curve computed using our algorithm and the Kmeans curve. In this figure, we notice that the accuracy score of the first 35 K \(first third 100% for our suggested method. This means that most of the objects that are similar to the requested object are placed at the top of the search list. And, as of the K greater than 35 \(second thirds which signifies that the rest of the objets \(belonging to the 


same class ranked/placed* as two thirds in the search list. These indices are in accordance with the visual results displayed in Figure 3 On the other hand, the Kmeans algorithm gives a result between 70 and 33% for the first 35K \(first third that the first third of the search list contains a combination of objects: those belonging to the same class as the requested object and others belonging to other classes. Moreover, the K that is greater than 35 corresponds to a score less than 85 which suggests that the rest of the objects belonging to the same class that are similar to the requested object are far from the top of list search V. CONCLUSION In this article, we introduced the concept of 3D object indexation, in particular the indexation from the views of these 3D objects. First, we introduced an algorithm that is independent of the 2D used descriptor in order to extract the characteristic views of a 3D object. The outcomes of this method are very satisfying since this latter reduces the 3D object size \(instead of using 342 initial views, the system automatically reduces this number depending on the threshold of the distance  to a smaller number be characterized by a small number of views called characteristic views. Next, we used the probabilistic bayesian view \(translated by T.F Ansary, J.P. Vandeborred and M Daoudi[5 displayed results highlight the good performances of this method compared to some classical methods of classification This method produces great results when the object size is big enough, with more than 340 views per object These tests are performed based on Princeton Shape benchmark REFERENCES 1] Rakesh Agrawal , Ramakrishnan Srikant, Fast Algorithms for Mining Association Rules in Large Databases, Proceedings of the 20th International Conference on Very Large Data Bases, p.487-499 September 12-15, 1994 2] Mohammed J. Zaki, Member, IEEE, and Ching-Jui Hsiao Efficient Algorithms for Mining Closed Itemsets and Their Lattice Structure IEEE TRANSACTIONS ON KNOWLEDGE AND DATA ENGINEERING VOL. 17, NO. 4, APRIL 2005 3] A. Baskurt, F. Blum, M. Daoudi, J.L. Dugelay, F. Dupont, A. Dutartre 


T. Filali Ansary, F. Fratani, E. Garcia, G. Lavou, D. Lichau, F. Preteux J. Ricard, B. Savage, J.P. Vandeborre, T. Zaharia. SEMANTIC-3D COMPRESSION, INDEXATION ET TATOUAGE DE DONNES 3D Rseau National de Recherche en Tlcommunications \(RNRT 2002 4] T.Zaharia F.Prteux, Descripteurs de forme : Etude compare des approches 3D et 2D/3D 3D versus 2D/3D Shape Descriptors: A Comparative study 5] T.F.Ansary J.P.Vandeborre M.Daoudi, Recherche de modles 3D de pices mcaniques base sur les moments de Zernike 6] A. Khothanzad, Y. H. Hong, Invariant image recognition by Zernike moments, IEEE Trans. Pattern Anal. Match. Intell.,12 \(5 1990 7] Agrawal R., Imielinski T., Swani A. \(1993 between sets of items in large databases. In : Proceedings of the ACM SIGMOD Conference on Management of Data, Washington DC, USA 8] Hbrail G., Lechevallier Y. \(2003 In : Govaert G. Analyse des donnes. Ed. Lavoisier, Paris, pp 323-355 9] T.F.Ansary J.P.Vandeborre M.Daoudi, une approche baysinne pour lindexation de modles 3D base sur les vues caractristiques 10] Ansary, T. F.   Daoudi, M.   Vandeborre, J.-P. A Bayesian 3-D Search Engine Using Adaptive Views Clustering, IEEE Transactions on Multimedia, 2007 11] Ansary, T.F.   Vandeborre, J.-P.   Mahmoudi, S.   Daoudi, M. A Bayesian framework for 3D models retrieval based on characteristic views, 3D Data Processing, Visualization and Transmission, 2004 3DPVT 2004. Proceedings. 2nd International Symposium Publication Date: 6-9 Sept. 2004 12] Agrawal R., Srikant R., Fast algorithms for mining association rules in larges databases. In Proceeding of the 20th international conference on Very Large Dada Bases \(VLDB94 September 1994 13] U. Fayyad, G.Piatetsky-Shapiro, and Padhraic Smyth, From Data Mining toKnowledge Discovery in Databases, American Association for Artificial Intelligence. All rights reserved. 0738-4602-1996 14] S.Lallich, O.Teytaud,  valuation et validation de l'intrt des rgles d'association 15] Osada, R., Funkhouser, T., Chazelle, B. et Dobkin, D. \(\( Matching 3D Models with Shape Distributions International Conference on Shape Modeling & Applications \(SMI 01 pages 154168. IEEE Computer Society,Washington, DC, Etat-Unis 2001 16] W.Y. Kim et Y.S. Kim. A region-based shape descriptor using Zernike 


moments. Signal Processing : Image Communication, 16 :95100, 2000 


And put forward that we could use confidence, category homoplasy and relevancy strength to improve the quality of feature extension modes. We also verified that confidence category homoplasy and relevancy strength are effective through our experiments. In the same time we have drawn the following conclusions: \(1 relationships for short-text can improve their classification performance; \(2 effectiveness of information in the feature extension mode library we should choose the suitable thresholds; \(3 information is too small to meet the demand of short-text feature extension. So we should find out a perfect method which can increase information coverage in the feature extension mode library for short-text classification; \(4 extension library for short-text extension effectively, i.e., choosing a perfect feature extension strategy is also our further work ACKNOWLEDGMENT The research is supported in part by the National Natural Science Foundation of China under grant number 60703010 the Nature Science Foundation of Chongqing province in China under grant number CSTC, 2009BB2079, and the Scientific Research Foundation for the Returned Overseas Chinese Scholars of Ministry of Education of China under grant number [2007] 1109 REFERENCES 1] Fabrizio Sebastiani.Machine Learning in Automated Text Categorization, A.ACM Computing Surveys, C.2002.34\(1 2] Fan Xing-hua,Wang peng. Chinese Short-Text Classification in TwoStep, J.Journal of DaLian Maritime Universtiy, 2008,11\(2 3] Zelikovitz S. and Hirsh H. Improving Short Text Classification Using Unlabeled Background Knowledge to Assess Document Similarity C. In: Proceedings of ICML-2002, 2002, 1183-1190 4] Wang Xi-wei,Fan Xing-hua and Zhao Jun. A Method for Chinese Short Text Classification Based on Feature Extension, J.Journal of Computer Applications,2009,29\(3 5] JIAWEI HAN,JIAN PEI ,YIWEN YIN, BUNYING MAO.Ming Frequent Patterns without Candidate Generation:A Frequent-Pattern Tree.Data Mining and Knowledge Discovery,2004,8:53-87 6] Liu Fei. Huang Xuan-qing and Wu Li-de.Approach for Extracting Thematic Terms Based on Association Rule, J.Computer Engineering,2008\(4 7] Xinhua Fan, Jianyun Nie. Link Distribution Dependency Model for 


Document Retrieval, C.Journal of Information and Computational Science6:3\(2009  90 


shows that proposed post mining of association rule mining technique for missing sensor data estimation is an area worth to explore REFERENCES 1] Agrawal, R., & Imielinski, T., & Swami, A., "Mining association rules between sets of items in massive databases", International Conference on Management of Data, 1993 2] Austin, F. I., "Austin Freeway ITS Data Archive", Retrieved January 2003 from http://austindata.tamu.eduidefauIt.asp 3] Bastide, Y., & Pasquier, N., & Taouil, R, & Stumme, G., & Lakhal L., "Mining minimal non-redundant association rules using frequent closed itemsets", First International Conference on Computational Logic, 2000 4] Cool, A. L., "A review of methods for dealing with missing data The Annual Meeting of the Southwest Educational Research Association, 2000 5] Deshpande, A., & Guestrin C., & Madden, S., "Using probabilistic models for data management in acquisitional environments", The Conference on Innovative Data Systems Research, 2005 6] Halatchev, M., & Gruenwald, L., "Estimating missing values in related sensor data streams", International Conference on Management of Data, 2005 7] Iannacchione, V. G., "Weighted sequential hot deck imputation macros", Proceedings of the SAS Users Group International Conference, 1982 8] Nan Jiang, "Discovering Association Rules in Data Streams Based On Closed Pattern Mining", SIGMOD Ph.D. Workshop on Innovative Database Research, 2007 9] Li, Y., & Liu, Z. T., & Chen, L., & Cheng, W., & Xie, C.H Extracting minimal non-redundant association rules from QCIL The 4th International Conference on Computer and Information Technology, 2004 10] Little, R 1. A., & Rubin, D. B., "Statistical analysis with missing data", New York: John Wiley and Sons, 1987 II] McLachlan, G., & Thriyambakam, K., "The EM algorithm and extensions", New York: John Wiley & Sons, 1997 12] Mitchell, T., "Machine Learning", McGraw Hill, 1997 13] Papadimitriou, S., & Sun, 1., & Faloutsos, C., "Streaming pattern discovery in multiple time-series", The International Conference on Very Large Databases, 2005 14] Rubin, D., "Multiple imputations for nonresponce in surveys", New York: John Wiley & Sons, 1987 


15] Shafer, 1., "Model-Based Imputations of Census Short-Form Items In Proceedings of the Annual Research Conference, 1995 16] Taouil, R., & Pasquier, N., & Bastide, Y., & Lakhal, L., "Mining bases for association rules using closed sets", International Conference on Data Engineering, 2000 17] Wilkinson & The AP A Task Force on Statistical Inference, 1999 18] Zaki, M. 1., Hsiao, C. 1., "Efficient algorithms for mining closed itemsets and their lattice structure", IEEE Transactions on Knowledge and Data Engineering, 2005 V5-106 


General Chair f!!\f  Organizing Chairs  f!!\f  f$% \f!!\f  Organizing Co-chairs f    f  f\f   f\f\f   f*!\f!\f.\f  f f  Program Committee Chairs  f\f\f   f!!\f  Publication Chair 0   


200 250 300  The size of dataset/10,000 R es po ns e tim e S    a 0 50 100 150 200  The size of dataset/10,000 R es po ns e tim e S    b 0 10 20 30 40 50 


60  The size of dataset/30,000 R es po ns e tim e S    c Fig. 9 The scalability of our algorithm compared with FP-growth  Paper [12] proposed a way to reduce times of scanning transaction database to reduce the cost of I/O IV. CONCLUSIONS AND FUTURE WORK This paper first discusses the theory of foundations and association rules and presents an association rules mining algorithm, namely, FP-growth algorithm. And then we propose an improved algorithm IFP-growth based on many association rules mining algorithms. At last we implement the algorithm we propose and compare it with algorithm FPgrowth algorithm. The experimental evaluation demonstrates its scalability is much better than algorithm FP-growth 177 Now, lets forecast something we want to do someday Firstly, we would parallelize our algorithm, because data mining needs massive computation, and a parallelable environment could high improve the performance of the algorithm; Secondly, we would apply our algorithm on much more datasets and study the run performance; At last, we would study the performance when the algorithm deal with other kinds of association rules  REFERENCES 1] S. Sumathi and S. N. Sivanandam. Introduction to Data Mining and its Applications, Springer, 2006 2] V. J. Hodge, J. Austin, A survey of outlier detection 


methodologies, Artificial Intelligence Review, 2004, 22 85-126 3] Han, J. and M. Kamber. Data Mining: Concepts and Techniques. Morgan Kaufmann, San. Francisco, 2000 4] Jianchao Han, Mohsen Beheshti. Discovering Both Positive and Negative Fuzzy Association Rules in Large Transaction Databases, Journal of Advanced Computational Intelligence and Intelligent Informatics 2006, 10\(3 5] Jiuyong Li, Hong Shen, Rodney Topor. Mining Informative Rule Set for Prediction. Journal of Intelligent Information Systems, 2004, 22\(2 6] Jianchao Han, and Mohsen Beheshti. Discovering Both Positive and Negative Fuzzy Association Rules in Large Transaction Databases. Journal of Advanced Computational Intelligence, 2006, 10\(3 7] Doug Burdick, Manuel Calimlim, Jason Flannick Johannes Gehrke, Tomi Yiu. MAFIA: A Maximal Frequent Itemset Algorithm. IEEE Transactions on Knowledge and Data Engineering, 2005, 17\(11 1504 8] Assaf Schuster, Ran Wolff, Dan Trock. A highperformance distributed algorithm for mining association rules. Knowledge and Information Systems, 2005, 7\(4 458-475 9] Mohammed J. Zaki. Mining Non-Redundant Association Rules. 2004, 9\(3 10] J.Han, J.Pei, Y.Yin, Mining frequent patterns without candidate generation, Proceedings ACM SIGMOD 2000 Dallas, TX, May 2000: 1-12 11] P.Viola, M.Jones. Rapid Object Detection Using A Boosted Cascade of Simple Features. Proc. IEEE Conf. on Computer Vision and Pattern Recognition, 2001 12] Anthony K. H. Tung, Hongjun Lu, Jiawei Han, Ling FengJan. Efficient Mining of Intertransaction Association Rules. 2003, 154\(1 178 


For each vertex b in g form j forests body\(a, g, i s.t. bodyAnt\(a, g, i a, g, i with itemsets Ant\(b b and each subset of itemsets Ant\(b b in P\(a, g, j Assign to each leaf l of trees bodyAnt\(a, g, i bodyCons\(a, g, i a fresh variable Vm,M, m, M = size\(itemset\(l Assign to each leaf l of tree headAnt\(a, g, j the variable assigned to itemset l in some leaf of some tree bodyCons\(a, g, i TABLE II.  EXPERIMENTAL DATA Conf. #rules #pruned #dftrs PtC 0.5 6604 2985 1114 0.6 2697 2081 25 0.75 1867 1606 10 0.8 1266 1176 0 0.95 892 866 1 0.98 705 699 1 DSP 0.5 2473 1168 268 0.6 1696 869 64 0.75 1509 844 89 0.8 1290 1030 29 0.95 1032 889 15 0.98 759 723 1 Arry 0.5 770 492 82 0.6 520 353 60 0.75 472 327 39 0.8 408 287 22 0.95 361 255 25 0.98 314 243 30  Our induction algorithm has been launched for each combination of thresholds. Our scheme eliminates all redundant rules in the sense of [25, 31], i.e. those association rules that are not in the covers. All the meta-rule deductive schemes implicitly included in [25] and [31] are induced by our method. The percentage of pruning, thus, outperforms [25 


The results produced for k=3, support 0.25 and confidences between 0.7 and 0.99 are shown in Fig. 3, in terms of pruning percentage \(vertical axis when applied to low confidences \(from 0.7 to 0.9 The percentage of pruning achieved diminishes as the confidence is superior to 0.9. Nevertheless, the pruning is effective with confidence of 0.99 in the majority of cases Pruning at Support = 0.25 0,00 5,00 10,00 15,00 20,00 25,00 30,00 35,00 40,00 45,00 50,00 0,7 0,8 0,9 0,95 0,99 Confidence P ru n in g L e v e l Case 1 Case 2 Case 3  Figure 3.  Pruning experiences at support 0.25  V. DISCUSSION AND CHALLENGES It is important to discuss the technique presented here with focus on the purpose the technique pursues:  to produce semantic recommendation The reader should have noticed that the algorithm presented 


relies strongly on "choice". For instance, the algorithm chooses ears in the graph to form an order for elimination, and the choice is arbitrary. This strategy is essential to maintain low complexity \(polynomial practical. Nevertheless, a warned reader may conclude that this arbitrary choice implies that there are many compactions to produce and therefore the approach as a whole does not show to produce an optimal solution. And the reader is right in this conclusion. Since the goal is compaction, the search for an optimal solution can be bypassed provided a substantial level of pruning is achieved To complete the whole view, we describe how web service descriptions are complemented with the association rules as recommendations. In effect, under our scheme, the document describing the web service is augmented with a set of OWL/RDF/S triples that only incorporate the non-pruned rules with the format of Example 1, that is, the set ARmin of the compaction program obtained by our algorithm, together with the thresholds applied to the mining process and a registered URI of a registered description service. The assumptions and defeaters are not added to the web service description. If the associations encoded in the triples are not sufficient for the client \(a search engine, for instance widening of the response to the description service identified by the given URI, and then the assumptions and defeaters are produced. The reasoning task required for deriving all the implicitly published rules is client responsibility Notice that, under this scheme, the actual rules that appear as members of the set initial ARmin set are irrelevant; the only important issue is the size of the set The developed scheme also supports an extension of the algorithm that admits the assignment of priorities to rules and to itemsets, in order to allow the user to produce a more controlled program as output. Nonetheless, the importance of the extension has not been already tested, and therefore it is beyond the subject of the present paper It would be also interesting to design a scheme that supports queries where the client provides an itemset class and values for support and confidence and the engine produces a maximal class of inferred associated itemsets as a response. This scheme is also under development, so we have not discussed this aspect here 


VI. CONCLUSION In this paper, we have presented a defeasible logic framework for managing associations that helps in reducing the number of rules found in a set of discovered associations. We have presented an induction algorithm for inducing programs in our logic, made of assumption schemas, a reduced set of association rules and a set of counter-arguments to conclusions called defeaters, guaranteeing that every pruned rule can be effectively inferred from the output. Our approach outperform those of [17], because all reduction compactions presented there can be expressed and induced in our framework, and several other patterns, particular to the given datasets, can also be found. In addition, since a set of definite clauses can be obtained from the induced programs, the knowledge obtained can be modularly inserted in a richer inference engine Abduction can be also attempted, asking for justifications that explain the presence of certain association in the dataset The framework presented can be extended in several ways Admitting defeaters to appear in the head of assumption, to define user interest Admitting arithmetic expressions within assumptions for adjustment in pruning Admitting set formation patterns as itemset constants Extending the scope, to cover temporal association rules REFERENCES 1]  R. Agrawal, and R. Srikant: Fast algorithms for mining association rules In Proc. Intl Conf. Very Large Databases. \(1994 2]  A. V. Aho, J. E. Hopcroft, J. Ullman. The design and analysis of computer algorithms, Addison-Wesley, 1974 3]  G. Antoniou, D. Billington, G. Governatori, M. J. Maher, A. Rock: A Family of Defeasible Reasoning Logics and its Implementation. ECAI 2000: 459-463 4]  G. Antoniou, D. Billington, G. Governatori, M. J. Maher: Representation results for defeasible logic. ACM Trans. Comput. Log. 2\(2 2001 5]  A. Basel, A. Mahafzah, M. Al-Badarneh: A new sampling technique for association rule mining, Journal of Information Science, Vol. 35, No. 3 358-376 \(2009 6]  R. Bayardo and R. Agrawal: Mining the Most Interesting Rules. In Proc of the Fifth ACMSIGKDD Intl Conf. on Knowledge Discovery and Data Mining, 145-154, \(1999 


7]  R. Bayardo, R. Agrawal, and D. Gunopulos: Constraint-based Rule Mining in Large, Dense Databases. Data Mining and Knowledge Discovery Journal, Vol. 4, Num-bers 2/3, 217-240. \(2000 8]  A. Berrado, G. Runger: Using metarules to organize and group discovered association rules. Data Mining and Knowledge Discovery Vol 14, Issue 3. \(2007 9]  S. Brin, R. Motwani, J. Ullman, and S. Tsur: Dynamic itemset counting and implication rules for market basket analysis. In Proc. ACMSIGMOD Intl Conf. Management of Data. \(1997 10] L. Cristofor and D.Simovici: Generating an nformative Cover for Association Rules. In ICDM 2002, Maebashi City, Japan. \(2002 11] Y. Fu and J. Han: Meta-rule Guided Mining of association rules in relational databases. In Proc. Intl Workshop on Knowledge Discovery and Deductive and Object-Oriented Databases. \(1995 12] B. Goethals, E. Hoekx, J. Van den Bussche: Mining tree queries in a graph. KDD: 61-69. \(2005 13] G. Governatori, D. H. Pham, S. Raboczi, A. Newman and S. Takur: On Extending RuleML for Modal Defeasible Logic. RuleML, LNCS 5321 89-103. \(2008  14] G. Governatori and A. Stranieri. Towards the application of association rules for defeasible rules discovery In Legal Knowledge and Information Systems, JURIX, IOS Press, 63-75. \(2001 15] J. Han, J. Pei and Y. Yin: Mining frequent patterns without candidate generation. In Proc. ACM-SIGMOD Intl Conf. Management of Data 2000 16] C. Hbert, B. Crmilleux: Optimized Rule Mining Through a Unified Framework for Interestingness Measures. DaWaK: LNCS 4081, 238247. \(2006 17] E. Hoekx, J. Van den Bussche: Mining for Tree-Query Associations in a Graph. ICDM 2006: 254-264 18] R. Huebner: Diversity-Based Interestingness Measures For Association Rule Mining. Proceedings of ASBBS Volume 16 Number 1, \(2009 19] B. Johnston, Guido Governatori: An algorithm for the induction of defeasible logic theories from databases. Proceedings of the 14th Australasian Database Conference, 75-83. \(2003 20] P. Kazienko: Mining Indirect Association Rules For Web Recommendation. Int. J. Appl. Math. Comput. Sci., Vol. 19, No. 1, 165 186. \(2009 21] M. Klemettinen, H. Mannila, P. Ronkainen, H. Toivonen, and A Verkamo: Finding interesting rules from large sets of discovered association rules. In Proc. 3rd Intl Conf. on Information and Knowledge 


Management. \(1994 22] M. J. Maher, A. Rock, G. Antoniou, D. Billington, T. Miller: Efficient Defeasible Reasoning Systems. International Journal on Artificial Intelligence Tools 10\(4 2001 23] C. Marinica, F. Guillet, and H. Briand: Post-Processing of Discovered Association Rules Using Ontologies. The Second International Workshop on Domain Driven Data Mining, Pisa, Italy \(2008 24] N. Pasquier, Y. Bastide, R. Taouil, and L. Lakhal: Closed sets based discovery of small covers for association rules. In Proc. BDA'99 Conference, 361-381 \(1999 25] N. Pasquier, R. Taouil, I. Bastide, G. Stume, and  L. Lakhal: Generating a Condensed Representation for Association Rules. In Journal of Intelligent Information Systems, 24:1, 29-60 \(2005 26] P. Pothipruk, G. Governatori: ALE Defeasible Description Logic Australian Conference on Artificial Intelligence.  110-119 \(2006 27] J. Sandvig, B. Mobasher Robustness of collaborative recommendation based on association rule mining, Proceedings of the ACM Conference on Recommender Systems \(2007 28] W. Shen, K. Ong, B. Mitbander, and C. Zaniolo: Metaqueries for data mining. In Fayaad, U. et al. Eds. Advances in Knowledge Discovery and Data Mining. \(1996 29] I. Song, G. Governatori: Nested Rules in Defeasible Logic. RuleML LNCS 3791, 204-208 \(2005 30] H. Toivonen, M. Klemettinen, P. Ronkainer, K. Hatonen, and H Mannila: Pruning and grouping discovered association rules. In ECML Workshop on Statistics, Machine Learning and KDD. \(1995 31] M. Zaki: Generating Non-Redundant Association Rules. In Proc. of the Sixth ACMSIGKDD Intl Conf. on Knowledge Discovery and Data Mining, 34-43, \(2000 32] w3c. OWL Ontology Web Language Reference. In http://www.w3.org/TR/2004/REC-owl-ref-20040210 33] w3c. RDF/XML Syntax Specification. In: http://www.w3.org/TR/rdfsyntax-grammar 34] w3c. RDF Schema. In: http://www.w3.org/TR/rdf-schema      


 8   2  3\f            8  D    F  \b 1 8 & #J      b 1  1  4    2  


4 1    9  E 1  2 4 1    9 1   4      8 2  8 1  D 1        1 1  b 


     b b b b b  K            8          2 D 9   F  \b 1 8 ,+J  9 


     b 1     1 2  9 1  12 L 1   9  8       1  2      2   


     b b b b b  K            2  0 \b f  b\f      9       


  8 2   E 1   1     M13 31L 1    b  8E 1   1 #3\b?### 1  1     E 1   1 \b?###3        


1   1   b 1  2 2 18 2     8              1    2 \b 1    2  


    2          2   1 L 2 1   1   L 2 2    2 1  2        


    8  2H D \b A             2  2H D \b A 2 \f 3%\f  f   4%\f f !  , \f\b  C    2    2 


 6    3 1      253 6   1 L 2    6   1         f\b3\f       


               1     1     8 2    E       2  1   


     2 8    b 4      1 8             1 2     1  8 2  


1 9    8      2 1       1     2    8    2 3\f        


     8 D 4 9  F  \b 1 8 #J 9 1     2 1   2 #-@ 1   2 9  E 1   1   2 9      6  


    8  8   1  D 1         1 F  \b0         2 D    F  \b 1 8  9  


  1 9  1   E 1  2 9     1 1 F  \b       1    18   F   1    1 #-$+  \b  2 2  


1 D     1 #-$+.B- 0/:% .0             9 1      18    1 6     1 2  1  1  


1   6      2    1 2 E 8 D 1      1 2   1   1 #-4  #-@E     2  1  1  1       


 8     1          2 F    6   F  2   8    2 C<CC/C N\bO 5      


CD    b$44NO F P Q 6   2 b$$$ ,=\b\bA  A N,O 2 C C  b$$4N  92 2   f  9-\b$$4 B N?O  !-    91  2 1 HH111-18-N+O    -1 :3%   2     0-4 


     b N4O 2   2- \f  C b$@$ \b# >\b\b$3\b$N@O  f :.% 9 /9 \f    1  6  f 2  4   A254 


Advantages of Our M ethod Advantages of Our M ethod Exploit the memory v ertical data format utilizes slidin g windows to g form a much larger database to analyze  Flexibility in Choosing what to choose  Choosing what to choose to build the rules Computational and memory efficiency We have a team working only on this aspect 45 Associative IDS for NextGen Frameworks Dr S Dua LA Tech 45 


Preliminary Results Intra transaction Relations Data rate simulator NH-134 Mb HOP PATH update \(Y/N Inference 11.5 Y Y 2 0.120 N N      Y   n 0.345 N NH134 Y/N   Inf 1 0.150 N N 2 0 120 Y N Inter transaction Relations 2 0  120 Y N       5 5.55 0.456 Y Relations  n 0.345 N N Nmap on DMRL nmap.org 


Anticipated Outcome Anticipated Outcome Develop algorithm capable of learning from a given heterogeneous diverse Develop algorithm capable of learning from a given heterogeneous diverse data ff Dynamic algorithmic f ramework designed to shi f t modalities and sampling rates based on complex logic Flexibility of integration into the Snort intrusion detection system 47 Associative IDS for NextGen Frameworks Dr S Dua LA Tech 47 


References References Aircraft Cockpit Image courtesy USAF http://www.faa.gov htt p   www.faa g ov  air traffic  technolo gy  p g  _ gy  Acharya R Dua S Du X Sree V Chua C K Automated Diagnosis of Glaucoma Using Texture and Higher Order Spectra Features To appear in IEEE Transactions on Information Technology in Biomedicine  Du X Dua S 2011 Cancer Prognosis Using Support Vector Regression in Imaging  Modality World Journal of Clinical Oncology 2  1   44 49 Du X Dua S 2010 Salient Frame Extraction Using Support Vector Regression and Motion Features pp 5 Proc of the National Aerospace and Electronics Conference July 14 16 2010 D M P D S 2010 Di i i ti Ft d Cl ifi ti Mthd f D essaue r  M  P  D ua S  2010  Di scr i m i na ti ve F ea t ures an d Cl ass ifi ca ti on M e th o d s f or Accurate Classification 1st ed vol 7704 pp 14 Bellingham WA Proceedings of SPIE Dessauer M P Dua S 2010 Low Resolution Vehicle Tracking using Dense and Reduced Local Gradient Features Maps 1st ed vol 7694 pp 8 Bellingham WA Proceedings of SPIE SPIE 


Acknowledgements Acknowledgements Fundin g A g encies  US 4 1 Million direct fundin g g g 4 g LA BoR NIH NSF AFRL AFOSR and NASA Research Team Samuel Kasimalla Brandy McKnight Dr Pradeep Chowriappa Connor Johnson Vasanth Nair Mihir Chowriappa  Connor Johnson  Vasanth Nair  Mihir Karnik Mohit Jain and Swadheen Songmen Associative IDS for NextGen Frameworks Dr S Dua LA Tech 49 All the respective Logos belong to their owners 


Rf d Rdi R e f erence d R ea di ngs Copyright of cover pages held by respective publishers 


Thank You Questions Thank You  Questions Dr Sumeet Dua E mail sdua@latech.edu Web http://dmrl.latech.edu Associative IDS for NextGen Frameworks Frameworks Dr S Dua LA Tech 51 Image Source roadtrafficsigns.com 


