html><head></head><body><pre style="word-wrap: break-word; white-space: pre-wrap;">Mining  Confident Minimal Rules with Fixed-Consequents Imad Rahal, Dongmei Ren, Weihua Wu, and William Perrizo Department of Computer Science and Operations Research North Dakota State University imad.rahal@ndsu.nodak.edu Abstract Association rule mining \(ARM association rules in data that match some measures of interest such as support and confidence In certain situations where high support is not necessarily of interest, fixed-consequent association-rule mining for confident rules might be favored over traditional ARM The need for fixed consequent ARM is becoming more evident in a number of applications such as market basket research \(MBR Highly confident rules are desired in all situations however, support thresholds fluctuate with the applications and the data sets under study as we shall show later. In this paper1, we propose an approach for mining minimal confident rules in the context of fixedconsequent ARM that relieves the user from the burden of specifying a minimum support threshold. We show that the framework suggested herein is efficient and can be easily expanded by adding new pruning conditions pertaining to specific situations 1. Introduction Association rule mining [1] is considered one of the most important applications, by far, to ever emanate from the data mining community. It was initially proposed by Agrawal et al in 1993 [1] for market basket data in what is known as Market Basket Research \(MBR transactions each containing a list of items bought by a customer during a single visit to a store. An association r u l e  o f  t h e  f o r m  X  Y  r e l a t e s  t w o  s e t s  o f  i t e m s   X  a n d  Y, where X is called the antecedent and Y the consequent of the rule. The underpinning relation follows the direction of the arrow \(from X to Y then described as  customers who buy X are very likely 1 This work was partially supported by the GSA grant ACT K96130308 to buy Y  The degree of likeliness of an association rule is determined by external measures associated with it. Two ubiquitously used measures are support and confidence [1] [2]. The former measures the number of transactions containing both the antecedent and consequent sets of items \(i.e. statistical significance of the rule to measure the proportion of the transactions containing the antecedent that also contain the consequent \(i.e. strength of the rule proposed goal in [1] for association rule mining is to find all the rules with support and confidence surpassing some minimum user-specified thresholds A number of approaches such as [6] and [14] use extra parameters to code user  s rule preferences, thus reducing the total number of produced rules. Some of the suggested parameters in the literature include lift 6], conviction [6] [19] and reliability [3]. It is worth noting that the naming used for the parameters is not standard. A point made against those measures is that while they attempt to capture user preferences more fully, they obviously overburden the user with more parameter tuning. Other algorithms take a different approach for coding user preferences by requiring the rules to have special formats through the integration of item constraints [5]. One popular type of item constraints is the consequent constraint where all the rules are required to have the consequent specified by the user. Numerous applications exist for consequent 


the user. Numerous applications exist for consequentconstraint-based ARM \(aka fixed-consequent ARM such as in MBR where one is interested in finding which items are sold with a specific set of items of interest for the purpose of running promotions on it Though this information can also be obtained through the use of the general ARM scheme proposed by Agrawal et al and then the application of a  postARM  processing step to retain only those rules that have the specified item set as consequents, we believe that since users are not interested in the rest of the rules it would not be optimal to burden them with more processing time for generating additional rules that will Proceedings of the 16th IEEE International Conference on Tools with Artificial Intelligence  ICTAI 2004 1082-3409/04 $20.00  2004 IEEE eventually be removed through the  post-ARM   processing step In this paper, we motivate the need for fixedconsequent ARM and present an algorithm based on set enumeration trees [17] and P-trees [10] [16] for this purpose bearing in mind the importance of alleviating the burden of user parameter tuning. Our algorithm produces confident minimal rules in an efficient manner as we shall experimentally demonstrate This paper is organized as follows: In section 2 we explain the notion of fixed-consequent, confidencebased ARM and motivate its need. Section 3 discusses the set enumeration tree structure which is the underpinning framework for our algorithm. In section 4 we present our proposed algorithm. Section 5 discusses details about the implementation devised for this work in addition to some performance analysis We finally end this paper with some concluding remarks in section 6 2. Towards mining confident, minimal fixed-consequent rules As aforementioned, the algorithm proposed herein is based on the fixed-consequent constraint. Users specify the set of items they wish to have as a consequent for all the produced rules and then the algorithm returns the rules that match. Some applications that motivate this type of environment include MBR and agricultural data analysis 2.1.  Fixed-consequent ARM As mentioned in our introduction, using MBR some stores may want to find all the rules that have a certain item or set of items as a consequent for the purpose of running some promotions on those specific i t e m s   I n  t h i s  c o n t e x t   a  r u l e  o f  t h e  f o r m  X  Y   w h e r e  X and Y are item sets and Y is user specified, can inform the analyst that since people that buy X are inclined to buy Y then to promote the sales of Y we can run some promotion on Y that also includes X Perhaps the use of fixed-consequent ARM is more evidently needed in the context of precision agriculture. Agricultural data is usually described by visible reflectance bands \(Blue, Green and Red infrared reflectance bands \(e.g., NIR, MIR1, MIR2 and TIR from ground sensors such as yield quantity, yield quality, and soil attributes like moisture and nitrate levels. For simplicity and without loss of generality we will consider the following relation, R, as a prototypic relation for this type of data: R \(Red, Green Blue, NIR  Yield quality are usually interested in finding high yield quality given other properties like Red, Green, Blue, etc  as a result, using high yield quality as our fixed consequent, we get rules describing the best reflectance bands combinations that produce high yield [11]. Some 


bands combinations that produce high yield [11]. Some applications in medical research investigate patient records to analyze the characteristics that lead to the death of patients \(or the existence of chronic diseases such a task can be accomplished in a similar manner 2.2.  Confidence-based ARM We take confidence-based ARM to mean that users only specify the confidence threshold of interest. In general, users are always interested in high-confidence rules. The higher the confidence of a rule, the lower the error rate of generalizing it over the data set. A rule with a confidence value of 95% tells us that we are tolerating an error rate of 5% when we assume the validity of the corresponding rule. We believe it should be totally up to the user to specify the error rate that can be tolerated In spite of the fact that we are always interested in rules with high confidence values, we argue that support fluctuates depending on the data set we operate on. In some data sets, high support values are always desired. This is the case with MBR data because store managers always like to see high support values for their rules. However, this is not the case with other data sets. Considering our medical research example again, let us suppose that we have a large database of patient records. We are interested in finding what combinations of attributes stored in those records that imply the death of the patient. Ideally, we would require our ARM application to detect such rules early on so that we could attempt to diagnose the problem   if any  before the support of those rules increases in the database. Similar considerations apply to fraud and copy detection In [9], Cohen et al motivates the need for lowsupport, high-confidence rules by observing that usually high support rules are obvious and well-known unlike low-support ones which provide  interesting   insights into the data. Example applications for lowsupport high-confidence ARM mentioned in [9 include copy detection [18] \(for identifying similar documents for making recommendations to users based on behavior similarity to others  We have devised our algorithm to generate the highest support rules that match the user  s specified minimum threshold without having the user to specify any support threshold. By doing so, we would reduce the number of parameters supplied on behalf of the user relieving her from the burden of determining an Proceedings of the 16th IEEE International Conference on Tools with Artificial Intelligence  ICTAI 2004 1082-3409/04 $20.00  2004 IEEE optimal value for the support threshold in order to produce meaningful and interesting rules 2.3.  Rule minimality property We will assume that the minimum confidence threshold c \(usually high represents the threshold of interest; as a result, any two rules having confidence values exceeding c, where the antecedent of one of them is a superset of the antecedent of the other, are to a great extent equally interesting to the user. Support comes into the picture to tip the scales in the direction of the rule with higher support. For example, suppose we generate two rules R1 and R2, with confidence values greater than the confidence threshold where R1 is  formula milk     diapers  and R2 is  formula milk    baby shampoo      diapers  R1 and R2 are considered very equally interesting to the user, and thus we select only the one with greater support value and prune the other. Since R2  s antecedent is a superset of R1  s, then R1  s support 


R2  s antecedent is a superset of R1  s, then R1  s support is surely greater than or equal to R2  s. A more contextual justification for our choice would be by arguing that since the user knows that  formula milk      diapers  from R1 no new knowledge is given by R2  formula milk    baby shampoo      diapers   In this context, we refer to R1 as a minimal rule and R2 as non-minimal. Formally speaking, a rule, R, is said to be non-minimal, if there exists at least one other rule, S, such that both rules have confidence values greater than the minimum confidence threshold, have the same consequent, and the antecedent of R is a superset of that of S. Producing minimal rules can be viewed as an extension over previous approaches in the literature such as [9] and [12] which restrict their work to rules of item pairs only \(i.e. one item in the antecedent and one item is the consequent The work in [4] [7] [15] support our claim of the importance of minimal rules. [4] uses the notion of non-redundant or minimal rules to refer to rules with the smallest possible antecedents and largest possible consequents. This matches our rule minimality definition to a large extent since we also require the antecedent to be as small as possible; however, we relax the requirement on the consequent because we are dealing with fixed consequents. [7] emphasizes the importance of  small  rules in the context of genome analysis while [15] extends it to medical data 3. Set enumeration trees The algorithm presented herein is modeled after a well-known set enumeration structure that supports complete and non-redundant search of an item space the Set Enumeration \(SE  framework provides us with a scheme for enumerating all possible subsets of an item set without redundancy by imposing an ordering on the set of items, and for presenting them graphically in a tree structure thus shifting our problem from a random subset search problem to an organized tree search problem. The reader is referred to [17] for more details on SE trees In the general context of ARM, a number of publications in the literature have suggested using SE trees for mining association rules. [8] proposes two new tree data structures based on SE trees along with algorithms that demonstrate significant speed and storage savings. [5] presents an interesting approach for mining association rules with fixed consequents at very low support thresholds.  As we shall demonstrate later in this paper, the structure of the SE tree can be utilized for our problem too as it provides a framework which facilitates easy augmentation of pruning conditions along its branches thus reducing the space of considered item subsets and focusing only on what adheres to our notion of  interestingness   4. The proposed approach We say that transaction, t, supports an item set, I, if every item in I exists in t. As in [1] and [2], the support of an item set is defined by the proportion of transactions supporting that item set. The support of a rule is the support of the union of all item sets existing on both sides of the rule. The confidence of a rule is defined as the proportion of transactions supporting the antecedent of the rule that also supports the consequent of the rule and is calculated as the ratio between the support of the rule and the support of the antecedent of the rule 4.1 Pruning After the user specifies a minimum confidence threshold, minconf, and a consequent item set, C, our algorithm proceeds by the creating an SE-tree structure. Every node in the tree represents the 


structure. Every node in the tree represents the a n t e c e d e n t  i t e m  s e t  o f  t h e  r u l e  I  C   W h e n e v e r  w e  create a new node, n, in the tree and label it with an item set, I, we apply the pruning conditions listed next to check whether we can terminate the processing at n pre-maturely thus reducing the space. By terminating a node, we stop further processing at that node and no longer list any item sets under it. We exploit the following three pruning conditions   Z e r o c o n f i d e n c e  p r u n i n g   I f  t h e  c o n f i d e n c e  I  C     0   t h e n  t e r m i n a t e  n  Proceedings of the 16th IEEE International Conference on Tools with Artificial Intelligence  ICTAI 2004 1082-3409/04 $20.00  2004 IEEE   O n e s u p p o r t  p r u n i n g   I f  t h e  s u p p o r t   I  C     1   then terminate n   M i n i m a l i t y  p r u n i n g   I f  t h e  c o n f i d e n c e   I  C    g t    minconf, then terminate n Zero-confidence pruning is a simple and straight forward pruning condition based on the observation that if the support of a certain item set, I, is zero then every superset of I has a zero support; as a result, any rule formed by replacing the antecedent of a rule having a zero confidence by a superset of that antecedent will also have a zero confidence. To justify t h a t    s u p p o s e  a  r u l e  I  C  h a s  a  s u p p o r t  o f  z e r o   i  e   s u p p o r t  I  U  C     0    a s  a  r e s u l t   t h e  c o n f i d e n c e  o f  I  C is also zero   r e c a l l  t h a t  c o n f i d e n c e  I  C     s u p p o r t  I  C     s u p p o r t  I    S u p p o s e  t h a t  I  is a superset of I; we know that support of \(I  U C I  U C I U C I   C   i s  z e r o  a n d  t h u s  c o n f i d e n c e  o f  I   C  i s  a l s o  z e r o   I n  s h o r t   i f  w e  k n o w  t h a t  a  r u l e  I   C  h a s  a  z e r o  confidence, then there is no need to process the supersets, I  of I and calculate the confidence values of the rules I   C  Rules with support equal to 1 are based on a single sample from the database and thus are not rules per se N o t e  t h a t  i f  t h e  s u p p o r t  o f  a n y  r u l e  I  C  i s  1   t h e n  a n y  non-minimal rule formed from this rule can not have a support greater than 1. In practice we can easily combine the previous two pruning conditions by pruning a node if its support is less than or equal to 1 this is because the confidence of a rule is equal to zero if and only if its support is equal to zero. Hereinafter we shall refer to those two pruning conditions combined as the support-less-than-two pruning The minimality pruning condition is based on our previous argument presented in section 2.3 for the need to remove non-minimal rules. Once we generate a rule R   I  C  w i t h  c o n f i d e n c e  v a l u e  e x c e e d i n g  m i n c o n f   w e  terminate the node, n, that generated R because all successor nodes of n may only generate non-minimal rules of R according to our definition of minimality As noted earlier, other pruning conditions that pertain to special situations can be easily added to our set of conditions and tested in a similar manner. Each pruning condition when satisfied results in node termination Our algorithm employs the two pruning conditions support-less-than-two pruning and minimality pruning to prune the SE tree. Every time we generate a new item set, I, at some node, n, three scenarios may transpire   S u p p o r t  o f   I  C   i s  l e s s  t h a n  2   w e  t e r m i n a t e  n   C o n f i d e n c e  o f   I  C   i s  i n  t h e  r a n g e   0   m i n c o n f  exclusively; we continue processing without terminating n   C o n f i d e n c e  o f   I  C   i s  g r e a t e r  o r  e q u a l  t o  m i n c o n f   w e  t e r m i n a t e  n  a n d  o u t p u t  I  C   a s  a  r u l e  The formal algorithm is depicted in Figure 2. Note 


that our algorithm is complete in terms of producing all confident minimal rules. We omit the proof due to space limitations Figure 2. The formal algorithm 4.2 Ensuring rule minimality Suppose we have a set of items {1, 2, 3  11} with 11 being the fixed consequent. Suppose further that we are currently working with node 1 and that to the right of 1 we have two un-terminated nodes, 9 and 8,9. Both nodes will be considered with 1 because node 8,9 falls under node 8 in the tree and is thus independent of the result of the join of 1 and 9. A possible scenario would b e  f o r  b o t h  r u l e s   1  9  1 1  a n d  1  8  9  1 1   t o  s u c c e e d  thus we end up generating a non-minimal rule 1  8  9  1 1  i n  t h i s  c a s e    Another scenario we need to consider is when rule 9  1 1  h a s  s u p p o r t  0  o r  1   t h e n  t h e r e  i s  n o  n e e d  t o  t r y  r u l e  1  8  9  1 1  b e c a u s e  i t s  s u p p o r t  i s  a l s o  g o i n g  t o  b e  0  Input: an ordered list of items, minconf, and the consequent item set Output: set of minimal rules satisfying minconf Algorithm   C r e a t e  t h e  r o o t  n o d e   t h e  e m p t y  s e t     F o r  e v e r y  i t e m   I   i n  o u r  o r d e r e d  l i s t  o f  i t e m s   d o  the following o Generate a new node, n o Insert n under the root from right to left o Label n with I o Depending on the resulting confidence and s u p p o r t  o f   I  C    p r o c e e d  w i t h  o n e  o f  t h e  following   I f  s u p p o r t  o f   I  C   i s  l e s s  t h a n  2  t h e n  terminate n   I f  c o n f i d e n c e  o f   I  C   i s  g r e a t e r  o r  e q u a l  to minconf then terminate n and output I  C   a s  a  r u l e    I f  c o n f i d e n c e  o f   I  C   i s  i n  t h e  r a n g e   0   minconf terminated node, Unter-n, to the right n working from highest level in the tree down, and at each level processing nodes right to left   G e n e r a t e  a  n e w  n o d e   n n     I n s e r t  n n  u n d e r  n  f r o m  r i g h t  t o  l e f t      L a b e l  n n  w i t h  t h e  l a b e l  o f  U n t e r n   Note that the item set represented by nn is the union of the items in n and Untern   R e c u r s i v e l y  r e p e a t  t h e  c o n f i d e n c e  testing process for nn Proceedings of the 16th IEEE International Conference on Tools with Artificial Intelligence  ICTAI 2004 1082-3409/04 $20.00  2004 IEEE or 1. In this scenario, our algorithm will not produce undesired rules but will test for rules whose outcome is known beforehand which undesirable because this involves the time-consuming process of scanning a large database to compute the support and confidence of the rule  in cases where a non-vertical database layout is adopted To rectify this problem, we associate a temporary taboo list \(TL the nodes that are pruned under I. For example, if 1  9  1 1  i s  n o t  a  c o n f i d e n t  r u l e  o r  i t s  s u p p o r t  i s  l e s s  than 2, then we append 9 to 1  s taboo list \(TL1 for short r u l e  u n d e r  n o d e  1   1  X  1 1   w e  c h e c k  i f  a n y  s u b s e t  o f  X is in TL1. If so, we directly terminate X under 1 and add X to TL1. This may seem unfeasible at first however, an efficient implementation has been devised 


as we shall discuss in more details in section 5.2 5. Implementation &amp; performance analysis 5.1.  The P-tree technology2 Our implementation for this work is based on an efficient data structure, the P-tree \(Predicate or Peano tree relational data in a loss-less compressed column-wise format by splitting each attribute into bits, grouping bits at each bit position, and representing each bit group by a P-tree. To create P-trees from transactional binary data, we store all bit values in each binary attribute for all the transactions separately. In other words, we group all bits, for all transactions t in the table, in each binary attribute, separately. Each such group of bits is called a bit group. Figure 3 shows the process of creating P-trees from a binary relational table. Part b groups, one for each attribute in a show the resulting P-trees, P1 and P2, one for each of the bit groups in b recursively partitioning the bit groups into halves Each P-tree will record the total number of 1s in the corresponding bit group on the root level. The second level in the tree gives the number of 1s in each of the halves of the bit group. The first node from the left on the second level will give the number of 1s in the first half of the bit group; similarly, the second node will give the number of 1s in the second half of the bit group. This logic is continued throughout the tree with each node recording the number of 1s in either the first or the second half \(depending on whether it is the left or right node 2 Patents are pending for the P-tree technology parent node. In practice, we do not directly store the number of 1s, but a 1 if the node contains only 1s and a 0 otherwise. Nodes containing only 1s or only 0s are considered pure \(otherwise they are mixed partitioned further  called pure-1 and pure-0 respectively. This aspect is referred to as P-tree compression [10] [16] and is one of the most important characteristics of the P-tree technology. Note that we can easily differentiate between pure-0 nodes and mixed nodes by the fact that pure-0 nodes have no children \(i.e. they are leaf nodes P1-trees corresponding to the P-trees in Figure 3 P1-trees are manipulated using operations such as AND, OR, NOT and ROOTCOUNT \(the count of the number of  1  s in the bit group represented by the tree in order to query the underlying data. The reader is referred to [10] [16] for more details on P-trees and their logical operators   Figure 3. Construction of basic P-trees Figure 4. Pure-1 Trees Note that by using P-trees, we can compute the confidence of rules in a quick and efficient manner without any database scans represented by a P-tree, Pi; to get the support of an item, we issue a ROOTCOUNT operation on the P-tree of that item. To get the support of an item set of size more than one, we AND the P-trees of the items in the a 0 00 0 1 1   0 0 01 0 1 b 


b c 3 30 1 2 1   0 6 24 0 2 d Column1   Column2 0                 1 0                 1 0                 1 0                 1 1                 0 0                 0 1                 1 1                 1 b bit groups 0 0 0 0 1 0 1 1 1 1 1 1 0 0 1 1 a Proceedings of the 16th IEEE International Conference on Tools with Artificial Intelligence  ICTAI 2004 1082-3409/04 $20.00  2004 IEEE item set and then issue a ROOTCOUNT operation on the result 5.2.  Taboo lists For every new item I, we create a new node under the root and test for potential rules with all possible unterminated nodes lying to I  s right. The actual node creation order of the SE tree is the lexicographic subset ordering of the items in the given item list. For example, the node creation order for the set {1,2,3 would be: {1}, {2}, {1,2} ,{3}, {1,3}, {2,3}, {1,2,3 This ensures that every item set has all its subsets before it For every item, I, we maintain a TLI which saves the item sets whose outcomes, when joined with I, are known beforehand and thus need not be tested. In our implementation, each TLI is a P-tree having a size equal to the number of un-terminated nodes to the right of I \(i.e. all nodes that I will be tested with is used for nodes which, when joined with I, result in the firing of some pruning condition; thus, none of their supersets need to be tested with I. The remaining TLI entries will be 0s. For example, for the set of items 1,2,3,4}, suppose that the nodes created so far are 1}, {2}, {1,2} ,{3}, {1,3}, {2,3}, {1,2,3}. For node 4 we initialize a TL4 having 7 entries all containing 0s initially. If the joining of item 4 with node {2} results in firing at least one pruning condition, then the second entry pointing to item set {2} is flagged with 1, and so are all entries containing 2 \(i.e. entries pointing to 1,2}, {2,3} and {1,2,3 


1,2}, {2,3} and {1,2,3 tell which other entries contain item 2? We maintain for each item an index list as a P-tree \(called an index P-tree item exists in. For example, item 1 will have the following index list \(it will be stored as a P-tree but we are just listing the entries in a list for convenience 1,0,1,0,1,0,1. In other words, viewing the nodes of the SE tree in node creation order, item 1 occurs in node positions 1, 3, 5 and 7. Every new node added to the SE tree results in the expansion of all index P-trees by either a 1, if the corresponding item is in the new node added, or a 0, otherwise Going back to the previous scenario where the joining of item 4 with node {2} results in firing at least one pruning condition and thus node {2} need to be added to TL4, we simply OR the index P-tree of item 2 with TL4. In general, if we want to add node {x y  z} to some taboo list, TLI, we AND the index Ptrees for all items in the node \(i.e. AND index P-tree of x with that of y  with that of z us where item set {x, y  z} occurs. We then OR the resulting P-tree index with TLI which results in appending node {x, y  z} to TLI We maintain the taboo lists and index lists as Ptrees as this will give us faster logical operations and compression. In addition, in the case of taboo lists, it could speed the node traversal especially in cases where there many consecutive 1  s. For example suppose the entries in a taboo list are: 1111 0011 Figure 5 below shows the corresponding P-tree of the given taboo list Figure 5. The resulting taboo list in P-tree format In this example, instead of going through the first four nodes sequentially and then skipping them because they are flagged, using a P-tree to represent the taboo list, we can directly skip the first 4 entries because they form a pure-1 node on 2nd level of the Ptree It is worth mentioning that our traversal through the itemset space using taboo lists is very similar to a popular approach used in AI literature and known as Tabu search [13]. The idea in Tabu search is to traverse the space in a more effective manner by avoiding moves that result in revisiting points in the space previously visited whose outcome is known not to be acceptable \(hence the name "tabu   union of I and X produces an infrequent itemset implies that future joins of I with any superset of X will produce an infrequent itemset; a scenario similar in essence to revisiting a point in the search space whose outcome is known to be unsatisfactory and which could be circumvented by putting the point on a Tabu list. Because of the difference in context and problem definition, we refer to our lists as taboo lists instead of Tabu lists 5.3.  Comparison analysis To the best of our knowledge, no previous work has attempted to mine the type of rules we are considering We find [5] to be particularly interesting as it proposes an algorithm called Dense-Miner which is capable of mining association rules with fixed consequents at very low support thresholds. For the lack of a better benchmark, we will compare our approach with DenseMiner; however, we have to emphasize that a number 1                  0 0                    1 0 Proceedings of the 16th IEEE International Conference on Tools with Artificial Intelligence  ICTAI 2004 


ICTAI 2004 1082-3409/04 $20.00  2004 IEEE of fundamental differences exists between the two approaches which we briefly outline next   D e n s e M i n e r  m i n e s  a l l  a s s o c i a t i o n  r u l e s  w h i l e  w e  only mine minimal, confident rules   D e n s e M i n e r  u s e s  s u p p o r t  a s  a  p r u n i n g  m e c h a n i s m  while this is not the case in our work \(In reality we also use support pruning, but in our case, the support threshold is always set to 2  as an absolute threshold In terms of rule overlap between the two approaches, all rules produced by our approach that have a support value greater than the minimum support threshold used for Dense-Miner will be produced by Dense-Miner also Table 2. Data sets description Table 3 Connect-4 Dataset 0 500 1000 1500 2000 2500 3000 3500 20 30 40 50 60 70 80 90 100 Confidence Threshold Ti m e s  P-tree based Dense Miner PUMSB Dataset 0 500 1000 1500 2000 2500 40 50 60 70 80 90 100 Confidence Threshold T im e s  P-tree based Dense Miner Figure 6. Speed comparison All experiments were conducted on a P-II 400 with 128 SDRAM running Red hat Linux 9.1.  C++ was used for coding. We experimented on two real-life dense data sets, Connect-4 and PUMSB, which are available at the UCI data repository. Table 2 below briefly describes the two datasets by listing the number of transactions, items, and items per transaction for each data set Connect-4 Dataset 0 50 100 150 200 250 20 25 30 35 40 45 50 55 60 65 70 75 80 85 90 95 99 99 5 Confidence Threshold 


N um be r of ru le s PUMSB-4 Dataset 0 20000 40000 60000 80000 100000 120000 140000 160000 20 25 30 35 40 45 50 55 60 65 70 75 80 85 90 91 91 5 Confidence Threshold N u m be r of ru le s Figure 7. Number of rules produced Figure 6 shows the time in seconds needed to mines rules at different confidence thresholds by our approach \(P-tree based aforementioned, Dense-Miner mines all rules using support pruning. It uses a variant of support referred to as coverage and defines the minimum coverage threshold as the minimum support divided by support of the fixed consequent. Results for Dense-Miner are observed with minimum coverage threshold fixed at 1% and 5%, respectively Our approach, on the other hand, mines only minimal rules without using any support pruning. It is very clear from the figure that users interested in minimal rules without support would prefer our approach as the time needed is many orders of magnitude less than that of Dense-Miner The user might notice from both parts of Figure 6 how the two approaches differ in the way they produce the rules. Dense-Miner takes more time at lower confidence while our approach takes more time at higher confidence thresholds. This is mainly because our approach mines minimal rules using only confidence pruning and the higher the confidence threshold, the more difficult it would be to get confident rules high in the SE tree; as a result, the SE tree grows deeper and thus requires more time to traverse. Dense-Miner, on the other hand, mines all Trans. Items Items per trans Connect-4 67557 129 43 PUMSB 49046 7117 74 Proceedings of the 16th IEEE International Conference on Tools with Artificial Intelligence  ICTAI 2004 1082-3409/04 $20.00  2004 IEEE rules and it is very logical to have more rules satisfying lower confidence thresholds \(and vice versa obviously requires more time to mine The number of rules produced by Dense-Miner ranges from around 500,000 rules to less than 10 rules over both data sets. Figure 7 shows the number of rules produced by our approach over the two data sets at the 


produced by our approach over the two data sets at the different confidence thresholds. The same discussion presented in the previous paragraph applies here regarding the larger \(smaller produced at higher \(lower 6. Conclusion In this paper we proposed a framework based on SE-trees and the P-tree technology for extracting minimal, confident rules using fixed-consequent ARM Our methodology relieves the user from the burden of specifying a minimum support threshold by extracting the highest support rules that satisfy user confidence threshold. Albeit, to the best of our knowledge, no previous work has attempted to mine minimal confident rules with fixed consequents, we provide a comparison analysis study showing how well we compare to other close approaches in the literature In terms of limitations, we acknowledge that our approach suffers in situations where the desired rules lie deep in the tree because a large number of nodes and levels need to be traversed then. A future direction in this area targets finding measures for estimating the probability of rule availability along certain branches and quitting early in cases where such probability is low 7. References 1] R. Agrawal, T. Imielinski, and A. Swami, Mining association rules between sets of items in large databases Proceedings of the ACM SIGMOD \(Washington, D.C 1993 2] R. Agrawal and R. Srikant, Fast algorithms for mining association rules. Proceeding of the VLDB \(Santiago, Chile 1994 3] K. Ahmed, N. EI-Makky and Y. Taha  A note on  Beyond Market Baskets: Generalizing association rules to correlations  ACM SIGKDD Explorations, Vol. 1, Issue 2 pp. 46-48, 2000 4] Y. Bastide, N. Pasquier, R. Taouil, G. Stumme, and L Lakhal, Mining Minimal Non-Redundant Association Rules using Frequent Closed Item sets. Proceedings of the First International Conference on Computational Logic \(London UK 5] R. Bayardo, R. Agrawal, and D. Gunopulos, ConstraintBased Rule Mining in Large, Dense Databases. Proceedings of the IEEE ICDE \(Sydney, Australia 6] R. Bayardo and R. Agrawal, Mining the most interesting rules. Proceedings of the ACM SIGKDD \(San Diego, CA 1999 7] C. Becquet, S. Blachon, B. Jeudy, JF. Boulicaut, and O Grandrillon  Strong-association-rule mining for large-scale gene expression data analysis: a case on human SAGE data   Genome Biology, 3\(12 8] F. Coene, P. Leng, and S. Ahmed  Data Structure for Association Rule Mining: T-Tree and P-Trees  IEEE transactions on Knowledge and Data Engineering 16\(6 778, 2004 9] E. Cohen, M. Datar, S. Fujiwara, A. Gionis, P. Indyk, R Motwani, J. D. Ullman, and C. Yang  Finding interesting associations without support pruning  IEEE Transactions on Knowledge and Data Engineering, 13\(1  78, 2001 10] Q. Ding, M. Khan, A. Roy, and W. Perrizo, The p-tree algebra. Proceedings of the ACM SAC, Symposium on Applied Computing \(Madrid, Spain 11] Qin Ding, Qiang Ding, and W. Perrizo, Association Rule Mining on Remotely Sensed Images Using P-trees Proceedings of the PAKDD, Pacific-Asia Conference on Knowledge Discovery and Data Mining, Springer-Verlag Lecture Notes in Artificial Intelligence 2336, 66-79, May 2002 12] S. Fujiwara, J. D. Ullman and R. Motwani, Dynamic 


12] S. Fujiwara, J. D. Ullman and R. Motwani, Dynamic Miss-Counting Algorithms: Finding Implications and Similarity Rules with Confidence Pruning. Proceedings of the IEEE ICDE \(San Diego, CA 13] F. Glover  Tabu Search for Nonlinear and Parametric Optimization \(with Links to Genetic Algorithms  Discrete Applied Mathematics 49 \(1-3 14] M. Klemettinen, H. Mannila, P. Ronkainen, H Toivonen, and A. Verkamo, Finding interesting rules from large sets of discovered association rules. Proceedings of the ACM CIKM, International Conference on Information and Knowledge Management \(Kansas City, Missouri 1999 15] C. Ordonez, C. Santana, and L. de Braal, Discovering Interesting Association Rules in Medical Data. Proceedings of the IEEE Advances in Digital Libraries Conference Baltimore, MD 16] W. Perrizo, Peano count tree technology lab notes Technical Report NDSU-CS-TR-01-1, 2001 http://www.cs.ndsu.nodak. edu /~perrizo classes/785/pct.html. January 2003 17] Ron Raymon, An SE-tree based Characterization of the Induction Problem. Proceedings of the ICML, International Conference on Machine Learning \(Washington, D.C 275, 1993 18] N. Shivakumar, and H. Garcia-Molina, Building a Scalable and Accurate Copy Detection Mechanism Proceedings of the International Conference on the Theory and Practice of Digital Libraries, 1996 19] P. Tan, and V. Kumar, Interestingness Measures for Association Patterns: A Perspective, KDD  2000 Workshop on Post-processing in Machine Learning and Data Mining Boston, 2000 20] H.R. Varian, and P. Resnick, Eds. CACM Special Issue on Recommender Systems. Communications of the ACM 40 1997 Proceedings of the 16th IEEE International Conference on Tools with Artificial Intelligence  ICTAI 2004 1082-3409/04 $20.00  2004 IEEE pre></body></html 


per by Ganti et. al. [9] deals with the measurement of similarity \(or deviation, in the authors  vocabulary between decision trees, frequent itemsets and clusters Although this is already a powerful approach, it is not generic enough for our purpose. The most relevant research e?ort in the literature, concerning pattern management is found in the ?eld of inductive databases Proceedings of the 16th International Conference on Scientific and Statistical Database  Management \(SSDBM  04 1099-3371/04 $ 20.00  2004 IEEE meant as databases that, in addition to data, also contain patterns [10], [7]. Our approach di?ers from the inductive database one mainly in two ways. Firstly, while only association rules and string patterns are usually considered there and no attempt is made towards a general pattern model, in our approach no prede?ned pattern types are considered and the main focus lies in devising a general and extensible model for patterns Secondly, di?erently from [10], we claim that the peculiarities of patterns in terms of structure and behavior together with the characteristic of the expected workload on them, call for a logical separation between the database and the pattern-base in order to ensure e?cient handling of both raw data and patterns through dedicated management systems Finally, we remark that even if some languages have been proposed for pattern generation and retrieval 14, 11], they mainly deal with speci?c types of patterns \(in general, association rules sider the more general problem of de?ning safe and su?ciently expressive language for querying heterogeneous patterns 7. Conclusions and Future Work In this paper we have dealt with the issue of modelling and managing patterns in a database-like setting Our approach is enabled through a Pattern-Base Management System, enabling the storage, querying and management of interesting abstractions of data which we call patterns. In this paper, we have \(a de?ned the logical foundations for the global setting of PBMS management through a model that covers data patterns and intermediate mappings and \(b language issues for PBMS management. To this end we presented a pattern speci?cation language for pattern management along with safety constraints for its usage and introduced queries and query operators and identi?ed interesting query classes Several research issues remain open. First, it is an interesting topic to incorporate the notion of type and class hierarchies in the model [15]. Second, we have intentionally avoided a deep discussion of statistical measures in this paper: it is more than a trivial task to de?ne a generic ontology of statistical measures for any kind of patterns out of the various methodologies that exist \(general probabilities Dempster-Schafer, Bayesian Networks, etc. [16 nally, pattern-base management is not a mature technology: as a recent survey shows [6], it is quite cumbersome to leverage their functionality through objectrelational technology and therefore, their design and engineering is an interesting topic of research References 1] Common Warehouse Metamodel \(CWM http://www.omg.org/cwm, 2001 2] ISO SQL/MM Part 6. http://www.sql99.org/SC32/WG4/Progression Documents/FCD/fcddatamining-2001-05.pdf, 2001 3] Java Data Mining API http://www.jcp.org/jsr/detail/73.prt, 2003 4] Predictive Model Markup Language \(PMML http://www.dmg.org 


http://www.dmg.org pmmlspecs v2/pmml v2 0.html, 2003 5] S. Abiteboul and C. Beeri. The power of languages for the manipulation of complex values. VLDB Journal 4\(4  794, 1995 6] B. Catania, A. Maddalena, E. Bertino, I. Duci, and Y.Theodoridis. Towards abenchmark for patternbases http://dke.cti.gr/panda/index.htm, 2003 7] L. De Raedt. A perspective on inductive databases SIGKDD Explorations, 4\(2  77, 2002 8] M. Escobar-Molano, R. Hull, and D. Jacobs. Safety and translation of calculus queries with scalar functions. In Proceedings of PODS, pages 253  264. ACMPress, 1993 9] V. Ganti, R. Ramakrishnan, J. Gehrke, andW.-Y. Loh A framework for measuring distances in data characteristics. PODS, 1999 10] T. Imielinski and H. Mannila. A database perspective on knowledge discovery. Communications of the ACM 39\(11  64, 1996 11] T. Imielinski and A. Virmani. MSQL: A Query Language for Database Mining. Data Mining and Knowledge Discovery, 2\(4  408, 1999 12] P. Kanellakis, G. Kuper, and P. Revesz. Constraint QueryLanguages. Journal of Computer and SystemSciences, 51\(1  52, 1995 13] P. Lyman and H. R. Varian. How much information http://www.sims.berkeley.edu/how-much-info, 2000 14] R.Meo, G. Psaila, and S. Ceri. An Extension to SQL for Mining Association Rules. Data Mining and Knowledge DiscoveryM, 2\(2  224, 1999 15] S. Rizzi, E. Bertino, B. Catania, M. Golfarelli M. Halkidi, M. Terrovitis, P. Vassiliadis, M. Vazirgiannis, and E. Vrachnos. Towards a logical model for patterns. In Proceedings of ER 2003, 2003 16] A. Siblerschatz and A. Tuzhillin. What makes patterns interesting in knowledge discovery systems. IEEE TKDE, 8\(6  974, 1996 17] D. Suciu. Domain-independent queries on databases with external functions. In Proceedings ICDT, volume 893, pages 177  190, 1995 18] M.Terrovitis, P.Vassiliadis, S. Skadopoulos, E. Bertino B. Catania, and A. Maddalena. Modeling and language support for the management of patternbases. Technical Report TR-2004-2, National Technical University of Athens, 2004. Available at http://www.dblab.ece.ntua.gr/pubs Proceedings of the 16th International Conference on Scientific and Statistical Database  Management \(SSDBM  04 1099-3371/04 $ 20.00  2004 IEEE pre></body></html 


The reason of the hiding failure of SWA is the same in Fig.8 Notice the result at x = 0.7646 in Fig.14, because the hiding failure is occurred at the seeds of the sensitive patterns, a high weakness is produced As shown in Fig.15 and Fig.16, the misses cost and dissimil arity of our work decreases as RL2 increases. This is because the larger RL2 is, the less effect on non-sensitive patterns. Also weakness and dissimilarity of SWA are independent of RL2 5. Conclusion In the paper, a novel method improving the balance between sensitive knowledge protecting and discovery on frequent patte rns has been proposed. By setting entries of a sanitization matrix to appropriate values and multiplying the original database by the matrix with some probability policies, a sanitized database is gotten. Moreover, it can avoid F-I Attack absolutely when the confidence level given by users approximates to 1. The experimental results revealed that although misses cost and dissimilarity between the original and sanitized database of our process are little more than SWA, ours provide more safely protection than SWA. Unlike SWA, our sanitization process could not suffer from F-I Attack and the probability policies in our approach also take the minimum support into account, the users only need to decide the confidence level which affects the degree of patterns hiding 6. Reference 1] M. Atallah, E. Bertino, A. Elmagarmid, M. Ibrahim and V. Verykios Disclosure Limitation of Sensitive Rules", Proc. of IEEE Knowledge and Data Engineering Exchange Workshop 1999 2] R. Agrawal and R. Srikant. Fast algorithms for mining association rules. VLDB, Santiago, Chile, 1994 3] R. Agrawal and R. Srikant. Privacy preserving data mining. In ACM SIGMOD, Dallas, Texas, May 2000 4] E. Dasseni, V. Verykios, A. Elmagarmid and E. Bertino, Hiding Association Rules by Using Confidence and Support", Proc. of 4th Intl Information Hiding Workshop \(IHW 5] A. Evfimievski, J. Gehrke, and R. Srikant. Limiting Privacy Breac hed in privacy preserving data mining. SIGMOD/PODS, 2003 6] A. Evfimievski, R. Srikant, R. Agrawal, and J. Gehrke. Privacy preserving mining of association rules. KDD 2002 7] M. Kantarcioglu and C. Clifton. Privacy-preserving distributed mining of association rules on horizontally partitioned data. In ACM SIGMOD Workshop on Research Issues on Data Mining and Knowledge Discovery, June 2002 8] Guanling Lee, Chien-Yu Chang and Arbee L.P Chen. Hiding sensitive patterns in association rules mining. The 28th Annual International Computer Software and Applications Conference 9] Y. Lindell and B. Pinkas. Privacy Preserving Data mining. In CRYPTO, pages 36-54, 2000 10] S. R. M. Oliveira and O. R. Za  ane. Privacy Preserving Frequent Itemset Mining. In Proc. of IEEE ICDM  02 Workshop on Privacy Security, and Data Mining 11] S. R. M. Oliveira and O. R. Za  ane. Algorithms for Balancing Priv acy and Knowledge Discovery in Association Rule Mining. IDEAS  03 12] S. R. M. Oliveira and O. R. Za  ane. Protecting Sensitive Knowledge By Data Sanitization, ICDM  03 13] S. R. M. Oliveira, O. R. Za  ane and Y  cel Saygin. Secure Association Rule Sharing, PAKDD-04 14] Benny Pinks. Cryptographic Techniques For Privacy-Preserving D ata Mining. ACM SIGKDD Explorations Newsletter Vol. 4, Is. 2, 2002 15] S. J. Rizvi and J. R. Haritsa. Maintaining data privacy in association rule mining. VLDB, 2002 16] J. Vaidya and C. W. Clifton. Privacy preserving association rule mining in vertically partitioned data. KDD2002 17] Verykios, V.S.; Elmagarmid, A.K.; Bertino, E.; Saygin, Y.; Dasseni E. Association rule hiding. IEEE Transactions On Knowledge And Data Engineering, Vol. 16, No. 4, April 2004 Proceedings of the 29th Annual International Computer Software and Applications Conference  COMPSAC  05 0730-3157/05 $20.00  2005 IEEE pre></body></html 


pre></body></html 


Batt Power Batt Type Stabilization Type Propulsion Mechanism  of Solar Panels  of Solar Cells Manufacturing Qty Satellites in Constellation On-Orbit Spares Channels Number of Bands Data Storage Processing Power Source type Block Name Thermal Control Material Type Level of Technology Known Inheritance Propulsion station keeping Number of Axes Ground Based Spares Pointing Accuracy APPENDIX C EXISTING MODELS Numerous models are today in use for estimating spacecraft cost Two of the most common are the NASA/Air Force Cost Model and the Aerospace Small Satellite Cost Model Here is a description of the NAFCOM model The NASA/Air Force Cost Model NAFCOM is a parametric estimating toolfor space hardware It is based on historical NASA and Air Force space projects and is primarily used in the very early phases of a development project NAFCOM can be used at the subsystem or component levels The database currently includes 122 missions including 76 unmanned earth orbiting 24 unmanned planetary 11 launch vehicles 8 manned 3 engines It uses parametric relationships to estimate subsystem or component level costs for any aerospace hardware including earth orbital spacecraft manned spacecraft launch vehicle upper stages liquid rocket engines scientific instruments or planetary spacecraft 7 And for the Aerospace Small Satellite Cost Model SSCM employs a parametric methodology for estimation of program cost and is best suited to the early conceptual development phase of a spacecraft program during which time the design is likely to be less mature and when cost and performance trades can be easily performed SSCM consists of a collection of cost-estimating relationships or CERs which estimate the costs of developing andproducing a spacecraft system with the following subsystems  Attitude Determination and Control Subsystem ADCS  Propulsion  Power  Telemetry Tracking  Command TT&C  Command  Data Handling C&DH  Structure  Thermal CERs were also developed for integration assembly and test IA&T program management PM and systems engineering SE and launch and orbital operations support LOOS Individual subsystem cost estimates are statistically rolled up to yield a cost-risk distribution which provides the estimator with a range of cost estimates andpercentiles 8 The SSCM was calibrated from over 100 post-1990 Earth-orbiting andplanetary missions REFERENCES 1 Lack of Disciplined Cost-Estimating Processes Hinders Effective Program Management GAO study 04-642 2 Jilla Cyrus D and Miller David W Satellite Design Past Present and Future International Journal of Small Satellite Engineering 12 February 1997 3 Bearden David A A Complexity Based Risk Assessment of Low-Cost Planetary Missions:When Is A Mission Too Fast and Too Cheap Fourth IAA International Conference On Low-Cost Planetary Missions JHU/APL MAY 2-5 2000 4 Kellogg Mahr and Lobbia An Analogy-based Method for Estimating the Costs of Spacecraft IEEEAC paper 1371 Version 4 5 Hoeting Jennifer A Methodology for Bayesian Model Averaging An Update f 6]btp/ewiieiao iiAaos 7 Keith Smith NASA/Air Force Cost Model Science Applications International Corporation 8 18 


BIOGRAPHIES Lee Fischman served as Principle Investigator for this project Lee is Senior Director of Development at Galorath Incorporated where he directs much of the new product development and research at the firm He developed SEER for Software  Hardware Integrations with Microsoft Project the Comparison Sizing tool COTS Software model in addition to various data mining information extraction and expert systems Previously he was a software designerlprogrammer in the New York financial industry Lee earned a BA from the University of Chicago and an MA from UCLA both in economics Mike Kimel carried out statistical work on the project Mike is an Economist for Galorath Inc in addition to maintaining his own quantitative consulting practice He has also taught Economics and Advanced Statistics at the Graziadio School of Business and Management at Pepperdine University run the Competitive Strategy group for a Fortune 500 Telecom Company and worked as a Consultant at PriceWaterhouse LLC now PriceWaterhouse-Coopers He earned a Ph.D in Economicsfrom UCLA Troy Masters programmed analytic methods and is integrating the Far Out model into its parent product SEER for Hardware previously SEER-H Troy is a Software Engineer with Galorath Incorporated where he has been the primary developer for a range ofproducts He earned a BS in computer science from UCLA David J Pine was our subject matter expert helping us assemble data and gain insight into technical trends Dave is retired after a 34-year career with the National Aeronautics and Space Administration NASA currently is a consultant to various government and industry entities While at NASA his organizations in the Office of the Chief Financial Officer and later at the IPAO at Langley Research Center were responsible for the conduct of major NASA program analyses and evaluations for the NASA Administrator and Deputy Administrator From early 1988 through the end of 1990 he was the Deputy Program Manager for the Hubble Space Telescope Program specifically responsible for the telescope operations and science support aspects of the program He earned a BS in Aerospace Engineering from the Polytechnic Institute of Brooklyn and a Masters of Engineering Administration from the George Washington University 19 


  20 Angeles, where he also received a B.S. in Applied Mathematics  Eric Fetzer is a Senior Member of the Technical Staff at the Jet Propulsion Laboratory, Pasadena, California specializing in satellite observations of the atmosphere.  His scientific interests include planetary boundary layer processes, tropical phenomena, upper tropospheric variability, and climatologies of temperature, water vapor and clouds.  His technical interests include analysis of large data sets, and of multi-sensor observations. He has over 20 peer-reviewed publications and given numerous scientific presentations, public lectures and media interviews about climate science. Eric received a B.A. in Physics from the University of California Berkeley, and a Ph.D. in Astrophysical, Planetary and Atmospheric Sciences from the University of Colorado, Boulder   Amy Braverman is a Senior Statistician at the Jet Propulsion Laboratory, California Institute of Technology She holds a B.A. in Economics from Swarthmore College an M.A. in Mathematics from UCLA, and a Ph.D. in Statistics also from UCLA. Prior to her current position in JPL's Science Data Understanding Group, she was a Caltech Post-doctoral Scholar at the Jet Propulsion Laboratory, and a Scientist in the Flight Sciences Experiments Section of the Science Division. Dr Braverman conducts research on information-theoretic methods for the analysis of massive data sets and streams statistical data fusion, high-dimensional data analysis, and statistical analysis for climate model evaluation and diagnosis. She has published in both the statistics and geoscience literature, and is active in both communities She is a member of the Multi-angle Imaging SpectroRadiometer Science Team, and serves as a member of the Atmospheric Infrared Sounder Science Integration Team. Her responsibilities on both missions include designing data reduction algorithms for massive, remote sensing data sets. Dr. Braverman also holds an appointment in the Department of Statistics at UCLA as Adjunct Associate Professor, and is active in UCLA\222s Center for Environmental Statistics. She is member of the Committee on Applied and Theoretical Statistics of the US National Academy of Science. She has refereed for the Journal of the American Statistical Association, the Journal of Computational and Gr aphical Statistics, IEEE Transactions on Geoscience and Remote Sensing, and the Journal of Applied Meteorology and Climatology Seungwon Lee is a senior member of the High Capability Computing and Modeling Group at Jet Propulsion Laboratory. She is conducti ng research on comet gas dynamics, nonlinear dynamics control, climate model parameterization, Earth science data analysis, parallel computing, and advanced numerical algorithms. She received her Ph.D in Physics fr om the Ohio State University and her M.S. and B.S. in Physics from the Seoul National University, Korea  Matthew Henderson is software engineer in the High Capability Computing and Mode ling group at JPL. His current work includes Web Services and Instrument Data Level 2 subsetting. He received a B.S. Computer Science from CSU Pomona, and is currently pursuing M.S Computer Science  Steven J. Lewis is a member of the Information System and Computer Science staff member at the Jet Propulsion Laboratory.  He received a BS in Mathematics from the University of California, Los Angeles in June 2001, and the MS and Ph.D. Degree from Claremont Graduate University in May 2004 and May 2007, respectively.  He worked as a post doctoral fellow at Keck Graduate Institute from June 2007 until he joined JPL in March of 2008.  During his graduate and post doctoral work, his studies focused on applications of Bayesian methods to hidden Markov models with particular interest and application to protein sequencing.  His work at JPL has focused on integrating web services into various programming platforms for the purposes of accessing NASA satellite data, as well as developing object tracking so ftware and contributing to image enhancement and restoration efforts Van Dang is a member of the Science Data Understanding Group at the Jet Propulsion Laboratory. She was responsible for the NEWS Level 2 processing that generated the formal merged Level 2 data from multiple A-Train instruments  Manuel de la Torre is a Physicist from the Universidad Complutense at Madrid \(Spain\. After finishing his Ph.D work at the University of Bayreuth \(Germany\ on pattern formation in turbulent flows and a 7 1/2 year stunt as Ass and Assoc. Prof. at the Escuela T\351cnica Superior de Ingenieros Aeron\341uticos in Madrid \(Spain\, he came to the Jet Propulsion Laboratory on a 1-year Sabatical leave in 1997 wanting to apply fundamental concepts of nonlinear systems and geophysical fluid dynamics to something that might be directly useful to soci ety. He discovered the JPL as a great place to achieve that goal and extende d his stay a bit longer, becoming Technical staff and working on different aspects of remote sensing, validation of satellite instruments, and data analysis of atmospheric processes and climate  


