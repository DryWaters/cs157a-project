A Mechanism of Information-Centric Networking based on Data Centers  
Abstract 
Ming CHEN, Xi WENG, Xiulei WANG, Changyou XING, Guomin ZHANG PLA University of Science & Technology Nanjing, China E-mail: {mingchennj, wengxi1025}@163.com, xiuleiwang1988@gmail.com, changyouxing@126.com zhang_gmwn@163.com   
Information-centric networking \(ICN\ims to make the Internet more data-oriented or content-centric, thus namebased routing and universal caching are used to change the way users requesting and fetching content, as well as to improve network performance. However, current implementation mechanisms define some kinds of "clean-slate 
architecture and certain brand new technologies need to be designed and implemented. In this paper, some requisites reflecting ICNês essential ingredients are generalized, and based on the OpenFlow and the data center technologies, a mechanism called odICN, which can satisfy those aforementioned requisites, is proposed together with its algorithmic framework. Finally, a prototype of odICN is built to verify its feasibility 
Keywords-ICN; OpenFlow; data centers; measurement deployment 
 
 I NTRODUCTION  The surge of Internet traffic makes the traditional 
I 
network architecture exhausted. Many recent papers and research efforts have claimed that the Internet should be shifted away from a point-t o-point paradigm to a more dataoriented one. The idea of information-centric networking ICN\as been around fo ev er, it is rather tepid until mechanisms su ch as data-oriented network architecture  \(DONA d con t en t ce n t ric n e t w or k i ng  CCN os ed, w h ich are f o llo w e d clos el y by several ICN projects and solutions [4pite th at each proposal has its own distinctive terminology, their fundamental principles are common: basic primitives universal caching and content-oriented security m  From another perspective, users can fetch the content 
regardless of which host holds it and where the host holds such content. Compared to the traditional network technologies, ICN could provide several typical benefits as follows: lower response time via pervasive caching and nearest-replica routing; intrinsic content integrity without external network-level indicators; simplified traffic engineering; and better support for mobility and security Although ICN is assured that it could promote the performance of many specific network applications, its implementation is based on considerable cost and some technologies 000\003 
really difficult to realize. For example, in CCN, routers need to support content caching and name 
based routing, which may result in unavoidable increases of the processing, storing and implementing complexity and cost. Fortunately, line-speed forwarding has been demonstrated for CCN/NDN in a Sigcomm'13 demo by Cisco, but there are still many problems to be solved in the future. On the other hand, the performance improvement achieved by pervasive caching and nearest replica routing is analyzed in d th ey  also ou tlin e s a d i r ty s late   incrementally deployable design called idICN, which uses edge caching to gain most of the caching benefits of ICN Experimental results show that in order to gain the benefits of ICN, there is no need to design such a "clean-slate architecture. Therefore, several questions may be asked 
What requisites should an ICN design have How to use the existing technologies to establish a deployable ICN system By exploring these problems, we firstly generalize the requisites that an ICN mechanism should satisfy so as to help understand the essential ingredients of ICN. Secondly based on the OpenFlow and the data center technologies, a novel mechanism \(called odICN\d its algorithmic framework are designed and a prototype is built to verify its feasibility. This mechanism gives us a de facto alternative to construct a low-complicated and deployable ICN system with the existing technologies 
  
  
The rest of this paper is organized as follows. Section 2 presents related work. Section 3 discusses and defines the requisites that should be satisfied in an ICN design. Section 4 introduces the design of the odICN mechanism. Section 5 discusses the implementation of the prototype and the process of experiments. Finally, section 6 presents the conclusion of our work II 
R ELATED W ORK  ICN adopts name-based routing mainly to optimize the transmission of the content in networks y pi cal desi gns  of ICN include CCN  h e n odes i n  ICN maintain a data caching space, and the data requests of 
 
users could be served by any node that caches the data. In addition, ICN introduces nearestreplica routing to lower response time. Fayazbakhsh found that pervasive caching and nearest-replica routing are not fundamentally necessary and most of the performance benefits can be achieved with a simpler caching architecture. A kind of architecture named idICN is proposed in [9 w h ich n o tes th at it is en o u g h to  cache data just at the edge of the network and incremental deployment can be achieved easily based on current architecture. However, the details about how to design and implement an idICN supported router is not mentioned 
2013 International Conference on Advanced Cloud and Big Data 978-1-4799-3261-0/14 $31.00 © 2014 IEEE DOI 10.1109/CBD.2013.4 40 


 
Requisite 1 Requisite 2 
     
 
In recent years, software defined networking \(SDN which controls network behaviors in a programming way provides a new idea for network innovation T h e combination of SDN and ICN can help make better use of the network as well as control it. A new SDN based ICN architecture is proposed in [1 T h e data is cach ed at th e  edge nodes of the network and the requests are processed by the content-aware controller. This proposal focuses attention on traffic engineering. Another solution combining ICN and SDN called CONET is put forward in [12  P r oblem s th a t  may exist during its implementation are discussed, but how to implement it with the existing technologies are not further mentioned While SDN based ICN is trying to make the Internet itself more data-oriented or content-centric, which can be regarded as a network layer solution, content distribution network \(CDN\pular application layer solution that can reduce the download traffic effectively in current Internet architectur CDN, con t e n t w ill be push e d  close to users, but users need to mark the requested content together with its location. In the meantime, it canêt achieve link-level load balance III T HE R EQUISITES FOR ICN From the view of the network users, ICN should provide a lower delay to achieve a better QoE. From the view of ISPs, ICN should lower the cost of the services and support various kinds of applications. Therefore, ICN should contain the following requisites Users simply send the identifier of the content to a network and can fetch the content they want as soon as possible A network can optimize the deployment of the content automatically so as to reduce global traffic Specifically, Requisite 1 implies that ICN should have 3 characteristics A user just submits a certain content identifier to a network and the network can deliver the content to the user quickly A user can fetch the content with lower delay either from the optimum server or on the basis of the load balance of links The identifier and the location of the content are decoupled so as to support the mobility of the users Requisite 2 then demands that a network should have a certain intelligence. That is to say, the network should be able to optimize the deployment of the content based on those prearranged rules. As a result, the entire transmission traffic of the same content across the network can be reduced and both the response time and the cost of ISP can be lower at the same time Obviously, these two requisites have contained most characteristics and advantages that the ICN architecture owns. Although they are still abstract and far away from the implementation, the ICN requisites can actually be used as the guide line to judge and implement ICN. There is no doubt that the Internet architecture now does not satisfy the requisites mentioned above much. When Internet users want to get some content, they must send a request which contains the URL of the content to a known server instead of the network. The routers locating in the core of Internet know little about not only the syntax of packets but also the unit called content. The Internet itself thus certainly cannot optimize the deployment of the content without upper design Is it possible to use the network technologies such as OpenFlow to implement ICN? First, when a user requires a certain content from the network, the OpenFlow switch can forward the request to the controller. The controller can locate the content wanted in the network. If the content is found on a host, then related flow entries will be installed in the switches between the user and the server. Thus Requisite 1 is satisfied. Secondly, the application in the controller can figure out the content optimized deployment by analyzing the distribution of the content and the potential users, the optional location for th e copy of the content as well as the optimization principles. Requisite 2 then can be satisfied too Can the content be cached in the core or edge routers of the network? It is difficult and costly to implement such routers with huge storage and the liner-speed processing ability based on mature technologies right now. Meanwhile the data center supporting cloud computing and storage already has these abilities on the whole. It may be an alternative to let several data centers in the edge of the network afford huge storage and intelligent delivery of the content. So, based on the OpenFlow and the data center technologies, a deployable ICN mechanism called odICN is supposed to be designed and implemented IV D ESIGN OF OD ICN  M ECHANISM   Figure. 1 
The architecture of odICN The architecture of odICN is shown as Fig. 1. There are users, data centers and OpenFlow switches in the data plane and the controller together with the controlling programs in the control plane. These cu stom-tailored controlling programs can handle usersê requests, locate content and optimize deployment. In the data plane, users can download the expected content from the optimum data center and some content can be transmitted from one data center to 
A Basic Idea of odICN  
   
41 


002 
dD 
d P athSet 
002\002    
B Formal Description of odICN 1 CL algorithm 2 COD algorithm 
x x ContentReq r u KÙK x x x x xx ContentReq r u xx D dd Dr Rd x x xx P athSet  u r D x ii dpath ii in i i XX X dpath ii dpath 12 m x   cost cost cost  xx  d  path  
m 
u d s C 
GVE 
another. In the control plane, content deployment can be optimized to minimize download traffic in the entire network. The functions of odICN predicate that it can satisfy the two Requisites for ICN. In addition, when the content is transmitted in the data plane, load balance can be performed in both spatial and temporal dimensions to optimize the distribution of network traffic Specifically, the components of odICN include is a client who submits a content request to the network is a data pool supporting mass data storage. It is usually located near a densely populated region. In general, a data center should supply functions such as content retrieval, query, download and update When the information about content is modified, the data center will inform the controller  is a sort of switch conforming to the OpenFlow standard, which provides functions to configure and query the flow entries in the data plane  is a logic center to control the entire network operating, which provides odICN control intelligence based on the global network topology and resource view. The algorithmic framework of its control components mainly includes three algorithms. Content locating \(CL\ algorithm can redirect usersê requests to the data center containing specific content and costing least Content optimal deployment \(COD\orithm can automatically deploy the selected content to the other data centers according to the given principles, which will optimize the overall performance of ICN. Path optimizing PO\ algorithm can balance the network traffic in both spatial and temporal dimensions Suppose that a graph  is a set of the nodes and a collection E of the edges, where each edge is a pair of the nodes from  includes the controller  the OpenFlow switch set  1  the user set  1  and the data center set  1    and represent the number of the OpenFlow switches, the users and the data centers respectively       conserves the connection relationship between the entities  is  defined as the content resource set owned by the data center  Assume that  is the request primitive which stands for user willing to acquire content from the network is the registration primitive used by data center to inform the controller that content is added, and   is the deployment primitive with which the controller informs the data center deploy the content to data center The three core algorithms in the controller can be described as follows CL has such functions as locating the best data center providing the content, determining the alternatives, evaluating their costs and so on \(see Fig. 2 When searching for the available paths in step 2, filter conditions can be set on demand. For example, setting the limitation of maximum hops to filter unnecessary alternatives. In step 3-6 for   1   and 1   indicates the cost of delivering content from data center to user  along and its value is the weighted sum of multiple decision attributes The decision attributes are defined based on multiple performance metrics, which include the hop number of a path, the transmission bandwidth and the resource use of the data centers and so on. Finally, the proposal   with the least cost is selected. The controller subsequently establishes the forwarding path and forwards to the data center  A perfect COD algorithm will deal with lots of complex problems. The key problem is how to execute content optimal deployment. For example, what content will be copied, where the copies of this content should be put, when to trigger to do so and how the different principles or strategies are compromised. Some simple and typical conditions are considered here. For example, one passive PULL method is to learn the hot level from the usersê requests regionally, shown as step 2 in Fig. 3. When the hot level exceeds the threshold, COD algorithm actively copies the content to the data center closest to those users 
1: Content Locating  content provider and forwarding from to   1    compute the data center set having 2 FindPath   scan the topology and find the available paths from each in compute the cost of each path 4 12    GetAttrs    get the value of attributes numbered from 1 to n which suggests the cost of the candidate proposal   to serve the request in different metrics 5 calculate the total cost 6 7 MinCost  get the index of the proposal which costs least  is the number of proposals 8  Figure. 2 Content locating algorithm 
R d 
ContentLoc  
  
i=1 k-1 
Algorithm Inputs Outputs Func for in do end for return 
User Data center OpenFlow switch Controller 
d path d u r D t o 3 
   
iS Ssi N iU Uui N iD Ddi N S N U N D N x x ContentReq r u x x x x R egistPkt Add",r d KÙK x x x x D eployTsk r d x x i12k p ath  s s s i s S ii s sE i ds E i cost x i d x i p ath 12 n X X X  12 n X X X  xx dpath x x x ContentReq r u KÙK x 
E pq pVqV u r d r r d r u p ath d 
 
004 
 
002 
V V V C 
002 002 002 003\002\002 002 002  
 002 
n ijij j=1 cost  X 
42 


r 
002 
ContentOpt  PathOpt  
 
CurLinkSt 
x x ContentReq r u x x R egistPkt Add",r d x rs x x ContentReq r u x x R egion u x us x xx CurReqInfo r Region x x x x d src d dst r Region x x x x R egistPkt Add",r d x x x x A priJudge r x rs x x rs x x d src d dst r ApriJudge x x 
dD R d 
d src d dst dsrc dsrc ddst 
input input CtnOptProp CtnOptProp CurLinkSt E 
d src d dst d src d dst CurLinkSt 
OpenFlow Switch OpenFlow Switch OpenFlow Switch OpenFlow Switch 
x rs 
    
Another active PUSH method is based on apriori knowledge, shown as step 8. When a certain famous opensource operating system releases its new version, for instance, COD may push copies to all these data centers The core of COD is the function DoCtnOpt which can be overloaded and shown as step 6 and step 12. According to the source and destination information _,_  this function let the controller send  _   to data center _ and thus a copy of content is transmitted from _ to _   13   Figure. 3 PO can balance the network traffic in either spatial dimension or temporal dimension, illustrated in Fig. 4. In temporal dimension, the moment that the content optimal deployment is executed may be optimized and the strategy "deployment when idle" can be used shown as step 2-6 in Fig. 4. The function SetTime sets the startup moment of the deployment, and the moment can be defined in terms of a specific startup time, a startup interval or startup conditions etc. Whatês more, a timer may be set to wake up the waiting deployment task, which is ignored in Fig. 4. In spatial dimension, link load states are monitored when the transmitting content, and the forwarding path can be adjusted flexibly to balance the network traffic load shown as step 7-14. In fact, the temporal and spatial methods can be combined to achieve better results P ROTOTYPE OF OD ICN AND ITS E XPERIMENTS   Figure. 5  Data center The data center proxy written in Python, 120 lines Controller odICN control components written in Python running on NOX-0.9.1 controller, 300 lines OpenFlow switch OpenFlow-1.0.0 software switch supporting local log function written in C OpenTrace server The OpenTrace control program used for performance measurement written in Python 280 lines User PC The user proxy written in Python, 80 lines 
2: Content Optimal Deployment   or other defined triggers data center pairs _,_  for  optimal deployment  1  there are different conditions 2 get a userês request 3  GetRegion  get  region 4  UpdateReqInfo   update  requesting statistical information for  5 threshold  6  _  _   DoCtnOpt   optimization deployment for in  7  8 inform a data center registration 9   if is totally new for the netwo 10 GetApri  find out  apriori knowledge 11  NULL if  apriori knowledge exist 12  _  _   DoCtnOpt    optimization deployment for based on  14  15 other conditions 16:       ÉÉ                                          // other actions 17 Content optimal deployment algorithm 3: Path Optimizing p olicy for path optimizin g  forwarding pathês modification  1  there are different policies 2 OptInTime:                     // temporal optimization 3 true  4  GetContentOpt  wait until there is a proposal of content optimal deployment 5 SetTime  set the execute time for the proposal 6  7 OptInSpace:                   // spatial optimization 8 true  9  GetLinkState  get the link states 10 threshold if some links are overloaded 11 AdjustPath   adjust some flows forwarding paths to achieve balance 12 13 wait for next interval 14 15 other policies 16:       ÉÉ                                               // other actions Figure. 4 Path optimizing algorithm V Environment of the odICN prototype TABLE I R ELATED C ONFIGURATIONS OF THE OD ICN  P ROTOTYPE  
  
   
input input MonitorInterval 
  
R egion CurReqInfo r R egion r r A priJudge r A priJudge 
_,_  
3 PO algorithm  A Composition of Prototype 
002 
Algorithm Inputs Outputs Func switch case if then end if case if not in then if not then end if end if case return Algorithm Inputs Outputs Func switch case while do end while case while do if then end if sleep  end while case Device Profiles 
 
  
x D eployTsk r d dst x 
43 


OFS3 OFS4 OFS2 OFS1 OFS4 
  
 
B Experimental Processes 
To verify the feasibility of odICN, a prototype system is built in the environment shown in Fig. 5. The prototype includes 4 OpenFlow switches, 1 NOX controller, 1 OpenTrace server, 3 data centers and a set of users \(Only user A and B are shown in Fig. 5\ll the devices are PCs having the Core Duo dual-core CPU 2.5GHz, 2GB memory and 1Gbps network adapter, and equipped with CentOS 6.0 operating system in Linux kernel 2.6.32. Other related configurations are shown in TABLE I In our experiments, the odICN control component maintains the core logic of the odICN mechanism. The topology view is updated when the controller deals with such events as join, exit or port state change of the OpenFlow switches. Meanwhile, the global resource view is updated when the controller deals with the registration messages sent by the data centers. CL here takes the minimum hops as the optimizing metric and locates the optimum data center supplying the content service. In other words, the data center with the minimum hops away from the user among all the data centers having the content is selected as the content service provider. COD is started when specific content requests from a certain user region exceed the threshold, copies of the content will be distributed and deployed from a proper data center to the data center close to the user region. By monitoring the traffic from the relevant ports of the OpenFlow switches PO carries out path optimization when some link loads exceed the scheduled value. In a sense, PO can be regarded as the further optimization based on CL and COD OpenTrace is a distributed network measurement tool designed and implemented by us. It can be used for quantificational analysis of the performance of applications or mechanisms in an OpenFlow network. In the experimental network, an OpenFlow switch or the controller is upgraded to be an OpenFlow measurement entity able to generate a local log. These local logs can be merged into a timestamp sorted aggregate log, which includes the information of both the control flows and the data flows. By analyzing the aggregate log, interactions in the control plane, in the data plane and between the two planes can recur precisely Assume that before the experiments, data center A stores Content1 \(1200 MB\nd Content3 \(1200 MB\, data center B stores Content2 \(800 MB\ while data center C which is closer to user A and user B doesnêt contain them. The experiment verifying odICN prototype is composed of the following 3 processes and the timing relationships among the entities are illustrated in Fig. 6 Process 1: User A and B respectively submit the requests of Content1 and Content2 to the network. Using the CL algorithm in the controller, user A and B are able to respectively get the content from data center A and data center B, which hold the corresponding content and is the closest one The upper half part of Fig. 6 demonstrates this process The experiment shows that odICN can guarantee the user requests to execute, although the requests are submitted to the network instead of to a server. Also CL indeed enables the users to get the content from the optimum data center Process 2: When the requests for Content1 from the region in which user A and B reside are more than a threshold, COD inside the controller will be triggered and automatically carry out the optimal deployment of Content1 This results in the copy of Content1 being pushed to data center C The lower half part of Fig. 6 indicates such a process The experiment shows that COD can automatically achieve the content optimal deployment on principle. After that, it will obtain the content from the closest data center C if user B requests Content1 again  Figure. 6  Figure. 7 that results in the overload of this link. On ce the controller detects this, the forwarding path of transmitting Content3 will be automatically changed to in order to achieve load balance 
Timing relationships of odICN prototype experiments OpenTrace system is used to record the experimental process, and the timing relationships are obtained \(see Fig 6\ filtering and analyzing the aggregate log, the control processes of the main system entities are illustrated in Fig 7. Where the horizontal axis represents the relative experimental time, the vertical axis shows the control flow information logged by associated OpenFlow switches, the symbol "+" stands for the process 1, and the symbol stands for the process 2                                         Control process of odICN prototype redisplayed by OpenTrace Process 3: User A requests Content2 located in data center B while user B requests Co ntent3 located in data center A. These two data flows are simultaneously transmitted over the same link 
0s 10s 20s   250s 260s 270s 280s 290s 300s 310s 320s  OFS 1 - NoxToDCC OFS 1 - NoxToDCB OFS 1 - NoxToDCA OFS 4 - UsersToNox OFS 4 - DCCToNox  
005\005 
Process 1 Process 2 
  
44 


              
 Figure. 8 C ONCLUSIONS  The requisites for ICN can be used as the rules to judge ICN mechanism as well as to guide the design of a deployable ICN in practice. In this paper, the odICN mechanism based on mature technologies such as OpenFlow and data centers is proposed. The experiments of its prototype prove that users can obtain the content from the optimum data center according to its name; content can be optimally deployed according to specific rules automatically, and also the load balance of all the network links can be carried out. In the future, the extensibility security and efficiency of deploying the odICN mechanism will be explored A CKNOWLEDGMENT Supported by the State Key Development Program for Basic Research of China under Grant No. 2012CB315806 the National Natural Science Foundation of China under Grant No.61379149 9 No.61070173 and No.61103225 Corresponding author: Xi WENG; Tel: 0 86 15950494141 Postal Address: College of Command Information System PLA Univ. of Sci. & Tech., No. 1, Haifuxiang, Nanjing Jiangsu, 210007 China; E-mail: wengxi1025@163.com  R EFERENCES  1 
 
0 5 10 15 20 25 30 35 0 100 200 300 400 500 time\(s Mbps 
Data flows of odICN prototype redisplayed by OpenTrace Using the OpenTrace system again, the analysis results of the data flows are illustrated in Fig. 8, where the horizontal axis stands for the relative experimental time, and the vertical axis stands for transmission rates of the data flows on the links Experimental results show that odICN mechanism can automatically achieve network load balance by using PO algorithm. To sum up, the odICN prototype reflects that the odICN mechanism can satisfy the two Requisites for ICN and it is feasible VI B. Ahlgren et al., "A Survey of Information-Centric Networking IEEE Commun. Mag., vol. 50, pp. 26Ö36, 2012 2 T. Koponen et al., "A data-oriented \(and beyond\ network architecture," SIGCOMM Comput. Commum. Rev., vol. 37, pp. 181192, Aug. 2007 3 V. Jacobson et al., "Networking Named Content," in Proc. of CoNext J.Liebeherr et al., Eds. ACM, pp. 1-12, 2009 4 4WARD, http://www.4ward-project.eu/, 2010 5 COntent Mediator architecture for content-aware nETworks COMET\ http://www.comet-project.org/, 2011 6 Scalable and Adaptive Internet Solutions \(SAIL\, http://www.sailproject.eu/, 2012 7 D. Hanet et al., "XIA: efficient support for evolvable internetworking," in Proc. of NSDIê12, San Jose, USA, 2012 8 A. Ghodsi et al., "Information-centric networking: seeing the forest for the trees, " in Proc. of ACM HotNets-X, 2011 9 S. K. Fayazbakhs et al., "Less Pain, Most of the Gain: Incrementally Deployable ICN", in Proc. of SIGCOMMê13, Hong Kong, China August 2013  ONF, "Software-Defined Networking: The New Norm for Networks ONF White Paper, April 2012  A. Chanda et al., "Content based traffic engineering in software defined information centric networks," in Proc. of IEEE INFOCOM workshop NOMENê13, pp. 1Ö6, April 2013  L. Veltri et al., "Supporting Information-Centric Functionality in Software Defined Networks," in Proc. of IEEE ICC, 2012  A. Passarella, "A survey on content-centric technologies for the current Internet: CDN and P2P solutions," Computer Communications, vol. 35, pp. 1-32, January 2012 
Content3 for UserB in link OFS3-OFS4 Content3 for UserB in link OFS1-OFS4 Content2 for UserA in link OFS3-OFS4 Forwarding path of Content3 for UserB is changed 
  
 
45 


 
Qi Qi, Zhenyu Chen, Jia Liu, Chengfeng Hui, and Qing Wu, çUsing inferred tag ratings to improve user based collaborative filtering,é New York: Proceedings of the 27th Annual ACM Symposium on Applied Computing, pp. 2008-2013, March 2012 2 SuyunWei, Ning Ye, Shuo Zhang , Xia Huang, and Jian Zhu Collaborative Filtering Recommendation Algorithm Based on Item Clustering and Global Similarity,é Business Intelligence and Financial Engineering \(BIFE\, 2012 Fifth International Conference on. IEEE, pp 69-72, August 2012 3 Nathan N. Liu, Min Zhao, Evan Xiang, and Qiang Yang. çOnline evolutionary collaborative filtering,é New York: Proceedings of the fourth ACM conference on Recommender systems, pp. 95-102 September 2010 4 Heung-Nam Kim, Ae-Ttie Ji, Inay Ha, Geun-Sik Jo, çCollaborative filtering based on collaborative tagging for enhancing the quality of recommendation,é Electronic Commerce Research and Applications vol. 9,no. 1, pp. 73-83, 2010 5 N. Hurley, M. Zhang, çNovelty and diversity in top-N recommendations-analysis and evaluation,é ACM Transactions on Internet Technology, vol. 10, no. 4, pp. 1-29, 2011 6 Goldberg D, Nichols D, Oki B, Terry D, çUsing collaborative filtering to weave an information tapestry,é Communications of the ACM, vol. 35 no. 12, pp. 61-70, 1992 7 Resnick P, Iacovou N, Suchak M, Bergstorm P, and Riedl J GroupLens: an open architecture for collaborative filtering of netnews Proceedings of the 1994 ACM conference on Computer supported cooperative work, pp. 175-186, October 1994 8 Shardanand, Upendra, and Pattie Maes, çSocial information filtering algorithms for automating çword of mouthé,é Proceedings of the SIGCHI conference on Human factors in computing systems, pp.210217, 1995 9 Hill W, Stead L, Rosenstein M, and Furnas, G, çRecommending and evaluating choices in a virtual community of use,é Proceedings of the SIGCHI conference on Human factors in computing systems, pp.194201, 1995  Zan Huang, Hsinchun Chen, and Naniel Zeng, çApplying associative retrieval techniques to alleviate the sparsity problem in collaborative filtering,é ACM Transactions on Information Systems \(TOIS\, vol. 22 no. 1, pp. 116-142, 2004  Jes˙s Bobadilla, Fernando Ortega, Antonio Hernando, Jes˙s Bernal, çA collaborative \002ltering approach to mitigate the new user cold start problem,é Knowledge-Based Systems, vol. 26, pp. 225-238, 2012  Yehuda Koren, Robert Bell, çAdvances in collaborative filtering,é US Recommender Systems Handbook, pp. 145-186 ,2011  Benjamin Marlin, Richard S. Zemel, Sam Roweis, Malcolm Slaney Collaborative Filtering and the Missing at Random Assumption Computer Science, vol. 34, no. 3, pp. 78-81, 2012  Cheng-Jun Zhang, An Zeng, çBehavior patterns of online users and the effect on information filtering,é Physica A: Statistical Mechanics and its Applications, vol. 391, no. 4, pp. 1822-1830, 2012  ZHOU Jun-Feng, TAN Xian, and GUO Jing-Feng, çAn Optimized Collaborative Filtering Recommendation Algorithmé, Journal of Computer Research and Development, vo1. 41, no. 10, pp. 1842-1847 October 2004 012<\007oJ  8\034\022  F¡\034C\022  003‘/°\004Ï\010Í,X\011#\011‡Eõ$∏\031|9$1k  Au1k\035\016-Ë0J\003‚\011•\022 41\(10\ 1842-1847, 20   ZHANG Guang-Wei, LI De-Yi, LI Peng, KANG Jian-Chu, CHEN GuiSheng, çA Collaborative Filtering Recommendation Algorithm Based on Cloud Model,é Journal of Software, vol. 18, no. 10, pp. 2403-2411 2007 024Ù\007\035\011  035"\025  035"T  024ã\024Œ\007  L\034\036\026  015Œ\004b 004e\037ı\015_,X\011#\011‡E 031|9$1k  EC\004 021:\030y 18\(10\-2411, 200  Deng AL, Zhu YY, Shi BL, çA Collaborative Filtering Recommendation Algorithm Based on Item Rating Predictioné, Journal of Software, vol. 14, no. 9, pp. 1621-1628, 2003 Fg\(\005\035k  035\005\030@\010  033ë\005\003 004  015Œ\004bNM,¬Aò\007⁄NX#\037,X\011#\011‡Eõ$∏\031|9$1k  EC\004 \021:\030y 14\(9 1621-1628, 200  Herlocker J, Konstan J A, Riedl J, çAn empirical analysis of design choices in neighborhood-based collaborative filtering algorithms Information retrieval, vol. 5, no. 4, pp. 287-310, 2002  McLaughlin M R, Herlocker J L, çA collaborative filtering algorithm and evaluation metric that accurately model the user experience Proceedings of the 27th annual international ACM SIGIR conference on Research and development in information retrieval. pp. 329-336, July 2004  Hao Ma, Irwin King, and Michael R. Lyu, çEffective missing data prediction for collaborative filtering,é Proceedings of the 30th annual international ACM SIGIR conference on Research and development in information retrieval, pp. 39-46, July 2007  HUANG Chuang-Guang, YIN Jian, WANG Jing, LIU Yu-Bao, WANG Jia-Hai, çUncertain Neighborsê Collaborative Filtering Recommendation Algorithm,é Chinese Journal of Computers, vol. 33, no. 8, pp. 13691377, August 2010 Tò\007Ô\007\035  011DHH  M 007  K  003·.B\021nE Fè,X\011#\011‡Eõ$∏\031|9$1k  Au1k\035\016\021:\030y 33\(8\, 1369-1377, 2010  J. Bobadilla, F. Ortega, A. Hernando, A. GutiÈrrez, çRecommender systems survey,é Knowledge-Based Systems, vol. 46, pp. 109Ö132 2013  Xiang Cui, Guisheng Yin, çMethod of collaborative filtering based on uncertain user interests cluster,é Journal of Computers, vol. 8, no. 1, pp 186-193, January 2013  
007 
                       
represents the value of parameter and ordinates represents the MAE results As Fig 3 shows, the MAE of the algorithm proposed in this paper is lower than the traditional collaborative filtering recommendation algorithm in all conditions above. So it can be concluded that using impact factor to improve the similarity metrics can significantly improve the accuracy of recommendation. The collaborative filtering recommendation using the adjusted similarity measure that improved by the impact factor have the best performance V CONCLUSION Firstly, in order to deal with the problem that user rating data are extremely sparse, this paper analyzed the problems of the traditional similarity measurements that their measurement accuracy depends on the number of common ratings of users or items. Then it is proposed to improve Collaborative Filtering Recommendation Algorithm by using similarity impact factor which can reduce the negative impact due to data sparsity. The experimental results show that the proposed similarity impact factor can improve the accuracy of the similarity measures effectively, and the improved collaborative filtering recommendation algorithms are more precise A CKNOWLEDGMENT  This work is partially supported by NSFC\(No.61003054 No.61170020\; Science and Technology Support Program of Suzhou\(No. SG201257\; Science and Technology Support program of Jiangsu province\(No. BE2012075\; Open fund of Jiangsu Province Software Engineering R&D Center \(No SX201205\ the Opening Project of Suzhou High-tech Key Laboratory of Cloud Computing & Intelligent Information Processing\(No. SXZ201302 R EFERENCES  1 
303 
303 


Figure 3 Figure adapted from our previous work sho wing the m o v ement of dif ferent units in the Afghanistan w a r  Figure 4 Figure adapted from our previous work sho wing patterns in the Afghanistan w a r data P atterns mark ed by A  C show lots of events happening at the same time 1  3 show lack of events and periodicity of pauses  P  Ball J Asher  D  Sulmont and D Manrique Ho w many peruvians have died American Association for the Advancement of Science Tech Rep 2003  P  Ball E T abeau and P  V erwimp The bosnian book of dead Assessment of the database full report Households in Conîict Network Tech Rep 2007  D Bo yd and K Cra wford Critical questions for big data Provocations for a cultural technological and scholarly phenomenon Information Communication  Society  vol 15 no 5 pp 662Ö679 2012  J.-B Michel Y  K Shen A P  Aiden A V eres M K Gray  J P Pickett D Hoiberg D Clancy P Norvig J Orwant et al  Quantitative analysis of culture using millions of digitized books science  vol 331 no 6014 pp 176Ö182 2011  L Mano vich Data stream database timeline the forms of social media 2012 On A v ailable http://lab softw arestudies.com/2012/10/datastream-database-timeline-new.html  Z S Syed T  Finin and A Joshi W ikipedia as an ontology for describing documents in ICWSM  2008  M L Jock ers Macroanalysis Digital Methods and Literary History  University of Illinois Press 2013  S Jones and H Petrie Charte x Disco v ering spatial descriptions and relationships in medieval charters 2013  C Gro v e r  T rading conferences  2012  S Soderland B Roof B Qin S Xu O Etzioni et al  Adapting open information extraction to domain-speciìc relations AI Magazine  vol 31 no 3 pp 93Ö102 2010  Guardian.co.uk  Afghanistan w a r logs  2011 Online Available http://www.theguardian.com/world/the-war-logs  M Mateas and A Stern F ac ade An experiment in building a fully-realized interactive drama in Game Developers Conference Game Design track  vol 2 2003 p 82  N Kiya vitskaya N Zeni J R Cordy  L  Mich and J Mylopoulos Cerno Light-weight tool support for semantic annotation of textual documents Data  Knowledge Engineering  vol 68 no 12 pp 1470Ö1492 2009  C L Sidner   T o w ards a computational theory of deìnite anaphora comprehension in english discourse DTIC Document Tech Rep 1979 44 


 J A Ha wkins Deìniteness and Indeìniteness  Humanities Press 1978  J Me yer and R Dale Mining a corpus to support associati v e anaphora resolution in Proceedings of the Fourth International Conference on Discourse Anaphora and Anaphor Resolution  2002  R Mitk o v  B  Bogurae v  and S Lappin Introduction to the special issue on computational anaphora resolution Computational Linguistics  vol 27 no 4 pp 473Ö477 2001  B W ebber  M  Egg and V  K ordoni Discourse structure and language technology Natural Language Engineering  vol 18 no 4 pp 437Ö490 2012  M Dimitro v  K Bontche v a  H  Cunningham and D Maynard A lightweight approach to coreference resolution for named entities in text Anaphora Processing Linguistic cognitive and computational modelling  vol 263 p 97 2005  S Lappin and H J Leass  A n algorithm for pronominal anaphora resolution Computational linguistics  vol 20 no 4 pp 535Ö561 1994  R Mitk o v   F actors in anaphora resolution the y are not the only things that matter a case study based on two different approaches in Proceedings of a Workshop on Operational Factors in Practical Robust Anaphora Resolution for Unrestricted Texts  Association for Computational Linguistics 1997 pp 14Ö21  K V a n Deemter and R Kibble On coreferring Corefer ence in muc and related annotation schemes Computational linguistics  vol 26 no 4 pp 629Ö637 2000  C Northw ood T ernip temporal e xpression recognition and normalisation in python Ph.D dissertation Masters thesis University of Shefìeld 2010  A Auger and J Ro y  Expression of uncertainty in linguistic data in 11th International Conference on Information Fusion 2008  IEEE 2008 pp 1Ö8  M J Druzdzel V erbal uncertainty e xpressions Literature review Pittsburgh PA Carnegie Mellon University Department of Engineering and Public Policy  1989  E Marshman Expressions of uncertainty in candidate knowledge-rich contexts A comparison in english and french specialized texts Terminology  vol 14 no 1 pp 124Ö151 2008  D Klein and C D Manning  Accurate unle xicalized parsing in Proceedings of the 41st Annual Meeting on Association for Computational Linguistics-Volume 1  Association for Computational Linguistics 2003 pp 423Ö430  W  W  Cohen and J Richman Learning to match and cluster large high-dimensional data sets for data integration in Proceedings of the eighth ACM SIGKDD international conference on Knowledge discovery and data mining  ACM 2002 pp 475Ö480  S F  Chen and J Goodman  A n empirical study of smoothing techniques for language modeling in Proceedings of the 34th annual meeting on Association for Computational Linguistics  Association for Computational Linguistics 1996 pp 310 318  B.-J Hsu and J Glass Iterati v e language model estimation efìcient data structure  algorithms in Proceedings of Interspeech  vol 8 2008 pp 1Ö4  T  Zhang and D Johnson  A rob ust risk minimization based named entity recognition system in Proceedings of the seventh conference on Natural language learning at HLTNAACL 2003-Volume 4  Association for Computational Linguistics 2003 pp 204Ö207  L Ratino v and D Roth Design challenges and misconceptions in named entity recognition in Proceedings of the Thirteenth Conference on Computational Natural Language Learning  Association for Computational Linguistics 2009 pp 147Ö155  A X Chang and C Manning Sutime A library for recognizing and normalizing time expressions in LREC  2012 pp 3735Ö3740  A Shrestha Y  Zhu B Miller  and Y  Zhao Storygraph Telling stories from spatio-temporal data in Lecture Notes in Computer Science  vol 8034 Springer 2013 pp 693 703  A T  P ang C M W ittenbrink and S K Lodha  Approaches to uncertainty visualization The Visual Computer  vol 13 no 8 pp 370Ö390 1997  W  T  C T  F orce W orld trade center task force intervie ws  2001  B Shneiderman The e yes ha v e it A task by data type taxonomy for information visualizations in Visual Languages 1996 Proceedings IEEE Symposium on  IEEE 1996 pp 336Ö343  C T rack er  Incidents e xport  I n visible Children and Resolve Tech Rep 2013  ECCC  Anne x 25 Written record of intervie w 09 june 1999 1999  ECCC Written record of intervie w o f Prak Khan  2007  ECCC Written record of intervie w o f Duch by CIJ o n 2101-2008 2008  M Halbw achs and L A Coser  On collective memory  University of Chicago Press 1992 45 


application or middleware platform to collect request ows Thus it is much easier to deploy FChain in large-scale IaaS clouds Blacksheep correl a t e s t he change poi nt of s y s t em-l e v el metrics e.g cpu usage with the change in count of Hadoop application states i.e events extracted from logs of DataNodes and TaskTrackers to detect and diagnose the anomalies in a Hadoop cluster Kahuna-BB correl a t e s b l ack-box dat a system-level metrics and white-box data Hadoop console logs across different nodes of a MapReduce cluster to identify faulty nodes In comparison FChain is a black-box fault localization system which is application-agnostic without requiring any knowledge about the application internals We believe that FChain is more practical and attractive for IaaS cloud systems than previous white-box or gray-box techniques V C ONCLUSION In this paper we have presented FChain a robust blackbox online fault localization system for IaaS cloud computing infrastructures FChain can quickly pinpoint faulty components immediately after the performance anomaly is detected FChain provides a novel predictability-based abnormal change point selection scheme that can accurately identify the onset time of the abnormal behaviors at different components processing dynamic workloads FChain combines both the abnormal change propagation knowledge and the inter-component dependency information to achieve robust fault localization FChain can further remove false alarms by performing online validation We have implemented FChain on top of the Xen platform and conducted extensive experimental evaluation using IBM System S data stream processing system Hadoop and RUBiS online auction benchmark Our experimental results show that FC hain can achieve much higher accuracy i.e up to 90 higher precision and up to 20 higher recall than existing schemes FChain is light-weight and non-intrusive which makes it practical for large-scale IaaS cloud computing infrastructures A CKNOWLEDGMENT This work was sponsored in part by NSF CNS0915567 grant NSF CNS0915861 grant NSF CAREER Award CNS1149445 U.S Army Research Ofìce ARO under grant W911NF-10-1-0273 IBM Faculty Awards and Google Research Awards Any opinions expressed in this paper are those of the authors and do not necessarily reîect the views of NSF ARO or U.S Government The authors would like to thank the anonymous reviewers for their insightful comments R EFERENCES   A m azon E las tic Com pute Cloud  h ttp://a w s  a m azon com ec2   V i rtual c om puting lab  http://vcl ncs u  e du  P  Barham  A  D onnelly  R I s aacs  a nd R M o rtier   U s ing m agpie f or request extraction and workload modelling in 
 2004  M  Y  Chen A  A ccardi E  K icim an J  L lo yd D  P atters on A  F ox and E Brewer Path-based failure and evolution management in  2004  R F ons eca G  P o rter  R H  K atz S  S h enk e r  and I  S toica X T race A pervasive network tracing framework in  2007  I  Cohen M  G o lds z m i dt T  K elly  J  S ym ons  a nd J  S  Chas e Correlating Instrumentation Data to System States A Building Block for Automated Diagnosis and Control in  2004  I  C ohen S  Z h ang M  G o lds z m i dt J  S ym ons  T  K elly  a nd A  F ox Capturing indexing clustering and retrieving system history in  2005  S  D uan S  Bab u  a nd K  M unagala F a A s ys tem for a utom ating failure diagnosis in  2009  S  K andula R Mahajan P  V erkaik S  A garw al J  P a dhye a nd V  Bahl Detailed diagnosis in computer networks in  2009  A  J  O liner  A  V  K ulkarni and A  A ik en  U s ing c orrelated s u rpris e to infer shared inîuence in  2010  P  Bahl R Chandra A  G r eenber g  S  K andula D  A  M altz and M Zhang Towards highly reliable enterprise network services via inference of multi-level dependencies in  2007  Z  G ong X  G u  a nd J  W ilk es   P RE S S  P Redicti v e E las tic ReS ource Scaling for Cloud Systems in  2010  H  N guyen Y  T a n and X  G u P A L  P ropagation-a w are a nom aly localization for cloud hosted distributed applications in  2011  B Gedik H Andrade K L  W u P  S  Y u and M  D oo SP ADE  t he system s declarative stream processing engine in  2008  A pache H adoop S y s tem   http://hadoop apache  or g/co re   Rice uni v e rs ity bidding s y s tem   http://rubis  objectw eb  o r g   M Ben-Y e huda D  B reitgand M F actor  H  K o lodner  V  K r a v ts o v  and D Pelleg NAP a building blo ck for remediating performance bottlenecks via black box network analysis in  2009  Y  T a n X  G u  a nd H  W a ng  A dapti v e s ys tem anom aly prediction f or large-scale hosting infrastructures in  2010  D  L  M ills   A b rief his t ory o f N T P tim e m e m o irs o f a n i nternet timekeeper  2003  Y  T a n H  N guyen Z  S h en X  G u C V e nkatram ani and D  R ajan PREPARE Predictive Performance Anomaly Prevention for Virtualized Cloud Systems in  2012  M  Bas s e ville and I  V  N ikiforo v   Prentice-Hall Inc 1993  L  Cherkaso v a  K  O zonat N Mi J  S ym ons a nd E  Sm irni  Anom aly application change or workload change towards automated detection of application performance anomaly and change in  2008  P  Barham and e t al   X e n a nd the a rt of virtualization  i n  2003  T he ircache p roject  h ttp://www.ircache.net  H ttperf  h ttp://code google com  p htt p er f  S  K u llback  T h e ku llback-leibler distance  1987  X  Chen M  Z hang Z  M  M a o and P  B ahl  A utom ating n etw ork application dependency discovery experiences limitations and new solutions in  2008  M Y u  A  G reenber g  D  M altz J  Re xford L  Y u an S  K andula and C Kim Proìling network performance for multi-tier data center applications in  2011  M K  A guilera J  Mogul J  W iener  P  R e ynolds  a nd A  Muthitacharoen Performance debugging for distributed systems of black boxes in  2003  S  A g arw ala F  A l e g re K  S chw a n and J  M ehalingham  E 2E P r of A utomated end-to-end performance management for enterprise systems in  2007  P  Re ynolds  J  L  W iener  J  C M ogul M  K  A guilera and A  V ahdat  WAP5 black-box performance debugging for wide-area systems in  2006  R Apte L  Hu K  S chw a n and A  G hosh L ook W ho s T alking Discovering dependencies between virtual machines using cpu utilization in  2010  G Khanna I  L aguna F  A rshad an d S Bagchi Distr ibuted diagnosis of failures in a three tier e-commerce system in  2007  R R S a m b as i v an A  X  Z heng M  D e Ros a  E  K re v at S  W h itm an M Stroucken W Wang L Xu and G R Ganger Diagnosing performance changes by com paring request ows in  2011  J  T a n a nd P  N a ras i m h an  RA M S and B lackS h eep I nferring w h ite-box application behavior using black-box techniques CMU Tech Rep 2008  J  T a n X  P a n E  Marinelli S  K a vulya R  G andhi a nd P  N a ras i m h an Kahuna Problem diagnosis for mapreduce-based cloud computing environments in  2010 
OSDI NSDI NSDI OSDI SOSP ICDE SIGCOMM DSN SIGCOMM CNSM SLAML SIGMOD ICAC PODC Computer Communication Review ICDCS Detection of abrupt changes theory and application DSN SOSP The American Statistician OSDI NSDI SOSP DSN WWW HotCloud SRDS NSDI NOMS 
207 
30 
30 


A Global Solution COVERAGE North and South America EMEA and Asia White lines are flights in the masFlight platform from February 8, 2013 Yellow pins are weather stations feeding hour ly data to our platform Maps from Google Earth / masFlight masFlight tracks flights, airports and weather around the world  Global daily flight information capture  82,000 flights  350 airlines  1700 airports  Integrated weather data for 6,000 stations  Match weather to delays  Validate block forecasts at granular level  Add weather analytics to IRROPS review and scenario planning 


Example 1: Proposed FAA Tower Closures masFlight used big-data to link airport operations across three large data sets  Current and historical airline schedules  Raw Aircraft Situation Display to Industry \(ASDI\AA  Enhanced Traffic Management System Counts \(ETMS\Airport operations counts by type \(commercial, freight, etc TOWER CLOSINGS Dots indicate closures; Red dots have scheduled service Based on scheduled service March 1 7, 20 13; scheduled service includes scheduled charter flights, cargo flig hts, and passenger flights Dots  indicate  closures  Red  dots  have  scheduled  service Bas ed  o n sc h edu l ed  se rvi ce  M a r c h 1  7, 2013; scheduled se rvi ce includ es scheduled c harter fli g hts car g o fli g hts a nd passen g er fli g hts Findings: Proposed Tower Closings  From schedules database: 55 airports with scheduled passenger airline service  14 EAS Airports  From ASDI & ETMS: 10,600 weekly flights on a flight plan \(ex. VFR and local traffic  6,500 Part 91/125 weekly flights  4,100 Part 135/121 weekly flights  


Example 1: Big-Data Analytics Applied to ASDI and ETMS To Analyze Operations TOWER CLOSINGS  26 44 24 23 11 10 6 2 1 2 Up to 5 5-10 10-15 15-20 20-25 25-30 30-35 35-40 40-45 45 Count of Airports Average Number of Daily Operations with a Flight Plan Filed Distribution of Airports By Average Number of ìDailyî Impacted Flights Airports Affected by Tower Closures Source: ASDI radar data ñ Part 91 151 flying and Part 135/121 flying March 1-7, 2013; masFlight analysis Note: Average ìdailyì operations based on 5-day week 


Example 2: Aviation Safety Causal Factor For example, consider the following ASRS report \(ACN 1031837 Departing IAH in a 737-800 at about 17,000 FT, 11 m iles behind a 737-900 on the Junction departure over CUZZZ Intersection. Smooth air with wind on the nose bearing 275 degrees at 18 KTS We were suddenly in moderate chop which lasted 4 or 5 seconds then stopped and then resumed for another 4 or 5 seconds with a significant amount of ri ght rollingÖ I selected a max rate climb mode in the FMC in order to climb above the wake and flight path of the leading -900 We asked ATC for the type ahead of us and reported the wake encounter. The 900 was about 3,300 FT higher than we were  Synopsis  B737-800 First Officer reported wake encounter from preceding B737-900 with resultant roll and moderate chop What causal factors can be identified from this narrative that could be applied to future predictive applications CAUSAL FACTORS Data-mining algorithms can mine the text of safety reports to obtain specific data that can be used to analyze causal factors  


Example 2: Identifying Causal Factors CAUSAL FACTORS  Indicators ñ Data Element Methods ñ Identifying Context and Causes  Time of day  Date range \(month day  Aircraft type  Fix or coordinates  Originating airport  Destination airport  Weather notes We pinpoint the sequencing of flights on the IAH Junction Seven departure \(at CUZZZ\the specified wind conditions to find cases wher e a B737-900 at 20,000 feet precedes by 11 miles a B737-800 at 17,000 feet  Search related data sets including ASDI flight tracks, local traffic and congestion  Weather conditions for alter native causes \(winds aloft shear and convecti ve activity  Airline specific informati on \(repeated occurrence of event in aircraft type Big data gives us visibility into contextual factors even if specific data points are missing such as a specific date or route Big-data analytics gives us insight into unreported factors as well 


Example 3: Correlating Utilization and Delays  60 65 70 75 80 85 90 95 100 7 9 11 13 ONTIME DEPARTURE PERFORMANCE HOURS OF DAILY UTILIZATION 60.0 70.0 80.0 90.0 100.0 7.0 9.0 11.0 13.0 Narrowbodies By Day of Week 60.0 70.0 80.0 90.0 100.0 7.0 9.0 11.0 13.0 Widebodies by Day of Week Daily Utilization vs. On-time Departures January 2013 System Operations Correlation Coefficient -0.53 Includes AA, AC, AS B6 F9, FL, NK, UA, US VX and WN SOURCE masFlight \(masflight.com COMPARING OTP AND UTILIZATION 


 6.2 6.0 5.8 5.8 5.2 4.9 LGB JFK BOS MCO DCA FLL JetBlue Focus Average Daily Deps per Gate Used UTILIZATION BY HUB Example 4: Daily Utilization of Gates, by Hub Big-data analysis of different carriers daily departures per gate used SOURCE masFlight \(masflight.com June 1 through August 31, 2012 Gates with minimum 1x daily use 7.7 7.4 7.2 6.2 6.1 5.8 3.8 3.6 ORD LAX SFO EWR DEN IAH IAD CLE United Airlines Hubs Average Daily Deps per Gate Used 7.8 6.4 5.5 5.4 5.3 4.4 4.3 4.0 SEA SAN PDX ANC SFO GEG LAX SJC Alaska Airlines Hubs Average Daily Deps per Gate Used 7.2 6.9 6.8 6.4 5.0 2.7 ORD DFW LAX LGA MIA JFK American Hubs Average Daily Deps per Gate Used 7.2 6.9 6.6 4.9 4.2 CLT DCA PHL PHX BOS US Airways Hubs Average Daily Deps per Gate Used 6.6 5.9 5.5 4.7 MCO BWI ATL MKE AirTran Hubs Average Daily Deps per Gate Used ne pe 


Conclusions for Big Data in Aviation  Big-data transforms operational and commercial problems that were practically unsolvable using discrete data and on-premises hardware  Big data offers new insight into existing data by centralizing data acquisition and consolidation in the cloud and mining data sets efficiently  There is a rich portfolio of information that can feed aviation data analytics  Flight position, schedules, airport/gate, weather and government data sets offer incredible insight into the underlying causes of aviation inefficiency  Excessive size of each set forces analysts to consider cloud based architectures to store, link and mine the underlying information  When structured, validated and linked these data sources become significantly more compelling for applied research than they are individually  Todayís cloud based technologies offer a solution CONCLUSIONS 


Conclusions:  Our Approach  masFlightís data warehouse and analysis methods provide a valuable example for others attempting to solve cloud based analytics of aviation data sets  masFlightís hybrid architecture, consolidating secure data feeds in on-premises server installations and feeding structured data into the cloud for distribution, addresses the unique format, security and scale requirements of the industry  masFlightís method is well suited for airline performance review competitive benchmarking, airport operations and schedule design and has demonstrated value in addressing real-world problems in airline and airport operations as well as government applications CONCLUSIONS 





