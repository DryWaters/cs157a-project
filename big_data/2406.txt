Mining Web Access Log for the Personalization Recommendation  Xueping Peng 1 Yujuan Cao 1  1 The School of Computer Science and Technology Beijing Institute of Technology Beijing, China pengxp, qiushuichangtian@bit.edu.cn Zhendong Niu 1,2  2 The Information School University of Pittsburgh PA, USA zniu@bit.edu.cn  Abstract This paper presents a personalization recommend dation model to recommend potentially interesting resources to users based on the web access log of users. This model builds on the apriori algorithm and the tfñidf technology, which consists of three parts: resource description, userís preference extraction and the personalization recommendation Firstly ,our model generates resource text space vector by analyzing the resource information achieved by mining userís web access log, then it attains interest set to make use of the apriori algorithm based on the vector, finally, it recommends filtered and sorted resources to users content based recommendation model Personalization Recommendation Model; Web Access Log Mining; Vector Space Model; Apriori algorithm; DF-RTF algorithm; Content-based filtering I   I NTRODUCTION  In todayís society there is an increasing need for automated systems providing personalized recommendations to a user faced with a large number of choices. An example where personalized recommendations are extremely useful is an information overload situation with an amount of data available through Internet largely exceeding the ability of a person even getting a glance of it. Here, automated methods are needed to provide a large number of users with the ability to efficiently locate and retrieve information according to their preferences In this paper we propose a personalization recommendation model which gets usersí preference predictions through analyzing their web access log, and then recommends resources to the active users by content- based filtering approach II  B ASIC C ONCEPTS AND A SSUMPTIONS  A  Basic Concepts Item is a field of transaction database, which has a certain range. To the supermarket, the item generally is one of articles in one transaction. In this paper, item is a word or phrase In general, a set of items is called an itemset. The number of items in an itemset is called the length of an itemset Itemsets of some length k are referred to as k itemsets Let I  i 1  i 2  i m be a set of m distinct attributes T be transaction that contains a set of items such that T 002 I  D be a database with different transaction records Ts  Support\(s\ is an important basic measure for association rules. Since the database is large and users concern about only those frequently purchased items, usually threshold of support is predefined by users to drop those rules that are not so interesting or useful. The threshold is called minimal support. Support\(s\ of an association rule is defined as the percentage/fraction of records that contain X 003 Y to the total number of records in the database. Suppose the support of an item is 0.1%, it means only 0.1 percent of the transaction contain purchasing of this item   Itemsets that do not have the minimum support are discarded and the remaining itemsets are called large k itemsets A frequent itemset is called maximal if it is not a subset of any other frequent itemset. The set of all maximal frequent itemsets is denoted as MFI 2 M a xi m a l  fr eq ue n t  itemsets are necessary for generating association rules   L k Set of large k itemsets \(those with minimum support Each member of this set has two fields: i\ itemset and ii support count C k Set of candidate k itemsets \(potentially large itemsets\ Each member of this set has two fields: i\ itemset and ii\ support count [6 B  Basic Assumptions Only to handle the registered users' web access log, the non-registered users' shall not be dealt with The resources browsed by users to be classified, each is corresponding to a resource category III  R ESOURCE M ODEL  A  Resources Collection Web Access Logs are got from the database in one of our laboratory research project, and the format of the logs may be different from that of the normal logs The logs come from the web server side, including user login information, the resource id, resources type and the visiting time. The tab.I describes the log information TABLE I  I NFORMATION INCLUDED IN WEB ACCESS LOG  visitTime userId rscId rscType 1 2008-09-18 10:33:48 admin 47884 25 2 2008-09-18 10:34:40 admin 73427 25   
2008 International Conference on MultiMedia and Information Technology 978-0-7695-3556-2/08 $25.00 © 2008 IEEE DOI 10.1109/MMIT.2008.166 172 


B  Resources Description Vector space model \(or term vector model\ is an algebraic model for representing text documents as vectors of identifiers, for example, index terms. It is used in information filtering, information retrieval, indexing and relevancy rankings. Its first use was in the SMART Information Retrieval System [4    If a term occurs in the document, its value in the vector is non-zero. Several different ways of computing these values also known as \(term\ weights, have been developed. One of the best known schemes is tf-idf weighting The tfñidf weight \(term frequencyñinverse document frequency\ is a weight often used in information retrieval and text mining. This weight is a statistical measure used to evaluate how important a word is to a document in a collection or corpus. The importance increases proportionally to the number of times a word appears in the document but is offset by the frequency of the word in the corpus The term frequency \(TF\ in the given document is simply the number of times a given term appears in that document This count is usually normalized to prevent a bias towards longer documents to give a measure of the importance of the term t i within the particular document d j     000  k kj n ij n ij tf 1 Where n ij is the number of occurrences of the considered term in document d j and the denominator is the number of occurrences of all terms in document d j  The inverse document frequency \(IDF\s a measure of the general importance of the term [5   i n N log idf i  2 Where N is the total number of documents in the corpus n i is the number of documents where the term t i  appears. The so-called weight w ij  of term t i  in document d j is then 000     N k k kj i ij ij idf tf idf tf w 1   3 Each document d is represented as a vector         2 2 1 1        jn jn j j j j j w t w t w t d 000 where n is the number of occurrences of all terms in document d j  In this paper, the web page users browsed is analyzed into a document, which can be described as a vector IV  I NTEREST R EPRESENTATION  Usersí interests of the recommendation model are represented as maximal frequent itemsets generated by the apriori algorithm A  Apriori algorithm Fig.1 gives the Apriori algorithm. The first pass of the algorithm simply counts item occurrences to determine the large 1-itemsets. A subsequent pass, say pass k consists of two phases. First, the large itemsets L k 1 found in the k 1\th pass are used to generate the candidate itemsets C k using the apriori-gen function described in Figure 2. Next, the database is scanned and the support of candidates in C k is counted. For fast counting, we need to efficiently determine the candidates in C k that are contained in a given transaction t  B  Apriori Candidate Algorithm The apriori-gen function takes as argument L k-1 the set of all large k 1\itemsets. It returns a superset of the set of all large k itemsets. The function works as follows. First, in the join step, we join L k-1 with L k-1 Next, in the prune step, we delete all itemsets c 001\031 C k such that some k 1\subset of c is not in L k 1 Fig.2 gives the Apriori Candidate algorithm C  MFI Algorithm Fig.3 shows the MFI algorithm  1 L 1 large 1-itemsets 2\  for k 2 L k-1 000 001 k do begin 3 C k apriori-gen L k-1 New candidates 4\    forall  transactions t 001\031 D do begin 5 C t subset C k  t Candidates contained in t 6\     forall candidates c 001\031 C t do 7\       c.count 8\     end 9 L k  c 001\031 C k  c count 000 minsupg 10\ end 11\ Answer = U k  L k  Figure 1  Algorithm Apriori 1\  Begin 2\  For each p 001\031 L k 1 Do 3 For each q 001\031 L k 1 Do 4 If p item1 q item1 p itemk-2 q itemk-2 p itemk1 q itemk-1 5  Then c  p item1 p item2 p itemk-1 q itemk-1 6\      End If 7\      If 004  k 1\subset s 005 L k 1 of c  8  Then delete c  9\      Else insert c into C k  10\    End If 11 End For 12\ End For 13\eturn C k  14\ End Figure 2  Algorithm Apriori Candidate 1\ Begin 2 L 1={large 1-itemsets 3\r k 2 L k 1 000è\001 k do begin 4\   If 004  k 1\subset s k 1 006 k-subset s k  5\     Then delete s k 1 from L k 1  6\   End If 7\ End For 8 ML k L k  
173 


9\ End Figure 3  Algorithm FMI V  U SER M ODELING  A  Model Representation User model consists of four parts: user identity mark UserId\ the types of resources \(RscType\ the MFIs and the time. Tab.II shows the information of user model UserId corresponds to a user who is different from other users. Different users have different results of the recommendation RscType is the types of resources which the user is interested in. According to the access time, the resources are sorted The MFIs is a MFI set which is the result of the Algorithm FMI, and the input variable L k is from the same RscType The updateTime is the moment of the MFI being created The User model is represented as follows  in the database B  Model Update At a fixed time interval, the monitor scans the web access logs. If it discovers the time of the users access the resources is greater than the updateTime, the model will be updated If the model were updated, the initial variable L k  in the Apriori algorithm consists of MFIs and the vector collection of the resources users to access. And then through the Apriori Candidate Algorithm and the MFI Algorithm, the new MFIs and updateTime are generated VI  R ECOMMENDATION OF R ESOURCES  Before recommending resources to users, we need to translate vector representation of resources into a set which only includes the terms of the vector, the set is called rscSe t Step1: to obtain the types of resources from the user model, these types are put in a set which is called for rscTypes Step2: to retrieve the potentially interested resources according to the type of step 1, these resources are put in a map which the key is corresponding rscID and value corresponding rscSet The map is called for rscMaps  Step3: to remove the resources the user has visited from the rscMaps the rscMaps after dealing with are called for cleanRscMaps and the accessedRscList represents the accessed resources, which only includes the resource id Step4: to filter the cleanRscMaps according to MFIs the filtered results are kept in the table, called the table as filteringRscTable which is made up of two parts: resource id and rank. The rank is the number of the terms of the MFI  contained in rscSe t  and the initial value of the rank is zero TABLE II  I NFORMATION INCLUDED IN WEB ACCESS LOG  Step5: to put the type and the filteringRscTable which is corresponding to the type in the map that is called prefRscMaps  Step6: to sort the resources according to the rank descending of the filteringRscTable Step7: to recommend the sorted resources to users  The recommendation algorithm is described in fig.4 VII  E XPERIMENT AND R ESULTS  A  Experiment Data Set Experiment data set comes from the project of Internet information resources Crawl and services, which includes 30 sorts of resource information, and each resource information sort includes 1000 resource records. The size of the data set is 2.45MB. There are 49 volunteers were mostly graduate and undergraduate students who give their feedbacks to this experiment In this experiment, userís preference will be automatically updated by tracking userís web access log, and then correlative resource information will be recommended to user in item of resource classes and sorted results B  The Standard of Evaluation The number of the elements in one document vector is 20 The length of the MFI is not less than 3 We research the relationship between the minimum support and the number of the transactions, and try to find the appropriate minimum support and Ts number Precision of recommending resource information to user will tested by comparing the personalization recommendation model based on mining Web access log MWALRM\ brought forward in this paper with the basic userís preference characteristics vector space model\(BVSM 1\ Begin 2\ For each type 001\031 rscTypes Do 3 rscMaps  Map<rscID,rscSet>|rscType  type  4\  For each id 001\031 accessedRscList Do 5 rscMaps.remove\(id 6\  End For 7 cleanRscMaps  rscMaps 8\  For each resource 001\031 cleanRscMaps Do 9\   For each L k 001\031 MFIs Do the relation of MFIs and type can refer to Table2 10\  For i  k  L i 000  001 i- \ do begin 11\     If 004  i ubset s i 006 resource.value  12 Then 13\     If rank  i  14\     Then rank=i 15\       End If 16 filteringRscTable.put  rscId  rank  17\     End If 18\    End For 19\ End For 20\  End For 21 prefRscMaps.put\(type, filteringRscTable  22\ End For 23\eturn prefRscMaps  24\ End Figure 4  Algorithm Recommendation userId rscType MFIs updateTime 406 25 {item1,item2,item3};{it em4,item5};{item7,ite m8, item9, item10 2008-09-18 13:30:28  
174 


We calculate the recommendation precision when the recall rate individually is 0.2, 0.4, 0.6, 0.8 and 1. The average precision is the average of the precision on the 5 points C  Results of Experiment Fig.5 shows the relationship between the minimum support and the number of the transactions. The trend line in the figure implies the decrease of the Ts number with the increase of the support Fig.6 displays the impacts of the MWALRM and BVSM to the recommendation precision; the average precision of the MWALRM is much larger than that of the BVSM. The main cause is the number of the userís preference characteristics vectors. The BVSM contains only one preference characteristics vector, and the recommending resources is generally rare after content-based filtering, so the recommendation precision decline rapidly. While the MWALRM includes many userís preference characteristics vectors, the recommendation precision increase naturally    Figure 5  The relationship between the minimum support and the number of the transactions  Figure 6  Comparison between two models VIII  C ONCLUSIONS  Personalized service is a trend, and the universal personalized recommendation model can not meet the userís needs of different backgrounds and purposes This paper try to solve the issues of the personalization recommendation model based on Web access log mining by analyzing the impact of the model through the experiment The experiment shows that the recommendation precision has been greatly improved The problem of accurately describing the userís preference needs further work. We will continue to follow the technologies of the area, and accurately express user's behavior and interest to further enhance the recommendation average precision A CKNOWLEDGMENT  This work was supported by Program for New Century Excellent Talents in University, China NCET-06-0161 1110012040112\ Fok Ying Tong Education Foundation China\(91101\ Beijing Institute of Technology graduate student scientific and technological innovation project and the Natural Science Foundation \(grant no.60705022 R EFERENCES   1  1 S o t i r i s K o ts ian t is  D i m i tr is K a ne l l o po ul o s A s s o ciatio n R u l e s  Mining: A Recent Overview. GESTS International Transactions on Computer Science and Engineering, Vol.32 \(1\, 2006, pp. 71-82 2  Karam Gorda, Mohammed J. Zaki. GenMax: An Efficient Algorithm for Mining Maximal Frequent Itemsets. Data Mining and Knowledge Discovery, 11, 1ñ20, 2005 3  S.N.Sivanandam, S.Sumathi, T.Hamsapriya.K.Babu. Parallel Buddy Prima ñ A Hybrid Parallel Frequent itemset mining algorithm for very large databases.Academic Open Internet Journal. Volume 13,2004 4  Chris Buckley. Implementation of the SMART              Information Retrieval System. Technical Report:  TR85-686 ,1985 5  Thorsten Joachims. A Probabilistic Analysis of the Rocchio Algorithm with TFIDF for Text Categorization. Proceedings of the Fourteenth International Conference on Machine Learning, p.143151, July 08-12, 1997 6  Rakesh Agrawal, Ramakrishnan Srikant. Fast algorithms for mining association rules in large databases. Proceedings of thr Twentieth International Conferrnce on Very Large Databases. Santiago, Chile 1994:487-499 7  Zeng C, Xing CX, Zhou LZ. A personalized search algorithm by using content-based filtering.Journal of Software, 2003 14\(5\:999~1004 8  Pine, B. Joseph \(1993\, Mass Customization, Harvard Business School Press, Boston, MA, 1993 9  Salton, Gerard and Buckley, Christopher \(1988\, Term-weighting approaches in automatic text retrieval, Infor- mation processing Management, 24\(5\, pp. 513-523, 1998  
175 


D Genetic Operators Our genetic operators are like a standard GA including selection, crossover and mutation but the implementation is different Our objective is to find the individuals containing rules as more as possible according to the common feature of chromosomes. Therefore, we adopt heuristic genetic operators to search better individuals by using the above defined parameters In addition initial individuals will be as the reserved group and not attend the selection and mutation because they contain all the information of transactions Let us see the following genetic operators Selection For retaining rules, we select all the individuals whose value of IVF is larger than 0. During the selection, for making each individual be unique, we exclude the individuals that have been selected according to the value of IVI  Crossover For not losing rules our crossover operation will retain the parents. There are two crossover strategies One is that selects chromosomes having different symbol to produce a new individual from both parents in terms of the value of CF The larger the CF is, the more possible the chromosome is selected. Another is that checks whether there are some appropriate chromosomes that can make the UI of another parent enhance through replacing operation in a parent \(See the definition of UG If this kind of chromosomes exists we produce a new individual by replacing other chromosomes of another parent .We pair the individuals randomly and adopt the two strategies for every pair Mutation The objective of the mutation is to make the individual easy to get or expand the rule. The process of the mutation is to find some chromosome containing any union of the subset of the UG and items set contained by the rule of the individual to replace any chromosome of this individual which can enhance the value of UI  For example, the individual Trans2  Trans4  Trans5 See Fig 2\ract rule Pd2  Pd3  Pd4 nd its UG is Pd1  Pd5 See the definition of UG the mutation of this individual is to find some chromosome containing Pd1  Pd2  Pd3  Pd4 or Pd2  Pd3  Pd4  Pd5 or Pd1  Pd2  Pd3  Pd4  Pd5  to replace any chromosome of this individual, which can make the UI be -1 When some individuals get or expand a rule through mutation operation, the UI and UG of the individuals will be reset. Otherwise, just UG will be reset and let UI equals to UI plus 1 The mutation operation will scan total transaction set to find the appropriate chromosome. The best situation is to find it in the initial position and the worst doesnêt find. So the mutation probability will be according to the value of UI The larger the value of UI is, the more possible the individual takes place the mutation After satisfying the end condition, we incorporate all the individuals extracting same rules and calculate their support E Flow of Distributed mining Now we can combine our GA with the apriori algorithm and statistic method to mine multi-relational data. The basic architecture of our distributed mining system is shown in Fig.5 In relational databases, some attributes are unmeaning for commercial decision for example, the fax or the phone of customers So we just mine rules among the valuable attributes. The flow of the distributed mining will be shown as follows First, we extract valuable relational data from multiple tables through the foreign key and store them in the corresponding arrays according to the respective table belonged to by using uniform key to connect them In here we use the sequence number of array as the uniform relational key because in the latter we can find the data of relational attributes quickly through the sequence number of array Second, we mine the antecedent rules among the chief attributes data \(Generally are the information of products and produce corresponding relational key set of every rule by using our GA Third mines the extended consequent rules from other arrays by using the apriori algorithm and statistic method in terms of the relational key set in a distributed way The statistic method is in charge of mining the attribute needed to be added up. For example, the Quantity attribute in Order Details table \(See Fig. 1  Fig. 5.  System Architecture of Distributed Mining for the Multi-Relational Data Minin g 748 2008 IEEE Congress on Evolutionary Computation CEC 2008 


Finally, shows the extended association rules IV EXPERIMENTS For our experiments we used SQL Server2000 relational DBMS running on a 1.50GHz Pentium M with 504MB RAB The data we used is from the Northwind database of the SQL Server2000 and the relational structure is shown in Fig. 1 The sizes of the tables are as follows The Order Details table has 2155 tuples The Order table has 830 tuples The Customers table has 91 tuples We select 77 kinds of products as the chief attributes to mine the antecedent rules and select Quantity from Order Details table, OrderDate from Order table and ContactTitle and Country from Customers table as the relational attributes to mine the extended consequent rules The minimum support is set 0.5% and the extended minimum confidence is set 40 We will find these antecedent rules containing at least two products Thus, the antecedent rules mined by using our GA will answer the following question What products are frequently ordered together The extended consequent rules mined by using apriori algorithm and statistic method can answer these additional questions as follows How much quantities, what the possible order date is and how the customers are about these products frequently ordered together Figure 6 shows the generations and the number of rules during the GA mining process Table I shows the experimental results after incorporating and extracting the rules containing at least two products Table II shows fourteen extended association rules In the proposed method, the GA found most anteceden t rules. The matrix grouping method will extract anteceden t TABLE I T HE EXPERIMENTAL RESULT OF RULES MINED BY THE GA Quantity Accuracy of the support Proportion of total rules  Antecedent rules 14 92.86 77.78 TABLE II T HE EXTENDED ASSOCIATION RULES Antecedent rules Extended consequent rules Product21 Product51 0.60 Quantity21=81,Quantity51=66 Orderdate=\(1997\(60 80 Product16 Product31 0.84 Quantity16=243,Quantity31=182 Orderdate=\(1997\(42.86%\,1998\(42.86 42.86 Product16 Product60 0.72 Quantity16=196,Quantity60=280 Orderdate=\(1997\(50 Product31 Product51 0.60 Quantity31=186,Quantity51=225 Orderdate=\(1997\(80 Customers  Sales Associate, Ireland\\(40%\ \(Sales 40 Product21 Product61 0.96 Quantity21=176,Quantity61=156 Orderdate=\(1997\(62.5 50 Product16 Product62 0.72 Quantity16=120,Quantity62=89 Orderdate=\(1997\(66.67 50 Product56 Product65 0.60 Quantity56=197,Quantity65=101 40 60 Product31 Product72 0.72 Quantity31=194,Quantity72=199 Orderdate=\(1996\(50 Product60 Product71 0.72 Quantity60=235,Quantity71=197 50 Product10 Product77 0.60 Quantity10=130,Quantity77=132 Orderdate=\(1998\(80 Customers=\(\(Accounting Manager\\(40 Product30 Product54 0.72 Quantity30=67,Quantity54=120 Orderdate=\(1997\(66.67 Product17 Product33 0.60 Quantity17=158,Quantity33=86 Orderdate=\(1998\(60 40 40 Product55 Product62 0.60 Quantity55=135,Quantity62=61 40 40 Product59 Product76 0.60 Quantity59=131,Quantity76=80 Orderdate=\(1997\(80 40  40          Fig. 6. The number of rules and generations 2008 IEEE Congress on Evolutionary Computation CEC 2008 749 


rules through producing C 830 5 groups while our GA just uses 23968 groups to produce rules. Finally, the extracted extended association rules satisfy the condition of importance and have the qualification for commercial decision. Therefore we need not store retrieve, prune and sort a large number of rules for classification as traditional method V C ONCLUSIONS In this paper we introduce a new data mining method to mine rules from multi-relational databases Our approach has two novel points: One is the ideas of distributed mining by using GA and traditional apriori mining algorithm. Another is the definition of the new extended association rule for supporting the commercial decision better. In our experiment the GA based method is more efficient on the antecedent rules mining than the matrix method and the distributed mining method is also different with other multi-relational data mining methods that need query-processing using SQL language The extended association rule has finer pattern and contains more commercial information. Meanwhile, the number of rules is much less than the standard data mining method producing large candidate rules In the future research we will apply our method to the real world databases with large data and intend to combine the fuzzy logic and our method to predict data R EFERENCES  R. Agrawal and T  Im ielinski and A Swam i Mining Association Rules Between Sets of Items in Large Databases in Proc. of .ACM SIGMOD Conf., 1993, pp.207-216  R Agrawal and R. Srikant, çFast Algo r ithm f o r M in ing Association Rules,é in Proc. of .the 20 th VLDB Conf., 1994, pp.487-499  J Roberto and Jr  B a y ar d o a n d R  A g ra wa l Mining the M o s t Interesting Rules,é in Proc of the 5th ACM SIGKDD Conf. 1999 pp.145-154   Christia n Bo r g e lt and Rudolf Kr use  Introduction of As socia tion Rule s Apriori Implementation,é in Proc. of .the 15th Conf on Computational Statistics. 2002, pp.1  Saùo Dûeroski Multi-R elatio nal Data Mining: An Introduction in Proc. of .ACM SIGKDD Conf 2003, pp.1-16   Hendrik Blockeel an d Mich le Sebag, çScalability and ef f iciency in multi-relational data mining in Proc. of .ACM SIGKDD Conf 2003 pp.17-30  Svet lo z a r N es torov a n d Ne nad Jukic  A d-H o c A s socia tion-Rule Mining within the Data Warehouse,é in Proc. of .the 36th HICSS Conf 2002, pp.10  Hendrik Blockeel and Saùo Dûeros k i   M u ltiRelational Data Mining 2005: workshop report,é in Proc. of ACM SIGKDD Conf. 2005 pp.126-128   T. Fukud a Y. Morim oto S. M o r i shita and T. Tokuy am a  D ata Mining with Optimized Two-Dimensional Association Rules,é in Proc. of .the ACM TODS Conf. 2001, pp.179-219   Kaoru S him a da, Kotaro Hirasawa and Jinglu Hu  Class Association Rule Mining with Chi-Squared Test Using Genetic Network Programming in Proc of the Conf on Systems, Man, and Cybernetics 2006, pp.5338-5344   Ma nish Sagga r A s h i s h K u m a r A graw a l a nd A bhim any u L a d Optimization of Association Rule Mining using Improved Genetic Algorithms in Proc. of .the Conf on Systems, Man, and Cybernetics 2004, pp.3725-3729   S Muggle to n e d itor Inductive Logic Program m i ng  Academic Press London, 1992  S Ch a u dhri a n d U D a y a l An o v e r v ie w o f  D a t a  W a r e housi n g a n d OLAP Technology,é in Proc. ACM SIGMOD Conf 1997, pp. 65Ö74  Riyaz Sikora and Selwyn Piramuthu, çFramework for efficient feature selection in genetic algorithm based data mining,é presented at the European Journal of Operational Research 2007 pp. 723Ö737  Ja naki Gopal an E r kan K o rkm az  Reda A l hajj and K e n B a rke r  Effective Data Mining by Integrating Genetic Algorithm into the Data Preprocessing Phase,é in Proc. of .the ICMAL Conf. 2005, pp.6  J.H Holland Adaptation in Natural and Artificial System,é Ann Arbor MI: Univ. Michigan Press, 1975  D.E Goldber g Genetic Algorithm Search, Optimization & Machine Learning Addison Wesley, 1989 750 2008 IEEE Congress on Evolutionary Computation CEC 2008 


TREC ONTO p-value Macro-FM 0.388 0.386 0.862 Micro-FM 0.356 0.355 0.896 MAP 0.290 0.284 0.484 Table 1 Other Experimental results downgrade For the average macroand microF 1 Measures also shown on Table 1 the TREC model only outperformed the ONTO model by 0.002 0.5 in macro F 1 and 0.001 0.2 in micro F 1  The two models achieved almost the same performance The evaluation result is promising The statistical test is also performed on the experimental results in order to analyze the evaluation's reliability As suggested by we use the Student's Paired T-Test for the signi\002cance test The null hypothesis in our T-Test is that no difference exists in two comparing models When two tests produce substantially low p-value usually  0.05 the null hypothesis can be rejected In contrast when two tests produce high p-value usually  0.1 there is not or just little practical difference between two models The T-Test results are also presented on Table 1 The pvalue s show that there is no evidence of signi\002cant difference between two experimental models as the produced pvalue s are quite high  p-value 0.484\(MAP 0.862\(macroFM and 0.896\(micro-FM far greater than 0.1 Thus we can conclude that in terms of statistics our proposed model has the same performance as the golden TREC model and the evaluation result is reliable The advantage of the TREC model is that the experimental topics and the training sets are generated by the same linguists manually They as users perfectly know their information needs and what they are looking for in the training sets Therefore it is reasonable that the TREC model performed better than the ONTO model as we cannot expect that a computational model could outperform a such perfect manual model However the knowledge contained in TREC model's training sets is well formed for human beings to understand but not for computers The contained knowledge is not mathematically formalized and speci\002ed The ONTO model on the other hand formally speci\002es the user background knowledge and the related semantic relations using the world knowledge base and local instance repositories The mathematic formalizations are ideal for computers to understand This leverages the performance of the ONTO model As a result as shown on Fig 2 and Table 1 the ONTO model achieved almost the same performance as that of the TREC model 6 Conclusions In this paper an ontology-based knowledge IR framework is proposed aiming to discover a user's background knowledge to improve IR performance The framework consists of a user's mental model a querying model a computer model and an ontology model A world knowledge base is used by the computer model to construct an ontology to simulate a user's mental model and the ontology is personalized by using the user's local instance repository The semantic relations of hypernym/hyponym holonym/meronym and synonym are speci\002ed in the ontology model The framework is successfully evaluated by comparing to a manual user model The ontology-based framework is a novel contribution to knowledge engineering and Web information retrieval References   C Buckley and E M Voorhees Evaluating evaluation measure stability In Proc of SIGIR 00  pages 33ñ40 2000   R M Colomb Information Spaces The Architecture of Cyberspace  Springer 2002   D Dou G Frishkoff J Rong R Frank A Malony and D Tucker Development of neuroelectromagnetic ontologies\(NEMO a framework for mining brainwave ontologies In Proc of KDD 07  pages 270ñ279 2007   S Gauch J Chaffee and A Pretschner Ontology-based personalized search and browsing Web Intelligence and Agent Systems  1\(3-4 2003   X Jiang and A.-H Tan Mining ontological knowledge from domain-speci\002c text documents In Proc of ICDM 05  pages 665ñ668 2005   J D King Y Li X Tao and R Nayak Mining World Knowledge for Analysis of Search Engine Content Web Intelligence and Agent Systems  5\(3 2007   D D Lewis Y Yang T G Rose and F Li RCV1 A new benchmark collection for text categorization research Journal of Machine Learning Research  5:361ñ397 2004   Y Li and N Zhong Mining Ontology for Automatically Acquiring Web User Information Needs IEEE Transactions on Knowledge and Data Engineering  18\(4 2006   H Liu and P Singh ConceptNet a practical commonsense reasoning toolkit BT Technology  22\(4 2004   A D Maedche Ontology Learning for the Semantic Web  Kluwer Academic Publisher 2002   S E Robertson and I Soboroff The TREC 2002 002ltering track report In Text REtrieval Conference  2002   M D Smucker J Allan and B Carterette A Comparison of Statistical Signi\002cance Tests for Information Retrieval Evaluation In Proc of CIKM'07  pages 623ñ632 2007   X Tao Y Li and R Nayak A knowledge retrieval model using ontology mining and user pro\002ling Integrated Computer-Aided Engineering  15\(4 2008   X Tao Y Li N Zhong and R Nayak Ontology mining for personalzied web information gathering In Proc of WI 07  pages 351ñ358 2007   T Tran P Cimiano S Rudolph and R Studer Ontologybased interpretation of keywords for semantic search In Proc of the 6th ICSW  pages 523ñ536 2007   Y Y Yao Y Zeng N Zhong and X Huang Knowedge retrieval KR In Proc of WI 07  pages 729ñ735 2007 
513 
517 


TESTS IN SECOND t INDICATES nl WAS LOWERED TO 2 Training BSTC Top-k RCBT 7 OC Holdout Validation Results RCBT outperforms BSTC on the single test it could finish by more then 7 although it should be kept in mind that RCBT's results for the 24 unfinished tests could vary widely Note that BSTC's mean accuracy increases monotonically with training set size as expected At 60 training BSTC's accuracy behaves almost identically to RCBT's 40 training accuracy see Figure 6 4 Ovarian Cancer OC Experiment For the Ovarian Cancer dataset which is the largest dataset in this collection the Top-k mining method that is used by RCBT also runs into long computational times Although Top-k is an exceptiounally fast CAR group upper bound miner it still depends on performing a pruned exponential search over the training sample subset space Thus as the number of training samples increases Top-k quickly becomes computationally challenging to tune/use Table VI contains four average classification test run times in seconds for each Ovarian Cancer\(OC training size As before the second column run times each give the average time required to build both class 0/1 BSTs and then use them to classify all test's samples with BSTC Note that BSTC was able to complete each OC classification test in about 1 minute In contrast RCBT again failed to complete processing most classification tests within 2 hours Table VI's third column gives the average times required for Top-k to mine the top 10 covering rule groups upper bouhnds for each training set test with the same 2 hour cutoff procedure as used for PC testing The fourth column gives the average run times of RCBT on the tests for which Topk finished mining rules also with a 2 hour cutoff Finally the  RCBT DNF column gives the number of tests that RCBT was unable to finish classifying in  2 hours each THE OC TESTS THAT RCBT FINISHED Training BSTC RCBT 40 92.05 97.66 60 95.75 96.73 80 94 12 98.04 1-133/077 9380 96.12 1070 cJ CZ C 0.95 0.9 0.85 0.8 0.75 0.7 0.65 0.6 0.55 0.5 BSTC RCBT d Median Median  Mean 260 Near outliers  Far outliers 40 Training 60 Training 0.90.80.70.6BSTC RCBT a 80 Training 1-52/0-50 Training 0.9DNFI 0.80.70.6BSTC RCBT b 1 u0.9DNFI 0.80.70.6BSTC RCBT  RCBT DNF 40 30.89 0.6186 273.37 0/25 60 61.28 41.21  5554.37 19/25 80 71.84  1421.80  7205.43 t 21/22 TIMES FOR THE OC 9 Mean 0 Near outliers  Far outliers 1.01 11 01 1.0 d Fig 6 PC Holdout Validation Results BSTC RCBT a Fig 0.80.8 0.8BSTC RCBT BSTC RCBT b c c i DNF cJ CZ C 40 Training 60 Training 80 Training 1-133/0-77 Training 0.95 DNF DNF DNF 0.9 0.90.90.90.85 0.8 BSTC RCBT TABLE VI AVERAGE RUN 1 133/0-77 70.38  1045.65  6362.86 t 20/23 over the number of tests for which Top-k finished Because RCBT couldn't finish any 80 or 1-133/0-77 tests within 2 hours with nl  20 we lowered nl to 2 Classification Accuracy Figure 7 contains boxplots for BSTC on all four OC classification test sets Boxplots were not generated for RCBT with 60 80 or 1-133/0-77 training since it was unable to finish all 25 tests for all these training set sizes in  2 hours each Table VII lists the mean accuracies of BSTC and RCBT over the tests on which RCBT was able to produce results Hence Table VII's 40 row consists of averages over 25 results Meanwhile Table VII's 60 row results are from 6 tests 80 contains a single test's result and 1-133/0-77 results from 3 tests RCBT has better mean accuracy on the 40 training size but the results are closer on the remaining sizes   4 difference over RCBT's completed tests Again RCBT's accuracy could vary widely on its uncompleted tests CAR Mining Parameter Tuning and Scalability We attempted to run Top-k to completion on the 3 OC 80 training and 2 OC 1-133/0-77 training tests However it could not finish mining rules within the 2 hour cutoff Top-k finished two of the three 80 training tests in 775 min 43.6 sec and 185 min 3.3 sec However the third test ran for over 16,000 mnm  11 days without finishing Likewise Top-k finished one of the two 1-133/0-77 tests in 126 min 45.2 sec but couldn't finish the other in 16,000 min  11 days After increasing Top-k's support cutoff from 0.7 to 0.9 it was able to finish the two unfinished 80 and 1-133/0-77 training tests in 5 min 13.8 sec and 35 min 36.9 sec respectively However RCBT with nl 2 then wasn't able to finish lower bound rule mining for either of these two tests within 1,500 min Clearly CAR-mining and parameter tuning on large training sets is TABLE VII MEAN AcCU1ACIES FOR 


support pruning gene expression classifier with an accurate and compact fuzzy rule base for microarray data analysis Biosystems vol 85 computationally challenging As training set sizes increase it is likely that these difficulties will also increase VI RELATED WORK While operating on a microarray dataset current CAR 1 2 3 4 and other pattern/rule 20 21 mining algorithms perform a pruned and/or compacted exponential search over either the space of gene subsets or the space of sample subsets Hence they are generally quite computationally expensive for datasets containing many training samples or genes as the case may be BSTC is explicitly related to CAR-based classifiers but requires no expensive CAR mining BSTC is also related to decision tree-based classifiers such as random forest 19 and C4.5 family 9 methods It is possible to represent any consistent set of boolean association rules as a decision tree and vice versa However it is generally unclear how the trees generated by current tree-based classifiers are related to high confidence/support CARs which are known to be particularly useful for microarray data 1 2 6 7 11 BSTC is explicitly related to and motivated by CAR-based methods To the best of our knowledge there is no previous work on mining/classifying with BARs of the form we consider here Perhaps the work closest to utilizing 100 BARs is the TOPRULES 22 miner TOP-RULES utilizes a data partitioning technique to compactly report itemlgene subsets which are unique to each class set Ci Hence TOP-RULES discovers all 100 confident CARs in a dataset However the method must utilize an emerging pattern mining algorithm such as MBD-LLBORDER 23 and so generally isn't polynomial time Also related to our BAR-based techniques are recent methods which mine gene expression training data for sets of fuzzy rules 24 25 Once obtained fuzzy rules can be used for classification in a manner analogous to CARs However the resulting fuzzy classifiers don't appear to be as accurate as standard classification methods such as SVM 25 VII CONCLUSIONS AND FUTURE WORK To address the computational difficulties involved with preclassification CAR mining see Tables IV and VI we developed a novel method which considers a larger subset of CAR-related boolean association rules BARs These rules can be compactly captured in a Boolean Structure Table BST which can then be used to produce a BST classifier called BSTC Comparison to the current leading CAR classifier RCBT on several benchmark microarray datasets shows that BSTC is competitive with RCBT's accuracy while avoiding the exponential costs incurred by CAR mining see Section VB Hence BSTC extends generalized CAR based methods to larger datasets then previously practical Furthermore unlike other association rule-based classifiers BSTC easily generalizes to multi-class gene expression datasets BSTC's worst case per-query classification time is worse then CAR-based methods after all exponential time CAR mining is completed O SlS CGl versus O Si CGi As future work we plan on investigating techniques to decrease this cost by carefully culling BST exclusion lists ACKNOWLEDGM[ENTS We thank Anthony K.H Tung and Xin Xu for sending us their discretized microarray data files and Top-k/RCBT executables This research was supported in part by NSF grant DMS-0510203 NIH grant I-U54-DA021519-OlAf and by the Michigan Technology Tri-Corridor grant GR687 Any opinions findings and conclusions or recommendations expressed in this material are those of the authors and do not necessarily reflect the views of the funding agencies REFERENCES 1 G Cong K L Tan A K H Tung and X Xu Mining top-k covering rule Mining SDM 2002 5 R Agrawal T Imielinski and A Swami Mining associations between sets of items Y Ma Integrating classification and association rule mining KDD 1998 11 T McIntosh and S Chawla On discovery of maximal confident rules without pp 43-52 1999 24 S Vinterbo E Kim and L Ohno-Machado Small fuzzy and interpretable pp 165-176 2006 1071 pp 207-216 1993 6 G Dong pp 273-297 t995 9 pp 5-32 2001 20 W Li J R Quinlan Bagging boosting and c4.5 AAAI vol 1 V Vapnik Support-vector networks the best strategies for mining frequent closed itemsets KDD 2003 4 M Zaki and C Hsiao Charm L Wong Identifying good diagnostic genes or gene expression data SIGMOD 2005 2 G Cong A K H Tung X Xu F Pan and J Yang Farmer Finding interesting rule gene expression data by using the gene expression based classifiers BioiiiJcrmatics vol 21 l and Inrelligent Systenis IFIS 1993 16 Available at http://sdmc.i2r.a-star.edu.sg/rp 17 The dprep package http:/cran r-project org/doclpackages dprep pdfI 18 C Chang and C Lin Libsvm a library for support vector machines 2007 Online Available www.csie.ntu.edu.tw cjlin/papers/libsvm.pdf 19 L Breiimnan Random forests Maclh Learn vol 45 no 1 M Chen and H L Huang Interpretable X Zhang 7 J Li and pp 725-734 2002 8 C Cortes and Mac hine Learming vol 20 no 3 in microarray data SIGKDD Worikshop on Dtra Mining in Bioinfrrnatics BIOKDD 2005 12 R Agrawal and R Srikant Fast algorithms for mining association rules VLDB pp 1964-1970 2005 25 L Wong and J Li Caep Classification by aggregating emerging patterns Proc 2nd Iat Coif Discovery Scieice DS 1999 gene groups from pp 487-499 t994 13 Available ot http://www-personal umich edu/o markiwen 14 R Motwani and P Raghavan Randomized Algoriitlms Caim-bridge University Press 1995 15 S Sudarsky Fuzzy satisfiability Intl Conf on Industrial Fuzzy Contri J Han and J Pei Cmar Accurate and efficient classification based on multiple class-association rules ICDM 2001 21 F Rioult J F Boulicaut B Cremilleux and J Besson Using groups for groups in microarray datasets SIGMOD 2004 3 concept of emerging patterns BioinformJotics vol 18 transposition for pattern discovery from microarray data DMKD pp 73-79 2003 22 J Li X Zhang G Dong K Ramamohanarao and Q Sun Efficient mining of high confidence association rules without S Y Ho C H Hsieh H pp 725-730 1996 10 B Liu W Hsu and support thresholds Principles f Drata Mining aind Knowledge Discovery PKDD pp 406 411 1999 23 G Dong and J Li Efficient mining of emerging patterns discovering trends and differences KDD J Wang J Han and J Pei Closet Searching for An efficient algorithm for closed association rule mining Proc oJ the 2nd SIAM Int Con on Data in large databases SIGMOD 


