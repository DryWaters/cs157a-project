Mining Association Rules: A Contin uous Incremental Updating Technique Siqing Shan Xiaojing Wang, and Miao Sui School of Economics and Management Beihang University Beijing, China E-mail:shansiqing@buaa.edu.cn Abstract 000 000 A continuous incremental updating technique is proposed for efficient maintenance of the mining association rules when new transaction data are added to a transaction database. FP-growth algorithm can mine the complete set of frequent patterns by pattern fragment growth. To efficient maintenance of the mining association rules, we improve the FP-growth algorithm in three aspects: 1\ an optimization technique for reducing the database size during the update 
process is discussed, and 2\ the construction algorithm of a transaction tree T-tree, and 3 the candidate pattern pools are proposed based-on the st ructure of T-tree. Then, a continuous incremental updating algorithm, or CIU algorithm for short, is proposed. Our performance study shows that the continuous incremental updating technique is efficient and scalable for mining both long and short frequent patterns Keywords 000 data mining, association rules, continuous incremental updating technique, amalgamate transactions I INTRODUCTION One major application domain of data mining is in the analysis of transactional data. It is assumed that the database system keeps information about user transactions 
where each transaction is a collection of data items. In this setting, association rules capture inter-relationships between various data items In many situations, data mining is treated as a synonym of knowledge discovery in databases [4, 6, 7, 8, 10, 14 Discovering association rules from a large amount of data sets has been a focused field in recent data mining research. Mining association rules from databases has the characteristics: 1\ the size of the database is significantly l a r g e  2   t h e  r u l e s  m i n e d 
 i s  v a l i d  o n l y  i n  s t a t i s t i c a l  t e r m s   3   the rules mined from a large database only reflect the current state of the database The characteristics indicate that the promise of data mining lies in the techniques to handle a large amount of data, to manage a substantial number of rules, and to maintain the rules over a significantly long period of time Hence, two problems are essential in order to make data 
mining a feasible technology. The two problems are: 1 design efficient algorithms for mining different types of rules or patterns, and 2\ design efficient algorithms to update, maintain, and manage the rules mined [5 The first problem has been studied substantially with many interesting and efficient data mining algorithms reported [1, 2, 3, 9, 12, 13, 15, 16 18 19 2  Ho w e ve r   very little work has been done on the second problem FUP algorithm, an incremental updating technique for maintenance of mining associatio n rules in large databases is proposed [5 Ho w e ve r  the FUP algorithm is based on Apriori algorithm. Although Apriori algorithm is a 
successful algorithm, it may suffer from the two nontrivial costs: 1\ may need to generate a huge number of candidate sets; and 2\ it may need to repeatedly scan the database To avoid generating a huge set of candidates, an efficient FP-tree based mining method called FP-growth is developed 11 h e FP-growth algorithm can mine the complete set of frequent patterns by pattern fragment growth. However, we think that FP-growth algorithm may still suffer from the nontrivial co sts: it is costly that the frequent items are sorted in their frequency descending order. There are following three reasons First, it is nontrivial cost that the frequent items are 
sorted in their frequency descending order. In the FP-growth algorithm, it is believed that the FP-tree tree nodes are arranged in their frequency descending order will have better chances of sharing nodes than less frequently occurring ones and the FP-tree structure is usually highly compact Second, sometimes it is impossible that the frequent items are sorted in their frequency descending order. In the FP-growth algorithm, the items in the transaction database have no their amount. However, if item amount is considered, it may be impossible that the frequent items are sorted in their frequency descending order Last issue is how to incrementally update an 
FP-tree  Because the structure of FP-tree is dependent on the frequency descending order, the structure of FP-tree must be reconstructed when the frequency descending order changes due to the adding of new transactions In this paper, we study the problem of continuous incremental updating techniqu e for maintenance of mined association rules. First, we construct a transaction tree, or T-tree for short. The T-tree structure is not dependent to the frequency descending order but is only dependent to 
2010 International Conference on Web Information Systems and Mining 978-0-7695-4224-9/10 $26.00 © 2010 IEEE DOI 10.1109/WISM.2010.39 62 
2010 International Conference on Web Information Systems and Mining 978-0-7695-4224-9/10 $26.00 © 2010 IEEE DOI 10.1109/WISM.2010.39 62 


the order of serial number. Second, transactions in the primitive transaction database can be sequence amalgamated in certain regulations. Third, the concept of candidate pattern pool is proposed The remainder of the paper is organized as follows Section 2 gives a brief review of the problem of mining association rules and FP-growth algorithm. Section 3 gives the description of continuous incremental updating algorithm. The optimization technique is also discussed in this section. Section 4 gives our performance study Section 5 summarizes our study II OVERVIEW OF FP-GROWTH ALGORITHM We now present the basic concept about association rules and FP-growth algorithm [10, 11, 14  A Association Rules Let I  i 1 i 2 i m An association rule is an implication of the form X b Y  where X  I  Y  I and X 001 Y 000 The rule X b Y holds in the transaction set D with confidence c if c of transactions in D that contain X also contain Y The rule X b Y has support s in the transaction set D if s of transactions in D contain X 001 Y  be a set of literals called items Let D be a transaction database or a set of transactions where each transaction T is an itemset such that T 001 I We can say that a transaction T contains X a set of some items in I if X 001 T  Given a set of transaction D the problem of mining association rules is to generate all association rules that have certain user-specified minimum support, called min_sup and minimum confidence, called min_conf  The problem of mining association rules can be decomposed into two subproblems [1  1   F i n d al l  s e t s of  items; and 2 Use the frequent itemsets to generate the desired association rules B FP-growth Algorithm The main idea of FP-growth is mining frequent itemsets. The notation in FP-growth is given TABLE I T ABLE 1N OTATION USED IN FPGROWTH ALGORITHM Notation Description D T F L null  p|P  N 000 000 a Transaction database i A transaction in D  The set of frequent items and their support List of frequent items in descending order The root of FP-tree List of sorted frequent item in T where p is the first element, and P is the remaining The child elements in T  A combination of the nodes in path P  The root of a FP-tree The leaf of a FP-tree The FP-growth algorithm and its related procedures are shown in Figure 1. In first phase, the structure of FP-tree is constructed. In second phase, the mining of a FP-tree is performed by FP-growth  Tree 000  Figure 1 The pseudo code of FP-growth algorithm The advantage of FP-growth algorithm is without generating the huge amount of candidate itemsets III CONTINUOUS INCREMENTAL UPDATING ALGORITHM In this section, we firs t propose an optimization technique for reducing the database size. Second, we give the definition and algorithm of transactions tree, or T-tree for short. Third, it is detail described that how to maintain the candidate pattern pools. La st, we give the continuous incremental updating algorithm A Transaction Sequence Amalgamated Algorithm Transaction Sequence Amalgamated algorithm, or TSA algorithm for short, is an optimization technique for reducing the database size. Some important properties given as follows are used in TSA algorithm Definition 1: Item amount in a transaction is the count of presence of the same item in the transaction, and item quantity in a transaction is the count of all different items in the transaction Algorithm: FP-growth Input: Database D minimum support threshold min_sup  Output: Set of frequent patterns Constructing phase of FP-tree 1\an D  2\ollect F and sort F as L  3\ create the root of a FP-tree and label as null  4\ach T 004 D do 5 p  P   se l e ct an d so r t  T according to the order in L  6\sert_tree p  P   T  7\ext T  8\turn FP-tree procedure insert_tree P  N  1\f T has a child N such that N.item-name  p.item.name then N  2\lse {create a new node N and N.count 1 3 N.parent  T  4 N.node-link nodes with same item-name via node-link structure 5\f P 004 002 then insert_tree P  N  6\lse return Mining phase of a FP-tree Procedure FP-growth \(Tree 001  1\ if Tree contains a single path P then 2\ach combination 001 generate pattern support = min_sup of nodes 3\lse for each a1, do 4\nerate pattern 001 ai 004K\001 with support = ai.support 5\onstruct 001 conditional pattern base and 001 conditional FP-tree Tree 001  6\f Tree 001Í\004Å\002 then FP-growth \(Tree 001  001  
63 
63 


Definition 2: Item amount constraint specifies that mining association rules is performed under the guidance of item amount provided in transaction database Definition 3: Transaction without item amount constraint is the transaction in which there is only item but no item amount Definition 4: Transaction with item amount constraint is the transaction in which th ere is not only item but also item amount Hypothesis: In a transaction every item may have its amount. An item amount may be same to some items amount, but different with other items amount Definition 5: If a transaction database D 1 is transformed into another transaction database D 2 but their association relationship or frequent itemsets are consistence, the procedure of transformation is called equivalent transformation of transaction database, and the two databases are the equivalent database, denoted as D 1 d D 2 Definition 6: The item and its amount in a transaction can be denoted ItemID:Amount That is said, in a transaction database, the i  th item of the TID th transaction and its amount can be denoted I i,TID  A i,TID where I i,TID is the ith item of the TID th transaction, and A i,TID is the amount of the ith item in the TID th Definition 7: In a transaction database D  given two transactions T1 001\031 D and T2 001\031 D There are n items in transaction T1 and denoted T1  I transaction TID is the abbreviation of the transaction identifier 1,T1  A 1,T1  I 2,T1  A 2,T1  I n,T1 A n,T1 and there are m  m 0010 n items in transaction T2 and denoted T2  I 1,T2 A 1,T2  I 2,T2 A 2,T2  I m,T2 A m,T2 If all the items in transaction T2 must exist in transaction T1  that is said, if  I 001\031  I 1,T2  I 2,T2  I m,T2 then must I 001\031  I 1 T1  I 2,T1  I n,T1 Definition 8: In a transaction database D, given two transactions T1 001\031 D and T2 001\031 D There are n items in transaction T1 and denoted T1  I called T2  T1 or T1  T2  1,T1  A 1,T1  I 2,T1  A 2,T1  I n,T1 A n,T1 and there are m  m<n items in transaction T2 and denoted T2  I 1,T2 A 1,T2  I 2,T2 A 2,T2  I m,T2 A m,T2  In transaction T2 the items are sorted in descending amount. That is said A 1,T2 0011 A 2,T2 0011  0011 A m,T2 in T2 In transaction T1 the items are sorted according to descending amount A 1,T1 0011 A 2,T1 0011  0011 A m,T1 0011  0011 A n,T1  If the first m items in transaction T1 are the corresponding items in transaction T2 that is said I i,T1  I i,T2 Definition 9: In a transaction database D given two transactions T1 001\031 D and T2 001\031 D There are n items in transaction T1 and denoted T1  I  i  1  2  m  we can say T1>T2  1,T1  A 1,T1  I 2,T1  A 2,T1  I n,T1 A n,T1 and there are n items in transaction T2 and denoted T2  I 1,T2 A 1,T2  I 2,T2 A 2,T2  I m,T2 A m,T2 If I i,T1 I i,T2  A i,T1 A i,T2 Definition 10: In a transaction database D given two transactions T1 001\031 D and T2 001\031 D There are n items in transaction T1 and denoted T1  I  i  1  2  n we can say T1=T2  1,T1 A 1,T1 I 2,T1 A 2,T1  I m,T1 A m,T1  I m+1,T1 A m+1,T1  I n,T1 A n,T1 and there are m  m 0010 n items in transaction T2 and denoted T2   I 1,T2 A 1,T2  I 2,T2 A 2,T2  I m,T2 A m,T2 All the items are sorted according to descending amount in these two transactions. If the first m items in transaction T1 are same to the items in transaction T2 respectively, that is said I 1,T1 I 1,T2  I 2,T1 I 2,T2  I m,T1 I m,T2 the transaction T2 can be amalgamated into transaction T1 denoted T1í=T1+T2 The new transaction T1  I 1,T1 A 1,T1   I 2,T1 A 2,T1  I m,T1 A m,T1  I m+1,T1 A m+1,T1  I n,T1 A n,T1  where A 1,T1  A 1,T1 A 1,T2  A 2,T1  A 2,T1  A 2,T2  A m,T1  A m,T1  A m,T2 Theorem 1 T1 001\031 D and T2 001\031 D if T1  T2  T1 0011 T2  then T1 T1+T2 If T1 001\031 D then D d D The theorem is also called amalgamated theorem  According to Theorem 1, we can amalgamate the transactions in primitive tran saction database so as to reduce the quantity of trans actions in primitive transaction database. An algorithm called Transaction Sequence Amalgamated algorithm, or TSA algorithm for short, is proposed to reduce the quantity of transactions in primitive transaction database and is shown in Figure 2  In TSA algorithm TSAD is the abbreviation of Transaction Sequence Amalgamated Database and stands for the amalgamated transaction database. The main idea of TSA algorithm is that sor ting the transactions in the transaction database according to the quantity of items in every transaction in descending order, and amalgamating these transactions in the sequence Figure 2   The pseudo code of TSA algorithm  B Definition and Algorithm of Transaction Tree Definition 11: A transaction tree, or T-tree for short, is a tree structure defined below 1\ It consists of one root labeled as ìnullî, a set of item prefix subtrees as the children of the root, and a frequent item header table 2\ Each node in the item pr efix subtree consists of three fields: item name, count, and node link, where item name registers which item this node presents, count registers the number of items in transactions represented by the portion of the path reaching this node, and node link links to the next node in the T-tree carrying the same item name, or null if there is none Algorithm: TSA Input: transaction database, D Output: sequence amalgamated database, TSAD Method 1\an D 2\ sort transactions according toquantity of items in 3\SAD1 = T1 k=2; k 004 n; k 5\ach transaction t 004 TSADk-1 6\f \( t 004 Tk and t 004 Tk \ then t = t+Tk 7\ else TSADk = { TSADk-1, Tk 8\ sort items according to descending amount in transaction  9  return TSAD = TSADn 
64 
64 


3\ Each entry in the frequent item header table consists of two fields, item name and head of node link, which points to the first node in the T-tree carrying the item name The algorithm of constructing of transaction tree is shown in Figure 3. Note th at, the difference between T-tree constructing algorithm and FP-tree constructing algorithm is the order Figure 3  The pseudo code of T-tree constructing algorithm C Candidate Pattern Pools Candidate pattern pools include all of the candidate itemsets. Candidate pattern pools consist of two types of pools. One is the winner pattern pool, and another is the loser pattern pool. The definitions about the pattern pools are given as follows Definition 12: Candidate pattern pool is the set of the candidate itemsets Definition 13: Winner pattern pool is the set of frequent itemsets Definition 14: Loser pattern pool is the set of non-frequent itemsets D.Continuous incremental updating algorithm Let WP be the set of frequent itemsets in the winner pattern pool LP is the set of non-frequent itemsets in the loser pattern pool s be the minimum support OD be the number of transactions in the old ODB d be the number of transactions in an increment db and ND be the number of transactions in the new NDB where NDB=ODB 001 db  ND=OD+d  An itemset I is the member of the winner pattern pool in the ODB database if I.support 0011 s 000h OD and an itemset I is the member of the winner pattern pool in the NDB database if I.support 0011 s 000h ND  Lemma 1 An itemsets I which is the member of winner pattern pool in the ODB is a loser in the NDB if and only if I.supportNDB<s 000h ND  Lemma 2: An itemsets I which is the member of winner pattern pool in the ODB is still a winner in the NDB if I.supportdb 0011 s 000h d  Lemma 3: An itemsets I which is the member of loser pattern pool in the ODB is a winner in the NDB only if I.supportdb 0011 s 000h d  Lemma 4: An itemsets I which is the member of loser pattern pool in the ODB is still a loser in the NDB if and only if I.supportdb<s 000h d  The Continuous Incremental Updating algorithm, CIU algorithm for short, is described in Figure 4 Figure 4   The pseudo code of CIU algorithm Algorithm: Constructing of Transaction Tree or T-tree  Input D and min_sup  Output T-tree  Method 1\ amalgamate transactions by TSA algorithm 2\ create the root of a T-tree and label as null 3\ch T 004 D do 4 p|P   se l e ct an d so r t  T according toorder 5\sert_tree p|P   T  6\ext T  7\turn T-tree procedure insert_tree P N  1\f T has N  N.item-name  p.item.name  N=N+item.amount 2\lse {create a new node N and N.count  item.amount  3 N.parent = T  4 N.node-link nodes with same item-name node-link structure 5\f P 004Å\002 then call insert_tree  P N  6\lse return Algorithm CIU  Input: \(1\ ODB; \(2\ OWP ODB; \(3\ OLP; \(4\ db; \(5\ s Output: \(1\ \(2\P; and \(3\NLP Method 1\ amalgamate transactions in db by TSA algorithm 2\ constructing of T-tree in db 3\ mining T-tree by FP-growth\(tree 001  4\ach itemset I in db, do 5\ If I.supportdb 004 s 000 d then 6\  If I 004 OWP then 7\      OWP=OWP 0043 I 8\        I.supportNDB=I.supportODB+I.supportdb 9\      NWP=NWP+I 10\    If I 004 OLP then 11\       OLP=OLP 0043 I 12\       I.supportNDB=I.supportODB+I.supportdb 13\       If I.supportNDB 004 s 000 ND then NWP=NWP+I 14\       else NLP=NLP+I 15\    If I 004 OWP 004K OLP then 16\       I.supportNDB=I.supportdb 17\       if I.supportdb 004 s 000 ND then NWP=NWP+I 18\       else NLP=NLP+I 19\ else 20\    If I 004 OLP then 21\       OLP=OLP 0043 I 22\       I.supportNDB=I.supportODB+I.supportdb 23\       NLP=NLP+I 24\    If I 004 OWP then 25\       OWP=OWP 0043 I 26\       I.supportNDB=I.supportODB+I.supportdb 27\       if I.supportdb 004 s 000 ND then NWP=NWP+I 28\       else NLP=NLP+I 29\    If I 004 OWP 004K OLP then 30\       I.supportNDB=I.supportdb 31\       NLP=NLP+I 32\ for each itemset I in OWP do 33\ if I.supportODB 004 s 000 ND then NWP=NWP+I 34\ else NLP=NLP+I 35\ NLP=NLP+OLP 36\ return: NDB=ODB+db, NWP and NLP 
65 
65 


IV PERFORMANCE STUDY In this section, we present a performance comparison of CIU algorithm and FP-growth algorithm The data sets that we used for our experiments are generated randomly. Figure 5 shows the results of test of run time. In our experiments, there are 50K transactions in primitive database. The run time shown in the figure is the incremental run time. Th e figure shows that the incremental run time can be reduced down by about one-half in the CIU algorithm, and the gap grows wider when the number of incremental transactions grows up Figure 5 Run time with incremental transactions V CONCLUSIONS In this paper, we have investigated the problem of continuous incremental updati ng in large databases. The contributions of this paper are summarized here: 1\ We have proposed an optimization technique for reducing the database size during the update process. 2\ We have give the definition and algorithm of transaction tree T-tree The order of items in every transaction in T-tree is different from that in FP-tree  3\ We have proposed a continuous incremental algorithm, or CIU algorithm for short. 4 have implemented the CIU algorithm, and studied its performance in comparison with FP-growth algorithm in large databases A CKNOWLEDGEMENT This research was supported by National Natural Science Foundation of China 70971004 REFERENCES 1 R  A g r a w a l  T   I m ie l i ns ki a n d A   S w am i  M i n i n g A s s o cia tio n Rul e s  between Sets of Items in Large Databases Proc. ACM-SIGMOD Intíl. Conf. Management of Data, Washington, USA, May 1993, pp 207-216 2 R  A g r a w a l an d R S r i k a n t  F as t A l g o r ithm s f o r  Mi ni ng A s s o cia tio n Rules Proc. Intíl. Conf. Very Large Databases, Santiago, Chile 1994, pp 487-499 3 S Br i n  R Mo tw an i, J  D  U l l m a n  an d S  T s ur   D y nam i c I t e m s e t  Counting and Implication Rules for Market Basket Analysis Proc ACM-SIGMOD Intíl. Conf. Management of Data, Tucson, USA 1997, pp 255-264 4 G Ch a n g  M. J  H e al ey J A   M McH u g h a n d J. T  L   W a ng  Mining the World Wide Web: An Information Search Approach Boston, USA: Kluwer Academin Publishers, 2001 5 D W  C h e u ng J. H a n, V  T  N g  an d C  Y  W o ng  Mai n te n a n c e o f  Discovered Association Rules in Large Databases: an Incremental Updating Technique Proc. Intíl. Conf. Data Engineering, New Orleans, USA, 1996, pp 106-114 6 U  F a y y ad, G   G   G r inste i n  a n d A  W i e r s e  I nf o r m a tio n V i s u al iz at io n  in Data Mining and Knowledge Discovery San Francisco, USA Morgan Kaufmann Publishers, 2001 7 U  F a y y ad, G  P i ate t s k y S h apir o  P  S m y t h a n d R  U t h u r u sam y  Advances in Knowledge Discovery and Data Mining. Cambridge USA MIT Press, 1996 8 U  F a y y ad an d R U t h u r u s a m y  P r o c  I n t l  Co nf K n o w le dg e Discovery and Data Mining. Montreal, Canada: AAAI Press, 1995 9 J H a n a n d Y  F u   D i sco v e r y o f M u l t i p l e l ev el A sso ciatio n R u l e s from Large Databases Proc. Intíl. Conf. Very Data Bases, Zurich Switzerland, 1995, pp 420-431 1 J   Han an d M   K a m b er  D at a M i n i n g  C o n c ept s a n d Tec h ni qu es   San Francisco, USA: Morgan Kaufmann Publishers, 2001 11 J  H a n  J  P e i, a n d Y  Y i n  2 0 00   Min ing F r e que nt P a t t e r ns w itho u t  Candidate Generation Proc. ACM-SIGMOD Intíl. Conf Management of Data, Dalllax, USA, 2000, pp 1-12 1 S  D L ee D W  C h eun g   an d B. K a o   I s S a m p li n g Us ef u l in D a ta  Mining? A Case in the Maintenance of Discovered Association Rules Data Mining and Knowledge Discovery, vol. 2, 1998, pp 225-262 1 J  S  P a r k M S   C h e n an d P   S  Yu  A n E f f e c t i v e Ha s h b a s ed Algorithm for Mining Association Rules Proc. ACM-SIGMOD Intíl Conf. Management of Data, San Jose, USA, 1995, pp 175-186 1 G  P i a t et sk y S h a p i r o, an d  W  J   F r a w le y  K n owl e d g e Di s c over y i n  Databases. Cambridge, USA: AAAI/MIT Press, 1991 15 A  S a v a se r e E. O m ie c i ns k i  an d S  N a v a t h e   A n Ef f i cie n t  Algorithm for Mining Association Rules in Large Databases Proc Intíl. Conf. Very Large Data Bases, Zurich, Swiitzerland, 1995, pp 432-443 16 H. T o i v o n e n   Sam p l i i n g L a rg e Dat a b a se s fo r A sso ci at i o n R u l e s Proc. Intíl. Conf. Very Large Data Bases, Bombay, India, 1996, pp 134-145 1  M Z a k i   Mi nin g Non R e du nd ant A s s o c i at i o n R u les   D a t a Mining and Knowledge Discovery vol. 9 2004 pp 223ñ248 19 G  L i an d H  J  H a m i l t o n   Bas i c  as s o cia tio n r u l e s   P r o c 4t h S I A M  Intíl Conf on Data Mining \(SDMí04 Orlando, 2004 2  B  L i u  K  Z h a o  B  Je ffre ye r a n d W  Xi a o   Ru le  I n t e re st i n gn e ss Analysis Using OLAP Operations Proc 12th ACM SIGKDD Intíl Conf on Knowledge Discovery and Data Mining KDDí06 Philadelphia, Pennsylvania, USA , August 20ñ23, 2006 pp 297-306 Number of incremental transactions Incremental run time\(sec  FP-growth CIU 
66 
66 


138 SOFA 2009  3 rd International Workshop on Soft Computing Applications   29 July Ö 1 August    Szeged \(Hungary\ad \(Romania ACMSIGMOD International Conference on Management of Data pages 175Ö186, San Jose, California, 22Ö25, 1995 15  Par k  J. S   C h e n  M  S  an d  Y u P S  A n ef f ect i v e  h a s h  based algorithm for mining association rules.é In M. J. Carey and D. A. Schneider, editors Proceedings of the 1995 ACMSIGMOD International Conference on Management of Data pages 175Ö186, San Jose, California, 22Ö25 1995 1 R a jk u m ar N  Kar t hik M  R and Sivanandam S.N., çFast Algorithm for Mining Multilevel Association Rules IEEE Web Technology and Data Mining 687-692,   TENCON 2003 1 S a ras e re A O m i ecinsky  E an d  N a v a the S An  efficient algorithm for mining association rules in large databases In Proc. 21st Internatio nal Conference on Very Large Databases \(VLDB Zurich, Switzerland, Also Gatech Technical Report No. GIT-CC-95-04, 1995 1 t rik a n t R  and Ag ra w a l R M i n in g  g e ne r a liz e d  association rules In Proc. 1995 Int. Conf. Very Large Data Bases VLDBê95\ Zurich, Switzerland, 1995 19 R S r ik ant and R Ag raw a l M inin g  s e quent ial  p a tt er ns   Generalizations and performance improvements.é Technical report, IBM Almaden Research Center, San Jose, California 1995 20  To i v onen H S a m pling la r g e dat a bas e s  f o r asso ciati o n  rules In The VLDB Journal pages 134Ö145, 1996 2  Th o m a s S    B o da g a l a  S   A l s a bt i K    an d Ra n k a S   A n  efficient algorithm for the incremental updation of association rules in large databases. In Knowledge Discovery and Data Mining pages 263Ö266, 1997                             


Figure 3 Precision-recall curve in ROI-250 image dataset 5.3 Experiment 3 Mammograms-1080 image dataset This experiment employed a dataset composed by 1080 mammograms images collected in the Clinical Hospital of University of Sao Paulo at Ribeiro Preto The dataset was previously classi\002ed into 4 levels of breast tissue density 0501\051 mostly fatty 050362 images\051 0502\051 partly fatty 050446 images\051 0503\051 partly dense 050200 images\051 and 0504\051 mostly dense 05072 images\051 Figure 4 Precision-recall curve in Mammography-1080 image dataset Breast density is an important risk factor in the development of breast cancer In this experiment the images are represented by the feature set proposed in b uilding a vector of 85 features including shape and size of the breast the conditions of the breast contour nipple position and the distribution of 002broglandular tissue This dataset was divided in training set and test set The training set is composed of 720 images and test set is composed of 360 images Figure 4 shows the P&R curves over test dataset and also the number of features selected in each method Again the proposed methods reached the highest values of precision and select the smallest number of features 050a\051 050b\051 050c\051 050d\051 Figure 5 Queries in Mammography dataset 050a\051 226 is the query image 050b\051 using the features selected through 002tness function F cB  050c\051 using the features selected through classi\002cation error of C4.5 and 050d\051 using the all features extracted Results for the retrieval of the 5 most similar images from a query image are also provided in this experiment as illustrated in Figure 5 The image 5.\050a\051 is the query image taken from the mostly fatty image class Images shown in 5.\050b\051 are the 5 most similar images retrieved for the proposed 002tness function F cB  The row 050c\051 shows the results for C 4  5 classi\002er whereas 050d\051 illustrate the images resulting from all features 050no selection applied\051 In Figure 5 the images surrounded by dashed lines are false positives 050not relevant images\051 For this query the proposed method achieved the highest precision 050100%\051 when compared the results of C4.5 and the original feature vector 050precision of 40%\051 


6 Conclusions This work proposed a novel genetic feature selection framework for CBIRs It employs a wrapper strategy that searches for the best reduced feature set while optimizing 050or preserving\051 the quality of the solution From a ranking evaluation function three new 002tness functions namely F cA  F cB and F c have been proposed and evaluated in three experiments The proposed genetic feature selection approach which encompasses F cA  F cB and F c  has been compared with 050a\051 traditional methods found in the literature 050b\051 the StARMiner feature selector and 050c\051 the whole feature vector and signi\002cantly outperformed them The proposed approach has been able to optimize the accuracy of similarity queries while selecting a signi\002catively reduced number of features Additionally the proposal of combining the quality of the query results with the criterion of minimizing the number of selected features F cA and F cB  led to high accurate query answers while reducing the number of features more than the 002tness function F c  Therefore the 002nal processing cost of the queries is also reduced References  P  M d Aze v edo-Marques N A Rosa A J M T raina C Traina-Jr S K Kinoshita and R M Rangayyan Reducing the semantic gap in content-based image retrieval in mammography with relevance feedback and inclusion of expert knowledge International Journal of Computer Assisted Radiology and Surgery  3\0501-2\051:123\226130 June 2008  R Baeza-Y ates and B Ribeiro-Neto Modern Information Retrieval  Addison-Wesley Essex UK 1999  B Bartell G Cottrell and R Bele w  Optimizing similar ity using multi-query relevance Journal of the American Society for Information Science  49:742\226761 1998  O Cord 264 on E Herrera-Viedma C L 264 opez-Puljalte M Luque and C Zarco A review on the application of evolutionary computation to information retrieval International Journal of Approximate Reasoning  34:241\226264 July 2003  J G Dy  C E Brodle y  A Kak L S Broderick and A M Aisen Unsupervised feature selection applied to content-based retrieval of lung images IEEE Transactions on Pattern Analysis and Machine Intelligence  25\0503\051:373\226 378 March 2003  W  F an E A F ox P  P athak and H W u The ef fects of 002tness functions on genetic programming-based ranking discovery for web search Journal of the American Society for Information Science and Technology  55\0507\051:628\226636 2004  W  F an P  P athak and M Zhou Genet ic-based approaches in ranking function discovery and optimization in information retrieval a framework Decision Support Systems  2009  D E Golber g Genetic algorithms in search optimization and machine learning  Addison Wesley 1989  R L Haupt and S E Haupt Practical Genetic Algorithms  John Wiley  Sons New Jersey United States second edition edition 2004  J Horng and C Y eh Applying genetic algorit hms to query optimization in document retrieval Information Processing  Management  36:737\226759 2000  S K Kinoshita P  M d Aze v edo-Ma rques R R PereiraJr J A H Rodrigues and R M Rangayyan Contentbased retrieval of mammograms using visual features related to breast density patterns Journal of Digital Imaging  20\0502\051:172\226190 June 2007  F  K orn B P agel and C F aloutsos On the  dimensionality curse and the self-similarity blessing IEEE Trans on Knowledge and Data Engineering  13\0501\051:96\226111 2001  H Liu and L Y u T o w ard inte grating feature select ion algorithms for classi\002cation and clustering IEEE Transactions on Knowledge and Data Enginnering  17\0504\051:491\226502 April 2005  M X Ribeiro A J M T raina C T raina-Jr  and P  M Azevedo-Marques An association rule-based method to support medical image diagnosis with ef\002ciency IEEE Transactions on Multimedia  10\0502\051:277\226285 2008  U S Cancer Statistics W orking Group United states cancer statistics 1999-2005 incidence and mortality webbased report atlanta 050ga\051 Department of health and human services centers for disease control and prevention and national cancer institute 2009 Available in http://apps.nccd.cdc.gov/uscs   L T amine C C and M Boughanem Multiple query evaluation based on an enhanced geneticnext term algorithm Information Processing  Management  39\0502\051:215\226 231 2003  R S T orres A X  F alc 230 ao M A Gonc\270alves J P Papa Z B W Fan and E A Fox A genetic programming framework for content-based image retrieval Journal of the American Society for Information Science and Technology  42\0502\051:283\226292 2009  A Tsymbal P  Cunningham M P echenizkiy  and S Puuronen Search strategies for ensemble feature selection in medical diagnostics In Proceedings of the 16th IEEE Symposium on Computer-Based Medical Systems  pages 124\226 129 June 2003  A Tsymbal M Pechenizkiy  and P  Cunningham Sequential genetic search for ensemble feature selection In Proceedings of the International Joint Conferences on Arti\002cial Intelligence  pages 877\226882 August 2005  C.-M W ang a and Y F  Huang Ev olutionary-based feature selection approaches with new criteria for data mining A case study of credit approval data Expert Systems with Applications  36\0503 Part 2\051:5900\2265908 2009  H Y an J Zheng Y  Jiang C Peng and S Xiao Selecting critical clinical features for heart diseases diagnosis with a real-coded genetic algorithm Applied Soft Computing  8:1105\2261111 2008  T  Zhao J Lu Y  Zhang and Q Xiao Feature selection based on genetic algorithm for cbir In IEEE Congress on Image and Signal Processing  volume 2 pages 495\226499 2008 


     Figure 9. Argumentation Tree For Open GL  A1 The current system in flash does not have the functionality of dynamic allocation of particles like mine or clutter. It places them randomly  A1.1 That is not of much importance because it still gives a new position to mine and clutter particles A2 Current system in flash has faster response time as compared to system in Adobe Director A3 The current system doesnêt satisfy many of the features required for the new system like database A4 Adobe Flash cannot communicate with database A4.1 Flash doesnêt support database but database support is very important and critical A4.1.1 The system should be able to generate evaluation reports for trainee based on pr evious records stored in the database A5 Flash doesnêt create sound clips  A5.1 We donêt need sound creating features as the sys tem has to generate sound. We can play externally recorded sound files using Adobe Flash A6 Flash can provide good visual effects as compared to Adobe Director A7 The developer has good knowledge in development using Flash so the system can be developed quickly B1 We could reuse the system already developed for sound generation, as it is developed using Adobe Audition for analysis which is somehow related to Adobe Director B1.1 The current system is better synthesized in terms of sound production and the sound produced is also instantaneous rather than discrete B1.2 That current system has certain performance issues like slow response time B1.3 The current system in Adobe Director has the feature of producing dynamic coloring scheme on approaching a mine. This kind of scheme is highly preferable and is not present in Adobe Flash system B2 Adobe Director can provide more functionality as compared to the current flash system. E.g. Multiple sounds while detecting mines   B2.1 Adobe Director can provide better visual effects as compared to flash e.g. in case of GUIês   B2.2 A modified version of the current system in flash can also provide the same functionality B2.2.1 We cannot integrate code developed in other platforms with Flash, but Flash can be integrated in Adobe Director B3 The interface provided by flash is not professional enough. It is too simple and straight forward for doing more things in future   B4 Easily available plug-ins can help integrate the tracking system developed in C# with Adobe Director  B4.1 Code developed in Open GL/AL can also be integrated using Adobe Director using suitable stubs   B5 A new sound recognition algorithm is being developed in Adobe Audition which can be integrated with Adobe Director but not with Open GL or Flash Evidence supported B6 If the current system is reused; the project deadline can be met easily B7 The developer has very little experience in development using Adobe Director   B7.1 The developer can take help from the already developed system in Adobe Director C1 The tracking software already developed is coded in C#/NX5. We could reuse that and develop our system in Open GL/AL C1.1 Open GL has C# libraries which can be used to develop the system C2 Because the platform used is for high end application development, it can provide good GUI and database support C2.1 Open GL/AL can help us generate dynamic surfaces for mine detection and training which the original system in flash does not have C4 Open GL does not support connectivity with Adobe Audition. Adobe Audition is required for creating sound recognition algorithm C3 Open GL does not support connectivity with Adobe Audition. Adobe Audition is required for creating sound recognition algorithm C4 The time taken for developing the project using open GL will be comparatively more as the whole system would have to be developed from scratch C4.1 If Open GL has support for C# libraries, and then the system could be develope d faster as developer is quite familiar with programming languages like C 151 


   C4.2 Open GL has excellent documentation that could help the developer learn the platform with ease C4.3 Developer has very little ex perience in working with Open GL platform  For our case study, alternative B i.e. Adobe Director was the most favorable alternative amongst all the three. It catered to the reusability criteria quite well and aimed at meeting most of the desired operational requirements for the system   6. CONCLUSION & FUTURE WORK  The main contribution of this paper is to develop an approach for evaluating performance scores in MultiCriteria decision making using an intelligent computational argumentation network. The evaluation process requires us to identify performance scores in multi criteria decision making which are not obtained objectively and quantify the same by providing a strong rationale. In this way, deeper analysis can be achieved in reducing the uncertainty problem involved in Multi Criteria decision paradigm. As a part of our future work we plan on conducting a large scale empirical analysis of the argumentation system to validate its effectiveness   REFERENCES  1  L  P Am g o u d  U sin g  A r g u men ts f o r mak i n g an d  ex p lain in g  decisions Artificial Intelligence 173 413-436, \(2009 2 A  Boch m a n   C ollectiv e A r g u men tatio n    Proceedings of the Workshop on Non-Monotonic Reasoning 2002 3 G  R Bu y u k o zk an  Ev alu a tio n o f sof tware d e v e lo p m en t  projects using a fuzzy multi-criteria decision approach Mathematics and Computers in Simualtion 77 464-475, \(2008 4 M T  Chen   F u zzy MCD M A p p r o ach t o Selec t Serv ice  Provider The IEEE International Conference on Fuzzy 2003 5 J. Con k li n  an d  M. Beg e m a n   gIBIS: A Hypertext Tool for Exploratory Policy Discussion Transactions on Office Information Systems 6\(4\: 303  331, \(1988 6 B P  Duarte D e v elo p in g a p r o jec ts ev alu a tio n sy ste m based on multiple attribute value theroy Computer Operations Research 33 1488-1504, \(2006 7 E G  Fo rm an  T h e  A n a l y t ic Hier a rch y P r o cess A n  Exposition OR CHRONICLE 1999 8 M. L ease  an d J L  L i v e l y  Using an Issue Based Hypertext System to Capture Software LifeCycle Process Hypermedia  2\(1\, pp. 34  45, \(1990 9  P e id e L i u   E valu a tio n Mo d e l o f Custo m e r Satis f a c tio n o f  B2CE Commerce Based on Combin ation of Linguistic Variables and Fuzzy Triangular Numbers Eight ACIS International Conference on Software Engin eering, Artificial Intelligence Networking and Parallel Distributed Computing, \(pp 450-454 2007  10  X  F L i u   M an ag e m en t o f an In tellig e n t A r g u m e n tatio n  Network for a Web-Based Collaborative Engineering Design Environment Proceedings of the 2007 IEEE International Symposium on Collaborative Technologies and Systems,\(CTS 2007\, Orlando, Florida May 21-25, 2007 11 X. F L i u   A n In ternet Ba se d In tellig e n t A r g u m e n tatio n  System for Collaborative Engineering Design Proceedings of the 2006 IEEE International Symposium on Collaborative Technologies and Systems pp. 318-325\. Las Vegas, Nevada 2006 12 T  M A sub jec tiv e assess m e n t o f altern ativ e m ission  architectures for the human exploration of Mars at NASA using multicriteria decision making Computer and Operations Research 1147-1164, \(June 2004 13 A  N Mo n ireh  F u zzy De cisio n Ma k i n g b a se d o n  Relationship Analysis between Criteria Annual Meeting of the North American Fuzzy Information Processing Society 2005 14 N  P a p a d ias HERMES Su p p o rti n g A r g u m e n tative  Discourse in Multi Agent Decision Making Proceedings of the 15th National Conference on Artifical Intelligence \(AAAI-98  pp. 827-832\dison, WI: AAAI/MIT Press,  \(1998a 15  E. B T riantaph y llo u   T h e Im p act o f  Ag g r e g atin g Ben e f i t  and Cost Criteria in Four MCDA Methods IEEE Transactions on Engineering Management, Vol 52, No 2 May 2005 16 S  H T s a u r T h e Ev alu a tio n o f airlin e se rv ice q u a lity b y  fuzzy MCDM Tourism Management 107-115, \(2002 1 T  D W a n g  Develo p in g a f u zz y  T O P S IS app r o ach  b a sed  on subjective weights and objective weights Expert Systems with Applications 8980-8985, \(2009 18 L  A  Zadeh  F u z z y Sets   Information and Control 8  338-353, \(1965  152 


                        





