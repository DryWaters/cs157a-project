Proceedings of the Ninth International Conference on Machine Learning and Cybernetics Qingdao, 11-14 July 2010 MINING BROWSING AND PURCHASING BEHAVIORS OF WEB USERS YUE-SHI LEE, SHOW-JANE YEN, CHIA-1llJI WANG Department of Computer Science and Information Engineering, Ming Chuan University, Taoyuan Taiwan E-1v1AIL: {leeys, sjyen, wangch}@mail. mcu.edu. tw Abstract Mining association rules is to discover associations among purchased items, which are valuable for cross-marketing catalog design, add-on sales, store layout and customer segmentation Mining web traversal patterns is to discover traversal sequences for most of the web users, which can provide navigation suggestions for web users. However association rules cannot describe navigation behaviors of web users, and web traversal patterns cannot describe purchasing behaviors of web users. To overcome these disadvantages, this paper proposes a method to simultaneously discover both navigation and purchasing behaviors of customers, such that the requirements of the web site managers can be satisfied Keywords: Web traversal pattern; Web transaction pattern Association rule 1. Introduction Today, web has turned to be the largest information source. Applications are ported to the web at rapid pace Web mining [2, 3, 4, 5, 6, 20, 21] refers to extracting useful information and knowledge from a large amount of web data, which applies data mining techniques [4, 12, 18] to improve the web services Mining web traversal patterns 20] is to discover most of users' access patterns from web logs These patterns can not only be used to improve the website design \(e.g. , provide efficient access between highly correlated objects, and better authoring design for web pages, etc decisions \(e g ,  putting advertisements in proper places better customer classification, and behavior analysis, etc As the electronic commerce \(Be more and more diverse, it is very critical to provide the right information to the right customers In EC environment how to find the association rules among purchased items is very important. If we provide this kind of information to the web site manager, the performance of cross-selling should 


be improved. However, the web site managers may also pay attention to the navigation behaviors of customers Association rule mining just purely considered the purchasing behaviors of customers. It cannot fully satisfy 978-1-4244-6527 -9/10/$26.00 201 0 IEEE the managers' requirements. Therefore, it is very important to simultaneously consider the navigation behaviors and purchasing behaviors of customers, that is, combine the web traversal patterns and association rules to provide more information for the web site managers. The combinations of web traversal patterns and association rules are called web transaction patterns. In the following, we describe the definitions about web traversal patterns and web transaction patterns Let W = {WI, W2, . . .  , wn} be a set of all web pages in a website. For a traversal sequence <WI,W2, . . .  ,WI>, if there is a link from Wi to Wi+1 \(for all i, 1 <:: i <:: 1-1 structure, then the traversal sequence is a qualified traversal sequence. A user purchasing sequence database D, as shown in Table 1, contains a set of records Table 1. User purchasing sequence database D TID Purchasing Sequence 1 DAF {3 }GB{2,5,7} C 2 DF {3,4 }GB{2,5}CKJ{ II 3 AE{9}GIC{ 1,6,8}H 4 AFE{9,1O} IC{ 1,6,8} KJ 5 F {4 }GIC{ 6,8}KJ{lI 6 AE{9, 12}GIC{ 1,6,8}KH 7 DF{3,4}GB{5,7}CK Each record includes traversal identifier \(TID user purchasing sequence. A user purchasing sequence is a traversal sequence including purchased items. For example in Table 1, the purchasing sequence for TID 1 is <DAF {3 GB{2,5,7}C>, which means that the user purchases item 3 on web page F and purchases items 2, 5 and 7 on web page B. <DAFGBC> is a complete traversal behavior for a user which is called a user sequence A traversal sequence S = <WI, W2, . . .  , wp> \(Wi E W, 1 i <:: p time, and the web page can repeatedly appear in this sequence, that is, backward references are also included in a traversal sequence. For example, if there is a user which 


visits web page B, and then visits pages G and A 2647 Proceedings of the Ninth International Conference on Machine Learning and Cybernetics Qingdao, 11-14 July 2010 sequentially, and comes back to web page B, and then visits web page C. The sequence <BGABC> is a traversal sequence. The support for a traversal sequence a is the ratio of the number of user sequences which contain a to the total number of user sequences in D. It is usually denoted as Support \(a sequences which contain a The support for a purchasing sequence fl is the ratio of user purchasing sequences which contain fl to the total number of user purchasing sequences in D. It is also usually denoted as Support \(fl count of fl is the number of user purchasing sequences which contain fl . A traversal sequence a is a web traversal pattern if a is a qualified traversal sequence and Support Ca 2 min_sup, in which the min_sup is the user specified minimum support threshold. For instance, in Table 1, if we set min_sup to 40%, then Support CK = 517 = 71.43 2 min_sup = 40%, and there is a link from web page C to web page K in the web site structure shown in Figure 1 Therefore, <CK> is a web traversal pattern Figure 1. Web site structure A purchasing sequence is a traversal sequence with purchasing behaviors. Let I = {ii, i2, ... , im} be a set of all items. A purchasing sequence is denoted as <wdid w2{i2}, ... wq{iq}>, in which Wi E W \(1 ? i ? q 1 ? j q no purchased item in a web page, the purchased item need not to be attached with the web page. For example, if there is a user which visits web page B, and then visits web page G on which items 1, 2 and 3 are purchased, and then visits web page A sequentially. And then the user comes back to web page B, and then visits web page C on which items 4 and 5 are purchased. The sequence <BG{I,2,3}ABC{4,5 is a purchasing sequence. A purchasing sequence a is a qualified traversal sequence and contains at least one of the web pages with purchasing behavior. A purchasing sequence a is a web transaction pattern if Support Ca min_sup, in which the min_sup is the user specified minimum support threshold. For instance, in Table 1, if we 


set min_sup to 40%, then Support C<C{6,8}K = 317 42.86% 2 min_sup = 40%. Since there is a link from "C" to K" in the web site structure shown in Figure 1 C{ 6,8} K> is a web transaction pattern In this paper, we propose a method to simultaneously discover both the web traversal patterns and the web transaction patterns. The rest of the paper is organized as follows. Section 2 introduces the most recent researches related to this work. Section 3 describes our web traversal pattern and web transaction pattern mining algorithm Finally, we conclude our work in Section 4 2. Related work Path traversal pattern mining [2, 3, 14, 21, 22] is to find navigation behaviors for most of the users in the web environment. The web site designers can use this information to improve the web site design [7, 15, 16], and to increase the web site performance. Besides, this information can also provide the navigation suggestions to customers. Many researches focused on this field, e.g., FS Full Scan Selective Scan  MAFTP \(Maintenance of Frequent Traversal Patterns algorithm [21], and other algorithms [3, 14, 17 Nevertheless, these algorithms have the limitations that they can only discover the simple path traversal pattern which there is no repeated page in the pattern, that is, there is no backward reference in the pattern and the support for the pattern is no less than the minimum support threshold These algorithms just consider the forward references in the traversal sequence database. Therefore, the simple path traversal patterns discovered by the above algorithms are not fit in the real web environment Non-simple path traversal pattern, i.e., web traversal pattern, contains not only forward references but also backward references. This information can present user navigation behaviors completely and correctly. The related researches are MFTP \(Mining Frequent Traversal Patterns algorithm [20] and FS-Miner algorithm [6]. MFTP algorithm can discover web traversal patterns from traversal sequence database. This algorithm considers not only forward references, but also backward references. FS-Miner algorithm can discover web traversal patterns from the traversal sequence database, which scans database twice to 


build a FS-tree \(frequent sequences tree structure discovers web traversal patterns from the FS-tree. However the FS-tree may be too large to fit into memory. Besides FS-Miner finds the consecutive reference sequences traversed by a sufficient num ber of users, that is, they just consider the consecutive reference sub-sequences of the user sequences. However, there may be some noises which exist in a user sequence, that is, some pages in a user sequence may be not the pages that the user really wants to 2648 Proceedings of the Ninth International Conference on Machine Learning and Cybernetics Qingdao, 11-14 July 2010 visit. If all sub-sequences for a user sequence are considered, then FS-Miner cannot work. Therefore, some important web traversal patterns may be lost for FS-Miner algorithm Association rule mining [1, 8, 9, 13] is to find the associations between purchased items in EC environment Apriori algorithm [1] is the first algorithm to address the problem for finding association rules. Apriori algorithm utilizes length k-frequent item sets to generate length k+ I to find the length \(k+ I generates a large number of candidate item sets \(if there are 1,000 frequent item sets with length 1, then there are 1,000x99912=499,500 candidate item sets with length 2 generated database \(if there is a frequent itemset with length 20, then the entire database will be scanned at least 20 times Therefore, the algorithm DHP \(Direct Hashing and Pruning 13] was proposed to address the problems happened in Apriori. DHP algorithm utilizes a hash table to reduce the number of candidate itemsets with length 2 and a trimming database strategy to avoid scanning entire database Although the DHP algorithm can reduce a lot of candidate itemsets with length 2, it still generats too many candidate itemsets and takes a lot of time for scanning database The algorithm FP-Growth \(Frequent Pattern-Growth algorithm [8] is then proposed by Han to avoid candidate generation by compressing the transaction database into an FP-tree and pursuing partition-based mining recursively However, if the database is huge and sparse, the FP-tree 


will be large and the space requirement for recursion is a challenge. For this reason, the algorithm H-mine Hyper-Structure Mining  algorithm also avoids candidate generation by compressing the transaction database into a H-struct and pursuing partition-based mining recursively. H-mine absorbs the nice features of FP-Growth. It is essentially a frequent-pattern growth approach since it applies divide-and-conquer methodology without generating candidate patterns However, unlike FP-Growth, H-mine does not create any physical projected databases nor construct conditional local only. Instead, it watches carefully the changes of data characteristics during mining and dynamically switches its data structure from H-stmct to FP-tree when the data set becomes dense and the number of frequent items becomes small However, the web site managers consider not only the pure navigation behaviors but also the purchasing behaviors of customers. However, path traversal pattern mining just purely considers navigation behaviors of customers. It also cannot fully satisfy the managers' requirements. To overcome the disadvantages of the pure association rules mining and pure path traversal pattern mining, MTS algorithm [22] was proposed and it takes both the traveling and purchasing behaviors of customers into consideration at the same time. We use an example to explain their method Figure 2 is an example of web transaction of a customer V.reb-Tnmsactioll lreb Pag Items A B 1 c D c E 3.4 C 2 B F G H 6 A 


S 7,8 J L 9 S I Figure 2. Web transaction of a user It shows that the customer traverses fiom web page A to web page B on which item 1 is purchased. Next, the customer visits web page C, and then visits web page D Thereafter, the customer backs to web page C and then visits web page E on which items 3 and 4 are purchased Finally, the customer goes back to web page C and buys item 2 at that time MTS algorithm firstly cuts each web transaction into several web transaction records. Then, MTS algorithm is used to discover the web transaction patterns based on these web transaction records. For MTS algorithm, a web transaction record is generated when the customer has the backward behavior. Besides, if the last web page of a web transaction record does not purchase any items, the web transaction record cannot be generated. According to Figure 2, three web transaction records are generated shown in Table 2 Table 2 Web transaction records Path Purchases ABCE B{I}, C{2}, E{4}, E{3 ABFGH B{I}, H{6 ASJL S{7}, S{8}, L{9 2649 Proceedings of the Ninth International Conference on Machine Learning and Cybernetics Qingdao, 11-14 July 2010 Because the customer do not purchase any items on web pages D and I, the web transaction records <ABCD> and ASI> cannot be generated The reason for cutting each web transaction into web transaction records is that the backward movement is not meaningful and the complexity of the algorithm can be reduced. However, this assumption is not always true in all situations. In Figure 2, it is easy to see that the customer visits web page E and purchases items 3 and 4, and then back to web page C and purchases item 2. However, the web transaction records in Table 2 show that the customer 


buys the item 2 at web page C and then buys items 3 and 4 on web page E. Therefore, the order of traversing and purchasing is not correct after cutting the web transaction Therefore, MTS algorithm cannot generate the correct results based on these web transaction records T herefore, IPA \(Integrating Web traversal patterns and Association rules  web transaction patterns without dividing any web transactions. But IPA algorithm assumes that the customer can only buy one item on a web page. It does not fit the real situation in an electronic environment. In this paper, we propose a method to overcome this problem. Our approach takes both the traveling and purchasing behaviors of customers into consideration at the same time, and considers not only user forward traversal information but also backward information. Besides, web structure is also used in our approach to pnme the unnecessary candidates Especially, we allow the noise to exist in web transactions 3. Web transaction patterns mining Our proposed algorithm is mainly based on conditional framework and the website structure to mine the web traversal patterns and web transaction patterns during the mining process. A purchasing page represents not only browsing behavior but also purchasing behavior on that page. For a user purchasing sequence <AB{2,5,7}C>, web page B is a purchasing page, since the items 2, 5 and 7 are purchased on this page. To avoid losing some important information and to reduce the number of conditional databases, we transform the original user purchasing sequence database into another form: We add the purchasing page in front of each purchased item on this page. For example, the user purchasing sequence AB{2,5,7}C> will be transformed as A[BB{2}B{5}B{7} ]C>, in which A, B, B[2], etc. are regarded as web pages In the mining process, we firstly list all candidate I-traversal sequences and then scan the database to count the support for each candidate sequence. T herefore, I-web traversal patterns will be generated and then we construct the conditional database for each I-web traversal pattern For each purchasing sequence in a conditional database, we count the support for the next web page of the I-web 


traversal pattern if there is a link from the page in the I-web traversal pattern to the next web page on the website structure. If the next page satisfies minimum support, then the I-web traversal pattern is joined with the next web page to generate 2-web traversal patterns and 2-web transaction patterns. For k-web traversal and transaction patterns \(kz2 we also use the same way to generate \(k+1 and transaction patterns until no new patterns are generated We use the following example to clearly explain the whole mIlling process We use a simple user purchasing database shown in Table 3 and a simple website structure shown in Figure 3 to describe how to find the web traversal patterns and tweb ransaction patterns Table 3. A simple use purchasing sequence database TID User purchasing sequence 1 AB{2,5,7}C 2 B{5,7}CA 3 CAD Figure 3. A simple web site structure Table 4 Transformed database TID User purchasing sequence 1 A[BB{2}B{5}B{7} ]C 2 [BB{5}B{7} ]CA 3 CA D Before mining, we transform Table 3 into Table 4 for each user purchasing sequence First, we list all the candidate I-traversal sequences A>, <B>, <C> and <D>. After scanning database and calculating the support counts of these candidates, the I-web traversal patterns <A>, <B> and <C> are generated For each I-web traversal pattern, we construct a conditional database for each of them, which is shown in Table 5 2650 Proceedings of the Ninth International Conference on Machine Learning and Cybernetics Qingdao, 11-14 July 2010 Table S. Conditional databases for the 1 b t l -we raversa. patterns Prefix Purchasing sequence A [BB{2}B{ S}B{7} JC D B [_B{2}B{S}B{7} JC r B{S}B{7}lCA C A A 


For example, the conditional database of <B> includes two purchasing sequences <[_B{2}B{S}B{7}]C> and <[ B S}B{7}]CA>. Since the next web pages of <B> are "C _B{2}" , "_B{S} " and "_B{7} " and there is a direct link from "B" to "C " in the website structure, we calculate the support counts for the next web pages of <B> in the conditional database of <B>, in which web pages "C _B{S}" and "_B{7}" satisfy the minimum support threshold. Therefore, <BC>, <BB{S}> and <BB{7}> are the generated 2-web traversal or transaction patterns. We construct the conditional databases for them as shown in Table 6 Table 6. Conditional databases for 2-web traversal patterns and 2-web transaction patterns Prefix Purchasing sequence BC A BB{S} [_B{7}JC [ B{7}JCA BB{7} C CA For conditional database of <BC>, since the next page of <BC> is page A and there is a direct link from "C" to A " in the website structure. After scanning the conditional database of <BC>, we calculate the support count of <A in the conditional database of <BC>. Due to <A> is not satisfies the minimum support in the conditional database of <BC>, the traversal sequence <BCA> is not a 3-web traversal sequence. For the conditional database of BB{ S}>, we also calculate the support counts of the next pages "C " and "_B{7} " of page BB{S} and generate 3-web transaction patterns <BB{S}C> and <BB{S}B{7}>. The conditional databases for <BB{S}C> and <BB{S}B{7 are shown in Table 7 For the conditional database of <BB{S}B{7}>, the next web page of <BB{S}B{7}> is page C and there is a direct link from "B" to "C " in the website structure. After scanning conditional database of <BB{S}B{7}>, the 4-web transaction pattern <BB{ S} B{7}C> can be generated and the conditional database for it is shown in Table 8 However there is no next page satisfies the minimum sup?ort in the  conditional database, the mining algorithm terminates Table 7. Conditional databases for h 3 b t e -we transacilon patterns 


Prefix Purchasing sequence BB{S}C A BB{S}B{7} C CA Table 8. Conditional databases for <BB S B 7 C Prefix Purchasing sequence BB{S}B{7}C A 4. Conclusions In this paper, we propose an algorithm for mining web traversal patterns and web transaction patterns simultaneously in the Electronic Commerce environment The proposed algorithm takes both the traveling and purchasing behaviors of customers into consideration, and considers not only forward information but also backward information Acknowledgements Research on this paper was partially supported by National Science Council grant NSC 98-2221-E-130-0l9 NSC 98-2221-E-130-022 and NSC 98-2221-E-130-006 References I J R. Agrawal, et a1. "Fast Algorithm for Mining Association Rules," Proceedings of International Conference on Very Large Data Bases, pp. 487-499 1994 2J M. S. Chen, J. S. Park and P. S. Yu. "Efficient Data Mining for Path Traversal Patterns in a Web Environment, " IEEE Transaction on Knowledge and Data Engineering, Vol. 10, No. 2, pp. 209-221, 1998 3] M. S. Chen, X. M. Huang and I. Y. Lin. "Capturing User Access Patterns in the Web for Data Mining Proceedings of IEEE International Conference on Tools with Artificial Intelligence, pp. 34S-348, 1999 4J S. Y. Chen and X. Liu. "Data Mining from 1994 to 2004: an Application-Orientated Review International Journal of Business Intelligenc e and Data Mining, Vol. 1, Issue 1, pp. 4-21, 200S 2651 Proceedings of the Ninth International Conference on Machine Learning and Cybernetics Qingdao, 11-14 July 2010 S] R. Cooley, B. Mobasher and J. Srivastava. "Web Mining: Information and Pattern Discovery on the World Wide Web," Proceedings of IEEE International Conference on Tools with Artificial Intelligence, pp 


SS8?S67, 1997 6] M. EL-Sayed, C. Ruiz and E. A. Rundensteiner FS-Miner: Efficient and Incremental Mining of Frequent Sequence Patterns in Web Logs Proceedings of 6th ACM International Workshop on Web Information and Data Management, pp.128-13S 2004 7] 1. Hamburg, M. Hersh, M. Gavota and M. Lazea Open Web-Based Learning Environments and Knowledge Forums to Support People with Special Needs," International Journal of Interactive Technology and Smart Education, Vol. 1, Issue 3, pp 20S-216,200S 8] J. Han, J. Pei, Y. Yin and R. Mao. "Mining Frequent Patterns without Candidate Generation: A Frequent Pattern Tree Approach," Data Mining and Knowledge Discovery, Vol. 8, No. 1, pp. S3-87, 2004 9] J. Han, J. Pei, H. Lu, S. Nishio, S. Tang and D. Yang H-Mine: Hyper-Structure Mining of Frequent Patterns in Large Databases," Proceedings of IEEE International Conference on Data Mining, pp. 441-448 2001 10] Y. S. Lee, S. J. Yen, G. H. Tu and M. C. Hsieh, "Web Usage Mining: Integrating Path Traversal Patterns and Association Rules," Proceedings of International Conference on Informatics, Cybernetics and Systems pp. 1464-1469, 2003 11] Y. S. Lee, S. J. Yen, G. H. Tu and M. C. Hsieh Mining Traveling and Purchasing Behaviors of Customers in Electronic Commerce Environment Proceedings of IEEE International Conference on e-Technology, e-Commerce and e-Service, pp 227-230,2004 12] S. C. Ngan, T. Lam, R. C. W. Wong and A. W. C. Fu Mining N-most Interesting Itemsets without Support Threshold by the COFI-Tree," International Journal of Business Intelligence and Data Mining, Vol. 1, Issue 1 pp. 88-106, 200S 13] J. S. Park, M. S. Chen and P. S. Yu. "Using a Hash-Based Method with Transaction Trimming for Mining Association Rules," IEEE Transaction on Knowledge and Data Engineering, Vol. 9, No. S, pp 


813-82S, 1997 14] J. Pei, J. Han, B. Mortazavi-Asl and H. Zhu, "Mining Access Patterns Efficiently from Web Logs Proceedings of Pacific-Asia Conference on Knowledge Discovery and Data Mining, pp. 396-407 2000 IS] K. Sato, A. Ohtaguro, M. Nakashima and T. Ito, "The Effect of a Website Directory When Employed in Browsing the Results of a Search Engine International Journal on Web Information System, Vol 1, Issue 1, pp. 43-S1, 200S 16] J. Velasquez, S. Rios, A. Bassi, H. Yasuda and T Aoki, "Towards the Identification of Keywords in the Web Site Text Content: A Methodological Approach International Journal on Web Information System, Vol 1, Issue 1, pp. S3-S7, 200S 17] Y. Xiao and M. H. Dunham, "Efficient Mining of Traversal Patterns," IEEE Transaction on Data and Knowledge Engineering, Vol. 39, No. 2, pp. 191-214 2001 18] Y. Xiao, J. F. Yao and G. Yang, "Discovering Frequent Embedded Subtree Patterns from Large Databases of Unordered Labeled Trees," International Journal of Data Warehousing and Mining, Vol. 1 Issue 2, pp.70-92, 200S 19] S. J. Yen. "An Efficient Approach for Analyzing User Behaviors in a Web-Based Training Environment International Journal of Distance Education Technologies, Vol. 1, No. 4, pp.SS-71, 2003 20] S. J. Yen, "An Efficient Approach for Analyzing User Behaviors in a Web-Based Training Environment International Journal of Distance Education Technologies, Vol. 1, No. 4, pp.SS-71, 2003 21] S. J. Yen and Y.S. Lee, "An Incremental Data Mining Algorithm for Discovering Web Access Patterns International Journal of Business Intelligence and Data Mining, Vol. 1, No. 3, pp. 288-303, 2006 22] C. H. Yun and M. S. Chen, "Using Pattern-Join and Purchase-Combination for Mining Web Transaction Patterns in an Electronic Commerce Environment Proceedings of 24th International Computer Software and Applications Conference, pp. 99-104,2000 


2652 


dataset contains a stream of TCP connection records from two weeks of LAN traffic over MIT Lincoln Labs. It consists of 42 attributes that usually characterize network traffic behavior, both categorical attributes and quantitative attributes such as duration of the connections, protocol type etc. Attribute src_byte denoting the number of data bytes from source to destination and attribute dst_bytes inverse are selected in this experiment.  They are both quantitative attributes The user specified parameters are set as follows 5, 0.3, 0.03, 0.01,W min_sup preMinsup T 0.5, 0.4, 30.min_confidence max_MFB min_num_triples And the number of transactions in each time slot is 250 It is assumed that there are no more than three fuzzy sets or intervals in the datasets i.e. 3F Four different approaches to mine association rules are compared using the following notations: Fuzzy+MFB: the approach that use both fuzzy method and MFB_measure with 1 3.0? = and 2 0 .5 2 0.5? = , Fuzzy+P: the approach using fuzzy method with 1 3.0? = and 2 0.5? = also but repressing the first part of the MFB_measure that ignores the changed rate of the membership function, Discrete1: the approach using discrete method with 1 2 1.5? ?= =  and Discrete2 : the approach using discrete method with 1 2 2.5 TABLE I. RESULT OF EXPERIMENT ONE NUM_C NUM_FI NUM_RULE TIME\(s 1 \(50,50 2 \(60,60 3 \(70,70 4 \(80,80 5 \(90,90 6 \(100,100 7 \(110,110 8 \(120,120 9 \(130,130 10 \(140,140 Volume 4] 2010 2nd International Conference on Computer Engineering and Technology V4-157 0 0.5 1 1.5 2 x 104 


0 200 400 600 800 1000 1200 1400 Size of Databases\(250 Ex ec u tio n Ti m e\(s ec  Fuzzy+MFB Discrete1 Discrete2 Fuzzy+P Figure 3. Comparison of Execution Time Fig. 3 shows the execution time of the four approaches The runtimes of them grow linearly as the data stream grows which confirms that they are scalable with respect to the size of data stream, and it is mainly because of the usage of sliding window model. Fuzzy+P uses the least time Fuzzy+MFB has similar execution time to Discrete2, and Discrete1 has the most execution time. The difference of runtimes between them is mainly influenced by the clustering operations they use. The more clustering operations were executed, the more runtime it was Fig. 4 and Fig. 5 show the number of frequent itemsets and interesting rules found with the data stream increased Fuzzy+P and Fuzzy+MFB used less clustering operations than Discrete1 and Discrete2. Fuzzy+MFB nearly finds the most number of frequent fuzzy sets and interesting rules with the second least of clustering operations. Sometimes Discrete2 returns nearly the same number of fuzzy sets and interesting rules but with more clustering operations and the 


semantics of Discrete2 are meaningless as discussed in experiment one. Furthermore, the number of interesting rules found by Discrete1 is even less than Fuzzy+P that used the clustering operations least which illustrates the superiority of the method using fuzzy sets V. CONCLUSIONS In this paper, a novel fuzzy ARM algorithm called FFI_Stream is presented to tackle quantitative attributes in data streams and some techniques are proposed in the algorithm. Both synthetic and real datasets are used to evaluate the performance of the proposed algorithm. The experimental results show both the effectiveness and efficiency of the proposed algorithm.  In comparison with the discrete method, the proposed algorithm using fuzzy sets and MFB_measure gets a trade-off between the number of interesting rules and efficiency ACKNOWLEDGMENT This work is supported by The National High Technology Research and Development Program of China 863 Program 2008AA042902 Technology Research and Development Program of China 863 Program 2009AA04Z162 Project \(B07031 0 500 1000 1500 2000 2500 3000 3500 4000 0 2000 4000 6000 8000 10000 12000 Size of Databases\(250 N um be r o f F re qu e n t I 


te m se ts Fuzzy+MFB Discrete2 Discrete1 Fuzzy+P Clustering Operation Figure 4. Number of Frequent Itemsets 0 500 1000 1500 2000 2500 3000 3500 4000 0 1000 2000 3000 4000 5000 6000 7000 8000 Size of Databases\(250 Nu m be r o f I n te re st in g Ru le s Fuzzy+MFB Discrete2 Discrete1 Fuzzy+P Clustering Operation Figure 5. Number of Interesting Rules REFERENCE 1] R. Srikant and R. Agrawal, Mining Quantitative Association Rules 


in Large Relational Talbes, Proc. ACM SIGMOD, 1996, pp. 1-12 2] A.W. Fu et al. Finding Fuzzy Sets for the Mining of Fuzzy Association Rules for Numerical Attributes, In Proceedings of the First International Symposium on Intelligent Data Engineering and Learning \(IDEAL'98 3] C. M. Kuok, A. Fu and M. H . Wong, Fuzzy Association Rules in Large Databases with Quantitative Attributes, In ACM SIGMOD Records, vol. 27, 1998, pp. 41-46 4] X. Dang, V. Lee, W. K. Ng and K.L Ong, Incremental and Adaptive Clustering Stream Data over Sliding Window, Database and Expert Systems Applications, vol. 5690, 2009, pp. 660-674 5] M. Kaya,?R. Alhajj, F. Polat, and A. Arslan, Efficient Automated Mining of Fuzzy Association Rules, Database and Expert System Applicaton, vol. 2453, 2002, pp.133-142 6] http://kdd.ics.uci.edu/databases/kddcup99/kddcup99.html 7] S. Guha, A. N. Mishra, R. Motwani, L. OCallaghan, Clustering Data Streams: Theory and Practice,  Proc. IEEE Transactions on Knowledge and Data Engineering, vol. 15, May/Jun. 2003, pp. 515528 8] C. Aggarwal, J. Han, J. Wang, P. Yu, A Framework for Clustering Evolving Data Streams,  Proc. VLDB Conference, 2003,  pp. 81-92 9] C. K. S. Leung, B. Y. Hao, Mining of Frequent Itemsets from Streams of Uncertain Data,  Proc. IEEE International Conference on Data Engineering \(ICDE 09 10] C. C. Aggarwal, Y. Li, J. Y. Wang, and J. Wang, Frequent Pattern Mining with Uncertain Data, Proc. ACM SIGKDD International Conference on Knowledge Discovery and Data Mining, Jun. 2009, pp 29-37 11] P. M. Tsai, Mining Frequent Itemsets in Data Streams using the Weighted Sliding Window Model, Expert Systems and Applications vol. 36, Nov. 2009, pp.11617-11625 V4-158 2010 2nd International Conference on Computer Engineering and Technology [Volume 4 


In all charts reported in this section, the X-axis is k, which denotes the size of sample under the space of a target rule drawn from deep web. The sample size for each point on X-axis is k x, where x is a ?xed value for our experiment, and depends upon the dataset. At each time, queries are issued to obtain kx data records under the space of a target rule. Overall, all our experiments show the variance of estimation, sampling costs and sampling accuracy with varying sample size Figure 1 shows the result from our strati?ed sample methods on the US census data set. The size of pilot sample is 2000, from which all of the 50 initial rules are derived. In this experiment the ?xed value x is set to be 300, which means the smallest sample size at k = 1 is 300, and the largest sample size at k 10 is 3000. Figure 1 a the ?ve sampling procedures. Figure 1 b cost for the sampling procedures. In order to better illustrate the experiment result, in each execution of sampling, the variance of 330 6DPSOLQJ9DULDQFH            9D UL DQ FH R I V WL PD WL RQ  


9DU 9DU 9DU 5DQG a timation 6DPSOLQJ&RVW           6D PS OL QJ  RV W 9DU 9DU 9DU 5DQG b 6DPSOLQJ$FFXUDF            5 


 9DU 9DU 9DU 5DQG c Fig. 1. Evaluation of Sampling Methods for Association Rule Mining on US Census Dataset estimation and sampling cost for the sampling procedures var7 var5, var3, and rand are normalized by the corresponding values of Full Var. Thus, in our experiment, the values of sampling cost and variance of estimation for sampling procedure Full Var are all 1. Furthermore, Figure 1 c sampling procedures From Figure 1 a pared with sampling procedures Var7, Var5 and Var3, Full Var has the lowest estimation variance and the highest sampling cost. From sampling procedures Var7, Var5, and Var3, we can see a pattern that the variance of estimation increases, and the sampling cost decreases consistently with the decrease of the weight for variance of estimation. At the largest sample size of k = 10, the estimation variance of sampling procedure Var3 is increased by 27% and the sampling cost is decreased by 40 compared with sampling procedure Full Var. The experiment shows that our method decreases the sampling cost ef?ciently by trading off a percent of variance of estimation. Similar to variance of estimation, the sampling accuracy of these procedures also decreases with the decrease of the weight on variance of estimation. For the largest sample size at k = 10, we can see that the AER of sampling procedure Var3 is increased by 20 compared with sampling procedure Full Var. However, for many users, increase of the AER will be acceptable, since the sampling cost is decreased by 40%. By setting the weights for sampling variance and sampling cost, users would be able to control the trade-off between the variance of estimation, sampling cost, and estimation accuracy In addition, compared with sampling procedure of Full Var Var7, Var5, and Var3, sampling procedure Random, has higher estimation of variance, sampling cost and lower estimation accuracy. Thus, our approach clearly results in more effective methods than using simple random sampling for data mining on the deep web Figure 2 shows the experiment result of our proposed strati?ed 


sampling methods on the Yahoo! data set. The size of pilot sample on this data set is 2,000, and the ?xed value x for sample size is 200. The results are similar to those from the US census dataset. We can still see the pattern of the variance of estimation increasing with the decrease of its weight. Besides, the sampling accuracy is also similar to the variance of estimation. However although the variance estimation of sampling procedure Random is 60% larger than sampling procedure Full Var, the sampling cost of Random is 2% smaller than Full Var. This is because Full Var does not consider sampling cost. It is possible that Full Var assigns a large sample to a stratum with low ?, which denotes the probability of containing data records under the space of A = a, resulting the larger sampling cost than that of simple random sampling. Sampling procedures Var7, Var5, Var3 consider sampling cost as well, and have smaller variance estimation and sampling cost, compared with Random. Furthermore, Random has smaller sampling accuracy than Full Var, Var7 and Var5, but has larger sampling accuracy than Var3. This is because Var3 assigns much more importance to the sampling cost, and loses accuracy to a large extent To summarize, our results shows that our proposed strati?ed sampling are clearly more effective than simple random sampling on the deep web. Moreover, our approach allows users to tradeoff variance of estimation and sampling accuracy to some extent while achieving a large reduction in sampling costs B. Differential Rule Mining In this section, we present results from experiments based on differential rule mining. Particularly, we look at the rules of the form A = a ? D1\(t t categorical attribute and t is an output numerical attribute, while other categorical attributes in the data set are considered as input attributes In this experiment, we also evaluate our proposed method with different weights assigned to variance of estimation and sampling cost. Five sampling procedures, Full Var, Var7, Var5,Var3 and Random, have same meanings with those in the experiments of association rule mining. Similarly, 50 rules are randomly selected from the datasets, and each of the 50 differential rules are reprocessed 100 times using 100 different \(pilot sample, sample iterations 5000 runs First, we evaluated the performance of these procedures on 


the US census data set. The size of pilot sample is 2000, and all 50 rules are derived from this pilot sample. In this experiment the ?xed value x for the sample size is set to be 300. The attribute income is considered as a differential attribute, and the difference of income of husband and wife is studied in this experiment. Figure 3 shows the performance of the 5 sampling 331 6DPSOLQJ9DULDQFH             9D UL DQ FH R I V WL PD WL RQ  9DU 9DU 9DU 5DQG a timation 6DPSOLQJ&RVW    


      6D PS OL QJ  RV W 9DU 9DU 9DU 5DQG b 6DPSOLQJ$FFXUDF          5  9DU 9DU 9DU 5DQG c Fig. 2. Evaluation of Sampling Methods for Association Rule Mining on the Yahoo! Dataset procedures on the problem of differential rule mining on the US census data set. The results are also similar to the experiment results for association rule mining: there is a consistent trade off between the estimation variance and sampling cost by setting their weights. Our proposed methods have better performance than simple random sampling method 


We also evaluated the performance of our methods on the Yahoo! dataset. The size of pilot sampling is 2000, and the xed value x for the sample size is 200. The attribute price is considered as the target attribute. Figure 4 shows the performance of the 5 sampling procedures on the problem of differential rule mining on the Yahoo! dataset. The results are very similar to those from the previous experiments VI. RELATED WORK We now compare our work with the existing work on sampling for association rule mining, sampling for database aggregation queries, and sampling for the deep web Sampling for Association Rule Mining: Sampling for frequent itemset mining and association rule mining has been studied by several researchers [23], [21], [11], [6]. Toivonen [23] proposed a random sampling method to identify the association rules which are then further veri?ed on the entire database. Progressive sampling [21], which is based on equivalence classes, involves determining the required sample size for association rule mining FAST [11], a two-phase sampling algorithm, has been proposed to select representative transactions, with the goal of reducing computation cost in association rule mining.A randomized counting algorithm [6] has been developed based on the Markov chain Monte Carlo method for counting the number of frequent itemsets Our work is different from these sampling methods, since we consider the problem of association rule mining on the deep web. Because the data records are hidden under limited query interfaces in these systems, sampling involves very distinct challenges Sampling for Aggregation Queries: Sampling algorithms have also been studied in the context of aggregation queries on large data bases [18], [1], [19], [25]. Approximate Pre-Aggregation APA  categorical data utilizing precomputed statistics about the dataset Wu et al. [25] proposed a Bayesian method for guessing the extreme values in a dataset based on the learned query shape pattern and characteristics from previous workloads More closely to our work, Afrati et al. [1] proposed an adaptive sampling algorithm for answering aggregation queries on hierarchical structures. They focused on adaptively adjusting the sample size assigned to each group based on the estimation error in each group. Joshi et al.[19] considered the problem of 


estimating the result of an aggregate query with a very low selectivity. A principled Bayesian framework was constructed to learn the information obtained from pilot sampling for allocating samples to strata Our methods are clearly distinct for these approaches. First strata are built dynamically in our algorithm and the relations between input and output attributes are learned for sampling on output attributes. Second, the estimation accuracy and sampling cost are optimized in our sample allocation method Hidden Web Sampling: There is recent research work [3 13], [15] on sampling from deep web, which is hidden under simple interfaces. Dasgupta et al.[13], [15] proposed HDSampler a random walk scheme over the query space provided by the interface, to select a simple random sample from hidden database Bar-Yossef et al.[3] proposed algorithms for sampling suggestions using the public suggestion interface. Our algorithm is different from their work, since our goal is sampling in the context of particular data mining tasks. We focus on achieving high accuracy with a low sampling cost for a speci?c task, instead of simple random sampling VII. CONCLUSIONS In this paper, we have proposed strati?cation based sampling methods for data mining on the deep web, particularly considering association rule mining and differential rule mining Components of our approach include: 1 the relation between input attributes and output attributes of the deep web data source, 2 maximally reduce an integrated cost metric that combines estimation variance and sampling cost, and 3 allocation method that takes into account both the estimation error and the sampling costs Our experiments show that compared with simple random sampling, our methods have higher sampling accuracy and lower sampling cost. Moreover, our approach allows user to reduce sampling costs by trading-off a fraction of estimation error 332 6DPSOLQJ9DULDQFH      


     V WL PD WL RQ R I 9D UL DQ FH  9DU 9DU 9DU 5DQG a timation 6DPSOLQJ&RVW          6D PS OL QJ  RV W 9DU 9DU 


9DU 5DQG b 6DPSOLQJ$FFXUDF          5  9DU 9DU 9DU 5DQG c Fig. 3. Evaluation of Sampling Methods for Differential Rule Mining on the US Census Dataset 6DPSOLQJ9DULDQFH             9D UL DQ FH R I V WL 


PD WL RQ  9DU 9DU 9DU 5DQG a timation 6DPSOLQJ&RVW          6D PS OL QJ  RV W  9DU 9DU 9DU 5DQG b 6DPSOLQJ$FFXUDF         


    5  9DU 9DU 9DU 5DQG c Fig. 4. Evaluation of Sampling Methods for Differential Rule Mining on the Yahoo! Dataset REFERENCES 1] Foto N. Afrati, Paraskevas V. Lekeas, and Chen Li. Adaptive-sampling algorithms for answering aggregation queries on web sites. Data Knowl Eng., 64\(2 2] Rakesh Agrawal and Ramakrishnan Srikant. Fast algorithms for mining association rules. In Proceedings of the 20th International Conference on Very Large Data Bases, pages 487499, 1994 3] Ziv Bar-Yossef and Maxim Gurevich. Mining search engine query logs via suggestion sampling. Proc. VLDB Endow., 1\(1 4] Stephen D. Bay and Michael J. Pazzani. Detecting group differences Mining contrast sets. Data Mining and Knowledge Discovery, 5\(3 246, 2001 5] M. K. Bergman. The Deep Web: Surfacing Hidden Value. Journal of Electronic Publishing, 7, 2001 6] Mario Boley and Henrik Grosskreutz. A randomized approach for approximating the number of frequent sets. In ICDM 08: Proceedings of the 2008 Eighth IEEE International Conference on Data Mining, pages 4352 Washington, DC, USA, 2008. IEEE Computer Society 7] D. Braga, S. Ceri, F. Daniel, and D. Martinenghi. Optimization of Multidomain Queries on the Web. VLDB Endowment, 1:562673, 2008 8] R. E. Ca?isch. Monte carlo and quasi-monte carlo methods. Acta Numerica 7:149, 1998 9] Andrea Cali and Davide Martinenghi. Querying Data under Access Limitations. In Proceedings of the 24th International Conference on Data Engineering, pages 5059, 2008 10] Bin Chen, Peter Haas, and Peter Scheuermann. A new two-phase sampling based algorithm for discovering association rules. In KDD 02: Proceedings of the eighth ACM SIGKDD international conference on Knowledge discovery and data mining, pages 462468, New York, NY, USA, 2002 ACM 


11] W. Cochran. Sampling Techniques. Wiley and Sons, 1977 12] Arjun Dasgupta, Gautam Das, and Heikki Mannila. A random walk approach to sampling hidden databases. In SIGMOD 07: Proceedings of the 2007 ACM SIGMOD international conference on Management of data pages 629640, New York, NY, USA, 2007. ACM 13] Arjun Dasgupta, Xin Jin, Bradley Jewell, Nan Zhang, and Gautam Das Unbiased estimation of size and other aggregates over hidden web databases In SIGMOD 10: Proceedings of the 2010 international conference on Management of data, pages 855866, New York, NY, USA, 2010. ACM 14] Arjun Dasgupta, Nan Zhang, and Gautam Das. Leveraging count information in sampling hidden databases. In ICDE 09: Proceedings of the 2009 IEEE International Conference on Data Engineering, pages 329340 Washington, DC, USA, 2009. IEEE Computer Society 15] Loekito Elsa and Bailey James. Mining in?uential attributes that capture class and group contrast behaviour. In CIKM 08: Proceeding of the 17th ACM conference on Information and knowledge management, pages 971 980, New York, NY, USA, 2008. ACM 16] E.K. Foreman. Survey sampling principles. Marcel Dekker publishers, 1991 17] Ruoming Jin, Leonid Glimcher, Chris Jermaine, and Gagan Agrawal. New sampling-based estimators for olap queries. In ICDE, page 18, 2006 18] Shantanu Joshi and Christopher M. Jermaine. Robust strati?ed sampling plans for low selectivity queries. In ICDE, pages 199208, 2008 19] Bing Liu. Web Data Mining: Exploring Hyperlinks, Contents, and Usage Data \(Data-Centric Systems and Applications Inc., Secaucus, NJ, USA, 2006 20] Srinivasan Parthasarathy. Ef?cient progressive sampling for association rules. In ICDM 02: Proceedings of the 2002 IEEE International Conference on Data Mining, page 354, Washington, DC, USA, 2002. IEEE Computer Society 21] William H. Press and Glennys R. Farrar. Recursive strati?ed sampling for multidimensional monte carlo integration. Comput. Phys., 4\(2 1990 22] Hannu Toivonen. Sampling large databases for association rules. In The VLDB Journal, pages 134145. Morgan Kaufmann, 1996 23] Fan Wang, Gagan Agrawal, Ruoming Jin, and Helen Piontkivska. Snpminer A domain-speci?c deep web mining tool. In Proceedings of the 7th IEEE International Conference on Bioinformatics and Bioengineering, pages 192 199, 2007 24] Mingxi Wu and Chris Jermaine. Guessing the extreme values in a data set a bayesian method and its applications. VLDB J., 18\(2 25] Mohammed J. Zaki. Scalable algorithms for association mining. IEEE Transactions on Knowledge and Data Engineering, 12:372390, 2000 


333 


