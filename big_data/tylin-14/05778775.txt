A Privacy Preserving Algorithm for Mining Distributed Association Rules   ZHU Yu-quan, TANG Yang School of Computer Science & Telecommunications Engineering Jiangsu University Zhenjiang Jiangsu , China CHEN Geng School of Information Science Nanjing Audit University Nanjing, China   Abstract 227For resolving the problem that the existing protocol of secure two-party vector dot product computation has the low efficiency and may disclose the privacy data a method which is effective to find frequent item sets on vertically distributed data 
is put forward. The method uses semi-honest third party to participate in the calculation, put the converted data of the parties to a third party to calculate. The results show that compared to the original Vector dot product algorithm, the method can obviously improve the algorithm efficiency and accuracy of the results at the precondition that assured the data privacy of all parties Keywords- vector dot product; secure two-party computation association rules; privacy preserving I   I NTRODUCTION  As the rapid development of computer networks and data mining, the collection, management and analysis of massive 
data have become more convenient. In business, science and medical research fields it plays a positive role. However, in reality, an important issue that can not be avoided in data mining is the privacy protection. Mining do not involve the legality of their own problems. But the data mining process often accompanies with the information disclosure, especially when multiple data sources cooperate to mine, will lead to the disclosure of information between data sources. The results often lead to the leakage of sensitive data, such as customer shopping habits, the patient's condition information, the customer transactions of bank cards and others which will lead to the disclosure of personal privacy. These problems give a 
challenge to the data sharing and traditional data mining Therefore, in the data mining process how to solve the privacy issue of data mining has become a hot topic in industry Currently, distributed association rule mining privacy protection mainly use privacy protection technology which is based on cryptography. The representative is secure multi-party computation in distributed data mining. Secure multi-party computation is a distributed computing. K sides with secret input wish to use their input common to compute a function Calculation requires every party can receive the correct mining results without disclosing their privacy. Secure two-party computation was originally proposed by Yao [1 t e r 
Goldriech [2 r o m o t e d  it to  m u ltip a rty  secu re c o m p u t ati o n  for the establishment of any functions. Commonly used multiparty secure computation protocols are: secure sum, secure dot product, secure set union protocol and so on.  Using the secure multi-party computation to maintain the privacy, we need  not only to consider the accuracy of mining results, but to consider the security strength and computation costs, communication costs and other issues Many scholars conducted research on privacy protection based on secure multi-party computation. J. Vaidya[3 an d  others put forward VDC and VDCN of mining association rules privacy protection in the vertical distribution database 
The algorithm VDC is for the database distributed in two sites The algorithm VDCN is for a database distributed in n \(n> 2 sites. The algorithm through calculating the dot product which represent the sub itemset to get the support count of itemset. It is based on solving a n-linear equations, while the number of equations is less than n, the result is uncertain. By such a way,we achieve the purpose of protecting privacy. The main disadvantage of this method is the production of a large number of random vectors and matrices in the data conversion process, computation and communication cost highly. And the site can derive the exact support count from other sites according to the candidate itemset, leading to the disclosure of 
private information. Boris Rozenberg and others proposed an efficient solution [4 th a t  b y a d d i n g f a lse in f o rm atio n t o th e t h e original transaction database to hide the specific transaction information. The algorithm's security has been improved and the corresponding computation and communication overhead is relatively low, but the accuracy of mining is affected. [5   Two different methods of privacy protection for the horizontal distribution database were proposed. The former used RSA public key encryption [7 d th e h o m o m o rph i c en cry p ti on  methods to encrypt the original data. Confidentiality is very good, but the time overhead is great. The latter proposed a secure frequent pattern tree to protect the security of privacy 
even if all those sites and data miner collude, the private information can not be obtained and the communication time is relatively small. Drawback is that the accuracy of algorithm is affected by mining This article focuses on how to effectively protect the privacy of each site and effectively mine the accurate association rules when the database distributed vertically. We put forward a vector product protocol based on semi-honest third party \(T-VDC\Experimental results show that the 978-1-4244-9283-1/11/$26.00 \2512011 IEEE 


algorithm ensure the security and computational efficiency while mining the association rules quickly and efficiently II  B ASIC CONCEPT  Association rule mining problem can be described as follows I={i 1 i 2  001\002 i m  is a collection of items. D is the set of transactions, each transaction T is a set of items. Each transaction is a unique symbol, called TID. If XT 002  that is transaction T contains X, X is the set of some items in I Association rule is expressed as 000;\002Ù\000!\000 X 003 I,Y 003 I and XY 004=\005  The confidence of the rule X =>Y in the transaction set D is c, that is c% transactions that contain X also contains Y. If the support of rule X=>Y in the transaction sets is s, that is s% transaction includes X 001 Y  Association rule mining is to find the rules that meet the minimum support and confidence This paper focuses on the vertical distribution database, the vertical distribution database means that data from different sites come from the same transaction set, but the attribute is located in different sites. Such as people's financial information in the database of the banks, while the tax information in Revenue Department, or in their respective work unit’s database, the insuring project in insurance company’s database The mathematical model of Vertical distribution database is as follows: Let k data set located in different sites N 1  001\002 N k kpartition\ the data sets were DB 1  001\002 DB k in which DB i 002 1 0010 i 0010 k 002 is a local database, global database are DB 000 DB 1 001$\001\002\001 DB. If the database DB i have n affairs and m i attributes, then the global database have n affairs and 001\033 000N\000\020\000\024\000\003 000L\000 \000\023 m i attributes. That is, data sets DB i are n rows and m i column, the global database with n rows and 001\033 000N\000\020\000\024\000\003 000L\000 \000\023 m i column The target of distributed association rule mining is the data come from different cooperated parties. All parties work together to complete global information mining. To protect the privacy of data, all parties are reluctant to share their own data to one another. So a method Which can share data safely is needed III  V ECTOR BASED SEMI HONEST THIRD PARTY PRODUCT PROTOCOL T-VDC The existing algorithms have some drawbacks, such as the large communication cost and easy to leak privacy. In order to improve it, in this paper we use a pair of random numbers to encrypt the original data and with the help of the third party to calculate. The process does not need a large number of randomly generated vectors and matrices and the communication process only transfer a small amount of vectors and numerical. So compared to the VDC algorithm computing and communication overheads are very small A  Calculation of vector dot product Suppose we have two parties A and B, the database has a total of n affairs, a total of p + q attributes, Party A has p attributes a 1 a 2  001\002 a p the value of the ith record of these attributes are a i1 a i2  001\002 a ip B with q attributes b 1 b 2  001\002 b q the value of the ith record of these attributes are b i1 b i2  001\002 b iq  Global transaction is consisted of p + q sequence, the value is 1 or 0 \(1 means the item appears in the transaction, 0 means the item does not appear in the transaction Convenient for discussion, two parties database are denoted by matrix A, B 1 11 12 1    p p nnp x x AXX X x x 000 000 000 000  000 000 000 000 000 000 000 000J\000J\000G 000J\000J\000G 000J\000J\000J 000G 000"\000#\000 000  1 11 12 1    q q nnq y y YY Y yy 000 000 000 000  000 000 000 000 000 000 000 000J\000G 000J\000J 000G\000J\000J 000G 000"\000 000 000 B  In which X 1  x 11 x 21  001\002 x n1   X 2 x 12 x 22  001\002 x n2  001\002 X p x 1p x 2p  001\002 x np Y 1 y 11 y 21  001\002 y n1  2 y 12 y 22  001\002 y n2  001\002 Y q y 1q y 2q  001\002 y nq  Namely X i is the value of transactions on the attribute a i  Y j is the value of transaction on the attribute b j  1 006 i 006 p 002 1 006 j 006 q  Theorem 1 the support count of the item denoted by count \(item\, x is an attribute of party A, the attribute value is denoted by the vector X=\(x 1 x 2  001\002 x n  y is an attribute of party B, the value of the attribute is denoted by vector  Y=\(y 1 y 2  001\002 y n  The count\(item\ =X 000g Y 1 n ii i x y  007 000  Proof: for X=\(x 1 x 2  001\002 x n Y=\(y 1 y 2  001\002 y n  X 000g Y =\(x 1 x 2  001\002 x n  000g y 1 y 2  001\002 y n x 1 x 2  001\002 x n-1  000g y 1 y 2  001\002 y n-1 x n 000g y n x 1 x 2  001\002 x n-2  000g y 1 y 2  001\002 y n-2 x n-1 000g y n-1  x n 000g y n  001\002 x 1 000g y 1 x 2 000g y 2  000\003\001\002 x n-1 000g y n-1 x n 000g y n   The count \(item\ express the number of records that support for the item. It can be known to calculate the support count of the item is to calculate the number of records that contain the item,that is the calculation of the number of records in which the values of items are all 1. If you use the n-dimensional vector X and Y denote the values of item in the data set D, it is not hard to count \(item Such as the item {a,b} in the vertical distribution database a, b are respectively the attributes of both the database, a total of seven records. Attribute a produces a seven-dimensional vector a 1,1,0,1,0,1,1\, attribute  b generates a sevendimensional vector b 0,1,0,1,1,1,0\ Support count of item a,b} is calculated as follows: count \(ab\ = ab 7 1 ii i ab  007 000 1 0 +1 * 1 +0 * 0 +1 * 1 +0 * 1 +1 * 1 +1 * 0 = 3. The support count of itemset {a, b}is 3 B  Algorithm Thought Suppose there is a semi-honest third party, converting the raw data of the two sides and sending it to the third party to compute, and the result is passed to both parties. The 


calculation of the support count of the candidate item set may proceed as follows 1\ Convert X 1 with a random number \(k, v X 1 be multiplied by the coefficient k and get kx 11 kx 21  001\002  kx n1   Added with the offset v and get X 1  kx 11 v, kx 21 v kx n1 v  2\Pass the converted X 1  to B side, calculate X 1  Y 1 kx 11 v, kx 21 v, …,kx n1 v\ \( y 11 y 21 y n1  k\(x 11 y 11 x 21 y 21 x n1 y n1 y 11 y 21 y n1   Y sum1  y 11 y 21 y n1 And pass X 1  Y 1 together with Y sum1 to the third party 3\or X 1 Y 1 x 11 y 11 x 21 y 21 x n1 y n1  the third party gets the final support count of the item set by calculating X 1 Y 1 X 1  Y 1 v*Y sum1   4\Compare the final result with the minimum support count. If it is larger than the minimum support count of the item set, the item set is frequent and pass the results to the two parties 5\ Calculate the support count of other candidate item sets  C  Algorithm Description The improved vector dot product is based on the Apriori algorithm. With the help of a third party, we use secure two party computation and the Apriori-gen function to generate all the candidate itemsets. And using the vector dot product to calculate the support count of candidate item set Algorithm 1 shows the specific description Algorithm 1: The dot product protocol T-VDC based on the semi-honest third party Input: transaction database D; minimum support threshold min_sup Output: The frequent itemsets L in D 002 1 002 L 1 large 1-itemsets 001\025 Apriori\(D\Apriori algorithm to generate frequent 1 item sets 002 2 002 for\(k=2; L k\000\024 001 005 k++\begin 002 3 002 C k Apriori-gen\(L k-1 the frequent K-1 itemsets generate candidate k itemsets 002 4 002 for all candidates c 001\031 C k do begin 002 5 002 if all the attributes in c are entirely at A or B treat the condition that the a ttribute in candidate item set located in one site 002 6 002 that party independently calculates c.count 002 7 002 else 002 8 002 let A have p of the attributes and B have the remaining q // attribute located in different sites 002 9 002 construct X on A’s side and Y on B’s side where X  001\032 p i=1 A i and Y   001\032 q i=1 B i respectively construct X and Y vector in A and B site 002 10 002 the third party create a pair of random \(k,v Third party produce random numbers \(k, v 002 11 002 the vector X multiply coefficient k and add offset v 002 resulting vector X  002 12 002 send the vector X 000\012 to Y    // sent X to Y '// sent X to Y 002 13 002 Y receive X 000\012 and compute vector X 000\012 Y 002 send the sum y 1q y 2q 000\016\001\002 y nq and X 000\012 Y to third party  // Y party compute X 'Y, send it and the sum \(y 1q y 2q 000\016\001\002 y nq he third party 002 14 002 the third party compute c.count X  Y X  Yv  y 1q y 2q 000\016\001\002 y nq  th e t h ird p a rty calcu late t h e su p p o r t  count of the candidate item set 002 15 002 L k L k 001 c|c.count 0011 minsup// Judge if the candidate itemset is greater than the minimum support c ount if it, add it to the set of frequent itemsets 002 16 002 end 002 17 002 Answer 001 k L k D  Experimental results and the analysis A  Comparative analysis of the algorithm execution time To test the algorithm's time cost, we do experiment by using the mushroom database provided by http://archive.ics.uci.edu/ml/datasets/Mushroom. The database has 8124 records, record 22 attributes of mushrooms. Related parameters: | D | is the total data of affairs; min_sup is the minimum support; | I | is the number of items. | D | = 8124, | I | = 22. when min_sup is respectively 0.2,0.3,0.4,0.5,0.6 , compare the time cost of the secure two-party dot product algorithm \(VDC\ and secure two-party the dot product algorithm based on the third-party \( T-VDC\ Fig. 1 shows the results 000\023 000\024\000\023\000\023\000\023 000\025\000\023\000\023\000\023 000\026\000\023\000\023\000\023 000\027\000\023\000\023\000\023 000\030\000\023\000\023\000\023 000\031\000\023\000\023\000\023 000\023\000\021\000\025 000\023\000\021\000\026 000\023\000\021\000\027 000\023\000\021\000\030 000\023\000\021\000\031 min-support Execution tim e\(s  T-VDC VDC  Fig. 1 comparison chart of the algorithm running time  In the distributed database environment, the optimal condition of mining association rule is not to consider privacy. The two sides calculate directly using raw data eliminating the need for encryption and decryption process in which case the system overhead is minimal. We can find from the experimental results: because the T-VDC is simplified based on VDC algorithm, there is no need to generate a large number of random matrices and random vectors, so the execution time of T-VDC is less than the VDC. With the minimum support increases, the time cost decreases 


B  Security Analysis Convert X in the party A into X  and sent it to Party B Party B obtained the processed data from the Party A Therefore, the privacy data of the Party A is not leaked to the Party B. Moreover, the random number is randomly selected, it can better guarantee the security of all data. The calculation of the Support count for each candidate itemset are carried out by the trusted third party. The third party have no collusion with any party.The information of the two sides is exchanged after encrypted, so the two sides can not get the privacy information of the other side. The third party is responsible for processing the received data to calculate the support count of the item set, the third party can not derive from the converted data from A or B side. This method improves data privacy with the assistance of third party, which is the thesis aims to achieve  IV   C ONCLUSION  This paper proposes a vector dot product protocol based on the third party, making the data distributed in the two sites mining the effective association rules globally in the premise of  protecting the data privacy. The results show that the protocol not only improve the data privacy of any parties, also reduce the time overhead. In the future we will continue to study the protocol and extend it to multi-party more than two parties\ of the distributed association rule mining  A CKNOWLEDGMENT  This work is supported by Natural Science Foundation of Jiangsu Province \(No.BK2010331\ Qing Lan Project of Jiangsu Province, Innovation Fund for Small Technologybased Firms of China \(No.09C26213203797\nd National Natural Science Foundation of China\(No. 70971067 R EFERENCES  1  A C YAO. How to generate and exchange secrets[C I n P r o cee ding s o f  the 27th IEEE Symposium on Foundations of Computer Science Toronto, Canada IEEE.1986:162-167 2  O GOLDREICH. Secure multi-party computation [Z C M N e w Yo r k  USA, 2002:639-644 3  J VAIDYA, C CLIFTON. Privacy preserving association rule mining in vertically partitioned data[C I n Proc eed i n gs of th e E i ghth A C M SIGKDD International Conference on Knowledge Discovery and Data Mining. Edmonton, Alberta, Canada: ACM.2002:639-644 4  B ROZENBERG, E GUDES. Association rules mining in vertically partitioned databases [J  Dat a  K n owl e d g e E n gin eeri n g  2 006 59  2  378-396 5  GUI QIONG, CHENG XIAO HUI.A privacy-preserving distributed method for mining association rules I n  Proc eed i n gs of t h e 200 9 International Conference on Artificial Intelligence and Computational Intelligence. Shanghai, China: IEEE Computer Society.2009: 294-297 6  CHUNHUA SU,KOUICHI SAKURAI.A distributed privacy-preserving association rules mining scheme using frequent-pattern tree  I n  Proceedings of the Advanced Data Mining and Applications of 4th International Conference. Chengdu, China: Springer Berlin/Heidelberg.2008: 170-181 7  KI YOONJEONG, OHM SEONGYONG, YI KANG. Privacypreserving RFID authentication using public exponent three RSA algorithm [J E I C E  T r ans a c t io ns 20 09 92 3   5 455 4 7   


a confidence cij > 0 a rule i ? j is created. To each label i ? L a level li is assigned as follows: Assign level 1 to all labels not appearing as consequents in any of the obtained rules. Remove all rules j ? k where lj = 1. The next level is assigned to all labels not appearing as consequents in any remaining rule Remove all rules j ? k where j is in that level. Repeat this procedure until a level has been assigned to each label or no rules remain. The next level is then assigned to any labels to which no level has yet been assigned d sign each label i to a unique parent. The idea is that the parent p\(i value ci,p\(i while still being higher than the level of i. The set of candidates Qi therefore contains all labels j for which cij > 0, and whose level is higher than the level of i: Qi := {j ? L : cij > 0 ? lj > li If Qi = ?, then 0 6? L is chosen as the parent of i representing the virtual root of the hierarchy. Otherwise we select among the candidates those with the lowest level: Q?i := {j ? Qi : lj = mink?Qi lk}. The j ? Q?i for which cij is maximal is then chosen as the parent of i The main problem of the adaptive filtering method used in the Thresholding step of the basic algorithm is that it fails if a label i is a root label and therefore does not have any ancestors. In this case Ci does only contain noise, and only part of that noise is removed using the adaptive filtering Therefore, additional filtering of the confidence matrix C is needed. We propose two following approaches: Global Thresholding and Voting 2 appropriate global threshold value hc for the confidence matrix. It analyzes the curve formed by the values cij > 0 when sorted in ascending order, looking for jumps, or, if there is no jump high enough, by checking if there is a point where this curve has slower growth, finding stable regions in the process. It is similar to the Thresholding step of the basic algorithm but uses the whole matrix and handles noise better First apply the Confidence Matrix and Thresholding steps 


of the basic algorithm. Then 1 the sequence x = {xn}, n = 1, . . . , N and calculate the greatest jump for the sequence K argmaxn\(?xn 2 P n xn 2?N ??xK < 0.1, we select a tolerance of 10% of the whole range, set hc = xK and continue to 3 the jump is high enough. Otherwise x is smoothed by a low pass filter with a rectangular window of size s = 2 ? log\(|L x x with the lowest index plus one, satisfying: ?f\(xc n f\(xn N  3 hc to 0 we filter the matrix globally. The Level Assignment and Hierarchy Construction steps of the basic algorithm are then performed to construct the final hierarchy 3 threshold c ? [0, 1] is performed after the Thresholding step by setting all confidences cij < c to 0. Afterwards, the algorithm continues as specified above. Since the optimal threshold value depends on the set of multi-labels, we extract hierarchies as described for different thresholds \(in our case for 200 values equally distributed in the range of [0, 1 construct the final hierarchy we attach the parent that was chosen most frequently to each label III. MULTI-LABEL CLASSIFIERS A. FAM and ARAM Due to space constraints only the basic steps of the algorithms are presented below, for more details see [13], [14]. A Fuzzy ARTMAP \(FAM organizing Fuzzy ART modules, ARTa and ARTb \(Figure 1 adapting existing or creating new prototype nodes in their second layers F2. The F2 fields are linked by the Map 


Field  an associative memory, which contains associations between ARTa and ARTb prototypes. This enables FAM to learn mappings between input and target pairs during training. In classification tasks, the target vectors usually represent class labels, for example in the binary form Initially, the ART modules have only one uncommitted prototype node, where the weight vector is set to unity and the Map Field weights are also set to unity. In the complement coded form [14], vectors A and B represent an input pattern and its class label vector. After presentation of A to the F1 field of ARTa, the activation function Tk given by \(1 the winner is then chosen by the Winner-Take-All \(WTA rule \(2 Tk\(A A ?W ak W ak 1 where ? denotes the fuzzy AND, element-wise min operator and ? > 0 is called the choice parameter TK = max  Tk : k = 1, . . . , N 2 The choice of K must be confirmed by checking the match criterion A ?W aK A a \(3 Map Field Fig. 1. FAM neural network where ?a ? [0, 1] is the vigilance parameter. If \(3 the system inhibits the winner K and enables another node to be selected. When no existing prototype provides the satisfactory similarity, the network adds a new uncommitted neuron and adapts it. Thus, N grows during learning The described operations are identical for both modules ARTa and ARTb, but at ARTa the Map Field vigilance criterion that tests the correctness of the learned target vector B corresponding to the ARTa winner K should be checked additionally U b ?W abK 


U b ab \(4 where U b denotes the ARTb output vector and W abK denotes the weights connecting the Kth ARTa node to the Map Field The choice of the Map Field vigilance parameter ?ab is not critical since the left-side term of the inequality \(3 equal to either 1 or 0. If the inequality fails, then Match Tracking initiates the choice of a new node by increasing the ARTa vigilance parameter ?a to a value slightly greater than the left-side term of \(3 until the input is either assigned to a committed node that satisfies both the ARTa match criterion \(3 Field vigilance criterion \(4 neuron. A successful end of search starts the learning process at ARTa and ARTb \(similarly W a\(new K = ?a  A ?W a\(old K  1? ?a a\(old K \(5 where ?a ? [0, 1] is the learning rate. The fast-learning mode corresponds to setting ?a,b = 1. With fast learning, the Map Field weights are set to U b?W abK once the node K becomes committed and this association is permanent Although fuzzy ARAM may be tuned to be functionally equivalent to FAM, the architecture differs significantly \(Figure 2 are linked directly to the F1 fields of both ARTa and ARTb modules. In its simplified version, ARAM first computes the activation function \(1 according to \(2 by both match criteria simultaneously A ?W aK A a B ?W bK 


B b \(6 Fig. 2. ARAM neural network If any of the inequalities of \(6 inhibited, if all nodes are inhibited, a new uncommitted node is added. The Match Tracking process is started if needed When each match criterion is satisfied in the respective module, resonance occurs and the learning process follows During learning the selected node K learns to encode the input and target vectors by adjusting its weight vectors W aK and W bK similarly to \(5 B. Multi-label Extensions It has been shown in [7] that standard algorithms do not perform well on the muti-label datasets due to the use of the WTA rule \(2 been proposed: A set of Nb best categories with the largest activation values is chosen according to the rule: a category k is included in the set, if the relative difference \(TK?Tk is below a predefined fraction t of the activation range r = TK ? Tmin, where Tmin is the minimum activation of committed neurons. Activations of the Nb categories are subsequently normalized, uk = TkPN b s=1 Ts The resulting distributed output pattern P is calculated as follows P Nb s=1 usps. \(7 where for FAM ps = W br with r such that W ab sr = 1 which means that between neurons s of ARTa and r of ARTb an association in the Map field exists, and ps = W bs for ARAM. Thus, P contains a score for each label that is proportional to the number of neurons among the Nb best categories predicting this label. Since the fast learning of ART networks leads to varying performance with the input presentation order, voting across several networks trained with different orderings of a training set improves classi 


fication performance. The sum over the output of Equation 7 pattern P , which is used to determine the predicted classes Finally, a postprocessing filter method [12] is applied: the signals P are sorted descendingly, then all corresponding output classes are included in the multi-label up to the point of maximum decrease in the signal size from one class to the next A small modification is made in the ARTb weights, which now count label occurrences during learning by increasing their values by 1 each time the corresponding multi-label is presented. This modification leads to changes in the ARTb activation calculation of ML-FAM which is Tk = |B?W bk Another difference between the multi-label and the standard algorithms is that the former ones do not use Match Tracking with raising vigilance: The winner is simply inhibited C. Comparison of Classifiers To compare the two ART-based networks with other MLclassifiers, we chosen ML-kNN described in [8] and BoosTexter [9] which is an implementation of Boosting for the field of text categorization, based on the well-known AdaBoost algorithm [15]. ML-kNN and BoosTexter were chosen since these popular MC algorithms are nearest-neighbor- and rulebased, respectively, and therefore allow a comparison of the results of ML-FAM and ML-ARAM with algorithms based on other approaches than neural networks IV. PROXIMITY MEASURES FOR HIERARCHIES Approaches for quantitative comparison of graphs and trees are either defined on an abstract level, taking into account only the pure graph structure, or make use of the field specific semantics encoded in the graph. From the former category, we utilized the Constrained Tree Edit Distance CTED  whereas Taxonomic Overlap \(TO  field of concept representation, which also deals with hierarchical structures encoded in graphs and trees. Additionally the Lowest Common Ancestor Path Distance \(LCAPD new tree distance measure, developed especially for the type of hierarchies common in HMC. A description of the mutual differences between these measures and the motivation for the development of a new metric are given at the end of this section 


A. Constrained Tree Edit Distance CTED [10] is based upon the idea of transforming one hierarchy into another via certain local editing operations The distance between two hierarchies is the minimum total number of operations needed for transforming the one into the other. Three modification operations are considered: A node i is deleted by transmitting its children to its parent and removing i from the hierarchy. Inserting is the complement of deleting: Inserting i as a child of j makes i the parent of some subset of the children of j. Changing a node means changing its label. In order to make computation in polynomial time possible, the constraint that disjoint subtrees have to be mapped to disjoint subtrees is included in the definition [10], [16 The original definition does not include any normalization For two hierarchies with q labels each, 2q is the highest possible CTED  corresponding to deleting all labels of the first hierarchy and inserting all labels of the second hierarchy We normalize the CTED by 12q which results in distances in 0, 1 B. Taxonomic Overlap TO [11] compares the nodes of two hierarchies according to how many ancestors and descendants they share. We describe a version adapted to our experiments. Define semantic cotopy as SC\(i,H i j Given two hierarchies H1 and H2, the corresponding overlap for i ? L is defined as O\(i,H1, H2 SC\(i,H1 i,H2 SC\(i,H1 i,H2 Note that this is a symmetric expression in H1 and H2 with values in [0, 1]. The TO of H1 and H2 is the average of all overlaps TO\(H1, H2 1 q  i?L O\(i,H1, H2 For two identical hierarchies, TO is 1, while it is 0 if H1 and H2 are totally unrelated. Since the two other hierarchy 


proximity measures used in the experiments are distances with smaller values indicating higher similarity TO? := 1? TO to simplify comparisons C. LCA-Path Tree Distance Since in a hierarchy a parent is a more general concept than any of its children, the locations of the same label i in two hierarchies H1 and H2 can be compared by how far one has to travel up the chain of ancestors in both hierarchies until a common ancestor is found. For a label i ? L the depth dH\(i 0 dH\(i pH\(i a1, . . . , av the ancestors of i in H1, such that a1 = pH1\(i a2 = pH1\(a1 i common ancestor of i in H1 and H2, lca\(i,H1, H2 first ancestor of i in H1 which is also an ancestor of i in H2 j? := min  j | j ? {1, . . . , v} such that aj ? AH2\(i  lca\(i,H1, H2 Since 0 is an ancestor of all labels in all hierarchies, the LCA always exists. Note that usually lca\(i,H1, H2 lca\(i,H2, H1 We use the LCA to measure how far apart the positions of a label in both hierarchies are: If a label i has the same parent in both hierarchies it is regarded as being in the same position, otherwise the distances of i to its LCA in both hierarchies are used to measure how far apart both locations are. The cost for i is defined as d\(i,H1, H2 2 k=1 dHk\(i lca\(i,H1, H2 D\(i,H1, H2  0, if pH1\(i i d\(i,H1, H2 8 This can be seen as the length of the path from i to lca\(i,H1, H2 i,H1, H2 As D is not symmetric, the complete LCA-path distance 


between H1 and H2 is the mean value D\(H1, H2 1 W  i?L 1 2  D\(i,H1, H2 i,H2, H1  0 1 2 3 a 0 2 1 3 b Fig. 3. Sample hierarchies where W is a normalization factor: The worst case for a misplaced label i is that lca\(i,H1, H2 8 i,H1, H2 i i holds accordingly for D\(i,H2, H1 i?L dH1 \(i i H1, H2  D. Comparison All three hierarchy proximity measures presented above reflect different concepts of tree similarity. It is thus not surprising that CTED and TO*, although they perform well in the domains they were designed for, may produce counterintuitive results when used in the field of HE. This is demonstrated by the hierarchies shown in Figure 3: Despite the fact that the relationships between the nodes in both hierarchies are completely different, their CTED and TO are 0.33 and 0.44, respectively. Their LCAPD, on the other hand, is 1.00. Thus only LCAPD marks both hierarchies with the highest possible distance Some hierarchies used in our experiments contain nodes with exactly one child \(single-child labels that TO* does not distinguish between such labels and their children, in the following sense: Given a hierarchy H and a single-child node i, we denote with H ? the hierarchy 


that is obtained from H by swapping i and its child. Then TO?\(H,H CTED or LCAPD V. EXPERIMENTS We tested the proposed data mining system with four multi-label classifiers: ML-FAM, ML-ARAM, ML-kNN and BoosTexter on three real-world datasets with increasing complexity from the text-mining field. In our experiments we compared extracted hierarchies to the original hierarchy by means of three hierarchy proximity measures: LCAPD CTED, and TO The experimental setup of ML-FAM and ML-ARAM had the following parameter values: choice parameter 0.0001; learning rates ?a,b = 1.0 for fast learning; vigilance parameters ?a = 0.9 and ?b = 1.0. The parameter t was chosen to be 0.05 for the 20 newsgroups dataset and 0.02 for the other datasets. The number of voters V was set to 9 Following [8], we used 10 nearest neighbors \(k = 10 Laplace smoothing \(s = 1 BoosTexter was trained using 500 boosting rounds as in 8] and the threshold for converting rankings into multi-labels was set to 0 [9 A. Multi-label Classification Performance Measures We used a large set of performance measures for evaluation of the MC experiments: First, two example-based measures for multi-label predictions: Accuracy \(A measure \(F  of the predicted labels are actually present while F-measure is the harmonic mean of precision and recall calculated on the per-instance basis. The larger the A and F values, the better the MC performance Then two label-based measures were calculated on the basis of binary counts for each label: the numbers of true positives, true negatives, false positives, and false negatives We used the micro-averaged version of F1 with the binary measures counted on the whole test set. The perfect performance corresponds to F1 = 1. Additionally, micro-averaged precision and recall were used for computing the Area Under a Precision-Recall Curve \(AUPRC  precision corresponds to the proportion of predicted labels in the test set that are correct and recall to the proportion of labels that are correctly predicted. AUPRC has been claimed 


to be a well-suited performance measure for MC tasks where the number of negative instances significantly exceeds the number of positive instances [6]. Another advantage of AUPRC is its global nature and independence of a certain threshold value. The closer the AUPRC value is to 1, the better the performance Since these measures are based on the comparison of multi-labels, they depend on a transformation from rankings to classes. As a contrast we also used four wellknown ranking-based performance measures: One-Error OE RL C cision \(AP  for all ranking-based performance measures except AP. OneError evaluates how many times the top-ranked label is not in the set of proper labels of the instance. Ranking Loss is defined as the average fraction of pairs of labels that are ordered incorrectly. Coverage evaluates how far we need, on average, to go down the list of labels in order to cover all the proper labels of the instance. Average Precision evaluates the average fraction of labels ranked above a particular label i ? mt which actually are in mt And finally, the special hierarchical loss function H-loss 2] were utilized. Following [3], normalized costs were calculated: ci := 1/|c\(p\(i i ? L i of all direct children of i. Hierarchical loss \(H-loss consider mistakes made in subtrees of incorrectly predicted labels and penalizes only the first mistake along the path from the root to a node. The smaller the H-loss value, the better the performance B. 20 Newsgroups Dataset We modified the popular single-label dataset 20 Newsgroups [18], [19] by considering eight additional labels corresponding to the intermediate levels of the hierarchy faith, recreation, recreation/sport, recreation/vehicles, politics, computer, computer/hardware, science. This dataset is a collection of almost 20,000 postings from 20 newsgroups sorted by date into training \(60 40 data were preprocessed by discarding all words appearing only in the test documents and all words found in the stop word list [20]. Afterwards, all but the 2%-most-frequent words were eliminated to reduce the dimensionality. Documents were represented using the well-known TF-IDF \(Term 


Frequency  Inverse Document Frequency scheme [19]. The TF-IDF weights were then normalized to the range of [0, 1]. Conversion to TF-IDF and normalization were performed separately for training and test data. This resulted in the 1,070-dimensional dataset with 11,256 training instances, 7,493 test ones and 28 labels To test the performance of two HE algorithms, we first extracted hierarchies from the True Test Multi-Labels \(TTML and calculated the corresponding proximity measures. Both algorithms successfully extracted the original hierarchy We studied the performance of the multi-label classifiers and their ability to infer the class hierarchies in the presence of only partly available hierarchical information. We performed a series of HE experiments with multi-labels having a decreasing number of inserted non-leaf labels describing the levels in the hierarchy. We randomly removed such labels from 20%, 30%, and 40% of the training instances leaving them single-labeled. The results for predicted test multilabels are shown in Table I where the bold face marks the best classifier, and the first column \(left result of HE by Voting and the second \(right Thresholding \(referred as GT Comparing classification performance, one can see that the ART-based networks are superior to both the other classifiers in terms of most performance measures and that ML-FAM slightly outperforms ML-ARAM. Taken together they win on at least 6 and at most 8 out of 9 evaluation measures. BoosTexter has the second best performance, but its predictive power degrades more quickly with the increase in the number of single-label instances. The poorest MC results were shown by ML-kNN, its performance decreased very fast with any reduction in the number of multi-labels For example, F1 decreased by 15% while removing 40% of labels instead of 30%. It is also interesting to note that when trained on the dataset with 40% removed labels, ML-FAM and ML-ARAM significantly outperformed ML-kNN trained on the original dataset with all labels The hierarchy proximity measures confirm the good quality of predictions produced by the ART-based networks: The hierarchies were correct extracted by both HE algorithms of Section II-B even with 40% removed labels. The predictions of ML-kNN were the worst: The Voting variant of the HE 


algorithm could not extract the correct hierarchy with 30 assigning five labels incorrectly to the root label. None of the HE algorithms could extract the correct hierarchy in the absence of 40% multi-labels. With 40% and Voting, the number of labels falsely assigned to the root was 13, while with GT it was only three. For BoosTexter, Voting assigned two labels wrongly to the root label in the experiment with TABLE I 20 NEWSGROUPS ALL, -20%, -30% AND -40% RESULTS Measure all 20% 30% 40%ARAM FAM kNN BoosT. ARAM FAM kNN BoosT. ARAM FAM kNN BoosT. ARAM FAM kNN BoosT A 0.635 0.638 0.429 0.549 0.613 0.633 0.383 0.456 0.596 0.619 0.322 0.412 0.563 0.591 0.255 0.387 F1 0.694 0.696 0.565 0.677 0.675 0.688 0.528 0.604 0.662 0.677 0.469 0.566 0.640 0.657 0.392 0.542 F 0.691 0.692 0.480 0.605 0.671 0.688 0.429 0.507 0.658 0.676 0.364 0.465 0.630 0.652 0.296 0.441 OE 0.221 0.220 0.336 0.222 0.259 0.236 0.387 0.275 0.273 0.259 0.415 0.301 0.301 0.291 0.434 0.316 RL 0.100 0.098 0.124 0.073 0.108 0.110 0.128 0.077 0.098 0.103 0.132 0.079 0.101 0.106 0.135 0.082 C 4.188 4.168 6.080 4.164 4.397 4.446 6.184 4.286 4.246 4.340 6.326 4.328 4.334 4.463 6.397 4.379 AP 0.789 0.790 0.677 0.778 0.774 0.782 0.657 0.758 0.769 0.774 0.645 0.747 0.759 0.764 0.638 0.740 AUPRC 0.775 0.772 0.618 0.749 0.743 0.727 0.581 0.691 0.733 0.722 0.555 0.671 0.715 0.708 0.535 0.660 H-loss 0.103 0.123 0.121 0.094 0.102 0.098 0.124 0.108 0.106 0.103 0.132 0.117 0.115 0.111 0.145 0.122 Wins 1 5 0 3 1 6 0 2 2 6 0 1 2 6 0 1 LCAPD 0 0 0 0 0 0 0 0 0 0 0.12 0 0.05 0 0 0 0.51 0.26 0.17 0 CTED 0 0 0 0 0 0 0 0 0 0 0.14 0 0.07 0 0 0 0.50 0.21 0.21 0 TO* 0 0 0 0 0 0 0 0 0 0 0.11 0 0.05 0 0 0 0.39 0.18 0.15 0 30% removed labels and and six labels in the experiment with 40% removed labels. GT resulted in zero distances in the both cases. Assigning more labels to the root creates more shallow and wider hierarchies \(trivial case as stated before The good hierarchy extraction with ART networks demonstrates the system robustness  even with strongly damaged data the system can rebuild the original hierarchy C. RCV1-v2 Dataset The next experiment was based on the tokenized version of 


the RCV1-v2 dataset introduced in [21]. Only the topics label set consisting of 103 labels arranged in a hierarchy of depth four is examined here. Documents of the original training set of 23,149 were converted to TF-IDF weights and normalized Afterwards the set was splitted in 15,000 randomly selected documents as training and the remaining as test samples In this case, the Voting variant of HE applied to the TTML resulted in the LCAPD, CTED and TO* values 0.12, 0.15 and 0.13, respectively. The corresponding values of the GT variant are 0.05, 0.07 and 0.05. The poor performance of the Voting method is due to the fact that for the TTML only very high threshold values succeed in removing enough noise The Voting results are thus dominated by bad hierarchies extracted for all but the highest thresholds The classification and HE results for this dataset are shown in Table II. ML-ARAM has better performance results on this data set in all points than ML-FAM except for RL being the best of all classifiers in terms of the multi-label performance measures. BoosTexter is the best in terms of all ranking measures For both HE algorithms the distances of BoosTexter are the best, those of ML-FAM second, followed ML-ARAM and ML-kNN. All three distance measures correlate. Interesting is also that for ML-kNN the distance values obtained by both HE methods are almost the same The hierarchy extracted by GT from the TTML has much lower distances values as compared with the hierarchies extracted by both methods from predicted multi-labels. This reflects a specific problem of HE, since only a small fraction of the incorrectly classified multi-labels can prevent building of a proper hierarchy. For example, 16.5% of misassigned labels in the extracted hierarchy are responsible for about 80% of LCAPD calculated from the predictions of MLARAM. This large part of the HE error is caused by only 4% of the test data. Under these circumstances the other distances behave analogically. Most labels were not assigned making them trivial edges, but six labels were assigned to a false branch. This can happen when labels have a strong correlation and in the step Hierarchy Construction of the basic algorithm the parent is not unique in the confidence matrix. BoosTexters results suffer less from this problem because it generally sets more labels for each test sample 


Both HE algorithms behaved similarly on the predictions of the ART networks. They constructed a deeper hierarchy than the original one and wrongly assigned the same 11 labels to the root node. The higher distances come from Voting assigning more labels to the wrong branch. For MLkNN both algorithms again create very similar hierarchy trees, both misassigned 28 labels to the root label. For BoosTexter it was seven with Voting and eight with GT Voting produced a deeper hierarchy here D. WIPO-alpha Dataset The WIPO-alpha dataset1 comprises patent documents collected by the World Intellectual Property Organization WIPO ments. Preprocessing was performed as follows: From each document, the title, abstract and claims texts were extracted stop words were removed using the list from [20] and words were stemmed using the Snowball stemmer [22]. All but the 1%-most-frequent stems were removed, the remaining stems were converted to TF-IDF weights and these were normalized to the range of [0, 1]. Again, TF-IDF conversion and normalization were done independently for the training and the test set. The original hierarchy consists, from top to bottom, of 8 sections, 120 classes, 630 subclasses and about 69,000 groups. In our experiment, only records from the sections A \(5802 training and 5169 test samples H \(5703 training and 5926 test samples 1http://www.wipo.int/classifications/ipc/en/ITsupport/Categorization dataset/wipo-alpha-readme.html August 2009 TABLE II RCV1-V2 RESULTS Measure ARAM FAM kNN BoosT A 0.748 0.731 0.651 0.695 F1 0.795 0.777 0.735 0.769 F 0.805 0.787 0.719 0.771 OE 0.077 0.089 0.104 0.063 RL 0.087 0.086 0.026 0.015 C 11.598 11.692 8.563 5.977 AP 0.868 0.860 0.839 0.873 AUPRC 0.830 0.794 0.807 0.838 H-loss 0.068 0.077 0.097 0.081 Wins 4 0 0 5 LCAPD 0.29 0.22 0.25 0.20 0.34 0.34 0.21 0.18 


CTED 0.32 0.23 0.28 0.22 0.38 0.37 0.24 0.20 TO* 0.27 0.18 0.22 0.17 0.31 0.30 0.21 0.17 document in the collection has one so-called main code and any number of secondary codes, where each code describes a group the document belongs to. Both main and secondary codes were used in the experiment, although codes pointing to groups outside of sections A and H were ignored. We also removed groups that did not contain at least 30 training and 30 test records \(and any documents that only belonged to such small groups 7,364 test records with 924 attributes each and a label set of size 131 In this case, the Voting variant of the HE algorithm applied to the TTML resulted in the LCAPD, CTED and TO* values of 0.13, 0.12 and 0, respectively. GT showed the same values. Remarkable are the TO* distances, which are equal to 0. This is due to the fact that the WIPO-alpha hierarchy contains 16 single-child labels that are not partitioned by the true multi-labels: whenever a single-child label j is contained in a multi-label, so is its child, and vice versa. It is therefore theoretically impossible to deduce from the multilabels which of them is the parent of the other. As a result the HE algorithms often choose the wrong parent, resulting in higher LCAPD and CTED values. TO*, as described above is invariant under such choices The results obtained on the WIPO-alpha dataset are shown in Table III. The classification performance of the ART-based networks on this dataset is slightly worse than that of BoosTexter. Mostly in the terms of OE, RL, C, AP, AUPRC, and H-loss measures BoosTexter is better because its rankings are better and it assigned more labels to each sample. But the ART networks have better HE results because their predicted labels are more consistent with the original hierarchy. MLkNN has the worst classification results and distance values again. The reason for the high relative difference between LCAPD as well as CTED and TO* obtained for the ART networks or BoosTexter as compared to the results of the other datasets is because most of the labels were assigned in the right branch but not exactly where they belong Both HE algorithms extracted the same hierarchy from the predictions of ML-ARAM and a very similar hierarchy for ML-FAM. About 5% labels were assigned wrongly to the 


root label in the hierarchies of the ART networks. For MLTABLE III WIPO-ALPHA\(AH Measure ARAM FAM kNN BoosT A 0.588 0.590 0.478 0.564 F1 0.694 0.691 0.614 0.693 F 0.682 0.682 0.593 0.679 OE 0.052 0.057 0.110 0.042 RL 0.135 0.136 0.056 0.025 C 25.135 25.269 22.380 11.742 AP 0.790 0.785 0.724 0.802 AUPRC 0.720 0.684 0.688 0.762 H-loss 0.090 0.093 0.149 0.079 Wins 1 2 0 6 LCAPD 0.16 0.16 0.17 0.17 0.32 0.38 0.21 0.21 CTED 0.18 0.18 0.19 0.19 0.38 0.53 0.27 0.27 TO* 0.05 0.05 0.07 0.07 0.24 0.32 0.08 0.08 kNN both HE methods wrongly assigned about the half of the labels and about 20% of total labels were assgined to the root label. Here, GT extracted a much worse hierarchy as shown by CTED being 0.15 higher for GT than for Voting For BoosTexter both HE methods built the same hierarchy and no label was wrongly assigned to the root. All extracted hierarchies were one level deeper than the original one Although Voting produced worse hierarchies than GT on two previous datasets, this time its distance values were comparable or even better. In comparison to Voting, GT has higher values for all distances on the multi-labels of MLkNN. Voting has the advantage of being a much simpler method and of being more dataset independent. Still the tree distances have the same ranking order for all classifiers for both HE methods VI. CONCLUSION In this paper we studied Hierarchical Multi-label Classification \(HMC tive was to derive hierarchical relationships between output classes from predicted multi-labels automatically. We have developed a data-mining-system based on two recently proposed multi-label extensions of the FAM and ARAM neural networks: ML-FAM and ML-ARAM as well as on a Hierarchy Extraction \(HE algorithm builds association rules from label co-occurrences 


and has two modifications. The presented approach is general enough to be used with any other multi-label classifier or HE algorithm. We have also developed a new tree distance measure for quantitative comparison of hierarchies In extensive experiments made on three text-mining realworld datasets, ML-FAM and ML-ARAM were compared against two state-of-the-art multi-label classifiers: ML-kNN and BoosTexter. The experimental results confirm that the proposed approach is suitable for extracting middle and large-scale class hierarchies from predicted multi-labels. In future work we intend to examine approaches for measuring the quality of hierarchical multi-label classifications REFERENCES 1] M. Ruiz and P. Srinivasan, Hierarchical text categorization using neural networks, Information Retrieval, vol. 5, no. 1, pp. 87118 2002 2] N. Cesa-Bianchi, C. Gentile, and L. Zaniboni, Incremental algorithms for hierarchical classification, The Journal of Machine Learning Research, vol. 7, pp. 3154, 2006 3] , Hierarchical classification: combining Bayes with SVM, in Proceedings of the 23rd international conference on Machine learning ACM New York, NY, USA, 2006, pp. 177184 4] F. Wu, J. Zhang, and V. Honavar, Learning classifiers using hierarchically structured class taxonomies, in Proceedings of the 6th International Symposium on Abstraction, Reformulation And Approximation Springer, 2005, p. 313 5] L. Cai and T. Hofmann, Hierarchical document categorization with support vector machines, in Proceedings of the thirteenth ACM international conference on Information and knowledge management ACM New York, NY, USA, 2004, pp. 7887 6] C. Vens, J. Struyf, L. Schietgat, S. Dz?eroski, and H. Blockeel Decision trees for hierarchical multi-label classification, Machine Learning, vol. 73, no. 2, pp. 185214, 2008 7] E. P. Sapozhnikova, Art-based neural networks for multi-label classification, in IDA, ser. Lecture Notes in Computer Science, N. M Adams, C. Robardet, A. Siebes, and J.-F. Boulicaut, Eds., vol. 5772 Springer, 2009, pp. 167177 8] M. Zhang and Z. Zhou, ML-kNN: A lazy learning approach to multilabel learning, Pattern Recognition, vol. 40, no. 7, pp. 20382048 2007 9] R. Schapire and Y. Singer, BoosTexter: A boosting-based system for text categorization, Machine learning, vol. 39, no. 2, pp. 135168 


2000 10] K. Zhang, A constrained edit distance between unordered labeled trees, Algorithmica, vol. 15, no. 3, pp. 205222, 1996 11] A. Maedche and S. Staab, Measuring similarity between ontologies Lecture notes in computer science, pp. 251263, 2002 12] G. Carpenter, S. Martens, and O. Ogas, Self-organizing information fusion and hierarchical knowledge discovery: a new framework using ARTMAP neural networks, Neural Networks, vol. 18, no. 3, pp. 287 295, 2005 13] A.-H. Tan and H. Pan, Predictive neural networks for gene expression data analysis, Neural Networks, vol. 18, pp. 297306, April 2005 14] G. Carpenter, S. Grossberg, N. Markuzon, J. Reynolds, and D. Rosen Fuzzy ARTMAP: A neural network architecture for incremental supervised learning of analog multidimensional maps, IEEE Transactions on Neural Networks, vol. 3, no. 5, pp. 698713, 1992 15] Y. Freund and R. Schapire, A decision-theoretic generalization of online learning and an application to boosting, Journal of computer and system sciences, vol. 55, no. 1, pp. 119139, 1997 16] K. Zhang and T. Jiang, Some MAX SNP-hard results concerning unordered labeled trees, Information Processing Letters, vol. 49 no. 5, pp. 249254, 1994 17] G. Tsoumakas and I. Vlahavas, Random k-labelsets: An ensemble method for multilabel classification, Lecture Notes in Computer Science, vol. 4701, p. 406, 2007 18] K. Punera, S. Rajan, and J. Ghosh, Automatic construction of nary tree based taxonomies, in Proceedings of IEEE International Conference on Data Mining-Workshops. IEEE Computer Society 2006, pp. 7579 19] T. Joachims, A probabilistic analysis of the Rocchio algorithm with TFIDF for text categorization, in Proceedings of the Fourteenth International Conference on Machine Learning. Morgan Kaufmann Publishers Inc. San Francisco, CA, USA, 1997, pp. 143151 20] A. McCallum, Bow: A toolkit for statistical language modeling, text retrieval, classification and clustering, 1996 http://www.cs.cmu.edu/ mccallum/bow 21] D. Lewis, Y. Yang, T. Rose, and F. Li, RCV1: A new benchmark collection for text categorization research, The Journal of Machine Learning Research, vol. 5, pp. 361397, 2004 22] M. Porter, Snowball: A language for stemming algorithms, 2001 http://snowball.tartarus.org/texts/introduction.html 


the US census data set. The size of pilot sample is 2000, and all 50 rules are derived from this pilot sample. In this experiment the ?xed value x for the sample size is set to be 300. The attribute income is considered as a differential attribute, and the difference of income of husband and wife is studied in this experiment. Figure 3 shows the performance of the 5 sampling 331 6DPSOLQJ9DULDQFH             9D UL DQ FH R I V WL PD WL RQ  9DU 9DU 9DU 5DQG a timation 6DPSOLQJ&RVW    


      6D PS OL QJ  RV W 9DU 9DU 9DU 5DQG b 6DPSOLQJ$FFXUDF          5  9DU 9DU 9DU 5DQG c Fig. 2. Evaluation of Sampling Methods for Association Rule Mining on the Yahoo! Dataset procedures on the problem of differential rule mining on the US census data set. The results are also similar to the experiment results for association rule mining: there is a consistent trade off between the estimation variance and sampling cost by setting their weights. Our proposed methods have better performance than simple random sampling method 


We also evaluated the performance of our methods on the Yahoo! dataset. The size of pilot sampling is 2000, and the xed value x for the sample size is 200. The attribute price is considered as the target attribute. Figure 4 shows the performance of the 5 sampling procedures on the problem of differential rule mining on the Yahoo! dataset. The results are very similar to those from the previous experiments VI. RELATED WORK We now compare our work with the existing work on sampling for association rule mining, sampling for database aggregation queries, and sampling for the deep web Sampling for Association Rule Mining: Sampling for frequent itemset mining and association rule mining has been studied by several researchers [23], [21], [11], [6]. Toivonen [23] proposed a random sampling method to identify the association rules which are then further veri?ed on the entire database. Progressive sampling [21], which is based on equivalence classes, involves determining the required sample size for association rule mining FAST [11], a two-phase sampling algorithm, has been proposed to select representative transactions, with the goal of reducing computation cost in association rule mining.A randomized counting algorithm [6] has been developed based on the Markov chain Monte Carlo method for counting the number of frequent itemsets Our work is different from these sampling methods, since we consider the problem of association rule mining on the deep web. Because the data records are hidden under limited query interfaces in these systems, sampling involves very distinct challenges Sampling for Aggregation Queries: Sampling algorithms have also been studied in the context of aggregation queries on large data bases [18], [1], [19], [25]. Approximate Pre-Aggregation APA  categorical data utilizing precomputed statistics about the dataset Wu et al. [25] proposed a Bayesian method for guessing the extreme values in a dataset based on the learned query shape pattern and characteristics from previous workloads More closely to our work, Afrati et al. [1] proposed an adaptive sampling algorithm for answering aggregation queries on hierarchical structures. They focused on adaptively adjusting the sample size assigned to each group based on the estimation error in each group. Joshi et al.[19] considered the problem of 


estimating the result of an aggregate query with a very low selectivity. A principled Bayesian framework was constructed to learn the information obtained from pilot sampling for allocating samples to strata Our methods are clearly distinct for these approaches. First strata are built dynamically in our algorithm and the relations between input and output attributes are learned for sampling on output attributes. Second, the estimation accuracy and sampling cost are optimized in our sample allocation method Hidden Web Sampling: There is recent research work [3 13], [15] on sampling from deep web, which is hidden under simple interfaces. Dasgupta et al.[13], [15] proposed HDSampler a random walk scheme over the query space provided by the interface, to select a simple random sample from hidden database Bar-Yossef et al.[3] proposed algorithms for sampling suggestions using the public suggestion interface. Our algorithm is different from their work, since our goal is sampling in the context of particular data mining tasks. We focus on achieving high accuracy with a low sampling cost for a speci?c task, instead of simple random sampling VII. CONCLUSIONS In this paper, we have proposed strati?cation based sampling methods for data mining on the deep web, particularly considering association rule mining and differential rule mining Components of our approach include: 1 the relation between input attributes and output attributes of the deep web data source, 2 maximally reduce an integrated cost metric that combines estimation variance and sampling cost, and 3 allocation method that takes into account both the estimation error and the sampling costs Our experiments show that compared with simple random sampling, our methods have higher sampling accuracy and lower sampling cost. Moreover, our approach allows user to reduce sampling costs by trading-off a fraction of estimation error 332 6DPSOLQJ9DULDQFH      


     V WL PD WL RQ R I 9D UL DQ FH  9DU 9DU 9DU 5DQG a timation 6DPSOLQJ&RVW          6D PS OL QJ  RV W 9DU 9DU 


9DU 5DQG b 6DPSOLQJ$FFXUDF          5  9DU 9DU 9DU 5DQG c Fig. 3. Evaluation of Sampling Methods for Differential Rule Mining on the US Census Dataset 6DPSOLQJ9DULDQFH             9D UL DQ FH R I V WL 


PD WL RQ  9DU 9DU 9DU 5DQG a timation 6DPSOLQJ&RVW          6D PS OL QJ  RV W  9DU 9DU 9DU 5DQG b 6DPSOLQJ$FFXUDF         


    5  9DU 9DU 9DU 5DQG c Fig. 4. Evaluation of Sampling Methods for Differential Rule Mining on the Yahoo! Dataset REFERENCES 1] Foto N. Afrati, Paraskevas V. Lekeas, and Chen Li. Adaptive-sampling algorithms for answering aggregation queries on web sites. Data Knowl Eng., 64\(2 2] Rakesh Agrawal and Ramakrishnan Srikant. Fast algorithms for mining association rules. In Proceedings of the 20th International Conference on Very Large Data Bases, pages 487499, 1994 3] Ziv Bar-Yossef and Maxim Gurevich. Mining search engine query logs via suggestion sampling. Proc. VLDB Endow., 1\(1 4] Stephen D. Bay and Michael J. Pazzani. Detecting group differences Mining contrast sets. Data Mining and Knowledge Discovery, 5\(3 246, 2001 5] M. K. Bergman. The Deep Web: Surfacing Hidden Value. Journal of Electronic Publishing, 7, 2001 6] Mario Boley and Henrik Grosskreutz. A randomized approach for approximating the number of frequent sets. In ICDM 08: Proceedings of the 2008 Eighth IEEE International Conference on Data Mining, pages 4352 Washington, DC, USA, 2008. IEEE Computer Society 7] D. Braga, S. Ceri, F. Daniel, and D. Martinenghi. Optimization of Multidomain Queries on the Web. VLDB Endowment, 1:562673, 2008 8] R. E. Ca?isch. Monte carlo and quasi-monte carlo methods. Acta Numerica 7:149, 1998 9] Andrea Cali and Davide Martinenghi. Querying Data under Access Limitations. In Proceedings of the 24th International Conference on Data Engineering, pages 5059, 2008 10] Bin Chen, Peter Haas, and Peter Scheuermann. A new two-phase sampling based algorithm for discovering association rules. In KDD 02: Proceedings of the eighth ACM SIGKDD international conference on Knowledge discovery and data mining, pages 462468, New York, NY, USA, 2002 ACM 


11] W. Cochran. Sampling Techniques. Wiley and Sons, 1977 12] Arjun Dasgupta, Gautam Das, and Heikki Mannila. A random walk approach to sampling hidden databases. In SIGMOD 07: Proceedings of the 2007 ACM SIGMOD international conference on Management of data pages 629640, New York, NY, USA, 2007. ACM 13] Arjun Dasgupta, Xin Jin, Bradley Jewell, Nan Zhang, and Gautam Das Unbiased estimation of size and other aggregates over hidden web databases In SIGMOD 10: Proceedings of the 2010 international conference on Management of data, pages 855866, New York, NY, USA, 2010. ACM 14] Arjun Dasgupta, Nan Zhang, and Gautam Das. Leveraging count information in sampling hidden databases. In ICDE 09: Proceedings of the 2009 IEEE International Conference on Data Engineering, pages 329340 Washington, DC, USA, 2009. IEEE Computer Society 15] Loekito Elsa and Bailey James. Mining in?uential attributes that capture class and group contrast behaviour. In CIKM 08: Proceeding of the 17th ACM conference on Information and knowledge management, pages 971 980, New York, NY, USA, 2008. ACM 16] E.K. Foreman. Survey sampling principles. Marcel Dekker publishers, 1991 17] Ruoming Jin, Leonid Glimcher, Chris Jermaine, and Gagan Agrawal. New sampling-based estimators for olap queries. In ICDE, page 18, 2006 18] Shantanu Joshi and Christopher M. Jermaine. Robust strati?ed sampling plans for low selectivity queries. In ICDE, pages 199208, 2008 19] Bing Liu. Web Data Mining: Exploring Hyperlinks, Contents, and Usage Data \(Data-Centric Systems and Applications Inc., Secaucus, NJ, USA, 2006 20] Srinivasan Parthasarathy. Ef?cient progressive sampling for association rules. In ICDM 02: Proceedings of the 2002 IEEE International Conference on Data Mining, page 354, Washington, DC, USA, 2002. IEEE Computer Society 21] William H. Press and Glennys R. Farrar. Recursive strati?ed sampling for multidimensional monte carlo integration. Comput. Phys., 4\(2 1990 22] Hannu Toivonen. Sampling large databases for association rules. In The VLDB Journal, pages 134145. Morgan Kaufmann, 1996 23] Fan Wang, Gagan Agrawal, Ruoming Jin, and Helen Piontkivska. Snpminer A domain-speci?c deep web mining tool. In Proceedings of the 7th IEEE International Conference on Bioinformatics and Bioengineering, pages 192 199, 2007 24] Mingxi Wu and Chris Jermaine. Guessing the extreme values in a data set a bayesian method and its applications. VLDB J., 18\(2 25] Mohammed J. Zaki. Scalable algorithms for association mining. IEEE Transactions on Knowledge and Data Engineering, 12:372390, 2000 


333 


