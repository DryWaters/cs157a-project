   Rule s class approach to scheduling algorithms Martin Dubois DI University of Quebec at Montreal  Montreal, Canada  heavenc@cryptoheaven.com   Mounir Boukadoum DI University of Quebec at Montreal  Montreal, Cana da  boukadoum.mounir@uqam.ca  Abstract 227 As processors on chip gain in numbers and complexity, task scheduling has become an important concern in system design, and the related research has produced substantial and diversified knowledge. As a result, the efficient taping and management of this knowledge has become a concern in itself In particular  it can  bring new ways to improve scheduling algorithms This paper describes a new algorithm class based on  association rule s mining  It serves to both increase the knowledge about a particular scheduling algorithm and show how to improve its performance  Two examples show  how this new methodology can be used to improve makespan  and processor use  globally by optimizing the scheduling method  locally    Index T erms 227s cheduling, data mining, knowledge, list heuristics  directed acyclic graph, performance  1  I NTRODUCTION  T oday\222s applications require increasingly high er  performance with  low er  power consumption and  smaller size As the semiconductor technology goes towards smaller geometries and the chip architectures become larger, the typical system design now  partition s applications into interacting tasks, thus giving rise to complex task allocation and scheduling problems. As a result tools are needed to help ad dress these new problems  Task scheduling has been well studied 1, 2, 3, 4, 5   The  user has an application and a runtime architecture, and the problem is to optimize the execution process according to one or more constraints In most cases the applic ation is modeled by a directed acyclic graph DAG where each node is executed on one processor and each arc represents the  communication link between two nodes. Several methods exist to schedule node execution on a set of processors [1, 4, 6  T h e  differe nt techniques focus on o ptimizing  a limited number of parameters such as speed number of processor, or communication contention However, there is no unique method to compute the cost of a node or arc  6  and this can lead to different performances for t he same algorithm, depending on the scheduling policies used for the DAG   Many scheduling algorithms have been proposed in the literature  each ha ving  its own parameters and also sub algorithms for some  defined as variations with different properties and  strengths  This diversity makes the selection of the optimal one for a  given  application obvious challenge hence the resort to performance metrics and to algorithm  comparison s  The latter  is often based on statistical measures, leading to conclusions th at apply on average and may not suit specific  application s On the other  hand an application has intrinsic information that can be easily represented in a graph and combined with the features of a scheduling algorithm to determine its appropriateness for the application  This paper proposes a new class of scheduling algorithms, obtained by using data mining to  gather information about scheduling algorithm  performance in the form of association rules be t w e e n a n a ppl i c a t i on\222 s  attributes and performance  metrics. The association rules can be screened during a preprocessing stage to determine which algorithm  or variant of  is best suited for the application  The paper is structured as follows: In Section II, we provide background about the scheduling prob lem in section III, we present our methodology to create a rule class algorithm Section IV presents experim ental results for 2 different cases that we tested and Section V concludes this work  2  B ACKGROUND  Given a set of N tasks comprising an applicati on, the allocation and scheduling of each task on an executive unit within a set  deployment architecture starts by creating a high level abstraction of the problem with a DAG   Task scheduling problem  with a DAG  A directed acyclic graph, or DAG is formall y defined as a couple G = <V, E>, where V represents a set of nodes and E a set of forward oriented edges between the nodes Each node is indivisible \(atomic\ and can be duplicated and implemented in software or hardware, and each edge represents the commu nication cost between two nodes  Also each node and each edge have performance constraints imposed upon them by the designer. The DAG  can be implemented with a homogeneous or heterogeneous architecture, distributed or not.  The architecture can satisfy co nstraints such as number of processors, power consumption and speed.  The problem is to allocate and schedule the different nodes and their interactions to meet the imposed constraints   At least four classes of algorithms have been proposed for the sched uling problem: List, clustering, duplicated and random. The list methods include PETS\(Performance effective task  scheduling\, HEFT\(Heterogeneous earliest finish time\ and CPOP \(Critical path on a processor\ [4  and are based on timing levels and priori tized nodes; each node has a priority and the algorithm schedules nodes starting with the one having the highest priority. The CASS Clustering and scheduling system\ method [10 c l u s t e r s  nodes into groups, tapping the advantage of using more processors to  reduce schedule length. The duplicated class method CPFD \(Critical path fast duplicated\ [11 a llo w s  node cloning; the resulting node multiplicity copies methods for reducing communication delays. The random methods mostly use genetic or simulated anneali ng [12 13  t h e y can b e v er y  f as t an d  ar e s i m p l e t o i m p l e m e n t   All the previous techniques make assumptions about the architecture to use and are mostly efficient for specific ones. As a result, their solutions depend on the  graph and 978-1-4577-1846-5/11/$26.00 \2512011 IEEE 732 


   performance estimato rs used  the target architecture  etc  Performance Metrics and estimators  Many performance metrics have been proposed for algorithm comparison. The y can be divided  in two groups The first one evaluates individual algorithm s  The  normalized schedule leng th \(NSL\, the scheduling length ratio \(SLR\ and the speedup ratio [14 a r e e x a m pl e s of  such metrics. NSL defines the system length as the longer time between the first and last tasks; SLR represents the ratio between the length and the critical path, de fined as the longest path in a DAG  including all arcs costs and computing node costs; the speedup ratio for a given application, graph is the execution time ratio between a sequential execution and parallel execution. The second group of metrics compare s a lgorithms. The average percentage degradation \(APD\ and the number of best solution \(NB\ [6 a r e ty p ic a l e x a m p le s  A P D e v a lu a te s h o w  bad an algorithm will perform with respect to another, and NB is the number of time that an algorithm will perform better t han another. These metrics are effective for global algorithm performance evaluation, but we can also derive useful local information knowledge from the DAG  profile The profile of a DAG  can depend on  its width, depth, and the communication to computation ratio \(CCR\, defined as the total communication cost of each arc over the total computation cost of each node. This information provides insight and profile an algorithm to extract its strength and weakness  3  P ROPOSED METHODOLOGY  In  w e pr opos e d a n  automated framework that helps the designer select a scheduling algorithm from a set of alternatives. It relies on a repository of uniformly formatted, validated knowledge available from different sources  p apers, simulations, analyses, etc The framewor k uses a software pattern analogy to represent an algorithm, and includes information about the algorithm\222s  strengths and weaknesses in its defining record In [20  we proposed to learn  the association rule s between DAG  attributes and algorithm performanc e metrics to extract performance information about a scheduling algorithm in the context of a set of applications. We also introduced the   rule  to compare algorithms based on rule confidence differences  see below  In this paper, we propose a new class of scheduling algorithm s based on the attributes found in the  association rules  The aim is to provide the designer with beforehand information on the efficiency of a scheduling algorithm for a given application, thus helping him select the best algorithm    Association Rule mining  Below are the definitions of three important concepts used  in this work  Association rule: Implication x   y  where x  and y are disjoint subjects of a set of binary attributes A={a 1  i=1,2\205,N  that specify a pattern. Said otherwise, an association rule relates the presence of certain attribute instances with that of others. In our case, the association is between DAG  attributes and scheduling algorithm metrics  Confidence of an association rule: Relative measure of how often the c onsequent is true when the antecedent is true     xSupport yxSupport yx Confidence   Support x is the relative frequency of x  within the pattern set under study, where each pattern corresponds to a specific instance of the attribute set  There exist frequent and rare a ssociation rules de pe n di n g on t h e l e v e l of  minimal support. In our context, confidence x   y can be viewed as the estimate of the conditional probability of obtaining scheduling performance y given an application\222s attribute pattern x    rule: Assoc iation rule whose  confidence is the difference of the confidences obtained with two different scheduling algorithms; useful for algorithm comparisons  Rule s clas s approach to scheduling  It related to m eta algorithms that use the DAG  signature in preproces sing  operates in two steps similarly to the L ist class of algorithms  which first creates  a list of node  priorities  and then uses it to schedule node execution  T he rules class approach use s association rule premises as the first step and algorithm select ion as the second  More precisely  1  It extracts information from the DAG  signature  as attribute patterns  2  It searches a list of association rules to find the best algorithm to e xecut e for given set s of attributes A reference algorithm is executed when there is no match  Thus, the rules class of algorithms relies primarily on getting insight about the performance of a  scheduling algorithm 222s  performance \(strength and weakness\ in the presence of different DAG  attribute patterns  This is accomplished with the following algorithm  1  Define a list of algorithm s  AlgoSet  and select a reference algorithm  AlgoRef  whose performance we want to see  improve The refer e nce algorithm can be found by different criteria In this paper, we chose it  arbitrarily  2  For e ach algorithm in AlgoSet  and each metric of interest  a  Create/reuse a  database of application s composed of randomly produced DAG s [9  with attributes as proposed in [15 an d r el ev an t p er f o r m a n ce m et r i cs  computed by applying the algorithm to each DAG  The resulting information DAG  attributes and performance metrics  for each application and algorithm\ is then stored as numerical records  b  F or each DAG  attribute, create a binary sequence whose bits represent the presence or absence of given values or ranges t hereof, so as to create a binary DAG  signature that represents the inclusion exclusion  of those properties  20   The DAG  attributes 222 domain is  viewed as a set of sets R i each one representing the possible values 226 singletons or ranges 226 of  one attribute For instance  if the DAG  signature is E  733 


   the number of nodes in the DAG C is the communication to computation ratio \(CCR and is the parallelism ratio, then, with reference to R R N R C R which  provides the domain  of    N, C  a binary representation of E can be cr eated that  signals the presence or absence of a value of range in each R i 1  c  Repeat b  for the metrics computed in a  to convert them in the form of binary positive \(pattern\ or negative \(anti pattern\ outcomes  d  Define a set of association rules, RuleSet between the DAG  attributes and the metric of interest, and determine the confidence of each one  3  Apply the  r ule to  each element  in Algo S et with  respect to  AlgoRef  to produce a matrix of r ule  Mat1  Using the obtained r ule data, we can then identify th ose  r ule s with a negative value  or positive value in case of a negative metric  and create conditional algorithm execution based on the corresponding antecedents  4  E XPERIMENTAL R E SU LTS  We demonstrate here two rules class algorithms called RC1  a nd RC2  whose  aim is to improv e the performance of a reference algorithm  The first one uses algorithm merging  and the second one  processors  resource reduction  As reference  we use scheduling algorithm s based on HEFT 9   a n d P E T S  4   The different experiments were done with a database of 56000 randomly generated DAG  records  and the RuleList premise was the same for all  N1, N2, N3 N4 C0, C1 C2  1  2 with specific combinations of N and C  such as N0C1  N0C2 and N1C1  also investig ated  This produces a matrix of r ule s  Mat1 which is searched for negative entries thus identifying situations where AlgoRef has a lower confidence level  than  a given alternative in AlgoSet  Then the latter can be used instead of AlgoRef for improve d performance   In the first example  AlgoRef is PETS  AlgoSet is HEFT, and the rule conclusion  M1 is binary and is true when a speedup factor greater than 2 is achieved  Table 1 show s pairwise comparisons between HEFT, PETS, and RC1 which uses either o f the two algorithms  according to the procedure summarized in the previous paragraph  The  compar isons are on makespan define d as the shortest time to execute the DAG  or finish the last task. The numbers indicate the  percentage DAG  records in the database were the first algorithm  in the compared pair produced better equal or worse makespan in comparison to the other  For example HEFT produced a better scheduling length  than PET S in 16.51 cases  We noticed interesting Matl entries  9 for N1  15 for N1 C0  0 for N1C1  and 0  for   1  For example, consider a DAG  profile E = {20, 0.148, and 0.223} and a metric value 1.184. Assume tha t we have R N 20,40,60,80,100 R C 3.0,6.0,20}, R 0.5,1,2}, and R m  1.2,12}. Then, E\222s elements have corresponding binomial representations R N 01000, R C 100, R 100 and the metric\222s value is encoded as R m 10. Thus the binary representation of the attribute list will be 01000  100  100  10, and the differ  M1,M2 with respect to the different attributes and values thereof they represent  N1C2 They show a poorer performance of PETS in compari s on to HEFT  when N1 and C0 occur in the DAG  signature RC1 was created to  select between the two based on the conjunction N1C0 thus leading to better makespan than simply u sing PETS, as Table 1 shows A similar improvement can be see n if using HEFT as AlgoRef; its  comparison result with RC1 globally i.e for the whole database  is lower than with PETS \(9.84% vs. 16.51  Table 1  Pair wise comparison of PETS, HEFT and PET SHEFT globally    HEFT  PETS  RC 1  HEFT    Better  Equal  Worse    16.51  16.73  66.76  9.84  26.87  63.28  PETS  Better  Equal  Worse  66.76  16.73  16.51    3.84  89.48  6.67  RC1   Better  Equal  Worse  63.28  26.87  9.84  6.67  89.48  3.84     If we focus on specific values of  N and C  in the DAG  database  a local comparison  can be made that only consider s th e  records  whe re the DAG  signature includes the specified attribute values A s an example  T able 2 compare s makespan between those graphs in the database that have N1 and C 1 active  in their signature  Indeed locally, we use HEFT algorithm  Table 2  Pair wise comparison of  PETS,HEFT and RC 1  locally    HEFT  PETS  RC2  HEFT   Better  Equal  Worse    54.77  16.68  28.55  0.01  99.99  0 PETS  Better  Equal  Worse  28.55  16.68  54.77    28.5 5  16.68  54.77  RC2   Better  Equal  Worse  0  99.99  0.01  54.77  16.68  28.55     W e can use the same  method olog y for resources  optimization s  In th e case of RC2 we use d the same RuleList  and AlgoRef is HEFT but Algo S et is left empty and  the conclusion rule  i s a speedup factor less than 1  negative metric  We spotted a high r ule value when the conjunction N1C2 is  true As the speedup factor is the  speed ratio when the scheduling  target changes from one processor to many, we created a new algorithm  PutAllN odeOnOneProcessor  to schedule all the nodes on one processor when N1C2 is spotted  Thus, w e created RC 2 to execute PutAllNodeOnOneProcessor when N1 and C2 are  active and execute HEFT otherwise  Table 3 shows the  local comparison using only applications where N1C2 occurs in the DAG  signature w hen using HEFT  with a different number of processors and PutAllNodeOnOneProcessor  Globally, HEFT produce s 2.65 worse scheduling than PutAllNodeOnOneProcessor  This percentage jumps to 72.23  when only considering records where N1 C2 is true   734 


   Table 3 Comparison of HEFT and RC2 locally  Number of p rocessor s  1  2  3   1  HEFT   Better  Equal  Worse  0.0  59.28  40.72  34.22  0 0  65.78  26.16  0 0  73.84  27.77  0 0  72.23   Table 3 shows that when N1C2 is present, HEFT is not  always  the best scheduling algorithm in comparison to using only one processor The result for HEFT with one processor may be puzzling as the alternative also uses one processor  it is due to HEFT and PutAllNodeOnOneProcessor  using different approach es  to schedule  the winning processor. Table 3 also shows  that HEFT with two  processors or more is better than a single processor solution only 27.77 of time This shows how our approach can be used to optimiz e the number of processors to use   In this paper we focus on the average cost of computation and the communication s cost s are generated randomly  as in 4   However various methods exist to comp ute the weights of the nodes and edges  6  W e can use the median value the worst value the best value  etc  T he method proposed  can use  different metrics and estimators and t he user is free to select  the comparison s  he or she wants  T he RuleList premise can also be defined via several ways  Fo r instance  on e can identify a set of  relevant attributes by apply ing  th e method proposed in   to A lgoRef  Then, a  data mining algorithm extracts  the rules list with low or high confidence level s  The identified attribute s also serve to configure the  random DAG generat or  in step 2a of the rules class algorithm   5  C OMPLEXITY OF THE MET HODOLOGY  Our methodology  use s numerical DAG  signatu res  that are converted form records stored  in a database To pro d uce the r ule m at rix  we retrieve and convert information from our database into a temporal database that contain s the  binomial representation of the DAG  signature s and metrics of intere st This c reates a bin DAG Set for each algorithm  each  row representing a scheduling results  metrics with the corresponding signature   For each rule, we extract its confid ence from the temporal database, scanning about bin DAG Set on time  Therefore, we hav e Card\(RuleSet\*Card\(AlgoSet\ scan s  This produces  a rule matrice. To extract the  Rule, there is Card\(RuleSet\*\(Card\(AlgoSet 1\ subtractions. Indeed, we subtract the confidence level about AlgoRef for each AlgoList. Thus, the complexity is linear. The complexity of the rules class approach does not increase  the  complexity of the algorithm because its use s information about DAG s to select which algorithm to execute. The resulting algorithm s such  as RC1 RC2  have the complexity of the more complex algorit hm chosen  6  C ONCLUSION  We propose d a new class of scheduling algorithm s based on association rules. We used the  Rule to compare algorithms  and extract information about anti pattern s The  approach does not use statistics, but analy z es and extracts kn owledge from raw data instead. We have show n that the rule s class  approach with its g oal to spot the weakness es of an  algorithm  and suggest  alternatives  can be useful to improve  the performance of a scheduling algorithm  Moreover it  can be automated in benchmark tools Thanks to its flexibility this n ovel  scheduling methodology efficiently  produc es  algorithms that can reduce makespan and processors resources   R EFERENCES  1   Tang  X et al  Communication conte ntion in apn list scheduling algorithm Science in China Series F: Information Sciences vol  5  2  1  pp. 59 226 69 2009  2   Jin S., et al  A performance study of multi  processor ta sk scheduling algorithms. Journal of Supercomputing, vol. 43, pp 77 226 97  2008  3  Hwang  R e t al  A comparison of multiprocessor  task scheduling algorithms with communication costs. Computers and  Operations Research 35\(3 pp 976 993, 2008  4  Ilavarasan E et al., Performance effective task scheduling algorithm for heterogeneous computing system  In Proc. 4th International Symposium on Parallel and Distributed Computing ISPDC 2005, p p  28 226 38, 4 226 6 July 2005  5  Demiroz B  and Topcuoglu H  R  Static task scheduling wi th a unified objective on time and resource domains. The Computer Journal  vol 49\(6 pp 731 743 2006  6  Sakellariou R  and Zhao H A hybrid heuristic for DAG  scheduling on  heterogeneous systems. In Proc  18th International  Parallel and Distributed Proc essing Symposium,  vol. 2, page 111 b  April 2004  7  Agrawal R  et al  Mining Association Rules  Between Sets of Items in Large Databases", SIGMOD Conference pp  207 216 1993  8  Zhong Y. W et al  A hybrid genetic a lgorithm for tasks scheduling in heterogeneous computing systems. In Proc. of 3 rd  Interna tional Conference on  Machine Learning and Cybernetics, vol 4, pp 2463 226 2468 August 2004  9  Topcuoglu  H., et al  Performance effective and  low complexity task scheduling for heterogeneous computing. IEEE Transactions on  Parallel  and Distributed Systems vol. 13\(3 pp  260 226 274, 2002  1  Liou J. C  and Palis M. A An efficient task clustering heuristic for scheduling dags on multiprocessors. In proc Works hop on Resource Management  Symposium on Parallel and Distributed Processing pp. 152 156 1996  1   Ahmad I  And Kwok  Y. K A new approach to scheduling parallel  programs using task duplication In proc International Conference on Parallel  Processing  vol 2, pp. 47 51 1994  1   Gupta S., et al  Task Scheduling in Multi processor System Using Genetic Algorithm. In proc. 2 nd  International Conference on Machine Learning and Computing  p p. pp 267 226 271, 2010  1  Houshmand M et al  Efficient scheduling of task graphs to multiprocessors using a  combination of modified simulated annealing and list based scheduling  P roc. 3 rd  Int. Symposium on Intelligent Information Technology and Security Informatic s, pp 350 354, 2010  1  Kwok Y. K and Ahmad I  Benchmarking the task graph scheduling  algorithms In p roc 12 th  Int 222 l Parallel Processing Symp osium o n Parallel  and Distributed Processing pp 531 226 537 1998  1  Dubois, M  and  Boukadoum, M  Towards an automated framework for task scheduling  proc International Conference on Microelectronics \(ICM 2010\, Cairo \(Egypt\, Dec. 2010, pp. 479 482  1  Romero, C  et al S  Mining Rare Association Rules from e Learning Data  Proceedings of Third Educational Data Mining conference pp  171 227 179 2010  1  M ierswa, I. et al  YALE: Rapid Prototyping for Complex Data Mining Tasks, in Proc  the 12th ACM SIGKDD International Conference on Knowledge Discovery and Data Mining \(KDD 06  2006  1  Han, J et al  Mining frequent patterns without candidate generation: A frequent pattern tree approach   Data mining and knowledge discovery. Vol.8 \(1\. pp. 53 87, 2004  1  Agrawal R  and Srikant R  Fast algorithms for mining association rules in large databases Proceedings of the 20th International Conference on Very Large Data Bases, VLDB, pages 487 499 Santiago, Chile, September 1994    Dubois M  and  Boukadoum M  Association rules leaning technique for knowledge mining about scheduling algorithm performance Proc NEWCAS  2011 Bordeaux \(France\, June 2011  735 


705 


706 


707 


708 


709 


710 


calculating the weight for each web page for respective web site. The proposed approach uses Visiting Frequency and Time Spent on a Web page as two parameters to measure the weight of each web page To estimate the performance of the proposed two algorithms i.e. FPW and FTPW, discussed in section IV based on the above parameters involved in estimation C. Experimental Results The performance of the proposed approach can be evaluated by comparing the performance of FPW and FTPW algorithms which differ in number of parameters considered for experimentation. The comparison is made by taking the attribute like Visiting Frequency in FPW, and further Visiting Frequency and Time spent on a web page are clubbed together in FTPW as another attribute. The experimental setup uses five users and weights are plotted against various parameters Figure 2 shows the plot of Visiting Frequency v/s Weight of a web page              Figure 2: Plot between frequency and weight Algorithm: FTPW Input: Web traversal path database Output: Weight for each page 1 Calculate PageRank for each page \(PRi 3 2 Initially Set W\(Pi 3 Check the user is registered or not, if YES then 4       whether the user is first time visitor, if YES then 5  return W\(Pi 6    else 7      calculate FW\(Pi 4 


8            calculate TW\(Pi 6 9   SET   W\(Pi Pi Pi 10   return W\(Pi A C B    D 0 0.05 0.1 0.15 0.2 0 5 10 15 20 w ei gh t Visiting Frequency User1 User2 User3 user4 User5 2010 5th International Conference on Industrial and Information Systems, ICIIS 2010, Jul 29 - Aug 01, 2010, India 198  Using the weights calculated in Figure the higher weight for more frequently visited information in FPW algorithm the different the scenario described in Figure 1 for all th plotted in Figure 3            


   Figure 3: Recommendation for Web Path Trave Algorithm  The weight assigned to various pages Visiting Frequency and Time spent on web Figure 4                  Figure 4: Plot between \(frequency + time sp  The Figure 5 gives the details of recomm Traversal for different users by FTPW a weights calculated by considering two para and time spent in Figure 4 which indicates for more frequently visited pages and in term on web pages  0 0.02 0.04 0.06 0.08 0.1 0.12 


0.14 0.16 0.18 W ei gh t Web Pages Us Us Us Us Us 0 0.2 0.4 0.6 0.8 1 1.2 1.4 W ei gh t FTPW \(Frequecy  and 2 which indicate pages. Using this traversal paths in e users have been rsal based on FPW by combining the page is plotted in ent ended Web Path lgorithm and use meters frequency the higher weight s more time spent    


         Figure 5: Recommendation W Algo Figure 6 shows the relative on the synthetic data sets, in w more efficient than FPW algor performance of proposed a increase the complexity of alg and provide better Web Path Tr    Figure 6: Relative Access  The proposed FTPW algorithm parameters which otherwise ar FPW algorithm. A matrix dep comparison between above two parameters are performance ce show that the performance o increase the number of param FPW algorithm to FTPW algori The experimental results d better and provides a methodo optimized Web path traversal past navigation behavior by c page 0 1 2 3 4 5 1 2A 


cc es si bi lit y Ti m e fo r M or e re qu ir ed In fo rm at io n er1\(A->C->D->B er2\(D->B->A->C er3\(D->B->C->A er4\(C->B->A->D er5\(B->A->D->C Time User1 User2 User3 User4 User5 0 0.2 0.4 0.6 0.8 1 1.2 


W ei gh t Web Pages eb Path Traversal based on FTPW rithm  execution for FPW and FTPW hich we can see that FTPW is ithm. Hence, it is clear that the lgorithm increases when we orithm in terms of parameters aversal in less time  ibility time for FPW and FTPW consists of clubbing of various e not available in first proposed icted in the Figure 7 describes proposed algorithms. Here the ntric and a comparison results f the system improves as we eters i.e. when we move from thm rawn for FTPW algorithms are logy for effective, efficient and for various users based on their omputing weight for each web 3 4 5 User FTPW FPW User1\(C->B->A->D User2\(A->B->C->D User3\(B->C->A->D User4\(D->A->C->B User5\(B->D->A->C 2010 5th International Conference on Industrial and Information Systems, ICIIS 2010, Jul 29 - Aug 01, 2010, India 199 Figure 6: Comparison Matrix VI.  CONCLUSION & FUTURE WORK 


 Web Usage Mining have been used in improving Web site design and marketing decision support, user profiling, and Web server system performance. Web page prediction technique is a very important role in web technologies. This paper proposes efficient algorithms for web path recommendation based on Weighted Association Rule. Two factors frequency and time spent were used to decide the web path traversal. The experimental results show that in the proposed approach when we increase the number of parameters for finding the web path the accuracy of the system is enhanced drastically and FTPW produces more accurate results than those achieved by FPW In the future, we shall improve the Web Path Traversal by considering the parameter Data Transfer Rate to provide the accurate Web Path traversal REFERENCES 1] M. S. Chen, X. M. Huang and I. Y. Lin, Capturing User Access Patterns in the Web for Data Mining, Proceedings of the IEEE International Conference on Tools with Artificial Intelligence, pp. 345348, 1999 2]  R. Cooley, B. Mobasher, and J. Srivastava, Web Mining: Information and Pattern Discovery on the World Wide Web, Proceedings of the 9th IEEE International Conference on Tools with Artificial Intelligence, pp 558-567, 1997 3]  B. Mobasher,N. Jain,E. Han et al, Web mining: pattern discovery from World Wide Web transactions, Tech Rep: TR96-050, 1996 4]  C. Shahabi, A. Zarkesh, J. Abidi, V. Shah, Knowledge discovery from user's Web-page navigation,  in Proceedings of the 7th IEEE International Workshop on Research Issues in Data Engineering, 1997 5]  Yue-Shi Lee, Show-Jane Yen, Ghi-Hua Tu and Min-Chi Hsieh, Web Usage Mining: Integrating Path Traversal Patterns and Association Rules, Proceedings of International Conference on Informatics Cybernetics, and Systems \(ICICS'2003 6]  Yue-Shi Lee, Show-Jane Yen, Ghi-Hua Tu and Min-Chi Hsieh, Mining Traveling and Purchasing Behaviors of Customers in Electronic Commerce Environment, Proceedings of IEEE International Conference on e-Technology, e-Commerce and e-Service \(EEE'2004 pp. 227-230, 2004 7]  J. Srivastava, et al. Web Usage Mining: Discovery and Applications of Usage Patterns from Web Data. SIGKDD Explorations, pp. 12-23 2000 


8]  Sergey Brin and Lawrence Page. The anatomy of a large-scale hypertextual Web search engine. Proceedings of the seventh international conference on World Wide Web 7: pp. 107-117, 1998 9]  J. Pei, J. Han, B. Mortazavi-Asl and H.Zhu, Mining Access Patterns Efficiently from Web Logs, Proceedings of the Pacific-Asia Conference on Knowledge Discovery and Data Mining, pp. 396-407 2000 10]  C. H. Cai, A. W. C. Fu, C.H. Cheng and W. W. Kwong, Mining Association Rules with Weighted Items, In Database Engineering and Applications Symposium, Proceedings IDEAS'98, pp. 68  77, 1998 11]  F. Tao, F. Murtagh and M. Farid, Weighted Association Rule Mining using Weighted Support and Significance Framework, In Proceedings of the 9th SIGKDD conference, 2003 12]  Show-Jane Yen, An Efficient Approach for Analyzing User Behaviors in a Web-Based Training Environment, International Journal of Distance Education Technologies, Vol. 1, No. 4, pp.55-71, 2003 13]  Show-Jane Yen, Yue-Shi Lee and Chung-Wen Cho, Efficient Approach for the Maintenance of Path Traversal Patterns, In Proceedings of IEEE International Conference on e-Technology, eCommerce and e-Service \(EEE 14]  M. Spiliopoulou and L. C. Faulstich, Wum: A web utilization miner EDBT Workshop WebDB98, Springer Verlag, 1996 15]  M. S. Chen, J. S. Park and P. S. Yu, Efficient data mining for path traversal patterns,  IEEE Transactions on Knowledge and Data Engineering, pp. 209-221, 1998 16]  H. Yao,H. J. Hamilton, and C. J. Butz, A Foundational Approach to Mining Itemset Utilities from Databases, Proceedings of the 4th SIAM International Conference on Data Mining, Florida, USA, 2004 17]  Z. Chen, R. H. Fowler and A. Wai-Chee Fu, Linear Time Algorithm for Finding Maximal Forward References, Proceedings of International Conference on Information Technology. Computers and Communications  \(ITCC'2003 18]  T. Jing, Wan-Li Zou and Bang-Zuo Zhang, An Efficient Web Traversal Pattern Mining algorithm Based On Suffix Array, Proceedings of the 3rd International Conference on Machine Learning and Cybernetics , pp 1535-1539, 2004 19]  Show-Jane Yen, Yue-Shi Lee and Min-Chi Hsieh, An efficient incremental algorithm for mining Web traversal patterns, Proceedings of the 2005 IEEE International Conference on e-Business Engineering ICEBE05 20]  L. Zhou, Y. Liu, J. Wang and Y. Shi, Utility-based Web Path  Traversal Pattern Mining, Seventh  IEEE International Conference on Data 


Mining Workshops, pp. 373-378, 2007 21]  C. F. Ahmed, S. K. Tanbeer, Byeong-Soo Jeong and Young-Koo Lee Efficient mining of utility-based web path traversal patterns, 11th International Conference on Advanced Communication Technology ICACT09 22]   http://en.wikipedia.org/wiki/PageRank 23] en.wikipedia.org/wiki/Association_rule_mining  Attributes? FPW Algorithm FTPW Algorithm Recognition of User behavior Visiting Frequency Page Rank Time Spent on Web page Page Size Accessibility of required information in less time Improving Web navigation and system design of Web applications  Enhancing server performance 2010 5th International Conference on Industrial and Information Systems, ICIIS 2010, Jul 29 - Aug 01, 2010, India 200 


Enhanced Inte r transaction Association Rules Enhanced Inter transaction Association Rules Enhanced Inter transaction Association Rules Extension of association rules Conditional relationships at multiple different time steps e.g itemset a\(0 0 1 2 You sense Higher data rate than normal AND You see New Route g enerated AND 1 minute a g o you detected checksum gg error packets AND 2 minutes ago your encountered wrong checksum   Implies High Chance of Intrusion Enhanced Rules and Confidence Associative IDS for NextGen Frameworks Dr S Dua LA Tech 21 


Complex Spatio temporal Association Complex Spatio temporal Association Rules Further extension of inter transaction association rules Describe event durations e.g itemset a\(0,X j,Y k,Z Eg  You sense high data rates for X seconds AND new route generated j minutes ago task completed in Y AND new route generated j minutes ago task completed in Y seconds AND checksum error packets received k minutes ago for Z seconds High Chance of Intrusion With highest confidence level in association rules  association rules  Associative IDS for NextGen Frameworks Dr S Dua LA Tech 22 


DMITAR Al ith ARD DMITAR Al gor ith m  ARD Problem Domain Problem Statement and Challenges Aiti Miig bd IDS A ssoc i a ti ve Mi n i n g b ase d IDS  Introduction to data mining Association rule in data mining DMITAR Algorithm  ARD New research Associative IDS for NextGen Frameworks Dr S Dua LA Tech 23 


DMITAR Algorithm DMITAR Difference Matrix Based Inter Transaction Association Rule Miner developed in DMRL Uses vertical data format Differences of the transaction IDs are used to generate extended itemsets Windowless mechanism Associative IDS for NextGen Frameworks Dr S Dua LA Tech 24 


Deep into the Mechanism The DMITAR algorithm is based on lhilii comp l ex mat h emat i ca l assoc i at i ve formulation and proofs Four major parts Four major parts Frequent 1 itemset generation Frequent 2 itemset generation Frequent k itemset generation k>2 Spatio temporal rule formation Associative IDS for NextGen Frameworks Dr S Dua LA Tech 25 


DMITAR, Datasets Used Stock Data Stock Data Daily stock information provided by Yahoo finance Wth Dt W ea th er D a t a Provided by the US Department of Commerce and National Climactic Data Center for 700 locations across US Synthetic Data Provided by a CRU weather generator that uses a Markov chain model to generate simulated weather data for 11 UK sites Associative IDS for NextGen Frameworks Dr S Dua LA Tech 26 


DMITAR Results 1/5 Varying Support DMITAR Results 1/5 Stock Database Support FITI ITPMine PROWL DMITAR 14 6424.7s 132.39s 3.03s 5.556s 16 2348.9s 67.14s 2.14s 4.015s 18 861.92s 34.62s 1.55s 2.89s 20 334.51s 18.89s 1.12s 2.07s 22 143 84s 10 87s 0 87s 1 45s 22 143  84s 10  87s 0  87s 1  45s 24 63.62s 7.15s 0.671s 1.04s Weather Database Support FITI ITPMine PROWL DMITAR 14 36362.6s 893.1094s 5.843s 19.8281s 36362.6s 893.1094s 5.843s 19.8281s 16 11913.04s 378.2188s 3.8906s 13.4375s 18 4116s 170.3438s 2.75s 9.1406s 20 1507s 86.5781s 2.14s 6.203s 22 859.2813s 63.3438s 1.7969s 5.7656s 24 378.5313s 36.1875s 1.4375s 3.5625s Synthetic Dataset Support FITI ITPMine PROWL DMITAR 14 1651.6s 199.843s 3.1406s 17.015s 16 574 32 119 32 2 0938 10 875 16 574  32 s 119  32 s 2  0938 s 10  875 s 18 416.109s 95.31s 1.6094s 7.39s 20 370.25s 83.31s 1.453s 5.8438s 22 265.78s 66.3438s 1.3594s 4.75s 24 133.96s 43.0781s 0.9219s 3.5781s 


DMITAR Rlt  DMITAR  R esu lt s 2  5 Rules Formed Associative IDS for NextGen Frameworks Dr S Dua LA Tech 28 


DMITAR Rl  Varying Maxspan DMITAR  R esu l ts 3  5 Varying Maxspan Associative IDS for NextGen Frameworks Dr S Dua LA Tech 29 


DMITAR Res lts 4/5 Vig Di i DMITAR  Res u lts  4/5 V ary i n g Di mens i ons Associative IDS for NextGen Frameworks Dr S Dua LA Tech 30 


DMITAR Rl  Varying Number of Transactions DMITAR  R esu l ts 5  5 Varying Number of Transactions Associative IDS for NextGen Frameworks Dr S Dua LA Tech 31 


N/C t Rh N ew C urren t R esearc h Problem Domain Problem Statement and Challenges Associative Mining based IDS Associative Mining based IDS Introduction to data mining ii lid ii Assoc i at i on ru l e i n d ata m i n i ng DMITAR Algorithm  ARD h New Researc h Associative IDS for NextGen Frameworks Dr S Dua LA Tech 32 


Further Research Further Research Objectives of Our Intrusion Detection System Development Objectives of Our Intrusion Detection System Development 1 Refine and scale the DMITAR algorithm to suit our application 2 Develop methods for dynamically altering the sensor parameters Our Focus is Securing the NextGen Frameworks with New Technology Technology Associative IDS for NextGen Frameworks Dr S Dua LA Tech 33 


Simulated Sensing Environment Simulated Sensing Environment Screenshots of Data C ollected from S ynthetic Sensors Screenshots of Data C ollected from S ynthetic Sensors Simulated in Our Laboratory Three Steps Slides Collect data Collect data from all sources  all attributes  Select Select the source and their hierarchical attributes attributes to be monitored and Select Select the source and their hierarchical attributes attributes to be monitored  and Sample Sample them at different rates different rates and process them Associative IDS for NextGen Frameworks Dr S Dua LA Tech 34 


Data Collection Simultaneous collection of data screen from ENTITIES aircrafts Associative IDS for NextGen Frameworks Dr S Dua LA Tech 35 Source PRTG Network Monitor software screen shot Demo info www.paessler.com 


Parameter Selection Selection of an ENTITY/aircraft and monitoring its parameters and sensor readings Associative IDS for NextGen Frameworks Dr S Dua LA Tech 36 Source PRTG Network Monitor software screen shot Demo info www.paessler.com 


Sensor Sampling Selecting one sensor/probe and reading it at different resolutions or sampling rates Associative IDS for NextGen Frameworks Dr S Dua LA Tech 37 Source PRTG Network Monitor software screen shot Demo info www.paessler.com 


Si l ti Nt k Si mu l a ti on on N e t wor k Most scenarios can be simulated on a computer or computer network network  The aircrafts and sensors are simulated on a computer network bllb b y ana l ogica l su b stitutions Sensors provide information at different rates Sensors provide information at different rates Need Based Sensor Prioritization NSP and Dynamic Sensing Rate Sampling Associative IDS for NextGen Frameworks Dr S Dua LA Tech 38 


Vulnerability Search Scan 39 Sample UQA script with Nmap performed in DMRL Associative IDS for NextGen Frameworks Dr S Dua LA Tech 39 Source Nmap screenshot with a pearl script  Find Namp on Nmap.org 


Modality Aspect Modality Aspect A Multimodal distribution is a continuous probability distribution with two or more modes of underlying data Mltil d i M u lti p l e mo d es i n our model Associative IDS for NextGen Frameworks Dr S Dua LA Tech 40 Source http://en.wikipedia.org/wiki/File:Bimodal bivariate small.png 


Multi Modality Modality Fusion 41 SENSITIVE  UNCLASSIFIED For Official Use Only Associative IDS for NextGen Frameworks Dr S Dua LA Tech 41 


Emphasis Emphasis Our approach emphasizes on pre empting the attack Our intent is NOT to perform an autopsy to discover attacks Instead we aim to detect and prevent in attacks in real time Associative IDS for NextGen Frameworks Dr S Dua LA Tech 42 


Techniques for Discriminative Rules Techniques for Discriminative Rules Resolution Analysis Features Analyzed at Different Depths Anti Monotonic Principle Modality Aspect Treading into Unexplored Feature spaces Associative IDS for NextGen Frameworks Dr S Dua LA Tech 43 


Representative Outcomes Representative Outcomes Illustration of the Final Analysis Our method shifts between modalities and sampling rates for optimization The blue parallelograms are actual intrusions 44 The blue parallelograms are actual intrusions The Red Green Blue Plots are response of system Associative IDS for NextGen Frameworks Dr S Dua LA Tech 44 


Advantages of Our M ethod Advantages of Our M ethod Exploit the memory v ertical data format utilizes slidin g windows to g form a much larger database to analyze  Flexibility in Choosing what to choose  Choosing what to choose to build the rules Computational and memory efficiency We have a team working only on this aspect 45 Associative IDS for NextGen Frameworks Dr S Dua LA Tech 45 


Preliminary Results Intra transaction Relations Data rate simulator NH-134 Mb HOP PATH update \(Y/N Inference 11.5 Y Y 2 0.120 N N      Y   n 0.345 N NH134 Y/N   Inf 1 0.150 N N 2 0 120 Y N Inter transaction Relations 2 0  120 Y N       5 5.55 0.456 Y Relations  n 0.345 N N Nmap on DMRL nmap.org 


Anticipated Outcome Anticipated Outcome Develop algorithm capable of learning from a given heterogeneous diverse Develop algorithm capable of learning from a given heterogeneous diverse data ff Dynamic algorithmic f ramework designed to shi f t modalities and sampling rates based on complex logic Flexibility of integration into the Snort intrusion detection system 47 Associative IDS for NextGen Frameworks Dr S Dua LA Tech 47 


References References Aircraft Cockpit Image courtesy USAF http://www.faa.gov htt p   www.faa g ov  air traffic  technolo gy  p g  _ gy  Acharya R Dua S Du X Sree V Chua C K Automated Diagnosis of Glaucoma Using Texture and Higher Order Spectra Features To appear in IEEE Transactions on Information Technology in Biomedicine  Du X Dua S 2011 Cancer Prognosis Using Support Vector Regression in Imaging  Modality World Journal of Clinical Oncology 2  1   44 49 Du X Dua S 2010 Salient Frame Extraction Using Support Vector Regression and Motion Features pp 5 Proc of the National Aerospace and Electronics Conference July 14 16 2010 D M P D S 2010 Di i i ti Ft d Cl ifi ti Mthd f D essaue r  M  P  D ua S  2010  Di scr i m i na ti ve F ea t ures an d Cl ass ifi ca ti on M e th o d s f or Accurate Classification 1st ed vol 7704 pp 14 Bellingham WA Proceedings of SPIE Dessauer M P Dua S 2010 Low Resolution Vehicle Tracking using Dense and Reduced Local Gradient Features Maps 1st ed vol 7694 pp 8 Bellingham WA Proceedings of SPIE SPIE 


Acknowledgements Acknowledgements Fundin g A g encies  US 4 1 Million direct fundin g g g 4 g LA BoR NIH NSF AFRL AFOSR and NASA Research Team Samuel Kasimalla Brandy McKnight Dr Pradeep Chowriappa Connor Johnson Vasanth Nair Mihir Chowriappa  Connor Johnson  Vasanth Nair  Mihir Karnik Mohit Jain and Swadheen Songmen Associative IDS for NextGen Frameworks Dr S Dua LA Tech 49 All the respective Logos belong to their owners 


Rf d Rdi R e f erence d R ea di ngs Copyright of cover pages held by respective publishers 


Thank You Questions Thank You  Questions Dr Sumeet Dua E mail sdua@latech.edu Web http://dmrl.latech.edu Associative IDS for NextGen Frameworks Frameworks Dr S Dua LA Tech 51 Image Source roadtrafficsigns.com 


