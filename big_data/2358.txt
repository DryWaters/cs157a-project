A Case Study for Deploying Applications on \nHeterogeneous PaaS Platforms  \nEman Hossny, Sherif Khattab, Fatma Omara, Hesham Hassan \nComputer Science Dept. \nFaculty of Computers and information, Cairo University \nCairo Egypt \n{e.hossny, s.khattab, f.omara, h.hassan}@fci-cu.edu.eg\nAbstract—Cloud Platform-as-a-Service \(PaaS model \nprovides developers with the ability to deploy and manage their \napplications remotely through the cloud and pay only for actual \nusage hours. Currently, there is no standard API for PaaS \nmanagement and deployment; each PaaS provider has its own \nspecific APIs \(e.g., Google AppEngine \(GAE OS nCloud Foundry \(CF considered one \nof the challenges that make some developers worry about using \nPaaS services. Such challenge can be solved by providing a \nstandard or a generic API that overcomes PaaS API \nheterogeneity. The aim of this paper is to report on our effort to \nuse and extend a generic API, namely the COAPS API, which \nsupports deployment and management on Cloud Foundry and \nOpenShift. According to the work in this paper, an extension of \nthe COAPS API is provided to include the deployment on Google \nAppEngine as a case study to demonstrate COAPS API \ngenerality. \nKeywords—PaaS; Heterogeneous PaaS; Generic API; and \nCOAPS API. \nI. INTRODUCTION\nThe cloud computing model aims to provide a pool of \nvirtualized resources as a service. These resources are shared \nby end users and accessed, remotely through the cloud, on \ndemand. They can be scaled up/down based on the user needs \nand the users can only pay for their actual use. The cloud \ncomputing provides three main service models namely: \nSoftware as a Service \(SaaS PaaS Service \(IaaS    and management of applications on heterogeneous \nPaaS platforms.   \nThe PaaS service model aims to provide the developers \nwith APIs to develop, test, deploy, and manage their \napplications remotely through the cloud [1 2]. The main \nbenefit of the cloud PaaS platform is to provide the developers \nthe ability to concentrate on their major tasks without worrying \nabout the installation and maintenance of operating system, \nIntegrated Development Environment \(IED   ninstallation and maintenance to the PaaS cloud providers.  \nHowever, each PaaS provider has its own specific APIs \n\(which may be divided into two parts namely: implementation \nAPI and deployment API deployment API is \nconcerned. Since it is difficult for the developers to be aware of \nall those heterogeneous APIs, a vendor lock-in problem occurs. \nThis latter, means that the developers are locked inside a \nspecific PaaS platform and cannot migrate their applications \n\(i.e., applications become not portable nheterogeneous PaaS platforms. Also, the vendor lock-in \nproblem did not allow the heterogeneous PaaS platforms to \ninteroperate \(i.e., cooperate   specific APIs are GAE1, Windows \nAzure2, OS3, CF4, and Amazon Web Service \(AWS distracts the developers \nbecause of many issues, such as PaaS cloud providers can \nincrease the price, change service level, remove security \npolices, etc. [7]. Although, this problem is likely to lead to \nviolation in the Service Level Agreement \(SLA nanother PaaS platform because two issues: 1 require more \nrefactoring for the application. 2 cannot be transferred between the \ndifferent PaaS providers because each cloud provider has its \nown data format [6]. \nMany efforts have been done to provide a standard or a \ngeneric API that allows the heterogeneous PaaS platforms to \ninteroperate with each other seamlessly and also allow the \nPaaS applications to be migrated between the heterogeneous \nPaaS platforms. \nSellami et al. [8] have provided a generic API, called nCOAPS API, that helps the developers to deploy and manage \n  n1http://code.google.com/appengine\n2www.microsoft.com/azure\n3https://www.openshift.com/\n4http://www.cloudfound ry.com/\n5http://aws.amazon.com/ \n2013 International Conference on Cloud Computing and Big Data\n978-1-4799-2829-3/13 $26.00 © 2013 IEEE\nDOI 10.1109/CLOUDCOM-ASIA.2013.13\n24630 9 4 31 4\ntheir applications independently of any PaaS platform. The \nCOAPS API requires the PaaS applications to be described nthrough a PaaS Application Description Model \(PADM properties, its \nrequired software components \(runtime, framework, and \nservices independently of any PaaS \nplatform. Currently, COAPS API provides the deployment and \nmanagement APIs for only two PaaS platforms namely: Cloud \nFoundry \(CF-PaaS API OS-PaaS API  objectives of this paper are that reporting our \nefforts to use and test COAPS API as a generic API to deploy nand manage applications on heterogeneous PaaS platforms and \nproviding a case study to prove the generalization of COAPS \nAPI. This case study extends the COAPS API to include the \ndeployment on Google App Engine \(i.e., providing GAE-PaaS \nAPI 


COAPS API, how to describe the PaaS applications \nindependently of any PaaS platform using PaaS Application nDescription Model \(PADM platform \nusing COAPS API is provided in section II. A case study for \nextending the COAPS API is specified in section III. In section \nIV, the implementation and testing of the new version of \nCOAPS API is discussed by deploying an application to GAE. \nThe state of the art for the related literature to hide the \nheterogeneity of PaaS platforms is presented in section V.\nFinally, the conclusion and future work are clarified in section nVI. \nII. COAPS API OVERVIEW\nCOAPS API stands for Compatible One Application and \nPlatform Service API [10 It is implemented as \nRepresentational State Transfer \(REST  designing and developing distributed \napplications. The main idea of REST is to use the HTTP \nprotocol to connect between the clients and the servers. The \nRESTful applications use HTTP methods \(i.e., GET, POST nPUT, and DELETE i.e., Create, \nRead, Update, and Delete  generic API that provides the developers \nwith a middleware layer to hide the heterogeneity of the \ndifferent PaaS platforms.  This middleware layer allows \ndevelopers to deploy and manage their applications on any \nPaaS platform [8] [10]. The developers need only to learn the \nCOAPS API to deploy their applications on any PaaS platform \nas long as that PaaS platform is supported by COAPS API. \nCurrently, COAPS API supports only two PaaS platforms \nnamely: Cloud Foundry and Openshift. To allow COAPS API \nto support a new PaaS platform, one needs to add a specific \nimplementation for this new PaaS platform in the COAPS API. \nThe COAPS API architecture is illustrated in Fig. 1.  \nThe COAPS API provides two main resources; application \nand environment. The Application resource represents any \nsoftware program that can be deployed on a PaaS platform. \nThe environment resource refers to the required configurations \nthat are needed by an application to be deployed, such as \nruntime \(e.g., php, ruby, or java e.g., tomcat or \nspring e.g., database   napplication and environment resources namely: \nRESTApplicationManager and RESTEnvironmentManager nrespectively. The RESTApplicationManager interface provides \nprototypes to manage the application \(e.g create, deploy, start, \nstop, and delete application prototypes to manage the environment \(e.g., \ncreate and delete environment nRESTApplicationManager and RESTEnvironmentManager \ncan be re-implemented by each specific PaaS platform which nneeds to be included to the COAPS API. \nBefore using COAPS API to deploy an application to a \nPaaS platform it is required to use PADM to define the \napplication manifest. This latter, describes mainly two \ncomponents PaaS application and PaaS environment. A UML \ndiagram for the main components that constitute the PADM of \nthe COAPS API is illustrated in Fig. 2. The main components \nof the PaaS application manifest are elaborated in section II-A\nand II-B. The deployment scenario through COAPS API is \nspecified in section II-C. Finally, the advantages and \ndisadvantage for using COAPS API are clarified in section II-\nD.  \nA. The PaaS application \nIt is identified by a unique name and is tightened with an \nenvironment. It should define a set of application versions. \nEach application version defines a set of application version \ninstances, which can be run after the application is deployed, \nand specifies the application deployable \(i.e., source archive, \nits content-type, location, and multitenancy supportability   deployable may be \n"artifact" or "file". The "artifact" value refers to the \napplication's source packaging format which may be bundled \nas \(e.g. WAR, JAR, EAR, ZIP, etc file" value refers to a configuration file to \nupload/execute in the target folder once the application is ndeployed \(e.g., an XML file or a script files. Currently, \nCOAPS supports only artifacts format \(personal \ncommunication with Yangui, June 12, 2013 nFig. 1. COAPS API architecture [10] \n247\nFig. 2. UML diagram for PaaS Application Description Model \(PADM the \nCOAPS API\nB. The PaaS environment \nIt is identified by a unique name and should define an \nenvironment template. An environment template should \nspecify the required memory that will be needed by the \ndeployed application instances. For example, when the \ndevelopers need to scale up/down the memory of their napplication instances, it is required to create a new environment \n\(or update an existing one memory size and then \ndeploy the application again. Also, each environment template \nshould define a set of environment nodes and their types \(e.g., \ncontainer such as tomcat or database such as SQL server environment nodes represent the software components \nthat will be needed by the deployed application [8] [10 A \nsample of a PaaS application manifest is depicted in Fig. 3.\nC. Deployment scenario through COAPS API nAfter a PaaS application manifest is identified for an \napplication, the COAPS API can be used to deploy that napplication. A summary of some of the available methods \ninside the COAPS API is specified in \nTABLE 1[10 The required steps to deploy an application \nthrough COAPS API are: \n The developer should select one of the 


supported PaaS \nplatforms \(e.g., CF-PaaS API or OS-PaaS API it. \nFig. 3. PaaS  Application manifest sample \n Select "Create" environment method; it takes a PaaS nenvironment manifest as input. This manifest specifies \nthe required software components that are needed by an \napplication \(e.g., container such as tomcat or database \nsuch as SQL Server method \nreturns an XML file of the newly created environment \nwith a unique envID. This created environment will be \nused later to deploy applications on it.  \n Select “Create” application method; this method takes \na PaaS application manifest as input. This manifest \nspecifies a unique name of the created application, its nhosted environment, application deployable and its \nproperties \(i.e., location and type of the source archive, \nmultitenancy supportability, and required number of \ninstances returns an \nXML file of the newly created application with a unique \nappID. \n Select “Deploy” application method; this method takes \nan appID and an envID as inputs. It calls a specific API \nof the targeted PaaS platform to deploy the given app \non that PaaS platform.  \n Select “Start” application method; it takes an appID as \nan input. It calls a specific API of the targeted PaaS \nplatform to start the given app. Now, the application is \nready to be executed by end users. \nD. Tradeoff for using COAPS API \nFinally, the main advantage of COAPS API is that it allows \nthe developers to use a generic API \(i.e., COAPS API or more applications on heterogeneous PaaS \nplatforms. Thereby, there is no need for the developers to learn nthe different deployment APIs of all the targeted heterogeneous \nPaaS platforms. However, the disadvantage of COAPS API is \nits limitation to deploy and manage the applications on \nheterogeneous PaaS platforms. It did not provide consideration \nabout how to monitor the running applications and manage \ntheir resources \(e.g scale the resources up/down through the \nrun time, migrate the applications in case of fault, etc 8].\n248\nTABLE 1. COAPS API METHODS \nApplication Management Methods\nOperation REST \nMethod\nREST URL Description\nCreate Application POST /app Creates a new application given the app manifest. It returns an XML application \ndescriptor with a unique appID \nDeploy Application POST /app/{appId}/action/\ndeploy/env/{envId nDeploy an app given its appID on an env given its envID\nStart Application POST /app/{appId}/start Start an app given its appID\nStop Application POST /app/{appId}/stop Stop an app given its appID\nDestroy Application DELETE /app/{appId} Delete an app given its appID\nDescribe Application GET /app/{appId} Returns an XML application descriptor for the given appID\nEnvironment Management Methods\nCreate Environment POST /environment Creates a new environment given the env manifest. It returns an XML environment \ndescriptor with a unique envID\nDescribe Environment GET /environment/{envId} Returns an XML environment descriptor for the given appID\nIII. CASE STUDY: EXTENDING THE COAPS API \nA. Motivation for Extending the COAPS API \nActually, we have three motivations to extend the COAPS \nAPI: Firstly, the COAPS API is a generic API and is provided \nas a RESTful java open source under  Apache 2.0 license and \ncan be downloaded from [9]. Secondly,  it is already tested and \nused in two international research projects [8] namely: \nCompatibleOne6, which is an open source projects and its \nobjective is to provide open cloud broker, and EASI-\nCLOUDS7, which aims to provide open source cloud \ninfrastructure with a set of features \(such as interoperability, \nportability, reliability security, etc  interact with the heterogeneous PaaS platforms \nseamlessly. Thirdly, the PADM of COAPS is based on Open \nCloud Computing Interface8 \(OCCI supports the deployment on only two \nPaaS platforms namely: CloudFoundry and Openshift, we \nproved the generalization of this API by extending it to allow \nthe deployment of applications on another PaaS platform in \nour case, Google App Engine are followed to \nextend the COAPS API \n1. A new dummy module is added to the COAPS-Core to \ninclude the GoogleAppEngine-api \(we will call it \nGAE-PaaS API PaaS platforms that are \nsupported the COAPS.  \n                                                          \n6 http://www.compatibleone.org\n7http://easi-clouds.eu/ \n8http://occi-wg.org/  \nFig. 4. GAE module is added to the COAPS API \n2. COAPS API provides PaaS application manifest \nschema that can be used to generate the manifest \nclasses. This schema is used by GAE-PaaS API to \ngenerate the PaaS application manifest classes which \nwill be used later to process an application manifest \nthat is given by the developer to deploy an application.    \n3. GAE-PaaS API includes the deployment and \nmanagement operations to GAE platform through nCOAPS API. However, deploying applications on \nGAE require an account \(with email and password account info is defined in the credentials file \ninside GAE-PaaS API. The developer can update this \nfile to include his account. A snapshot of the \ncredentials file is clarified in Fig. 5.  \n4. GAE-PaaS API creates nEnvironmentManagerRessource class which \nimplements the RestEnvironmentManager interface \nthat is inside the COAPS API. The \nEnvironmentManagerRessource class provides a \nspecific implementation for GAE to the methods 


n\(create, delete, describe, etc creates ApplicationManagerRessource \nclass which implements the RestApplicationManager \n249\ninterface that is inside the COAPS API. The \nApplicationManagerRessource class provides a \nspecific implementation for GAE to the methods \n\(create, deploy, and start applications used \nby developers to deploy their applications to GAE \nplatform [14]. Therefore, we have used appcfg tool in nthe ApplicationManagerRessource class to deploy \napplications to GAE platform through the COAPS \nAPI. \n7 Many other classes are added to GAE-PaaS API to \nprovide utilities to be used by both nApplicationManagerRessource and \nEnvironmentManagerRessource \(e.g., some of these \nutilities are preserving a pool of the created \napplications and the created environment, generating \nlinks for all the REST methods that are defined in the \nApplicationManagerRessource and \nEnvironmentManagerRessource, etc of CloudFoundry and Openshift platforms provide \ndevelopers with client APIs to deploy and manage \(i.e start, \nstop, and delete deployed. On the contrary, \nGoogle App Engine platform did not provide developers with \nclient API to deploy and manage their applications. The \ndevelopers can deploy their applications to GAE platform \neither by using GAE plugin for Eclipse or using Appcfg \ncommand line tool [14]. Since GAE plugin for Eclipse cannot \nbe called as a standalone API and it requires Eclipse Integrated \nDevelopment Environment \(IDE ncommand line tool to implement the deployment methods \ninside GAE-PaaS API. \nIn general, to deploy an application to GAE platform, the \napplication must be implemented by Google plugin. This is \nbecause Google plugin generates WAR directory for the \napplication to be deployed later to GAE platform. This WAR \ndirectory contains the compiled classes of an application and a \nset of configuration files \(e.g., appengine-web.xml and nweb.xml the deployed applications. \nThis is because GAE platform is proprietary and did not \nprovide the developers with management API to stop, restart, \nand delete their deployed applications. However, GAE \nplatform allows the developers to manage their deployed \napplications online from the setting web page of their \napplications Therefore, GAE-PaaS API implements all \nmethods of COAPS-API except Stop Application, Restart \nApplication and Delete Application. These latter, are not \nsupported by GAE-PaaS API. TABLE 2 clarifies a comparison nbetween the currently supported PaaS platforms by COAPS \nAPI. \nTABLE 2. COMPARISON BETWEEN THE SUPPORTED PAAS PLATFORMS BY THE \nCOAPS API \nFeature CF-PaaS API / OS-PaaS API GAE-PaaS API\nDeployment nAPI\norg.cloudfoundry.client.lib and \ncom.openshift.client\nrespectively.\nNo API, only appcfg \ntool is provided\nManagement \nAPI\norg.cloudfoundry.client.lib and\ncom.openshift.client\nrespectively.\nNo API, only the online \nsetting web page of the \napplication is used in \nthe management. \nDeployable \ntype\nWAR archive WAR Directory\nAccording to the work in this paper, some concepts could \nbe concluded: \n The developers can use the same API \(i.e., COAPS \nAPI Adding a new PaaS platform to the COAPS API \nrequires this new PaaS platform to provide a client API \nto be used in the deployment and management of the \napplications through the COAPS API. \n Deploying an application through the COAPS API \nrequires the developer to provide the application's \nsource archive in the same format that is required by the \ntargeted PaaS platform. In other words, the developer \nmust provide WAR archive for his application to be \ndeployed on Cloud Foundry or Openshift. However, the \ndeployment on Google App Engine requires the \ndeveloper to provide WAR directory. \nIV. EXTENDED COAPS API IMPLEMENTATION AND \nTESTING \nAfter illustrating the case study for extending the COAPS \nAPI, we can state that COAPS API provides three nimplementations namely: CF-PaaS API, OS-PaaS API, and \nGAE-PaaS API to support the deployment on CloudFoundry, \nOpenshift, and Google App Engine platforms respectively.  \nSimilar to CF-PaaS API and OS-PaaS API, GAE-PaaS API is \nimplemented using java programming language and is \ndelivered as a RESTful web application \(using Jersey JAX-RS \nlibrary in the implementation  web client to use COAPS API to test the deployment \nand management of applications on CloudFoundry and nOpenshift platforms. So, we will use the same web client to test \nthe deployment of applications on Google App Engine \nplatform. A snap shot of the COAPS API web client is depicted \nin Fig. 6.\nTo deploy an application through the COAPS API, an \napplication manifest needs to be identified based on the PADM \nof COAPS API. We will use the application manifest that is \nspecified in Fig. 3 during our testing. It should remember that nthis application manifest is independent on the targeted PaaS \nplatform \(Google App Engine in this case Besides the \napplication manifest, we need the source archive of the \napplication to start the deployment process. Now, the \ndeployment process is ready to be started. So, we will follow \n250\nthe deployment scenario that is specified in section II-C.\nFirstly, specify the URL of the targeted PaaS platform \(i.e., \nGAE-PaaS API 


nmenu the "Create Environment" method and write the \nenvironment manifest in the Request Body section. An XML n\(that represents the newly created environment create environment \nmethod. Thirdly, select from the Action menu the "Create \nApplication" method and write the application manifest in the \nRequest Body section. It should remember that the path of the \napplication source archive is specified in the application \nmanifest as it is clarified in Fig. 7. The create application nmethod returns an XML \(that represents the newly created \napplication from the \nAction menu the "Deploy Application" method and specify in \nthe Path section the previously created envID and appID.  Once \nan application is deployed, it is become ready to start running. \nThe deploy application method returns the XML application \ndescriptor \(which includes a URL to run the deployed napplication depicted in Fig. 8.\nUnfortunately, GAE-PaaS API did not support methods to \nallow developers to manage restart, stop, and delete from the setting web page of the deployed \napplications.  \nV. RELATED WORK\nMany efforts have been done to help the developers to \ndeploy and manage their applications on heterogeneous PaaS \nplatforms. These efforts could be organized into three \ncategories namely: proprietary APIs, open source APIs, and \nstandards under development. These categories are elaborated \nin section V-A, V-B, and V-C respectively. \nA. Proprietary APIs nSome of the available PaaS platforms provide the \ndevelopers with proprietary APIs which lead to vendor lock-in \nproblem. For example, Google App Engine allows developers \nto deploy their application on Google cloud platform. \nMicrosoft Windows Azure allows the application deployment \nand management on Azure cloud platform. Amazon Web \nService Elastic BeansTalk \(AWS Amazon cloud platform. Openshift \nis established by Redhat and it provides the developers with \nautomatic deployment and management of their applications on \nthe Openshift platform [15].\nAll of the previously mentioned PaaS platforms provide \ndifferent representation of PaaS applications, different \nprogramming languages, and different frameworks which \nincrease the heterogeneity among these PaaS platforms and did \nnot allow the cooperation between them. Also, the developers \nneed to learn different APIs to deploy on these heterogeneous \nPaaS platforms. \n \nFig. 6. COAPS API web client \(Create Environment client \(Create Application Deploy Application response nCloud Foundry is an open source PaaS platform \(only \nsource code is available but there is no documentation that is \n251\nestablished by VMware9.  It provides the developers with \nproprietary APIs that can run on a private cloud. CF helps the \ndevelopers to deploy and manage their applications on the \nCloud Foundry platform 16]. Since the provided APIs by \nCloud Foundry is proprietary, the vondor lock-in problem \noccurs when using this PaaS platform. \nPetcu et al. [17] aim to create an open source API that helps \ndevelopers to implement portable applications that can work on \nmultiple PaaS platforms \(i.e., write once and deploy \nanywhere project is called mOSAIC \(Open Source API \nand platform for multiple Clouds nCloudFoundry. However, it is a fully open source [18] \(i.e., \nsource code and documentation is available it provides \ndifferent levels of abstraction, e.g., Cloud Resources, \nComponents, Drivers \(i.e., Adapters etc. mOSAIC helps \ndevelopers to specify the application requirements through \nusing ontology and to implement applications that are not \ndependent on any programming language because it provides \ngeneric protocols that can be re-implemented  in any \nprogramming language. However, mOSAIC provides different \nlevels \(i.e., layers of APIs, which may lead to overhead when \nmapping between each two successive layers. Also, the \napplications that are implemented by mOSAIC are not PaaS \nindependent instead they are IaaS independent \(personal ncommunication with Craciun, Sept 6, 2013  ndeploy, manage, monitor, and migrate the applications across \nthe heterogeneous PaaS platforms including both private and \npublic clouds. Cloud4SOA is available as an open source and \ncan be downloaded from [19 Cloud4SOA allows the semantic \ninteroperability between the different PaaS platform. Thus, \nCloud4SOA combines three main paradigms namely: Cloud \nComputing, Semantics, and Service Oriented Architecture \n\(SOA when the authors compared between \nCloud4SOA and other PaaS platforms \(such as CloudFoundry Cloud4SOA requires overhead in time. \nSellami et al. [8] provides the COAPS API as an open \nsource and generic API that can be used to deploy and manage \nthe applications on heterogeneous PaaS platforms. However, \nthe COAPS API supports the deployment on only two PaaS \nplatforms namely: Cloud Foundry and Openshift. In this paper, \nwe tried to propose an extension for the COAPS API to allow\nthe deployment on Google App Engine platform. \nC. Standards under Development \nAdvancement of Structured Information \nStandards \(OASIS providing two standards to describe the \napplications independently of any PaaS platform namely: \nCloud Application Management for Platforms \(CAMP 


nApplications \(TOSCA  deploy, manage, and monitor their \napplications on any PaaS platform. Also, it allows the \ndevelopers to migrate their applications between the \nheterogeneous PaaS platforms. CAMP allows the developers to \n n9 www.vmware.com/\nspecify their applications through Platform Deployment \nPackage \(PDP application. This PDP can be \nused later to migrate the application from one PaaS platform to \nanother. \nTOSCA 21] aims to provide a grammar to help the \ndevelopers to describe the PaaS applications through topology \nand orchestration. Topology is used to define the structure of \nthe application's services while orchestration is used to define \nhow to manage these services. TOSCA represents an \napplication as a set of nodes where each node has a set of \nrequirements and provides a set of capabilities that can be\nneeded by another node Therefore, the relationships between \nnodes should be defined. TOSCA provides Cloud Service \nARchive \(CSAR for each application. CSAR contains all the \ndata \(e.g., source archive and manifest nand manage the application on a specific PaaS platform. The \nmain problem with TOSCA and CAMP is that they are still \nunder the development and may require more modifications. It \nis noted that besides the PADM of COAPS API is based on \nOCCI standards, it follows the same structure of TOSCA and \nCAMP to describe the PaaS applications [8]. TABLE 3\nsummarizes the currently available PaaS platforms. \nTABLE 3. AVAILABLE PAAS PLATFROMS \nPaaS Platform Proprietary Open Source Overhead\nStandards \nunder\nDevelopment\nGoogle App \nEngine GAE AWS OS CF X X\nVI. CONCLUSIONS AND FUTURE WORK\nThe aim of this paper is to report our efforts to use and test \nCOAPS API as a generic API to deploy and manage \napplications on heterogeneous PaaS platforms, and provide a \ncase study to ensure the generalization of COAPS API. This \ncase study extends the COAPS API to include deployment on nGoogle App Engine \(i.e., providing GAE-PaaS API focus on providing deployment API \nto help the developers to deploy and manage their applications \non heterogeneous PaaS platform, we plan to extend the COAPS \n252\nAPI to provide an implementation API besides the deployment \nAPI. This implementation API will be considered as a \nmiddleware layer \(or abstraction layer helps the \ndevelopers to develop their applications using only one format \nthen use the COAPS API to deploy on any PaaS platform. By \nthis way, the developers will develop their applications only \nonce and deploy them on multiple PaaS platforms.  \nACKNOWLEDGMENT \nThis work was funded by ITIDA ITAC under the umbrella \nof the ITEA2 EASI-CLOUDS project. \nREFERENCES\n[1] B. Furht and A. Escalante, Handbook of Cloud Computing. Springer-\nVerlag New York Inc, 2010. \n[2] R. Buyya, J. Broberg, and A. Goscinski, Cloud Computing Principles \nand Paradigms Wiley Press, New York, USA, 2011. \n[3] E. Hossny, S. Salem, and S. Khattab, “Towards automated user-centric nCloud Provisioning: Job provisioning and Scheduling on heterogeneous \nvirtual machines,” in proceedings of the 8th international conference on \ninformatics and Systems \(INFOS  Semantic Interoperability Framework,” 2011. \n[Online]. Available nhttp://www.cloud4soa.eu/sites/default/files/D1.2_Cloud4SOA Cloud \nSemantic Interoperability Framework.pdf n[5] D. Zeginis, F. D’Andria, S. Bocconi, J. Gorronogoitia Cruz, O. Collell \nMartin, et al., “A user-centric multi-PaaS application management \nsolution for hybrid multi-Cloud scenarios,” Scalable Computing: \nPractice and Experience, vol. 14, no. 1, pp. 17–32, April. 2013. \n[6] M. A. Babar and M. A. Chauhan, “A Tale of Migration to Cloud \nComputing for sharing experiences and observations,” in Proceedings of \nthe 2nd International Workshop on Software Engineering for Cloud \nComputing, 2011, pp. 50–56. \n[7] I. Roth, “Cloud Got You Locked-in? Avoid it by Choosing an Open \nPaaS,” 2011. [Online]. Available nhttps://www.openshift.com/blogs/cloud-got-you-locked-in-avoid-it-by-\nchoosing-an-open-paas. \n[8] M. Sellami S. Yangui, M. Mohamed, and S. Tata, “PaaS-independent \nProvisioning and Management of applications in the Cloud,” in IEEE \n6th International Conference on Cloud Computing \(CLOUD 2013  Source.” [Online]. Available:\ngit://gitorious.ow2.org/ow2-compatibleone/coaps.git. \n[10] T. Sudparis, “The Compatible One Application and Platform Service \( \nCOAPS  Architectural Styles and the Design of Network-based \nSoftware Architectures,” Ph.D. thesis, University of California, Irvine, \n2000. \n[12] D. M. ELKSTEIN, “Learn REST: A Tutorial.” [Online]. Available nhttp://rest.elkstein.org/2008/02/what-is-rest.html. \n[13] “The EASI-CLOUDS Project Description.” [Online Available: \nhttp://easi-clouds.eu/2012/02/03/project-description/. \n[14] “Appcfg Command Line Tool.” [Online Available: \nhttps://developers.google.com/appengine/docs/java/tools/uploadinganap\np.\n[15] “What is OpenShift Online]. Available: \nhttps://openshift.redhat.com/app/platform. \n[16] “VMware Unveils Open Source PaaS Cloud Foundry.” [Online]. \nAvailable: http://www.infoq.com/news/2011/04/VMWare-Cloud-\nFoundry. \n[17] D. Petcu, M 


Frˆ, C. Craciun, S. Panica, M. Neagul, et al., “Towards \nOpen-Source Cloudware,” in 2011 Fourth IEEE International \nConference on Utility and Cloud Computing, 2011, pp. 330–331. \n[18] “mOSAIC.” [Online Available:   http://developers.mosaic-\ncloud.eu/confluence/display/MOSAIC/mOSAIC. \n[19] “Cloud4SOA source code.” [Online]. Available: \nhttps://github.com/Cloud4SOA/Cloud4SOA. \n[20] M. Carlson, M. Chapman, A Heneveld, S. Hinkelman, D. Johnston-\nWatt, et al., “Cloud Application Management for Platforms,” Tech. \nRep 2012. \n[21] TOSCA_Committee, “Topology and Orchestration Specification for \nCloud Applications,” Tech. Rep November 2012.  \n253\n 


process the JSON data into an intermediary\ndata format or do any processing on the message itself.\nMongoDB however must convert the data to BSON, a bi-\nnary based implementation of JSON. This first requires parsing\nthe JSON into Ruby’s native hash structure and from there\nconverting it to BSON data. JSON parsing would be required\nin any application performing this task and so as a real world\ntest, it is fair to include this load during MongoDB’s tests.\nThe YAJL C library is used in these tests which is currently\nconsidered to be one of the most efficient implementations\navailable. The Ruby MongoDB driver is also using the native\nC BSON driver, so the use of Ruby is not unfairly affecting\nthe results.\nHowever to determine whether the performance issues are\nin the JSON library, an additional test was done where the data\nwas converted to a hash only once. This hash was then passed\nto the MongoDB driver. This was repeated for both document\nsizes and get the results in table V and VI for both the 1KB\nand 3KB tests respectively.\nTABLE V. TIME TAKEN TO INSERT 1KB DOCUMENTS INTO\nMONGODB PRE-HASHED\nNumber of inserts 1,000 64,000 256,000\nAverage time taken \(seconds 4.79 19.12\nThroughput \(inserts per second TO INSERT 3KB DOCUMENTS INTO\nMONGODB PRE-HASHED\nNumber of inserts 1,000 64,000 256,000\nAverage time taken seconds inserts per second tests demonstrate that a significant amount of the\ntime is being spent parsing the JSON to a Ruby hash With\nthe 1KB documents, performance increased by approximately\n38.4% and by 52.6% for the 3KB documents. This suggests\nthat as the complexity and size of the document increases,\nthe time required to parse it also increases. However despite\nremoving the JSON parsing from the test, CakeDB remained\n5.4 times faster in the 1KB test and 5.5 times faster in the\n3KB test.\nD. Conclusions\nThe initial tests with both 1KB and 3KB documents\nshowed that CakeDB has better throughput for handling in-\nserts. This is due to its low impact client, streaming inserts\nand latched insert handling on the database itself. The results\ndemonstrate that a specialized database can out perform a\ngeneral purpose database and that CakeDB has significant\nperformance benefits over MongoDB. Additional tests showed\nthat even with pre-hashed datasets and using bulk inserts,\nMongoDB was not able to approach the performance offered\n63\nby CakeDB. This suggests that the performance difference is\nnot simply due to external overhead \(such as JSON parsing in industry there are numerous workloads that do\nnot lend themselves well to a ‘scale out’ approach. This paper\nproposed a disk based approach for storing and then retrieving\nsequential data. By using disk rather than RAM as the main\nform of storage, this approach is able to store significantly\nmore data on a given machine.\nXV. FUTURE DEVELOPMENTS\nCurrently CakeDB only supports simple time range based\nqueries. This works well for reporting, but limits its applica-\nbility to more general use cases. To address this, support is\nbeing added for BSON \(Binary JSON allow for\nricher and more precise queries.\nAlthough CakeDB did not initially focus on read perfor-\nmance, in general usage, read performance was significantly\nbetter than expected. Further research will be undertaken to\ndetermine whether or not such an approach could yield similar\nread performance to current systems \(such as MongoDB Data\nraises questions as to how value can or should be defined.\nIt could be said that the value of data consists of both\nintrinsic and extrinsic value. Further research will be conducted\nto see whether pricing algorithms \(such as those used in\npricing financial derivatives value\nbenchmark.\nREFERENCES\n[1] R. Kallman, H. Kimura, J. Natkins, A. Pavlo, A. Rasin, S. Zdonik,\nE. Jones, S Madden, M. Stonebraker, Y. Zhang et al., “H-store: a high-\nperformance, distributed main memory transaction processing system,”\nProceedings of the VLDB Endowment, vol. 1, no. 2, pp. 1496–1499,\n2008.\n[2] M. Stonebraker D. Abadi, A. Batkin, X. Chen, M. Cherniack, M. Fer-\nreira, E. Lau, A. Lin, S. Madden, E. O’Neil et al C-store: a column-\noriented dbms,” in Proceedings of the 31st international conference on\nVery large data bases. VLDB Endowment, 2005, pp. 553–564.\n[3] J. Petrovic, “Using memcached for data distribution in industrial envi-\nronment,” in Systems, 2008. ICONS 08. Third International Conference\non. IEEE, 2008, pp 368–372.\n[4] P. Membrey, E. Plugge, and T. Hawkins, Definitive Guide to MongoDB.\nApress, 2010.\n[5] J. Lennon Beginning CouchDB. Apress, 2009.\n[6] J. Anderson, J. Lehnardt, and N. Slater, CouchDB: The Definitive Guide:\nTime to Relax. O’Reilly Media, 2010.\n[7] S. Vinoski, “Concurrency and message passing in erlang 2012.\n[8] F. Cesarini and S. Thompson, Erlang programming: A concurrent\napproach to software development O’Reilly Media, Incorporated,\n2009.\n[9] J. Armstrong, “Making reliable distributed systems in the presence of\nsoftware errors,” Ph.D. dissertation, KTH, 2003.\n[10] ——, “How erlang views the world and what we have learned in the\nlast 25 years of programming distributed systems.” EPTCS 58, 2011.\n[11] ——, “erlang Communications of the ACM, vol. 53, no. 9, pp. 68–75,\n2010.\n[12] M. Odersky, P. Altherr, V. Cremet, B. Emir S. Maneth, S. Micheloud,\nN. Mihaylov, M. Schinz, E. Stenman, and M. Zenger, “An overview of\nthe scala 


programming language,” Technical Report IC/2004/64, EPFL\nLausanne, Switzerland, Tech. Rep., 2004.\n[13] P Haller and M. Odersky, “Scala actors: Unifying thread-based and\nevent-based programming,” Theoretical Computer Science, vol. 410,\nno. 2, pp. 202–220, 2009.\n[14] B. Hausman, “Turbo erlang: Approaching the speed of c Implemen-\ntations of logic programming systems, pp. 119–135, 1994.\n[15] J. Larson, “Erlang for concurrent programming,” Communications of\nthe ACM, vol. 52, no. 3, pp. 48–56, 2009.\n[16] J. Armstrong, “Programming Erlang: Software for a Concurrent World,”\n2007.\n64\n 


t t t t t t t t t t t t t t t t t t t t t t t t t t t t t t t t t t t t t t t t t t t t t n9 The SN RF/IF front-end design assumes the TDRSS \nDigital Signal Distribution \(TDSD architecture, \ncirca July 2009.\t t t n9\t n\t n2. Codeword buffering delay – we assume the \ncodeword frame synchronization mechanism will \nrequire 3 code frames to acquire and to confirm \nframe sync.  Let R denote the data rate.  Thus the \ncodeword buffering delay for DSN missions and \nSN/NEN missions are 3x2048/R and 3x4500/R \nrespectively \(in unit of seconds 


Frame buffering delay – we assume a Space Link \nExtension \(SLE acquired and confirmed in one frame.  \nThus the frame buffering delay is 10240/R \(in unit \nof seconds Ground transmission delay – from prior statistics \nfor DSN data delivery over the NISN lines, we \nobserve that the long-haul latency between DSN \nsites and JPL Central is approximately 2 times the \npropagation delay.  As ground transmission latency \nis a small fraction compared to the other delays, we \nuse the rough estimation of two times propagation \ndelay to model the ground transmission delay.   \n \nUsing the Straight-Forward Leveling Scheme we estimate \nthe link sizes of the network paths of the four ISE options \nfor the “base” case and high” case traffic scenarios, both \nfor bulk science latency requirements of 1 hour and 8 hours nrespectively.  The aggregated WAN bandwidths of the four \nISE options for both cases are given in Tables 1 and 2.   \n \n \nTable 1: Aggregated WAN Bandwidths \(Gbps Straight-Forward \nLeveling Scheme \n \n \nTable 2: Aggregated WAN Bandwidths \(Gbps Eight Hours, Straight-Forward \nLeveling Scheme \n \nSimilarly we apply the 2-State Markov Leveling Scheme, \nand the aggregated WAN bandwidths of the four ISE \noptions for the base and high cases are given in Table 3 \n\(with bulk science latency of 1 hour with bulk \nscience latency of 8 hours Aggregated WAN Bandwidths \(Gbps nTable 4: Aggregated WAN Bandwidths \(Gbps Scheme \n \nTo validate the accuracy of the leveling schemes, we choose \nthe DSN’s GSS-MOC links for the ISE option-1 for the case \nwhen the bulk science latency requirement is one hour, and \ncompare the bandwidth estimates generated by the Straight-\nForward Leveling Scheme and those generated by direct \nsimulation using MACHETE10.  The comparison results are \nshown in Table 5.   \n \n \nTable 5: Comparison of “Straight-Forward Leveling \nScheme with MACHETE Simulation for ISE Option-1 \n \nThe above comparison indicates that the straight-forward” \nleveling scheme is a close approximation to the Qualnet \ndirect simulation in the case when the bulk science latency \nrequirement is relatively small \(one hour estimation results generated by the analytical \nleveling approach can be used in costing of the architecture noptions11.    \n \nThe end-to-end traffic flow simulations reveal the following \ninteresting facts:   \n1. For ISE-3 and ISE-4, the GSS-INOC links are real-\ntime bit streams and the link sizes are driven by the ninstantaneous aggregated data rates.   \n\t t t t t t t t t t t t t t t t t t t t t t t t t t t t 


t t t t t t t t t t t t t t t t t t t t t t t t t t t n10\t NASA JPL’s Multi-mission Advanced Communication \nHybrid Environment for Test and Evaluation.   \n11 WAN cost is a major recurring cost component for the \nISE options, and the INA Study Review Board has decided \nto do costing analysis based on the bulk science latency \nrequirement of one hour.   \n10\t n\t n2. All other links are store-and-forward links, and the \nlink sizes are driven by the combined effects of nmission data rates, data types with different latency \nrequirements, and duty cycles.   \n3. For ISE-3 and ISE-4, the aggregated WAN \nbandwidths are insensitive to data type latency \nrequirements as their WAN bandwidths are \ndominated by the real-time GSS-INOC links.   \n4. For ISE-4 with two different bulk science latency \nrequirements, the aggregated WAN bandwidths for \nthe high-case are only 20% higher than those of the nnominal case.  This is because the ISE-4 WAN \nbandwidths are dominated by GSS-INOC links that \ntransport RF/IF samples, and are independent of \nthe data rates.   \n5. For ISE-3, ISE-4, and ISE-5, the aggregated WAN nbandwidths of the “high” case are approximately \nthree times as those of the “base” case.  This is nconsistent with the fact that the “high” case \nconsists of future mission data rates that are 3 times \nthose of the “base” case.   \n6. The WAN bandwidths of ISE-3 and ISE-4 are \nmuch higher than those of ISE-1 and ISE-2.   \n \n \nV. CONCLUDING REMARKS AND FUTURE WORK \n \nIn this paper, we describe new leveling schemes to model \nthe traffic flow and buffering mechanism of a large-scale \nstore-and-forward network.  We apply these techniques to \nestimate the wide area network \(WAN options of the \nproposed Integrated Space Communication and Navigation \n\(ScaN improve the fidelity \nof the leveling schemes and enhance the INA Study are as \nfollows:   \n1. Use statistical description to define link bandwidth \nrequirements.  The current analysis uses the min-\nmax approach to estimate the link sizes of a \nnetwork as described in Section 4.  A better \napproach to quantify the link sizes is to describe \nthe individual link size in terms of mean and \nvariance based on the simulated traffic that flows \nthrough the link.  By invoking the Gaussian \nassumption and using the 2nd order statistics ngathered from the traffic flow simulation, one can \nspecify the link sizes based on the statistical nconfidence level to prevent overflow.   \n2. Provide data type modeling for each individual \nmission.  The current analysis makes blanket \nassumptions on mission data types across all the \nmissions as described in 


Section 4.  When data \ntype allocation information is available for an \nindividual mission, we can implement the specific \ndata type allocation for that particular mission to \nimprove the simulation fidelity.   \n3 Include other latency contributions.  The current \nanalysis only models the store-and-forward delay \nbased on the latency requirements of the data types, \nwhich accounts for the majority of the latency in \nthe data delivery operation.  We can improve the \naccuracy of the analysis by modeling the additional \nlatency contribution of codeword buffering delay, \nframe buffering delay, and ground transmission \ndelay as described in Section 4.   \n \n \nACKNOWLEDGEMENT \nThe authors would like to thank John Segui for his \nengineering and simulation support, and Loren Clare for his \ninsightful comments.  This work was carried out at the Jet nPropulsion Laboratory, California Institute of Technology, \nunder a contract with the National Aeronautics and Space \nAdministration.  The research was supported by the \nNASA’s Space Communication and Navigation SCaN  http://www.scalable-networks.com/.   \n[2] Opnet Technologies website: http://www.opnet.com/.   \n[3] K. Cheung D. Abraham, “End-to-End Traffic Flow  \n      Modeling of the Integrated SCaN Network,” the  \n Interplanetary Network Progress Report, Volume 42- \n      189, May 15, 2012.   \n \n11\t n\t nBIOGRAPHIES \nKar-Ming Cheung is a Principal Engineer \nand Technical Group Supervisor in the \nCommunication Architectures and Research \nSection \(332 deep-\nspace and near-Earth communication \nsystems and architectures.  Kar-Ming Cheung received \nNASA’s Exceptional Service Medal for his work on \nGalileo’s onboard image compression scheme.  He has \nauthored or co-authored 30+ journal papers and conference \npapers in the areas of error-correction coding, data ncompression, image processing, and telecom system \noperations.  Since 1987 he has been with JPL where he is ninvolved in research, development, production, operation, \nand management of advanced channel coding, source ncoding, synchronization, image restoration, and \ncommunication analysis schemes.  He got his B.S.E.E. \ndegree from the University of Michigan, Ann Arbor in \n1984, his M.S. degree and Ph.D. degree from California nInstitute of Technology in 1985 and 1987 respectively.   \n \nDr. Esther Jennings is a Team Lead and \nSenior Member of Technical Staff at \nScalable Networks Technologies. Prior to \nthis, she was a research staff with the \nCommunications Architectures and \nResearch Section of the Jet Propulsion Laboratory where \nshe was the task manager of “Hybrid Simulation \nEnvironment for the Interplanetary Network” under the \nInterplanetary Network Directorate Information Technology \nProgram. She received a Ph.D. in Computer Science from \nLule University of Technology, Sweden. After that, she \nwas a postdoctoral fellow at the Industrial Engineering nDepartment at Technion, Israel Institute of Technology. She \nalso worked as an assistant professor at the Computer \nScience Department of California State Polytechnic \nUniversity, Pomona. \n \n 


MIT Com-\nmonality study, a 16 firm investigation\nof platforming returns. Dr. Cameron’s\ncurrent clients include Fortune 500 firms\nin high tech, aerospace, transportation,\nand consumer goods. Prior to MIT,\nBruce worked as an engagement man-\nager at a management consultancy and as a system engineer\nat MDA Space Systems, and has built hardware currently in\norbit. Dr. Cameron received his undergraduate degree from\nthe University of Toronto, and graduate degrees from MIT.\nDr. Edward F. Crawley received an\nSc.D. in Aerospace Structures from MIT\nin 1981. His early research interests\ncentered on structural dynamics, aeroe-\nlasticity, and the development of actively\ncontrolled and intelligent structures. Re-\ncently, Dr. Crawleys research has fo-\ncused on the domain of the architecture\nand design of complex systems. From\n1996 to 2003 he served as the Depart-\nment Head of Aeronautics and Astronautics at MIT, leading\nthe strategic realignment of the department Dr. Crawley is a\nFellow of the AIAA and the Royal Aeronautical Society \(UK academies of engineering.\n15\nHe is the author of numerous journal publications in the\nAIAA Journal, the ASME Journal, the Journal of Composite\nMaterials, and Acta Astronautica. He received the NASA\nPublic Service Medal Recently, Prof Crawley was one of\nthe ten members of the presidential committee led by Norman\nAugustine to study the future of human spaceflight in the US.\nBernard D. Seery is the Assistant Di-\nrector for Advanced Concepts in the Of-\nfice of the Director at NASA’s Goddard\nSpace Flight Center \(GSFC include assisting the Deputy\nDirector for Science and Technology\nwith development of new mission and\nmeasurement concepts, strategic analy-\nsis, strategy development and investment\nresources prioritization Prior assign-\nments at NASA Headquarters included Deputy for Advanced\nPlanning and Director of the Advanced Planning and In-\ntegration Office \(APIO and Evaluation \(PA&E DAA and Physical Research \(OBPR Directorate, Code 600, at \(GSFC bachelors of science in physics, with emphasis in\nnuclear physics. He then attended the University of Ari-\nzona’s School of Optical Sciences, and obtained a masters\ndegree in Optical Sciences, specializing in nonlinear optical\napproaches to automated alignment and wavefront control\nof a large, electrically-pumped CO2 laser fusion driver. He\ncompleted all the course work for a PhD in Optical Sciences\nin 1979, with emphasis in laser physics and spectroscopy. He\nhas been a staff member in the Laser Fusion Division \(L-\n1 Alamos National Laboratories \(LANL working on innovative infrared laser auto-alignment\nsystems and infrared interferometry for target alignment for\nthe HELIOS 10 kilojoule, eight-beam carbon dioxide laser\nfusion system. In 1979 he joined TRW’s Space and Defense\norganization in Redondo Beach, CA and designed and de-\nveloped several high-power space lasers and sophisticated\nspacecraft electro-optics payloads. He received the TRW\nPrincipal Investigators award for 8 consecutive years.\nDr. Antonios A. Seas is a Study Man-\nager at the Advanced Concept and For-\nmulation Office ACFO Electro-Optics branch where\nhe focused on optical communications\nand the development of laser systems\nfor space applications. Prior to joining\nNASA in 2005 he spent several years in\nthe telecommunication industry developing long haul sub-\nmarine fiber optics systems, and as an Assistant Professor\nat the Bronx Community College. Antonios received his\nundergraduate and graduate degrees from the City College of\nNew York, and his doctoral degree from the Graduate Center\nof the City University of New York. He is also a certified\nProject Management Professional.\n16\n 


1483\nSUB-NYQUIST SAMPLING RATES\nMustafa Al-Ani, University of Westminster, United Kingdom; Bashar Ahmad, University of Cambridge, \nUnited Kingdom; Andrzej Tarczynski University of Westminster, United Kingdom\nTPa-8.10: OPPORTUNISTIC TRANSMITTER SELECTION FOR SELFLESS 1488\nOVERLAY COGNITIVE RADIOS\nMohammad Shaqfeh, Texas A&M University at Qatar, Qatar; Ammar Zafar, King Abdullah University \nof Science and Technology, Saudi Arabia Hussein Alnuweiri, Texas A&M University at Qatar, Qatar; \nMohamed-Slim Alouini, King Abdullah University of Science and Technology, Saudi Arabia\nTPa-8.11: A GAME THEORETIC POWER CONTROL FRAMEWORK FOR 1493\nSPECTRUM SHARING IN COMPETITIVE ENVIRONMENTS\nRaghed El-Bardan, Swastik Brahma, Pramod K. Varshney, Syracuse University, United States\nTPa-8.12: COGNITIVE RADIO TRANSMISSION STRATEGIES FOR PRIMARY ...........................................1498\nERASURE CHANNELS\nAhmed ElSamadouny, University of Texas at Dallas, United States; Mohammed Nafie, Ahmed Sultan, \nNile University Egypt\nTPa-8: RELAYS IN COMMUNICATIONS\nTPa-8.1: OPTIMIZED RECEIVER DESIGN FOR DECODE-AND-FORWARD 1535\nRELAYS USING HIERARCHICAL MODULATION\nTu Nguyen, Broadcom Corporation, United States; Pamela Cosman, Laurence Milstein, University of \nCalifornia, San Diego, United States\nTPa-8.2: OPTIMAL LINEAR-COMBINING RECEIVER FOR 1540\nDECODE-AND-FORWARD RELAYS USING SUPERPOSITION CODING\nTu Nguyen, Broadcom Corporation, United States; Laurence Milstein, University of California, San \nDiego, United States\nTPa-8.3: ALTERNATE RELAYING AND THE DEGREES OF FREEDOM OF 1545\nONE-WAY CELLULAR RELAY NETWORKS\nAya Salah, Amr El-Keyi Mohammed Nafie, Nile University, Egypt\nTPa-8.4: DISTRIBUTED AF BEAMFORMING RELAY NETWORKS UNDER 1550\nTRANSMIT POWER CONSTRAINT\nKanghee Lee, Hyuck M. Kwon Edwin M. Sawan, Wichita State University, United States; Hyuncheol \nPark, Korea Advanced Institute of Science and Technology, Republic of Korea\nTPa-8.5: JOINT TRANSMIT DESIGN AND NODE SELECTION FOR 1555\nONE-WAY AND TWO-WAY UNTRUSTED RELAY CHANNELS\nJing Huang, A. Lee Swindlehurst, University of California, Irvine, United States\nTPa-8.6: WIRELESS PHYSICAL LAYER SECURITY ENHANCEMENT WITH  ..............................................1560\nBUFFER-AIDED RELAYING\nJing Huang, A. Lee Swindlehurst, University of California, Irvine, United States\nTPa-8.7: TRAINING SLOT ALLOCATION FOR MITIGATING ESTIMATION  ................................................1565\nERROR PROPAGATION IN A TWO-HOP RELAYING SYSTEM\nQian Gao, Gang Chen, Yingbo Hua, University of California, Riverside United States\nxxv\nTPa-8.8: TRANSMIT OUTAGE PRE-EQUALIZATION FOR 1570\nAMPLIFY-AND-FORWARD RELAY CHANNELS\nFernando Sanchez, Gerald Matz, Vienna University of Technology, Austria\nTPa-8: ADAPTIVE FILTERING\nTPa-8.1: A GRADIENT-CONTROLLED IMPROVED PROPORTIONATE 1505\nMULTI-DELAY FILTER\nJie Yang, Texas Instruments United States; Gerald Sobelman, University of Minnesota, United States\nTPa-8.2: COMPLEX PROPORTIONATE-TYPE AFFINE PROJECTION  ...........................................................1510\nALGORITHMS\nKevin Wagner Naval Research Laboratory, United States; Miloš Doroslovacki, George Washington \nUniversity, United States\nTPa-8.3: RADAR WAVEFORM DESIGN IN ACTIVE COMMUNICATIONS 1515\nCHANNEL\nKevin Shepherd, Ric Romero, Naval Postgraduate School, United States\nTPa-8.4: THE LEAKY LEAST MEAN MIXED NORM ALGORITHM................................................................1520\nMohammed Abdul Nasar, Azzedine Zerguine, King Fahd University of Petroleum & Minerals, Saudi \nArabia\nTPa-8.5: A NEW VARIABLE STEP-SIZE ZERO-POINT ATTRACTING  ...........................................................1524\nPROJECTION ALGORITHM\nJianming Liu, Steven Grant, Missouri University of Science and Technology, United States\nTPa-8.6 RECURSIVE LEAST SQUARES FILTERING UNDER STOCHASTIC 1529\nCOMPUTATIONAL ERRORS\nChandrasekhar Radhakrishnan, Andrew Singer, University of Illinois at Urbana-Champaign, United \nStates\nTPa-8: CELLULAR AND HETEROGENEOUS NETWORKS\nTPa-8.1: DOWNLINK COVERAGE ANALYSIS OF N-TIER 1577\nHETEROGENEOUS CELLULAR NETWORKS BASED ON CLUSTERED STOCHASTIC \nGEOMETRY\nChunlin Chen, Robert Elliott, Witold Krzymien, University of Alberta / Telecommunications Research \nLaboratories, Canada\nTPa-8.2: SYSTEM-LEVEL PERFORMANCE OF THE MIMO-OFDM 1582\nDOWNLINK WITH DENSE SMALL CELL OVERLAYS\nThomas Wirth, Bernd Hofeld, Fraunhofer Heinrich Hertz Institute, Germany\nTPa-8.3: ADAPTIVE HARQ AND SCHEDULING FOR VIDEO OVER LTE......................................................1584\nAvi Rapaport, Weimin 


Liu, Liangping Ma, Gregory S. Sternberg, Ariela J. Zeira, Anantharaman \nBalasubramanian, InterDigital, United States\nTPa-8.4: NOVEL PARTIAL FEEDBACK SCHEMES AND THEIR EVALUATION 1589\nIN AN OFDMA SYSTEM WITH CDF BASED SCHEDULING\nAnh Nguyen University of California, San Diego, United States; Yichao Huang, Qualcomm \nTechnologies, Inc., United States Bhaskar D. Rao, University of California, San Diego, United States\nTPa-8.5: OPPORTUNISTIC THIRD-PARTY BACKHAUL FOR CELLULAR  ...................................................1594\nWIRELESS NETWORKS\nRussell Ford, Changkyu Kim, Sundeep Rangan, Polytechnic Institute of New York University, United \nStates\nTPa-8.6: PROACTIVE USER ASSOCIATION IN WIRELESS SMALL CELL  ...................................................1601\nNETWORKS VIA COLLABORATIVE FILTERING\nFrancesco Pantisano, Joint Research Center, Italy; Mehdi Bennis, University of Oulu Finland; Walid \nSaad, University of Miami, United States; Stefan Valentin, Bell Labs, Alcatel-Lucent, Germany nMérouane Debbah, Supélec, France; Alessio Zappone, Technische Universität Dresden, Germany\nTPa-8.7 INTERFERENCE ANALYSIS OF MULTI-HOP CELLULAR SENSOR 1606\nNETWORKS\nYeashfi Hasan, R. Michael Buehrer, Virginia Polytechnic Institute and State University, United States\nxxvi\nTPb-1: FULL-DUPLEX MIMO COMMUNICATIONS II\nTPb-1.1: DIVERSITY-MULTIPLEXING TRADEOFF ANALYSIS OF MIMO 1613\nRELAY NETWORKS WITH FULL-DUPLEX RELAYS\nQiang Xue University of Oulu, Finland; Anna Pantelidou, Renesas Mobile Europe, Finland; Behnaam \nAazhang, Rice University, United States\nTPb-1.2: ERGODIC MUTUAL INFORMATION OF FULL-DUPLEX MIMO 1618\nRADIOS WITH RESIDUAL SELF-INTERFERENCE\nAli Cagatay Cirik, University of California, Riverside, United States; Yue Rong, Curtin University, \nAustralia; Yingbo Hua, University of California, Riverside, United States\nTPb-1.3: FULL-DUPLEX IN LARGE-SCALE WIRELESS SYSTEMS 1623\nBei Yin, Michael Wu, Christoph Studer Joseph R. Cavallaro, Rice University, United States; Jorma \nLilleberg, Broadcom, United States\nTPb-1.4 FULL-DUPLEX COMMUNICATION VIA ADAPTIVE NULLING......................................................1628\nScott Johnston, Paul Fiore, Massachusetts Institute of Technology, United States\nTPb-1.5: WEIGHTED-SUM-RATE MAXIMIZATION FOR BI-DIRECTIONAL  ...............................................1632\nFULL-DUPLEX MIMO SYSTEMS\nAli Cagatay Cirik, University of California, Riverside, United States; Rui Wang, The Chinese nUniversity of Hong Kong, Hong Kong SAR of China; Yingbo Hua, University of California, Riverside, \nUnited States\nTPb-2: PHY PERFORMANCE ABSTRACTION TECHNIQUES\nTPb-2.1: STOCHASTIC DYNAMIC MODELS IN PHY ABSTRACTION 1639\nFrancesc Rey, Josep Sala-Alvarez, Technical University of Catalonia, Spain\nTPb-2.2: ON SCALABILITY, ROBUSTNESS AND ACCURACY OF PHYSICAL 1644\nLAYER ABSTRACTION FOR LARGE-SCALE SYSTEM LEVEL EVALUATIONS OF LTE \nNETWORKS\nFlorian Kaltenberger, Imran Latif, Raymond Knopp, Eurecom, France\nTPb-2.3: LINK ADAPTATION IN MIMO-OFDM WITH PRACTICAL 1649\nIMPAIRMENTS\nAlberto Rico-Alvarino University of Vigo, Spain; Robert W. Heath, Jr., University of Texas at Austin, \nUnited States\nTPb-2.4 DIGITAL PRE-DISTORTION OF RADIO FREQUENCY 1654\nFRONT-END IMPAIRMENTS IN THE DESIGN OF SPECTRALLY AGILE MULTICARRIER \nTRANSMISSION \nZhu Fu, Alexander Wyglinski, Worcester Polytechnic Institute United States\nTPb-2.5: SYSTEM-LEVEL INTERFACES AND PERFORMANCE EVALUATION 1659\nMETHODOLOGY FOR 5G PHYSICAL LAYER BASED ON NON-ORTHOGONAL nWAVEFORMS\nGerhard Wunder, Martin Kasparick, Fraunhofer Heinrich Hertz Institute, Germany; Stephan Ten \nBrink University of Stuttgart, Germany; Frank Schaich, Thorsten Wild, Yejian Chen, Bell Labs, \nAlcatel-Lucent Germany; Ivan Gaspar, Nicola Michailow, Gerhard Fettweis, Technische Universität \nDresden, Germany; Dimitri Ktenas, Nicolas Cassiau, Commissariat à l’énergie atomique et aux \nénergies alternatives, France; Marcin Dryjanski, Kamil Sorokosz, Slawomir Pietrzyk, IS-Wireless, \nPoland; Bertalan Eged, National Instruments Hungary\nTPb-3: LOW-DIMENSIONAL SIGNAL MODELS\nTPb-3.1: NEAREST SUBSPACE CLASSIFICATION WITH MISSING DATA 1667\nYuejie Chi, The Ohio State University, United States\nTPb-3.2: REFLECTIONS ON SAMPLING-FILTERS FOR COMPRESSIVE 1672\nSENSING AND FINITE-INNOVATIONS-RATE MODELS\nP. P Vaidyanathan, Srikanth Tenneti, California Institute of Technology, United States\nTPb-3.3: IDENTIFIABILITY BOUNDS FOR BILINEAR INVERSE 1677\nPROBLEMS\nSunav Choudhary, Urbashi Mitra, University of Southern California, United States\nTPb-3.4: LOAD FORECASTING VIA LOW RANK AND SPARSE 


MATRIX  ...................................................1682\nFACTORIZATION\nSeung-Jun Kim, Georgios B Giannakis, University of Minnesota, United States\nxxvii\nTPb-3.5: SEMI-BLIND SOURCE SEPARATION VIA SPARSE 1687\nREPRESENTATIONS AND ONLINE DICTIONARY LEARNING\nSirisha Rambhatla, Jarvis Haupt, University of Minnesota - Twin Cities, United States\nTPb-4: LOCATION-AWARE NETWORKING\nTPb-4.1: ROBUST LINK SCHEDULING WITH CHANNEL ESTIMATION 1695\nAND LOCATION INFORMATION\nSrikar Muppirisetty, Rocco Di Taranto, Henk Wymeersch, Chalmers University of Technology, Sweden\nTPb-4.2: SIMULTANEOUS ROUTING AND POWER ALLOCATION USING  .................................................1700\nLOCATION INFORMATION\nRocco Di Taranto Henk Wymeersch, Chalmers University of Technology, Sweden\nTPb-4.3: LOCATION AWARE TRAINING SCHEME FOR D2D NETWORKS ..................................................1705\nDaoud Burghal, Andreas F. Molisch, University of Southern California, United States\nTPb-4.4: A COOPERATIVE HIGH-ACCURACY LOCALIZATION ALGORITHM 1709\nFOR IMPROVED ROAD WORKERS’ SAFETY\nSankalp Dayal, Adam Mortazavi, Khanh H. Huynh, University of California, Santa Barbara, United \nStates; Ramez L. Gerges California Department of Transportation, United States; John J. Shynk, \nUniversity of California, Santa Barbara, United States\nTPb-4.5: REAL-TIME ENERGY STORAGE MANAGEMENT WITH 1714\nRENEWABLE ENERGY OF ARBITRARY GENERATION DYNAMICS\nTianyi Li, Min Dong, University of Ontario Institute of Technology, Canada\nTPb-5: ANALYSIS OF COMPLEX BIOLOGICAL SYSTEMS AND OMICS DATA II\nTPb-5.2: STATISTICAL VALIDATION OF PARAMETRIC APPROXIMATIONS TO 1721\nTHE MASTER EQUATION\nGarrett Jenkinson, John Goutsias, The Johns Hopkins University, United States\nTPb-5.4: A MESSAGE-PASSING ALGORITHM FOR HAPLOTYPE ASSEMBLY 1726\nZrinka Puljiz, Haris Vikalo, University of Texas at Austin United States\nTPb-6: TARGET TRACKING I\nTPb-6.1: TRACK STATE AUGMENTATION FOR ESTIMATION OF 1733\nPROBABILITY OF DETECTION IN MULTISTATIC SONAR DATA\nEvan Hanusa, David Krout, University of Washington, United States\nTPb-6.2: HYPOTHESIS STRUCTURE IN ENHANCED 1738\nMULTIPLE-HYPOTHESIS TRACKING\nStefano Coraluppi, Craig Carthel, Compunetix Inc., United States; Marco Guerriero, SAIRA/FAR nAMERICAS Inc., United States\nTPb-6.3: SPLINE PROBABILITY HYPOTHESIS DENSITY FILTER FOR 1743\nNONLINEAR MANEUVERING TARGET TRACKING\nRajiv Sithravel, Xin Chen, McMaster University, Canada; Mike McDonald, Defence Research and \nDevelopment Canada Canada; Thia Kirubarajan, McMaster University, Canada\nTPb-6.4: PERFORMANCE ANALYSIS OF THE CONVERTED RANGE RATE  ...............................................1751\nAND POSITION LINEAR KALMAN FILTER\nSteven Bordonaro Naval Undersea Research Center, United States; Peter Willett, Yaakov Bar-Shalom, \nUniversity of Connecticut United States\nTPb-6.5: MAP-PF MULTITARGET TRACKING WITH PROPAGATION 1756\nMODELING UNCERTAINTIES\nKristine Bell, Robert Zarnich, Metron, United States\nTPb-7: MACHINE LEARNING AND STATISTICAL SIGNAL PROCESSING II\nTPb-7.1 FORWARD/BACKWARD STATE AND MODEL PARAMETER 1763\nESTIMATION FOR CONTINUUM-STATE HIDDEN MARKOV MODELS \(CHMM States\nxxviii\nTPb-7.2: LOW-RANK KERNEL LEARNING FOR ELECTRICITY MARKET 1768\nINFERENCE\nVassilis Kekatos, Yu Zhang, Georgios B Giannakis, University of Minnesota, United States\nTPb-7.3: HIERARCHICAL CLUSTERING METHODS AND ALGORITHMS 1773\nFOR ASYMMETRIC NETWORKS\nGunnar Carlsson, Stanford University, United States; Facundo Mémoli, University of Adelaide, \nAustralia; Alejandro Ribeiro, Santiago Segarra, University of Pennsylvania, United States\nTPb-7.5: ACHIEVING COMPLETE LEARNING IN MULTI-ARMED BANDIT 1778\nPROBLEMS\nSattar Vakili, Qing Zhao, University of California, Davis, United States\nTPb-8: DESIGN AUTOMATION\nTPb-8.1: MPMAP: A HIGH LEVEL SYNTHESIS AND MAPPING TOOL FOR  ................................................1785\nMPSOCS\nAmr Hussien, Ahmed M. Eltawil University of California, Irvine, United States; Rahul Amin, Jim \nMartin, Clemson University, United States\nTPb-8.2: SOFTWARE TOOL FOR FPGA BASED MIMO RADAR APPLICATIONS 1792\nAmin Jarrah, Mohsin M. Jamali, University of Toledo, United States\nTPb-8.3: MULTI-CLOCK DOMAIN OPTIMIZATION FOR 1796\nRECONFIGURABLE ARCHITECTURES IN HIGH-LEVEL DATAFLOW APPLICATIONS\nSimone Casale-Brunet, Endri Bezati, Claudio Alberti, Marco 


Mattavelli, École Polytechnique Fédérale \nde Lausanne \(EPFL Milano, Italy; Jörn Janneck, Lund \nUniversity, Sweden\nTPb-8.4: ACTOR CLASSIFICATION USING ACTOR MACHINES 1801\nGustav Cedersjö, Jörn Janneck, Lund University, Sweden\nTPb-8.5: SYSTEMS DESIGN SPACE EXPLORATION BY SERIAL DATAFLOW 1805\nPROGRAM EXECUTIONS\nSimone Casale-Brunet, Marco Mattavelli Claudio Alberti, École Polytechnique Fédérale de Lausanne \n\(EPFL Sweden\nTPb-8.7: REAL-TIME RADAR SIGNAL PROCESSING ON MASSIVELY 1810\nPARALLEL PROCESSOR ARRAYS\nZain Ul-Abdin, Halmstad University, Sweden; Anders Åhlander, Saab AB, Sweden; Bertil Svensson, \nHalmstad University, Sweden\nTPb-8.8 ALGORITHM AND ARCHITECTURE CO-DESIGN OF MIXTURE  ..................................................1815\nOF GAUSSIAN \(MOG States; Robert Bushey, Analog Devices Inc., \nUnited States; Gunar Schirner Schirner, Northeastern University United States\nTPb-8: MULTIUSER MIMO SYSTEMS\nTPb-8.1: MULTI-USER MIMO SCHEDULING IN THE FOURTH 1855\nGENERATION CELLULAR UPLINK\nNarayan Prasad, NEC Laboratories America, Inc., United States; Honghai Zhang, Google, United \nStates; Hao Zhu University of Illinois at Urbana-Champaign, United States; Sampath Rangarajan, \nNEC Laboratories America Inc., United States\nTPb-8.2: OPTIMAL DOF REGION OF THE TWO-USER MISO-BC WITH 1860\nGENERAL ALTERNATING CSIT\nJinyuan Chen, Petros Elia Eurecom, France\nTPb-8.3: EXPLOITING SPATIAL SPECTRUM HOLES IN MULTIUSER 1865\nMIMO SYSTEMS\nFeeby Salib, Karim Seddik, American University in Cairo, Egypt\nTPb-8.4: DEGREES OF FREEDOM ACHIEVED USING SUBSPACE 1869\nALIGNMENT CHAINS FOR THREE-CELL NETWORKS\nGokul Sridharan, Wei Yu, University of Toronto, Canada\nTPb-8.5: INTERFERENCE ALIGNMENT FOR MISO BROADCAST  ...............................................................1875\nCHANNELS UNDER JAMMING ATTACKS\nSaiDhiraj Amuru, Ravi Tandon, R. Michael Buehrer, T. Charles Clancy, Virginia Tech, United States\nxxix\nTPb-8.6: PERFORMANCE STUDY OF MRC AND IRC WEIGHTS IN 1880\nLTE/LTE-A SYSTEMS WITH INTERFERENCE MANAGEMENT\nThomas Svantesson, ArrayComm, United States\nTPb-8.8: A SYSTEM-LEVEL STUDY ON MULTI-USER MIMO 1885\nTRANSMISSION FOR DENSE FDD NETWORKS\nLars Thiele, Martin Kurras, Kai Börner, Thomas Haustein, Fraunhofer HHI, Germany\nTPb-8.9 DIVERSITY-MULTIPLEXING TRADEOFF OF MIMO LINEAR 1890\nPRECODING\nAhmed Mehana, Samsung Electronics, Co Ltd., United States; Aria Nosratinia, University of Texas at \nDallas, United States\nTPb-8: ELECTROPHYSIOLOGY AND BRAIN IMAGING\nTPb-8.1: JOINT COMPRESSION OF NEURAL ACTION POTENTIALS AND 1823\nLOCAL FIELD POTENTIALS\nSebastian Schmale, Benjamin Knoop, Janpeter Hoeffmann, Dagmar Peters-Drolshagen, Steffen Paul, \nUniversity of Bremen, Germany\nTPb-8.2 REDUCING THE EFFECT OF CORRELATED BRAIN SOURCES IN  ...............................................1828\nMEG USING A LINEARLY CONSTRAINED SPATIAL FILTER BASED ON MINIMUM \nNORM\nJosé Alfonso Sánchez De Lucio, David M Halliday, University of York, United Kingdom\nTPb-8.3: ONLINE BAYESIAN CHANGE POINT DETECTION ALGORITHMS 1833\nFOR SEGMENTATION OF EPILEPTIC ACTIVITY\nRakesh Malladi, Rice Unviersity, United States; Giridhar P Kalamangalam, University of Texas Health \nScience Center, United States Behnaam Aazhang, Rice Unviersity, United States\nTPb-8.4: SPIKING NEURAL NETWORKS BASED ON LIF WITH LATENCY 1838\nSIMULATION AND SYNCHRONIZATION EFFECTS\nGian Carlo Cardarilli, Alessandro Cristini, Marco Re, Mario Salerno, Gianluca Susi, University of \nRome Tor Vergata Italy\nTPb-8.5: TIME-FREQUENCY ANALYSIS OF BRAIN ELECTRICAL SIGNALS 1843\nFOR BEHAVIOUR RECOGNITION IN PATIENTS WITH PARKINSON’S DISEASE\nHuaiguang Jiang, Jun Jason Zhang, University of Denver, United States; Adam Hebb, Colorado nNeurological Institute, United States; Mohammad H. Mahoor, University of Denver, United States\nTPb-8.7: A MEASURE OF CONNECTIVITY IN THE PRESENCE OF 1848\nCROSSTALK\nSergul Aydore, Syed Ashrafulla Anand Joshi, Richard M Leahy, University of Southern California, \nUnited States\nWAa-1: MIMO INTERFERENCE MANAGEMENT\nWAa-1.1: DEGREES OF FREEDOM FOR THE CONSTANT MIMO 1897\nINTERFERENCE CHANNEL WITH COMP TRANSMISSION\nCraig Wilson, Venugopal V. Veeravalli, University of Illinois at Urbana-Champaign, United 


States\nWAa-1.2: DYNAMIC INTERFERENCE MANAGEMENT 1902\nAly El Gamal Venugopal V. Veeravalli, University of Illinois at Urbana-Champaign, United States\nWAa-1.3: A MUD/RATE SELECTION TOOL FOR COGNITIVE RADIOS IN  ..................................................1907\nPACKET BASED ASYNCHRONOUS GAUSSIAN MULTIPLE ACCESS CHANNELS\nPrabahan Basu, Rachel Learned, MIT Lincoln Laboratory, United States\nWAa-1.4: PRECODER DESIGN FOR FRACTIONAL INTERFERENCE 1912\nALIGNMENT\nHari Ram Balakrishnan, Giridhar K Indian Institute of Technology Madras, India\nWAa-2: OFDM\nWAa-2.1: MIMO-OFDM OUTAGE CHANNEL CAPACITY WITH PRACTICAL  .............................................1919\nIMPERFECT CSI\nMarko Kocic, MIT Lincoln Laboratory, United States; Nicholas Chang, Applied Communication \nSciences, United States; Matthew Ferreira MIT Lincoln Laboratory, United States\nxxx\nWAa-2.2: BIASED ESTIMATION OF SYMBOL TIMING OFFSET IN OFDM 1924\nSYSTEMS\nRohan Ramlall, University of California, Irvine United States\nWAa-2.3: A FACTOR-GRAPH APPROACH TO JOINT OFDM CHANNEL 1929\nESTIMATION AND DECODING IN IMPULSIVE NOISE CHANNELS\nMarcel Nassar, University of Texas at Austin, United States; Philip Schniter, The Ohio State University, \nUnited States; Brian Evans, University of Texas at Austin, United States\nWAa-2.4: WIDELY LINEAR DATA ESTIMATION FOR UNIQUE WORD  ........................................................1934\nOFDM\nMario Huemer, Alexander Onic, Christian Hofbauer, Stefan Trampitsch, Johannes Kepler University \nLinz Austria\nWAa-3: ADAPTIVE FILTERING\nWAa-3.1: A GRADIENT-CONTROLLED PROPORTIONATE TECHNIQUE FOR 1941\nACOUSTIC ECHO CANCELLATION\nJie Yang, Texas Instruments United States; Gerald Sobelman, University of Minnesota, United States\nWAa-3.2: INTERFERENCE IDENTIFICATION IN CELLULAR NETWORKS  .................................................1946\nVIA ADAPTIVE PROJECTED SUBGRADIENT METHODS\nKonstantin Oltmann, Renato L. G. Cavalcante, Slawomir Stanczak, Martin Kasparick, Fraunhofer \nHeirinch Hertz Institute, Germany\nWAa-3.3: A RECONSIDERATION OF IMPROVED PNLMS ALGORITHM 1951\nFROM METRIC COMBINING VIEWPOINT\nOsamu Toda, Masahiro Yukawa, Keio University, Japan\nWAa-3.4: DETECTION PERFORMANCE OF MATCHED TRANSMIT 1956\nWAVEFORM FOR MOVING EXTENDED TARGETS\nRic Romero, Naval Postgraduate School, United States\nWAa-4: RELAYING AND COOPERATION\nWAa-4.1: TWO-WAY AMPLIFY-AND-FORWARD RELAY STRATEGIES  .......................................................1963\nUNDER RELAY POWER CONSTRAINT\nKanghee Lee, Hyuck M. Kwon, Edwin M. Sawan, Wichita State University, United States Hyuncheol \nPark, Korea Advanced Institute of Science and Technology, Republic of Korea\nWAa-4.2: GAUSSIAN INTERFERING RELAY CHANNELS...............................................................................1968\nHieu T. Do, Tobias J. Oechtering, Mikael Skoglund, KTH Royal Institute of Technology, Sweden; Mai \nVu, Tufts University, United States\nWAa-4.3: THROUGHPUT IMPROVEMENTS FOR CELLULAR SYSTEMS 1973\nWITH DEVICE-TO-DEVICE COMMUNICATIONS\nPhuongBang Nguyen, Bhaskar D. Rao, University of California, San Diego, United States\nWAa-4.4: COOPERATIVE SIMULTANEOUS LOCALIZATION AND  ...............................................................1978\nSYNCHRONIZATION: A DISTRIBUTED HYBRID MESSAGE PASSING ALGORITHM\nBernhard Etzlinger, Johannes Kepler University, Austria; Florian Meyer, Vienna University of \nTechnology, Austria; Andreas Springer, Johannes Kepler University, Austria; Franz Hlawatsch, Vienna \nUniversity of Technology, Austria; Henk Wymeersch, Chalmers University of Technology Sweden\nWAa-5: IMAGE ANALYSIS AND PROCESSING\nWAa-5.1: MULTISCALE AM-FM IMAGE RECONSTRUCTIONS BASED ON 1985\nELASTIC NET REGRESSION AND GABOR FILTERBANKS\nIoannis Constantinou, University of Cyprus, Cyprus; Marios Pattichis, University of New Mexico, \nUnited States Constantinos Pattichis, University of Cyprus, Cyprus\nWAa-5.2: COLORIZATION BASED ON PIECEWISE AUTOREGRESSIVE 1990\nMODEL\nYasuhiro Nakajima, Takashi Ueno, Taichi Yoshida, Masaaki Ikehara, Keio University, Japan\nWAa-5.3: IMAGE DENOISING BY ADAPTIVE DIRECTIONAL 1995\nLIFTING-BASED DISCRETE WAVELET TRANSFORM AND QUANTIZATION\nNaoki Furuhashi, Azusa Oota, Taichi Yoshida, Masaaki Ikehara, Keio University Japan\nxxxi\nWAa-5.4: INTRODUCING DIVERSITY TO NORMALIZED CROSS 2000\nCORRELATION FOR DENSE IMAGE REGISTRATION\nNafise Barzigar, Aminmohammad Roozgard, Pramode Verma, Samuel Cheng, University of Oklahoma nUnited States\nWAa-6: MULTI-SENSOR SIGNAL PROCESSING\nWAa-6.1: WHY DOES DIRECT-MUSIC ON SPARSE-ARRAYS WORK 2007\nP. P Vaidyanathan, Piya Pal, California 


Institute of Technology, United States\nWAa-6.2: ASYMPTOTICALLY OPTIMAL TRUNCATED HYPOTHESIS TEST 2012\nFOR A LARGE SENSOR NETWORK DESCRIBED BY A MULTIVARIATE GAUSSIAN \nDISTRIBUTION\nJiangfan Zhang, Rick Blum, Lehigh University, United States\nWAa-6.3: A JOINT LOCALIZATION AND SYNCHRONIZATION TECHNIQUE  ............................................2017\nUSING TIME OF ARRIVAL AT MULTIPLE ANTENNA RECEIVERS\nSiamak Yousefi, Xiao-Wen Chang, Benoit Champagne, McGill University Canada\nWAa-6.4: REDUCING THE FRACTIONAL RANK OF INTERFERENCE WITH 2022\nSPACE-TIME-FREQUENCY ADAPTIVE BEAMFORMING\nShawn Kraut, Adam R. Margetts, MIT Lincoln Laboratory, United States; Daniel Bliss, Arizona State \nUniversity, United States\nWAa-7: COMMUNICATION SYSTEM DESIGN\nWAa-7.1: IMPLEMENTATION OF SELECTIVE PACKET DESTRUCTION ON 2029\nWIRELESS OPEN-ACCESS RESEARCH PLATFORM\nStephen Hughes Bosheng Zhou, Roger Woods, Queen’s University Belfast, United Kingdom; Alan \nMarshall, Unievrsity of Liverpool, United Kingdom\nWAa-7.2: EFFICIENT ERROR-AWARE POWER MANAGEMENT FOR 2034\nMEMORY DOMINATED OFDM SYSTEMS\nMuhammad S Khairy, Ahmed M. Eltawil, Fadi J. Kurdahi, University of California, Irvine, United \nStates; Amin Khajeh Intel labs, United States\nWAa-7.3: FPGA IMPLEMENTATION OF A MESSAGE-PASSING OFDM 2041\nRECEIVER FOR IMPULSIVE NOISE CHANNELS\nKarl Nieman, University of Texas at Austin, United States; Marcel Nassar, Samsung Information \nSystems America United States; Jing Lin, Brian Evans, University of Texas at Austin, United States\nWAa-7.4: MOBILE TRANSMITTER DIGITAL PREDISTORTION:  ...................................................................2046\nFEASIBILITY ANALYSIS, ALGORITHMS AND DESIGN EXPLORATION\nMahmoud Abdelaziz, Tampere University of Technology, Finland Amanullah Ghazi, University of \nOulu, Finland; Lauri Anttila, Tampere University of Technology, Finland; Jani Boutellier, University of \nOulu, Finland; Toni Lähteensuo, Tampere University of Technology, Finland; Xiaojia Lu, University of \nOulu, Finland; Joseph R. Cavallaro, Rice University, United States; Shuvra Bhattacharyya University \nof Maryland, United States; Markku Juntti, University of Oulu, Finland; Mikko Valkama, Tampere nUniversity of Technology, Finland\nWAb-1: MIMO PROCESSING\nWAb-1.1: MMSE RECEIVE FILTERING FOR PRECODED MIMO SYSTEMS .................................................2057\nAhmed Mehana, Samsung Electronics, Co., Ltd United States; Aria Nosratinia, University of Texas at \nDallas, United States\nWAb-1.2: COVERAGE IN DENSE MILLIMETER WAVE CELLULAR  ............................................................2062\nNETWORKS\nTianyang Bai, Robert W. Heath, Jr., The University of Texas at Austin, United States\nWAb-1.3: LINEAR PRECODING FOR MIMO WITH LDPC CODING AND  .....................................................2067\nREDUCED RECEIVER COMPLEXITY\nThomas Ketseoglou, California State University, Pomona, United States; Ender Ayanoglu, University nof California, Irvine, United States\nxxxii\nWAb-1.4: OPTIMAL PILOT BEAM PATTERN DESIGN FOR MASSIVE MIMO 2072\nSYSTEMS\nSong Noh, Michael D. Zoltowski, Purdue University United States; Youngchul Sung, Korea Advanced \nInstitute of Science and Technology, Republic of Korea; David J. Love, Purdue University, United \nStates\nWAb-2: ADVANCES IN CODING AND DECODING\nWAb-2.1: EFFICIENTLY ENCODABLE NON-BINARY GENERALIZED LDPC  .............................................2079\nCODES\nNicholas Chang Applied Communication Sciences, United States; Marko Kocic, MIT Lincoln \nLaboratory, United States\nWAb-2.2 PRACTICAL NON-BINARY RATELESS CODES FOR WIRELESS 2084\nCHANNELS\nDavid Romero, Massachusetts Institute of Technology, United States; Nicholas Chang, Applied \nCommunication Sciences, United States; Adam R. Margetts Massachusetts Institute of Technology, \nUnited States\nWAb-2.3: ON THE OPTIMALITY OF POLAR CODES FOR THE 2089\nDETERMINISTIC WIRETAP CHANNE\nAli Fakoorian, A. Lee Swindlehurst, University of California, Irvine, United States\nWAb-2.4: DELAY-OPTIMAL STREAMING CODES UNDER 2094\nSOURCE-CHANNEL RATE MISMATCH\nPratik Patil, Ahmed Badr, Ashish Khisti, University of Toronto, Canada; Wai-Tian Tan Hewlett-\nPackard Labs, United States\nWAb-3: DETECTION\nWAb-3.1: ASYNCHRONOUS SIGNAL DETECTION IN 2103\nFREQUENCY-SELECTIVE NON-GAUSSIAN CHANNELS\nSaiDhiraj Amuru, Daniel Jakubisin, R. Michael Buehrer, Virginia Tech, United States Claudio da \nSilva, Samsung Electronics, Co., Ltd., United States\nWAb-3.2: AN INFORMATION THEORETIC CHARACTERIZATION OF THE  ................................................2108\nCHANNEL SHORTENING RECEIVER\nFredrik Rusek, Ove Edfors, Lund University, Sweden\nWAb-3.3: ITERATIVE MMSE-SIC RECEIVER WITH LOW-COMPLEXITY  ...................................................2113\nSOFT SYMBOL AND RESIDUAL INTERFERENCE ESTIMATIONS\nGuosen Yue, Narayan Prasad, Sampath Rangarajan, NEC Laboratories America, Inc., United 


States\nWAb-3.4: NEW RESULTS IN THE ANALYSIS OF DECISION-FEEDBACK 2118\nEQUALIZERS\nAhmed Mehana, Samsung Electronics, Co Ltd., United States; Aria Nosratinia, University of Texas at \nDallas, United States\nWAb-5: TARGET TRACKING II\nWAb-5.1: POSTERIOR DISTRIBUTION PREPROCESSING FOR PASSIVE 2125\nDTV RADAR TRACKING: SIMULATED AND REAL DATA\nEvan Hanusa, Laura Vertatschitsch, David Krout, University of Washington, United States\nWAb-5.2: DEPTH-BASED PASSIVE TRACKING OF SUBMERGED SOURCES  ............................................2130\nIN THE DEEP OCEAN USING A VERTICAL LINE ARRAY\nLisa Zurk, John K. Boyle, Jordan Shibley, Portland State University, United States\nWAb-5.3: GENERALIZED LINEAR MINIMUM MEAN-SQUARE ERROR 2133\nESTIMATION WITH APPLICATION TO SPACE-OBJECT TRACKING\nYu Liu, X. Rong Li, Huimin Chen, University of New Orleans, United States\nWAb-5.4: FEATURE-AIDED INITIATION AND TRACKING VIA TREE SEARCH ..........................................2138\nHossein Roufarshbaf Jill Nelson, George Mason University, United States\nxxxiii\nWAb-6: DIRECTION OF ARRIVAL ESTIMATION\nWAb-6.1: A SELF-CALIBRATION TECHNIQUE FOR DIRECTION 2145\nESTIMATION WITH DIVERSELY POLARIZED ARRAYS\nBenjamin Friedlander, University of California, Santa Cruz, United States\nWAb-6.2: CRAMER-RAO PERFORMANCE BOUNDS FOR SIMULTANEOUS  ..............................................2150\nTARGET AND MULTIPATH POSITIONING\nLi Li, Jeff Krolik, Duke University, United States\nWAb-6.3: COPY CORRELATION DIRECTION-OF-ARRIVAL ESTIMATION  .................................................2155\nPERFORMANCE WITH A STOCHASTIC WEIGHT VECTOR\nChrist Richmond, Keith Forsythe, MIT Lincoln Laboratory, United States; Christopher Flynn, Stevens nInstitute of Technology, United States\nWAb-6.4: LOCATING CLOSELY SPACED COHERENT EMITTERS USING 2160\nTDOA TECHNIQUES\nJack Reale, Air Force Research Laboratory / Binghamton University, United States; Lauren Huie, Air \nForce Research Laboratory, United States Mark Fowler, State University of New York at Binghamton, \nUnited States\nWAb-7: ENERGY- AND RELIABILITY-AWARE DESIGN\nWAb-7.1: LOW-ENERGY ARCHITECTURES FOR SUPPORT VECTOR 2167\nMACHINE COMPUTATION\nManohar Ayinala, Keshab K Parhi, University of Minnesota, United States\nWAb-7.2: TRUNCATED MULTIPLIERS THROUGH POWER-GATING FOR 2172\nDEGRADING PRECISION ARITHMETIC\nPietro Albicocco, Gian Carlo Cardarilli, University of Rome Tor Vergata, Italy; Alberto Nannarelli, \nTechnical University of Denmark Denmark; Massimo Petricca, Politecnico di Torino, Italy; Marco Re, \nUniversity of Rome Tor Vergata Italy\nWAb-7.3: A LOGARITHMIC APPROACH TO ENERGY-EFFICIENT GPU 2177\nARITHMETIC FOR MOBILE DEVICES\nMiguel Lastras Behrooz Parhami, University of California, Santa Barbara, United States\nWAb-7.4: ON SEPARABLE ERROR DETECTION FOR ADDITION ..................................................................2181\nMichael Sullivan, Earl Swartzlander, University of Texas at Austin, United States\nWPb-1: PAPERS PRESENTED IN 2012\nWPb-1.1 DYNAMICALLY RECONFIGURABLE AVC DEBLOCKING FILTER  .............................................2189\nWITH POWER AND PERFORMANCE CONSTRAINTS\nYuebing Jiang, Marios Pattichis, University of New Mexico\nxxxiv\n 


on science teams for numerous planetary missions including Magellan, Mars Observer, Mars Global Surveyor and Rosetta. He was the US Project Scientist for the international Mars NetLander mission, for which he was also principal investigator of the Short-Period Seismometer experiment, and is currently the Project Scientist for the Mars Exploration Rovers. He led the Geophysics and Planetary Geology group at JPL from 1993-2005, and is the JPL Discipline Program Manager for Planetary Geosciences. He has held several visiting appointments at the Institut de Physique du Globe de Paris. He has a BS in physics and a PhD in geophysics from the University of Southern California  David Hansen is a member of the technical staff in the Communications Systems and Operations Group at the Jet Propulsion Laboratory. Current work includes the development of the telecom subsystem for the Juno project. David received a B.S. in Electrical Engineering from Cornell University and an M.S. in Electrical Engineering from Stanford University  Robert Miyake is a member of the technical staff in the Mission and Technology Development Group at the Jet Propulsion Laboratory. Current work includes the development of thermal control subsystems for interplanetary flagship missions to Jupiter and Saturn missions to Mars and the Earth Moon, and is the lead Thermal Chair for the Advanced Project Design Team Robert graduated with a B. S. from San Jose State University, with extensive graduate studies at UCLA University of Washington, and University of Santa Clara  Steve Kondos is a consultant to the Structures and Mechanisms group at the Jet Propulsion Laboratory. He currently is generating the mechanical concepts for small Lunar Landers and Lunar Science Instrument packages in support of various Lunar mission initiatives. He also provides conceptual design, mass and cost estimating support for various Team X studies as the lead for the Mechanical Subsystem Chair. Steve is also involved with various other studies and proposals and provides mentoring to several young mechanical and system engineers. He graduated with a B.S. in Mechanical Engineering from the University of California, Davis and has 28 years of experience in the aerospace field ranging from detail part design to system of systems architecture development. He has worked both in industry and in government in defense, intelligence commercial and civil activities that range from ocean and land based systems to airborne and space systems. Steve has received various NASA, Air Force, Department of Defense and other agency awards for his work on such projects as the NASA Solar Array Flight Experiment, Talon Gold, MILSTAR, Iridium, SBIRS, Mars Exploration Rovers ATFLIR, Glory Aerosol Polarimeter System and several Restricted Programs  Paul Timmerman is a senior member of technical staff in the Power Systems Group at the Jet Propulsion Laboratory Twenty-five years of experience in spacecraft design including 22 at JPL, over 250 studies in Team-X, and numerous proposals. Current assignments include a wide variety of planetary mission concepts, covering all targets within the solar system and all mission classes. Paul graduated from Loras College with a B.S. in Chemistry in 1983  Vincent Randolph is a senior engineer in the Advanced Computer Systems and 


the Advanced Computer Systems and Technologies Group at the Jet Propulsion Laboratory. Current work includes generating Command and Data Handling Subsystem conceptual designs for various proposals and Team X.  He also supports Articulation Control and Electronics design activities for the Advanced Mirror Development project. Vincent graduated from the University of California at Berkeley with a B.S. in Electrical Engineering 18  pre></body></html 


i models into time and covariate dependent dynamic counterparts  ii models and reliability analysis in a more realistic manner  iii level  whether or not functional components \(loyal generals diagnose correctly and take proper actions such as fault mask of failed components \(traitors asymmetric  iv survivability analysis. Evolutionary game modeling can derive sustainable or survivable strategies \(mapped from the ESS in EGT such as node failures such as security compromise level modeling in the so-called three-layer survivability analysis developed in Ma \(2008a this article  v offer an integrated architecture that unite reliability survivability, and fault tolerance, and the modeling approaches with survival analysis and evolutionary game theory implement this architecture. Finally, the dynamic hybrid fault models, when utilized to describe the survival of players in EGT, enhance the EGT's flexibility and power in modeling the survival and behaviors of the game players which should also be applicable to other problem domains where EGT is applicable  5. OPERATIONAL LEVEL MODELING AND DECISION-MAKING  5.1. Highlights of the Tactical and Strategic Levels  Let's first summarize what are obtainable at both tactical and strategic levels. The results at both tactical and strategic levels are precisely obtainable either via analytic or simulation optimization. With the term precisely, we mean that there is no need to assign subjective probabilities to UUUR events. This is possible because we try to assess the consequences of UUUR events \(tactical level ESS strategies \(strategic level time prediction of survivability. The following is a list of specific points. I use an assumed Wireless Sensor Network WSN  i of UUUR events: \(a actions which can be treated as censored events; \(b Cont' of Box 4.2 It can be shown that the replicator differential equations are equivalent to the classical population dynamics models such as Logistic differential equation and LotkaVolterra equation \(e.g., Kot 2001 Logistic equation, or the limited per capital growth rate is similar to the change rate of the fitness  xfxfi which can be represented with the hazard function or survivor functions introduced in the previous section on survival analysis.  This essentially connects the previous survival analysis modeling for lifetime and reliability with the EGT modeling. However, EGT provides additional modeling power beyond population dynamics or survival analysis approaches introduced in the previous section. The introduction of evolutionary theory makes the games played by a population evolvable. In other words, each player \(individual 


other words, each player \(individual agent and players interact with each other to evolve an optimized system Box 4.3. Additional Comments on DHF Models  The above introduced EGT models are very general given they are the system of ordinary differential equations. Furthermore, the choice of fitness function f\(x complexity to the differential equation system.  The system can easily be turned into system of nonlinear differential equations. The analytical solution to the models may be unobtainable when nonlinear differential equations are involved and simulation and/or numerical computation are often required  In the EGT modeling, Byzantine generals are the game players, and hybrid fault models are conveniently expressed as the strategies of players; the players may have different failure or communication behaviors Furthermore, players can be further divided into groups or subpopulations to formulate more complex network organizations. In the EGT modeling, reliability can be represented as the payoff \(fitness, the native term in EGT of the game. Because reliability function can be replaced by survivor function, survival analysis is seamlessly integrated into the EGT modeling. That is, let Byzantine generals play evolutionary games and their fitness reliability function  The evolutionary stable strategy \(ESS counterpart of Nash equilibrium in traditional games ESS corresponds to sustainable strategies, which are resistant to both internal mutations \(such as turning into treason generals or nodes such as security compromises represent survivable strategies and survivability in survivability analysis. Therefore, dynamic hybrid fault models, after the extension with EGT modeling, can be used to study both reliability and survivability 13 risks such as competing risks which can be described with CRA; \(c captured with the shard frailty.  We believe that these UUUR events are sufficiently general to capture the major factors/events in reliability, security and survivability whose occurrence probabilities are hard or impossible to obtain  Instead of trying to obtain the probabilities for these events which are infeasible in most occasions, we focus on analyzing the consequences of the events.  With survival analysis, it is possible to analyze the effects of these types of events on survivor functions. In addition, spatial frailty modeling can be utilized to capture the heterogeneity of risks in space, or the spatial distribution of risks \(Ma 2008a d UUUR events introduced previously. These approaches and models that deal with the effects of UUUR events form the core of tactical level modeling  To take advantage of the tactical level modeling approaches it is obviously necessary to stick to the survivor functions or hazard functions models. In other words, survival analysis can deal with UUUR events and offer every features reliability function provides, but reliability function cannot deal with UUUR events although survivor function and reliability function have the exactly same mathematical definition. This is the junction that survival analysis plays critical role in survivability analysis at tactical level. However, we 


recognize that it is infeasible to get a simple metric for survivability similar to reliability with tactical level modeling alone. Actually, up to this point, we are still vague for the measurement of survivability or a metric for survivability. We have not answered the question: what is our metric for survivability? We think that a precise or rigorous definition of survivability at tactical level is not feasible, due to the same reason we cited previously  the inability to determine the probabilities of UUUR events However, we consider it is very helpful to define a work definition for survivability at the tactical level  We therefore define the survivability at tactical level as a metric, Su\(t t function or reliability function with UUUR events considered. In the framework of three-layer survivability analysis, this metric is what we mean with the term survivability. The "metric" per se is not the focus of the three-layer survivability analysis. It is not very informative without the supports from the next two levels  strategic and operational models.  However, it is obvious that this metric sets a foundation to incorporate UUUR effects in the modeling at the next two levels  Due to the inadequacy of tactical level modeling, we proposed the next level approach  strategic level modeling for survivability. As expected, the tactical level is one foundation of strategic level modeling ii objectives: \(a affect survivability which survival analysis alone is not adequate to deal with; \(b survivability at tactical level is necessary but not sufficient for modeling survivability, we need to define what is meant with the term survivability at strategic level  With regard to \(a behaviors or modes which have very different consequences. These failure behaviors can be captured with hybrid fault models. However, the existing hybrid fault models in fault tolerance field are not adequate for applying to survivability analysis. There are two issues involved: one is the lack of real time notion in the constraints for hybrid fault models \(e.g., N&gt;3m+1 for Byzantine Generals problem synthesize the models after the real-time notions are introduced. The solution we proposed for the first issue is the dynamic hybrid fault models, which integrate survivor functions with traditional hybrid fault models. The solution we proposed for the second issue is the introduction of EGT modeling  With regard to \(b modeling our problem at strategic level, EGT modeling is essentially a powerful optimization algorithm.  One of the most important results from EGT modeling is the so-called evolutionary stable strategies \(ESS We map the ESS in EGT to survivable strategies in survivability analysis.   Therefore, at the strategic level, our work definition for survivability refers to the survivable strategies or sustainable strategies in the native term of EGT, which can be quantified with ESS  In addition to integrating dynamic hybrid fault models another advantage for introducing EGT modeling at strategic level is the flexibility for incorporating other node behaviors \(such as cooperative vs. non-cooperative those behaviors specified in standard hybrid fault models, as well as anthropocentric factors such as costs constraints  Without UUUR events, both tactical and strategic level 


Without UUUR events, both tactical and strategic level models default to regular reliability models. This implies that, in the absence of UUUR events, reliable strategies are sustainable or survivable.  This also implies that three-layer survivability analysis defaults to reliability analysis however, the three-layer approach does offer some significant advantages over traditional reliability analysis, as discussed in previous sections. Nevertheless, when UUUR events exist, reliable strategies and survivable strategies are different. This necessitates the next operational level modeling  5.2. Operational Level Modeling and Decision-Making  When UUUR events are involved, we cannot make real time predictions of survivability at tactical and strategic levels This implies that the implementations of survivable 14 strategies need additional measures that we develop in this section.  Box 5.1 explains the ideas involved with possibly the simplest example  Figure 4 is a diagram showing a simplified relationship between action threshold survivability \(TS survivability \(ES view since both TS and ES are multidimensional and dynamic in practice. Therefore, the sole purpose of the diagram is to illustrate the major concepts discussed above The blue curve is the survivability when survivable strategies specified by ESS are implemented at some point before time s.  The system is then guaranteed to hold survivability above ES. In contrary, if no ESS implemented before time s, then the system quickly falls below to the survivable level at around 40 time units  T i m e 0 1 0 2 0 3 0 4 0 5 0 6 0 7 0 8 0 9 0 1 0 0 Su rv iv ab ili ty M et ric S u t 0 . 0 0 . 1 0 . 2 0 . 3 0 . 4 0 . 5 0 . 6 0 . 7 0 . 8 0 . 9 1 . 0 E S S  i s  I m p lm e n t e d N o  E S S  is  I m p lm e n t e d ts E S T S  Figure 4. A Diagram Showing the Relationship Between TS and ES, as well as timing of s and t, with s &lt; t  6. SUMMARY  The previous sections discussed the major building blocks 


The previous sections discussed the major building blocks for the new life-system inspired PHM architecture. This section first identifies a few minor aspects that have not been discussed explicitly but are necessary for the implementation of the architecture, and then we summarize the major building blocks in a diagram  6.1. Missing Components and Links  Optimization Objectives  Lifetime, reliability, fault tolerance, and survivability, especially the latter two, are application dependent. Generally, the optimization of reliability and survivability are consistent; in that maximization of reliability also implies maximization of survivability. However, when application detail is considered, optimization of lifetime is not necessarily consistent with the optimization of reliability. Consider the case of the monitoring sensor network as an example. The network reliability is also dependent on connectivity coverage, etc, besides network lifetime. What may be further complicated is the time factor. All of the network metrics are time-dependent. A paradoxical situation between lifetime and reliability could be that nodes never 'sleep                                                   


          Box 5.1 Operational Level Modeling  Assuming that the ESS solution for a monitoring sensor network can be expressed with the following simple algebraic conditions: survivability metric at tactical level SU = 0.7, Router-Nodes in the WSN &gt; 10%, Selfish Nodes &lt; 40%. Even with this extremely simplified scenario, the ESS strategies cannot be implemented because we do not know when the actions should be taken to warrant a sustainable system.  These conditions lack a correlation with real time  The inability to implement ESS is rooted in our inability to assign definite probabilities to UUUR events, which implies that we cannot predict when something sufficiently bad will jeopardize the system survivability What we need at the operational level is a scheme to ensure ESS strategy is in place in advance  The fundamental idea we use to implement the ESS strategy is to hedge against the UUUR events. The similar idea has been used in financial engineering and also in integrated pest management in entomology. This can be implemented with the following scheme  Let us define a pair of survivability metrics: one is the expected survivability \(ES threshold survivability or simply threshold survivability \(TS ES is equivalent to the survivability metric at tactical level. ES corresponds to ESS at strategic level, but they are not equivalent since ESS is strategy and ES is survivability. TS is the survivability metric value \(at tactical level and TS can be obtained from strategic level models. For example, TS = SU\(s t condition for the implementation of ESS. In other words, the implementation of strategies that ensures TS at time s will guarantee the future ES level at time t.  To make the implementation more reliable and convenient multiple dynamic TSs can be computed at time s1, s2 sk, with si &lt; t for all i.  These TS at times s1, s2, ..., sk should be monitored by some evaluation systems  Unlike tactical and strategic levels, the operational level modeling is approximate. The term "approximate means that we cannot predict the real time survivability or we do not know the exact time an action should be taken. Instead, the action is triggered when the monitored survivability metric SU\(r survivability \(TS scheme of TS and ES, we ensure the ES by taking preventative actions \(prescribed by ESS and triggered by the TS consequences of UUUR events  Figure 4 is a diagram showing the above concepts and the decision-making process involved 15 This wakefulness \(never 'sleep short period but at the expense of network lifetime. Of course, when the network is running out of lifetime, network reliability ultimately crashes. This example reminds us that 


reliability ultimately crashes. This example reminds us that multi-objective optimization should be the norm rather than exception  Constraints and Extensions  Many application specific factors and constraints are ignored in this article. For example, we mentioned about spatial heterogeneity of environment, but never present a mathematical description The spatial heterogeneity can be modeled with the so-called spatial frailty in multivariate survival analysis \(Ma 2008a  Evolutionary Algorithm  Evolutionary game modeling when implemented in simulation, can be conveniently implemented with an algorithm similar to Genetic Algorithms \(GA ESS in the evolutionary game model with simulation is very similar to GA. Dynamic populations, in which population size varies from generation to generation \(Ma &amp; Krings 2008f of node failures. Another issue to be addressed is the synchronous vs. asynchronous updating when topology is considered in the simulation. This update scheme can have profound influences on the results of the simulation. Results from cellular automata computing should be very useful for getting insights on the update issue  6.2. Summary and Perspective  To recapture the major points of the article, let us revisit Figure 3, which summarizes the principal modules of the proposed life-system inspired PHM architecture. The main inspiration from life systems is the notion of individuals and their assemblage, the population. Population is an emergent entity at the next level and it has emergent properties which we are often more concerned with. Survival analysis, which has become a de facto standard in biomedicine, is particularly suitable for modeling population, although it is equally appropriate at individual level. Therefore, survival analysis \(including competing risks analysis and multivariate survival analysis comprehensively in the context of PHM in a series of four papers presented at IEEE AeroSpace 2008 \(Ma &amp; Krings 2008a, b, c, &amp; d proposed architecture. Survival analysis constitutes the major mathematical tools for analyzing lifetime and reliability, and also forms the tactical level of the three-layer survivability analysis  Besides lifetime and reliability, two other major modules in Figure 3 are fault tolerance and survivability. To integrate fault tolerance into the PHM system, Dynamic Hybrid Fault DHF 2008e, Ma 2008a make real-time prediction of reliability more realistic and make real-time prediction of fault tolerance level possible DHF models also unite lifetime, reliability and fault tolerance under a unified modeling framework that consists of survival analysis and evolutionary game theory modeling  DHG models also form the partial foundation, or strategic level, for the three-layer survivability analysis. At the strategic level, the Evolutionary Stable Strategies \(ESS which is mapped to survivable or sustainable strategies, can be obtained from the evolutionary game theory based DHF models. When there is not any UUUR event involved reliability and survivability are consistent, and reliable strategies are survivable. In this case, the strategic level modeling up to this point is sufficient for the whole PHM system modeling, and there is no need for the next level  operational level modeling  When there are UUUR events in a PHM system, the 


When there are UUUR events in a PHM system, the inability to determine the occurrence probabilities of UUUR events makes the operational level modeling necessary Then the principle of hedging must be utilized to deal with the "hanging" uncertainty from UUUR events. In this case reliability strategies are not necessarily survivable strategies At the operational level modeling, a duo of survivability metrics, expected survivability \(ES survivability \(TS the survivable strategies \(ESS level are promptly implemented based on the decisionmaking rules specified with the duo of survivability metrics then the PHM system should be able to endure the consequences of potentially catastrophic UUUR events. Of course, to endure such catastrophic events, the cost may be prohibitively high, but the PHM system will, at least, warn decision-makers for the potentially huge costs.  It might be cheap to just let it fail  Figure 3 also shows several other modules, such as security safety, application systems \(such as Automatic Logistics CBM+, RCM, Life cycle cost management, Real-time warning and alert systems architectures, but we do not discuss in this paper. Generally the new architecture should be fully compatible with existing ones in incorporating these additional modules. One point we stressed is that PHM system can be an ideal place to enforce security policies. Enforcing security policies can be mandatory for PHM systems that demand high security and safety such as weapon systems or nuclear plant facilities.  This is because maintenance, even without human-initiated security breaches, can break the security policies if the maintenance is not planned and performed properly  In perspective, although I did not discuss software issues in this paper, the introduced approaches and models should provide sufficient tools for modeling software reliability and survivability with some additional extension. Given the critical importance of software to modern PHM systems, we present the following discussion on the potential extension to software domain. Specifically, two points should be noted: \(1 architecture to software should be a metric which can 16 replace the time notion in software reliability; I suggest that the Kolmogorov complexity \(e.g., Li and Vitanyi 1997 be a promising candidate \(Ma 2008a change is because software does not wear and calendar time for software reliability usually does not make much sense 2 software reliability modeling.  Extending to general survivability analysis is not a problem either. In this article I implicitly assume that reliability and survivability are positively correlated, or reliability is the foundation of survivability. This positive correlation does not have to be the case. A simplified example that illustrates this point is the 'limit order' in online stock trading, in which limit order can be used in either direction: that stock price is rising or falling.  The solution to allow negative or uncorrelated relationships between reliability and survivability are very straightforward, and the solutions are already identified in previous discussions. Specifically, multiple G-functions and multi-stage G-functions by Vincent and Brown \(2005 very feasible solution, because lifetime, reliability and survivability may simply be represented with multiple Gfunctions. Another potential solution is the accommodation of the potential conflicts between reliability and survivability with multi-objective GA algorithms, which I previously suggested to be used as updating algorithms in the optimization of evolutionary games  


 The integration of dynamic hybrid fault models with evolutionary game modeling allows one to incorporate more realistic and detailed failure \(or survival individual players in an evolutionary game. This is because dynamic hybrid fault models are supported by survival analysis modeling, e.g., time and covariate dependent hazard or survivor functions for individual players. If necessary, more complex survival analysis modeling including competing risks analysis and multivariate survival analysis, can be introduced.  Therefore, any field to which evolutionary game theory is applicable may benefit from the increased flexibility in modeling individual players.  Two particularly interesting fields are system biology and ecological modeling.  In the former field, dynamic hybrid fault models may find important applications in the study of biological networks \(such as gene, molecular, and cell networks 2008g conjecture that explains the redundancy in the universal genetic code with Byzantine general algorithm. In addition they conducted a comparative analysis of bio-robustness with engineering fault tolerance, for example, the strong similarity between network survivability and ecological stability \(Ma &amp; Krings 2008g survivability analysis can be applied for the study of survivals or extinctions of biological species under global climate changes \(Ma 2008b  In this paper, I have to ignore much of the details related to the implementation issues to present the overall architecture and major approaches clearly and concisely. To deal with the potential devils in the implementation details, a well funded research and development team is necessary to take advantages of the ideas presented here. On the positive side I do see the great potential to build an enterprise PHM software product if there is sufficient resource to complete the implementation. Given the enormous complexity associated with the PHM practice in modern engineering fields, it is nearly impossible to realize or even demonstrate the benefits of the architecture without the software implementation. The critical importance of PHM to mission critical engineering fields such as aerospace engineering, in turn, dictates the great value of such kind software product  6.3. Beyond PHM  Finally, I would like to raise two questions that may be interested in by researchers and engineers beyond PHM community. The first question is: what can PHM offer to other engineering disciplines? The second question is: what kinds of engineering fields benefit most from PHM? Here, I use the term PHM with the definition proposed by IEEE which is quoted in the introduction section of the paper  As to the first question, I suggest software engineering and survivability analysis are two fields where PHM can play significant roles. With software engineering, I refer to applying PHM principles and approaches for dealing with software reliability, quality assurance, and even software process management, rather than building PHM software mentioned in the previous subsection. For survivability analysis, borrowing the procedures and practices of PHM should be particularly helpful for expanding its role beyond its originating domain \(network systems that control critical national infrastructures is a strong advocate for the expansion of survivability analysis to PHM. Therefore, the interaction between PHM and survivability analysis should be bidirectional. Indeed, I see the close relationships between PHM, software engineering, and survivability as well-justified because they all share some critical issues including reliability survivability, security, and dependability  


 The answer to the second question is much more elusive and I cannot present a full answer without comparative analysis of several engineering fields where PHM has been actively practiced. Of course, it is obvious that fields which demand mission critical reliability and dependability also demand better PHM solutions. One additional observation I would like to make is that PHM seems to play more crucial roles for engineering practices that depend on the systematic records of 'historical' data, such as reliability data in airplane engine manufacturing, rather than on the information from ad hoc events.  This may explain the critical importance of PHM in aerospace engineering particularly in commercial airplane design and manufacturing.  For example, comparing the tasks to design and build a space shuttle vs. to design and manufacture commercial jumbo jets, PHM should be more critical in the latter task  17    Figure 2. States of a monitoring sensor node and its failure modes \(after Ma &amp; Krings 2008e     Figure 3. Core Modules and their Relationships of the Life System Inspired PHM Architecture    REFERENCES  Adamides, E. D., Y. A. Stamboulis, A. G. Varelis. 2004 Model-Based Assessment of Military Aircraft Engine Maintenance Systems Model-Based Assessment of Military Aircraft Engine Maintenance Systems. Journal of the Operational Research Society, Vol. 55, No. 9:957-967  Anderson, R. 2001. Security Engineering. Wiley  Anderson, R. 2008. Security Engineering. 2nd ed. Wiley  Bird, J. W., Hess, A. 2007.   Propulsion System Prognostics R&amp;D Through the Technical Cooperation Program Aerospace Conference, 2007 IEEE, 3-10 March 2007, 8pp  Bock, J. R., Brotherton, T., W., Gass, D. 2005. Ontogenetic reasoning system for autonomic logistics. Aerospace Conference, 2005 IEEE 5-12 March 2005.Digital Object Identifier 10.1109/AERO.2005.1559677  Brotherton, T., P. Grabill, D. Wroblewski, R. Friend, B Sotomayer, and J. Berry. 2002. A Testbed for Data Fusion for Engine Diagnostics and Prognostics. Proceedings of the 2002 IEEE Aerospace Conference  Brotherton, T.; Grabill, P.; Friend, R.; Sotomayer, B.; Berry J. 2003. A testbed for data fusion for helicopter diagnostics and prognostics. Aerospace Conference, 2003. Proceedings 2003 IEEE  Brown, E. R., N. N. McCollom, E-E. Moore, A. Hess. 2007 Prognostics and Health Management A Data-Driven Approach to Supporting the F-35 Lightning II. 2007 IEEE AeroSpace Conference  Byington, C.S.; Watson, M.J.; Bharadwaj, S.P. 2008 Automated Health Management for Gas Turbine Engine Accessory System Components. Aerospace Conference 2008 IEEE, DOI:10.1109/AERO.2008.4526610 


2008 IEEE, DOI:10.1109/AERO.2008.4526610 Environment Covariates &amp; Spatial Frailty Applications: AL; Life Cycle Mgmt; Real-Time Alerts CBM+, RCM, TLCSM; Secret Sharing and Shared Control 18 Chen, Y. Q., S. Cheng. 2005. Semi-parametric regression analysis of mean residual life with censored survival data Biometrika \(2005  29  Commenges, D. 1999. Multi-state models in Epidemiology Lifetime Data Analysis. 5:315-327  Cook, J. 2004. Contrasting Approaches to the Validation of Helicopter HUMS  A Military User  s Perspective Aerospace Conference, 2004 IEEE  Cook, J. 2007. Reducing Military Helicopter Maintenance Through Prognostics. Aerospace Conference, 2007 IEEE Digital Object Identifier 10.1109/AERO.2007.352830  Cox, D. R. 1972. Regression models and life tables.  J. R Stat. Soc. Ser. B. 34:184-220  Crowder, M. J.  2001. Classical Competing Risks. Chapman amp; Hall. 200pp  David, H. A. &amp; M. L. Moeschberger. 1978. The theory of competing risks. Macmillan Publishing, 103pp  Ellison, E., L. Linger, and M. Longstaff. 1997.  Survivable Network Systems: An Emerging Discipline, Carnegie Mellon, SEI, Technical Report CMU/SEI-97-TR-013  Hanski, I. 1999. Metapopulation Ecology. Oxford University Press  Hallam, T. G. and S. A. Levin. 1986. Mathematical Ecology. Biomathematics. Volume 17. Springer. 457pp  Hess, A., Fila, L. 2002.  The Joint Strike Fighter \(JSF concept: Potential impact on aging aircraft problems Aerospace Conference Proceedings, 2002. IEEE. Digital Object Identifier: 10.1109/AERO.2002.1036144  Hess, A., Calvello, G., T. Dabney. 2004. PHM a Key Enabler for the JSF Autonomic Logistics Support Concept. Aerospace Conference Proceedings, 2004. IEEE  Hofbauer, J. and K. Sigmund. 1998. Evolutionary Games and Population Dynamics. Cambridge University Press 323pp  Hougaard, P. 2000. Analysis of Multivariate Survival Data Springer. 560pp  Huzurbazar, A. V. 2006. Flow-graph model for multi-state time-to-event data. Wiley InterScience  Ibrahim, J. G., M. H. Chen and D. Sinha. 2005. Bayesian Survival Analysis. Springer. 481pp  Kacprzynski, G. J., Roemer, M. J., Hess, A. J. 2002. Health management system design: Development, simulation and cost/benefit optimization. IEEE Aerospace Conference Proceedings, 2002. DOI:10.1109/AERO.2002.1036148  Kalbfleisch, J. D., and R. L. Prentice, 2002. The Statistical Analysis of Failure Time Data. Wiley-InterScience, 2nd ed  Kalgren, P. W., Byington, C. S.   Roemer, M. J.  2006 Defining PHM, A Lexical Evolution of Maintenance and Logistics. Systems Readiness Technology Conference 


Logistics. Systems Readiness Technology Conference IEEE. DOI: 10.1109/AUTEST.2006.283685  Keller, K.; Baldwin, A.; Ofsthun, S.; Swearingen, K.; Vian J.; Wilmering, T.; Williams, Z. 2007. Health Management Engineering Environment and Open Integration Platform Aerospace Conference, 2007 IEEE, Digital Object Identifier 10.1109/AERO.2007.352919  Keller, K.; Sheahan, J.; Roach, J.; Casey, L.; Davis, G Flynn, F.; Perkinson, J.; Prestero, M. 2008. Power Conversion Prognostic Controller Implementation for Aeronautical Motor Drives. Aerospace Conference, 2008 IEEE. DOI:10.1109/AERO.2008.4526630  Klein, J. P. and M. L. Moeschberger. 2003. Survival analysis techniques for censored and truncated data Springer  Kingsland, S. E. 1995. Modeling Nature: Episodes in the History of Population Ecology. 2nd ed., University of Chicago Press, 315pp  Kot, M. 2001. Elements of Mathematical Ecology Cambridge University Press. 453pp  Krings, A. W. and Z. S. Ma. 2006. Fault-Models in Wireless Communication: Towards Survivable Ad Hoc Networks Military Communications Conference, 23-25 October, 7 pages, 2006  Lamport, L., R. Shostak and M. Pease. 1982. The Byzantine Generals Problem. ACM Transactions on Programming Languages and Systems, 4\(3  Lawless, J. F. 2003. Statistical models and methods for lifetime data. John Wiley &amp; Sons. 2nd ed  Line, J. K., Iyer, A. 2007. Electronic Prognostics Through Advanced Modeling Techniques. Aerospace Conference 2007 IEEE. DOI:10.1109/AERO.2007.352906  Lisnianski, A., Levitin, G. 2003. Multi-State System Reliability: Assessment, Optimization and Applications World Scientific  Liu, Y., and K. S. Trivedi. 2006. Survivability Quantification: The Analytical Modeling Approach, Int. J of Performability Engineering, Vol. 2, No 1, pp. 29-44  19 Luchinsky, D.G.; Osipov, V.V.; Smelyanskiy, V.N Timucin, D.A.; Uckun, S. 2008. Model Based IVHM System for the Solid Rocket Booster. Aerospace Conference, 2008 IEEE.DOI:10.1109/AERO.2008.4526644  Lynch, N. 1997. Distributed Algorithms. Morgan Kaufmann Press  Ma, Z. S. 1997. Demography and survival analysis of Russian wheat aphid. Ph.D. dissertation, Univ. of Idaho 306pp  Ma, Z. S. 2008a. New Approaches to Reliability and Survivability with Survival Analysis, Dynamic Hybrid Fault Models, and Evolutionary  Game Theory. Ph.D. dissertation Univ. of Idaho. 177pp  Ma, Z. S. 2008b. Survivability Analysis of Biological Species under Global Climate Changes: A New Distributed and Agent-based Simulation Architecture with Survival Analysis and Evolutionary Game Theory. The Sixth 


International Conference on Ecological Informatics. Dec 25, 2008. Cancun, Mexico  Ma, Z. S. and E. J. Bechinski. 2008. A Survival-Analysis based  Simulation Model for Russian Wheat Aphid Population Dynamics. Ecological Modeling, 216\(2 332  Ma, Z. S. and A. W. Krings. 2008a.  Survival Analysis Approach to Reliability Analysis and Prognostics and Health Management \(PHM  AIAA AeroSpace Conference, March 1-8, 2008, Big Sky, MT, 20pp  Ma, Z. S. and A. W. Krings. 2008b. Competing Risks Analysis of Reliability, Survivability, and Prognostics and Health Management \(PHM  AIAA AeroSpace Conference, March 1-8, 2008.  Big Sky, MT. 20pp  Ma, Z. S. and A. W. Krings. 2008c. Multivariate Survival Analysis \(I Dependence Modeling", Proc. IEEE  AIAA AeroSpace Conference, March 1-8, 2008, Big Sky, MT. 21pp  Ma, Z. S. and A. W. Krings., R. E. Hiromoto. 2008d Multivariate Survival Analysis \(II State Models in Biomedicine and Engineering Reliability IEEE International Conference of Biomedical Engineering and Informatics, BMEI 2008.  6 Pages  Ma, Z. S. and A. W. Krings. 2008e. Dynamic Hybrid Fault Models and their Applications to Wireless Sensor Networks WSNs Modeling, Analysis and Simulation of Wireless and Mobile Systems. \(ACM MSWiM 2008 Vancouver, Canada  Ma, Z. S. &amp; A. W. Krings. 2008f. Dynamic Populations in Genetic Algorithms. SIGAPP, the 23rd Annual ACM Symposium on Applied Computing, Ceara, Brazil, March 16-20, 2008. 5 Pages  Ma, Z. S. &amp; A. W. Krings. 2008g. Bio-Robustness and Fault Tolerance: A New Perspective on Reliable, Survivable and Evolvable Network Systems, Proc. IEEE  AIAA AeroSpace Conference, March 1-8, Big Sky, MT, 2008. 20 Pages  Ma, Z. S.  and A. W. Krings. 2009. Insect Sensory Systems Inspired Computing and Communications.  Ad Hoc Networks 7\(4  MacConnell, J.H. 2008. Structural Health Management and Structural Design: An Unbridgeable Gap? 2008 IEEE Aerospace Conference, DOI:10.1109/AERO.2008.4526613  MacConnell, J.H. 2007. ISHM &amp; Design: A review of the benefits of the ideal ISHM system. Aerospace Conference 2007 IEEE. DOI:10.1109/AERO.2007.352834  Marshall A. W., I. Olkin. 1967. A Multivariate Exponential Distribution. Journal of the American Statistical Association, 62\(317 Mar., 1967  Martinussen, T. and T. H. Scheike. 2006. Dynamic Regression Models for Survival Data. Springer. 466pp  Mazzuchi, T. A., R. Soyer., and R. V. Spring. 1989. The proportional hazards model in reliability. IEEE Proceedings of Annual Reliability and Maintainability Symposium pp.252-256  Millar, R.C., Mazzuchi, T.A. &amp; Sarkani, S., 2007. A Survey of Advanced Methods for Analysis and Modeling of 


of Advanced Methods for Analysis and Modeling of Propulsion System", GT2007-27218, ASME Turbo Expo 2007, May 14-17, Montreal, Canada  Millar, Richard C., "Non-parametric Analysis of a Complex Propulsion System Data Base", Ph.D. Dissertation, George Washington University, June 2007  Millar, R. C. 2007. A Systems Engineering Approach to PHM for Military Aircraft Propulsion Systems. Aerospace Conference, 2007 IEEE. DOI:10.1109/AERO.2007.352840  Millar, R. C. 2008.  The Role of Reliability Data Bases in Deploying CBM+, RCM and PHM with TLCSM Aerospace Conference, 2008 IEEE, 1-8 March 2008. Digital Object Identifier: 10.1109/AERO.2008.4526633  Nowak, M. 2006. Evolutionary Dynamics: Exploring the Equations of Life. Harvard University Press. 363pp  Oakes, D. &amp; Dasu, T. 1990. A note on residual life Biometrika 77, 409  10  Pintilie, M. 2006. Competing Risks: A Practical Perspective.  Wiley. 224pp  20 Smith, M. J., C. S. Byington. 2006. Layered Classification for Improved Diagnostic Isolation in Drivetrain Components. 2006 IEEE AeroSpace Conference  Therneau, T. and P. Grambsch. 2000. Modeling Survival Data: Extending the Cox Model. Springer  Vincent, T. L. and J. L. Brown. 2005. Evolutionary Game Theory, Natural Selection and Darwinian Dynamics Cambridge University Press. 382pp  Wang. J., T. Yu, W. Wang. 2008. Research on Prognostic Health Management \(PHM on Flight Data. 2008 Int. Conf. on Condition Monitoring and Diagnosis, Beijing, China, April 21-24, 2008. 5pp  Zhang, S., R. Kang, X. He, and M. G. Pecht. 2008. China  s Efforts in Prognostics and Health Management. IEEE Trans. on Components and Packaging Technologies 31\(2             BIOGRAPHY  Zhanshan \(Sam scientist and earned the terminal degrees in both fields in 1997 and 2008, respectively. He has published more than 60 peer-refereed journal and conference papers, among which approximately 40 are journal papers and more than a third are in computer science.  Prior to his recent return to academia, he worked as senior network/software engineers in semiconductor and software industry. His current research interests include: reliability, dependability and fault tolerance of distributed and software systems behavioral and cognitive ecology inspired pervasive and 


behavioral and cognitive ecology inspired pervasive and resilient computing; evolutionary &amp; rendezvous search games; evolutionary computation &amp; machine learning bioinformatics &amp; ecoinformatics                 pre></body></html 


