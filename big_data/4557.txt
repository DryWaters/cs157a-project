Behaviour-Oriented Commands From Distributed Knowledge Representation to Real-Time Implementation J.Cuervo E Gonzalez A Suarez C Moreno F Artigue Universite d'Evry Val d'Essonne  CERMA CEMIF LaMI 40 Rue du Pelvoux CE 1455 Courcouronnes 91020 Evry Cedex FRANCE Abstract This paper presents a general methodology to model and 
implement real time control of complex systems with high reactivity It is based on an original concept called behaviour oriented commands BOCs This methodology has been applied successfully in our mobile robot BOCs incorporate mechanisms to model the set of rules knowledge which describes the restrictions and actions to achieve a goal Basic rules are well encapsulated by entities called behaviours", while global co-operating 
rules are explicited by the association links managed by the BOC's control unit The model is easily translated into a real time implementation This fusion between knowledge and real time is the main contribution of our work to the RT area 1 Introduction We are interested in the coexistence between real time distributed systems and dynamic knowledge management This paper presents a 
mobile robot application implemented on a multiprocessor real time architecture The robot evolves in a totally unknown indoor environment while acquiring information. This implies for the mobile robot a permanent interaction Autonomy is demonstrated by imposing to the robot as mission to explore and to navigate the entire accessible area SUA95 The robot's limitations on hardware and computational power are successfully overcome by means of a software parallelism and a distributed architecture involving several CISC type processors In complex systems 
like mobile robots a large amount of independent activities are needed in parallel to assure reactivity and correct timing of the action execution  The formalisation of this activities results in a set of concurrent tasks Event's handling communication and task management mechanisms are required in order to guarantee adequate time and space responses Systems of this type where information control and decision levels must coexist need a knowledge 
management mechanism that assures its coherence within distributed modules In order to solve these constraints we support our work on Distributed Artificial Intelligence DAI concepts DEC87 We developed a behaviour based robot control architecture in order to achieve a natural design and management of the actions needed to accomplish the robot's mission Our behaviour oriented commands BOCs define a software architecture. They require a set of operation rules that must be respected by the system mobile robot in order to accomplish 
its goal Validation has been done by verifying the coherence of the system behaviour in accordance with the defined set of rules A real time implementation can be directly obtained from the BOCs model 2.Distributed Artificial Intelligence Approach Our work is based on a systemic approach BRU94 where knowledge is distributed among the processing entities that compose our application Each must have their own information, decision and control systems in order to be 
considered as autonomous intelligent subsystem. The intelligence of our system is related to the establishment of association links between the distinct entities in order to realise the different actions at the right moment The ability to act properly in unknown and dynamic environments is critical for all living beings Primitive 1068-3070/96 5.00 0 1996 IEEE Proceedings of EURWRTS 96 151 


species survive by using only pure reactive mechanisms direct answer to stimuli\while advanced species need to anticipate future events and make plans of actions to carry out their goals GE087 In order to design intelligent autonomous robots it is necessary to include mechanisms which guarantee both the coherent execution of plans and event reactivity In order to incorporate the reactive aspects we exploit some concepts of the behaviour architecture proposed by Brooks BR086 Our architecture uses a top-down approach of communicant system processes \(C.S.P.\where the design methodology is supported by two classical notions abstraction and decomposition Abstraction allows us to define a general entity without knowing its implementation while decomposition permits to model complex systems as a set of less complex subsystems We applied these concepts to model behaviours", treatments and data For example a complex behaviour is decomposed iteratively until elementary behaviours are reached. An elementary behaviour is an entity which interacts directly with the physical environment Decomposition criteria applied to find the net of \(C.S.P are the modularity and the parallelism of behaviours. This behavioural decomposition of the system allows the simultaneous representation of both the temporal evolution of behaviours and the parallel relation of the treatments This behaviour inspired design methodology allows different processing levels of intelligence and abstraction High levels perform planning supervision and sensor fusion activities Low levels are charged with actuators control sensor's information gathering and reactive actions execution We have developed a software architecture based on behaviour-oriented commands If BOC\A BQC is carried out by a group of co-operating behaviours which can execute at the same time 3 BOCs Behaviour Oriented Commands Following the notion of the agent proposed by Minsky MIN85 a single agent can be individually seen as a simple process which activates and inhibits other agents and which can itself be activated or inhibited From an external point of view an agent is seen as a complete service resulting from the co-operative actions performed by the agent and by an optional set of associated agents A behaviour has been defined by Mataric as a control law that clusters a set of constraints in order to achieve and maintain a goal Our notion of behaviour integrates the two previous concepts. A behaviour can be seen as an autonomous agent that co-operates with others to carry out and/or to respect the yield to a goal Simmons proposed the need of using two types of behaviours, deliberative and reactive ones, to achieve a coherent global action of a mobile robot evolving in a real unknown environment A deliberative behaviour acts in order to implement a set of actions leading to a specific goal, the plan can be modified dynamically as a function of the stimulus received during its execution In opposition a reactive behaviour acts in answer to a stimulus without taking into account a global plan but respecting a coherent way of acting In general stimulus activates and/or modifies the actions of the behaviours. A stimulus is a discrete and asynchronous event, which can also have some information associated to it Once an event arrives or an action is carried out a fact is generated This fact triggers a rule or a set of rules that will produce the next action of the plan to be executed These actions are direct physical interactions or complex services needed to react properly to the generated fact Each service is analogue to a command in that it must be requested executed and acquitted To carry out a command one or several behaviours co-operate simultaneously in order to solve problems beyond the scope of each one independently Our behaviour oriented commands" BOCs are the result of fusioning the notions of service and co-operative behaviours The system is analogue to a dynamic automata network where each automata can perform in parallel A BOC is defined as a control unit and a set of associated connected behaviours that carry out a servicelaction respecting a specific set of rules Figure 1 illustrates the composition and interactions of a BOC Each behaviour can be seen as an automata whose actions are either executed internally or requested to other behaviours by BOCs The control unit associated to a BOC is composed of a BOC's interface a behaviour's interface and a set of control rules The former one includes an entry port for the BOC's request and an output port for the BOC's acknowledgement The second one includes the control links between the BOC and its command associated behaviours CABs The links from the BOC to the CABs are of two types activation signals and inhibition signals End signals are sent from the CABs to their associated BOCs The last one warrants the co-ordination and synchronisation of the CABs by the use of a set of activation ending and inhibition rules which can be formalised by a finite state machine or a Petri net 152 


Figure 1 Schematic representation of a BOC The normal sequence of treatment of a BOC request is Once an event arrives to a behaviour its fact base is modified triggering a rule that will find the next BOC to execute The concemed behaviour demands the execution of the required BOC by sending a request The BOC request is received by its control unit and it actives its associated CABs All the CABs start working independently in parallel to achieve their desired behaviour An end signal is generate when one or some of CABs detect a BOCs ending condition When the end signal arrives to the BOCs control unit it sends an inhibition signals to stop all its CABs The control unit calculates and sends the BOCs acknowledgement to the demanding behaviour This acknowledge includes output data and information about the end of the BOCs execution This information can modify the behaviour's base of facts and thus a new similar sequence is started The end signal can be produced by a behaviour activated m by another control unit, the activatiodinhibition process is dynamic and the hierarchy might evolve in time 3 Example of Mobile Robot behaviours decomposition A mobile robot application is presented Only the active behaviours at time T are shown We use the top-down model to decompose our system in term of behaviour network To begin this decomposition we presume the existence of a  Life behaviour  Like other behaviours it is composed of its own rule list and state variables which together can infer a BOC request from its BOCs list Life Beha viours state variables  BUTTON-SIGNAL  ON  OFF ROBOT-MISSION   EMPTY  DOING  FINISH Life Behav ACTIVATE-lv  argl      iours BOCs List  ISSION argl   ACOUISITION TERAIN  BIBERONAGE L  BOC-MISSION-FAILLED I return  BOC-OK BOC-KIL IBOC LOW BATTERY  BOC CONTACT I Life Behaviours rule list i If BUTTON-SIGNAL 1s ON and ROBOT-MISSION 1s EMPTY then Call ACTIVE~MISSION\(ACQUISITION~TERRAIN BOC and ROBOT-MISSION is DOING If ACTIVATE-MISSION BOC\(ACQUISITI0N-TERRAIN acknowledge is BOC-OK then ROBOT-MISSION is now FINISH If BUTTON-SIGNAL is OFF and ROBOT-MISSION 1s DOING then Klll ACTIVE-MISSION BOC If ACTIVATE-MISSION BOC acknowledge is BOC-KILL then ROBOT-MISSION is EMPTY If ACTIVATE-MISSION BOC acknowledge is BOC-MISSION-FAILED then ROBOT-MISSION 16 EMPTY If ACTIVATE-MISSION BOC acknowledge 1s LOW-BATTERY then Kill ACTIVATE-MISSION If LOW-BATTERY then Call ROBOT MISSION  BIBERONNAGE  and ROEOT-MISSION is DOING If ROBOT MISSION  BIBERONNAGE acknowledqe is BOC-OK tcen ROBOT-MISSION is now FINISH and call ROBOT MISSION\(ACQUISITI0N TERRAIN   Fig 2 Active Behaviours at time T in a Mobil Robot application 153 


The example shows active behaviours at instant T More details or others behaviours are not shown because of size limitations. If a modification of a behaviour is wanted one has only to change its properties \(rules list, state variables list or BOCs list 4 Real Time Implementation A modular and incremental behaviour design based on the previous approach has given life to our robot We started by implementing the low level BOCs like Explore, Move Stop-When-Contact Avoid-Collision Then the high level ones like Fill-Region CircumnavigateObstacle Move-Straight ExploreWorld have been built Situation parallelism is naturally introduced by behaviours simultaneity. It is implemented by a distributed software design over a parallel hardware architecture The computing resources involved in knowledge treatment are distributed among big granularity processes real time tasks\under temporal constraints Co-ordination is achieved by means of real time communication and synchronisation mechanisms State changes in physical systems or in environment perception must be taken into account within time intervals assuring correct reaction of the autonomous robot Spatial distribution among elements implies a distribution of the control structure of our system BOCs and Behaviours Implementation The BOCs architecture which allow parallelism and co operation between behaviours involve the use of a set of control tools to guarantee the global coherence of remanent data describing system's state These tools are introduced to control the global coherence and have to avoid overloading system representation. In order to, they are represented in our model in the form of graphical objets that can be automatically converted into real time primitives by a graph compilation mechanism during the implementation phases For example each behaviour is represented by a rounded square during the design phase and is assimilate to a real time task when implemented Each BOC's unit control is represented by a rectangle with arrow links between its CABs In that case too each control unit is implement as an independent task which communicates with their own CABs by messages or ADA's like rendez-vous To guarantee a concurrent access to a shared resource we use mutual exclusion mechanisms Each critical resource is stamped to be writelread protected We show in figure 3 and figure 4 the global sketch of a task implementing a generic behaviour and a BOC control unit respectively We use a C language to represent the body of each task Real time primitives are explicit C functions as found in usual real time kernels roid Generic-Boc-Control-Unit\(void msg-type msg-data end-cab hoc-request bot-ack stack-type END-CABS-LIST int ack-miss i while 1  accept BOC request Receive-Msg boc-request  INFINITE-TIME CABS activation for i=l  i  boc-request nb-cabs-to-activate i msgdata=Make-Msg-CAB boc-request  ACTIVATION  Send-Message  boc-request id-cab-to-activate til  msgdata  I 1 wait end signal fin from CaB ack-miss=boc-Request->nb-cabs-to-activate Receive-Message\(&end-cab INFINITE-TIME ack-miss putlist END-CAB-LIST end-cab Create inhibition links with the N-1 active CABS for i=l  i  boc-request nb-cabs-to-activate;i msgdata=Make-Msg-CAB boc-request  INIBITION  Send-Message  boc-request id-cab-to-activate il  msg-data   1  while  ack-miss wait for CABS return information if Receivelessage end-cab mbox-cabs,NULL-TIME   putlist END-CABS-LIST end-cab ack-miss 1 I build BOC's acknowledge boc-ack=Make-BocAck END-CABS-LIST Send acknowledge to father Behaviour Send-Message boc-request id-behaviour-father boc-ack  1 1 Fig 3 Generic BOC control unit 154 


Joid Generic-Behaviour\(void  req-type hoc-request ack-type hoc-ack cab-msg-type activation-cab list-type END-CABs-LIST=NULL int ack-miss i inibition Initialisation of facts list Init-Facts-Base\(behaviour-base  while 1 wait for activation Receive-Message activation-cab  inibition=FALSE I INFINITE-TIME  wait for non blocking inhibition while   inibition  chose BOC to execute and ask for request boc-request=Find-Boc\(behaviour-base  Send-Message\(boc-request unit-contro1,boc-request wait ack-request Receive-Message boc-ack  NULL-TIME change facts list Update-Facts-Base\(boc-ack behaviour-base  look for events if Receive-Message\(&inibition-cab  NULL-TIME  inibition=TRUE  1 1 1 Fig 4 Generic behaviour Each behaviour waits for an activation signal while each control unit waits for a BOC's request message When a behaviour is activated it verifies if there has been an inhibition signal before doing a BOC's request A behaviour makes a BOC's request and waits for its acknowledgement The request is made by sending a message to the process that performs the BOCs control unit If there are several simultaneous request to the same BOC they are treated in a priority FIFO way Once the unit control receives the request, it activates its CABs by sending a message to them and then it waits for an end signal When a behaviour detects the end condition it produces this end signal and the unit control sends inhibition signals to all its CABs Finally it builds and sends the BOCs acknowledge message and waits for a new request 155 Process Management on a Processor An asynchronous approach has been used to develop our system as it is well adapted to specification and conception of applications where tasks are strongly parallel and co-operative. Temporal constraint verification and task co-ordination scheduling and synchronisation have been carried out by employing a pre-emptive real time kernel light process parallelism A dynamic priority mechanism is used to guarantee system reactivity to urgent non-synchronous events In order to avoid deadlock problems caused by priority inversion co operating tasks have the same priority They work in a time slicing mode thus allowing a situation parallelism treatment Communication and synchronisation between process embedded in the same processor is performed using synchronous messaging \(ADA's rendez-vous type like and non-synchronous messaging mailbox mechanism type-like LAP93 Hardware Architecture and Communications We have chosen a parallel physical architecture fig S with processors communicating by pairs allowing a large amount of data exchange. This topology is well adapted to embedded applications requiring modules with strong co operation like ours A request and acknowledge protocol is utilised to communicate and synchronise the processes Our application is composed of a great number of them and they are physically distributed over several hierarchically organised processors RS-232C      Optional Remote Station Mobil Embedded PC Robot n Double Access Memory 13 I I/OBus I I  I I I T 8051 Card 8051 Card LM628 I  I Processors1 I  I I E Fig. 5 Hardware Architecture 


Communication between the embedded PC and the remote control one is accomplished by a radio serial link Communication's temporal determinism is guarantied by the use of a protocol with frame error handling Communication between the embedded PC and the two 8051 is performed by a double-access memory with non synchronous communication messaging type-like protocol Request and acknowledge memory zones are dynamically allocated and released Double access critical resources and protected by mutual exclusion mechanisms Processes communicate with each other by using messages managed by the real time kernel communication inside a processor andfor by a communication manager communication between processors This allows each one to send messages without taking into account the physical location of the destination one Hence transparency to topological network architecture is obtained Experimental Results and Conclusion Using this approach a mobile robot has been built and successfully tested The robot evolves through the environment in a continuos fashion performing simultaneously its mission strategy localisation exploration cartography control motion and security activities. Therefore validating the correctness of our real time architecture A high level of intelligence has been reached with low hardware requirements Our distributed real time architecture and it's convergence to knowledge management systems allows successful implementation of conceptual representation of the robot's tasks formal behaviour rules and mechanisms improving the reactivity to events The model developed allows to manage to reuse and to modify the robot's knowledge in an non complex way as it incorporates and locates clearly the semantic rules The DAI approach proposed and its conjunction with the real time systems might be used in other types of complex systems. Integration of two aspects, a distributed real time architecture and a dynamic capitalisation of the knowledge, opens the way to future developments References BR086 Brooks R A A Robust Layered Control System for a Mobile Robot IEEE Journal of Robotics and Automation Vol 2 No 1 1986, 4 pp 535-539 Brunet E Ermine J.L ProblBmatique de la Gestion des Connaissances des Organisations Revue d'lngknierie des SystBmes d'lnformation Vol  DEC 8 71 Decker.K.S Distribued Problem Solving Techniques A survey IEEE Trans on Syst2ms man and cybernetics Vol 5 No 17,Sept-Oct 1987 ELF861 Elfes A CA Distributed Control Architecture fon an Autonomous Mobile Robot Art$cial Intelligence Vol I No 2 1986 GE087 Georgeff M.P Planning Annual Review of Computer Science Vol 2 pp. 359 400 LAP 931 Laplante P A Real time systems desing and analysis IEEE Computer Society Press 1993 MAT941 Mataric M.J Interaction and BRU94 2 NO. 3 1994, pp 263-291 Intelligent Behavior PhD Thesis MIT 1994 Simon and Schuster New York 1985 MIN85 Minsky M The Society of Mind\Ed  Simmons R ctstructured Control for Autonomous Robots IEEE Trans on Robotics and Automation Vol 10 No 1 Feb 1994 SUA951 Suarez A Gonzalez E Cab0 J.C Rollot Y Manuel B Moreno C Artigue An Autonomous Vehicle for Surface Filling ProcJEEE Intelligent Vehicles 95 Symp Sep. 1995 156 


For example assuming the data in Table 1 and the minimum support s is 2, we can extract the sequential pattern 23->38->49, i.e. users often tend to visit 23, then 38, followed by 49  t  User ID URL 1 5 23 49 1 <5 38 1 5 45 49 2 <23 2 <19 38 2 23 47 49   Extracting sequential patterns typically needs much more computational power than finding association rules The sequential discovery techniques we use involve 4 phases 001\002 Phase 1 finds the frequent item sets from the data sequences. This is almost identical to finding association rules. However, each item set is only counted once for every user. Therefore, although item 5 appears 3 times for user 1, it is only counted as appearing once 001\002 Phase 2 enumerates all the frequent items sets 1: <23 2: <38 3: <49 4: <23 49 001\002 Phase 3 transforms the original data sequences by replacing the items with the enumerated item sets  Table 2.  Transformed data  User ID URL 1 1 3 4 1 2 1 3 2 1 2 2 2 1 3 4  001\002 Phase 4 finds the frequent patterns in the transformed data by the counting algorithm similar to DHP. We can obtain the frequent sequential patterns that satisfy the minimum support. In this case, the sequences <1 2> <1 3> <2 3> <1 2 3> appear twice so they are all frequent sequences  We can employ a lexical tree to count the frequent sequential patterns efficiently during phase 4. Figure 8 shows the paths of the lexical tree. Figure 9 shows the quential pattern search algorithm along with the support percentage and the execution ansaction database  4. Conclusions  We have introduced the Internet Search Advisor ISA\, a personalized, knowledge-driven search system that helps the user to find web information based on individual preferences. To our knowledge, no existing search engines provide such personalized search results We have also implemented a data miner to extract association rules and sequential patterns based on an improved DHP algorithm that reduces the cost of the trim process. Finally we have introduced a data structure, called lexical tree, to find sequential patterns efficiently In the future, we need to develop an efficient sequential pattern data-mining algorithm that avoids generating all the candidate sets. We also need an efficient similarity-matching algorithm to find the similar URLs related to a specific keyword  References  1  R  A g arw a l   C  A g arw a l an d V  P r asad  A T r ee P r o j ect i o n  Algorithm for Generation of Frequent Item Sets Journal of Parallel and Distributed Computing pp. 350-371, 2001  2 S  Ag a r wa l  R  Ag r a wa l   P  M   D e s h p a n d e   A Gu p t a   J  F   Naughton, R.Ramakrishnan, and S. Sarawagi. On the computation of multidimensional aggregates In Proc. 1996 Int. Conf. Very Large Data Bases \(VLDB\22296 pp. 506 \226 521 Bombay, India, Sept. 1996  3  R. A g ra w a l, T  Im ie linsk i, a nd A  Sw a m i. Mining  association rules between sets of items in large databases Proc. of the ACM SIGMOD Conference on Management of Data pp. 207-216, Washington, D.C., May 1993  4 R. A g ra w a l a nd R. Srik a n t. Fa st a l g o rithm s f o r m i ning  association rules Proc. of the VLDB Conference Santiago Chile, September 1994  5  R A g ra w a l a nd R. Srik a n t. Mining Se que ntia l P a tte rns  Proc. of the 11 th Int\222l Conference on Data Engineering  Taipei, Taiwan, March 1995  6  Ri card o Baeza-Yat e s an d Bert h i er Ri b e i r o Net o  M o d e rn  Information Retrieval, Addison Wesley, New York, 1999  7 Ch ia-Hu i Ch an g an d Ch in g Ch i Hsu   En ab lin g  Co n cep tBased Relevance Feedback for Information Retrieval on the Proceedings of the IEEE Fourth International Symposium on Multimedia Software Engineering \(MSE\22202 2002114351/02 $17.00 \251 2002 IEEE  


WWW IEEE Transactions on Knowledge and Data Engineering vol. 11, no. 4, pp. 595 609 1999  8 S. C h a udhur i a nd U  D a y a l. A n ov e r v i e w  of  da ta  warehousing and OLAP technology. ACM SIGMOD Record 26:65-74, 1997  9  J ung hoo C ho, H e c t or G a r c ia M olina  L a w r e n c e P a g e  Efficient Crawling Through URL Ordering The Seventh International WWW Conference \(WWW98 Brisbane Australia, April 14-19, 1998    E F C odd S. B  C odd, a nd C  T  Sa lle y  B e y ond decision support Computer World 27, July 1993   J  G r a y S. C h a u dhur i, A  B o s w or th A   L a y m a n  D   Reicahrt, M. Venkatral, F. Pellow, and H. Pirahesh. Data Cube: A relational aggregation operator generalizing groupby, cross-tab and sub-totols Data Mining and Knowledge Discovery 1:29-54, 1997  12  L a w r en ce P a ge S e rgey Bri n  T h e A n at o m y o f a S earch  Engine The Seventh Internati onal WWW Conference WWW98 Brisbane, Australia, April 14-19, 1998  13 J S  P a rk M  S  Ch en  an d P  S  Yu  A n  ef f ect i v e h a sh based algorithm for mining association rules SIGMOD \22295  pp. 175-186    Root 1 2 3 4 2 3 3 3  Figure 8. A lexical tree  Time vs. Support Percentage 0 100 200 300 400 500 02468 Support Percentage Tim e  s    Figure 9. Time \(seconds\ vs. support percentage for the sequential pattern algorithm  Proceedings of the IEEE Fourth International Symposium on Multimedia Software Engineering \(MSE\22202 2002114351/02 $17.00 \251 2002 IEEE  


 A A A A A A A A B B B B B B B A B A B A B A B AB A B A A A A B B B A B A B A A B B B B A B A B A B A B A B A B A disjoint B A inside B A contains B A equals B A meets B A covered by B A covers B A overlaps B A B A B A B A B A B AB Figure 4 Topology and resolution increase with minimum bounding circles 64Mb of main memory Since the Apriori algorithm uses the number of transactions as support and we wanted to compare our algorithm with Apriori we have implemented MaxOccur and the na\250 021ve with transaction based support MaxOccur1 The second version of MaxOccur MaxOccur2 used the object-based support as presented in Algorithm 3.1 Table 9 shows the average execution times for the four algorithms with different image set sizes and 033 0 0  05 for Apriori 223Na\250 021ve\224 and MaxOccur1 and 0  0035 for MaxOccur2 The results are graphically illustrated in Figure 5 Clearly MaxOccur scales well with both versions treating one thousand images in 1.3 seconds on average regardless of the size of the data set The running time for 002ltering the frequent item-sets with 033 0  the maximum support threshold line 16 of Algorithm 3.1 is negligible since it is done in main memory once the frequent item-sets are determined Moreover the calculation of the total number of items line 4 of Algorithm 3.1 is done during the 002rst scan of the data set and has limited repercussion on the algorithms execution time The major difference between Apriori and MaxOccur is in ascertaining the candidate item-sets and counting their repeated occurrences in the images Obviously MaxOccur discovers more frequent item-sets The na\250 021ve algorithm also 002nds the same frequent item-sets but is visibly capable of less performance in execution time The left graphic in Figure 6 shows the average number of frequent item-sets discovered with the three algorithms Apriori found on average 109 different frequent k-item-sets while MaxOccur1 and Na\250 021ve found 148 on the same data sets and MaxOccur2 found 145 on average The discrepancy between MaxOccur1 and MaxOccur2 is basically due to the different de\002nition of support The price we pay in performance loss with MaxOccur is gained by more frequent item-sets and thus more potentially useful association rules with recurrent items discovered ofimages Apriori Na\250 021ve MaxOccur1 MaxOccur2 10K 6.43 70.91 13.62 13.68 25K 15.66 176.69 32.35 34.11 50K 30.54 359.38 66.07 67.44 75K 44.93 514.33 97.27 101.23 100K 60.75 716.01 130.12 137.81 Table 9 Average execution times in seconds with different number of images 0 100 200 300 400 500 600 700 800 10K 25K 50K 75K 100K Apriori MaxOccur1 MaxOccur2 Na\357ve time images Figure 5 Scale up of the algorithms 6 Discussion and conclusion We have introduced in this paper multimedia association rules based on image content and spatial relationships between visual features in images using coarse to 002ne resolution approach and we have demonstrated the preservation and changes in topological features during resolution re\002nement We have put forth a Progressive Resolution Re\002nement approach for mining visual media at different resolution levels and have presented two algorithms for the discovery of content-based multimedia association rules These rules would be meaningful only in a homogeneous image collection a collection of semantically similar images or received from the same source channel Many improvements could still be added to the multimedia mining process to speed up the discovery or to re\002ne or generalize the discovered results 017 One major enhancement in the performance of the multimedia association rule discovery algorithms is the addition of some restrictions on the rules to be discovered Such restrictions could be given in a metarule form Meta-rule guided mining consists of dis#ofimages 033 0 0  25 0  20 0  15 0  10 0  05 10K 1.43 2.20 2.70 5.06 13.51 25K 2.80 4.78 6.31 11.20 32.35 50K 6.27 9.28 11.59 22.74 66.07 75K 8.24 13.57 17.69 33.94 97.27 100K 11.32 17.63 23.13 46.74 130.12 Table 10 Average execution time in seconds of MaxOccur with different thresholds 


 0 20 40 60 80 100 120 140 160 MaxOccur2 MaxOccur1 Na\357ve Apriori Apriori MaxOccur1 MaxOccur2 Na\357ve F k  Figure 6 Frequent item\255sets found by the dif\255 ferent algorithms covering rules that not only are frequent and con\002dent but also comply with the meta-rule template For example with a meta-rule such as 223 H-Next-to X Y   Colour x red  Overlap Y Z   P  Y Z  224 one need only to 002nd frequent 3-item-sets of the form f HNext-to\(red Y  Overlap Y 003  P  Y 003  g where Y is an attribute value and P a visual descriptor or spatial relationship predicate Obviously such a 002lter would greatly reduce the complexity of the search problem A method for exploiting meta-rules for mining multilevel association rules is given in  017 We have approximated an object in an image to a locale which is an area with a consistent visual feature such as colour Objects in images and videos are obviously more complex In a recent paper 9 re gions and their signatures are used as objects in a similarity retrieval system A computationally ef\002cient way to identify distinct objects in images is however still to be proposed Automatically identifying real objects and using spatial relationships between real objects would reduce the number of rules discovered and make them more signi\002cant for some multimedia applications 017 Object recognition or identi\002cation in image processing and computer vision is a very active research 002eld Accurately identifying an object in a video for example as being an object in itself is a very dif\002cult task We believe that data mining techniques can help in this perspective Multimedia association rules with spatial relationships using the motion vector of locales as a conditional 002lter can be used to discover whether locales moving together in a video sequence are part of the same object with a high con\002dence 017 There are many application domains where multimedia association rules could be applied and should be tested such as global weather analysis and weather forecast medical imaging solar surface activity understanding etc We are investigating the application with Magnetic Resonance Imaging MRI to discover associations between lesioned structures in the brain or between lesions and pathological characteristics Further development and experiments with mining multimedia data will be reported in the future References 1 R  A gr a w al and R  S r i kant  F ast a l gor i t h ms f o r m i n i n g a ssociation rules In Proc VLDB  pages 487\226499 1994 2 M  J  E genhof er  Spatial Query Languages  PhD thesis University of Maine 1989 3 M  J  E genhof er and J  S har ma T opol ogi cal r e l a t i ons between regions in r 2 and z 2 In Advances in Spatial Databases SSD'93  Singapore 1993 4 U  M  F ayyad S  G  D j or go vski  a nd N  W e i r  A ut omat i n g the analysis and cataloging of sky surveys In U Fayyad G Piatetsky-Shapiro P Smyth and R Uthurusamy editors Advances in Knowledge Discovery and Data Mining  pages 471\226493 AAAI/MIT Press 1996 5 Y  F u a n d J Han  M e ta-ru le-g u i d e d m in in g o f a sso ciatio n rules in relational databases In Proc 1st Int Workshop Integration of Knowledge Discovery with Deductive and ObjectOriented Databases  pages 39\22646 Singapore Dec 1995 6 J  H an an d Y  F u  Disco v e ry o f mu ltip le-le v el asso ciatio n r u l es from large databases In Proc VLDB  pages 420\226431 1995 7 Z  N  L i  O R Z a 250 021ane and Z Tauber Illumination invariance and object model in content-based image and video retrieval Journal of Visual Communication and Image Representation  10\(3\:219\226244 September 1999 8 R  M iller a n d Y  Y a n g  Asso ciatio n r u l es o v e r i n t erv a l d ata In Proc ACM-SIGMOD  pages 452\226461 Tucson 1997 9 A  N atse v  R Rasto g i  a n d K Sh im W ALR U S A s imilar ity retrieval algorithm for image databases In Proc ACMSIGMOD  pages 395\226406 Philadelphia 1999  R Ng L  V  S  L akshmanan J  H an a nd A Pang E x ploratory mining and pruning optimizations of constrained associations rules In Proc ACM-SIGMOD  Seattle 1998 11 R Srik an t a n d R Ag ra w a l M i n i n g q u a n titati v e asso ciatio n rules in large relational tables In Proc ACM-SIGMOD  pages 1\22612 Montreal 1996  P  S t ol or z H  N a kamur a  E  M esr obi an R  M unt z E  S h ek J Santos J Yi K Ng S Chien C Mechoso and J Farrara Fast spatio-temporal data mining of large geophysical datasets In Proc Int Conf on KDD  pages 300\226305 1995  O  R  Z a 250 021ane Resource and Knowledge Discovery from the Internet and Multimedia Repositories  PhD thesis School of Computing Science Simon Fraser University March 1999  O  R  Z a 250 021ane,J.Han,Z.-N.Li,J.Y.Chiang,andS.Chee MultiMediaMiner A system prototype for multimedia data mining In Proc ACM-SIGMOD  Seattle 1998  O  R  Z a 250 021ane J Han Z.-N Li and J Hou Mining multimedia data In CASCON'98 Meeting of Minds  Toronto 1998 


18001  balancing mechanism which requires further investi gation 4.5 Speedup Figure 12 shows the speedup ratio for pass 2 vary ing the number of processors used, 16 32 48 and 64 where the curve is normalized with the 16 processor execution time The minimum support value was set to 0.4 4.5 0.5 1 1 0 I 10 20 30 40 50 60 70 number of mxessors Figure 12 Speedup curve NPA HPA and HPA-ELD attain much higher lin earity than SPA HPA-ELD an extension of HPA for extremely large itemset decomposition further in creases the linearity HPA-ELD attains satisfactory speed up ratio This algorithm just focuses on the item distribution of the transaction file and picks up the extremely frequently occurring items Transferring such items could result in network hot spots HPA-ELD tries not to send such items but to process them locally. Such a small mod ification to the original HPA algorithm could improve the linearity substantially 4.6 Effect of increasing transaction Figure 13 shows the effect of increasing transac tion database sue as the number of transactions is increased from 256,000 to 2 million transactions We used the data set t15.14 The behavior of the results does not change with increased database size The minimum support value was set to 0.4 The num ber of processors is kept at 16 As shown each of the parallel algorithms attains linearity 5 Summary and related work In this paper we proposed four parallel algorithms for mining association rules A summary of the four database size Sizeup 0 I 0 500 loo0 1500 uxw amount of transaction thousands Figure 13 Sizeup curve algorithms is shown in Table 5 In NPA the candi date itemsets are just copied amongst all the proces sors Each processor works on the entire candidate itemsets NPA requires no data transfer when the supports are counted However in the case where the entire candidate itemsets do not fit within the mem ory of a single processor the candidate itemsets are divided and the supports are counted by scanning the transaction database repeatedly Thus Disk 1/0 cost of NPA is high PDM, proposed in 6 is the same as NPA which copies the candidate itemsets among all the processors Disk 1/0 for PDM should be also high The remaining three algorithms SPA HPA and HPA-ELD partition the candidate itemsets over the memory space of all the processors Because it better exploits the total system's memory, disk 1/0 cost is low SPA arbitrarily partitions the candidate itemsets equally among the processors Since each processor broadcasts its local transaction data to all other pro cessors the communication cost is high HPA and HPA-ELD partition the candidate itemsets using a hash function which eliminates the need for transac tion data broadcasting and can reduce the comparison workload significantly HPA-ELD detects frequently occurring itemsets and handles them separately which can reduce the influence of the workload skew 6 Conclusions Since mining association rules requires several scans of the transaction file its computational requirements are too large for a single processor to have a reasonable response time This motivates our research In this paper we proposed four different parallel algorithms for mining association rules on a shared nothing parallel machine and examined their viabil 29 


Table 5 characteristics of algorithms ity through implementation on a 64 node parallel ma chine the Fujitsu AP1000DDV If a single processor can hold all the candidate item sets parallelization is straightforward It is just suf ficient to partition the transaction over the proces sors and for each processor to process the allocated transaction data in parallel We named this algo rithm NPA However when we try to do large scale data mining against a very large transaction file the candidate itemsets become too large to fit within the main memory of a single processor In addition to the size of a transaction file a small minimum support also increases the size of the candidate itemsets As we decrease the minimum support computation time grows rapidly but in many cases we can discover more interesting association rules SPA HPA and HPA-ELD not only partition the transaction file but partition the candidate itemsets among all the processors We implemented these al gorithms on a shard-nothing parallel machine Per formance evaluations show that the best algorithm HPA-ELD attains good linearity on speedup by fully utilizing all the available memory space which is also effective for skew handling At present we are doing the parallelization of mining generalized association rules described in 9 which includes the taxonomy is-a hierarchy Each item belongs to its own class hierarchy In such mining associations between the higher class and the lower class are also examined Thus the candidate itemset space becomes much larger and its computation time also takes even longer than the naive single level association mining Parallel pro cessing is essential for such heavy mining processing Acknowledgments This research is partially supported as a priority research program by ministry of education We would like to thank the F\221ujitsu Parallel Computing Research Center for allowing us to use their APlOOODDV sys tems References l R.Agrawal T.Imielinski and ASwami 223Min ing Association Rules between Sets of Items in Large Databases\224 In Proc of the 1993 ACM SIGMOD International Conference on Manage ment of Data pp207-216 May 1993 2 R.Agrawal and RSrikant 223Fast Algorithms for Mining Association Rules\224 In Proc of the 20th International Conference on Very Large Data Bases pp.487-499 September 1994 3 J.S.Park M.-S.Chen and P.S.Yu 223An Effec tive Hash-Based Algorithm for Mining Associ ation Rules\224 In Proc of the 1995 ACM SIG MOD International Conference on the Manage ment of Data SIGMOD Record Vo1.24 pp.175 186 June 1995 4 H.Mannila H.Toivonen and A.I.Verkamo 223Ef ficient Algorithms for Discovering Association Rules\224 In KDD-94:AAAI Workshop on Knowl edge Discovery in Databases pp.181-192 July 1994 5 A.Savasere, E.Omiecinski and S.Navathe 223An Effective Algorithm for Mining Association Rules in Large Databases\224 In Proc of the 21th International Conference on Very Large Data Bases pp.432-444 September 1995 6 J.S.Park M.-S.Chen and P.S.Yu 223Efficient Parallel Data Mining for Association Rules\224 In Proc of the 4th International Conference on In formation and Knowledge Management pp.31 36 November 1995 7 T.Shintani and M.Kitsuregawa 223Considera tion on Parallelization of Database Mining\224 In Institute of Electronics Information and Com munication Engineering Japan SIG CPS Y95 88 Technical Report Vo1.95 No.47 pp.57-62 December 1995 8 T.Shimizu T.Horie and H.Ishihata 223Perfor mance Evaluation of the APlOOO Effects of message handling broadcast and barrier syn chronization on benchmark performance-\224  In S WO PP 22292 9.2 ARC 95 Information Processing Society of Japan Vo1.92 No.64 1992 9 R.Srikant and R.Agrawal 223Mining Generalized Association Rules\224 In Proc of the 21th Inter national Conference on Very Large Data Bases pp.407-419 September 1995 30 


Plenary Panel Session 30 XML Databases   Moderator: Michael Carey, IBM Almaden Research Center USA Panelists Adam Bosworth, Microsoft Corporation USA David De Witt University of Wisconsin-Madison, USA Alon Levy University of Washington USA Bruce Lindsay IBM Almaden Research Center USA Jennifer Widom Stanford University USA Demo Session 1 Web Query Optimizer  661 V Zadorozhny L Bright L Raschid T Urhan and M Vidal ReQueSS: Relational Querying of Semi-structured Data  664 R Sunderraman The IDEAL Approach to Internet-Based Negotiation for E-Business  666 J Hammer C Huang Y Huang C Pluempitiwiriyawej M Lee H Li L Wang Y Liu and S Su READY A High Performance Event Notification Service  668 R Gruber B Krishnamurthy, and E Panagos A Multimedia Information Server with Mixed Workload Scheduling  670 G Nerjes DISIMA An Object-Oriented Approach to Developing an Image Database System  672 V Oria T Ozsu P Iglinski B Xu and L Cheng Demo Session 2 The Collaboration Management Infrastructure  677 H Schuster D Baker A Cichocki D Georgakopoulos and M Rusinkiewicz Assisting the Integration of Taxonomic Data The LITCHI Toolkit  679 I Sutherland J Robinson S Brandt A Jones S Embury W Gray R White and F Bisby TheaterLoc: Using Information Integration Technology to Rapidly Build Virtual Applications  681 G. Barish Y.4 Chen D Dipasquo, C Knoblock S Minton I Muslea and C Shahabi Lineage Tracing in a Data Warehousing System  683 Y Cui and J Widom xiii 


The Mentor-Lite Prototype A Light-Weight Workflow Management System  685 J Weissenfels M Gillmann 0 Roth, G Shegalov and W Wonner Location Prediction and Queries for Tracking Moving Objects  687 0 Wolfson B Xu and S Chamberlain Semiorder Database for Complex Activity Recognition in Multi-Sensory Environments  689 S Bhonsle A Gupta S Santini and R Jain Tutorial 1 Web Information Retrieval  693 M Henzinger Tutorial 2 Mobile and Wireless Database Access for Pervasive Computing  694 P Chrysanthis and E Pitoura Tutorial 3 Data Mining with Decision Trees  696 J Gehrke Tutorial 4 Directories Managing Data for Networked Applications  697 D Srivastava Tutorial 5 Indexing High-Dimensional Spaces Database Support for Next Decade\222s Applications  698 S Berchtold and D Keim xiv 


 T5.I2.D100K T10.I4.D100K T15.I4.D100K T10.I6.D400K T10.I6.D800K T10.I6.D1600K Optimizations across Databases 5 0 5 10 15 20 25 30 35 40 45 Improvement COMP TREE COMP-TREE 1 2 4 8 1 2 4 8 1 2 4 8 2 4 8 2 4 8 1 2 4 8 Processors Databases Figure 5 Effect of Computation and Hash Tree Balancing good as the COMP optimization The reason that the hash tree balancing is not suf\336cient to offset inherent load imbalance in the candidate generation in this case The most effective approach is to apply both optimizations at the same time COMP-TREE The combined effect is suf\336cient to push the improvements in the 40 range in the multiple-processor case On 1 processor only hash tree balancing is bene\336cial since computation balancing only adds extra cost 5.4 Short-circuited Subset Checking Figure 6 shows the improvement due to the short-circuited subset checking optimization with respect to the unoptimized version The unoptimized version is the Apriori algorithm due to Agrawal et al 5 The results are presented for dif ferent number of processors across dif ferent databases The results indicate that while there is some improvement for databases with small transaction sizes the optimization is most effective when the transaction size is large In this case we get improvements of around 25 r the unoptimized version To gain further insight into this optimization consider 336gure 7 It shows the percentage improvement obtained per iteration on applying this optimization on the T20.I6.D100K database It shows results only for the uni-processor case r similar results were obtained on more processors We observe that as the iteration k increases there is more opportunity for shortcircuiting the subset checking and we get increasing bene\336ts of up to 60 The improvements start to fall off t the high end where the number of candidates becomes small resulting in a small hash tree and less opportunity for short-circuiting It becomes clear that is an extremely effective 15 Proceedings of the 1996 ACM/IEEE Conference on Supercomputing \(SC\22296 0-89791-854-1/96 $ 10.00 ACM 


 T5.I2.D100K T10.I6.D800K T15.I4.D100K T20.I6.D100K procs across Databases 0 5 10 15 20 25 Improvement 1 2 4 8 Figure 6 Effect of Short-circuited Subset Checking 23456789101112 Iterations 0 10 20 30 40 50 60 improvement T20.I6.D100K Figure 7  Improvement per Iteration  proc   16 Proceedings of the 1996 ACM/IEEE Conference on Supercomputing \(SC\22296 0-89791-854-1/96 $ 10.00 ACM 


optimization for larger transaction sizes and in cases where there are large number of candidate k itemsets 6 Conclusions In this paper e presented a parallel implementation of the Apriori algorithm on the SGI Power Challenge shared memory multi-processor We also discussed a set of optimizations which include optimized join and pruning computation balancing for candidate generation hash tree balancing and short-circuited subset checking We then presented experimental results on each of these Improvements of more than 40 were obtained for the computation and hash tree balancing The short-circuiting optimization was found to be extremely effective for databases with large transaction sizes Finally we reported the parallel performance of the algorithm While we d good speed-up we observed a need for parallel I/O techniques for further performance gains References  R Agra wal T  Imielinski and A Swami Database mining A performance perspecti v e  I n IEEE Trans on Knowledge and Data Engg  pages 5\(6 1993  R Agra wal T  Imielinski and A Swami Mining association rules between sets of items in lar ge databases In Proc M SIGMOD Intl Conf Management of Data  May 1993  R Agra wal H Mannila R Srikant H T o i v onen and A I V erkamo F ast disco v ery of association rules In U F et al editor Advances in Knowledge Discovery and Data Mining  MIT Press 1996  R Agra wal and J Shafer  P arallel mining of association rules design implementation and e xperience Technical Report RJ10004 IBM Almaden Research Center San Jose CA 95120 Jan 1996  R Agra wal and R Srikant F ast algorithms for mining association rules In Proc 20th VLDB Conf  Sept 1994  M Cierniak W  Li and M J Zaki Loop scheduling for heterogeneity  I n 4th IEEE Intl Symposium on High-Performance Distributed Computing also as URCS-TR 540 CS Dept Univ f Rochester  Aug 1995  M Holsheimer  M  K ersten H Mannila and H T o i v onen A perspecti v e on databases and data mining In 1st Intl Conf Knowledge Discovery and Data Mining  Aug 1995  M Houtsma and A Swami Set-oriented mining of association rules In RJ 9567  IBM Almaden Oct 1993  H Mannila H T o i v onen and I V erkamo Ef 336cient algorithms for disco v ering association rules In AAAI Wkshp Knowledge Discovery in Databases  July 1994  J S P ark M Chen and P  S Y u  A n e f fecti v e hash based algorithm for mining association rules In Proc M SIGMOD Intl Conf Management of Data  May 1995 17 Proceedings of the 1996 ACM/IEEE Conference on Supercomputing \(SC\22296 0-89791-854-1/96 $ 10.00 ACM 


 J S P ark M Chen and P  S Y u  E f 336cient parallel data mining for association rules T echnical Report RC20156 IBM T J Watson Research Center Aug 1995  G Piatetsk y-Shapiro Disco v ery  presentation and analysis of strong rules In G P S et al editor  KDD  AAAI Press 1991  A Sa v asere E Omiecinski and S Na v athe An ef 336cient algorithm for mining association rules in large databases In Proc 21st VLDB Conf  1995  M J Zaki M Ogihara S P arthasarathy  and W  Li P arallel data mining for association rules on shared-memory multi-processors Technical Report 618 Department of Computer Science University of Rochester 618 1996 18 Proceedings of the 1996 ACM/IEEE Conference on Supercomputing \(SC\22296 0-89791-854-1/96 $ 10.00 ACM 


