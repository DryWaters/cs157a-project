                              203 978-1-4799-0929-2/13/$31.00 c  2013 IEEE 


Feng Zhao Xiao-mu Mu Jun-tang Yu Shu-ning Wang 58-63 Verication and Validation of Mars Science Laboratory Surface System Richard Welch Daniel Limonadi Jessica Samuels Chaz Morantz Noah Warne r 64-69 Systems Engineering the Curiosity Rover A Retrospective Richard Welch Daniel Limonadi Robert Manning 70-75 A Meta-System Architecture for the Energy-Water Nexus William Lubega Amro Farid 76-81 Hierarchical Robotic Crane System for Post Grid Array Environments Ted Shaneyfelt Mo Jamshidi Sos Agaian 82-86 Modelling of a Nuclear Emergency Plan A System of Systems Engineeri ng Approach Mario Ramrez Ferrero Cristina Ruiz Martn Jos Luis Gonzlez lvarez Ad olfo Lpez Paredes 87-92 Recognising further concepts from complex systems research in SoSE Vernon Ireland Yasmin Ooi-Sanches 93-98 Towards a Systems of Systems Engineering EU Strategic Research Agend a Sharon Henson Vishal Barot Michael Henshaw Carys Siemieniuch Murra y Sinclair 99-104 Strategic Systems Planning and Decision Framework for System of Syste ms Resilience Matthew Montoya 105-110 Mars Science Laboratory Frame Manager for Centralized Frame Tree Database and T arget Pointing Won Kim Chris Leger Stephen F Peters Joseph Carsten Antonio DiazCalderon 111-116 Mars Science Laboratory CHIMRA/IC/DRT Flight Software for Sample Acquisition and Processing Won Kim Chris Leger Joseph Carsten Daniel Helmick Stephen Kuhn Rick Redick Diana Trujillo 117-123 Dreaming on Mars How Curiosity Performs Actuator Warm-Up while Sleepin g Gene Lee James Donaldson 123-128 System of Systems for Autonomous Mission Decisions Paul C Hershey Mu-Cheng Wang Douglas Toppin 129-134 Common Software Platforms in System-of-Systems Architectures The State of the Practice John Klein Sholom Cohen Rick Kazman 135-140 Understanding Patterns for System of Systems Integration Rick Kazman Klaus Schmid Claus Nielsen John Klein 141-146 ii 


Updates to the Rover Driving Tools for Curiosity John Wright Frank Hartman Brian Cooper Jeng Yen 147-152 In-situ Operations and Planning for the Mars Science Laboratory Robotic Arm  The First 200 Sols Matthew Robinson Curtis Collins Chris Leger Joseph Carsten Vandi Tompkins Frank Hartman Jeng Yen 153-158 Optimal Update Frequency Model for Physical Machine State Change and Vir tual Machine Placement in the Cloud John J Prevost Kranthi Manoj Mo Jamshidi 159-164 An Exploratory Analysis of the In\ruence of Information Security on the Adopt ion of Cloud Computing Omondi John Opala Syed Shawon Rahman 165-170 A Mechanism Design Framework for the Acquisition of Independently Man aged Systems of Systems Navindran Davendralingam Robert Kenley 171-176 Modeling of System of Systems via Data Analytics Case for Big Data in S oS Barnabas K Tannahill Chris Maute Yunus Yetis Maryam Ezell Aldo Jaim es Azima Mottaghi Roberto Rosas Halid Kaplan Mo Jamshidi 177-183 Test and Validation of the Mars Science Laboratory Robotic Arm Matthew Robinson Curtis Collins Chris Leger Won Kim Joseph Carste n Vandi Tompkins Ashitey Trebi-Ollennu Brandon Florow 184-189 A Monitoring Point Selection Approach for Power Distribution Systems Hirofumi Terada Tsukasa Onishi Tatsuhiro Tsuchiya 190-195 Vascular Occlusion Training as an Alternate Method of Gaining Muscle Liam Lyons Matthew Joordens Stuart Warmington 196-201 Research on mission reliability modeling of system of systems YuanXing Huang Xing Pan Lin Ma 202-206 The Evaluation Method for Brittleness of SoS Architecture Based on Ent ropy Jun Zhang Xing Pan Lin Ma 207-211 Re\rection on a model of accident to help to implement ecient prev ention strategies Raoul Textoris 212-217 A ROSETTA Framework for Live-Synthetic Aviation Trade-os Prelimin ary Report Trevor Holden Charles E Dickerson 218-223 iii 


The Integrated Blast Eects Sensor Suite A Rapidly Developed Comp lex System of Systems Nick Mulkey Brian Liu Alessio Medda 224-228 Regional Failure Survivability for Cloud Networking Services Using Pos t Fault Restoration Feng Gu Khaled Bashir Shaban Nasir Ghani Majeed M Hayat Chadi Assi 229-234 The International Space Station Applying System of Systems Methodol ogy Noah Wenger Anastasia Antoniev Alex Gorod 235-242 Extracorporeal Membrane Oxygenation ECMO A Systems of Systems Engi neering Characterization Lawrence Pihera Tommer R Ender Matthew Paden 243-248 A Novel Approach of SoS Modeling and Comprehensive Evaluation based-on Ont ology Jing Zhang Wang Ming-yang He Yan Li Wei ZeMin Li Qin zhang Yu 249-254 Net-Centric System of Systems Framework For Human Detection Ryan Bowen Ferat Sahin 255-260 Governance of Enterprise Transformation Case Study of the FAA NextGen Project Hamid R Darabi Mo Mansouri Alex Gorod 261-266 Towards Interacting Systems in Product Lifecycle Management Lszl Horvth Imre J Rudas 267-272 A System based Approach to Construct a Kaposi Sarcoma-Associated Herpesvi rus KSHV Specic Pathway Crosstalk Network Amy W Daali Yufei Huang Mo Jamshidi 273-278 Modeling a Real Case Metasystem Architecture Using Finite State Pr ocess Formalism Roberto W S Rodrigues 279-284 Engineering Human Capital A System of Systems Modeling Approach Dennis Folds Vanessa M Thompson 285-290 Change-Ready Manufacturing Planning and Control Systems Mohamed Ismail 291-296 Minimizing Energy Consumption in Random Walk Routing for Wireless Se nsor Networks utilizing Compressed Sensing Minh T Nguyen 297-301 Time Delay Estimation in Gene Regulatory Networks Elmira Mohyedinbonab Omid Ghasemi Mo Jamshidi Yufang Jin 302-307 High-Accuracy Heading Determination iv 


Aly El-Osery Stephen Bruder Darren Laughlin 308-313 Achieving Action to Improve the Framework for Defence Strategy and Exe cution A Case Study Stephen Cook Richard Hodge 314-319 v 


Fig 4 Time vs Number of EC2 CPUs Our MR-HAP better utilizes available compute resources to signiìcantly improve runtime executions of K-Means for each level This lack of an overall parallelization scheme results in reduced performance at scale than MR-HAP HK-Means runtime initially increases by 8.5 when ECU is increased from 1 to 10 due to Hadoop cluster overhead including network latency and I/O time However at 10 ECU HK-Means overcomes this overhead and begins to beneìt from the MapReduce parallelization scheme This results in an eventual 16 runtime decrease between 1 and 80 ECU at which point HK-Means eventually reaches a linear relationship with the data at a runtime around 225 minutes Unlike MR-HAP HK-Means never surpasses its undistributed runtime threshold of 146 minutes indicated by the green dotted line in Fig 4 Finally at its best HK-Means runs 90 slower than MR-HAP requiring 226 minutes of execution compared to MR-HAPês 23 minutes With signiìcantly faster runtimes MR-HAP still posts purity levels competitive with HK-Means shown in Fig 5 This combination of speed and high performance is ideal for processing big data in a largescale cloud computing environment V C ONCLUSION The need for efìcient and high performing data analysis frameworks remain paramount to the big data community The AP clustering algorithm is rapidly becoming a favorite amongst data scientists due to its high quality grouping capabilities while requiring minimal user speciìed parameters Recently a multilayer structured version of the AP algorithm HAP was introduced to automatically extract tiered aggregations inherent in many data sets HAP is modeled as a message-based network that allows communication between nodes and between levels in the hierarchy and mitigates many of the biases that arise in techniques that require one to input the number of clusters In the present work we have developed the rst ever extension MR-HAP to address the big data problemÑdemonstrating an efìcient parallel implementation using MapReduce that directly improves the runtime complexity from quadratic to linear The novel tensor-based partitioning scheme allows for parallel message updates and utilizes a consistent data representation that is leveraged by map and reduce tasks Our approach seamlessly allows us to cluster a variety of data modalities which we experimentally showcased on data sets ranging from synthetic numerical points to imagery Our analysis and computational perforFig 5 Purity levels of MR-HAP vs HK-Means MR-HAP posts results highly competitive with HK-Means mance is competitive with the state-of-the-art in MapReduce clustering techniques R EFERENCES  S Humbeto v  Data-intensi v e computing with MapReduce and Hadoop  in  2012 pp 1Ö5  T  A S F oundation Hadoop 1.1.2 documentation  The Apache Software Foundation 03 2013 A v ailable http://hadoop.apache.org/docs/r1.1.2  I E Gi v oni C Chung and B J Fre y  Hierarchical af nity propagation  vol abs/1202.3722 2012  J A Hartigan and M A W ong  Algorithm AS 136 A k-means clustering algorithm  vol 28 pp 100Ö108 1978  G McLachlan and D Peel  John Wiley  Sons Inc 2000  B J Fre y and D Dueck Clustering by passing messages between data points  vol 315 2007  J Dean and S Ghema w at MapReduce simpliìed data processing on large clusters in  USENIX Association 2004 pp 10Ö10  C.-T  Chu S K Kim Y A Lin Y  Y u G Bradski A Y  Ng and K Olukotun MapReduce for Machine Learning on multicore in  2007 pp 281Ö288  C Ze wen and Z Y ao P arallel te xt clustering based on mapreduce  in  2012 pp 226Ö229  H W ang Y  Shen L W ang K Zhufeng W  W ang and C Cheng Large-scale multimedia data mining using MapReduce framework in  2012 pp 287Ö292  R M Este v es T  J Hack er  and C Rong Cluster analysis for the cloud Parallel competitive tness and parallel k-means for large dataset analysis in  2012 pp 177Ö184  T  Nair and K Madhuri Data mining using hierarchical virtual k-means approach integrating data fragments in cloud computing environment in  2011 pp 230Ö234  F  W u W  W ang H Zhang and Y  Zhuang  IGI Global 2010 ch The Clustering of Large Scale E-Learning Resources pp 94Ö104  T  A S F oundation  Apache Mahout Scalable machine learning and data mining The Apache Software Foundation 2013 Available http://mahout.apache.org  L Kaufman and P  Rousseeuw  Clustering by means of medoids   vol 87-3 1987  J Xiao J W ang P  T an and L Quan Joint af nity propagation for multiple view segmentation in  2007 pp 1Ö7  H Lu K N Plataniotis and A N V enetsanopoulos  A surv e y of multilinear subspace learning for tensor data  vol 44 no 7 pp 1540Ö1551 Jul 2011  N Sahoo J Callan R Krishnan G Duncan and R P adman Incremental hierarchical clustering of text documents in  ACM 2006 pp 357Ö366  A Gionis H Mannila and P  Tsaparas Clustering aggre gation   vol 1 Mar 2007 
AICT CoRR Applied Statistics Finite Mixture Model Science OSDI NIPS CGC IEEE CloudCom IEEE CloudCom IEEE CCIS Handbook of Research on Hybrid Learning Model Advanced Tools Technologies and Applications Reports of the Faculty of Mathematics and Informatics Delft University Technology IEEE Computer Vision Pattern Recognition CIKM ACM TKDD 
18 


          
Manager Node Job 4 Job 1 Job 3 Job 2 Queue Manager Node Node Node Job Simulator Predictor Task Job Simulator Predictor Task Time Simulation Selection Hadoop simulation interval t2 state capture sim start t2+x fineätune sim end t1 state capture sim start t1+x fineätune sim end Dynamic Scheduling Data Prefetching Online Prediction Online Prediction Figure 10 Use Cases of Online Prediction Framework same data block from disks To get the best performance and efìciency scheduler should work together with both caching and prefetching We will use an example to illustrate how caching and prefetching can improve pe rformance and efìciency of Hadoop Suppose 3 jobs as shown in Table II are submitted to a MapReduce system The nish column shows estimated nish time of each job in the baseline MapReduce system With these numbers in a baseline system the 3 jobs account for 340 clusteräseconds in a baseline MapReduce system With caching enabled only j ob 3 can beneìt from caching because it accesses data 
d d d d d d 
1 1 1 1 1 1 20 
which was also accessed by job 1 Job 1 and job 2 access data for the rst time so these data cannot be cached and cannot be sped up Assume job 3 get a speed up of 50 and it runs for 50 seconds Therefore The 3 jobs account for 290 clusteräseconds in total with caching enabled If we can predict task locations and prefetch data blocks for all tasks we can preload data into RAM for each job and we can speed up each job by 50 regardless of whether data has ever been accessed before The 3 jobs account for 170 clusteräseconds in total with prefetching enbaled In terms of performance Prefetching outperforms baseline by 100 and caching by 70 Prefetching can improve performance of the system but it imposes more load on underlining disk resource Because we prefetch data again for job 3 is read twice  once for job 1 and once for job 3 Total data read for prefetching is 3 GB the same as baseline In comparison with caching enabled we do not need to read data again for job 3 because is already cached in RAM Total d ata read for caching is 2 GB a 50 improvement over baseline and prefetching Job Start Finish Accessing data 1 0 100 d1 1GB 2 10 150 d2 1GB 3 200 300 d1 1GB Table II J OBS IN A M AP R EDUCE SYSTEM  Job Baseline w caching w prefetching w both 1 100 100 50 50 1GB 1GB 1GB 1GB 2 140 140 70 70 1GB 1GB 1GB 1GB 3 100 50 50 50 1GB 0GB 1GB 0GB Overall 340 290 170 170 3GB 2GB 3GB 2GB Table III P ERFORMANCE AND RESOURCE CONSUMPTION OF THE JOBS  In fact caching and prefetching can work together and make the system optimal Consider the same example with caching and prefetching both enabled Consider with prefetching enabled and we k eep data prefetched and pro cessed in RAM as we would do with caching enabled All jobs can be sped up by 50 and total CPU used is 170 clusteräseconds For data read from disks we donêt need to read again for job 3 so total data read from disks is 2 GB Overall Table III summarizes the pros and cons of caching and prefetching The default scheduler in MapReduce JobQueue TaskScheduler is a rstäcomeäìrstäserve FCFS scheduler Under JobQueueTaskScheduler all jobs are sorted by submission order into a queue and the scheduler always picks new tasks from the rst job in the queue until the rst job nishes and the second job is promoted to be the new rst job A major drawback of FCFS is that subsequent jobs must wait until preceding jobs nish If the rst job in the queue is a large job subsequent small jobs must wait for a long period before they are executed A new class of schedulers including Quincy 13 and D el ay S c hedul i n g 9 tries to solve the problem of long delays for small jobs in FCFS Multiple jobs are allowed to run concurrently and share the resource of a cluster in term of task slots fairly so small jobs are not blocked by longärunning large jobs Wang et al 11 ha v e s h o w n d if ferent w o rkloads p erform differently under different scheduler Hence the scheduling strategy should be determined at runtime based on the properties of the jobs currently running in the cluster and the ones waiting in the queue Our online prediction framework can solve exactly that problem by predicting the execution time of the current workload under different scheduler policies in faster virtual time In Section III we have shown that running the simula tion every seconds is sufìciently frequent to be accurate as running time of most tasks is in the minutes Thus the system can provide feedback in time to make the next real scheduling decision Of course this technique should not be 
B Dynamic Scheduling 
305 
305 
305 
305 


taken to an extreme where the system is forced to switch back and forth between two schedulers that produce very similar results for the current workload To prevent this and any overhead associated w ith that scenario the system should change to a different scheduler only if that results in signiìcant performance gain V R ELATED W ORKS shares its goal of integrated simulation with another MapReduce simulator Mumak 14  b ut di f f ers from it in that Mumak is designed to run ofîine driven by a trace whereas our runs online along with the real and is driven by the live workload on the cluster In  we must predict execution time of a new task based on historical Another difference is that runs periodically and each time it runs we must take snapshots of  task scheduler and worker nodes and replicate them into  Several recent works 12 7  8 are b as ed on pre deìned performance models within each MapReduce task We adopt a simple linear model in this paper Since MapRe duce jobs are a collection of a large number of smaller tasks simple linear model is accura te enough for a computation framework like Hadoop There has been other extensive previous research in simulation of MapReduce workloads and setups 14   15  12    16  17    18  is unique in its goal of predicting a live MapReduce task Compared to all other MapReduce simu lators our prediction framework is arguably more realistic easier to verify and evaluate and can directly beneìt system performance Our framework predicts what is about to happen in the current system in the near future and therefore predictions can be veriìed and evaluated The results from the prediction can be readily used to improve performance of the live system In contrast other simulators either try to match what has already happened in the past or simulate a particular cluster environment ofîine VI C ONCLUSION In this paper we have described a simulationäbased online prediction framework for Hadoop We design and employ our simulator to predict nearäfuture system behavior based on the current state of the Hadoop scheduler The information can then be incor porated into the scheduler to better allocate jobs to nodes and achieve overall higher performance We evaluate the proposed simulation frame work using TeraGen TeraSort grep and wordcount We nd that for studied applications 95 of the predicted task execution times are within 10 of the actual values and 80 of predicted task start times in a 30äsecond window are within seconds of the actual start times In our future work we plan to leverage the prediction framework to implement prefetching for MapReduce to improve latency of initial I/O and a dynamic multiästrategy scheduler that can switch between multiple scheduling strategies based on current workload A CKNOWLEDGMENT This work was sponsored in part by the NSF under Grant No CNSä1016408 CNSä1016793 CCFä0746832 and CNS 1016198 R EFERENCES 1 A pache S of t w ar e F oundat i on   A p ache H adoop  F eb  2011  A v a ilable h ttp://hadoop.apache.org  J  D ean and S  G hema w at MapReduce Simpliìed Data Processing on Large Clusters in 
Job Simulator Job Simulator JobTracker Job Simulator Job Simulator JobTracker Job Simulator Job Simulator 
2 
 2004 pp 137Ö150 3 B al deschw i e l e r  E r i c   H o r t onw or ks Mani f e st o   O n l i n e  Available http://hortonworks.com/blog/ourämanifesto 4 D  B or t h akur  S  R ash R  S c hmi d t  A  A i yer  J G r ay  J S Sarma K Muthukkaruppan N Spiegelberg H Kuang K Ranganathan D Molkov and A Menon Apache hadoop goes realtime a t Facebook in  Jun 2011 p 1071  A mazon Amazon E lastic MapReduce  E M R   Online Available http://aws.amazon.com/elasticmapreduce 6 H  M ont i  A  R  B u t t  and S  S  V azhkudai  C A T C H  A Cloudäbased Adaptive Data Transfer Service for HPC in  2011 7 H  H er odot ou H  L i m G  L uo N  B o r i so v  L  D ong F  B  Cetin and S Babu Starìsh A Selfätuning System for Big Data Analytics in  2011 pp 261Ö272 8 H  H er odot ou H adoop P e r f o r mance Model s   D u k e U n i v er  sity Tech Rep CSä2011ä05 Feb 2011  M  Z aharia D  B orthakur  J  S en S arma K E l melee gy  S Shenker and I Stoica Del ay scheduling a simple tech nique for achieving locality and fairness in cluster schedul ing in  2010 pp 265Ö278  G  A n ant h anar ayanan A  G hodsi  A  W a ng D  B o r t hakur  S Kandula S Shenker and I Stoica Pacman coordinated memory caching for parallel jobs in  2012 pp 20Ö20  G  W a ng A  R  B u t t  H  Mont i  and K  G upt a T o w ar ds Synthesizing Realistic Workload Traces for Studying the Hadoop Ecosystem in  2011  G  W a ng A  R  B u t t  P  Pande y  and K  G upt a A si mul a t i o n approach to evaluating desig n decisions in mapreduce setups in  2009  M I s ar d V  P r abhakar a n J C u r r e y  U  W i eder  K  T alw a r  and A Goldberg Quincy fair scheduling for distributed computing clusters in  2009 pp 261Ö276  A  C  Mur t hy   Mumak M ap R educe S i m ul at or   MAPREDUCEä728 Apache JIRA 2009 Onlin  A v a i l a bl e http://issues.apache.org/jira/browse/MAPREDUCEä728  A  V e r ma L  C h er kaso v a  a nd R  H  C ampbel l  P l a y I t Again SimMR in  IEEE Sep 2011 pp 253Ö261  F  T e ng L  Y u a nd F  Magoul  es SimMapReduce A Sim ulator for Modeling MapReduce Framework in  IEEE Jun 2011 pp 277Ö282  Y  L i u M L i  N  K  A l h am and S  H ammoud H S i m A MapReduce simulator in enabling Cloud Computing  May 2011  S  H ammoud MR S i m  A di scr e t e e v ent b ased MapR educe simulator in  IEEE A ug 2010 pp 2993Ö2997 
OSDI SIGMOD Proc IPDPS CIDR Proc EuroSys NSDI MASCOTS MASCOTS Proc sosp 2011 IEEE International Conference on Cluster Computing 2011 Fifth FTRA International Conferen ce on Multimedia and Ubiquitous Engineering Future Generation Computer Systems 2010 Seventh International Conference on Fuzzy Systems and Knowledge Discovery 
306 
306 
306 
306 


state of innovation stakeholder  node PQ It  s a balanced node Based on this, we could calculate the  node PQ Calculation process is: set different inn ovation stakeholders state i U  and j U Value of ij 000T can be get from  innovation time difference. Innovation stakeholdersí social effect and industrial effect can be obtained upon ij B  and ij G set according to relation between innovation stakeholders  Model 4.1 points out  that the value of Gij  directly affects social benefits and sector benefits. Large Gij  can lead to increasing benefits of the entire industry and the entire social growth Bij reflects big organizationís impact on businesses. Only strengthening the inter agent association within big organization and enhancing the str ategic partnership between enterprises can jointly promote the development of the entire industry, and bring more social benefits, so that each agent can be improved   5 Summary This paper puts forward the concept of the big organization based on the CSM t heory. It introduces the basic implication of the big organization and theoretical framework of the big organization including: the big organization's perspective  overall perspective, dynamic perspective, and new resource perspective; the big organizat ionís sense  the purpose of the organizational structure is innovation, organizational activities around the flow of information, breaking the traditional organizational structure, encouraging self run structure, and blurring organizational boundaries; the big organizationís platform  the platform ecosystem of the big organization ; the big organizationís operation mode  borderless learning mode, and cluster effect; the big organizationís theory  active management theory  leading consumers, and culture  entropy reduction theory  negative culture entropy and humanistic ecology theory  inspiring humanity, and circuit theory  a virtuous circle, and collaborative innovation theory  collaborative innovation stakeholder. This paper also discusses culture entropy reduction theory of the big organization  negative culture entropy, and coordinated innovation theory  innovation stakeholders collaboration. Culture entropy change model and collaborative in novation model are constructed   The research has just begun for the big organization. It also needs further improvement but remains the trend of the times   Reference  1  Gordon Pellegrinetti, Joseph Bentsman. Nonlinear Control Oriented Boiler Modeling A Benchmark Problem for Controller De sign [J  I E E E tr a n s a c tio n s o n c o n tr o l s y s te m s te c h n o lo g y 2 0 1 0  4 1\57 65  2  Klaus Kruger, Rudiger Franke, Manfred Rode Optimization of boiler start up using a nonlinear 457 


boiler model and hard constraints [J  E n e r gy 201 1 29   22 39 2251  3  K.L.Lo, Y.Rathamarit  State estimation of a boiler model using the unscented Kalman filter [J  I E T  Gener. Transm. Distrib.2008 2 6\917 931  4  Un Chul Moon, Kwang. Y.Lee. Step resonse model development for dynamic matrix control of a drum type boiler turbine system [J IE E E  T ra nsactions on Energy Conversion.2009 24 2\:423 431  5  Hacene Habbi, Mimoun Zelmat, Belkacem Ould Bouamama. A dynamic fuzzy model for a drum boiler turbine system [J  A u to m a tic a 2 0 0 9 39:1213 1219  6  Beaudreau B C. Identity, entropy and culture J   J o ur na l  o f  economic psychology, 2006, 27\(2 205 223  7  YANG M, CHEN L. Information Technique and the Entropy of Culture J  A cad e m i c E x ch a n g e  2006, 7: 048  8  ZHANG Zhi feng. Research on entropy change model for enterprise system based on dissipative structure J  Ind ustrial  Engineering and  Management 2007, 12\(1\ :15 19  9  LI Zhi qiang, LIU Chun mei Research on the Entropy Change Model for Entrepreneurs' Creative Behavior System Based on Dissipative Structure J  C h i n a S of t S c i e n c e  2009   8  1 62 166   458 


A Global Solution COVERAGE North and South America EMEA and Asia White lines are flights in the masFlight platform from February 8, 2013 Yellow pins are weather stations feeding hour ly data to our platform Maps from Google Earth / masFlight masFlight tracks flights, airports and weather around the world  Global daily flight information capture  82,000 flights  350 airlines  1700 airports  Integrated weather data for 6,000 stations  Match weather to delays  Validate block forecasts at granular level  Add weather analytics to IRROPS review and scenario planning 


Example 1: Proposed FAA Tower Closures masFlight used big-data to link airport operations across three large data sets  Current and historical airline schedules  Raw Aircraft Situation Display to Industry \(ASDI\AA  Enhanced Traffic Management System Counts \(ETMS\Airport operations counts by type \(commercial, freight, etc TOWER CLOSINGS Dots indicate closures; Red dots have scheduled service Based on scheduled service March 1 7, 20 13; scheduled service includes scheduled charter flights, cargo flig hts, and passenger flights Dots  indicate  closures  Red  dots  have  scheduled  service Bas ed  o n sc h edu l ed  se rvi ce  M a r c h 1  7, 2013; scheduled se rvi ce includ es scheduled c harter fli g hts car g o fli g hts a nd passen g er fli g hts Findings: Proposed Tower Closings  From schedules database: 55 airports with scheduled passenger airline service  14 EAS Airports  From ASDI & ETMS: 10,600 weekly flights on a flight plan \(ex. VFR and local traffic  6,500 Part 91/125 weekly flights  4,100 Part 135/121 weekly flights  


Example 1: Big-Data Analytics Applied to ASDI and ETMS To Analyze Operations TOWER CLOSINGS  26 44 24 23 11 10 6 2 1 2 Up to 5 5-10 10-15 15-20 20-25 25-30 30-35 35-40 40-45 45 Count of Airports Average Number of Daily Operations with a Flight Plan Filed Distribution of Airports By Average Number of ìDailyî Impacted Flights Airports Affected by Tower Closures Source: ASDI radar data ñ Part 91 151 flying and Part 135/121 flying March 1-7, 2013; masFlight analysis Note: Average ìdailyì operations based on 5-day week 


Example 2: Aviation Safety Causal Factor For example, consider the following ASRS report \(ACN 1031837 Departing IAH in a 737-800 at about 17,000 FT, 11 m iles behind a 737-900 on the Junction departure over CUZZZ Intersection. Smooth air with wind on the nose bearing 275 degrees at 18 KTS We were suddenly in moderate chop which lasted 4 or 5 seconds then stopped and then resumed for another 4 or 5 seconds with a significant amount of ri ght rollingÖ I selected a max rate climb mode in the FMC in order to climb above the wake and flight path of the leading -900 We asked ATC for the type ahead of us and reported the wake encounter. The 900 was about 3,300 FT higher than we were  Synopsis  B737-800 First Officer reported wake encounter from preceding B737-900 with resultant roll and moderate chop What causal factors can be identified from this narrative that could be applied to future predictive applications CAUSAL FACTORS Data-mining algorithms can mine the text of safety reports to obtain specific data that can be used to analyze causal factors  


Example 2: Identifying Causal Factors CAUSAL FACTORS  Indicators ñ Data Element Methods ñ Identifying Context and Causes  Time of day  Date range \(month day  Aircraft type  Fix or coordinates  Originating airport  Destination airport  Weather notes We pinpoint the sequencing of flights on the IAH Junction Seven departure \(at CUZZZ\the specified wind conditions to find cases wher e a B737-900 at 20,000 feet precedes by 11 miles a B737-800 at 17,000 feet  Search related data sets including ASDI flight tracks, local traffic and congestion  Weather conditions for alter native causes \(winds aloft shear and convecti ve activity  Airline specific informati on \(repeated occurrence of event in aircraft type Big data gives us visibility into contextual factors even if specific data points are missing such as a specific date or route Big-data analytics gives us insight into unreported factors as well 


Example 3: Correlating Utilization and Delays  60 65 70 75 80 85 90 95 100 7 9 11 13 ONTIME DEPARTURE PERFORMANCE HOURS OF DAILY UTILIZATION 60.0 70.0 80.0 90.0 100.0 7.0 9.0 11.0 13.0 Narrowbodies By Day of Week 60.0 70.0 80.0 90.0 100.0 7.0 9.0 11.0 13.0 Widebodies by Day of Week Daily Utilization vs. On-time Departures January 2013 System Operations Correlation Coefficient -0.53 Includes AA, AC, AS B6 F9, FL, NK, UA, US VX and WN SOURCE masFlight \(masflight.com COMPARING OTP AND UTILIZATION 


 6.2 6.0 5.8 5.8 5.2 4.9 LGB JFK BOS MCO DCA FLL JetBlue Focus Average Daily Deps per Gate Used UTILIZATION BY HUB Example 4: Daily Utilization of Gates, by Hub Big-data analysis of different carriers daily departures per gate used SOURCE masFlight \(masflight.com June 1 through August 31, 2012 Gates with minimum 1x daily use 7.7 7.4 7.2 6.2 6.1 5.8 3.8 3.6 ORD LAX SFO EWR DEN IAH IAD CLE United Airlines Hubs Average Daily Deps per Gate Used 7.8 6.4 5.5 5.4 5.3 4.4 4.3 4.0 SEA SAN PDX ANC SFO GEG LAX SJC Alaska Airlines Hubs Average Daily Deps per Gate Used 7.2 6.9 6.8 6.4 5.0 2.7 ORD DFW LAX LGA MIA JFK American Hubs Average Daily Deps per Gate Used 7.2 6.9 6.6 4.9 4.2 CLT DCA PHL PHX BOS US Airways Hubs Average Daily Deps per Gate Used 6.6 5.9 5.5 4.7 MCO BWI ATL MKE AirTran Hubs Average Daily Deps per Gate Used ne pe 


Conclusions for Big Data in Aviation  Big-data transforms operational and commercial problems that were practically unsolvable using discrete data and on-premises hardware  Big data offers new insight into existing data by centralizing data acquisition and consolidation in the cloud and mining data sets efficiently  There is a rich portfolio of information that can feed aviation data analytics  Flight position, schedules, airport/gate, weather and government data sets offer incredible insight into the underlying causes of aviation inefficiency  Excessive size of each set forces analysts to consider cloud based architectures to store, link and mine the underlying information  When structured, validated and linked these data sources become significantly more compelling for applied research than they are individually  Todayís cloud based technologies offer a solution CONCLUSIONS 


Conclusions:  Our Approach  masFlightís data warehouse and analysis methods provide a valuable example for others attempting to solve cloud based analytics of aviation data sets  masFlightís hybrid architecture, consolidating secure data feeds in on-premises server installations and feeding structured data into the cloud for distribution, addresses the unique format, security and scale requirements of the industry  masFlightís method is well suited for airline performance review competitive benchmarking, airport operations and schedule design and has demonstrated value in addressing real-world problems in airline and airport operations as well as government applications CONCLUSIONS 





