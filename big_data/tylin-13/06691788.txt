Optimizing Queries over Semantically Integrated Datasets on MapReduce Platforms HyeongSik Kim Kemafor Anyanwu Department of Computer Science North Carolina State University Raleigh NC USA  hkim22 kogan  ncsu.edu Abstract Life science databases generally consist of multiple heterogeneous datasets that have been integrated using complex ontologies Querying such databases typically involves complex graph patterns and evaluating such patterns poses challenges when MapReduce-based platforms are used to scale up processing translating to long execution work”ows with large amount of disk and network I/O costs In this poster we focus on optimizing UNION queries e.g unions of conjunctives for inference and present an algebraic interpretation of the query rewritings which are more amenable to ef“cient processing on MapReduce Keywords SPARQL Life Science MapReduce Union I I NTRODUCTION Life science databases actively adopt Semantic Web technologies to deal with the increasing number and complexity of datasets e.g Uniprot 1 is a central hub of functional information on proteins comprised of 16 sub datasets in RDF approx more than 1TB in N-triple Querying such datasets often brings challenges to optimization e.g a large number of multi-values in datasets and unbounded properties in queries In addition inferences are frequently involved as a part of query processing because a given semantic model may entail or imply data not explicitly stated While some data warehouses provide online SPARQL endpoints many of them do not fully handle such issues therefore users may want to explore the data by themselves but may not have the capabilities to process such large datasets A distributed data processing framework on cloud can be a good alternative on these issues e.g MapReduce allows programs to be automatically parallelized over arbitrarysized clusters of commodity-grade machines Most graph pattern matching processes can be encoded into MR jobs or expressed with the high-level data”ow query languages used in the extensions of the MapReduce framework such as Hive and Pig Supporting inference can also be achieved by materializing all entailed information and querying using regular methods since all information would then be explicitly represented in the data However this process will need to be repeated after each update to guarantee completeness and consistency A backward chaining with query re-writings can be used instead which generates unions of conjunctive queries UCQs in 2 This technique e xpands a triple pattern in a query to include all other possible alternatives guided by an ontology using UNIONs 1 http://beta.sparql.uniprot.org  Query w   TP STP Edges in STP S-O   O-O   Br in  UQ1 17 17 1 0 0 17 UQ2 51 20 3 0 0 17 UQ3 7 3 4:1 4:0 2 0 2 UQ4 24 12 2 0 0 12 UQ12 24 12 2 0 0 12 UQ18 10 5 2 5 0 6 Table I Characteristics of union queries For complex ontologies the number of the alternatives is large leading to UNION queries with a large number of branches Table I gives the characteristics of the example UNION queries provided by the Uniprot SPARQL endpoint page UQ3 and UQ18 are queries that explicitly contain a UNION clause while others are inference queries expanded to UCQs using the rewriting rules in UQ x  denotes the expanded query for UQ x  The ef“ciency of the evaluation of union queries on MapReduce-based platforms depends on the algebraic interpretation of the query In trivial cases e.g each UNION branch contains only a single triple pattern relationalstyle systems such as Hive detect the correlations across the UNION subqueries merging the execution of multiple branches into the single MR job However other complex queries are often translated into the long MR work”ows with a large number of joins Fig 1\(a shows the relationalstyle execution plan for the example query in Fig 1\(b using k MR jobs for k UNION branches and an additional job for the union of the output from the branches An optimization technique such as union pushdown might be applicable to relieve this issue However the translation of relational logical expressions to MapReduce data”ows might not always yield ef“cient execution work”ows and so still warrants further investigation II N ESTED T RIPLE G ROUP D ATA MODEL AND ITS A LGEBRA NTGA In some previous work we introduced an alternative data model and algebra called the Nested TripleGroup Data model and Algebra NTGA The intuition behind NTGA is to manage related sets of triples Our notion of relatedness here is a group of triples having the same subject or a Subject triplegroup which can be produced by a GROUP BY operation on the Subject column of the triple relation Such triplegroups can be considered candidate 2013 IEEE International Conference on Big Data 978-1-4799-1293-3/13/$31.00 ©2013 IEEE 5 


                      Figure 1 a A relational-style plan for b an example union query and c the corresponding NTGA-based plan matches to star subpatterns in a query if they contain at least one triple for each property in the star subpattern For example a triplegroup tg 1  TG  p 1 p 2  consisting of two triples whose properties are p 1 and p 2 can be a valid match to the graph pattern   s 1 p 1 o 1   s 1 p 2 o 2    If necessary we can produce an equivalent set of n-tuples from a triplegroup by splitting the triples in the triplegroup based on the property types and then applying a Cartesian product between the resulting subsets e.g tg.triples  p 1   tg.triples  p 2 where tg.triples  prop  is the set of triples in tg with property type prop  An advantage of the triplegroup model is conciseness of representation similar to the advantage of the nested relational model over the classic relational model Further the mapping of the NTGA logical plan to a MapReduce execution work”ow highlights its advantages when considering MapReduce platforms NTGA provides a set of logical operators to deal with triplegroups e.g TG_GroupBy  S  constructs labeled triplegroups by grouping the triples by the subject elds TG_GroupFilter    lters out triplegroups that do not contain matching subsets to any of the star subpatterns and TG_Join     joins triplegroups to support s-o/o-o joins In the rst MR cycle of the work”ow the operators   S  and   are executed which essentially lter out unnecessary triples and construct star-subgraphs triplegroups relevant to the query Additional MR cycles are then required to join star-subgraphs using     The maximum number of additional cycles will be n  where n is the  of star pattern subqueries In contrast using the relational-style interpretation of the queries generally requires 2 n  1 MR cycles Such shorter execution work”ows lead to bene“ts given that each MR incurs costs of expensive disk/network I/Os In this poster we explore the extension of NTGA to optimize UNION query processing We rst consider the case in which all k UNION subqueries contain a single star pattern as the only graph pattern Fig 1\(c shows that we include all the graph patterns in each UNION as parameters to    which evaluates multiple patterns concurrently in a single data pass or MR job For more complex cases each union branch can contain more than single star patterns which requires joins between star-subgraphs In this case we rewrite the UNION operators in the query expression to disjunctive ORs in the parameter of the operator     This is achieved by extending the parameter to accept more than one star patterns using the primitives similar to a logical OR    Figure 2 Execution time of union queries in Uniprot III E VALUATION The experiments were conducted on an 80-node Hadoop 0.20.2 clusters in VCL 2  NTGA was integrated into Pig 0.8.0 and a stable version of Hive 0.10.0 was selected as a benchmark target Each colored rectangle in the bars of the Fig 2 represents each MR job e.g Hive used 4 MR jobs for UQ3  In general Fig 2 shows that Hive plans performed worse than the NTGA one because the length of the MR execution work”ow depends on the size of rewritings in Hive i.e the width  of branches of the UNION clause For example the input les were read 12 times for UQ4 and UQ12 where each MR cycle was used to process each branch of the UNION Hive was unable to identify and exploit correlation across the UNION subqueries because they are not composed of single triple pattern The NTGA execution plan was able to merge all such correlated subqueries into a single execution cycle allowing input les to be scanned only once This allowed NTGA to outperform the Hive for the UNION queries with large widths   5  e.g NTGA was approximately 9 times faster than Hive for UQ12 in Fig 2 A CKNOWLEDGMENT This work is partially funded by NSF grant IIS-1218277 R EFERENCES  G Gottlob G Orsi and A Pieris Ontological Queries Rewriting and Optimization in Proc ICDE  2011 pp 2…13  H Stuck enschmidt and J Broekstra T ime-Space T rade-of fs in Scaling up RDF Schema Reasoning in Proc WISE  2005 pp 172…181  J.-Y  Chang and S goo Lee An Optimization of Disjuncti v e Queries Union-Pushdown in Proc COMPSAC  1997 pp 356…361  P  Ra vindra H Kim and K An yanwu An Intermediate Algebra for Optimizing RDF Graph Pattern Matching on MapReduce in Proc ESWC  2011 pp 46…61 2 http://vcl.ncsu.edu 6 


   
A Motivation B Framework A Overview snap temp t t k temp 
012\013\014\015 002 007 010 004 016\017\020\021 022 023 024 025\026\014\021\027\030 002 007 010 031\011 010 004 032\002\033\034\025\004\026\015\035\017\030\002\007 010 031\007 010\036\037 004  031\006\006\006\006\006\002\033\004 
007 010 011 010 007 010 
III.T HE F RAMEWORK O VERVIEW O F E CAD In this section, we will describe the motivation of our eCAD and overview the framework of our system In practice, we all know that virtualized resources of the same kind tend to have similar values on their QoS metrics. As an unsupervised method, clustering can automatically divide the samples into different categories based on the distance density and similarity between them. It has been widely used in the field of anomalies detection [8 En lig h t en e d by  th is w e  would take clustering as our basic approach. Compared with the traditional classification approaches, the clustering algorithm would not only identify the outliers with less prior knowledge, but also resist to the change of the cluster numbers Here, we use a simple example to illustrate our motivation Fig.1\(a\ presents a solution for anomalies detection problem with DBSCAN \(Density-Based Spatial Clustering of Applications with Noise\, which is one of the density-based clustering algorithms. For it is only capable of recognizing the outliers separately at each monitoring period, we define it as a static clustering baseline algorithm in our paper However, as a result of the accumulated monitored data, the lower clustered resources would evolve over time. To this end we need to develop an evolutionary method to trace those transitions of virtualized resources, as shown in Fig.1\(b\We name it as the evolutionary clustering algorithm As mentioned by Ferretti et al [18 ou r eCA D fu n c tion i ng  as a middleware should comprise three main components monitoring composite, detection composite, and inference composite. Our eCAD is deployed in the middle of the cloud infrastructure and remote users, which can be seen in the Fig.2 To emphasize, we only focus on those anomalies that occur in virtual machines of the service level Physical level and service level are two abstract plains in the IaaS cloud. The basic physical devices are deployed in the lower layer of cloud, while the VMs virtual machines\provided to users outside the cloud lies in the service layer Monitoring composite collects the basic information such as the CPU and Memory usage, from the virtual nodes in the cloud. Some of them might be running in the kernel level, and some of them in the user level Detection composite is in charge of finding the anomaly nodes based on the information collected by the monitoring composite. The key algorithm used in this module is derived from the DBSCAN clustering which would be discussed in the following sections After the above two stages, inference composite sets off to explore the reasons for those anomaly nodes detected earlier In general, the real-time performance information generated in the physical and service level is intercepted by the monitoring composite. Then the detection composite use the evolutionary clustering algorithm proposed to perceive the anomalies among the VMs in the service layer, in order to avoid the SLO negotiated between the counterparts. At last, the inference composite utilize the algorithm based on the MNeighbors to present the reasons that might lead to violation IV E VOLUTIONARY C LUSTERING FOR A NOMALIES D ETECTION  In this section, we will first overview the framework of the current evolutionary clustering. After that, we propose an evolutionary approach with DBSCAN for cloud anomalies detection. Our method is considered to have a strong resistance to the noise and capable of finding anomalies in the cluster with arbitrary shapes. Besides, the algorithm for inferring the anomalies will be presented in the end The evolutionary framework of our research is primarily based on the following temporal smoothness penalty theory which was put forward by Chakrabarti [19  Its m a in i d e a ai m s  to add a constraint cost function to the traditional static clustering algorithms Here, we assume that and are respectively the evolutionary and static clustering results of virtualized nodes in cloud at time t. Given a time step t, the object of evolutionary clustering is to find the optimal that minimizes the cost function as follows denotes the current cost between evolutionary and statistic clustering results. Thus, the temporal function denotes the historical cost between time step and 1. Theoretically, we could use any continuous steps before time t to depict the temporal cost in  instead of only two steps. Moreover, as mentioned before, we could explain the above cost function either into the PQM framework or into the PCM framework [20  21           
 where the snapshot function 
     
    
Fig.2 eCAD framework under the cloud environment 
330 
330 


011 010       006 007 010     011 010       016  017 010 037 031\017 010  031&\031\017 010   006\031 007 010     016  012 010 037 031\012 010  031&\031\012 010   006\031 
 
012\013\014\015  007 010      016\017\020\021 022 023      025 026 020  012 010  034\017 010    032 002 033\034\025 004 026 020  012 010  034\012 010\036\037    006/\006\006\006\006 002 0 004 007 010     007 010     1 234\010 002 022 023 004 5 67 016\025\026\011 010       032 002 033\034\025 004 026\006\007 010\036\037          006/\006\006\006\006\006\006\006\006\006\006\006\006\006\006\006\006\006\006\006\006\006\006\006\006\006\006\006\006\0028\004 007 010     007 010     016\025\026\011 010       032 002 033\034\025 004 026\006\007 010\036\037          006/\006\006 
B Evolutionary DBSCAN EPS MINPTS Definition\e element of the neighbor vector represents the number of within the EPS for each virtualized node, that would be a core node only if its value is large than MINPTS t i  t C Further Discussion VNSet EPS MINPTS t t MINPTS MINPTS distance\(v i EPS 
   017 010  012 010  007 010\036\037 011 010 025 9  035\015 035   007 015    016$\035 033 031\035  031&\031\035 021  035  9  035   007 015    016$\035 033 031\035  031&\031\035 021  035  9  9  
  
 
As a weight between the snapshot and temporal cost, the parameter alpha Equation \(1\can be set according to the status of the cloud environment. In particular, the evolutionary algorithms are regarded as an incremental clustering, when  equals to 0. Meanwhile, it turns out to be a static clustering when equals to 1. In addition to the linear combination above we might also use another non-linear weight to demonstrate the balance of cost between snap\(\ and temp In our context under the density-based evolutionary clustering with DBSCAN, we should redefine the snapshot and temporal function to illustrate the anomalies detection from an evolutionary view DBSCAN, which is short for the density-based spatial clustering of applications with noise, has become one of the classical algorithms for anomalies detection. It can not only identify the abnormal virtualized nodes, but also automatically distinguish those nodes into different clusters Core nodes, boundary nodes and anomaly nodes are three basic components in the DBSCAN. For a given virtualized node, it would become a core node, only if the number of its neighbors exceeds an upper threshold. On the contrary, those virtualized nodes within a limited distance are defined as the boundary nodes, which are mainly determined by the core nodes. Besides, the remaining nodes would become anomaly nodes, which usually take a minority of the dataset. Core nodes and their boundary nodes that could be directed within a limited distance are eventually divided into the same class Anomaly nodes would not belong to any class and thus should be regarded as outliers in the virtualized layer. As mentioned before, several researches have taken advantage of this method to accomplish the anomalies detection in cloud. However, they failed to take the transitions of those anomalies and its surrounding neighbors into consideration From the analysis above, we could infer that the cores nodes are determinant factors in the DBSCAN clustering According to it, we should trace the variation of the core nodes to precisely character the evolution for different clusters Nevertheless, we all know that the core nodes are determined by two main parameters and which are regularly settled on the basis of data density in DBSCAN clustering. To fully trace the variation, we could use the neighbor vector to represent the core nodes, which is defined as follows neighbors We formally define the vector as the number of neighbors for each virtualized node at time Meanwhile, the vector should be the number of neighbors for evolutionary clustering. It can be described as follows and represent the statistic number and evolutionary number of neighbors for virtualized node at time Here, we assume that the node number would not vary with time in our cloud environment Given a neighbor vector, we can quantify the temporal smoothness cost function into the following one  In such occasions, our goal is to find the optimal solution of above function for the evolutionary DBSCAN. Meanwhile, all the evolutionary approaches discussed in our context are derived under the PCM framework as mentioned before Based on the above observation, we could easily know that the value of is optimal only when the first-order derivative of the object function equals to zero. It can be seen as follows in the Equation \(4 In light of this, we can use the above neighbor vector to find the outliers in cloud at each time step. The details of our evolutionary clustering are described as follows The evolutionary clustering with DBSCAN above is presented under an ideal assumption that the number of virtualized nodes would not vary with the time.  Since the virtualized nodes are not always stable in the cloud, those anomaly nodes should be migrated or killed at a certain period There, we need to discuss the movement of such nodes Moreover, with the variation of cluster nodes, the configuration Evolutionary DBSCAN  set of virtulized noedes      and  anomalies at time    calculate evolutionary neighbor vector at time     label the nodes as core node     label the nodes as boundary node label the nodes as anomaly node  
 2 where  
Algorithm 1  Input  Output 1 foreach do 2  3 end 4 foreach do 5 if then 6 7 end 8 end 9 foreach do 10 if and then 11 12 else 13 14 end 15 end 
 
  
  
 
331 
331 


002@AB CDEDFEDG\004 002HDI CDEDFEDG\004 
TABLE I M ONITORED M ETRICS  
006 9  T\021\013=\035\015 027   T\015\015Q\020=\035\015 N  016 19 034 0069  0061 9 9  027  U  016N  N  V 027  027  017\027W\006\024U   
EPS MINPTS D Anomaly Inference A Environment B Simulated scenario C Index AttriSet AnoSet EPS MINPTS MINPTS EPS 
006 007 015     
 
006\007 010      J\035\012\027KK 016 002L\013\014/\006\006M\035\015\035\012\015\035N\004  002 L\013\014 M\035\015\035\012\015\035N 004 032 002 L\013\014/\006\006O 021N\035\015\035\012\015\035N 004 002P\004 LQ\035\012\020\014\020\013\021 016 002L\013\014 M\035\015\035\012\015\035N\004 002L\013\014 M\035\015\035\012\015\035N\004 032 002<\035R M\035\015\035\012\015\035N\004 002S\004 
Scenario 1 Scenario 2 Scenario 3\adSLO Algorithm 2  Input  Output 1 foreach do 2 foreach do 3   4 end 5 6 7 end 
IMPLEMENTATION AND E XPERIMENT  In this section, we first introduce the basic environment and metrics in our context. Then we present the experiment evaluation results of our eCAD on the VICCI based test-bed under three different scenarios. Compared with the traditional static clustering for anomalies detection, our eCAD can performs much better  CPU-oriented us / sy / id / wa Memory-oriented swpd / free/ buff / cache IO-oriented bi / bo / si / so Process-oriented b / r / in / cs 
 
 
of parameters, such as the and is also needed to be tuned, which is beyond the scope of our paper In terms of the removal and entrance of the cluster nodes our evolutionary framework can easily deal with these conditions. To begin with, we could neglect the neighbor vectors of those removed anomaly nodes in the subsequent intervals, which can be done by deleting a row in the vector  At the same time, we could initial the neighbor vectors of these new comer nodes as zeros, which can be done by adding a row to the vector Since the derived neighbor vectors for the evolutionary clustering is a linear combination of the snapshot cost and temporal cost, the removal and entrance of the virtualized nodes at any time step would naturally not affect the evolution process In order to make adjustments in time, our eCAD also needs to undertake the anomaly inference afterwards. Since the anomalies in our framework are mainly determined by the MINPTS nodes within the EPS, we suggest using the distance or similarity of the nearest MINPTS nodes to infer between different attributes, which is defined as the M-Nearest Neighbors \(MNN\gorithm for inference in our paper Besides, we only focus on the categories of those anomalies rather than their specific attributes. For example, the attributes contained in the memory-oriented category might include memory usage, virtual memory usage and so on. The pseudocode is described as follows V The prototype of our eCAD is established on the top the VICCI, which is promoted by researchers from the PlanetLab programs. As a kind of federated cloud, the VICCI platform consists of distributed cluster servers in the Princeton University, Stanford University, Washington University and other seven institutions. Similar to the other IaaS clouds, it can provide the VMs for users outside the cloud In our experiment, we use the HADOOP WORDCOUNT AND SORTED programs as our benchmark. All of the scenarios are hence running under the HADOOP framework In order to obtain the monitored information, we also install the VMSTAT tool in each VM. The detailed representative symbol of each metric could be found in the Table I In our experiment, we simulate three different scenarios with injected CPU errors to evaluate our eCAD. It can be seen as follows The eCAD was deployed on the 180 virtual nodes, where the HADOOP WORDCOUNT benchmark ran. Under such a situation, the virtual nodes were in single HADOOP mode and independent with each other Besides, all the clusters as well as the anomalies are labeled based on the injected CPU errors The eCAD was deployed on the 50 virtual nodes with distributed HADOOP mode. Different from the above NoHead Scenario, the SORTED benchmark was adopted in this situation This scenario took on the same configuration as Head Scenario. Nevertheless, we labeled the anomalies on account of the OUTPUT/INPUT rate in the service level, so as to investigate the effects of anomalies on the SLO To evaluate our approaches, we employ three indexes including Precision, Recall and F-Score, which are the popular evaluation approaches in field of machine learning. The details of each index are introduced as follows. In the following equations and respectively indicate the number of normal nodes and anomalies detected    Anomalies inference  set of attributes   set of anomalies  and Categories of anomalies     calculate distance between   and other nodes within on  calculate weight on attribute   output the category of the with  
Categories Symbols 
 
    
     
332 
332 


 
Fig.4 The performance of eCAD under the: \(a\Head, \(b\ad and \(c\adSLO scenarios Fig.3 The impact of alpha values on eCAD under the: \(a\oHead, \(b\ad and \(c\adSLO scenarios 
 


TABLE II A NOMALIES I NFERENCE  
NoHead 47 33 0.721 Head 57 39 0.6842 HeadSLO 30 7 0.333  From the table above, we can notice that our eCAD shows a poor inference under the HeadSLO scenario. In such an 
Scenarios  Anomalies Inferred Precision 
   D Results Before conducting our evaluation, we need to select the parameters in our evolutionary algorithm. According to distance trend of the nearest K-neighbors, we theoretically set EPS=10, MINPTS=3\n scenario 1 and \(EPS=10 MINPTS=4\ the other two scenarios Since each alpha indicates a different strategy, Fig.3 presents the impact of alpha on our eCAD. As mentioned before, our evolutionary approach would be a static clustering when the parameter alpha is equal to 1, while it would become an incremental algorithm when the alpha is 0. As seen from the Fig.3, the static clustering showed the poorest performance in cloud anomalies detection. When the alpha equals to 0.1 the eCAD can obtain the highest precision in our experiment scenarios In terms of the anomalies detection with evolutionary time steps, we can find that our eCAD framework exceeds its counterparts in Fig.4. At the beginning of our simulated experiments, the eCAD with evolutionary approaches takes an advantage. When the CPU errors are injected, it starts to fall down and returns to a stable status later on. Under that condition where the alpha equals to 0.25, the eCAD achieves its highest performance To emphasize it, the static strategy always stayed in an unstable drift, fluctuating up and down with time stepping Besides, the over-all results shown in the scenario 2 and scenario 3 resembles with each other. To some extent, we justify that the upper SLO values can reflect statuses of the lower virtual resources, and could also help to label those anomalies After detection, we utilize the proposed MNN algorithm to infer the reason that leads to anomalies. In our experiment, we regarded the CPU errors as our incentives. The inference results can be found in Table II 
333 
333 


Michael Armbrust, Armando Fox and Rean Griffith et al. A view of cloud computing [J  C o m m un i c a t i ons of th e A C M Vol 53 No 4, A p ri l 2010 2 Patel Patel, Ranabahu Ajith and Sheth Amit. Service Level Agreement in Cloud Computing [C I n C l ou d W o rk s h op a t OOPSL A  2 0 0 9   3 Mell P., Grance T. The NIST De\002nition of Cloud Computing. National Institute of Standards and Technology, Information Technology Laboratory, USA 4 D. Hyde. A Survey on the Security of Virtual Machines. Dept. of Comp Science, Washington Univ., 2009 5 Arvind Seshadri, Mark Luk, Ning Qu, Adrian Perrig: SecVisor: a tiny hypervisor to provide lifetime kernel code integrity for commodity OSes C S O S P 2 0 07 33 53 5 0   6 Fengzhe Zhang, Jin Chen, Haibo Chen, Binyu Zang CloudVisor retrofitting protection of virtual machines in multi-tenant cloud with nested virtualization [C S O S P 2 0 11 20 32 1 6  7 Maurice Gagnaire, Felipe Diaz, et al. Downtime statistics of current cloud solutions. IWGCR 2012 8 Qiang Guan, Song Fu. Auto-AID: A data mining framework for autonomic anomaly identification in networked computer systems C  I P CCC 2 0 1 0  7 3 8 0  9 Ripal Nathuji, Aman Kansal and Alireza Ghaffarkhah. Q-clouds managing performance interference effects for QoS-aware clouds [C  EuroSys 2010:237-250  Yongmin Tan, Hiep Nguyen, Zhiming Shen, Xiaohui Gu, Chitra Venkatramani, Deepak Rajan. PREPARE: Predictive Performance Anomaly Prevention for Virtualized Cloud Systems [C   I C DC S 2012:285-294  Yongmin Tan, Xiaohui Gu, Haixun Wang. ALERT:Adaptive system anomaly prediction for large-scale hosting infrastructures [C  PODC 2010: 173-182  Qiang Guan, Ziming Zhang, Song Fu. Ensemble of Bayesian Predictors and Decision Trees for Proactive Failure Management in Cloud Computing Systems [J J C M 7 1  5 2 61 2 01 2    Qiang Guan, Chi-Chen Chiu, Ziming Zhang, Song Fu. Efficient and Accurate Anomaly Identification Using Reduced Metric Space in Utility Clouds [C A S 20 1 2  2 0721 6   Husanbir S. Pannu, Jianguo Liu, Song Fu. AAD: Adaptive Anomaly Detection System for Cloud Computing Infrastructures [C   SR DS  2012:396-397  Song Fu. Performance Metric Selection for Autonomic Anomaly Detection on Cloud Computing Systems [C L O B ECO M 2 0 11 15   Daniel Dean, Hiep Nguyen, and Xiaohui Gu. UBL: Unsupervised behavior learning for predicting performance anomalies in virtualized cloud systems  A C M I C A C  2 012   Chengwei Wang, Vanish Talwar, Karsten Schwan, Parthasarathy Ranganathan. Online detection of utility cloud anomalies using metric distributions [C   NOM S 20 10 96 103   Stefano Ferretti, Vittorio Ghini, Fabio Panzieri, Michele Pellegrini, Elisa Turrini: QoS-Aware Clouds [C  I E E E CL OUD 2010:321-328  Deepayan Chakrabarti, Ravi Kumar, Andrew Tomkins  Evolutionary clustering [C   A C M SI GKDD I n t e r n a t i ona l C o n f e r e n c e on K n ow l e d g e  Discovery & Data Mining \(KDD\ 2006:554-560  Yun Chi, Xiaodan Song, Dengyong Zhou, Koji Hino, Belle L Tseng On evolutionary spectral clustering [J  A C M T r ans act io ns o n  Knowledge Discovery from Data, Vol. 3, No. 4, 2009  Yun Chi, Xiaodan Song, Dengyong Zhou, et al. Evolutionary spectral clustering by incorporating temporal smoothness [C  A C M SI GKDD  International Conference on Knowledge Discovery & Data Mining KDD\, 2007:153-162  Ulrike Luxburg. A tutorial on spectral clustering [J   S t at ist ics a n d  Computing \(SAC\\(4\7    
 
occasion, the labels were determined based on the upper SLO Thus, other attributes might interfere with its precision. We would improve it in the future works VI C ONCLUSION  In this paper, we proposed a framework named eCAD from an evolutionary view to identify anomalies in the IaaS cloud. To illustrate our framework, we established a VICCI cloud equipped with HADOOP benchmarks. Our experiment reveals that the evolutionary clustering method can identify cloud anomalies more precisely than its counterparts especially for the traditional static clustering approach Moreover, our framework can also infer the reasons for the above anomalies As immediate future work, we plan to simulate more scenarios with other injected errors. With the accumulation of the anomalies, they might come into being a whole anomaly cluster, which would also be solved within our following researches R EFERENCES  1 
                      
334 
334 


14.0 12.0 10.0 8.0 6.0 4.0 2.0 0.0 
021\017\013\003\021#\012\004 020\021\017\004 022\017\007\023 023\005 017\011\012\013\021\032 017\005\004\007\017 023\007\012\004\021\032\005\012\021 Execution Time Ratio of Primary-backup Paradigms Comparing to HDFS Mapreduce Jobs Running on OAMS and Others 
Figure 6 Overall measurement V CONCLUSION AND FUTURE WORK In this paper a highly metadata service OAMS was proposed for big data storage Different from traditional primary-backup paradigms OAMS depends on more than one standby to take over the active in cluster le system It is based on the built-in shared storage pool and employs a series of protocols to tolerate multiple points of failures OAMS achieves an automatic state transition in the form of hot standby Besides it supports server self-recovery and dynamical addition for standbys at runtime Measurements show that OAMS can obviously improve the system reliability while keeping the performance with little degradation In the future we intend to optimize and expand the policy such as supporting failover in the cluster le system with multiple metadata servers A CKNOWLEDGMENT This work is supported by the National High-Tech Research and Development Program of China under grant numbered 2011AA01A203 2013AA013204 also supported by the National HeGaoJi Key Project under grant numbered 2013ZX01039-002-001-001 and Strategic Priority Research Program of the Chinese Academy of Sciences under grant numbered XDA06030200 R EFERENCES  J Dean and S Ghema w at Mapreduce Simpli“ed data processing on large clusters in 
BackupNode HA with NFS HA with QJM OAMS with 1A2S OAMS with 1A1S1J OAMS with 1A2J 
Sixth Symposium on Operating System Design and Implementation OSDI 04 Seventh Symposium on Operating System Design and Implementation OSDI 06 19th Symposium on Operating Systems Principles SOSP 03 26th IEEE Transactions on Computing Symposium on Mass Storage Systems and Technologies Mass Storage Systems and Technologies in Cooperation with the 17th IEEE Symposium on Mass Storage Systems ACM Computing Surveys Proc of the 2011 ACM SIGMOD International Conference on Management of data Proc of the Summer USENIX conference 13th Symposium on Operating Systems Principles Research report Systems Research Center Digital Equipment Corporation Markov Chains Principles of Distributed Database Systems 
 San Francisco USA Dec 2004 pp 137…150  F  Chang J Dean S Ghema w at W  C Hsieh D A Wallach M Burrows T Chandra A Fikes and R E Gruber Bigtable A distributed storage system for structured data in  Seattle USA Nov 2006 pp 205…218  S Ghema w at H Gobiof f and S T  Leung The Google le system in  New York USA Oct 2003 pp 29…43  K Shv achk o H K uang S Radia and R Chansler  The Hadoop distributed le system in  Incline Village USA May 2010 pp 1…10  A Barry  J Brasso w  R Cattelan A Manthei E Nygaard S V Oort D Teigland M Tilstra M OKeefe G Erickson and M Agarwal Implementing journaling in a Linux shared disk le system in  Maryland USA Mar 2000 pp 351…378  T  Haerder and A Reuter  Principles of transaction-oriented database recovery  vol 15 no 4 pp 287…317 1983  F  Haas P  Reisner  and L Ellenber g The DRBD user s guide LINBIT Information Technologies GmbH 2009  D Borthakur  J S Sarma J Gray  K Muthukkaruppan N Spiegelberg H Kuang K Ranganathan D Molkov A Menon S Rash R Schmidt and A Aiyer Apache Hadoop goes realtime at Facebook in  Athens Greece Jun 2011 pp 1071…1080  R Sandber g D Goldber g S Kleiman D W alsh and B Lyon Design and implementation of the Sun network lesystem in  Portland USA Jun 1985 pp 119…130  Cloudera homepage Online A v ailable http://www.cloudera.com  Apache hadoop Online A v ailable http://hadoop.apache.or g  Apache BookK eeper  Online A v ailable http://zookeeper.apache.org/bookkeeper  W  Lin M Y ang L Zhang and L Zhou P aci“ca Replication in log-based distributed storage systems Technical Report MSR-TR-2008-25 Microsoft Research Tech Rep 2008  B Lisk o v  S Ghema w at R Gruber  P  Johnson L Shrira and M Williams Replication in the Harp le system in  California USA Oct 1991 pp 226…238  G Sw art A Birrell A Hisgen and T  Mann  A v ailability in the Echo le system in  Citeseer 1993  J R Norris  Cambridge University Press 1998  L Lamport The part-time parliament  Research Report 49 Systems Research Center Digital Equipment Corporation Tech Rep 1989  M T   Ozsu and P Valduriez  Springer 2011  Apache ZooK eeper  Online A v ailable http://zookeeper.apache.org 
since OAMS has highly improved the reliability of metadata service while having little effects on performance        
1294 
1294 


607 


608 


  11 that it will be able to meet all of the Van Allen Probes communications goals with its intended ground segments A CKNOWLEDGEMENTS  This work was performed with the support of the Radiation Belt Storm Probes mission under NASA\222s Living with a Star program. The authors would like to thank Rick Fitzgerald and Kim Cooper, Van Allen Probes project managers at JHU/APL for supporting this work. There are many at JHU/APL who contributed to the development and verification of the RF system. Significant technical contributions were made by: Christopher Haskins, Bob Wallis, Matthew Angert, Laurel Funk, Joe Sheehi, Wesley Millard, Norman Adams, Lloyd Ellis, Sheng Cheng, John Daniels, Phillip Huang, Avi Sharma, Carl Herrmann, David Jones, Brian Bubnash, Melanie Bell, Horace Malcom Michael Pavlick, Mark Bernacik, Christopher Deboy, Bob Bokulic, Sharon Ling, Albert Hong, Erik Hohlfeld, Judy Bitman, William Dove and Tony Garcia. Significant contributions were also made by the USN and TDRSS compatibility test teams  R EFERENCES  1 eck D. G.; Mau k  B  H.; Greb o w sk y  J  M.; Fo x  N J, \223The Living With a Star Radiation Belt Storm Probes Mission and Related Missions of Opportunity 224 American Geophysical Union, Fall Meeting 2006   h o rs k i y  A Y., Mauk B. H., Fox N. J Sibeck D G., Grebowsky, J. M., \223Radiation belt storm probes Resolving fundamental physics with practical consequences,\224 Journal of Atmospheric and SolarTerrestrial Physics Vol. 73, Issues 11-12, July 2011 Pages 1417-1424   S. Bu s h m a n M. Bu tler, R C o n d e, K. Fretz, C  Herrmann, A. Hill, R. Maurer, R. Nichols, G. Ottman M. Reid, G. Rogers, D. Srinivasan, J. Troll, B. Williams 223Radiation Belt Storm Probe Spacecraft and Impact of Environment on Spacecraft Design,\224 Proceedings of the 2012 IEEE Aerospace Conference, Big Sky Montana USA, March 3-10, 2012   opelan d D.J DeB o y C  C R o y s ter, D.W., Dov e  W.C., Srinivasan, D.K,. Bruzzi, J.R., Garcia, A., "The APL 18.3m station upgrade and its application to lunar missions," Aerospace Conference, 2010 IEEE , vol., no pp.1-10, 6-13 March 2010    Figure 10. FER/BER performance for all downlink modes for RF GSE, SCF, USN, and TDRSS 


  12  iv as a n D. K., A r ti s  D  A Bak er, R  B., Stil w e ll, R   K., Wallis, R. E., \223RF Communications Subsystem for the Radiation Belt Storm Probes,\224  Acta Astronautica vol 65, issue 11-12, December 2009, Pages 1639-1649   k i n s  C B., Mi llard, W P 223 M u l t i Ban d  So f t w a re Defined Radio for Spaceborne Communications Navigation, Radio Science, and Sensors,\224 2010 IEEE Aerospace Conference, March 2010  k i n s  C B., Mi llard, W P A d a m s  N. H Sri n i v a s a n  D. K., Angert, M. P., \223The Frontier Software-Defined Radio: Mission-Enabling, Multi-Band, Low-Power Performance,\224 61st  International Astronautical Congress IAC-10.B2.5.11, October 2011 8  Crowne, M.J.,  Haskins, C. B., Wallis, R. E.,  Royster D.W, \223Demonstrating TRL-6 on the JHU/APL Frontier Radio for the Radiation Belt Storm Probe mission,\224 2011 IEEE Aerospace Conference, March 2011  o ckw ood, M. K K i n n i s o n  J., F o x  N C o n d e, R  Driesman, A., \223Solar Probe Plus Mission Definition,\224 63rd  International Astronautical Congress, IAC 12.A3.5.2, October 2012   i t m a n J  223An I n D ept h  L o o k at t h e R a dio Freq u e n c y    Ground Support Equipment for the Radiation Belt Storm  Probes Mission,\223 IEEE Autotestcon, 2011, September 2011  d a m s  N.H., Bi t m a n J C opela n d D. J Sri n ivas a n  D  K.,  Garcia. A., \223RF Interference at Ground Stations Located in Populated Areas,\224 2013 IEEE Aerospace Conference, March 2013  B IOGRAPHY  Matthew J. Crowne is a member of the Senior Professional Staff of the RF Engineering group in JHU/APL\222s Space Department. He received his B.S from Johns Hopkins University in 2000 and his M.S. from the same university in 2009, both in electrical engineering Matthew joined JHU/APL in 2007 where he has been working on the development of radios for spaceflight communications systems. Prior to joining JHU/APL, he worked for Integrated Defense Systems Inc., where he developed solid state power amplifiers for electronic warfare and communication systems. Matthew was the integration and test lead for the Van Allen Probes RF communication system and is currently working on the Solar Probe Plus mission   Dipak K. Srinivasan is the supervisor of the RF Systems Engineering Section in the JHU/APL Space Department. He received his B.S. and M.Eng. in electrical engineering in 1999 and 2000 in electrical engineering from Cornell University, and an M.S. in applied physics from The Johns Hopkins University in 2003. Dipak joined the APL Space Department in 2000, where he has served as the lead RF Integration and Test Engineer for the CONTOUR and MESSENGER spacecraft and lead mission system verification engineer for the New Horizons project. He is currently the Lead RF Telecommunications Systems Engineer for the MESSENGER and Van Allen Probes missions and chairs technical sessions at the annual International Astronautical Congress  Darryl W. Royster is a member of the Senior Professional Staff in the RF Engineering Group at JHU/APL.  He led compatibility testing for the Van Allen Probes, STEREO, and MESSENGER missions.  Previously he was the System Engineer for the Satellite Communications Facility at JHU/ APL and the lead RF Integration and Test Engineer for the STEREO spacecraft.  Prior to joining the JHI/APL Space Department in 2001, Mr. Royster designed cellular and land mobile radio products for Ericsson, GE and Motorola.  He received his B.S. and M.S. in electrical engineering from Virginia Polytechnic Institute and State University in 1982 and 1984, respectively  Gregory L. Weaver joined the Senior Professional Staff of JHU/APL in 2003 and works within the RF Engineering Group of the Space Department.  He is a technologist with extensive background in the technical and business aspects of the frequency control industry and has held positions as a senior design engineer, technical manager and marketing strategist over a 25 year career history, including vice president positions with Bliley Technologies Inc. and the former Piezo Crystal Company. He received his M.S in Technology Management from the University of Pennsylvania in 1993 and his B.S. in Physics from Dickinson College in 1982.  He is a licensed professional engineer in the state of Pennsylvania, member of the IEEE and the UFFC Societ y.  He has contributed to the technical proceedings of the IEEE International Frequency Control Symposium, Precise Time and Time Interval Systems and Application Meeting and the European Frequency and Time Forum   


  13 Daniel Matlin is an Associate Professional Staff at JHU/APL and a member of the RF engineering group in the Space department.  He went through a dual Bachelors/Masters program at Johns Hopkins University graduating with his Bachelor of Science in Electrical Engineering in 2008 and his Masters of Science in Engineering from the Electrical Engineering department in 2009.  As a student he specialized in RF systems design.  Mr. Matlin started at the JHU/APL in February of 2010 and in his short time with the lab has been privileged to work on various tasks supporting the RBSP program, including supporting a successful launch and early operations.  Mr. Matlin assisted in the qualification testing for the flight DSP slices as well as the integrated flight transceivers.  He also carried out electrical testing and flight qualification of the newly designed Hypertronics stacking connectors as well as components and cables used for the RF subsystem  Nelli Mosavi is an EMC and RF Engineer in the JHU/APL Space Department, RF Systems Engineering section. She received a B.S. degree in Electrical Engineering from Oakland University Michigan in 2004 and an M.S. in Electrical Engineering from The Johns Hopkins University in 2010. She is currently working toward her Ph.D. at the University of Maryland Baltimore County. She joined APL in 2009 and has since been working on RF and EME issues on the Van Allen Probes mission. Nelli previously worked for SENTEL Corporation, General Motors, DENSO International, and Molex Automotive   


APPENDIX 3– RESULTS \(SEM I-PROFESSIONAL DSLRS     Run by TFDEA add-in ver 2.1 Frontier Type Orientation 2nd Goal Return to Scale Avg RoC Frontier Year MAD Dynamic OO Max CRS 1.124802 2008 1.394531 Input\(s Output\(s SOA products at Release SOA products on Frontier RoC contributors Release before forecast Release after forecast 22166527 DMU Name Date Efficiency_R Efficiency_F Effective Date Rate of Change Forecasted Date 1 Nikon D100 2002 1 1.66666667 2007.000000 1.107566 2 Olympus E1 2003 1 1.666666667 2007.000000 1.136219 3 Pentax *ist D 2003 1 1.358024691 2007.000000 1.079511 4 Nikon D20 0 2005 1 1.2 2007.000000 1.095445 5 Canon EOS 5D 2005 1 1.664796311 2007.730028 1.205269 6 Pentax K10D 2006 1 1 2006.000000  7Nikon D30 0 2007 1 1 2007.000000  8 Olympus E3 2007 1 1 2007.000000  9 Sony Alpha DSLR A70 0 2007 1 1 2007.000000  1 0 Nikon D70 0 2008 1.46 1.46 2007.000000  11 Canon EOS 5D Mark II 2008 1.065464119 1.065464119 2008.000000  12 Sony Alpha DSLR A90 0 2008 1 1 2008.000000  13 Olympus E3 0 2008 1.02 1.02 2007.000000  1 4 Pentax K20D 2008 1 1 2008.000000  15 Nikon D300s 2009 1.142857143 0.874450785 2007.000000  2008.140742 16 Canon EOS 7D 2009 1 0.754166667 2007.000000  2009.399022 17 Sony Alpha DSLR A85 0 2009 1 0.774820627 2008.000000  2010.169290 18 Pentax K-7 2009 1 0.772738276 2006.503130  2008.695302 19 Olympus E5 201 0 1.466133763 1.173333333 2007.000000   2 0 Pentax K-5 201 0 1.009024674 0.776190476 2007.000000  2009.15427 0 21 Nikon D80 0 2012 1 0.686950618 2008.000000  2011.192776 22 Canon EOS 5D Mark III 2012 1.115010291 0.930769231 2007.502755  2008.112786 23 Pentax K-5 II 2012 1 0.632075669 2006.839705  2010.740375 24 Sony Alpha SLT A99 2012 1.009662059 0.854117647 2007.640496  2008.981286 Results 2129 2013 Proceedings of PICMET '13: Technology Management for Emerging Technologies 


