It will consume lots of energy when the apps download mass data in the smar tphone. Furthermore, the apps will increase the burden of the b attery if they download big data with slow network. The paper pr oposes a smartphone download strategy that downloads mass data with appropriate delay to achieve low energy consumption. The strategy, called CLSA selects the best download mo del that based on the current network situation, the length of download requestsê queue and the local information of smartpho 
Abstract 
Research on Low Energy Consumption of Mass Data Download in Smartphone Jie Ren Hai Wang Ling Gao Dept. of Computer Science and Technology Northwest University Xiêan, China E-mail: renjie@nwu.edu.cn  
ne. We evaluate the CLSA using a music player implementati on on a modern smartphone and compare it with the other tw o download strategies, Minimum Delay and WiFi Only. The result shows that the CLSA can achieve the optimal energy-dela y trade off performance than the other two 
 
I 
KeywordsÑsmartphone download strategy; CLSA; energydelay trade off 
 I NTRODUCTION  Nowadays, the market share for the battery-powered portable equipment keep increasing [1 a r k et will explode exponentially to $38 billion industry by 2015 [3 Despite the incredible market penetration of smartphones and exponential growth of the app market, their utility has been and will remain severely limited by the battery life. Furthermore 
the energy issues also influen ce the development of hardware as Fig. 1 shows that the growth in processor performance since the late 1970s, and the performance improvement drop to less 22% per year in recent years due to the twin hurdles of maximum power dissipation of aircooled chips and the lack of more instruction-level parallelism to exploit efficiently [4  A number of specialized energy saving techniques on mobiles has been proposed. Abhinav Pathak [5 present e d t h e eprof, the first fine-grained energy profiler for smartphone apps Eprof can find out the code bugs that cause the energy dissipation in apps then fix it. Abhinav P. also focused on the  whic h  will let the I/O components stay awake for a long time until a force suspend, then he developed 
better programming language support to avoid no-sleep bugs at programming time  Ot her speci al ized energy s a vi ng  techniques, e.g., for specific applications on mobile system [8  for a speci f i c prot ocol  1 0 11 vi a offl o a di ng [12 13  and via delaying communicati  Some researchers have found that the communication subsystem contributes much to the energy consumption in most embedded system [15 a nd t h e re are m a ny apps e x ch ange  mass data by WNI \(Wireless Network Interface\of smartphone At the present time, most apps make an immediate response as soon as the download request arri ves, then download mass data from web server to local \(or upload data from local to web server\ the immediate response mode may consume much energy and reduce the battery life of smartphone with slow downloading speed. This paper explores robust method to 
reduce the overhead in three aspects. First, recent smartphones have multiple wireless interfaces \(3G and WiFi\data transmission, they have different data rates and transmission power [17 us er really do not consider the network environment, and ma ke download requests depend on their requirements which maybe discontinuous and scattered Third, the download task can be delayed because of userês delay tolerance. This paper proposes a Concentrate Download and Low-Power and Stable Link Selection Algorithm \(CLSA which based on the Lyapunov optimization framework, the algorithm decide which WNI to use and whether to delay the download tasks after analyzing the local information and network state. The CLSA was va lidated by a music player in the campus of Northwest University, the result shows that the 
CLSA could achieve the goal of reducing energy consumption within the userês delay tolerance II 
tU 
 
L YAPUNOV O PTIMIZATION F RAMEWORK  Lyapunov optimization framework i s an archi t ect ure  that guarantees the stable of all queues in the network and optimizes other objects \(Power, Fairness and Throughput First, we need to give the co ncept of stable queue backlog Let   denote the queue backlog at beginning of timeslot t   is the amount of data transferred and   
tu 
A Stable Queue 
 
tA 
       1  
003\004\005\003 000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\003 
tutA 
006\007 005 010 005 006\011 
is the app data added to the queue during timeslot t. The condition for the stable network is the increased data less than the transferred data during slot t     0   Over t i m e t h e que ue backlog evolves as follows 000\003\000\003\000\003\000\003\000\003\000\003\000\003 1 The queue is stable if 000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\003 
tAtutUtU 
002 
t t UE t U 
012 012 000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\003 
2 This work is supported by the Docto ral Scientific Fund Project of the Ministry of China under Grant No.20116101 110016; The National Natural Science Foundational of China under Grand No.61070177; Nature Science Foundatio n of Shaanxi Province under Grand No. 2012JQ8047; Shaanxi Province Department of Education Fund under Grand No. 11JK1059; Major Science and Technology Project of Shaa nxi Province \(No.2012ZKC05-2 
0    1 sup lim 
2013 International Conference on Advanced Cloud and Big Data 978-1-4799-3261-0/14 $31.00 © 2014 IEEE DOI 10.1109/CBD.2013.30 20 


002 
    11 Taking conditional expectations of \(9\leads to the following bound on the conditional expected Lyapunov drift            1 
       21 
N i ii ii tutAtutAtB 
004 003\002 013 010 005 
004\003\005\013 
t t UPE t P 
1 2   2 1   000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\003 
N i i tUtL 
B 
N i iii tutAtUtBt 
0     1 sup lim 
012 012\012 000\003\000\003\000\003\000\003\000\003\000\003\000\003 
Growth in processor perfor mance since the late 1970s 
1 2 2    2      2 1   10 Suppose the second moments of arrivals and service in each queue are bounded, so that there is a finite constant 0 
tLtLt 
004\003\002 004\003 005\003 
006\007 005 010 005 006\011 
t i ut i At i U t i U 
010 005 013 005 
BtUtBE 
  
tL 
Under the finite length of stable queue, the time average transmission power defined as 000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\003 3 Lyapunov drift is a well-known technique used to analyze the stability of queue. It involves defining a nonnegative, scalar function, called a Lyapunov function which value depends on the queue backlog   If there are N waiting queues in the network, and define the vector of queue backlogs at time t by 000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\003 4 000\003 For each slot t, defi ne Lyapunov function   as the sum of the squares of the current queue backlogs \(divided by 2 for convenience later 000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\003 5 This function is a scalar measure of the total queue backlog in the network. It is called quadratic Lyapunov function on the queue state. Define the Lyapunov drift as the change in this function from one slot to the next     1    6 From \(1\we can suppose the queue backlog i change over time according to the following equation 0      max  1  7 This equation can be used to compute a bound on the Lyapunov drift for any slot t  2       2 0      max 2  1  8 Rearranging this inequality, summing over all i, and dividing by 2 leads to  is defined such that for all t and all possible queue vectors   the following property holds  12   Fig. 1 
010 005 004 003\002\013 
B Lyapunov Drift for Queueing Networks C Bounding the Lyapunov Drift 
tU 
014 
tU 
004\003 005\003 
010 005 004\003 005 
t i ut i At i U t i ut i At i U t i U 
005 011 000\003\000\003 000\003\000\003\000\003\000\003\000\003 
 
tB 
1         9 Where   
tUtUtUtU N 
tUtutAEtU BtUtE ii N i i 
21 


012 012 016 
1     
 Fig. 2  Concentrated waking-up strategy    Fig. 3. Traditional consumer model 
1 1    0   
002 
tl 
tN i i UE Bt LEtLE 
tSltuE l 
 
014 
tUt i At i uE 
020\004 020 005 
W 
014\015 004 016\016 
tU 
014\015 004 016\016 
010 005 004\002 013 
tL 
tl 
tUt i At i uE 
004\017 012 
t LEB i UE t tN i i UE t tN i 
010\010 004 005 004\002\004 
tS l 
In most cases, the network can be controlled so that the difference between arrivals and service at each queue satisfies the following property for some real number [21   0       13  Bring \(13\ into \(12\ can get  14 Summing the above expression over 1  1,0 and using the law of telescoping sums gives  15 Then for all slots 0 the time average queue size in the network satisfies  16 Under the condition of 0        it can be proved that the average length of queue backlog of all nodes in the network cell is bounded, so that the network is stable. We can get the same result on a single node by analogy analysis III C ONCENTRATE D OWNLOAD AND L OW P OWER AND S TABLE L INK S ELECTION A LGORITHM  This section presents an optimization model of producer/consumer. And then we analyze the download model and propose the CLSA by theoretical deduction In order to reduce the interrupt times of CPU and prolong the idle state of CPU t h e  m a nagem e nt  of waken so urc e i s  needed to avoid scattered waki ng. We adopt a controllable and concentrated waking-up strategy, to minimize the wakeup times, delay the wakeup when itês possible, so as to maintain the system in low power state, as shown in Fig. 2 In the original PCM \(Producer-Consumer Model\, two threads share a public buffer z one. The producer as a data provider, always put the data into buffer, the consumer process the data. There are thr ee threads, main thread is to allocate resources, and provide a series of system resources such as buffer zones and physical memory, producer thread writes data consumer thread reads data Further control those threads which have a collaborative relationship, optimize the original PCM, and take the consumer offer download service\the task that could be delay to process. In the original PCM, consumer thread will processing date even there is only one data in the public buffer zone, so that will cause much task switching, as shown in Fig. 3. We set upper threshold to control the inappropriate wakeup behaviors the consumer will be waken up to process data only when the number of data reach the threshold. Fig. 4 shows the optimal consumer model that can reduce some potential wake-up behaviors, so as to reduce the waste in the system and achieve low energy consumption The link selection algorithm          max    17 It chooses a link    by calculate the 0       max  to download data during timeslo t t, the current request queue backlog is        is the estimation on downloading speed that can be achieved on link l, given the current channel condition   and the download power    is a weight parameter which used for energy and delay trade-off The CLSA will not select any link to download data when 0   Although the CLSA is similar with the selection algorithm which proposed by M. J. Neely [2 t h e CL SA  focus on the single node \(the smartphone\ and M. J. Neelyês algorithm pay much attention on all nodes in a network cell The formula \(17\derived as follows Let quadratic Lyapunov function   as the sum of the 
t 
   
 0   1 1 1   1 1 1 
016\016 012 012 012 012 003\002 010 004 010 005 010\010 004 005 
016 
tP l 
tltl 
tPWtSltuEtUtl l l 
N i i tUBtUtE 
014 
t 
D A Basic Lyapunov Drift Theorem A The Study of Centralized Tasks Strategy B CLSA 
22 


004\003 013 005\013 000\003 
tAtutUtAtu tUtAtutUtAtutU tUtAtutU tUtUtU 
uABtBtB 
007 
  
    so we can get  22   
      
012 012 
021 021 021 003 004 004\005 003\003 004\005 003\003 004\002 003\013 000\003\000\003 
016 012 012 003 007 005 010 005 006\011 
004 004\003\005 004\004 004\003\003 002 004\003\004\005 004\003\005\013 000\003\000\003 
                                                                  
 0   1 sup lim 
tA 
 
007 
014 
tUtAtuEtUtUtAtuEtU 
021 005\005 
tAEtUtAE 
004 004 003 002\013 
W B PUE t P t t 
AtA 
tUtUt WP t l SltuEtUEtB tUtP WE tU t l SltUtu EEtUtB tUtP WE tUtUtuEtUtB tUtP WE tU 
     2   2    2 1 2   2 1      2   2   2    2 1 2   2 1 2       2 1 2   2 1 2  1  2 1   
 0   1 sup lim 
003\005\022\007 
003\007 005 010 005 006\011 
013 005 
021 
tUtUL 
tB 
            
 Fig. 4  Modified consumer model squares of the current down load request queue backlogs  2   2 1    18    Lyapunov drift H\026       1   19 000\003 Take conditional expectations given              2   2    2 1    20 Let   equal to    2     2     2 1   21 And     equal to  22 And then bring \(21\\(22\ in \(20  23 Now we take the minimum power consumption objective into consideration, and add a weighted cost \(power consumption during slot t\o \(23\ in order to achieve the goal of low power and stable request queue backlog 24 We assume the data arrival speed   and the data service speed   have finite variance, exist constant to satisfy 25 From formula \(22\ can know that minimize the right side hand of formula will gua rantee the request queue stability with minimum power consumption. However, since we have no control over the application data arrival process, and hence cannot do much about the term CLSA does not directly minimize the entire expression on the right hand side of \(17 Rather, in order to minimize the right hand side of \(17 maximizes the negative term on the right hand side of \(17\; so we get the control decision in \(17 From \(17\, we can get that the CLSA will stop the download service if the smartphone under poor network condition. Corresponding to the consumer sleep in the PCM and it will be waken up until the number of data reach the upper threshold which produced by the producer. The threshold is not a constant value in the CLSA, it either small in good network environment or large when the download speed is low The concentrated download st rategy can accomplish three goals. First, the CLSA will reduce the energy dissipation which caused by switching the state of download service between working and idle frequently. Second, defer the download request, until in the good network environment, so that will prevent downloading data in slow network which consume much energy. Third, dynamic threshold guarantee the request queue stability, avoid the infinitely increasing of queue backlogs   26  27 
tUtuEtAEtB 
003 013 005 
tUtAE 
  and 
WP B UE t U t t 
W 
tUtULtULEtU 
021 003 004\002\013 
tU 
tUtUtuEtUtBtU 
M. J. Neely has defined the average length of queue backlog and the minimum average power consumption in a network cell. We defined the same thing of a single node with parameter 0 
C Average Queue Backlog and Power Consumption 
utUtuE 
tu 
tU 
23 


B 
ZTE  V880  600MHZ 256M 512M 2GB GSM+WCDMA+Wifi Android 2.2 Li-ion 1250mAh 3.5\002\003\004\003 capacitive touchscreen,800*480 TABLE II P OWER OF N ETWORK R ADIO  ZTE V880 0.925W 1.387W TABLE III S IGNAL S TRENGTH OF WIFI Laptop Router Router None Wake Normal Strong None 5-10m 15-20m 30-40m 0 
W 
tA 
CPU RAM ROM Micro-SD Card Network OS Battery Display Dorm Lib Lab Din 
P 
   
ZTE V880 Platform WiFi 3G Location WiFi hotspot Strength Distance 
 
   
WO W O 
 Fig. 6. Southern campus of NWU Fig. 5  The relationship between RSSI and download speed The derivation process of the above formulas is similar to 26  bu t \(26  2 7 ly for si n g l e nod e  is a theoretical lower bound on the time average power consumption 0 is a constant meaning the distance between arrival pattern and the capacity region boundary,  and is an upper bound on the sum of the variances of   and   each of which is assumed to have finite variance\ We can let the average power consumption close to theoretical lower bound  by increasing the value of but the cost of it is the liner increase in length of request queue backlogs. On the contrary we can also reduce the latency of download service by decreasing the value of This    1  trade-off between power consumption and latency is a fundamental aspect of all control algorithms designed using the Lyapunov optimization techniques Neither general strategy can predict the download speed of smartphone accurately, nor related software can achieve both low power and accurately. This pa per proposes a prediction by the Received Signal Strength In dicator \(RSSI\fferent APs. We store the APês SSID current RSSI and download speed as an item and refresh it when a new download service comes and calculate the averag e speed. The results show that the error < 8%, fit to the experiment requirement. Fig. 5 shows the relationship between RSSI and download rate, and they are almost proportional We set the scan interval to 20s when the smartphone within the scope of WiFi signal, so that it can deal with the download request in time and stop downloading data when smartphone move out of the scope to avoid wasting of energy The scan interval is set to 30s when the smartphone cannot get WiFi signal. The nominal rate of 3G is lower than WiFi and the energy-efficiency is differe nt. In most cases, CLSA will not offer service when the queue backlogs is short and WiFi signal cannot be detected, so a long scan interval of WiFi also reduce  energy overhead IV E XPERIMENT  We develop a music player which based on open source Libmad on the Android 2.2, and implement the CLSA in the app. The experiment conducted on ZTE V880, related parameters are shown in Table I. Based on our measurement on the V880, we get the download power of 3G and WiFi are 0.925W and 1.387W, respective ly, as shown in Table II The experiment conducted in Northwest University where equipped many WiFi hotspots, and collect data around four locations, Dormitory, Dining Hall, Library and Laboratory respectively, as shown in Fig. 6 which measured by Baidu Map. The WiFi signal strength as show in Table III TABLE I 
W 
D Estimation of Download Rate E Scan Interval of WiFi A Experiment Object 
P 
tu 
014 016 
24 


N i i N i i S E E 
010 010 005 005 005 
JE 
6 10 
010 010 005 005 005 
JE 
017 
004 020 
AND s OF T HREE D IFFERENT D OWNLOAD S TRATEGIES   
 
 s  6 10  s  6 10  s  5.41 187 1.15 192 1.88 346 1.45 40 0.564 118 1.23 62 3.7 66 0.38 86 1.12 32 1.4 45 0.578 4025 1.29 233 2.99 84 0.668 1105 1.36 166  
JE 
N i i N i i S D D 
D 
D 
D 
017 
D 
JE 
004 020 
JE 
D 
NiD i 
NiE i 
D 
Minimum Delay WiFi Only CLSA 
1 1 002»\000\003 
 Fig. 7  Performance comparison between different strategies The paper compares CLSA against other two common algorithms, Minimum Delay that always make an immediate response and WiFi Only which only use WiFi to transmit data We download music randomly at four locations, and then hang around 50 minutes at each site, record the test data. Let  1   1 and  1 denote the length, total energy consumed and delay of song i, then calculate the average energy co nsumed and delay per byte by formula \(28\. Table IV shows th e result after data processing 000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\003 28 000\003 In Table IV, we can know that the Minimum Delay with the minimum latency and consume the most energy per byte Because the Minimum Delay will not take the network state into consideration and make an immediate response when the download request arrive, but it will cause high energy consumption if the smartphone in the poor network environment. WiFi only with the maximum latency and consume the least energy pe r byte. The aforementioned download power of WiFi interface is lower than 3G interface and the transmit rate is faster than 3G, so it consumes the least energy per byte. But the length of the request queue backlog will increase infinitely when there is no WiFi signal around The CLSA is the strategy that can trade-off energy and delay by formula \(17\. Under the poor network condition, CLSA will not select a link to download unless the request queue backlog is long enough, so that will reduce additional energy consumption and avoid infinite latency. For example, the average download speed is 20Kb/s and 100Kb/s of 3G and WiFi in dormitory, the smartphone cannot get WiFi signal when it far away from the hotspot, then the CLSA will make a decision by detecting RSSI and local queue backlogs, it will not offer download service if the queue backlog has not reach the upper threshold and the speed is slow, so the energy will be saved, but the data will be downloaded when the length of queue is long enough with slow speed, so the latency is reduced We use the product of  and s to evaluate the performance of different download strategy as shown in Fig. 7 The evaluation combined energy and delay, the higher the product, the worse the performance. For example, WiFi Only owns minimum  but it doesnêt achieve the best performance because of the maximum s It will get good performance only both  and s have better value CLSA neither reduce the most energy, nor have the lowest latency, but it has the best comprehensive properties which consider the energy/delay trade off in the algorithm V C ONCLUSION  This paper proposes an ener gy/delay trade off algorithm CLSA which based on Lyapunov optimization framework by modified consumer model from the perspective of concentrate scattered requests. It redu ces unnecessary overhead and achieve energy-efficient to a certain degree. Along with the deepened study gradually, there are some problems need to study and improve, such as the energy consumption on scan interval and working/idle/sleep state of WiFi; the sleep strategy of Android; and the final results do not show the advantage of CLSA very well, because the experiment conducted in the special environment which limited by the number of experiment sites R EFERENCES   
JE 
 
D 
017 
Location Dorm Lib Lab Din Average 
JE 
NiS i 
004 020 
 
 Mobile Marketing Statistics 2012é, URL: http://snaphop.com/2012TABLE  IV   
B Experimental Operation and Result Analysis 
1 1 000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\003 
25 


                       
mobile-marketing-statistics  Smartphone sales overtake pcs for the first time.é URL http://mashable.com/2012/02/03/sm artphone-sales-overtake-pcs  Mobile app internet recasts the sof tware and services landscape.é URL http://tinyurl.com/5s3hhx6  John L. Hennessy and David A. Patterson COMPUTER ARCHITECTURE-A Quantitative Appro ach \(Fifth Edition China Machine Press, 2012, pp. 3  A. Pathak, Y. C. Hu, and M. Zhang, çWhere is the energy spent inside my app?: Fine Grained Energy Acco unting on Smartphones with Eprof in Proc. EuroSys 2012, New York, pp. 29-42, 2012  A. Pathak, Y. C. Hu, and M. Zhang, çBootstrapping energy debugging for smartphones: A first look at energy bugs in mobile devices,é in Proc of Hotnets, 2011  A. Pathak, A. Jindal, Y. C. Hu a nd et al., çWhat is keeping my phone awake?: Characterizing and Detecti ng No-Sleep Energy Bugs in Smartphone Apps,é in Proc. of MobiSys 2012, New York, pp. 267-280 2012  Y. Wang, J. Lin, M. Annavaram, Q. Jacobsonnd and et al., çA framework of energy efficient mob ile sensing for automatic user state recognition,é in Proc. of Mobisys, 2009  Kang, J. Lee, H. Jang and et al Seemon: scalable and energy-efficient context monitoring framework for sens or-rich mobile environments,é in Proc. of Mobisys, 2008  Y. Agarwal, R. Chandra, A. Wolm an and et al., çWireless wakeups revisited: energy management for voi p over wi-fi smartphones,é in Proc of Mobisys, 2007  F. Qian, Z. Wang, A. Gerber and et al., çProfiling resource usage for mobile applications: a cross-layer appr oach,é in Proc. of Mobisys, 2011  E. Cuervo, B. Aruna, D. ki Cho and et al., çMaui: Making smartphones last longer with code offload in Proc. of Mobisys, 2011  B.-G. Chun and P. Maniatis, çAug mented Smartphone Applications Through Clone Cloud Execution ,é in HotOs, 2009  M. Ra, J. Paek, A. Sharma, R. Govindan and et al., çEnergy-delay tradeoffs in smartphone applications in Proc. of Mobisys, 2010  M. Stemm and R. H. Katz, çMeasuring and reducing energy consumption of network interface s in hand-held devices,é IEICE Transactions on Communications, vol. 80, pp. 1125-1131, 1997  V. Raghunathan, C. Schurgers, S. Park and et al, çEnergy aware wireless microsensor networks,é IEEE Signal Processing Magazine, vol. 19, pp 40-50, 2002  Y. Agarwal, R. Chandra, A. Wo lman and et al., çWireless Wakeups Revisited: Energy Management for VoIP over WiFi Smartphones,é in Proc. of MobiSysê07, 2007  Kang, J Lee, H. Jang and et al., çSeemon: scalable and energy-efficient context monitoring framework for sens or-rich mobile environments,é in Proc. of Mobisys, 2008  L. Georgiadis, M. J. Neely, and L Tassiulas, çResource Allocation and Cross-Layer Control in Wireless Net works,é Foundations and Trends in Networking, 2006  M. J. Neely, çDynamic Power Alloc ation and Routing for Satellite and Wireless Networks with Time Varyi ng Channels,é PhD thesis Massachusetts Institute of Technology, LIDS, 2003  M. J. Neely. Stochastic Network Optimization with Application to Communication and Queueing Systems, Morgan & Claypool, 2010  E. Leonardi, M. Mellia, F. Neri and M. Ajmone Marsan, çBounds on Average Delays and Queue Size Aver ages and Variances in InputQueued Cell-Based Switchesé, in Proc. of IEEE INFOCOM, 2001  J Ren, L. Gao, H. Wang and et al., çResearch on low power application software in Linux System,é the 2012 7th International Conference on Computing and Convergence Tec hnology, Seoul, pp.949-954, 2012  M. J. Neely, çEnergy Optimal C ontrol for Time Varying Wireless Networks,é IEEE Transactions on Info rmation Theory, vol. 52, pp 2915-2934, 2006   
26 


particularly given that some of our workload will be portalbased user-services for whom different metrics of service and performance will be necessary There is a tension here between the constraints of working with a shared massively parallel le system and massively scalable compute We believe the scale of our upgrades will both allow us to serve the user communities and to explore both sides of this debate Whatever the workîow users settle on whether batch or cloud orientated most will have to make signiìcant improvements to their workîow to exploit massive parallelisation We have presented an example of how such workîows can be developed within a constrained virtual environment before exploiting massive batch computing but thus far these sort of interventions are very resource intensive We do not have the resources to intervene on such a scale for most users and we do not yet have suitable documentation in place to help users develop their own solutions To that end we are also procuring improvements in documentation and training materials V S UMMARY We have presented the JASMIN architecture rst year of usage and near term plans The physical architecture consists of 600 cores and 5 PB of fast disk connected by low latency networking The compute environment supports a range of virtualisation options from batch to cloud computing A diverse and growing user community is exploiting JASMIN examples include high resolution climate modelling and whole satellite mission analysis for cloud and land surface retrievals The use of Panasas for storage has been very successful with exibility reliability and low management overheads being key to that success However the existing JASMIN environment is underpowered in compute the storage is lling and difìculties exporting the high performance disk into the local VMware cloud computing environment remain JASMIN users are becoming accustomed to a new analysis environment and early adopters are getting signiìcant improvements in their workîow completely changing the nature of the science they can undertake However thus far the JASMIN support team has not yet been able to invest in comprehensive user documentation or training so not all the community has seen the beneìts of these investments To fully exploit JASMIN changes in software and workîow will be necessary for most users and these will take time to engender Recognising the limitations with the existing physical infrastructure and with new user communities anticipated hardware software and documentation will all be upgraded over the next two years R EFERENCES  B N La wrence V  Bennett J Churchill M Juck es P  K ersha w  P Oliver M Pritchard and A Stephens The JASMIN super-datacluster ArXiv e-prints  Apr 2012  K E T aylor  R  J  Stouf fer  and G A Meehl  A n o v ervie w o f CMIP5 and the experiment design Bulletin of the American Meteorological Society  vol 93 pp 485Ñ498 Oct 2011 A v ailable http://journals.ametsoc.org/doi/abs/10.1175/BAMS-D-11-00094.1  D N W illiams B N La wrence M Lautenschlager  D  Middleton and V Balaji The earth system grid federation Delivering globally accessible petascale data for CMIP5 in Proceedings of the 32nd Asia-Paciìc Advanced Network Meeting  New Delhi Dec 2011 pp 121Ö130 A v ailable http://usymposia.upm.my/inde x.php APAN  Proceedings/32nd APAN/paper/view/155  M S Mizielinski M J Roberts P  L V idale R Schiemann M E Demory J Strachan T Edwards A Stephens M Pritchard P Chiu A Iwi J Churchill C D C Novales J Kettleborough W Roseblade P Selwood M Foster M Glover and A Malcolm High resolution climate modelling the UPSCALE project a large simulation campaign Geoscientiìc Model Development  vol In preparation 2013  J.-P  Muller  P  L e wis J Fischer  P  North and U Framer  The ESA GlobAlbedo project for mapping the earths land surface albedo for 15 years from european sensors in Geophysical Research Abstracts  vol 13 Vienna 2011 p 10969 A v ailable http://www.globalbedo.org/docs/Muller-GlobAlbedo-abstractV4.pdf  D Ghent and J Remedios De v eloping rst time-series of land surface temperature from AATSR with uncertainty estimates in Geophysical Research Abstracts  vol 15 2013 p 5016 Available http://adsabs.harvard.edu/abs/2013EGUGA..15.5016G  C A Poulsen R Siddans G E Thomas A M Sayer  R  G  Grainger  E Campmany S M Dean C Arnold and P D Watts Cloud retrievals from satellite data using optimal estimation evaluation and application to ATSR Atmospheric Measurement Techniques  vol 5 no 8 pp 1889Ñ1910 Aug 2012 A v ailable http://www.atmos-meas-tech.net/5/1889/2012  J Cohen B Dolan M Dunlap J M Hellerstein and C W elton MAD skills new analysis practices for big data Proceedings of the VLDB Endowment  vol 2 no 2 pp 1481Ñ1492 2009 Available http://dl.acm.org/citation.cfm?id=1687576  K Shv achk o H K uang S Radia and R Chansler  The hadoop distributed le system in Mass Storage Systems and Technologies MSST 2010 IEEE 26th Symposium on  2010 pp 1Ñ10 A v ailable http://ieee xplore.ieee.or g/xpls/abs all.jsp arnumber=5496972  H Herodotou H Lim G Luo N Boriso v  L Dong F  B Cetin and S Babu Starìsh A self-tuning system for big data analytics in Proc of the Fifth CIDR Conf  2011 A v ailable http://x86.cs.duke.edu  gang/documents/CIDR11 Paper36.pdf  J Buck N W atkins J Lefe vre K Ioannidou C Maltzahn N Polyzotis and S Brandt Scihadoop Array-based query processing in hadoop Technical Report UCSC-SOE-11-04 UCSC Tech Rep 2011  G Sak ellari and G Loukas  A surv e y of mathematical models simulation approaches and testbeds used for research in cloud computing Simulation Modelling Practice and Theory  A v ailable http://www.sciencedirect.com/science/article/pii/S1569190X13000658 75 


Copyright © 2009 Boeing. All rights reserved  Architecture Server-1 Server-2 DB2 SURVDB XML Shredder WebSphere Message Broker Ext.4 H Ext.3 G Ext.2 F Ext.1 E C WebSphere MQ TCP/IP Live ASDI Stream IBM Cognos Server-3 IBM SPSS Modeler SPSS Collaboration Deployment Services 


Copyright © 2009 Boeing. All rights reserved  Database Modeling Schemas for correlated ASDI messages translated into equivalent relational schemas  Database tables generated based on classes created from schema definitions  Nine main, eleven supporting tables  Each main table contains FLIGHT_KEY 


Copyright © 2009 Boeing. All rights reserved  Database Modeling 


Copyright © 2009 Boeing. All rights reserved  Correlation Process To archive received ASDI data  Track messages must be correlated with flight plan messages FLIGHT_KEY assigned Uncorrelated data tagged Approx 30 minutes to correlate one day of data 


Copyright © 2009 Boeing. All rights reserved  Historical Data Processing To load correlated data  Uncompress, unmarshall  Create a list of files containing the correlated data  Write data to warehouse 


Copyright © 2009 Boeing. All rights reserved  Live Data Processing Processed using IBM MQ IBM Message Broker and a technique called XML Shredding Message Broker Compute Nodes  Uncompress Node  Extract correlated messages  Shred Node adds to DB Stored Procedure ìshreds XML docs and adds to tables 


Copyright © 2009 Boeing. All rights reserved  Issues and Observations Initial load of one day of data ~ 7 hours Optimizations  Write data in batches  Use a mutable data structure to create data strings  Deploy a higher performance machine  Use load instead of insert  Use DB2 Range-Partitioned tables  Database tunings Time reduced from 7 hours to approx 30 minutes 


Copyright © 2009 Boeing. All rights reserved  Optimizations Use a mutable data structure to create data strings  Original application created the SQL statement by appending elements to a Java String  It was taking five hours \(of the seven hours Strings  Instead Java StringBuilder used  Java Strings immutable  Time savings of 71.4 


Copyright © 2009 Boeing. All rights reserved  Optimizations Deployed on a higher-performance machine  Application ported from IBM Blade Center HS21 \(4GB of RAM and 64-bit dual-core Xeon 5130 processor to Dell M4500 computer \(4GB of RAM and 64-bit of quad-core Intel Core i7 processor  Reduced the time to thirty minutes Bulk loading instead of insert  Application was modified to write CSV files for each table  Entire day worth of data bulk loaded  Reduced the time to fifteen minutes 


Copyright © 2009 Boeing. All rights reserved  Optimizations Range-Partitioned tables \(RPT  To limit the size of tables, the original code created multiple tables per table type  This puts burden on the application to query multiple tables when a range crosses several tables  With RPT, user is not required to make multiple queries when a range crosses a table boundary  Increased the time to thirty minutes  Additional fifteen minute cost per day of partitioning enabled time savings during queries 


Copyright © 2009 Boeing. All rights reserved  Optimizations Database tunings  Range periods changed from a week to a month  Automatic table space resizing changed from 32MB to 512KB  Buffer pool size decreased  Decreased the time to twenty minutes Overall, total time savings of 95.2 


Copyright © 2009 Boeing. All rights reserved  20 IBM Confidential Analytics Landscape Degree of Complexity Competitive Advantage Standard Reporting Ad hoc reporting Query/drill down Alerts Simulation Forecasting Predictive modeling Optimization What exactly is the problem What will happen next if What if these trends continue What could happen What actions are needed How many, how often, where What happened Stochastic Optimization Based on: Competing on Analytics, Davenport and Harris, 2007 Descriptive Prescriptive Predictive How can we achieve the best outcome How can we achieve the best outcome including the effects of variability Used with permission of IBM 


Copyright © 2009 Boeing. All rights reserved Initial Analysis Activities Flights departing or arriving on a date Flights departing or arriving within a date and time range Flights between city pair A,B Flights between a list of city pairs Flights passing through a volume on a date. \(sector, center, etc boundary Flights passing through a volume within a date and time range Flights passing through an airspace volume in n-minute intervals All x-type aircraft departing or arriving on a date Flights departing or arriving on a date between city pair A,B Flights departing or arriving on a date between a list of city pairs Flights passing through a named fix, airway, center, or sector Filed Flight plans for any of the above Actual departure, arrival times and actual track reports for any of the above 


Copyright © 2009 Boeing. All rights reserved  Initial SPSS Applications Show all tracks by call sign 


Copyright © 2009 Boeing. All rights reserved  Predictive / Prescriptive Analytics Use-Case For a given Airspace Volume of Interest \(AVOI compute distinct traffic volume at some point in the future  Aim to alert on congestion due to flow control areas or weather if certain thresholds are exceeded  Prescribe solution \(if certain thresholds are exceeded Propose alternate flight paths  Use pre-built predictive model  SPSS Modeler performs data processing Counts relevant records in the database \(pattern discovery Computes traffic volume using statistical models on descriptive pattern Returns prediction with likelihood 


Copyright © 2009 Boeing. All rights reserved  Predictive / Prescriptive Analytics Use-Case Advanced Arrival Procedures with Active Abatement Potentials   9/23/10  24 Pulls in the TRACKINFO table of MAIN using SQL Limits the data to database entries which fall inside the AVOI Combines the SOURCE_DATE and SOURCE_TIME to a timestamp that can be understood by modeler Computes which time interval the database entry falls in. The time interval is 15 minutes Defines the target and input fields needed for creating the model Handles the creation of the model Produces a graph based off of the model results Final prediction 


Copyright © 2009 Boeing. All rights reserved  Initial Cognos BI Applications IBM Cognos Report Studio  Web application for creating reports  Can be tailored by date range, aircraft id, departure/arrival airport etc  Reports are available with links to visuals IBM Framework Manager  Used to create the data package  Meta-data modeling tool  Users can define data sources, and relationships among them Models can be exported to a package for use with Report Studio 


Copyright © 2009 Boeing. All rights reserved  Flights Departing Las Vegas on Jan 1, 2012 1 of 3 Report shows the departure date, departure and arrival locations and hyperlinks to Google Map images DeparturePosition and ArrivalPosition are calculated data items formatted for use with Google Maps Map hyperlinks are also calculated based on the type of fix 


Copyright © 2009 Boeing. All rights reserved  Flights Departing Las Vegas on Jan 1, 2012 2 of 3 DeparturePosition, Departure Map, ArrivalPosition and Arrival Map are calculated data items \(see departure items below DepartureLatitude DepartureLongitude DeparturePosition Departure Map 


Copyright © 2009 Boeing. All rights reserved  Flights Departing Las Vegas on Jan 1, 2012 3 of 3 


Copyright © 2009 Boeing. All rights reserved  Conclusion and Next Steps Current archive is 50 billion records and growing  Approximately 34 million elements per day  1GB/day Sheer volume of raw surveillance data makes analytics process very difficult The raw data runs through a series of processes before it can be used for analytics Next Steps  Continue application of predictive and prescriptive analytics  Big data visualization 


Copyright © 2009 Boeing. All rights reserved  Questions and Comments Paul Comitz Boeing Research & Technology Chantilly, VA, 20151 office Paul.Comitz@boeing.com 


Copyright © 2009 Boeing. All rights reserved Advanced Arrival Procedures with Active Abatement Potentials   9/23/10  31 


Copyright © 2009 Boeing. All rights reserved Advanced Arrival Procedures with Active Abatement Potentials   9/23/10  32 Backup Slides 


Copyright © 2009 Boeing. All rights reserved  Initial Approach Initial Investigations  Apache Solr/Lucene  Data Warehouse Evaluate Hadoop in the future 


Copyright © 2009 Boeing. All rights reserved  Using SOLR Uncompress Track Information Messages To use with Solr  Transforming track messages from their  original schema to Solr required building a ìkey, valueî list using an XSTL  Queries made against this list of ìkey, valueî pairs Transformation Process  One day of data ~ 4.5 hours Once transformation complete search/query performance very good Geo spatial queries using  unique query language 


Copyright © 2009 Boeing. All rights reserved  Representation Aviation data is frequently represented in more than one form 


