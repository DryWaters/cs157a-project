GUIdif fÖARe gression Testing Tool for Graphical User Interfaces Sebastian Bauersfeld Software Testing and Quality Group Universitat Polit  ecnica de Val  encia Valencia Spain Email sbauersfeld@pros.upv.es Abstract Due to the rise of tablets and smart phones and their impact on everyday life robust and high-quality Graphical User Interfaces GUIs are becoming more and more important Unfortunately testing these GUIs still remains a big challenge with the current industrial tools which only cater to manual testing practices and provide limited oracle functionalities such as screenshot comparison These tools often result in large amounts of manual labor and thus increase cost We propose a new GUI regression testing tool called GUIdiff which works similar to diff tools for text data It executes two different versions of a System Under Test SUT side by side compares the GUI states against each other and presents the list of the detected deviations to the tester The tool is semi-automatic in the sense that it nds the differences completely automatic and that the tester labels them as faults or false positives I I NTRODUCTION Graphical User Interfaces GUIs represent the main connection point between a softwareês components and its end users and can be found in almost all modern applications This makes them attractive for testers since testing at the GUI level means testing from the userês perspective and is thus the ultimate way of verifying a programês correct behavior However GUIs are often large and difìcult to access programmatically which poses great challenges for an applicationês testability Capture and Replay CR tools promise to automate testing at the GUI level However they have always been controversial since they require a great amount of manual effort on the part of the testers who need to record and maintain input sequences Especially in the context of frequently changing GUIs CR tools generate high maintenance costs due to fragile input sequences In an earlier work we presented GUIT est a J a v a library which allows to write robustness tests for complex graphical applications Although these tests were fully automatic they lacked a ne-grained oracle and consequently only detected severe faults such as crashes In this work we build upon our library but set the focus on regression testing This gives us more powerful oracles since we can compare two SUT versions against each other in order to detect anomalous behavior The idea is to run the two versions in parallel and report the differences in the observed GUI states back to the tester As we described in e v en comple x GUIs can be executed fully automatic The general idea is to capture GUI state information obtained from the operating systemês accessibility API in widget trees Figure 1 and automatically derive possible actions for each GUI state By iteratively selecting and executing particular actions it is possible to automatically walk through the GUI Figure 2 The idea 
type: TButton  rect: [15, 25, 65, 55 hasFocus: true enabled: false yp  title Button  Desktop Window 
Button Text Slider Menu MI MI MI MI 
type: TMenuItem  title File    
ABC Derive Actions Fig 1 GUIdiff uses the operating systemês accessibility API and represents the current state of a GUI as a widget tree whose nodes refer to the visible controls and are annotated with their property values It uses the tree to derive and execute possible actions green 
Desktop Desktop Different Button Slider Menu File Edit View 
Diff Text  Example Button Some Text Menu File Edit View Help Slider 1 2 Fig 3 Detecting differences in the GUI states of two SUT versions now is to run two versions of the same application side by side execute the same actions if possible and observe the differences in the widget trees of their states This way of comparing GUI states is more robust than the comparison between two screenshots since for example the position of controls does not matter It will also allow us to only compare the properties of the same controls against each other and ignore newly introduced controls in the more recent version of the SUT We expect that this will reduce false positives 
2013 IEEE Sixth International Conference on Software Testing, Verification and Validation 978-0-7695-4968-2/13 $26.00 © 2013 IEEE DOI 10.1109/ICST.2013.84 499 


 a b c d e Fig 2 Automatic sequence generation In each state we derive possible actions select one execute it and get to the next state II C HALLENGES In order to execute the same actions on the two SUT versions and in order to detect differences one needs to rst relate identical controls in the different states to each other A similar problem is found in diff tools which are often used by programmers to detect changes in source les The diff tool needs to align the text such that equivalent lines correspond to each other a problem which is known as sequence alignment  However in our case we need to align trees in order to nd which controls are identical There has been done extensive research on tree alignment algorithms which we will mak e use of Once we are able to align the widget trees of two GUI states we can a execute the same actions on identical control pairs which allows us to execute the two SUT versions in parallel and b compare the properties of the controls title color numeric values enabled  disabled  against each other in order to detect and report differences Figure 3 shows the initial states of two versions of the same SUT and their widget trees The alignment shows which controls correspond with each other By comparing their property values we can nd and mark the differences so that the tester can spot them easily Tree alignment algorithms can be computationally expensive since the ones which respect hierarchy often exhibit exponential runtime complexity Despite the f act that e v en widget trees for complex applications usually do not contain much more than a few hundred controls this could slow down the execution of the test Therefore we will have to nd a trade-off between alignment accuracy and performance Another challenge might be the amount of detected differences As shown in Figure 3 we will present the differences in a graphical way so that they are easy to spot However excessive amounts of false positives purposely removed controls  deliberately changed properties might cause the tester to get tired of labeling Therefore we will strive to list the most suspicious differences rst This could be done such that whenever the tester labels a difference as false positive GUIdiff re-sorts the list of differences to penalize similar occurrences Another option would be to provide a query language that allows to express interests Show only differences in dialog X Query languages such as SQL or Prolog might be suitable for this task III R ELATED W ORK A large part of the available GUI testing tools falls into the capture and replay CR or scripting categories Popular commercial and open source tools are for example eggPlant  monkeyrunner for Android and Selenium  As mentioned earlier these tools often induce a lot of manual labor since broken test cases require frequent maintenance There have been interesting approaches to the automatic generation of test cases for GUIs among which the GUITAR framework Their idea is to w alk through the GUI and to automatically generate an event ow graph from which they derive test cases by applying several coverage criteria Other automatic test generation approaches have been developed by Amalìtano et al who perform crash-testing on Android mobile apps Marchetto and Tonella who generate test suites for AJAX applications using metaheuristic algorithms and Artzi et al who use feedback-directed random test case generation for JavaScript web applications IV C ONCLUSION We presented an approach for regression testing of applications with GUIs which uses side by side testing of two SUT versions to spot differences in the GUI Our approach is orthogonal to existing techniques which focus on test case generation We are interested in the power of the oracle that we obtain by comparing two SUT versions Currently we walk through the GUI at random but our approach might beneìt from using one of the abovementioned techniques We are currently implementing the GUIdiff tool for MacOSX and Windows and are looking forward to present rst results soon A CKNOWLEDGMENT This work is supported by EU grant ICT-257574 FITTEST  R EFERENCES  A M Memon A Comprehensive Framework for Testing Graphical User Interfaces  PhD thesis University of Pittsburgh 2001  S Bauersfeld T  E J V os GUITest A Java Library for Fully Automated GUI Robustness Testing  In ASE 2012  S Huang M B Cohen A M Memon Repairing GUI Test Suites using a Genetic Algorithm  In ICST 2010  D Amalìtano A.R F asolino P  T ramontana A GUI Crawling-Based Technique for Android Mobile Application Testing  In ICST 2011  S Artzi J Dolby  S.H Jensen A M¯ller  F  T ip A Framework for Automated Testing of Javascript Web Applications In ICSE 2011  A Marchetto P  T onella Using search-based algorithms for Ajax event sequence generation during testing  Empirical Softw Engg 2011  P  Bille A survey on tree edit distance and related problems  Theoretical Computer Science Volume 337 Issues 1-3 9 June 2005 Pages 217-239 
500 


single namenode  The nodes in a HDFS cluster that store the chunks are called datanodes  A centralized namenode is responsible for keeping the le metadata and the chunk location HDFS handles failures through chunk-level replication 3 replicas are kept by default When distributing the replicas to the datanodes HDFS employs a rack-aware policy the rst copy is always written locally the second copy is stored on a datanode in the same rack as the rst replica and the third copy is shipped to a datanode belonging to a different rack randomly chosen The namenode decides and maintains the list of datanodes that store the replicas of each chunk III A PPLICATION WORKLOAD  DISTRIBUTED INDEXING  SEARCHING  Our workload is based on the scalable MapReduce oriented high-dimensional indexing scheme initially presented in The inde xing algorithm uses at its core a hier archical unstructured quantization scheme quite similar to the approach proposed by Nister and Stewenius In a nutshell high-dimensional descriptors are clustered around randomly picked representative points that are hierarchically organized A Dataset preparation Our datasets the collections of high-dimensional descriptors were converted to Hadoop Sequence Files  Each raw descriptor becomes a sequence le record A record in this le has a key an image identiìer and a value a high-dimensional descriptor Hadoop scatters across many machines the blocks of the sequence le in its distributed le system HDFS Thus the entire descriptor collection is stored as a set of HDFS sequence les this set of sequence les also represents the input data to the applications described further B Distributed index creation To be able to index a huge collection of descriptors using MapReduce we rst perform a phase of building auxiliary data required by the distributed process This preliminary phase which we execute on a single machine and usually only once consists of building the index tree a hierarchically-organized collection of cluster representatives The tree is created by randomly picking from the descriptor collection C points i.e the representatives of the visual vocabulary dictionary eventually created These representatives are organized in a hierarchy of L levels for efìciency The index tree is serialized to a le on disk and sent to all the nodes involved in the distributed index creation Creating an index from a very large collection of descriptors is a very costly process Distributing it with MapReduce involves designing the map and reduce phase of the indexing application Each map tasks receives at startup time i a block of input data a chunk of a Hadoop sequence le and ii the le containing the index tree The mapper further assigns the descriptors in its data block to the correct representative discovered by traversing the tree The resulting assignments are sent to reduce tasks that write to disks highdimensional descriptors grouped by cluster identiìer This eventually creates one or more indexed les which contain clustered high-dimensional descriptors The number of such les is deìned by the number of reduce tasks The indexing application is highly data-intensive  both in the map phase when reading the descriptors to assign them to cluster representatives and also in the reduce phase when writing the clusters to disk The application also generates a substantial amount of output data slightly larger than the input set The map stage is CPU-intensive as well by performing distance calculations for every input record The shufîing step intensively utilizes the network as the intermediate data is sent from mappers to reducers Finally distributed indexing is a long-running application on account of its dataand CPU-intensive nature C Distributed search Search phase is geared toward throughput as it processes very efìciently large batches of queries typically 10 4  10 7 query descriptors The search also requires a preliminary step the creation of a lookup table  where all query descriptors of a batch are grouped according to their closest representative discovered from traversing the index tree This lookup table is written to the local disk of all the nodes that will perform search The MapReduce implementation of the search process is detailed further Each map task receives i a block of data from one of the previously created index les ii the le containing the lookup table The mapper processes only the descriptors in its assigned chunk of data that are relevant for the queries Distance calculations are computed for those descriptors and queries assigned to the same cluster identiìer k nn results are eventually emitted by the mappers then aggregated by reducers to create the nal result for the query batch Our implementation of the distributed search is dataintensive in the map phase where indexed les are read from disk Unlike the indexing application the distributed search is short-running since only a part of the indexed descriptors are compared to the queries This also renders the search application unbalanced  the workload of each mapper depends on whether the chunk they process includes clusters required by the queries Another aspect that differs in this application as opposed to the index creation refers to the data shufîed by mappers and generated by reducers which is insigniìcant in size compared to the input data Note that both applications require auxiliary data of substantial amount the index tree/the lookup table have to be loaded by each mapper for every chunk of data While our experiences pertain to these two applications their 676 


 Cluster Nodes CPU@Freq Cores RAM Local CPU Disk Cl 1 64 2 Intel@2.50GHz 4 32GB 138GB Cl 2 25 2 Intel@2.93GHz 4 24GB 433GB Cl 3 40 2 AMD@1.70GHz 12 48GB 232GB Table I C LUSTER C ONFIGURATIONS  characteristics are general enough so that our ndings can be easily applied to big data processing D Dataset In our experiments we used the dataset provided by one of our partners in the Quaero project http://quaero.org The dataset consists of around 30 billion SIFT descriptors approximately four terabytes of data extracted from 100 million images harvested on the Web Besides using this entire collection we also used a subset of it containing 20 million images i.e 7.8 billion descriptors about one terabyte To the best of our knowledge these datasets are among the largest collections presented to the multimedia community Details on evaluation of indexing quality and the quality results themselves can be found in IV H ADOOP IN PRACTICE Although the Hadoop framework is now widely adopted processing terabyte-sized datasets require to reconsider many of its design implementation and execution aspects The Hadoop has been shown to scale and efìciently process terabytes of data on thousands of machines e.g in Yahoo Facebook etc but a few research works actually reported Hadoop at such large scales dataand platform-wise In fact one can hardly nd real-life recommendations on Hadoop parameter conìguration or suggestions on tools to be used for handling such amounts of data The implementation and the experiments presented in this paper are real applications conducted on real datasets in contrast to the usual Hadoop benchmarks real applications raise complex problems and challenges Luckily the Hadoop framework contains a few tools to solve some of these problems However it is far from being obvious how and when to use them We present here our experience with big data processing using Hadoop in a grid environment Based on the challenges and problems we were faced with we can recommend best practices conìguration tunning tools for dealing with them The applications described in Section III were integrated into a framework that we developed to be able to conìgure the compute environment deploy a Hadoop cluster transfer input data to HDFS from external storage run indexing and searching jobs and optionally retrieve the results and analyze logs A Experimental platform To reach the point where we could process terabytes of data on a Hadoop cluster instance we have performed a large series of experiments on the Gridê5000 platform The Gridê5000 project is a widely-distributed infrastructure devoted to providing an experimental platform for the research community The platform is spread over 9 geographical sites located on French territory We conducted our experiments on machines belonging to 3 clusters of the Rennes site of Gridê5000 The clusters conìgurations are shown in Table I A Hadoop instance is deployed on these nodes as follows the namenode and jobtracker are each launched on a dedicated node while the datanodes and tasktrackers are codeployed on the remaining nodes we also allocate a separate machine to act as Hadoop client for job submissions B Experiments with the default Hadoop settings In a rst round of experiments we performed indexing with the default Hadoop conìguration parameters This gave us a baseline for assessing any improvements we could further obtain through various means What we refer to as the default Hadoop deployment is the basic conìguration shipped with Hadoop to which we applied some adjustments based on the guidelines provided for dealing with big data The rst obvious adjustment was to set the map and reduce slots to accommodate the platform capacities 8 slots for mapping and 2 slots for reducing per node We set these values based on our clusters computing power and following the recommendations in Hadoopês tutorial The second parameter we modiìed is the HDFS chunk size the default value of 64 MB is not suitable for big data as it entails larger pressure on the namenode because of lesystem metadata and a large number of map tasks be executed After some experiments with varying chunk sizes we discovered the right chunk size for our workload to be 512 MB At the level of HDFS we kept the default replication factor of 3 for the input data The replication factor is a crucial parameter for performance not only because it enables fault tolerance but also because it favors local execution of map tasks minimizing the amount of data read remotely The output data however was written only once to avoid the substantial overhead of writing replicas remotely Given the size of our dataset this cost is considerably high With these three basic conìgurations indexing 1 TB of data on 106 nodes took 95 minutes while 4 TB on 100 nodes were indexed in 10 hours in the same environment Table II There are several reasons to explain the signiìcant difference in runtime between indexing 1 TB and 4 TB In addition to the obviously larger number of tasks to be executed there is also a larger computational work done by each map task The tree of representatives built for indexing 4 TB is a lot larger than the one covering 1 TB 1.8 GB as opposed to 461 MB The size of the index tree has two consequences 677 


 Nodes Default Hadoop Tuned Hadoop 1TB 50 202min 174.7min 106 95min 75min 4TB 100 10h1min 8h27min Table II I NDEXING TIME  Parameter Default value Tuned value Map slots/tasktracker 2 8 Reduce slots/tasktracker 2 8 Input data replication 3 3 Output data replication 3 1 Chunk size 64 MB 512 MB JVM reuse off on Map output compression off on Reduce parallel copies 5 50 Sort factor 10 100 Sort buffer 100 MB 200 MB Datanode max receivers 256 4096 Namenode handlers 10 40 Table III H ADOOP CONFIGURATION TUNING  First each mapper has to perform more distance calculations to assign each point to the closest cluster Second the index tree takes up more RAM in each map slot thus we had to reduce the map slots to 4 per node V L ARGE SCALE H ADOOP A Adjusting to the data size Understanding the application workload and accurately assessing the scale at which the application runs are key steps to achieving optimal performance We present here a brief analysis of our workload which helped us pinpoint the issues to further improve Indexing 4 TB of data with Hadoop involves storing 16 TB of data input replicated 3 times plus output written once shufîing 4 TB of intermediate data executing approximately 8000 map tasks Platform-wise we dispose of 100 nodes i.e 800 map slots 400 for 4 TB and 200 reduce slots organized in 3 clusters connected to the same network switch Based on these observations several optimizations are in order Since a substantial amount of data is shufîed from the mappers to the reducers compressing the map output can be beneìcial as it also reduces network usage Rack-awareness is not useful in this case since the nodes connect to a single switch however if it is the case conìguring rack-awareness according to the network topology is necessary as it allows Hadoop to optimally place tasks on nodes for execution Table III sums up these optimizations by listing the Hadoop parameters and the values we used in the indexing process As mentioned above enabling map output compression reduced the amount of shufîed data by 30 from 1 TB to 740 GB Other low-level parameters refer to the shufîing phase when the data is sorted on the mapperês side copied to the reducer and then merged and sorted on the reducer node The last two lines of Table III show options conìgured on the HDFS nodes the maximum number of chunk requests read/write each namenode can simultaneously handle and the number of connections the namenode can serve at a time Table II shows a comparison of the indexing time using the default Hadoop conìguration as well as the optimized one On the same testbed and with the same slots for mapping and reducing the customized Hadoop parameters deliver a much faster indexing time The results in Table II show that setting the right parameters for the Hadoop framework can drastically improve Hadoopês performance Tuning the parameters of the Hadoop framework is a rather complex task that requires good knowledge and understanding of both the workload and the framework itself Given the performance gains obtained tuning the parameters listed in Table III is worth-while nevertheless the values delivering best performance are highly dependent on the workload and thus tweaking them in order to discover the best values is advisable B Hadoop on heterogeneous clusters Large-scale processing of big data is most commonly performed in a heterogeneous environment Resource heterogeneity can impact the performance since most dataprocessing systems are designed for homogeneous platforms This is also the case for the Hadoop frame w ork the conìguration settings can be speciìed only globally not in a per-cluster manner The consequence is that the Hadoop deployment is conìgured according to the least equipped node at the expense of wasting resources on more out-ìtted nodes Parameters such as the number of map/reduce slots per tasktracker and the amount of RAM memory allocated to each task have to be set to the lowest available values The advantage of having a single conìguration for the whole platform is that it is easy to manage the considerable downside however is that the platform is under-utilized To fully exploit the computing power of our three cluster environments we developed a simple mechanism that conìgures tasktrackers parameters on each cluster based on the clusterês capabilities This mechanism consists of three steps  deploy Hadoop on all the nodes using the global conìguration settings i.e adjusting to the lowest available values  create cluster-speciìc conìguration les  restart tasktrackers with the new conìguration les Speciìcally considering the clusters description in Table I we deployed Hadoop with 8 map slots and 2 reduce slots per node and then restarted tasktracker processes on Cl 3 to use 20 map and 4 reduce slots With this platformaware Hadoop deployment indexing 1 TB of data on 107 nodes nished in 65.4 minutes 30 minutes faster than the default Hadoop run and 10 minutes faster than the tuned Hadoop run see Table II 678 


 0 500 1000 1500 2000 2500 3000 3500 0 500 1000 1500 2000 2500 time\(s task id map a Default Hadoop 0 500 1000 1500 2000 2500 3000 3500 0 500 1000 1500 2000 2500 time\(s task id map b Platform-aware Hadoop Figure 1 Time progress of map tasks when indexing 1 TB on 107 nodes Figure 1 shows the map tasks in time when indexing 1 TB with the default Hadoop deployment Figure 1\(a and when conìguring Hadoop per-cluster Figure 1\(b The gures basically depict how the map phase progresses in time There are about 2050 map tasks to be launched on the 100 node platform With the default Hadoop run we could set 8 map slots per tasktracker giving us a total of 856 slots for mapping at a time As Figure 1\(a shows the rst wave on map tasks is launched in parallel Since mappers run on nodes with different performance there is some variance in map duration times which eventually leads to the degradation of mapper waves Also the spikes show that some map tasks are signiìcantly slower than the rest of the wave This is an effect of using the default Hadoop settings that do not accommodate the large amount of data being processed Some tasks have to spill their output to disk and wait for network to send the data to the reducers Adjusting low-level Hadoop parameters increasing the size of memory buffers compressing the map output etc can prevent this behavior as can be seen in Figure 1\(b In addition conìguring each cluster according to its true capabilities provides 1192 slots for mapping in parallel and nally faster execution time C Dealing with large-size auxiliary data As discussed in Section III both indexing and searching applications use auxiliary information to process the input data In the case of the distributed index creation the mappers load the tree of cluster representatives and traverse it for every input point to assign it to the closest cluster Whereas the search application is concerned the auxiliary data consists of the batch of query descriptors to be processed In both cases the additional information can amount to signiìcant sizes the index tree corresponding to 1 TB of data is 461 MB in size while for 4 TB of data 1.8 GB of auxiliary data are required We focus here on tools we found useful in managing auxiliary data 1 Multi-threaded Mappers Loading the same piece of information in every mapper is a requirement commonly encountered in MapReduce applications The way Hadoop addresses this issue is to allow users to adjust the RAM dedicated to each mapper so that it accommodates the size of the resource to load However by doing so one has to take into account the machineês capacity i.e the total available memory having more RAM per mapper means having less map slots per node less map operations executed simultaneously and nally longer execution time A way to avoid wasting CPU cores while still allocating more RAM is to make use of multi-threaded mappers  Implemented in Hadoop the multi-threaded mapper spans a conìgurable number of threads each thread executing map tasks as a normal mapper would The threads of a mapper share the same RAM memory thus auxiliary data can be loaded only once and read simultaneously by multiple threads during the map phase The map computations are executed in parallel each thread working on different key value pairs By setting the right number of threads per mapper the CPU capacity can be fully utilized The downside of this mechanism is that multithreaded mappers use synchronization when both reading the input data and then when writing the map output the threads synchronize when reading each key value pair from the input chunk of data allocated to the mapper running the map function on that pair is done in parallel by all the threads however writing the output of each map operation to the same map output buffer is again synchronized The optimal conìguration of map slots and number of threads per each slot strongly depends on the application workload Obviously the combination of map slots  threads per slot has to fully utilize the machineês processing power The synchronization steps in the multi-threaded mapper implementation incur an inherent overhead when using 679 


 Mapper slots Threads per mapper Time\(min 1 8 87 2 4 68 4 2 41 8 1 42 Table IV S MALL SCALE INDEXING WITH VARYING NUMBER OF MAP THREADS  this mechanism over the normal Hadoop mapper Thus the performance gain of using multi-threaded mappers is only partially dependent on the workload and the conìguration Our indexing application provides a suitable case for using multi-threaded mappers For this approach to be beneìcial performance-wise we have to discover the conìguration that allows us to overcome the synchronization overhead In the normal mapper case the index tree is loaded by each map task while in the multi-threaded mapper the tree is loaded once and then shared by all the threads In both cases there is an overhead that cannot be avoided index tree loading vs synchronization To discover the optimal number of map slots  threads per slot we initially performed a small-scale experiment using 13 nodes belonging to the same cluster of the Rennes site Disposing of 8 cores per node Hadoop tasktrackers were conìgured with various combinations of map slots and threads In each setup we performed indexing on 45 GB of data using the multi-threaded mapper implementation the index in this experiment was 460 MB in size The results are displayed in Table IV In addition to these multi-threaded mapper runs we also ran the indexing with the default mapper implementation on the same dataset and on the same platform in this case the indexing took 40 minutes to complete It is fair to assume this is the optimal execution time in the given setup furthermore we can use it as baseline to compare against The slowest run is the conìguration in which 8 threads are spawned within the same map slot this is a clear effect of the reading/writing synchronization implemented in Hadoopês multi-threaded mapper As we increase the number of slots and reduce the number of threads per slot the indexing time decreases The best conìguration that also achieves a running time comparable to the baseline is 4 map slots  2 threads per slot The beneìts of using multi-threaded mappers are revealed when processing the big dataset of 4 TB When using the default mapper the size of the index tree 1.8 GB compelled us to increase the RAM size to 6 GB and limit the map slots per tasktracker to 4 under-utilizing the nodeês CPU power With multi-threaded mappers we were able to take full advantage of all the CPU cores while sharing the memory between the threads of a mapper Based on the results of the small-scale experiment we conìgured the tasktrackers with 4 mapper slots each mapper running 2 threads This setting delivered the best execution time for the distributed indexing 6 hours and 8 minutes Query batch\(#images Time\(s Complete loading 3,000 382 12,000 521 25,000 755 MapFiles 3,000 343 12,000 607 25,000 932 Table V S EARCH TIMES OVER 1TB ON 100 NODES  2 MapFiles In some applications the mappers require auxiliary data related only to the data chunks they process In this case we can avoid loading all the auxiliary data by loading only the necessary part This partial loading of auxiliary information can be achieved by the means of MapFiles  Hadoopês MapFiles can be regarded as common map structures sets of key value associations that persistently store the data in binary format as HDFS SequenceFiles In addition to the data le that contains the key value mappings in order a MapFile also has an index le storing keys and for each key its offset in the data le The index le can be conìgured to store only a fraction of the key set MapFiles are an efìcient tool to load auxiliary data and reduce RAM usage since only the index le is loaded into memory while the data le is read from disk whenever necessary Accessing a MapFile i.e getting the value associated to a key consists of 1 searching the key in the in-memory index and getting the offset of the key on disk and 2 seeking in the data le to the keyês offset and reading the corresponding value We used MapFiles to store the batches of queries in the searching application We performed searches on 1 TB of data in two scenarios when the batch of queries is entirely loaded from disk into memory by each mapper and when the batch is stored as a MapFile and only its index is kept in the main memory Using a MapFile key interval of 1 we searched over 1 TB on 100 nodes using three batches of different sizes The search times shown in Table V prove that MapFiles are an efìcient tool for managing auxiliary data Apart from delivering comparable performance MapFiles also reduce RAM usage For instance instead of loading approximately 500 MB of queries each mapper keeps in memory a 4.6 MB index of the keys This can make a signiìcant difference when the query batch is very large If the query batch is of the order of gigabytes in size loading it into memory by each mapper is inefìcient and sometimes unfeasible Even if the total available RAM memory is able to accommodate the size of the batch this would impact the number of mappers running simultaneously Although using MapFiles takes longer to process queries it still allows all the mappers to run at the same time thus the overhead of reading from disk is eventually outweighed D Observations Among other tools that Hadoop provides to facilitate data distribution we found particularly useful the distributed 680 


cache  which transparently transfers auxiliary data to the local disks of all the nodes Overall Hadoop is helpful for achieving scalability However the size of the data puts a signiìcant load on the framework We observed that tasks often fail because of insufìcient disk space communication timeouts etc These failures can be avoided or at least minimized through parameter conìguration On the other hand we encountered a few Hadoop errors that we were hard to localize and x At this point the frameworkês fault tolerance mechanisms are crucial for completing the job which Hadoop manages to achieve on average VI C ONCLUSION This paper has presented our experience with processing terabytes of multimedia data through the Hadoop MapReduce framework We described a wide collection of experiments and the practical lessons we have drawn from our experience with the Hadoop environment We have shown the performance beneìts of understanding the application workload and of tuning Hadoop conìguration parameters accordingly In addition we addressed issues commonly found in Big Data processing resource heterogeneity and management of large auxiliary data The tools we employed are existing tools implemented in Hadoop that despite the lack of documentation prove to be very efìcient once one understands how and when to use them Our experiments have shown the beneìts of using multi-threaded mappers and MapFiles in reducing memory usage while maintaining the same degree of parallelism Although the tools provided by the Hadoop to accommodate great data scales proved to be essential for the performance of our applications there is still a room for improvement For example the multi-threaded mappers synchronize when reading and writing a single key/value pair negatively affecting the performance One way to minimize the number of synchronization steps is to have each thread use a separate buffer for reading and writing While this mechanism is easy to implement for writing for reading it is less trivial since it requires modiìcations in the Hadoopês input data splitting process Another interesting direction for future work is to implement our applications using other distributed frameworks and compare them to the Hadoopês performance Since our experimental platform can accommodate our dataset into main memory we plan to look into in-memory distributed frameworks such as Main Memory Map Reduce M3R a Hadoop v ariant that maintains the data in the clusterês main memory The implementation and the experiments presented in this paper are real applications conducted on real datasets The lessons drawn from our work can be shared as best practices and recommendations in the unceasing task of rising to the Big Data challenge A CKNOWLEDGEMENTS This work was partly achieved as part of the Quaero Project funded by OSEO French State agency for innovation see http://www.quaero.org The experiments presented in this paper were carried out using the Gridê5000 ALADDIN-G5K experimental testbed see http://www grid5000.fr R EFERENCES  http://gig aom.com/2012/10/17 facebook-has-220-billion-of-your-photos-to-put-on-ice  J Dean and S Ghema w at MapReduce simpliìed data processing on large clusters Commun ACM  vol 51 no 1 pp 107Ö113 2008  The Apache Hadoop Project  http://www hadoop.or g  K K eahe y and T  Freeman Science Clouds Early e xperiences in Cloud computing for scientiìc applications in Cloud Computing and Its Applications CCA  2008  D Robinson Amazon Web Services Made Simple Learn how Amazon EC2 S3 SimpleDB and SQS Web Services enables you to reach business goals faster  Emereo Publishing 2008  The Hadoop MapReduce Frame w ork  http://hadoop.apache org/mapreduce  T wister Iterati v e MapReduce  http://www  iterativeMapReduce.org  P  Mundkur  V  T uulos and J Flato w  Disco a computing platform for large-scale data analytics in Proc of the 10th ACM SIGPLAN workshop on Erlang  2011 pp 84Ö89  S Owen R Anil T  Dunning and E Friedman Mahout in Action  Manning Publications 2011  H Lejsek F  H Amundsson B T  J  onsson and L Amsaleg NV-Tree An efìcient disk-based index for approximate search in very large high-dimensional collections IEEE Trans Pattern Analysis and Machine Intelligence PAMI  vol 31 pp 869Ö883 2009  H J  egou F Perronnin M Douze J S  anchez P P  erez and C Schmid Aggregating local image descriptors into compact codes IEEE Trans Pattern Analysis and Machine Intelligence PAMI  vol 34 no 9 pp 1704Ö1716 2012  H Lejsek B T  J  onsson and L Amsaleg NV-Tree nearest neighbors at the billion scale in ACM Proc International Conference on Multimedia Retrieval ICMR  2011 pp 54:1 54:8  H Je gou R T a v enard M Douze and L Amsale g Searching in one billion vectors Re-rank with source coding in IEEE International Conference on Acoustics Speech and Signal Processing ICASSP  2011 pp 861Ö864  M Douze H J  egou H Sandhawalia L Amsaleg and C Schmid Evaluation of GIST descriptors for web-scale image search in ACM Proc International Conference on Image and Video Retrieval CIVR  2009 pp 19:1Ö19:8 681 


 M Batk o F  F alchi C Lucchese D No v ak R Pere go F  Rabitti J Sedmidubsk  y and P Zezula Building a web-scale image similarity search system Multimedia Tools Appl  vol 47 no 3 pp 599Ö629 2010  J S Hare S Samangooei D P  Duppla w  and P  H Le wis ImageTerrier an extensible platform for scalable highperformance image retrieval in ACM Proc International Conference on Multimedia Retrieval ICMR  2012 pp 40:1 40:8  K Shv achk o H K uang S Radia and R Chansler  The Hadoop Distributed File System in IEEE Proc Mass Storage Systems and Technologies MSST  2010 pp 1Ö10  D Moise D Shestak o v  G  Gudmundsson and L Amsale g Indexing and Searching 100M Images with Map-Reduce in International Conference on Multimedia Retrieval ICMR  2013 pp 17Ö24  D Nister and H Ste wenius Scalable recognition with a vocabulary tree in IEEE Proc Computer Society Conference on Computer Vision and Pattern Recognition CVPR  2006 pp 2161Ö2168  D Shestak o v  D  Moise G Gudmundsson and L Amsaleg Scalable high-dimensional indexing with Hadoop in Content-Based Multimedia Indexing CBMI  2013 pp 207 212  Y  J  egou S Lant  eri J Leduc and all Gridê5000 a large scale and highly reconìgurable experimental Grid testbed Intl Journal of HPC Applications  vol 20 no 4 pp 481 494 2006  F  Ahmad S T  Chakradhar  A  Raghunathan and T  N V i jaykumar Tarazu optimizing mapreduce on heterogeneous clusters SIGARCH Comput Archit News  vol 40 no 1 pp 61Ö74 2012  A Shinnar  D  C unningham V  Sarasw at and B Herta M3R increased performance for in-memory Hadoop jobs Proc VLDB Endow  vol 5 no 12 pp 1736Ö1747 2012 682 


                                               


                                                                                                      


                  


On the Evolution of Contacts and Communities in Networks of Face-to-Face Proximity 993 Mark Kibanov, Martin Atzmueller, Christoph Scholz, and Gerd Stumme Community Detection Based on Readers' Borrowing Records 1001 Liu Xin, E. Haihong, and Song Junde Design of a Mobile Telephony System for Social Interaction 1006 Yuan-Chih Yu Understanding News Sharing in Social Media from the Diffusion of Innovations Perspective 1013 Long Ma, Chei Sian Lee, and Dion H. Goh A Study of Offline Events and Its Influence on Online Social Connections in Douban 1021 Alvin Chin, Jilei Tian, Junwei Han, and Jianwei Niu How Long a Passenger Waits for a Vacant TaxióLarge-Scale Taxi Trace Mining for Smart Cities 1029 Guande Qi, Gang Pan, Shijian Li, Daqing Zhang, Lin Sun, and Laurence Tianruo Yang iThings/CPSCom 2013 Symposia Symposium on Frontiers of Internet of Things \(SymIoT Frequent Itemset Based Event Detection in Uncertain Sensor Networks 1037 Yongxuan Lai and Jinshan Xie Improved RETE Algorithm in Context Reasoning for Web of Things Environments 1044 Teng Gao, Xiaofeng Qiu, and Lijuan He Ultra-low-power Neural Recording Microsystem for Implantable Brain Machine Interface 1050 Weidong Cao and Hongge Li From Internet of Things to Internet of Agents 1054 Han Yu, Zhiqi Shen, and Cyril Leung Using Kasa Method to Separate Target's RCS Characters from Background in Electromagnetic Sensing within Anechoic Chamber Measurement 1058 Jingcheng Zhao and Ming Lv Research on IPv6 Address Forecast Model of Smart Grid 1064 Xin Miao and Xi Chen Relay Node Deployment Based Small World Effect in Hierarchical Industrial Wireless Sensor Networks 1066 Jieyu Wu, Xinyu Shao, and Haiping Zhu A Development Analysis of China's Intelligent Transportation System 1072 Yuxiang Yan and Chenxue Xu An Anti-collision Algorithm Using Tag Random-Dispersing for RFID Systems 1077 Yang Qing, Li Jian-cheng, Wang Hong-yi, and Shen Rong-jun Pairing and Authentication Security Technologies in Low-Power Bluetooth 1081 Junfeng Xu, Tao Zhang, Dong Lin, Ye Mao, Xiaonan Liu, Shiwu Chen, Shuai Shao Bin Tian, and Shengwei Yi 
xvii 


An Attribute-Based Encryption Scheme with Constant-Size Ciphertexts 1086 Yanfeng Qi, Chunming Tang, Yu Lou, Maozhi Xu, and Baoan Guo Synthetic Evaluation of the Trustworthiness of Integrated Monitoring-Controlling System for LED Display Based on Fuzzy AHP 1089 Yuanmei Wen, Li Luo, Xuechen Yu, and Yanyu Chen Improvement of Peach Platform to Support GUI-Based Protocol State Modeling 1094 Hao Wang, Qiaoyan Wen, and Zhao Zhang Game Theoretic Analysis of Workload Factoring in Federation of Clouds 1098 Yonggen Gu and Changlei Lin Study on Heartbeat Information Acquired from Pressure Cushion Based on Body Sensor Network 1103 Junrong Bao, Xiaoyun Shou, Hua Wang, and Haiyan Yang Towards an Equitable Federated Name Service for the Internet of Things 1109 Xinchi Li, Yang Liu, Ye Tian, Ning Kong, Yan Wang, and Wei Mao Double Nested Internet of Things for Intelligent Management of Police Equipment 1116 Li Shengguang, Tan Lin, Wang Junxiu, and Yu Rui A Universal Object Name Resolution Scheme for IoT 1120 Zhiwei Yan, Ning Kong, Ye Tian, and Yong-Jin Park The New Intelligent Prediction for Bus Congestion Based on History Information Processing 1125 Yan Zhang and Guixi Xiong Construction and Strategies in IoT Security System 1129 Quandeng Gou, Lianshan Yan, Yihe Liu, and Yao Li Fuzzy Double-Threshold Track Association Algorithm Using Adaptive Threshold in Distributed Multisensor-Multitarget Tracking Systems 1133 Wei Du, Huansheng Ning, Yuan Wei, and Jun Wang An Intelligent System for Precast Concrete Element Manufacturing Management Based on RFID Technology 1138 Hu Min and Lu Junyu Data Management for Internet of Things: Challenges, Approaches and Opportunities 1144 Meng Ma, Ping Wang, and Chao-Hsien Chu Residential Energy Management in Smart Grid: A Markov Decision Process-Based Approach 1152 Sudip Misra, Ayan Mondal, Shukla Banik, Manas Khatua, Samaresh Bera and Mohammad S. Obaidat A Space-Time with Weight Algorithm for RFID Data Interpolation 1158 Ming Ke, Xin Wang, Jianxin Tang, and Xuhui Chen Integration of Smart Sensor Networks into Internet of Things: Challenges and Applications 1162 Dan Partynski and Simon G.M. Koo 
xviii 


Integrating Context-Awareness and Trustworthiness in IoT Descriptions 1168 Kaiyu Wan and Vangalur Alagar Building Smart M2M Applications Using the WuKong Profile Framework 1175 Kwei-Jay Lin, Neils Reijers, Yu-Chung Wang, Chi-Sheng Shih, and Jane Y. Hsu A Human Trajectory Estimate Based on Individual Mobility Pattern Library 1181 Yang Yang, Bowen Du, and Xiao Jiang The Research on Monitoring of Discrete Manufacturing Process Based on Internet of Things 1186 Liuyin Yuan, Yu Guo, Jiajun Jiang, and Liyun Nian Research on the Framework of Internet of Things in Manufacturing for Aircraft Large Components Assembly Site 1192 Jihong Liu and Jie Yu Technical State Monitoring and Evaluation of Aerospace Product Manufacturing Workshop Based on Internet of Things 1197 Jihong Liu and Wenting Xu Temperature Map Recovery Based on Compressive Sensing for Large-Scale Wireless Sensor Networks 1202 Xuanxuan Wu, Cheng-Long Chuang, and Joe-Air Jiang Interoperability Repository System for the Internet-of-Things 1207 Pedro MalÛ, Tiago Teixeira, Bruno Almeida, and M·rcio Mateus Discussion on Key Technologies in Forestry Fundamental Scientific Information Cloud Service Platform 1216 Mubo Zhang, Zhongming Li, and Fan Li Symposium on Frontiers of Cyber-Physical-Social Computing SymCPS Leveraging Social Network APIs for Enhancing Smartphone Apps: An Example of VoIP App 1219 Shuchih Ernest Chang and Pin-Fan Lee Extending and Recompiling AADL for CPS Modeling 1225 Zhonghao Sun and Xingshe Zhou A Novel Frequency Hopping Scheme Based on Cognitive Radio for Aircraft 1231 Lei Zhidong and Zhang Xiaolin Modeling Effects of Physical Factors on Controller Area  Network in Cyber-physical Systems 1237 Bo Shen, Xingshe Zhou, and Ru Wang Detecting Flu Transmission by Social Sensor in China 1242 Jiangmiao Huang, Hui Zhao, and Jie Zhang A Smart Cyber-physical Systems-Based Solution for Pest Control \(Work in Progress 1248 Farhad Mehdipour, Krishna Chaitanya Nunna, and Kazuaki J. Murakami 
xix 


A Hybrid Content-Based Filtering Approach: Recommending Microbloggers for Web-Based Communities 1254 Kejun Dong and Yi Shen Just-in-Time Social Cloud: Computational Social Platform to Guide People's Just-in-Time Decisions 1259 Kwan Hong Lee, Andrew Lippman, Alex S. Pentland, and Pattie Maes Towards a Hybrid Approach of Primitive Cognitive Network Process and K-Means Clustering for Social Network Analysis 1267 Chun Guan and Kevin Kam Fung Yuen A Compressive Sensing Based Secure Data Transmission Scheme 1272 Guorui Li and Ying Wang An IO Optimized Data Access Method in Distributed Key-Value Storage System 1276 Li Chao, Wu Guangjun, Wang Shupeng, and Li Yixi W e  K n o w  W h a t  Y o u  A r e A  U s e r  C l a s s i f i c a t i o n  B a s e d  o n  M o b i l e  D a t a                                                             1 2 8 2 Duan Hu, Fei Sun, Lai Tu, and Benxiong Huang E f f i c i e n t  S e c u r i t y  S o l u t i o n  f o r  I n f o r m a t i o n c e n t r i c  N e t w o r k i n g                                                                          1 2 9 0 Hasen Nicanfar, Peyman TalebiFard, Chunsheng Zhu, and Victor C.M. Leung Towards Dynamic Resource Provisioning for Traffic Mining Service Cloud 1296 Jianjun Yu and Tongyu Zhu Leading Users Detecting Model in Professional Community Question Answering Services 1302 Siqi Song, Ye Tian, Wenwen Han, Xirong Que, and Wendong Wang A Moving Foreground Expansion Method Based on the Gaussian Distribution 1308 Yanhua Li, Wei Li, and Qi Xiang A Hybrid Emotion Recognition on Android Smart Phones 1313 Weishan Zhang, Xin Meng, Qinghua Lu, Yuan Rao, and Jiehan Zhou Multi-view Approach for Modeling Aerospace Cyber-physical Systems 1319 Lichen Zhang EigenCrime: An Algorithm for Criminal Network Mining Based on Trusted Computing 1325 Shujun Cai, Jiangnan Xia, Keyi Sun, and Zhen Wang A Task-Attribute-Based Workflow Access Control Model 1330 Yi Liu, Ke Xu, and Junde Song GreenBicycling: A Smartphone-Based Public Bicycle Sharing System for Healthy Life 1335 Yifan Zhao, Longbiao Chen, Chao Teng, Shijian Li, and Gang Pan Multi-step Sensor Scheduling for Energy-Efficient High-Accuracy Collaborative Target Tracking in Wireless Sensor Networks 1341 Biao Song, Wendong Xiao, and Zhaohui Zhang xx  


International Workshop on Vehicular Sensor and Ad-Hoc Networks \(VeSAN 2013 Toward Optimal Additive Noise Distribution for Privacy Protection in Mobile Statistics Aggregation 1346 Hao Zhang, Yonggang Wen, Honggang Hu, and Nenghai Yu Performance Analysis of a Hierarchical Structured VANET 1352 Wanting Zhu, Qing Zhang, and A.C.M. Fong Multilevel Cluster-Based Information Fusion in Vehicle Ad Hoc Networks 1357 Weicheng Zhao, Linjuan Zhang, Wanting Zhu, and Yanqi Zhao PSFCS: Robust Emergency Communications Supporting High-Mobility Based on WiMAX MMR Networks 1363 Wen-Kang Jia, Chia-Yao Chen, and Yaw-Chung Chen International Workshop on Next Topics for Green Communications and Computing \(GreenCom-Next 2013 On Energy Efficiency Data Access and Backup for Cloud Computing Networks 1369 Yeanf-Fu Wen A Model to Analyze the Energy Savings of Base Station Sleep Mode in LTE HetNets 1375 Paolo Dini, Marco Miozzo, Nicola Bui, and Nicola Baldo Soft Timing Synchronization Algorithm for CPM Signals 1381 Xiangchao Zhou, Rui Xue, Danfeng Zhao, and Fu Fang Secure Framework for the Return Routability Procedure in MIPv6 1386 Faisal Al Hawi, Chan Yeob Yeun, and Khaled Salah An Energy Efficient Cache Design for Multi-core Processors 1392 Cao Xiangrong and Zhang Xiaolin Analysis Method of Energy for C Source Program and Its Application 1397 Yang Yuechuan, Zeng Guosun, Ding Chunling, and Wang Wei Simulating Stochastic Activation Functions 1403 Hanno Hildmann, Sebastien Nicolas, and Fabrice Saffre Power-Efficient Virtual Machine Placement and Migration in Data Centers 1408 Shuo Fang, Renuga Kanagavelu, Bu-Sung Lee, Chuan Heng Foh, and Khin Mi Mi Aung Probabilistic Modeling during Power Estimation for Mixed Polarity Reed-Muller Logic Circuits 1414 Xiang Wang, Ying Lu, Yi Zhang, Zexi Zhao, Tongsheng Xia, Jishun Cui, and Limin Xiao Ant-Colony Based Heuristics to Minimize Power and Delay in the Internet 1419 Shankar Raman, Gaurav Raina, Hanno Hildmann, and Fabrice Saffre Materialization of a Comprehensive Digital City with CityMaker and ArcGIS 1424 Mingzhu Deng, Guangming Liu, and Yuran Hu 
xxi 


iThings/CPSCom 2013 Workshops International Workshop on Biometric Recognition and Its Applications \(BR&A 2013 A New Method of Designing High-Power Electroplating Power Supply 1429 Yihong He and Shuiyong Yu The Study of Fusion Image Block and Sparse Representation Classification in Disguised Face Recognition 1434 Gan Junying, Liu Dan, Zeng Junying, and Tian fengxia SMT Components Model Inspection Based on Characters Image Matching and Verification 1438 Bing Luo, Yuehua Gao, Zhongyu Sun, and Sufang Zhao The Manipulation of Chaotic Synchronization Quality Based on VCSEL with Optical Feedback 1442 Dongzhou Zhong Fast Wavelet Thresholding Algorithms for Face Image Inpainting 1445 Yibin Yu, Jinguo Cao, Yaofang Tang, and JunYing Gan Multispectral Palmprint Recognition Using Score-Level Fusion 1450 Yibin Yu, Yaofang Tang, Jinguo Cao, and JunYing Gan Encryption Node Design in Internet of Things Based on Fingerprint Features and CC2530 1454 Zeng Bohan, Wang Xu, Zhou Kaili, and Zhao Xueyuan Facial Expression Recognition Based on Local Binary Pattern and Gradient Directional Pattern 1458 Wenjin Chu Design of Intelligent Inducing Switch 1463 Yang Zhao and Fengxia Tian International Workshop on Cyber Physical Society Information Processing \(CPSIP 2013 Identify Online Fraudster with Extended Cellular Automata 1467 Ji Li and Yueliang Xiao Harmonization of Cyber-physical Society 1473 Alexander Abramovich and Rashid Khunagov Influence Analyzing and Modeling of High Frequency Forwarding Microblogs 1479 Shangbo Zhou, Wei Wang, Jie Luo, Li Wan, and Yao Zhang Requirement Specification for Transportation Cyber Physical Systems 1486 Lichen Zhang Integration-Oriented Modeling of Cyber-physical Interactive Process 1492 Tao Guan and Gang Yang 
xxii 


Web-of-Things Framework for WeChat 1496 Huang Yitong, Lai Xiaozheng, Dai Bingpei, and Chen Qinyi International Workshop on Cyberspace Security and Information Countermeasures \(CS&IC 2013 Simulation Experiment Research of Cyberspace Confront Effectiveness Evaluation 1501 Yu Zhang, Chen Shansong, and Xie Deping Technology of Situation Awareness Based on Radar Network in Cyberspace 1505 Xun Yang, Wei Shan, and Liu Jia Space Information Security and Cyberspace Defense Technology 1509 Su Kang, Dong Qiaozhong, and Zhu WeiQiang International Workshop on Connected Vehicles and Vehicular Networks \(CV2N 2013 Real-Time Vehicle Route Guidance Based on Connected Vehicles 1512 Daxin Tian, Yong Yuan, Jianshan Zhou, Yunpeng Wang, Guangquan Lu, and Haiying Xia A Novel Two-Timer-Based Broadcast Routing Algorithm for Vehicular Ad-Hoc Networks 1518 Song Fang and Tao Luo Research of Vehicle Counting Based on DBSCAN in Video Analysis 1523 Dayang Sun, Binbin Li, and Zhihong Qian A Self-Adaptive V2V Communication System with DSRC 1528 Daxin Tian, Hao Luo, Jianshan Zhou, Yunpeng Wang, Guizhen Yu, and HaiyingXia International Workshop on Electromagnetic Characteristics of Target and Environment \(ECTE 2013 SAR Segmentation and Recognition Based SCM 1533 Liping Hu and Xiaoyu Xing EM Scattering Analysis of Complex Target Coated with Plasma by Conformal SO-FDTD Method 1538 Hao-Chuan Deng, Xiao Wei, and Hong-Cheng Yin SAR RAW Data Simulation by Electromagnetic Computation in Frequency Domain 1542 Xupu Geng, Chunzhu Dong, Hongcheng Yin, and Guoqing Zhu Precession and Structural Parameters Estimation of the Cone-Shaped Target Based on the Profile Length 1545 Jing Huang, Chao Ning, and Zhihe Xiao Terahertz Gaussian Beam Scattering by a Conducting Sphere 1550 Liangsheng Li and Hongcheng Yin Reshaped Window Iterative Super-Resolution Imaging Algorithm 1554 Sheng Li, Liangsheng Li, and Hongcheng Yin Study on the influential factors of radar target RCS in resonance region 1557 Liang Man, Xiao Wei, and Zhihe Xiao 
xxiii 


A New Method for Estimating Radar Profile Length of a Cone Target 1561 Chao Ning, Jing Huang, Chao Gao, and Yong Zhu The Feature Extraction of Time-Frequency Image Based on Frequency Diversity 1566 Jing Sheng, Zhihe Xiao, and Jing Huang Characteristic Study of Target Micro-motion Based on the Wavelet Analysis 1571 Yuguang Tian, Chao Ning, and Xiangyang Zhang The Decorrelation Time Accumulation Restrain Method for Sea Clutter Spike 1576 Xujin Yuan, Yong Chen, Chao Wang, and Hongcheng Yin The Radar Echo Simulation of Moving Targets Based on HRRP 1580 Tao Zhao, Chun-Zhu Dong, Hong-Mei Ren, and Hong-Cheng Yin A Novel Method for Generating Planar Wave Based on Dielectric Gratings 1584 Dai Fei, Cheng Qiping, and Yue Hui Application of Terahertz Technology on RCS Measurement 1587 Wang Xiaobing, Huang Xin, Wu Yajun, Dai Fei, and Li Li Typical Target RCS Reduction Using Structural Radar Absorbing Material 1591 Yongfeng Wang and Kainan Qi International Workshop on Electromagnetic Detection and Identification \(EDI 2013 Error Analysis in Calculating RCS Using GRECO Method 1594 Zhi Hua Cheng, Yong Jun Xie, Xue Mei Wang, Yu Ru Mao, and Xiao Dong Ma Placement Optimization of Vehicular Antenna Using Particle Swarm Optimization 1597 Yu-Ru Mao, Yong-Jun Xie, Zhi-Hua Cheng, Xue-Mei Wang, and Xiao-Dong Ma A Novel Loss Compensated Multipath Power Divider for Frequency Synthesizer 1600 Tongfei Yu, Jungang Miao, Yan Xie, Baohua Yang, and Xianxun Yao An Approach for Extrapolating Far Field Radar Cross-Section from Near Field Measurement 1604 Gao Chao, Yuan Xiaofeng, and Bai Yang Implementation of the Digital Correlation Unit for Synthetic Aperture Interferometric Radiometer 1608 Xianxun Yao, Cheng Zheng, Baohua Yang, Jin Zhang, and Jungang Miao Design Procedures and Considerations of FOD Detection Millimeter-Wave FMCW Radar 1612 Jin Zhang, Cheng Zheng, Baohua Yang, Xianxun Yao, and Jungang Miao Exact Design of a Ka Band H-Plane Inductance Diaphragm Waveguide Band-Pass Filter 1618 Yong Fu, Baohua Yang, and Jungang Miao The Compact Microstrip Bandstop Filter Using Equal Width Open Stub 1622 Bao-Hua Yang, Ghulam Mehdi, Jin Zhang, Tong-fei Yu, Xian-xun Yao, and Jungang Miao 
xxiv 


The Design and Simulation of Hardware Architecture of the Fast and On-Site Assessing System of Scattering Characteristics of Stealth Aircraft Based on Simulink 1626 Hong Tao and Song Dan Second International Workshop on Engineering Pervasive Service Systems \(EPS 2013 Food Image Recognition Using Pervasive Cloud Computing 1631 Pengcheng Duan, Wenshan Wang, Weishan Zhang, Faming Gong, Peiying Zhang and Yuan Rao An Approach of Semantic Similarity by Combining HowNet and Cilin 1638 Peiying Zhang, Zhanshan Zhang, and Weishan Zhang Reconstruction of 3D Maps for 2D Satellite Images 1644 Lianzhang Zhu, Xuexing Zheng, and Pengfei Li Component-Based Cloud Computing Service Architecture for Measurement System 1650 Chao Liu, Qingsong Yu, Tianao Zhang, and Zhongwen Guo Second International Workshop on Energy and Wireless Sensors  \(e-WiSe 2013 Design Optimization of Electromagnetic MEMS Energy Harvester with Serpentine Coil 1656 Yuji Tanaka, Takayuki Fujita, Tatsuya Kotoge, Kohei Yamaguchi, Koji Sonoda Kensuke Kanda, and Kazusuke Maenaka Experimental Study of a Passive Impedance Matching Interface Based on a Centimeter-Size High Inductance Coil for Practically Enhanced Piezoelectric Energy Harvester Performance at Low Frequency 1659 Alessandro Giuliano and Meiling Zhu SPICE Modeling of Piezoelectric Energy Harvesting Device Utilizing Stress Influence 1662 Koji Sonoda, Takayuki Fujita, Kensuke Kanda, Kazusuke Maenaka, Hidenori Katsumura Masaya Tamura, and Hiroshi Kagata Modeling, Validation and Design Analyses of a Piezoelectric Cymbal Transducer for Non-resonant Energy Harvesting 1665 Alice Daniels, Alessandro Giuliano, Meiling Zhu, and Ashutosh Tiwari Towards Energy Autonomy of Wireless Sensors in Aeronautics Applications SMARTER Collaborative Project 1668 Marise Bafleur and Jean-Marie Dilhac 
xxv 


International Workshop on Gas Sensors and Gas-Sensing Platforms \(GS&GSP 2013 A Novel Surface Acoustic Wave Sensor for Optical Lens Surface Dirt Detection 1673 Jiuling Liu, Minghua Liu, Wen Wang, and Shitang He Electrical Sensoring Characteristics of Pseudo-LFE Sensors with Different Single Crystals 1676 Zhitian Zhang, Chao Zhang, Wenyan Wang, Yan Liu, and Tingfeng Ma Investigation of Polymer-Coated Film Bulk Acoustic Wave Resonator for Acetone Vapor Detection 1680 Jingjing Wang and Da Chen Polyaniline-Coated Surface Acoustic Wave Sensor for Humidity Detection 1685 Xiao Xie, Wen Wang, Shitang He, Ning Mu, and Yong Pan Effect of Facets of  Fe2O3 Nanostructures on Gas-Sensing Performance 1688 Jing Wang, Xiaoman Zhang, Weihong Xu, Liang Chen, Xingjiu Huang, and Jinhuai Liu Application and Development Trend of Gas Sensing Technology Based on Absorption Spectroscopy 1692 Zhenzhen Zhao, Fengchun Tian, and Shouqiong Liu Identification of Toxic VOC Pollutants Using FAIMS 1698 Youjiang Liu, Lehua Zhang, Hongwei Wang, Xiaotian Zhang, Chilai Chen Huanqin Wang, Deyi Kong, Mario A. Chavarria, and Juergen Brugger Detection of benzene series by two-dimensional  FAIMS technique 1702 Lehua Zhang, Youjiang Liu, Hongwei Wang, Chilai Chen, Huanqin Wang, Deyi Kong Xiaotian Zhang, Mario Chavarria, and Juergen Brugger Fabrication of Prototypal Nanomechanical Resonator Based on a Single Copper Nanowire 1706 Weihong Xu and Li-Feng Ge The SAW Gas Chromatograph and Its Applications in the Public Security 1710 Shitang He, Jiuling Liu, and Minghua Liu Theory of Lamb Wave Transducers and Their Applications for Gas and Liquid Sensing 1714 Li-Feng Ge Study of the Space Station On-Orbit Leak Detection Based on the Differential Pressure Gas Sensor 1718 Wei Sun, Rongxin Yan, Lichen Sun, Donghui Meng, Zheng Li, Haitao Guo, and Wenbin Li 
xxvi 


International Workshop on Human Body Communications and Biomedical Signal Processing \(HBC&BSP 2013 Pulse-Output Monitor Genetic Circuit of Breast Cancer Testing 1722 Xiang Wang, Guangqian Yuan, Xun Wang, and Zexi Zhao Elderly Gait Analysis and Assessment Based on Body Area Network 1729 Y.D.Xuan, Z. Zhao, Z. Fang, Z.H.Xu, F.M.Sun, D.L.Chen, L.D.Du, Y.M.Qian, H.Y.Hu and L.L.Tian Combined Motion and Region-Based 3D Tracking in Active Depth Image Sequence 1734 Xingyu Wu, Xia Mao, Lijiang Chen, and Angelo Compare Characteristic Optimization of Multilayer Dielectric for the Bloch-Surface-Wave Based Sensor 1740 Shuna Li, Jiansheng Liu, Zheng Zheng, Yuhang Wan, Weijing Kong, Sun Yu, and Shuna Li Facial Expression Recognition Based on t-SNE and AdaboostM2 1744 Jizheng Yi, Xia Mao, Yuli Xue, and Angelo Compare A Design of Security Module to Protect Program Execution in Embedded System 1750 Wang Xiang, Zhao Zexi, Lu Ying, and Zhang Yi Improved P-T Algorithm Applied to a Wearable Integrated Physiological Parameters System 1756 Z.H.Xu, Z. Fang, Z. Zhao, X.X.Chen, D.L.Chen, F.M.Sun, L.D.Du, Y.M.Qian, H.Y.Hui and L.L.Tian Iterative Threshold Selection for TOA Estimation of IR-UWB System 1763 Xiang Wang, Bo Yin, Ying Lu, Bin Xu, Pei Du, and Limin Xiao A Novel Alternative Exponent-Weighted Fuzzy C-Means Algorithm 1767 Renhao Fan, Xiang Wang, and Jordi Madrenas A Wireless ZigBee Router with P-H-T Sensing for Health Monitoring 1773 Z. Fang, F. M. Sun, J. Tan, and Z. Zhao A Whole Integrated System for Detection of Neural Signal and Wireless Transmission 1779 Dang Hua, Qu Ruoyuan, Chen Zhiming, Gui Xiaoyan, and Wang Xinghua Research on the Monitoring and Controlling Model of SIP Network 1784 Liang Zhang, Zhaoxin Zhang, Xu Cui, and Dan Liu Saliency-Based Feature Learning for No-Reference Image Quality Assessment 1790 Zhang Hong, Feng Ren, and Yuan Ding A Compensated Technique for 2.5-GHz Ring-Oscillator-Based PLL used in Wireless Transmission 1795 Dang Hua, Liu Zicheng, Gui Xiaoyan, and Zhong Shunan Speech Synthesis Research Based on EGG 1799 Lijiang Chen, Xia Mao, Pengfei Wei, and Angelo Compare A Temperature Insensitive Ring Oscillator for Low Power RF Communications 1804 Pilong Yang, Tongsheng Xia, Hongge Li, and Xiang Wang 
xxvii 


Low-Noise Biopotential Recording Circuit with Correlated Timeshare Sampling 1810 Hongge Li and Weidong Cao A No-Reference Quality Metric for Blur Image 1813 Zhang Taojia, Zhang Hong, and Yuan Ding Circuit Design of Analog Front-End for Neural Signal Detection 1817 Dang Hua, Zhang Lei, Chen Zhiming, Gui Xiaoyan, and Wang Xinghua A New Pedestrian Detect Method in Crowded Scenes 1820 Hou Xin, Zhang Hong, and Yuan Ding Design and Implementation of a Circuit System for Neural Signal Detection 1825 Dang Hua, Li Xiao, Chen Zhiming, Gui Xiaoyan, Wang Xinghua, and Zhong Shunan Design and Implementation of a CMOS 1Gsps 5bit Flash ADC with Offset Calibration 1829 Li Shiwen, Dang Hua, Gao Peng, Gui Xiaoyan, Chen Zhiming, Wang Xinghua and Zhong Shunan Spike Detection Based on Fractal Dimension 1834 Zhou Jiyang, Xu Shengwei, Lin Nansen, Wang Mixia, and Cai Xinxia A GPU-Accelerated Large-Scale Music Similarity Retrieval Method 1839 Limin Xiao, Yao Zheng, Wenqi Tang, Guangchao Yao, Li Ruan, and Xiang Wang Power Spectral Analysis of Acupoint Bioelectricity 1844 Quan Zhou, Nansen Lin, Shuping Gai, Jingjing Zhang, Lu Zhang, Wentao Shi Renhuan Yu, and Xinxia Caii Compressive Sensing of Neural Action Potentials by Designing Overcomplete Dictionaries 1848 Shuai Zhou, Bowei Dai, Yin Xiang, Shengwei Xu, Bingchen Zhang, Yilin Song Mixia Wang, and Xinxia Cai CloudDVMM: Distributed Virtual Machine Monitor for Cloud Computing 1853 Li Ruan, Jinbin Peng, Limin Xiao, and Xiang Wang Metadata-Intensive I/O Performance Optimization by Merging Read/Write Requests 1859 Li Ruan, Qimeng Wu, Limin Xiao, Ke Xie, and Xiang Wang International Workshop on Machine-to-Machine Communication \(IWMMC 2013 Angle of Arrival Estimation for Passive UHF RFID Tag Backscatter Signal 1865 Meng-Chang Hua, Guo-Chen Peng, Yan-Jun Lai, and Hsin-Chin Liu Mobile IMS Integration of the Internet of Things in Ecosystem 1870 Han-Chuan Hsieh, Jiann-Liang Chen, Ing-Yi Chen, and Sy-Yen Kuo Design of Gateway for Monitoring System in IoT Networks 1876 Ji-De Huang and Han-Chuan Hsieh Dependable Architecture of RFID Middleware on Networked RFID Systems 1881 Yung-Li Hu, Wei-Bing Su, Yennun Huang, Ing-Yi Chen, and Sy-Yen Kuo 
xxviii 


The Design and Implementation of the Front-End Software for the Telemetry and Telecontrol System of Satellite 1885 Zhao Qi and Ma Li Internet of Things for Special Materials Transportation Vehicles 1891 Li Shengguang, Tan Lin, Zhu Yuanshuo, and Zhang Rucai Performance Analysis of COMPASS for the Asia-Pacific Region 1895 Hangyu Huo, Xiaolin Zhang, and Canhui Chen International Workshop on Localization Technology and Location-Based Services \(LTLS 2013 A KNN Indoor Positioning Algorithm That Is Weighted by the Membership of Fuzzy Set 1899 Jiankun Yu and Jianye Liu Building Location-Based Service Based on Social Network API: An Example of Check-In App 1904 Pin-Fan Lee and Shuchih Ernest Chang Prioritizing the Data in the Target-Tracking Wireless Sensor Networks 1910 Dan Xu, Xiaojiang Chen, Xiaoyan Yin, Lvju Wang, Hao Chen, Yuan Zhang, and Dingyi Fang DLF: Target Detection and Localization in Wireless Network 1916 Tianzhang Xing, Dingyi Fang, Xiaojiang Chen, Liqiong Chang, and Yuhui Ren Bandwidth Reservation for Target Tracking in Region-Base Wireless Sensor Networks 1922 Xiaoyan Yin, Dingyi Fang, Xiaojiang Chen, Hao Chen, and Wei Wei Fusion Estimation Based on UKF for Indoor RFID Tracking 1928 Xue-bo Jin International Workshop on New Media and Computer Vision for Smart City \(NMCV4SC 2013 Facile Analysis of Smartphone Comics 1932 Beili Qiu Research on Production of Regional Animation Style Based on Computer Graphic Rendering 1935 Jingjing Chen, Yi Lin, Kexuan Ma, and Yue Liu A Blind Demodulation Algorithm for MFSK Signals Using STFT-Radon-Wavelet Transform 1940 Zhang Guoyi, Qi Xinglong, Zhang Xuzhou, and Lin Caiyong A Novel Method to Remove Eye-Blink Artifacts Based on Correlation Using ICA 1946 Hengsong Sheng and Hongjun Tian Virtual Assembly, Maintenance and Training System Based on the Virtual - Real Fusion Technology 1949 Ning Wang and Yue Qi 
xxix 


International Workshop on Optical Characteristics and Applications \(OC&A 2013 A New Infrared Sensor Model Based on Imaging System Test Parameter 1953 Zheng Liu, Hong-xia Mao, Ying-hong Dai, and Jing-li Wu Mixed Norm-Based Image Restoration Using Neural Network 1957 Yuan-nan Xu, Jing Wang, and Yan-bing Dong Simulation and Analysis of Turbulent Optical Wavefront Based on Zernike Polynomials 1962 Yan Chen, Shu-hua Wang, Yuan-nan Xu, and Yan-bing Dong Study on the Interaction of Optical Field and Transverse Acoustic Mode in Silicon Optical Fibers 1967 Jing Wang, Yuan-nan Xu, and Yan-bing Dong Testing Technology of Infrared Point Source Target Optical Axis 1972 Yue Peng and Hao Lu Human Segmentation in Infrared Videos Using Markov Random Field 1976 Wenjia Yang, Xiaodan Xie, Zhi Chai, and Yapeng Li Third IEEE International Workshop on Sensing, Networking and Computing with Smartphones \(PhoneCom 2013 SmartProbe: A Bottleneck Capacity Estimation Tool for Smartphones 1980 Francesco Disperati, Dario Grassini, Enrico Gregori, Alessandro Improta Luciano Lenzini, Davide Pellegrino, and Nilo Redini CANDIS: Heterogenous Mobile Cloud Framework and Energy Cost-Aware Scheduling 1986 Sebastian Schildt, Felix B¸sching, Enrico Jˆrns, and Lars Wolf An Experimental Study on Wireless Magnetic Communication with Smart Phone Using a MEMS Magnetometer 1992 Jiabo Wang and Xi Chen PhoneJoule: An Energy Management System for Android-Based Smartphones 1996 Xiaojing Liu, Fangwei Ding, Jie Li, Haifeng Liu, Zhuo Yang, Juan Chen, and Feng Xia KeyGraph-Based Social Network Generation for Mobile Context Sharing 2002 Myeong-Chun Lee, Young-Seol Lee, and Sung-Bae Cho Cyber-physical Directory: A Dynamic Visualization of Social Media Data 2007 Jean-Loup Lamothe, James She, and Ming Cheung 
xxx 


International Workshop on Sensor Data Processing and Integration \(SDPI 2013 Capturing, Calculating, and Disseminating Real-Time CO2 Emissions and CO2 Flux Measurements via Twitter in a Smart City 2013 Laurie Butgereit and Alecia Nickless Freshness-Aware Sensor Mashups Based on Data Services 2018 Guiling Wang and Feng Zhang A Method of Sensor Data Services Query in Emergency Management 2024 Xin Chen, Yanbo Han, Yongshan Wei, Feng Zhang, and Yan Wen A Sensory-Data-Hosting Oriented Scheduling Strategy on Virtual Machine 2029 Xiang Li and Yong Jiang International Workshop on Software Engineering for Internet of Things-Based Applications \(SeIoTA 2013 From the Internet of Things to Trusted Apps for Things 2037 Christian Prehofer A Profile for Step Data Transmission Based on Bluetooth Low Energy 2043 Youcong Ni, Sun Cong, Zhao Ting, Peng Ye, Chunyan Wang, and Luo Zeng Exception Handling in Service-Oriented Software: A Survey 2048 Xue Tong, Ying Shi, and Wu Qing On the Application of the Internet of Things in the Field of Medical and Health Care 2053 Fang Hu, Dan Xie, and Shaowu Shen Hierarchical RBAC Model with Alpha Factor in the Water Supply Pipeline Network Information System 2059 Wu Ting, Yuan Tianliang, and Yu Long Modeling Concern of Online Auction System with SA-CDL 2063 Linlin Zhang, Kai Zhao, Zhenhong Jia, and Youcong Ni The Research on Interactive Exhibition Technology of Digital Museum Resources 2067 Ning Wang and Xukun Shen International Workshop on Sensor Networks and Data Communications Security \(SNDCS 2013 Integrity Protection and Attestation of Security Critical Executions on Virtualized Platform in Cloud Computing Environment 2071 Bingyu Zou and Huanguo Zhang A Fuzzing Framework Based on Symbolic Execution and Combinatorial Testing 2076 Jian Yang, Huanguo Zhang, and Jianming Fu Dynamic Knowledge Repository-Based Security Auxiliary System of User Behavior 2081 Fan Yang, Jinxia Wu, Shanyu Tang, and Huanguo Zhang 
xxxi 


Research on a New Mathematic Description for Fingerprint Identification 2085 Zhao Ma, Shanyu Tang, Liping Zhang, Linchen Yu, and Sifa Zhang Robust and Efficient Authentication Protocol Based on Elliptic Curve Cryptography for Smart Grids 2089 Liping Zhang, Shanyu Tang, Yijing Jiang, and Zhao Ma De Bruijn Graph-Based Whole-Genomic Sequence Assembly Algorithms and Applications 2094 Xiaojun Kang, Shanyu Tang, Yongge Ma, Ruixiang Liu, and Yaping Wang Review of Digital Watermarking for 2D-Vector Map 2098 Jinxia Wu, Fan Yang, and Chonglong Wu Real-Time Covert VoIP Communications over Smart Grids by Using AES-Based Audio Steganography 2102 Yijing Jiang, Liping Zhang, Shanyu Tang, and Zhangbing Zhou Improving Performance of E-Government System from the User Perspective 2108 Hang Zhang, Sifa Zhang, Muzhou Xiong, and Shanyu Tang ECC-Based Authenticated Key Agreement Protocol with Privacy Protection for VoIP Communications 2114 Shaohui Zhu, Fan Yang, Liping Zhang, Shanyu Tang, and J. Li Establishment of Security Levels in Trusted Cloud Computing Platforms 2119 Fan Yang, Li Pan, Muzhou Xiong, and Shanyu Tang Efficient Divisible E-Cash in the Standard Model 2123 Jiangxiao Zhang, Zhoujun Li, Hua Guo, and Chang Xu International Workshop on Secure Smart Objects \(SSO 2013 Towards a Modular and Lightweight Model for Android Development Platforms 2129 Mussab Zneika, Hasan Loulou, Fatiha Houacine, and Samia Bouzefrane Towards a Secure Identity Management in Smartphone Environments 2133 Maryline Laurent, Samia Bouzefrane, and Christophe Kiennert Third International Workshop on Trends and Future of Web Science \(TFWS 2013 Extracting Protein Terminologies in Literatures 2136 Jangwon Gim, Donald J. Kim, Myunggwon Hwang, Sa-kwang Song, Do-Heon Jeong and Hanmin Jung Author Name Disambiguation in Technology Trend Analysis Using SVM and Random Forests and Novel Topic Based Features 2141 Sebastian Kastner, Sung-Pil Choi, and Hanmin Jung Research on Quantum-Bit Error Correction Coding for Smart Grid Substation 2145 Xin Miao and Xi Chen 
xxxii 


Fourth International Workshop on Universal User Modeling and Applications \(UUMA 2013 The Research of MEICSP Model through a REST Web Service 2148 Zhilei Huang, Lingyu Xu, and Yang Liu A Text Association Rules Mining Method Based on Concept Algebra 2153 Feiyue Ye, Jiannan Xiong, and Lingyu Xu Research and Application of the Intelligent Flow 2159 Yang Liu, Lingyu Xu, Liang Chen, and Fei Zhong Application of Hybrid MPI+TBB Parallel Programming Model for Traveling Salesman Problem 2164 Jinke Zhu and Qing Li Data Deduplication Cluster Based on Similarity-Locality Approach 2168 Xingyu Zhang and Jian Zhang The Application of the Knowledge Representation Based on Concept Algebra in the Knowledge Management System of Petroleum Enterprise 2173 Hongjie Duan, Shanpeng Wu, and Feiyue Ye A New Reliable Hybrid Algorithm for Shortening the Expanding Range of Interval 2178 Cheng Chen and Yongmei Lei A Novel Data Encryption in HDFS 2183 Thanh Cuong Nguyen, Wenfeng Shen, Jiwei Jiang, and Weimin Xu The Dynamically Efficient Mechanism of HDFS Data Prefetching 2188 Shaochun Wu, Guobing Zou, Honghao Zhu, Xiang Shuai, Liang Chen, and Bofeng Zhang Multi-granularity Recommendation Based on Ontology User Model 2194 Jianxing Zheng, Bofeng Zhang, and Guobing Zou Friend Recommendation Based on the Similarity of Micro-blog User Model 2200 Fan Tang, Bofeng Zhang, Jianxing Zheng, and Yajun Gu The Research of Image Detail Enhancement Algorithm with Laplacian Pyramid 2205 Yanwen Teng, Fuyan Liu, and Ruoyu Wu Information Gain with Weight Based Decision Tree for the Employment Forecasting of Undergraduates 2210 Yue Liu, Lingjie Hu, Fei Yan, and Bofeng Zhang A User Model-Based Resource Scheduling Framework 2214 Guannan Hu, Wenhao Zhu, Kangkang Niu, and Wu Zhang A Novel Method of Adopting Graph Reduction for Resource Management in Parallel Computing Model 2218 Shen Chao and Tong Weiqin Sentiment Classification for Topical Chinese Microblog Based on Sentences' Relations 2221 Kang Wu, Bofeng Zhang, Jianxing Zheng, and Haidong Yao An Anomaly Intrusion Detection Method Based on PageRank Algorithm 2226 Quan Qian, Jianyu Li, Jing Cai, Rui Zhang, and Mingjun Xin 
xxxiii 


Distributed File System and Classification for Small Images 2231 Shaojian Zhuo, Xing Wu, Wu Zhang, Xing Wu, and Wanchun Dou The Possibility of Normal Gait Analysis Based on a Smart Phone for Healthcare 2235 Susu Jiang, Bofeng Zhang, Guobing Zou, and Daming Wei IoT/CPS Demo and Exhibition Mo-Fi: Discovering Human Presence Activity with Smartphones using Non-intrusive Wi-Fi Monitors 2241 Weijun Qin, Hongsong Zhu, Jiadi Zhang, and Bo Li Towards a Pervasive Cloud Computing Based Food Image Recognition 2243 Wenshan Wang, Pengcheng Duan, Weishan Zhang, Faming Gong, Peiying Zhang and Yuan Rao Wireless IoT Platform Based on SDR Technology 2245 Yong Hua Lin, Qing Wang, Jun Song Wang, Ling Shao, and Jianbin Tang Join the Workshop Better with Telepresence Capturer 2247 Pin Tao, Lixin Feng, and Minxi Yu InSciTe Adaptive: R&D Decision Support System for Strategic Foresight 2249 Jangwon Gim, Do-Heon Jeong, Myunggwon Hwang, Sung-Pil Choi, Donald J. Kim Seungwoo Lee, Sa-kwang Song, and Hanmin Jung Author Index 2251 
xxxiv 


FrA6 \226 Privacy and Big Data Visitor Center   Chair Oh, Sewoong University of Illinois  Organizer\(s Duchi, John University of California, Berkeley  Oh, Sewoong University of Illinois Viswanath, Pramod University of Illinois  Local Privacy and Statistical Minimax Rates 1592  Duchi, John C University of California, Berkeley  Jordan, Michael I University of California, Berkeley  Wainwright, Martin J University of California, Berkeley  Differential Privacy, Equilibrium, and Efficient Allocation of Resources 1593  Roth, Aaron University of Pennsylvania  A Bayesian Method for Matching Tw o Similar Graphs without Seeds 1598  Pedarsani, Pedram 311cole Polytechnique F\351d\351rale de Lausanne  Figueiredo, Daniel R Federal University of Rio de Janeiro  Grossglauser, Matthias 311cole Polytechnique F\351d\351rale de Lausanne  Privacy as a Coordination Game 1608  Ghosh, Arpita Cornell University  Ligett, Katrina California Institute of Technology  De-Anonymizing Private Data by Matching Statistics 1616  Unnikrishnan, Jayakrishnan 311cole Polytechnique F\351d\351rale de Lausanne  Movahedi Naini, Farid 311cole Polytechnique F\351d\351rale de Lausanne  Robust Subspace Iteration and Privacy-Preserving Spectral Analysis 1624  Hardt, Moritz IBM Research Almaden  Privacy-Utility Tradeoff und er Statistical Uncertainty 1627  Makhdoumi, Ali Massachusetts Institute of Technology  Fawaz, Nadia Technicolor   


Copyright © 2009 Boeing. All rights reserved Advanced Arrival Procedures with Active Abatement Potentials   9/23/10  32 Backup Slides 


Copyright © 2009 Boeing. All rights reserved  Initial Approach Initial Investigations  Apache Solr/Lucene  Data Warehouse Evaluate Hadoop in the future 


Copyright © 2009 Boeing. All rights reserved  Using SOLR Uncompress Track Information Messages To use with Solr  Transforming track messages from their  original schema to Solr required building a ìkey, valueî list using an XSTL  Queries made against this list of ìkey, valueî pairs Transformation Process  One day of data ~ 4.5 hours Once transformation complete search/query performance very good Geo spatial queries using  unique query language 


Copyright © 2009 Boeing. All rights reserved  Representation Aviation data is frequently represented in more than one form 


