Web Services Monitoring: An Initial Case Study on the Tools Perspective Aimilios Chourmouziadis Centre of Communications and Systems Research University of Surrey Guildford, United Kingdom A.chourmouziadis@surrey.ac.uk George Pavlou Centre of Communications and Systems Research University of Surrey Guildford, United Kingdom G.Pavlou@surrey.ac.uk   Abstract Web Services are an XML-based technology that has been recently viewed as capable of being used for network management. An aspect of WS-based management is monitoring Monitoring is concerned with the collection of management data 
reflecting the status of a manage d system. WS-Based monitoring has to be performed efficiently reducing machine and network resource consumption since in such systems latency, memory and traffic overhead is increased by using XML tags to describe data This is a big challenge that requires sophisticated mechanisms to retrieve data, such as bulk or selective retrieval to be employed One technology suggested to address this goal is the XML Path Language. Still XPath as a filtering tool raised a lot of concerns in the NetConf mailing list, about its scalability. Based on these concerns a parser has been developed by the authors to also 
address data retrieval in network management. This paper is an initial scalability study on these tools to identify potential problems that will need further investigation Keywords: WS, XML, XML Path, Monitoring, Event Reporting I   I NTRODUCTION  The growing use of the eXtensible Markup Language XML\ for data representation along with the development of many XML-based technologies has spurred research in many fields. One such technology is Web Services \(WS\ whose promise for application integration interoperability etc. has lead researchers to consider it for network management 
An aspect of using WS for network management is monitoring. Monitoring usually involves retrieving data from a managed system by requesting for it and receiving the response on the same channel the request was sent from \(pull synchronous invocation style For WS-based monitoring an efficient way to retrieve management data is required. This is important since management data represented in verbose XML documents and tags, increase network resource overhead of WS-based management operations.  Therefore tools to process construct or manipulate XML documents are re quired so as to be able to extract data efficiently and reduce the extra overhead 
Two of the industryês options for processing and querying XML documents are the XML Path \(XPath\ Language v. 1.0 1 a n d 2  0  2    T h o ugh t h e s e t w o to o l s we r e  no t d e ve lo p e d implicitly for network management information retrieval, they can still be used to address this domain Network management operations though, require keeping resource usage, latency and traffic overhead low.  Therefore tools that may take into account the network management goals could also be developed One such tool is a parser developed and presented by the authors in T h e pars er i s  built on Javaês regular expression engine, allowing extraction 
of management data using queries to perform bulk and selective operations on WS interfaces exposing these data This paper is an initlal scalability study of the perfomance of these tools to identify potential problems needing further investigation The remainder of this paper is structured as follows. In section II, some details of the tools whose latency performance we will be assessing for WS-based monitoring are going to be provided.  Section III analyzes a management information retrieval scenario of a QoS-enabled Traffic Engineered \(TE\etwork based on which these three technologies would be compared upon. Section IV explains the queries that need to be performed with each tool for the 
previous scenario. In Section V an inital comparison of these three tools in terms of latency is presented to identify potential toolês problems. Finally, section VI presents our conclusions II  I NFORMATION R ETRIEVAL T OOLS  A  XPath 1.0 XPath version 1.0 [1 an d 2 0 [2  a r e W 3 C  can di dat e  recommendations in 1999 and 2005. They took their name from the path notation syntax with slashes \(/\ they use to control the selection of specific portions of an XML document As already implied, XPathês 1.0 main use is to locate elements in an XML document. A secondary use of it is to perform operations on data \(Numeric, String, Boolean 
XPath 1.0 is a subset of its successor and has limited capabilities compared to v2. XPath 1.0 is not a programming language and has to be embedded in a host language to be used Some of the shortcomings of XPath1 compared to its predecessor are: \(a\ a limited number of supported functions b\ry simple data model \(c\t taking advantage of processors data-typing capabilities and \(e\ has simple validation and error management capabilities 827 978-1-4244-2066-7/08/$25.00 ©2008 IEEE 


The most important shortcoming of XPath1 compared to its predecessor though is expressiveness. This allows the latter to form more flexible queries and thus search an XML document to find specific nodes more effectively. Though XPathês2 functionality has increased, so has its memory requirements Due to its size and complexity, XPath 2.0 may require more long term memory than XPath1 XPath 1 and 2 though include more than enough, and even more than required, functionality to be able to address the WSbased management requirements for monitoring. Still the luck of functionality and expressiveness of XPath 1.0 on one side and the heavier memory requirements and complexity XPath 2 has on the other side may have an impact on latency, traffic and memory footprint. This paper is an initial performance study of these tools on latency, to identify potential problems that may opt us to perform further investigations B  Custom based Tool The development of a custom based tool for retrieving management data could in theory address management goals.more efficiently Since efficient retrieval for monitoring at the SOAP level is not an option as more data than required would have to be retrieved, en coded, processed or filtered and since depending heavily on XML parser for data processing may be a heavy solution for management tasks as large documents may need to be searched or loaded into memory the parser in w a s dev e l opped t o a o r k in t h e appl i cat ion  level \(b\ process raw data for selective or bulk retrieval \(c\ use an XML parser to only send response to queries in XML format over SOAP.  More parser details are given in III  M ANAGEMENT I NFORMATION R ETRIEVAL S CENARIO F OR C OMPARING T OOLS P ERFORMANCE  A  Quality of Service QoS\  Management Providing QoS in a single or across multiple domains is a widely researched topic. Currently QoS is provided on the basis of Service Level Agreements \(SLAs\hese are a set of terms that clients and service providers have to respect when using or providing a service.  The technical part of an SLA is a Service Level Specification \(SLS and it represents the means to quantify QoS services [5  I P Dif f e r e ntiated Ser v ices  4   DiffServ\ is considered as th e most prominent framework for providing QoS-based services and one of the means to support it is over Multi-Protocol Label Switching \(MPLS\ networks Monitoring of the network status and its resources is an essential process so as to ensure that a QoS networkês operation will not be compromised. To guarantee the latter Traffic Engineering \(TE\ed. TE requires suitable scalable monitoring systems for the collection of various data in order to ensure the networkês smooth operation. This constitutes a significant challenge in QoS-enabled networks B  Data Retrieval for QoS Management with each tool Previous examples of research in monitoring has been performed in the TEQUILA h e CA DEN U S 7], an d t h e  ENTHRONE frameworks [8  A l l th e s e  f r am ew o r k s r e ly  o n  their monitoring systems that capture their network state in order to offer QoS guarantees to their clients. The monitoring systems used for data collection in these frameworks are mostly based on the Manager-Agent paradigm In the scenario we will presen t later on, measurements at the LSP, or SLS level have to be performed. For this reason we have selected two of SNMPês MPLS MIBs to represent management data. These are the MPLS Label Switching Router \(LSR d t h e MP L S  For w ardi n g Equ i v a lence Class to Next Hop Label Forwarding Entry \(FEC-To-NHLFE  T h e f o r m er MIB is  u s ed t o perf or m PHB a n d LS P  measurements and the latter for SLS measurements Having the MPLS MIBs as the management data source WS equivalent interfaces exposing the same management data were built and deployed for all tools. Both the custom parser and XPath are designed to be used as side tools by WSs exposing management data For XPath 1.and 2 each WS allows three views to its data by maintaining them in XML documents. The views are: \(a\ a single instance data view \(b\a multiple-instance data view \(c both single and multiple instance data view. The process to retrieve data with XPath 1&2 is based on the manager-agent paradigm. The manager after selecting the appropriate method depending on the view of the data it wants to have, sends a number of XPath queries to the agent. At the agent, the WS method that is accessed by the manager extracts all the XPath queries and uses its XPath instance to analyze them and access the XML documentsê data it has view upon. After the required data are selected the agent sends the response to the manager in an XML document format For the custom based tool each WS allows three views to its raw data \(a\imple structures view \(b\plex structures view \(c\ all data view. The process to retrieve data with the custom based parser is similar to XPath and is also based on the manager agent paradigm. The only main difference in this case is that the custom based pa rser processes raw data.  For all three tools, bulk and selective retrieval is supported by queries that are interpreted by the instances of each tool used in each WS C  Information Retrieval Scenario In the management scenario we will be using in section V to identify potential problems that will need further investigation for each tool, we assume that the interface of a router of an MPLS network providing QoS-based services fails. When this occurs the manager is notified of this event On receiving this event the manager performs queries so as to find out the LSPs and SLSs affected by the failing interface and take appropriate actions IV  S CENARIO Q UERIES  For an entity like a manager to determine with any tool the affected LSPs and SLSs for the scenario in the previous sections three queries must be sent to the entity hosting the management information such as an agent. These queries sent from the manager to the agent supervising the router whose 828 


interface failed perform the following: \(a Determine the interface indices of the LSPs associated with the failing interface, \(b these indices to determine the affected LSPs \(c Determine the affected SLSs using the LSP IDs from step b. The relevant queries for XPath 2&1 and the parser are given in Figs 1, 2 and 3 respectively A  XPath 1.0 and 2.0 queries In XPath the most common perception that people have about an XML document is that of a tree of nodes. There are various types of nodes and they share various types of relationships More details are given in Selecting nodes in XPath is performed with a series of path expressions most common of which are given in Table 1.These expressions are used to navigate the nodes and the relationships they share.  Looking at the scenario XPath 2&1 queries in Figs 1&2 respectively, it can be seen that XPath1 queries are more verbose than their XPath2 counterparts. This occurs, because though XPath 1.0 has most mathematical and logical operators, XPat h 2 is richer in logical expressions and functions. This allows the latter to be more expressive. For example though XPath1 allows expressions such as \(a|b|c\/d/e making use of parentheses for grouping operations, it does not allow expressions such as /a/b/\(c |d | e\ath 2.0 supports parentheses usage anywhere in the path expression and allows us to perform sufficiently less filtering operations \(operator   d search t h e docum e n t  m o re eff ecti v el y  f o r m e r g i n g operations \(operator è|ê\ in addition to less verbose queries Fig 1&2\. This may mean performance penalties for XPath1 TABLE 1 Path expression in XPath for selecting nodes  Nodename Selects all nodes after this node  Selects nodes having as start point root node  Selects nodes from the current node that match the selection no matter where they are  Selects the current node  Select the parent of the current node  Selects attributes from a node  Selects any element node   F i n d a no d e t h at con t ai n s a sp eci f i c val u e    Fig. 1 XPath 2.0 queries B  Custom based Parser The custom based parser in a s bu i l t t o su pport bu l k  and selective retrieval from WSs that expose management Fig. 2 XPath 1.0 QoS scenario queries data. Thus, the parser was built to allow the user to select the WS\(s\ to retrieve data from and also to define specific data to retrieve from each WS. This is supported by appropriate qu qu er y  h a s a special f u n c tio n a lit y  T h ere are  four types of queries each of which is use to retrieve specific data from different data structures. More details are given in 3 The fact that there are only 4 types of queries and a small number of operators supported by the parser means that the latter has less functi onality and can not be as expressive as XPath 1&2. On the other hand limiting functionality can help keep the grammar of the parser simpler, less verbose, easier to learn and keep latency consumption overhead low Examples of the custom parser queries equivalent to their XPath counterparts in Fig 1&.2 are given in Fig. 3  Fig. 3 Custom based parser queries  Comparing the queries in Figs 1, 2 and 3 it can be seen that the row identifiers of each SNMP table row entry are also retrieved with each query. Using the custom parser this is performed by default since the SNMP information model mandates this so as to be able to distinguish table row entries This increases latency overhead and thus it is also performed for XPath implementations to keep things for measurements on the same terms.  All querie s allow us to check the latency overhead performance of each tool for performing merging bulk retrieval\ and filtering operations of varied complexity V  E VALUATION  A  System Setup for measurements For the evaluation aspects of our scenario the MPLS LSR and FEC-to-NHLFE MIBs are exposed as WS interfaces.. The Apache Axis 1.4 SOAP toolkit is used to deploy WS interfaces using a Document/literal encoding style. For XPath 829 


1.0 functionality JAXP 1.3 is used. XPath 2.0 is supported by SAXON 8.9. Javaês 1.5.6 regex engine is used for the parser Both XPath implementations come from respected bodies are very mature and fully conformant to standards. To our knowledge there are no other java based or different language based tools that meet all these requirements.  Latency measurements were performed using Javaês currentTimeMillis\(\ function by averaging on 10 samples. The manager and agent were deployed on a 1000MHz/256MB RAM and 466MHz/192MB RAM machine respectively, thus simulating a lower end system for the agent. Both machines ran Red-hat Linux 7.3 B  Measurements The measurements we will analyze in this section involve traffic overhead for the QoSbased scenario presented in section III-C to identify if there can be potential scalability problems with any of the used tools which will signify whether a deeper investigation needs to be performed For assessing each tool performance for our QoS scenario the ingress router is configured to have 30 LSPs to simulate a small QoS network each of which is assigned to a different customer. The reason behind assi gning a different customer to each LSP is to keep things si mple with respect to validity checks on the data returned after a query. A further assumption in this experiment is the number of LSPs & SLSs affected by the failing interface, which is six. This seems like a plausible number for small networks although an optimal number is difficult to identify. This main reason behind this selection though is to use a plausible number of   filtering operations in each tool query to check for potential issues  Parser_Query1_30LSPs Parser_Query2_30LSPs Parser_Query3_30LSPs Parser_Total_30LSPs XPath1.0_Query2_30LSPs XPath1.0_Query1_30LSPs XPath1.0_Query3_30LSPs XPath1.0_Total_30LSPs XPath2.0_Query1_30LSPs XPath2.0_Query2_30LSPs XPath2.0_Query3_30LSPs XPath2.0_Total_30LSPs 0 50 100 150 200 250 300 350 400 450 Measurement Type Latency \(ms  Fig. 4 Latency overhead for a small QoS network  From figure 4 it can be seen that the custom parser we have developed performs better than XPath 1&2 even for a small network where a small number of data needs to be processed. XPath 2.0 and 1.0 produce 116% and 166% times respectively more latency than the custom parser Additionally since the operations for the queries that are performed involve a varied number of filtering and merging operations \(bulk\ we  can detect that while the custom parser is relatively unaffected by this, both XPath implementations performance is affected when the number of merging and filtering operations varies. Lastly it is also evident from the queries in Figs 1 & 2 that XPath 2 expressiveness allows it to perform less filtering queries and at the same time perform merging operations better which is evident from the latency improvement on all queries compared to XPath 1 VI  C ONCLUSIONS  In this paper we have shown that W3C mature and fully conformant to standards XPath implementations present potential scalability problems in terms of latency compared to the custom parser for accessing a small networkês management data. As such we consider that there is a lot of ground to investigate on many other issues. One such issue is how these tools perform compared to an increasing data volume size. It is also worth considering finding the potential root of this scalability problem and possible solutions to alleviate it. Moreover it is necessary to check if the latency scalability problem is applicable to memory and traffic overhead as well  Furthermore acceptance, grammar simplicity and verboseness, development time and expressiveness are also things that need to be considered under the scope of such an investigation Nevertheless although this is an initial study it has shown that there are potential problems with XPath implementations when these tools are used for mo nitoring and these issues need to be investigated. We have also shown that custom implementations and in general tools built to fit management objectives may also have some application potential, since management tasks require from tools used to address management objectives, to balance between what is required to support functionality, expressiveness and performance A CKNOWLEDGEMENTS  The research work in this paper was partly supported by the IST EU EMANICS and the IST ENTHRONE phase 2 projects  R EFERENCES  1  J. Clark, S. DeRose, çXML Path Language v 1.0é, W3C recommendation, November 1999, http://www.w3.org./TR/xpath 2  A. Berglund, S. Boag et al, çXML Path Language v 2.0é, W3C recommendation, January 2007, http://www.w3.org/TR/xpath20 3  A. Chourmouziadis et al çEfficient Information Retrieval in Network Management Using Web Servicesé  DSOM 2006  Dublin, Ireland 4  S. Blake et al An Architecture for Differentiated Services,é RFC 2475, Dec. 1998 5  D. Goderis et al Service Level Specification Semantics and Parameters,é Internet draft, draft-tequila-sls-02.txt, Expired Aug. 2002 6  H. Asgari et ak Scalable monitoring support for resource management and service assurance IEEE Network, Vol 18,  Iss. 6. 2004 pp.6 Ö 18 7  CADENUS, http://wwwcadenus.fokus.fraunhofer.de 8  ENTHRONE, http://www.enthrone.org/.  2 nd phase 1/9/2006 9  C. Srinivasan et al Multiprotocol Label Switching \(MPLS\ Label Switching Router LSR\IB Network Group RFC 3813, June 2004   T. Nadeau, et al Multiprotocol Label Switching \(MPLS\ Forwarding Equivalence Class To Next Hop Label Forwarding Entry MIB Network Group RFC 3814, June 2004   XPath tutorials http://www.w3schools.com/xpath/default.asp 830 


                                                            Figure 10. Data Transfer Patterns for Small Diamond search  Figure 9. Coordinate conventions Table 1 Data load schedule for PE1\(1,1 PE1\(1,3\ for diamond search Figure 4.    Processing element of type 2, PE2 \(1  Figure 3.  CPE comprising of PE1 at the corner of t he architecture, Network Interface \(NI\, NoC Router  Figure 6 Data Transfer Patterns for Diamond search direction and order of data transfer follows the numbering scheme  Figure 5. Current 48x48 Frame, and highlighted region\(16x16 macroblock from current frame Figure 7 Reference Frames for PE1\(1,1 and PE1\(1,3 For P x y  x represents PE\(1,x and y represents order of data transfer Figure 8 Data Reuse between PE1s where numbers represent cycles from Table 1 


from C A starts sending message to C through  its 32 bit 1-5 output de- multiplexer  4.3  PE 2 and PE 3 Figure 4 shows processing element PE 2 It consis ts of 3 adders 2 multiplexers mux 2 demultiplexers dem ux 5 comparators and 5 registers. In PE 2, muxes ìs1î an d ìs2î select the computation of either 4x8 or 8x4 motion vectors Demuxes s3 and s4 direct 4x8 or 8x4 SADs to their corre sponding comparators and registers After computing either 4 x8 or 8x4 SADs 8x8 SAD is generated which is sent to PE 3 to  process larger block SADs PE 3 is similar to PE 2 with dif ferences in granularity of adders. In PE 3, muxes ìs1î and ìs2 Figure 4 select computation of either 8x16 or 16x8 motion ve ctors Thereafter, demuxes ìs3î and ìs4î direct 8x16 or 16 x8 SADs to their corresponding comparators and registers Then  16x16 SAD is computed from either 8x16 or 16x8 SADs. Now we will discuss the routing patterns for different search a lgorithms 4.4  Fast Search Algorithms and Case Study Fast search algorithms like diamond, hexagon, big h exagon and spiral have been introduced to reduce the computati on complexity of motion estimation by operating on red uced number of reference blocks Number of reference blo cks for diamond and hexagon searches are shown in figures 6  and 11 Diamond search requires 9+5n+4 reference blocks  17  a n d  hexagon search requires 7+3n+4 18  r e f e r e n c e  b l o cks where  n is the number of execution iterations Diamond Search As shown in figure 6, pattern consists of nine candidate search points reference blocks in first  iteration Numbers in this figure represent the order of proce ssing the reference frames Directed edges are labeled with d ata transmission equations derived for diamond search p attern based on the data dependencies The grid co-ordinates fol lowed for data transfer is shown in fig 9. An equation is rep resented with nx\ and \(+/-ny\ where \(+ or -\ denotes the dire ction of data transfer on the x and y axis and n denotes the numb er of hops in that direction. Also, load indicates that reference block is loaded from the main memory We now explain SAD computation using diamond search  pattern for a 16 x 16 current block on the proposed architecture Figure 5 represents the current frame which is divi ded into blocks of size 4 x 4.  Sixteen 4x4 current blocks 5 3, 54, 55, 56 65 66 67 68 77 78 79 80 89 90 91 92 are loaded into CPE  \(1,1\, CPE  \(1,2\, CPE  \(1,3\, CPE  \(1,4\, CPE 2,1\, CPE 2,2 CPE  2,3 CPE  2,4 CPE  3,1 CPE  3 2 CPE 3,3\, CPE  \(3,4\, CPE  \(4,1\, CPE  \(4,2\, CPE  \(4 3\, CPE  \(4,4 respectively Each PE1 of the CPEs with a current b lock processes SAD on 9 reference blocks. PE1 \(1,1\ comp utes SAD for current block 53 against reference blocks 29 40í, 42í, 55 53í, 51í, 64í, 66í, 77 Figure 7 shows data dependencies and data transfer patterns for PE1\(1,1 and PE1\(1,3 Solid squares represent inte rsecting search points between the two and solid circles rep resent the other search points Table 1 shows the reference bl ock to be loaded in PE1s at different clock cycles. At clock cycle one, first search points \(reference blocks P 1 1 and P 3 1 are loaded into both processing elements from main memory through MI Fo r this NIs of CPE\(1,1 and CPE\(1,3 set  respective  data_load_control  signals to high indicating the CPE ids and ìreference_block_idî output  to 1 indicating th e index of the search point on the diamond pattern \(figure 7\. Bas ed on these inputs and address of the current frames MI genera tes the addresses of the reference frames as per the search  pattern and outputs it to the main memory Main memory then se nds the requested data through corresponding ìCPEî input po rts. In this case first reference blocks for PE1\(1,1 and PE1\(1 3 are 29 and 31í respectively. Figure 7 shows that third sea rch point \(P 1 3  required by PE1\(1,1 is same as second search point  P 3 2  of PE1\(1,3 At clock cycle three P 3 2 is transmitted from PE1\(1,3\ís router to PE1\(1,1 The NI of PE1\(1,3 p acketizes the reference block according to data transmission equation Figure 6 Equation 1x+1y arrow labeled from poi nt 1 to 2 and sends the packets to the router The router of PE1\(1,2 receives the packets, decodes the header packet and following xy routing scheme forwards the packets to the route r of PE1\(1,1 PE1\(1,1 is the destination node hence it s NI depacketizes the data to be processed within its PE 1 Same events take place at cycles 5, 6 and 8 as shown in Figure 8.  The events illustrated with Figure 8 take place for all  sixteen 4x4 current blocks. The above data transfer pattern als o dictates that at every clock cycle, every CPE is accessing a uniq ue reference block. So, at no time slot, two CPEs compete for th e same data and there is no case of resource conflict For every successive iteration, nine SADs are compu ted in each PE1 If the computed SAD minima is located at one o f the vertices  1,4,6 and 9 or edges 2,3,7,8  of the  diamond Figure 6\ , a new diamond pattern is formed with t he minima as the new center for the next iteration This again r equires computation of SADs for next nine reference frames in the same order as in figure 7. But in this case, minima at t he vertex leads to only 5 new reference frames and the minima at th e edges lead to only 3 new reference frames for one iteration I n the last iteration, the minima is the center point \(5\. In t hat case, a small diamond is formed around the minima with 4 referenc e frames The order of reference frames for loading the data for this case and the data transmission equations are shown in fi gure 10. Data transmission equations for hexagon big hexagon and  spiral search patterns are shown in figure 11. The spiral search is more compute-intensive compared to other fast search pat terns The width of the spiral search determines the number of  reference frames to be compared In this example we carry ou t a 5x5 spiral search as shown in figure 11\(c So the num ber of reference frames is 25 Full Search Now we illustrate the functionality of the proposed architecture for full search. Table 2 show s data load schedule  for PE1\(1,1 As shown in table 2\(a at cycle on e four pixels of 4x4 current block are loaded into CP R registers 1 2, 3, 4 through current_data_\(1,1\ port. At cycle t wo, these four pixels are shifted to CPR registers 5, 6, 7, 8 and next four pixels are loaded into CPR registers 1 2 3 4 This cont inues for 4 cycles till a 4x4 current block is completely loade d into PE 1\(1,1\ as shown in table 2\(b\. Similarly, a 4x4 ref erence block is loaded into RPR registers of PE 1\(1,1 in four cycl es through reference_data_\(1,1 port All the PE1s are loaded with corresponding current and reference blocks in a sim ilar fashion At the end of the fifth clock cycle, 4x4 SADs are c omputed and sent to PE 2\(1 Table 3 Control signals to PE 2 1 select between computation of 4x8 SAD or 8x4 SAD at the en d of sixth cycle. At the end of seventh cycle, 8x8 SAD i s computed Similarly, four 8x8 SADs are then sent to PE 3. In PE 3, control signals select between computation of 8x16 SAD or 1 6x8 SAD 


                                         at the end of eighth cycle. At the end of ninth cyc le, 16x16 SAD  is computed \(Table 4\. Now, we present the performa nce results of our architecture and compare it with the ASIC ba sed approach [9   5  RESULTS Proposed architecture was designed with Verilog-HDL  description and synthesized by 90 nm CMOS standard cell library. Design contains about 82K gates. As shown in Table 5 resource usage technology independent gate count of our architecture is about one-seventh of its counterpar t 9   W h i l e  9  f o l l o w s  p a r t i a l  s u m  S A D  a p p r o a c h  a n d  t a k e s  4  c y cles for producing the first 4x4 SAD, our architecture requi res 5 cycles including 4 cycles of the data load schedule phase. Rest of the computations in our architecture and [9  a r e  p i p e l i ned. Thus, [9  requires 265 cycles to produce a 16x16 motion vecto r for full search while our architecture requires 266 cycles Table 6 shows the minimum clock rate that is required to sustain 30fps and 60fps frame rates by the proposed architecture and its counterpart 9   A s  s h o w n  i n  t a b l e  6   f o r  Q C I F  f o r m at ASIC approach [9  n e e d s  t o  o p e r a t e  a t  0  7 6  M H z  t o  s u s t a i n the 30fps requirement, whereas our design needs a little fast er clock. This is because the number of cycles required to compute  16x16 motion vector is larger in our design 266 cycles  vs 9  2 6 5  cycles\.  For clock rates slower than 0.8 MHz, our design wonít be able to sustain 30fps  As shown in table 6 for  all frame sizes, our clock rate is comparable with [9   A s  e x pected, while the frame size gets larger the clock rate needs to  increase to respond to the more number of computations with the 30fps or 60 fps constraint Fewer number of search points for fast search algor ithms overcomes the ìrouterî cycles overhead and requires even lesser number of cycles than full search Routerís critica l path consumes 6 cycles. Total data transmission cycles a re the sum of router cycles and total number of hops. Since avera ge number of hops for fast search patterns is 2, the routing cyc leís overhead is 8 cycles per search point. Also, worst case number of reference blocks accounts from n=4 and best case comes from n 0 on a 32x32 search region. So, the best case and worst ca se number of search points are 13 and 33 for diamond search Inc luding the Table 2 \(a\ Data load schedule for PE1 Table 2 \(b\ Data load schedule for PE1 Table 3 Data flow for calculation of 8x8 SAD Table 4 Data flow for calculation of 16x16 SAD 0ˇiöh˘/˝8éª ⁄◊\`˛ƒ :3Ë‡Õ£(Ë‹ùﬁ°k9\◊ï.h_ z˚4Cﬂ˜a˛Õ0œs z ¿¿˚˝æÄ!√Îıä‹B gM”P¿0√f KÑPêäÎ#¬2¿$„n∑+ã`≤\.pä_.«qzΩû Œ2®«*ƒÄ	B@åòœÁÌv[–@UU0B†ÿ‰dÄ”1ëùVN–ê0   V´#ë∆Å-é@èG*ï"‹éòÕfX  K 82òNßôLÜ-(ã&»sπ#Ä'.¨ÁyQçF£d2 Vıﬁ[kAí∆ EN    K  LÄ≥¶iZ◊5ﬂ˜5Ü∫Æ—Ü!*ûb—>√æÔØ◊+MS·ÙÎ∫`Ä,Àé„Ë∫Œ∂m Figure 12.   Zig-Zag Search Pattern Table 5 Resource usage comparison of the proposed  architecture and its counterpart [9  Table 6 Required clock rates of the proposed architecture and its counterpart [9  f o r  v a r i o u s   frame sizes and frame rates using full search  Table 7 Required clock rate of the proposed archite cture  using diamond search\(DS\, hexagon search\(HS\,  big hexagon search\(BHS\ and spiral search\(SS\  for vari ous frame sizes and frame rates  Figure 11. \(a\ Hexagon Data Transfer Pattern  b\ Big Hexagon Data Transfer Pattern  c\ Spiral Data Transfer Pattern  


routing overhead diamond search takes 104 cycles a nd 264 cycles for best case and worst case scenarios respe ctively which is less than 266 cycles of full search Similarly the worst case and best case number of search points are 23 and 11  for hexagonal search and thus it takes 184 and 88 cycle s respectively to produce a 16x16 motion vector. The worst case and best case number of search points are 33 and 21  for big hexagonal search and thus it takes 264 and 168 cycl es respectively to produce a 16x16 motion vector Also  the number of search points is constant for all the cas es of a spiral search For a 5x5 spiral search Figure 11\(c the  number of search points is 25 and thus it takes 200 cycles to  produce a 16x16 motion vector  Therefore architecture suppo rts fast search algorithms with operational frequencies less than the full search algorithm table 6 as shown in Table 7 For  QCIF format our architecture operates at 0.8MHz for ful l search Whereas as shown in Table 7 for DS HS BHS and S S it operates at 0.78 0.55 0.78 0.59 MHz correspondin gly for worst case scenarios. Since the number of search po ints for fast search types decrease significantly our architectu re can now operate at a slower clock rate even for the worst c ase scenarios to sustain the 30fps Further this pattern is obse rvable for all frame sizes Thus, the clock rate of the proposed architecture i s comparable to ASIC implementation for both full search and fas t search algorithms with much lesser resources. Therefore, t he frame size and frame rate supported by the circuit can be subs tantially extended subject to this clock rate constraint for high definition 6  CONCLUSION This paper proposed a new application specific reco nfigurable hybrid coarse-grained architecture with intelligent NoC scheme Existing coarse-grained architectures have generic processing elements and routing structure and therefore suffer  in performance and resource utilization for motion est imation algorithm as compared to our architecture. The inte lligent NoC scheme in our architecture supports VBSME for diffe rent types of fast search patterns like diamond search hexago nal search etc Hybrid grained processing elements support var iable block sizes in motion estimation. Simplicity and highly p arallel nature of the architecture with an excellent degree of dat a reuse makes our design suitable for run time reconfiguration A rchitecture can easily be configured to run any fast search or full search algorithm with block size variations to respond to the video quality and/or timing constraints Our 2D architect ure supports huge reuse of search data between processing elemen ts and thus reduces the memory transaction requirement which is missing in existing state of the art approaches Proposed arch itecture uses hybrid grained processing elements to compute 4x8 o r 8x4 and 8x16 or 16x8 motion vectors dynamically depending o n the control signals supplied. Our architecture is highl y flexible as it supports any block size for any search type which i s a challenging problem from ASIC perspective 7  REFERENCES 1  T. Wiegand, G. J. Sullivan, G. Bjontegaard, and A Luthra Overview of the H.264/AVC video coding standard IEEE   Trans on Circuits and Systems for Video Technology, vol.13, no. 7, pp. 560ñ576, July 2003 2  Injong Rhee et al  Quadtree-Structured Variable Size Block-Matching Motion Estimation with Minimal Error  IEEE Trans Circuits Syst Video Technol vol 10 Feb p.42-50, 2000 3  Lappalainen V Hailapuro A Hamalainen T.D. Noki a Res Center Tampere Performance of H.26L video encoder on general-purpose processor The Journal of VLSI Signal Processing 4  S Reader and T Meng Performance Evaluation of Motion Estimation Algorithms for Digital Signal Processors,î Tech. report, Stanford University, 199 9 5  P. M. Kuhn, ìFast MPEG-4 Motion Estimation: Process or Based and Flexible VLSI Implementations Journal o f VLSI Signal Processing Systems for Signal Image a nd Video Technology, vol. 23, pp 67-92, October 1999 6  J.F Shen et al A Novel Low-Power Full-Search Blo ckMatching Motion-Estimation Design for H.263 IEEE  Transactions on Circuits and Systems for Video Technology, vol. 11, no. 7, July 2001, pp.890-897 7  L de Vos and M Schobinger VLSI architecture for  a flexible block matching processor IEEE Trans Cir cuits and Systems for Video Technology Vol 5 pp.417-42 8 1995 8  S Y Yap and J V McCanny  A VLSI architecture for variable block size video motion estimation IEEE Transactions on CAS II, vol. 51, no. 7, July 2004 9  Chien-Min Ou Chian-Feng Le and Wen-Jyi Hwang An Efficient VLSI Architecture for H.264 Variable Bloc k Size Motion Estimation IEEE Transaction on Consumer Electronics, Volume 51,  Issue 4,  Nov. 2005 Page\(s 1291 1299 10  Alex Soohoo FPGA Co-Processing Architectures for Video Compression,î Altera Corporation 11  E Waingold et al Baring it all to Software RAW  Machines,î IEEE Computer, September 1997, pp. 86-93  12  E Mirsky A DeHon MATRIX A Reconfigurable Computing Architecture with Configurable Instructio n Distribution and Deployable Resources Proc IEEE FCCM'96, Napa, CA, USA, April 17-19, 1996 13  A. Marshall et al., ìA Reconfigurable Arithmetic Ar ray for Multimedia Applications Proc ACM/SIGDA FPGA'99 Monterey, Feb. 21-23, 1999 14  Carl Ebeling Darren C Cronquist Paul Franklin C hris Fisher RaPiD  A Configurable Computing Architect ure for Compute-Intensive Applications University of Washington Department of Computer Science  Engineering Tech Report TR-96-11-03 15  K.M Yang M T Sun and L Wu A family of VLSI designs for the motion compensation block-matching algorithm,î IEEE Trans. Circuits Syst., vol. 36, no 10, pp 1317ñ1325, Oct. 1989 16  Y.K Lai and L G Chen A data-interlacing archit ecture with two dimensional data-reuse for full-search blo ckmatching algorithm IEEE Trans Circuits Syst Vid eo Technol., vol. 8, no. 2, pp. 124ñ127, Apr. 1998 17  Jo Yew Tham et al A novel unrestricted center-bi ased diamond search algorithm for block motion estimatio n IEEE Trans Circuits Syst Video Technol vol 8 no 4 Aug. 1998 18  Ce Zhu et al., ìHexagon-based search pattern for fa st block motion estimation IEEE Trans Circuits Syst Vide o Technol., vol. 12, no. 5, May 2002 


  9 Italy, in 2008. In 2002 she joined the Istituto per il Rilevamento Elettromagnetico dell\222Ambiente \(IREA Institute of the Italian National Research Council \(CNR Napoli, where she currently holds a Researcher Position She was a Visiting Research in 2004 at the German Aerospace Centre \(DLR\ and in 2007 at the Rosenstiel School of Marine and Atmospheric Science, Division of Marine Geology and Geophysics, University of Miami USA\. Her research interests concern the differential SAR interferometry data processing and applications for the monitoring of surface displacements, such as those produced by subsidence, volcano activity and earthquakes   


5 M  G a e dke  M. N u s s ba um e r a n d E. T o nk in  W e b Co m p o s i tio n  Service Linking System: Supporting development, federation and evolution of service-oriented Web applications  3 rd Int. Workshop on Web-oriented Software Technology \(IWWOST 2003\, 2003 6 I T M a n a g em en t an d W e b E n gin eeri n g R e s e a r ch G r ou p  MWRG\, "WebComposition Service Linking System http://mwrg.tm.uni-karlsruhe.de/wsls 02-10-2008 7 R F i e l ding  A r c hi te ct ur al S t y l e s  an d the D e s i g n o f N e tw o r kbased Software Architectures", University of California, Irvine 2000 8 L  Ric h ar d s o n  an d S  R u by RES T f u l W e b S e r v ice s  O  Re il ly  2007 9 A  H e il and M  G a e dke  W e b Co m p o s it io n  D G S  S uppo r t ing  Web2.0 Developments With Data Grids  IEEE International Conference on Web Services \(ICWS 2008  Beijing, China, 2008   C   M  M a c K en zi e K   L a s k e y  F   M c C a b e  and R  M e t z   Reference Model for Service Oriented Architecture 1.0 http://www.oasis-open.org/committees/soa-rm   T  B e r n er s Lee Un i v er s a l R e s o u r c e  I d en t i f i e r s in W W W    http://www.ietf.org/rfc/rfc1630.txt 11-24-2007-2007  T  B e r n er s Lee M et a d at a A r c h it ec t u r e   http://www.w3.org/DesignIssues/Metadata.html 05-31-2008 13 J a p a n El e c tr o n i c s  an d I n f o r m atio n T e chno l o g y  I ndus tr ie s  Association, "Exchangeable image file format for digital still cameras: Exif Version 2.2", 2002 14 L  A ndr e s e n  D ubl i n  Co r e Me ta da ta El e m e n t S e t, V e r s io n 1.1: Reference Description http://dublincore.org/documents/dces  02-18-2008 15 H  K i l o v  F r o m s e m a ntic to O b j e cto r ie nte d D a ta Mo de l i ng    First international Conference on Systems Integration  Morristown NJ, USA, 1990, pp. 385-393 16 J  F u tr e l l e  H a r v e s ting RD F T r ipl e s    International Provenance and Annotation Workshop \(IPAW'06  Chicago, Il USA, 2006, pp. 64-72  V. T a n  P G r ot h  S   M i les  S  J i an g S. Mun r oe S T s a s ak ou  and L. Moreau, "Security Issues in a SOA-based Provenance System  International Provenance and Annotation Workshop IPAW'06  Chicago, Il, USA, 2006, pp. 203-21 18 J  G r e g o r io M. H a dl e y M. N o tt i n g h a m  an d D  O r c h ar d   URI Template http://tools.ietf.org/id/draft-gregorio-uritemplate03.txt 02-06-2008  T  B e r n er s Lee  L i n k e d Da ta   http://www.w3.org/DesignIssues/LinkedData.html 02-20-2008 20 D  Br ic kl ey and L  Mil l e r  F OA F V o cabul ar y S p e c if ic at io n 0.9 http://xmlns.com/foaf/spec/20070524.html 06-03-2008   37 s i gna ls L L C  B a c kp ac k    http://www.backpackit.com 0219-2008  A m a z on W e b Servi c e s  L L C   A m a zon Si m p le St ora ge Service Developer Guide http://docs.amazonwebservices.com/AmazonS3/2006-03-01 0603-2008  F  Sha n ah an  A m a z on  c om  M a s h u p s   B i rm in gha m  UK  W r o x  Press Ltd., 2007 24 H  K r aw c z y k M  Be l l a r e an d R Ca ne tt i H MA C K e y e dHashing for Message Authentication http://www.ietf.org/rfc/rfc2104.txt 06-03-2008 25 H  L o ckhar t  S  A n de r s e n S  J  B o hr e n Y  S v e r dl o v  M  Hondo, H. Maruyama, A. Nadalin, N. Nagaratnam, T. Boubez, K S. Morrison, C. Kaler, A. Nanda, D. Schmidt, D. Walters, H Wilson, L. Burch, D. Earl, S. Baja, and H. Prafullchandra, "Web Services Federation Language \(WS-Federation\", 2006 26 M  G a e dke  J  Me i n e c ke an d M N u s s b au m e r    A  Mo de l i ng  Approach to Federated Identity and Access Management  14 th  International World Wide Web Conference \(WWW'05  Chiba Japan, 2005, pp. 1156-1157 27 J   Me ine c ke a n d M  G a e dke  M o de l i ng F e de r a tio ns o f W e b Applications with WAM  Third Latin American Web Congress LA-WEB 2005  Buenos Aires, Argentina, 2005, pp. 23-31  J  M e i n eck e  M  N u s s b au m e r and  M  G a ed k e   B ui ldi n g Blocks for Identity Federations  Fifth International Conference on Web Engineering \(ICWE 2005  Sydney, Australia, 2005, pp. 203208 29 I T M anag e m e n t an d W e b E n g i ne e r ing Re se ar ch G r o up MWRG\, "Home of the IT-Management and Web Engineering Research Group http://mwrg.tm.uni-karlsruhe.de 03-06-2008  w e b e n g i n eeri n g org T h e W e b E n gi n e eri n g C o m m u n i t y Si t e  WebEngineering.org http://www.webengineering.org 06-032008  I n t e rn a t i o n a l Soc i et y for Web E ngi n eeri n g e V  I S W E    International Societe for Web Engineering e.V http://www.isweev.de 06-03-2008  A m a z on W e b Servi c e s  L L C   A m a zon Si m p leDB Deve lop e r Guide", 2008 33 P  C a str o  P r o je ct A s to r i a T h e  A r chite ct ur e Jo ur nal  pp. 1217, 2007 34  M N u s s ba um e r  E ntw i c k l ung  u n d E v o l utio n diensteorientierter Anwendungen im Web Engineering Universit‰t Karlsruhe \(TH\, Karlsruhe, 2007 35  R. G e am bas u  C  C h e u ng A  Mo s h c h u k  S  D  G r ibbl e  a n d H. M. Levy, "Organizing and Sharing Distributed Personal WebService Data  15 th International World Wide Web Conference WWW 2008  Bejing, China, 2008, pp. 755-754  G oogl e I n c   Op en Soc i a l   http://code.google.com/apis/opensocial 06-03-2008  G oogl e I n c   Goog le Da t a A P I s    http://code.google.com/apis/gdata 02-17-2008  Proceedings of the 42nd Hawaii International Conference on System Sciences - 2009 10 


transform spectrometry,\224 A pplied Optics  vol 46 no 21 pp 4774\2264779 2007 B IOGRAPHY Dmitriy Bekker r eceived his M.S and B.S degrees in Computer Engineering from Rochester Institute of Technology in 2007 He has been at JPL as a summer student in 2006 and now is a full time employee since February 2008 in the Instrument Software and Science Data Systems section His areas of interest include FPGAs embedded systems digital signal processing and system architecture He has co-op and work experience at Draper Laboratory NASA Dryden Flight Research Center Syracuse Research Corporation and Brookhaven National Laboratory He is a member of IEEE Dr Jean-Francois Blavier 002 rst joined the JPL-MkIV Team in August 1985 as a contractor from Ball Aerospace He participated in the MkIV campaigns in McMurdo Antarctica ground-based and from Punta Arenas Chile NASA DC8 In late 1987 he started graduate work with Profs Delbouille and Dubois at the University of Li 036 ege Belgium His research tasks included installing the Fourier transform spectrometers at the International Scienti\002c Station of the Jungfraujoch Switzerland for atmospheric measurements and at the Institute of Astrophysics in Li 036 ege for laboratory measurements He was hired by JPL in August 1990 as MkIV cognizant engineer and participated in all the MkIV campaigns since then one DC-8 campaign 20 balloon campaigns Dr J.-F Blavier obtained his Ph.D in Physics from the University of Li 036 ege in July 1998 Dr Geoffrey Toon  after receiving his B.A degree in Physics at Oxford University in 1978 obtained a D Phil in Atmospheric Physics in 1984 also from Oxford University He then came to JPL as an NRC post-doctoral Researcher and worked on the assembly and testing of the JPL MkIV interferometer and on analysis of ATMOS Spacelab-3 data Since becoming a JPL employee in 1986 he has worked almost exclusively on the MkIV project becoming the Principal Investigator in 1988 This work has earned seven NASA Achievement Awards and has resulted in more than 100 peer-reviewed journal articles Dr Christian Servais 002 rst joined the Institute of Astrophysics at the University of Li 036 ege in 1982 designing a digital 002lter for a prototype Fourier transform infrared spectrometer installed at the high altitude international scienti\002c station of the Jungfraujoch Switzerland In April 1984 he moved to the chemistry department of the University of Li 036 ege and developed time-of-\003ight and Photoion-Photoelectron coincidence experiments for his PhD thesis that he obtained in September 1994 He then returned to the Institute of Astrophysics were he has been since overseeing all experimental developments at the Laboratory of Atmospheric and Solar Physics located at the Jungfraujoch He is now specially involved in the design of improved Fourier transform spectrometer acquisition chains and remotely controlled hardware adapted to harsh environmental conditions 11 


departments on average\ignificant differences were found regarding the age of the applications. The variables for the coverage of the products and processes were not included in this test because the overlap was computed using these two variables implying that there is a significant relation between the respective variables\his lends some support to proposition P2.4 stating that involvement of more users leads to greater overlap of applications. The proposition that older applications also exhibit a higher degree of overlap was not supported \(P1.4  A.2. Results from analyzing impacts of AA complexity  Impacts of interdependency-related AA complexity A Kruskal-Wallis test \(Table 4\ealed a statistically significant difference in operations cost as well as maintenance cost across the three different interdependency-groups of applications. The more interdependent group \(i.e. applications with 3-7 or with 8 or more interfaces\igher median of operations \(Md=119,000 and 363,000 EUR respectively\ and maintenance costs \(Md=326,000 and 506,000 EUR respectively\ than the less interdependent group \(fewer than 3 interfaces applications \(Md=52,000 EUR operations costs and 64,000 EUR maintenance costs\. This supports the proposition \(P3.1\ that more interdependent applications also incur higher IT \(operations and maintenance\ts  Impacts of diversity-related AA complexity   Regarding OS-related diversity, a Mann-Whitney U test \(Table 5\howed no significant difference between the operations costs of more \(Md=93,890 n=105\d less diverse applications \(Md=131,540 n=27\09.5, z=-1.174, p=.24. The same holds for maintenance costs \(Md=166,400; n=121 vs Md=116,900; n =31\782, z=-.43; p=.668 To measure DBMS-related diversity, a MannWhitney U test was conducted \(Table 5\d revealed no significance difference in operations costs of more Md=129,985; n=85\d less diverse applications Md=154,777; n=16\5, z=-.237, p=.813. The same holds for maintenance costs \(Md=210,500 n=98 vs. Md=245,700; n=19\36, z=-.704 p=.481. Hence, the proposition \(P3.2\ that diversityrelated AA complexity leads to higher IT costs is not supported  Impacts of deviation-related AA complexity   Regarding deviation from the standard OS, a MannWhitney U test \(Table 6\revealed no significant difference between the maintenance costs and operations costs for standard-compliant \(Md=83,581 n=94 for operations cost and Md=148,300; n=113 for maintenance cost\nd non-compliant applications Md=180,147; n=38 for operations cost and Md=166,400; n=39 for maintenance cost z=-1.921, p=.055 for operations cost and U=2116 z=-.371, p=.711 for maintenance cost Concerning deviation from the standard DBMS, a Mann-Whitney U test \(Table 6\ealed a significant difference between maintenance costs for standardcompliant \(Md=373,100; n=59\d non-standardcompliant applications \(Md=170,200; n=58 U=1303, z=-2.231, p=.026. It is remarkable that the non-compliant applications had lower maintenance costs than the compliant applications. The difference between operations costs for compliant Md=109,978; n=51\d non-compliant applications Md=180,147; n=50\s not significant, U=1196.5 z=-.533, p=.594 Thus, the proposition \(P3.3\at application that deviate from technology standards incur higher IT costs is not supported. In contrast, for DBMSstandard deviation, we observed significantly lower maintenance cost for non-compliant than for compliant applications  Impacts of overlap/redundancy-related AA complexity a Kruskal-Wallis test \(Table 7\ showed significant differences in operations costs across the applications with a low \(less than 34 overlaps Md=90,442; n=37\edium \(35-79 overlaps Md=55,770; n=56\ and high level of overlap/redundancy \(more than 80 overlaps Md=129,985; n=61 6.862, p=.032. It is striking to see that the applications with medium overlaps have a lower median operations cost than those with a low or high-level of overlap, implying a non-linear U-shape relation between overlap and operations cost. Interestingly, the same holds true for maintenance cost. Applications with a low degree of overlap exhibited a median maintenance cost of 96,600 \(n=59\, those with a medium level of overlap incurred a median of 81,300 \(n=58\d highly overlapping applications a median of 248,700 \(n=67 9.791, p=.007. Hence, the proposition \(P3.4\at applications with a greater degree of overlap also exhibit higher IT costs is not supported  Proceedings of the 42nd Hawaii International Conference on System Sciences - 2009 12 


Interdependency Number of interfaces \(gp3_y4_sum_intf  2 22 2 22 Df 047 000 000 016 000 000 Asymp. Sig 6.134 22.298 20.875 8.331 17.018 18.917 N Median 46 45 43 46 27 37 41 41 41 41 36 38 2 intf 8 intf 1.0000 2.2000 1.0000 1.0000 52.3020 64.4000 2.0000 7.8000 4.0000 2.0000 363.9885 506.3500 2 intf 8 intf Mean rank 55.89 47.03 44.13 56.13 33.67 37.77 2 intf 73.46 83.40 76.61 76.21 60.89 68.89 8 intf 40 39 33 40 30 34 3 7 intf 1.0000 3.2000 2.0000 1.0000 119.3940 326.2000 3 7 intf 63.63 59.97 56.50 60.54 42.33 58.22 3 7 intf  Business requirements Causes of complexity Impacts of complexity  No. of IB products covered y24_#_IB_ bankprod Application age y14_age No. of user departments y19_#_ user_dpts No. of IB process covered \(y26_ IB_bankproc Operations cost \(y36_ ops_cost Maintenance cost \(y37_ Maint_cost 2  Table 4: Results of Kruskal-Wallis test for causes and impacts of interdependency-related AA complexity    Diversity Number of OS/DBMS used by an application Operating systems \(gp2_y7a_OS DBMS \(gp2_y8a_DBMS 2,726.500 18,302.500 1.503 133 1,087.500 1,318.500 1.362 173 3,308.000 902 367 543.000 7,446.000 3.925 000 2,642.000 2,536.000 3,202.000 855 392 757.500 7,198.500 2.187 029 2,884.500 18,460.500 965 335 1,216.500 1,447.500 583 560 1,209.500 6,774.500 1,174 240 654.500 790.500 237 813 1,782.000 9,163.000 430 668 836.000 5,687.000 704 481 Wilcoxon W Z Asymp. Sig N Median Mean rank Mann-Whitney U Wilcoxon W Z Asymp. Sig Mann-Whitney U 21 1.0000 125 1.0000 75.30 62.79 20 8.0500 117 2.2000 63.64 100.35 19 3.0000 113 1.0000 63.70 83.13 21 1.0000 125 1.0000 74.27 68.93 16 154.7770 85 129.9850 51.30 49.41 19 245.7000 98 210.5000 58.03 64.00 N Median 1 DBMS 2 DBMS 1 DBMS 2 DBMS Mean rank 1 DBMS 2 DBMS Data not shown as no significance found  Business requirements Causes of complexity Impacts of complexity  No. of IB products covered \(y24_#_ IB_bankprod Application age y14_age No. of user departments y19_#_user_dpts No. of IB process covered \(y26_#_ IB_bankproc Operations cost \(y36_ ops_cost Maintenance cost \(y37_ Maint_cost  Table 5: Results of Mann-Whitney test for causes and impacts of diversity-related AA complexity  Proceedings of the 42nd Hawaii International Conference on System Sciences - 2009 13 


 Deviation degree of deviation from standard OS/DBMS Operating systems \(gp2_y7b_OS_Dev DBMS \(gp2_y8b_DBMS_Dev 2,780.000 16,146.000 3.681 000 163 49 1.0000 2.0000 99.06 131.27 2,611.000 5,312.000 227 820 73 1.0000 73 1.0000 72.77 74.23 3,970.500 2.107 035 151 47 3.2000 2.2000 104.18 84.48 2,102.000 4,587.000 1.074 283 70 2.2000 67 3.5000 72.63 2,842.500 65.53 2,902.000 4,030.000 1.509 131 143 47 2.0000 1.0000 98.71 85.74 1,551.500 3,829.500 3.041 002 67 1.0000 65 3.0000 76.13 57.16 3,103.500 16,469.500 2.698 007 163 49 1.0000 2.0000 101.04 124.66 2,610.000 5,311.000 232 816 73 1.0000 73 1.0000 72.75 74.25 1,404.000 5,869.000 1.921 055 94 38 83.5815 180.1470 62.44 76.55 1,196.500 2,522.500 533 594 50 180.1470 51 109.9780 49.46 52.57 2,116.000 8,557.000 371 711 113 39 148.3000 166.4000 75.73 78.74 1,303.000 3,014.000 2.231 026 58 170.2000 59 373.1000 65.92 51.97  Wilcoxon W Z Asymp. Sig N Median No deviation \(1.0 Deviation 1.1 No deviation \(1.0 Deviation 1.1 Mean rank Mann-Whitney U No deviation \(1.0 Deviation 1.1 Wilcoxon W Z Asymp. Sig N Median No deviation \(1.0 Deviation \(>1.0 No deviation \(1.0 Deviation \(>1.0 Mean rank Mann-Whitney U No deviation \(1.0 Deviation \(>1.0  Business requirements Causes of complexity Impacts of complexity  No. of IB products covered \(y24_#_ IB_bankprod Application age y14_age No. of user departments y19_#_user_dpts No. of IB process covered \(y26_#_ IB_bankproc Operations cost \(y36_ ops_cost Maintenance cost \(y37_ Maint_cost  Table 6: Results of Mann-Whitney test for cause s and impacts of deviation-related AA complexity  Overlap/redundancy \(gp3_overlap_count 22 22 Df 216 001 032 007 Asymp. Sig 3.066 13.139 6.862 9.791 2 N Median 90 81 37 59 79 78 61 67 34 80 2.2000 1.0000 90.4420 96.6000 2.6000 2.5000 129.9850 248.7000 34 80 Mean rank 129.29 113.80 82.76 87.25 34 137.18 144.50 85.66 108.10 80 86 85 56 58 35 79 2.2000 1.0000 55.7705 81.3000 35 79 118.22 110.61 65.14 79.82 35 79  Not applicable Not applicable Business requirements Causes of complexity Impacts of complexity  No. of IB products covered \(y24_ _IB_bankprod Application age y14_age No. of user departments y19_#_ user_dpts No. of IB process covered \(y26_ _IB_bankproc Operations cost \(y36_ ops_cost Maintenance cost \(y37_ Maint_cost  Table 7: Results of Kruskal-Wallis test for causes and impacts of overlap-/redundancy-related AA complexity Proceedings of the 42nd Hawaii International Conference on System Sciences - 2009 14 


  15 R EFERENCES    http://www.w3.org/XML/Schema   eb Orchestration with BPEL\224 http://www.idealliance.org/pa pers/dx_xml03 papers/0406-01/04-06-01.html  Hi bernat e hom e page www.hibernate.org   Al l a rd, Dan and Hut c herson, Joe, \223C om m uni cat i ons Across Complex Space Networks\224, IEEE Aerospace Conference, March 1-8, 2008  W e b Servi ce Defi ni t i on Language http://www.w3.org/TR/wsdl   B a uer, C h ri st i a n and Ki ng Javi n Java Persi s t e nce for Hibernate, New York: Manning Publications, 2007 7] \223Software Agents An Overview\224 http://www.sce.carleton.ca/netm anage/docs/AgentsOverview ao.html  e thodology.org  http://www.riaspot.com artic les/entry/What-is-Ajax  http://www.json.org 11 h ttp to m cat.ap ach e.o r g   12] http://java.sun com/products/servlet  http://www.w3.org/Sty le/CSS    B IOGRAPHY  Dan Allard has worked as a software engineer at the Jet Propulsion Laboratory for the past 17 years.   He currently leads the development of core JPL accountability systems applications and infrastructure Other recent work includes the development of a message-based ground data system for the Mars Science Laboratory as well as research and development of ontologybased distributed communications     Dr. Charles D \(Chad\ards, Jr received his A.B degree in Physics from Princeton University in 1979 and his Ph.D. in Physics from the Calif ornia Institute of Technology in 1984.  Since then he has worked at NASA\222s Jet Propulsion Laboratory, where he currently serves as Manager of the Mars Network Office and as Chief Telecommunications Engineer for the Mars Exploration Program, leading the development of a dedicated orbiting infrastructure at Mars providing essential telecommunications and navi gation capabilities in support of Mars exploration.  Prior to that he managed the Telecommunications and Mission Operations Technology Office, overseeing a broad program of research and technology development in support of NASA\222s unique capabilities in deep space communications and mission operations.  Earlier in his career, Dr. Edwards worked in the Tracking Systems and Applications section at JPL where he carried out research on novel new radio tracking techniques in support of deep space navigation, planetary science, and radio astronomy  


  16  


Thank you Questions 


 18  Astronautical Congress Valencia, 2006 27  Bu reau  In tern atio n a l d e s Po ids et Mesures. \(2 008  August\SI Base Units. [On http://www.bipm.org/en/si/base_units   B IOGRAPHY  Author, Karl Strauss, has been employed by the Jet Propulsion Laboratory for over 22 years.  He has been in the Avionics Section from day One.  He is considered JPL\222s memory technology expert with projects ranging from hand-woven core memory \(for another employer\o high capacity solid state designs.  He managed the development of NASA\222s first Solid State Recorder, a DRAM-based 2 Gb design currently in use by the Cassini mission to Satu rn and the Chandra X-Ray observatory in Earth Orbit.  Karl was the founder, and seven-time chair of the IEEE NonVolatile Memory Technology Symposium, NVMTS, deciding that the various symposia conducted until then were too focused on one technology.  Karl is a Senior IEEE member and is active in the Nuclear and Plasma Scie nce Society, the Electron Device Society and the Aerospace Electronic Systems Society Karl is also an active member of SAE Karl thanks his wonderful wife of 28 years, Janet, for raising a spectacular family: three sons, Justin, Jeremy Jonathan.  Karl\222s passion is trains and is developing a model railroad based upon a four-day rail journey across Australia\222s Northern Outback   


 19 Bollob·s, B. 2001. Random Graphs. Cambridge University Press; 2nd edition. 500pp  Cawley, G. C., B. L. C. Talbot, G. J. Janacek, and M. W Peck. 2006. Sparse Bayesian Ke rnel Survival Analysis for Modeling the Growth Domain of Microbial Pathogens  Chiang C. L. 1960. A stochastic study of life tables and its applications: I. Probability distribution of the biometric functions. Biometrics, 16:618-635  Cox,  D. R. 1972. Regression models and life tables J. R Stat. Soc. Ser. B 34:184-220  Cox, D. R. 1975.   Partial likelihood Biometrika 62:269276  Cox, D. R. & D. Oakes. 1984 Analysis of Survival Data  Chapman & Hall. London  Cressie, N. A. 1993 Statistics for Spatial Data John Wiley Sons. 900pp  Duchesne, T. 2005. Regression models for reliability given the usage accumulation history. In "Modern Statistical and Mathematical Methods in Reliability". Edited by A. Wilson N. Limnios, S. Kelly-McNulty Y. Armijo. pp.29-40. World Scientific, New Jersey  Eleuteri, A., R. Tagliaferri, L. Milano, G. Sansone, D D'Agostino, S. De Placido,  M. Laurentiis. 2003.  Survival analysis and neural networks. Proceedings of the International Joint Conference on Neural Networks, Vol. 4 20-24 July 2003 Page\(s\:2631 - 2636  Ellison, E., L. Linger, and M Longstaff. 1997.  Survivable Network Systems: An Emerging Discipline, Carnegie Mellon, SEI, Technical Report CMU/SEI-97-TR-013, 1997  Fleming, T. R. & D. P. Harrington. 1991. Counting process and survival analysis. John Wiley & Sons. 429pp  Graver, J. and M. Sobel 2005. You may rely on the Reliability Polynomial for much more than you might think Communications in Statistics: Theory and Methods  34\(6\1411-1422  Graves, T. and M. Hamada. 2005. Bayesian methods for assessing system reliability: models and computation. In Modern Statistical and Mathematical Methods in Reliability". Edited by A. Wilson, et al. pp.41-53  Grimmett, G. 2006 The Random-Cluster Model Springer  Grimmett, G. 1999 Percolation Springer  Hougaard, P. 2000. Analysis of Multivariate Survival Data Springer. 560pp  Ibrahim, J. G., M. H. Chen and D. Sinha. 2005. Bayesian Survival Analysis.  Springer. 481pp  Jin Z. 2005. Non-proportional semi-parametric regression models for censored data. In "Modern Statistical and Mathematical Methods in Reliability". Edited by A. Wilson N. Limnios, S. Kelly-McNulty, Y. Armijo. pp.279-292 World Scientific  Kalbfleisch, J. D. & R. L. Prentice. 1980 The Statistical Analysis of Failure Time Data John Wiley & Sons.  New York. 1980  Kalbfleisch, J. D. &  R. L. Prentice, 2002. The Statistical Analysis of Failure Time Data.  Wiley-InterScience, 2nd ed 462pp  Lisboa, P. J. G. and H. Wong. 2001. Are neural networks best used to help logistic regression? Proceedings of International Joint Conference on Neural Networks, IJCNN 01. Volume 4, 15-19,  July 2001. Page\(s\:2472 - 2477 vol.4  Kauffman, R. J. and B. Wang. 2002. Duration in the Digital Economy. Proceedings of th e 36th Hawaii International Conference on System Sciences \(HICSSí03\ Jan 2003  Kaplan, E. L. & P.  Meier.  1958.  Nonparametric estimation from incomplete observations J. Amer. Statist. Assoc  53:457-481  Klein, J. P. and P. K. Goel 1992. Survival Analysis: State of the Art.  Kluwer Academic Publishes. 450pp  Klein, J. P. and  M. L Moeschberger. 20 03. Survival analysis techniques for ce nsored and truncated data Springer  Krings, A. and Z. S. Ma. 2006.  "Fault-Models in Wireless Communication: Towards Survivable Ad Hoc Networks MILCOM 2006, Military Communications Conference, 2325 October, 7 pages, 2006  Krings, A. W. 2008.  Survivable Systems.  in Information Assurance: Dependability and Security in Networked Systems Yi Qian, James Joshi, David Tipper, and Prashant Krishnamurthy, Morgan Kaufmann Publishers. \(in press  Lawless, J. F. 1982. Statistical models and methods for lifetime data.  John Wiley & Sons. 579pp  Lawless, J. F. 2003. Statistical models and methods for lifetime data.  John Wiley & Sons. 2nd ed. 630pp  Li, M. and P. Vitanyi. 1997. Introduction to  Kolmogorov Complexity and Its Applications. 2nd ed, Springer  Ma, Z. S. 1997.  Survival analysis and demography of Russian wheat aphid populations.  Ph.D dissertation, 307pp University of Idaho Moscow, Idaho, USA 


 20 Ma, Z. S., and E. J. Bechinski. 2008.  Developmental and Phenological Modeling of Russian Wheat Aphid Annals of Entomological Soc. Am In press  Ma, Z. S. and A. W. Krings. 2008a. The Competing Risks Analysis Approach to Reliability Survivability, and Prognostics and Health Management.  The 2008 IEEEAIAA AeroSpace Conference. BigSky, Montana, March 18, 2008. \(In Press, in the same volume  Ma, Z. S. and A. W. Krings 2008b. Multivariate Survival Analysis \(I\e Shared Frailty Approaches to Reliability and Dependence Modeling. The 2008 IEEE-AIAA AeroSpace Conference. BigSky Montana, March 1-8, 2008 In Press, in the same volume  Ma, Z. S. and A. W. Krings. 2008c. Multivariate Survival Analysis \(II\ Multi-State Models in Biomedicine and Engineering Reliability. 2008 IEEE International Conference on Biomedical Engineering and Informatics BMEI 2008\27th-30th, 2008 Accepted   Mani, R., J. Drew, A. Betz, P. Datta. 1999. Statistics and Data Mining Techniques for Lifetime Value Modeling ACM Conf. on Knowledge Discovery and Data Mining  Mazzuchi, T. A., R Soyer., and R. V Spring. 1989. The proportional hazards model in reliability. IEEE Proceedings of Annual Reliability and Maintainability Symposium pp.252-256  Meeker, W. Q. and L. A. Escobar. 1998. Statistical Methods for Reliability Data. Wiley-Interscience  Munson, J. C. 2003. Software Engineering Measurement Auerbach Publications  Nelson, W. 1969. Hazard plotting for incomplete failure data J. Qual. Tech 1:27-52  Nakagawa, T. 2006.  Shock and Damage Models in Reliability Theory. Springer  Osborn, B. 2005. Leveraging remote diagnostics data for predictive maintenance.   In "Modern Statistical and Mathematical Methods in Reliability". Edited by A. Wilson N. Limnios, S. Kelly-McNulty, Y. Armijo. pp. 353-363  Pena, E. A. and E. H. Slate. 2005. Dynamic modeling in reliability and survival analysis. In "Modern Statistical and Mathematical Methods in Reliability". Edited by A. Wilson N. Limnios, S. Kelly-McNulty, Y. Armijo. pp.55-71  Reineke, D. M., E. A. Pohl, and W. P. Murdock. 1998 Survival analysis and maintenance policies for a series system, with highly censore d data.  1998 Proceedings Annual Reliability and Maintainability Symposium. pp 182-188  Schabenberger, O. and C. A. Gotway. 2005. Statistical Methods for Spatial Data Analysis.  Chapman & Hall/CRC  Severini, T. A. 2000. Likelihood methods in statistics Oxford University Press  Shooman, M. L. 2002. Reliability of Computer Systems and Networks: Fault Tolerance, Analysis and Design. John Wiley and Sons. 551pp  Stillman, R. H. and M. S. Mack isack, B. Sharp, and C. Lee 1995. Case studies in survival analysis of overhead line components. IEE Conferen ce of the Reliability and Distribution Equipment. March 29-31, 1995. Conference Publication No. 406. pp210-215  Therneau, T. and P. Grambsch. 2000 Modeling Survival Data: Extending the Cox Model Springer  Wilson, A.  N. Limnios, S Kelly-McNulty, Y. Armijo 2005. Modern Statistical and Mathematical Methods in Reliability. World Scientific, New Jersey  Xie, M. 1991. Software Reliability Modeling. World Scientific Press    B IOGRAPHY   Zhanshan \(Sam\ Ma holds a Ph.D. in Entomology and is a Ph.D. candidate in Computer Science at the University of Idaho. He has published approximately 30 journal and 30 conference papers, mainly in the former field.  Prior to his recent return to academia, he worked as senior network/software engineers in software industry.  His current research interests include reliability and survivability of wireless sensor networks, fault tolerance survival analysis, evolutionary game theory, evolutionary computation and bioinformatics  Axel W. Krings is a professor of Computer Science at the University of Idaho.  He received his Ph.D. \(1993\ and M.S 1991\ degrees in Computer Science from the University of Nebraska - Lincoln, and his M.S. \(1982\ in Electrical Engineering from the FH-Aachen, Germany.  Dr. Krings has published extensively in the area of Computer Network Survivability, Security, Fault-Tolerance and Realtime Scheduling. In 2004/2005 he was a visiting professor at the Institut d'Informatique et MathÈmatiques AppliquÈes de Grenoble, at the Institut National Polytechnique de Grenoble, France.  His work has been funded by DoE/INL DoT/NIATT, DoD/OST and NIST 


