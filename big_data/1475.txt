Elastic Data Partitioning for Cloud-based SQL Processing Systems\nLipyeow Lim\nUniversity of Hawai‘i at Ma¯noa\nHonolulu, HI 96822, USA\nlipyeow@hawaii.edu\nAbstract—One of the key advantages of cloud computing is\nthe elasticity in which computing resources such as virtual\nmachines can be increased or decreased. Current state-of-\nthe-art shared-nothing parallel SQL processing systems, on\nthe other hand, are often designed and optimized for a ?xed\nnumber of database nodes. To take advantage of the elasticity\nafforded by cloud computing, cloud-based SQL processing\nsystems need the ability to repartition the data easily when the\nnumber of database nodes is scaled up or down. In this paper,\nwe investigate the problem of supporting elastic partitioning\nof data in cloud-based parallel SQL processing systems. We\npropose several algorithms and associated data organization\ntechniques that minimizes the re-partitioning of tuples and the\nmovement of data between nodes. Our experimental evaluation\ndemonstrates the effectiveness of the proposed methods.\nI INTRODUCTION\nCloud computing platforms whether public \(eg. Amazon\nEC2 economical\nway of sharing and managing computing resources [1]. In\nthe scienti?c computing community, where users deal with\nlarge amounts of data \(terabytes and above computing platform is espe-\ncially attractive given the exponential growth of scienti?c\ndata and the severely limited \(?nancial   of\nscienti?c users to pay for the computing resources they need,\nwhen they need it [4]. To take advantage of this “elasticity”\nafforded by a cloud computing platform, a cloud-based\nparallel SQL processing system needs to be able to expand\nand shrink the number of database nodes with ease [5].\nUnfortunately, conventional parallel SQL processing systems\nare designed to run on a dedicated cluster with a relatively\n?xed number of machines. Changing the number of ma-\nchines requires a re-deployment of the parallel database\nwhich typically involves a mostly manual process of \(1 2 the\nright database nodes and \(3 problem of\nsupporting elastic data partitioning in a cloud-based parallel\nDBMS. We consider shared-nothing parallel DBMSs de-\nployed on a cluster of virtual machines in a cloud computing\nplatform. Given that the data is partitioned among ? database\nnodes in a parallel DBMS, how do we ef?ciently scale this\nparallel database up or down to ? nodes? \(Replication of\ndata fragments is deferred to our future work through each tuple to re-partition the data?\nCan we minimize moving data between nodes during the\nre-organization? We describe a brute force, naive method\nfor performing the reorganization and propose three novel\nmethods that are signi?cantly more ef?cient in terms of\nthe number of tuples that need to be re-partitioned and the\nnumber of tuples that need to be moved.\nThe naive method \(Method N simple\nmatching between the current partitions or fragments and the\ntarget partitions or fragments. For range partitioning, these\npartitions or fragments can be represented as range intervals.\nCurrent ranges that straddle multiple target ranges require re-\npartitioning. Deciding which tuples to move to what database\nnodes depends on how nodes are assigned to the target\nranges. In the worst case, when resizing a parallel database\nto more nodes, the naive method needs to re-partition all\nthe tuples. We proposed a chunk-based method \(Method\nC parallel database is\nthen required to respect chunk boundaries, thus eliminating\nthe need for re-partitioning tuples during reorganization.\nMethod N and C both respect the partitioning constraint\nof the partitioning function. For example, for equi-width\npartitioning function, the equi-width constraint is preserved\nafter the data is reorganized for the target number of database\nnodes. In Method C the alignment to chunk boundaries\nmay cause the equi-width property to be approximated,\nbut it is still preserved. On one hand, the preservation\nof the partitioning constraint is a good property from a\nparallelization and load balancing perspective, on the other\nhand, it causes signi?cant data move during reorganization.\nTo minimize data movements, we propose a tree-based\nmethod \(Method T thereby avoiding\nthe arbitrary partitions in Method N and Method C that\nnecessitates the large amount of data movement. Method T\nsacri?ces the preservation of the partitioning constraint for a\nsimple way of deciding which fragment to split or which two\nfragments to merge. Partition boundaries remain more stable\nacross reorganization, thus minimizing data movements.\nOur contributions.\n? We introduce and highlight the important problem of\nsupporting elastic data partitioning in a shared-nothing,\n2013 IEEE International Conference on Big Data\n978-1-4799-1293-3/13/$31.00 ©2013 IEEE 8\ncloud-based parallel database system.\n? We describe a straightforward ‘naive’ algorithm for the\nproblem and propose three algorithms that signi?cantly\nreduces the need for re-partitioning and data move-\nments. Method C uses the idea of chunks and boundary\nalignment to eliminate re-partitioning. Method T uses\nthe idea of precomputing a tree of possible partitioning\nto minimize data movements.\n? We perform a comprehensive empirical evaluation of\nthe proposed methods and present a subset 


of repre-\nsentative results in this paper.\nThe rest of the paper is organized as follows. Section II\nformulates the problem and describes the proposed methods\nin greater detail. Section III presents an experimental evalu-\nation of the proposed methods. Section IV discusses related\nwork. We draw conclusions in Section V.\nII. OUR APPROACH\nA. Preliminaries\nA relation ? is a set of tuples that is horizontally   shared nothing parallel DBMS, each data fragment ??\nresides on a database node ? in the cluster. Each fragment\n?? is itself a set of tuples. A partitioning function ? is\na mapping of ? to {?1, ?2 given ? and can be\ndescribed by several parameters.\nPartitioning Type. Two partitioning types are currently in\nuse in state-of-the-art parallel databases. Range partitioning\nuses a set of disjoint ranges on the values of the partitioning\nkey \(described next partitions from a range partitioning\ncan be equivalently represented using the set of disjoint\nranges. Hash partitioning, on the other hand, uses a hash\nfunction on the partitioning key to compute a hash value\nfor a tuple that is used to decide which partition the tuple\nbelong to. In both partitioning types, the set of ranges or\nthe hash function is typically stored in the database catalog\nso that queries and updates can be routed to the appropriate\ndatabase nodes.\nPartitioning Key. A partitioning key consists of one or\nmore columns of a relation chosen to be the basis of par-\ntitioning the relation. For range partitioning, a comparison\nfunction must exist to sort the values of the partitioning key\ninto a total ordering. Without loss of generality, we consider\nsingle-column partitioning keys, because the columns in a\nmulti-column partitioning key can always be replaced with\na single concatenated column.\nPartitioning constraint. A partitioning constraint speci?es\nconditions that the partitions of a partitioning function need\n\(0,18]\nNode\nEqui?width\nRanges\n\(0,10]\n\(10,20]\n\(20,30]\n\(30,40]\nDatabase\nNode A C B\n7\n11\n13\n23\n23\n23\n24\n25\n26\n31\n3910\n9\n8\n7\n6\n5\n4\n3\n2\n1\n0\nRelation T\nRanges\nEqui?size\nf0\nf1\nf2\nf3\nf4 n4\nn3\nn2\nn1\nn0\nFragment\nf0\nf3\nf1\nFragment\nn0\nn2\nn3\nn1\nf2\nRID\n\(18,23]\n\(23,28]\n\(28,40]\nDatabase\nFigure 1. Range partitioning on relation ? with partitioning key\n?.?. The left side illustrates equi-size partitioning, the right side\nillustrates equi-width partitioning.\nto satisfy. The following are three partitioning constraints\nthat apply to range partitioning.\n? The equi-width constraint requires the range of values\nthat the partitioning key takes for each partition to be\nequal.\n? The equi-size constraint requires the size of each par-\ntition \(eg. in the number of tuples on each\npartition \(eg. average number of query hits per unit\ntime relation ? can be range partitioned\nwith the equi-width and equi-size partitioning constraint.\nEqui-width partitioning computes the ranges based purely\non the minimum and maximum possible values of the\npartitioning key. When the data distribution of the partition-\ning key is fairly uniform, the number of tuples associated\nwith each range would also be fairly uniform. When some\nskew is present, the variance in the number of tuples per\nrange becomes signi?cant. Equi-size partitioning attempts\nto remedy this problem by picking variable width ranges\nto ensure that the number of tuples associated with each\nrange is approximately uniform Obviously both partitioning\nconstraints can be foiled by extremely skewed distributions.\nFor example, when one particular value of the partitioning\nkey occurs in 50% of the relation, equi-size partitioning\ncannot split a single value into two “ranges”. Equi-load\npartitioning is similar to equi-size except that instead of\nbalancing the number of tuples per range, it balances some\nload measure such as number of query hits etc Note that\nother partitioning constraints are possible depending on the\napplication and requirements.\nA partitioning function constraint\non a user-chosen partitioning attribute ?. In this paper, the\nrelation ? and the partitioning attribute ? often remains\nconstant in the equations and algorithms, hence, we will\nomit relation name and partitioning attribute arguments or\nsubscripts for readability. We denote the fragments resulting\nfrom applying the partitioning function ranges or\nintervals on the partitioning attribute is denoted as ??. In\nthe case of hash partitioning, the notation ?? will denote\nthe set of bit strings that encode the address of the hash\nbucket. In most cases there will be a one-to-one corre-\nspondence between ranges \(or hash buckets there is signi?cant skew in the values of\nthe partitioning key, it is possible that two fragments hence\ndatabase nodes or\nhash bucket exposition, we assume a\none-to-one correspondence between ranges \(or hash buckets fragments and database nodes.\nHence fragments and ranges \(or hash buckets in the context of range partitioning.\nInvestigating strategies for managing skewed non-one-to-one\ncorrespondences is part of our future work.\nProblem Statement. Without loss of generality 


consider a\nsingle relation ? that is initially partitioned into ? fragments\nand needs to be resized to fragments. Given\n? a relation ? ,\n? a partitioning function ? on a ?xed partitioning key,\n? an initial number of partitions ?,\n? an initial mapping of data fragments to ? database\nnodes partitions ?,\n?nd a mapping of {?1, ?2, . . . , ??} to {?1, ?2, . . . , ??},\nand a mapping of the ? data partitions to database nodes\nthat minimizes the number of tuples re-partitioned, and the\nnumber of tuples moved between database nodes.\nB. Method N: Naive Resize\nConsider a table ? that is initially partitioned into ndata partitions using range partitioning function ? on some\npartitioning key. These ? data partitions are then assigned\nto ? database nodes. Suppose we want to resize the number\nof partitions to ?. The following steps illustrates the naive\napproach.\n1 new database nodes to the\n? ranges using a heuristic such as maximizing the\nnumber of common tuples — the ASSIGNNODES\nalgorithm\n3 re-partitioned and/or moved\nto a different node — the NAIVERESIZERANGE al-\ngorithm\nStep 1 is straightforward Step 2 tries to assign existing\ndatabase nodes to the ? partitions and where ? > ?, new\nnodes are assigned as well. We formalize Step 2 in the node\nassignment problem: Given a ?-node database with ranges\n?? = {?1 and a target number of nodes ?\nwith ranges ?? = {?1, . . . , ?? , . . . , ??}, we wish to nd the\nassignment of nodes to the target ranges ?? .\nIn general, we would like to assign the ? nodes and add or\nremove the ????? nodes in order to optimize some measure\n\(in this case, maximize the number of common tuples\nbetween the assigned ranges and ?? according\nto the measure and assign common. The algorithm\nexamines all pairs of ranges between the current ? ranges\nand the target ? ranges. The pairs are sorted in decreasing\norder of the number of common tuples. The current nodes\nthat have not been assigned are assigned to the range with\nthe largest number of common tuples. After all current\nnodes have been assigned, target ranges that do not have\nan assigned node are assigned new nodes. The conceptual\ncross product in the ASSIGNNODES algorithm to ?nd all\noverlapping pairs can be implemented very ef?ciently using\na linear scan similar to merging two sorted lists. Finding the\nnumber of common tuples can also be approximated using\nhistogram techniques [8] in practice.\nAt the end of Step 2, we have the current ranges ?? with\ntheir node assignments and the target ranges ?? with their\nnode assignments. Step 3 uses the NAIVERESIZERANGE\nAlgorithm to match the current and target ranges in order to\nmove and/or re-partition the tuples associated with a current\nnode. The algorithm ?rst deals with all the current ranges\nthat are completely contained in a target range. The tuples\nassociated with these fully contained ranges do not need to\nbe re-partitioned, but moved to the target node if their target\nnode is different. The algorithm then proceeds to deal with\nthose current ranges that are mapped to two or more target\nranges. The tuples associated with these current ranges need\nto be re-partitioned and moved to the target nodes \(if their\ntarget node is different from their current node Naive Resize assignments for decreasing the number of\ndatabase nodes from ?=5 to ?=4,\n?? = {[0, 8], \(8, 16], \(16, 24], \(24 32], \(32, 40]} .\n?? = {[0, 10], \(10, 20], \(20, 30], \(30, 40]} .\n  4, 5} .\nThe NAIVERESIZERANGE algorithm would ?rst iterate over\ntarget ranges {\(0, 10], \(30, 40]}, because there exists some\ncurrent ranges that are fully contained in these target ranges,\n\(0, 8] ? \(0, 10] and \(32 40] ? \(30, 40].\nHowever, since these subsumed ranges map to the same\ndatabase nodes, no movement of tuples are required. The\nsecond part of the algorithm would iterate over the cur-\nrent ranges {[8, 16], \(16, 24], \(24 32]} because these ranges\nstraddle at least two target ranges each.\n10\n? For current range \(8, 16], the tuples will be re-\npartitioned to {\(0, 10], \(10, 20]} and tuples for \(0, 10]\nwill be moved to node 1.\n? For current range \(16, 24], the tuples will be re-\npartitioned to {\(10, 20], \(20, 30]} and moved to node\n2 and node 4 respectively.\n? For current range \(24, 32], the tuples will be re-\npartitioned to {\(20, 30], \(30, 40]} and the tuples for\n\(30, 40] will be moved to node 5.\nCompared to moving tuples from one database node to\nanother database node, re-partitioning is a relatively expen-\nsive operation. Our experiments on the Amazon EC2 cloud\nshowed that moving a TPC-H lineitem tuple between two\ninstances in the same U.S. east coast zone takes 0.0225 ms\non average and partitioning a lineitem tuple on a small on-\ndemand instance takes 0.0478 ms on average. Partitioning\nrequires every tuple to be scanned from disk, the value of the\npartitioning key accessed for partitioning, and then written\nout to disk. The re-partitioned tuples can then be moved in\na batch fashion to the corresponding target nodes.\nConsider the case where the same equi-width partitioning\nfunction is used to compute both the current and target\nranges. If the number of target partitions ? is greater than the\nnumber of current partitions ?, it is clear that all ? partitions\nneed to be re-partitioned. If ? is less than ?, the number of\ncurrent partitions that need to be re-partitioned is dependent\non the greatest common divisor 


between ? and ?. More\nformally,\n# partitions to be split =\n?\n?\n?\n0 ? = ?\n? ? < ?\n 1 fact, this characterization holds as long as the same\nrange partitioning function is used to compute the current\nand target ranges, irrespective of the partitioning constraint.\nObserve that the number of partitions that need to be split\nbecomes zero whenever ? is a multiple of ? and hence\n leads us to a method of\nresizing without re-partitioning tuples.\nC. Method C: Chunk-based Elastic Resize\nThe key ideas to a method of elastic resizing of a cloud-\nbased parallel DBMS without splits are \(1 the\ndata into ? ?ne-grained partitions called chunks \(? ? ?, ? ?\n 2 must align ranges\nto chunk boundaries. Since any changes to the ranges are\nalways aligned to chunk boundaries the tuples within a\nchunk are never re-partitioned.\nInitialization. An additional initialization step is required.\nThe data table is initially partitioned into ? chunks using any\nexisting range partitioning function. Subsequent partitioning\nwill need to use an approximate range partitioning function\nthat aligns ranges to chunk boundaries.\nChoosing ?. The parameter ? should be chosen as the\nmaximum number of database nodes that would ever be\ndeployed until the next major database re-organization when\nthe data can be re-partitioned according to a new ?. A large ?\nwould result in small chunks that could better isolate changes\nwhen resizing from ? to ?, but it also translates to more\nchunks that need to be managed by the database catalog.\nAlignment to chunk boundaries. A straightforward tech-\nnique for chunk boundary alignment would be to include a\nchunk in a range if at least 50% of the chunk overlaps with\nthe range. For example, to decide if a range \(0, 11.5] should\ninclude the chunk \(10, 12], we compute the percentage\noverlap \(11.5 10 0, 12 The subsequent range then starts at 12.\nResizing. The following steps outlines the chunk-based\nelastic resize approach.\n1 existing and/or new database nodes to the ?\nranges using the ASSIGNNODES algorithm.\n4 and the new ranges to decide\nwhich chunks need to be moved to a different node\nusing the chunk-based ELASTICRESIZERANGE algo-\nrithm\nSteps 1-2 are straightforward. Step 3 uses the same node\nassignment algorithm to obtain a node assignment for the ?\nranges. Step 4 uses the ELASTICRESIZERANGE algorithm\nwhich is a modi?ed version of the NAIVERESIZERANGE\nalgorithm. The main difference lies in how the two algo-\nrithms deal with current ranges that straddle two or more\ntarget ranges. In the chunk-based method, re-partitioning of\ntuples is no longer needed. Instead, ELASTICRESIZERANGE\niterates through each chunk in the current range, ?nds\nthe target range that the chunk maps to, and move the\nchunk to the node for that target range if the chunk is\non a different node. In another sense, we have replaced\ntuple-based re-partitioning to chunk-based re-partitioning If\neach chunk holds an average of ?? tuples, where ? is the\ntotal number of tuples in the relation, then chunk-based\nprocessing represents a factor of ?? improvement in re-\npartitioning cost.\nExample 2 \(Chunk-based Resize 0, 2.5], \(2.5, 5], . . . , \(37.5, 40 n?? = {[0, 10], \(10, 20], \(20, 30], \(30, 40]} ,\n?? = {[0, 7.5], \(7.5, 15], \(15, 25], \(25, 32.5], \(32.5, 40 n  contained\n11\nin a target range, ELASTICRESIZERANGE simply iterates\nthrough each range in ?? and perform the following.\n? For current range \(0, 10], the chunk \(7.5, 10] will be\nmoved to node 2.\n? For current range \(10 20], the chunks \(15, 17.5] and\n\(17.5, 20] will be moved to node 5.\n? For current range \(20, 30], the chunks 20, 22.5] and\n\(22.5, 25] will be moved to node 5.\n? For current range \(30, 40], the chunk \(30, 32.5] will be\nmoved to node 3.\nA natural question to ask next is whether the data\nmovements can be minimized. If we insist on the target\nranges satisfying the same partitioning constraint, then the\nanswer is unfortunately no If we are able to accept target\nranges that partially satisfy the partitioning constraint, tree-\nbased techniques can be used to reduce the amount of data\nmovement.\nD. Method T: Tree-based Elastic Resize\nIn the previous methods, the data of the partitioned\nrelation is re-distributed to satisfy the partitioning constraint\non the target ranges resulting in much data movements. In\nthe tree-based method, we relax the need to satisfy the par-\ntitioning constraint. In addition to the key ideas introduced\nin the chunk-based method the tree-based method relies on\nthe idea of a pre-computed hierarchy of ranges \(see Fig. 2 partitioning into ? or ? ranges corresponds to\n?nding a cover of \(internal the\nleaf nodes.\nInitialization. Before the parallel database is deployed on\n? nodes, the following steps are used to initialize the tree of\nranges.\n1 Choose ? to be a power of 2.\n2 with one of the ? chunks.\n3 internal fragments consists of the chunks asso-\nciated with the leaves descended from that \(internal FINDTREECOVER algorithm can be used.\nFinding a tree cover. The key algorithm in the tree-based\nmethod is the 


FINDTREECOVER algorithm Given a tree\nof ranges ? , the current set of ranges ??, and a target\nnumber of ranges we wish to ?nd a set of ? tree nodes\nthat subsumes or cover all the leaf nodes. Note that each\nleaf node is associated with a chunk and hence a chunk\nrange. The current set of ranges ?? is aligned to chunk\nboundaries and hence has a one-to-one correspondence to\na set of tree nodes. In this section we will refer to chunk\naligned nds a cover as\nfollows. Start with the current ranges as an initial cover. Let\n? be the number of tree nodes in the current cover. If ? < ?,\nincrease number of tree nodes in the cover by ?nding a tree\nnode in the current cover to split. If ? > ?, decrease number\nof tree nodes in the cover by ?nding the two sibling tree\nnodes in the current cover to merge. Repeat until ? = ?.\nHow do we pick the nodes for splitting or merging? The\nheuristic used for picking nodes can be used to approximate\nthe partitioning constraint.\n? Pick the tree node with the widest range to split. Pick\nthe two sibling nodes with the narrowest range to\nmerge.\n Pick the tree node with the most number of tuples to\nsplit. Pick the two sibling nodes with the least number\nof tuples to merge.\n? Pick the tree node with the most number of query hits\nto split. Pick the sibling nodes with the least number\nof query hits to merge.\nNote that using heuristics such as the above requires main-\ntaining a priority queue which could be expensive. A com-\nputationally simple heuristic would be to split the leftmost,\nhighest node in the tree that is in the current cover and to\nmerge the rightmost, lowest two siblings in the tree that is\nin the current cover.\nReturning to our discussion of Step 3 of the initialization,\nwe can simply call FINDTREECOVER using the root node\nof the tree as the current cover and the algorithm will keep\nsplitting till ? nodes are obtained.\nResize. The following steps outline the tree-based resize\nmethod for resizing from ? partitions to ? partitions. The\nchunk ranges ?? and the tree of ranges ? are assumed to\nbe stored in the database catalog.\n1 algorithm\n2 alternative to the steps outline above is to keep\ntrack of the current ranges as a list of tree nodes. Let be\nthe number of current ranges. If ? < ?, increase number\nof database nodes by ?nding a tree node in the current\nranges to split, and move the chunks associated with the\nright child to a new database node. If decrease number\nof database nodes by ?nding the two sibling tree nodes to\nmerge, and move the chunks associated with right sibling to\nthe left sibling \(the database node associated with the left\nsibling gets promoted”, i.e., associated with the parent tree\nnode performed one tree node at a time, it is possible that a\nparticular chunk can be moved multiple times compared to\nthe Step 2 using the ELASTICRESIZERANGE algorithm.\nExample 3 \(Tree-based Resize a\ntable ? with partitioning attribute values from \(0, 40]. Sup-\npose we choose ? = 16 and use the equi-width partitioning\n12\n\(0,20]\n\(0,2.5] \(2.5,5] \(5,7.5] \(7.5,10] \(10,12.5] \(12.5,15] \(15,17.5] \(17.5,20]\n\(5,10]\(0,5 10,15] \(15,20]\n\(0,10] \(10,20]\nFigure 2. Example of a tree of ranges.\nfunction to obtain the chunk ranges,\n 0, 2.5], \(2.5, 5], . . . , \(37.5, 40]} .\nThe binary tree of ranges for ?? is illustrated in Fig 2.\nSuppose we wish deploy the parallel database with ? =\n4 database nodes initially. Using the split-leftmost-highest\nnode heuristic, we obtain the following covering ranges,\n?? = {[0, 10], \(10, 20], \(20 30], \(30, 40]} .\nSuppose, we wish to increase the number of database nodes\nto ? = 5. The FINDTREECOVER algorithm picks a range\nfrom among ?? to split. If we use the split-leftmost-highest\nnode heuristic, the range 0, 10] will be split into \(0, 5] and\n\(5, 10], resulting in\n?? = {[0, 5], \(5, 10], \(10, 20], \(20, 30], \(30 40]} .\nIf we use the heuristic that picks the range with the most\ntuples, then using the data in Fig. 1, the range \(20, 30] will\nbe chosen, because it contains 6 tuples. Hence,\n??? = {[0, 10], \(10, 20], \(20, 25], \(25 30], \(30, 40]} .\nUsing ELASTICRESIZERANGE on ??? , a new database\nnode is instantiated and only the two chunks\n{\(25, 27.5], \(27.5, 30]} is moved to the new database\nnode.\nE. Implications for Query Performance\nConsider a simple query that scans the entire partitioned\nrelation ? = ?1 ??2 ? . . .???. The running time of a table\nscan query  max??=1 turn is dependent on the partitioning\nconstraint. A detailed exposition of the relationship between\nparallel query performance and partitioning constraint is\nbeyond the scope of this paper. When the partitioning key\nis relatively uniform, equi-width partitioning would ensure\nrelatively balanced partitions. Method N and C tries to\npreserve the partitioning constraint and hence would also\npreserve the query performance characteristics Method T,\non the other hand, does not try to preserve the partitioning\nconstraint. The variance in the partition sizes would depend\non the heuristic used to pick splitting/merging nodes. For\nthe simple split-leftmost-highest and merge-rightmost-lowest\nheuristic, the difference in partition sizes for uniform data\ncan be bounded by a factor of two, since the partitions for a\n?-node database correspond to tree nodes at 


the ?log ?? and\n?log ?? levels only. While this is true for equi-width range\npartitioning on uniform data hash partitioning, on the other\nhand, is inherently random and the partition sizes are not\nbalanced in general.\nIII. EXPERIMENTAL EVALUATION\nWe evaluated the effectiveness and ef?ciency of the\nproposed methods on the TPC-H benchmark data as well\nas synthetically generated data from the uniform and Zipf\ndistributions.\nFor the TPC-H data, we used the lineitem table generated\nusing a scale factor of 0.01 and 1.0 \(henceforth denoted\nas TPC-H\(0.01 1.0 MB of data,\nwhile the table with scale 1.0 contains 6,001,215 rows\nand about 759 MB of data. We experimented using the\nattributes L_ORDERKEY, L_PARTKEY, L_SUPPKEY as\nthe partitioning key.\nThe synthetic data are generated by drawing the values\nof the partitioning key from the uniform distribution and\nthe Zipf distribution. A ‘uniform’ dataset is generated by\ndrawing 100,000 random variates between zero and 500\nfrom a uniform distribution. A ‘Zipf 1’ dataset is generated\nby drawing 10,000 random variates in the same range from\na Zipf distribution with exponent one. A ‘Zipf 2’ dataset is\ngenerated by drawing 10,000 random variates in the same\nrange from a Zipf distribution with exponent two. Note\nthat since Zipf random variates represent the rank and not\nthe data value itself, we randomly permute the generated\nranks to simulate values. For random datasets, experiments\nare run over 10 randomly generate datasets with the same\nparameters in order to observe average behavior.\nFour performance metrics are used: \(1 2 elapsed running time in a\nparallel execution, \(3 another, \(4 as a percentage of the total number\nof tuples in the table. The number of tuples re-partitioned\ncounts the number of tuples of which the value of the\npartitioning key needs to be examined in order to map the\ntuples to the appropriate partition. We present a subset of\nour experimental results due to space constraints.\nA End-to-End Ef?ciency\nIn this experiment, we measure the elapsed time of\nusing our proposed method to resize a cloud-based parallel\ndatabase from ? nodes to ? nodes running on the Amazon\nEC2 cloud. For initialization, we partition and load the TPC-\nH\(1.0 on-demand instances. The partitioning key\nis L_ORDERKEY and the partitioning constraint is equi-\nwidth. We then use the proposed method to elastically resize\nthe database to ? instances. If ? > ?, we assume that\nadditional EC2 instances are already started and do not count\nthe time required for EC2 instances to be started. We also\nassume that the data fragment at each database node also\nexists as a CSV ?le at that node. We measure the following,\n? the running time of the proposed method \(algorithm data fragment for target\npartitions at each node,\n? the time to send the re-partitioned data to the target,\n the time to load the re-partitioned data into the database\ninstance at the target node,\n? the total time required if all the steps were executed\nserially, and\n? the total time required if the re-partitioning, move and\nload steps are executed concurrently at each node in\nparallel.\nTable I shows the results for ?=2, ?=11 For Method\nC and T, 128 chunks were used. The ?rst observation is\nthat the time required for executing the proposed methods\nis negligible compared to the time required to re-partition,\nmove or load the data fragments Among the proposed\nmethods, Method T is the speediest. Second, re-partitioning\nis more expensive to moving and loading data. Since ? is\nlarger than ?, every tuple needs to be re-partitioned under\nMethod N. Method C and T keep track of tuples at the chunk\nlevel, and thus avoid the costly re-partitioning operation.\nThird, the time for moving and loading is roughly the\nsame for Method N and C, but Method T is almost 40\nseconds faster. This is due to number of tuples that needed\nto be moved under the three methods: 4,909,377 for Method\nN, 4,875,307 for Method C, and 4,125,866 for Method T.\nFourth, since ?=2, the level of parallelism is limited to two.\nTable II shows the results for ?=11, ?=7. For Method C\nand T, 128 chunks were used. In this case, Method T is the\nclear winner, since it minimizes the number of tuples that\nneed to be moved. In fact, only 4 out of the 11 partitions\nneed to be moved. For Method N and C, 6 out of the 11\npartitions need to be split and moved. The number of tuples\nmoved are 3,272,833 for Method N, 3,187,478 for Method\nC, and 1,500,796 for Method T. The amount of concurrency\nfor Method N, C, T is 6,6,4 respectively which accounts for\nthe improved parallel time compared to the previous case.\nIn both cases, we observe speedups of 2 and 3 for Method\nC and Method T over the naive Method N. We also note that\nthe number of tuples moved and the number of tuples re-\npartitioned are good predictors of performance; hence, we\nfocus on these two measures for the rest of the paper.\nB. Elasticity Characteristics\nWe wish to understand how “elastic” we can scale our\ncloud-based parallel database from a ?xed number of\n 0\n 20\n 40\n 60\n 80\n 100\n 0  10  20  30  40  50  60\nPe\nrc\nen\nta\nge\n o\nf t\nab\nle\n m\nov\ned\nTarget number of partitions\nMethod C 64\nMethod C 128\nMethod C 256\nMethod T 64,128,256\nFigure 4. Elasticity of scaling from 32-nodes to {2, 3, 4, . . . , 256}-\nnodes for TPC-H\(0.01 to varying ? numbers of nodes. We measure the num-\nber of tuples moved and re-partitioned as a percentage of 


the\ntotal number of tuples for ?=32 and ??{2, 3, 4, . . . , 256}.\nFor Method C and T, 256 chunks were used.\nFig. 3\(a b 0.01 curves in Fig. 3\(a have gradual slopes as\n????? increases. Note that Method T is almost always better\nin terms of the number of tuples moved, but Method N\nand T are about the same. Recall that Method N requires\nre-partitioning whereas Method C and T does not. Hence\nMethod C is still superior to Method N. Fig. 3\(b the re-partitioned tuples as governed\nby Eqn. 1. Recall that when ? > ?, all tuples need to be\nre-partitioned under Method N.\nFig. 3\(c f Uniform’, ‘Zipf 1’, and ‘Zipf\n2’ represents datasets with increasing skew. Observe that the\ncurves shift lower with increasing skew. While this seems to\nbe a positive, but puzzling result, it can be explained by a\nsmall number of partitions holding a large portion of the data\nin skewed datasets. For equi-width partitioning, the effect is\nthat the likelihood of moving a partition with a small number\nof tuples increases with skew, resulting in less tuples moved\nin total. Fig 3\(f re-partitioned tuples signi?cantly for Method N.\nNumber of Chunks. We also investigated the effect of\nthe number of chunks \(the parameter ? in Method C and\nT different\nvalues of ? for the TPC-H\(0.01 256}. Method T\nis not sensitive to the number of chunks at all, because once\nthe tree of ranges is constructed, the tuple movements are\n?xed. Method C, on the other hand, moves less tuples with\nlarger because more chunks translates to smaller chunk\nsize and better isolation of the fragments that need to be\nsplit and moved.\n14\nMethod N Method C Method T\nAlgorithm 3.369 3.526 0.006\nRe-partition 363.657 0 0\nMove+Load 266.452 261.236 226.848\nTotal Serial 533.478 264.762 226.854\nTotal Parallel 321.391 134.290 120.899\nTable I\nTIME \(SECONDS 3.909 0.002\nRe-partition 167.892 0 0\nMove+Load 203.558 204.611 85.867\nTotal Serial 533.478 208.520 85.869\nTotal Parallel 66.730 39.795 22.608\nTable II\nTIME \(SECONDS 40\n 60\n 80\n 100\n 0  50  100  150  200  250  300\nPe\nrc\nen\nta\nge\n o\nf t\nab\nle\n m\nov\ned\nTarget number of partitions\nMethod N\nMethod C\nMethod T\n\(a 0.01 25  30  35  40\nPe\nrc\nen\nta\nge\n o\nf t\nab\nle\n re\npa\nrti\ntio\nne\nd\nTarget number of partitions\nMethod N\n\(b TPC-H\(0.01 o\nf t\nab\nle\n m\nov\ned\nTarget number of partitions\nMethod N\nMethod C\nMethod T\n\(c 40\n 60\n 80\n 100\n 0  50  100  150  200  250  300\nPe\nrc\nen\nta\nge\n o\nf t\nab\nle\n m\nov\ned\nTarget number of partitions\nMethod N\nMethod C\nMethod T\n\(d 250  300\nPe\nrc\nen\nta\nge\n o\nf t\nab\nle\n m\nov\ned\nTarget number of partitions\nMethod N\nMethod C\nMethod T\n\(e 2 : Tuples moved\n 0\n 20\n 40\n 60\n 80\n 100\n 120\n 0  5  10  15  20  25  30  35  40\nPe\nrc\nen\nta\nge\n o\nf t\nab\nle\n re\npa\nrti\ntio\nne\nd\nTarget number of partitions\nMethod N Uniform\nMethod N Zipf 1\nMethod N Zipf 2\n\(f Uniform+Zipf : Re-partitioned Tuples\nFigure 3. Elasticity of scaling from 32-nodes to {2, 3, 4 256}-nodes for TPC-H\(0.01 platform for\ndata management has focused mainly on building systems\nand identifying challenges [9], [10 11], [1], [5], [12].\nOur work is complementary in that the proposed techniques\ncould be applied to cloud data management systems that use\na partitioned, relational data model.\nA closely related area of theoretical research is the prob-\nlem of data migration in storage area networks \(SAN    migration problem computes a migration\nplan for moving data objects over a network of storage\ndevices from one con?guration to another. Even if we\nconceptualize the tuples of our partitioned relation as “data\nobjects” in the data migration problem, there are signi?cant\ndifferences. First, our problem is more general and includes\nnot just the data migration problem as a subproblem, but\nthe subproblem of computing the next con?guration given\ncertain constraints. Second, previous theoretical formulation\nof the data migration problem has assumed that each device\ncan only handle one object at one time. This is true in the\ncontext of SAN, but not true in the context of a parallel SQL\nprocessing system. Each node in the SQL processing system\nis capable of multi-threading and processing multiple objects\nat a time. Third, data repartitioning \(and not data movement tuple\nrepartitioning is similar in spirit to techniques used in\ntext indexing. Glimpse [16] uses chunking to reduce the\ngranularity of the pointers in an inverted index so that the\npointers point to pages rather than to individual words in the\ntext. Similarly, landmarks are used in [17], [18] to speed up\nupdate processing in inverted indexes.\nData partitioning is also closely related to histogram\nconstruction [8], [19]. Histograms partitions data into a set of\nbuckets and approximate the number of tuples in each bucket\nwith an average. We 


adopted some of the concepts and\nterminology for data partitioning from partitioning in his-\ntograms [19]. In contrast to histogram partitioning problem,\nthis paper addresses the orthogonal problem of migrating\none set of partitions to another. Our proposed Method T uses\na tree of partitions which in the case of range partitioning\ntype is similar to the hierarchical ranges used in [20] for\n15\nselectivity estimation.\nDynamic and/or on-line data partitioning using a query\nworkload has also been studied in [21], [22] for shared\nnothing databases. These approaches modify the number of\npartitions and the contents of each partition dynamically\naccording to a query workload. In this paper, we address\na different problem where a DBA would like to change the\nnumber of partitions either to save cost during non-peak\nperiods or to provision for anticipated load increase.\nV. CONCLUSION\nWe have highlighted an interesting problem of supporting\nelastic data partitioning in cloud-based parallel databases in\norder to exploit the elasticity feature of a cloud computing\nplatform. We proposed several methods to scale parallel\ndatabases from ? nodes to ? nodes. Method N does a naive\nand brute force matching of the existing ? data partitions to\nthe target ? data partitions while preserving the partitioning\nconstraint. Method C pre-partitions the data into ?ne-grain\nchunks and manages data partitions that are aligned and\nmapped to the chunks in order to avoid re-partitioning each\ndata tuple Method T improves on data movement by using\na hierarchy of pre-computed partitions. Scaling from ? to\n? must use a covering set of partitions from the tree. We\nhave implemented our proposed methods in a prototype and\nhave demonstrated its effectiveness and ef?ciency through\nextensive experimentation. As future work, we plan to\ninvestigate the issue of skewed data distributions as well\nas extensions to leverage replicated data fragments.\nREFERENCES\n[1] D. Agrawal, S. Das, and A. E. Abbadi, “Big data and cloud\ncomputing: New wine or just new bottles?” PVLDB, vol. 3,\nno. 2, pp. 1647–1648, 2010.\n[2] L. Wang, J. Tao, M. Kunze, A. Castellanos D. Kramer, and\nW. Karl, “Scienti?c cloud computing: Early de?nition and\nexperience,” in High Performance Computing and Communi-\ncations \(HPCC  B. Howe, M. Bal-\nazinska, and J. Gardner, “Analyzing massive astrophysical\ndatasets: Can pig/hadoop or a relational dbms help?” in\nCluster Computing and Workshops \(CLUSTER  Armbrust, A. Fox, R. Grif?th, A. D. Joseph, R. Katz,\nA. Konwinski, G. Lee, D. Patterson, A. Rabkin, I. Stoica and\nM. Zaharia, “A view of cloud computing,” Commun. ACM,\nvol. 53, no. 4, pp. 50–58, 2010.\n[5] S. Das, D Agrawal, and A. E. Abbadi, “Elastras: An\nelastic transactional data store in the cloud,” CoRR vol.\nabs/1008.3751, 2010.\n[6] M. T. ¨Ozsu and P. Valduriez, Principles of distributed\ndatabase systems \(2nd ed  systems: The\nfuture of high performance database systems,” Commun.\nACM, vol. 35, no. 6, pp. 85–98, 1992.\n[8 Y. Ioannidis, “The history of histograms \(abridged  Abouzeid, K. Bajda-Pawlikowski, D. Abadi, A. Silber-\nschatz, and A. Rasin, “HadoopDB: an architectural hybrid\nof MapReduce and DBMS technologies for analytical work-\nloads,” Proc. VLDB Endow., vol. 2, no. 1, pp 922–933, 2009.\n[10] A. Aboulnaga, Z. Wang, and Z. Y. Zhang, “Packing the most\nonto your cloud,” in CloudDB 09: Proceeding of the ?rst\ninternational workshop on Cloud data management. ACM,\n2009, pp. 25–28.\n[11] D Agrawal, A. E. Abbadi, S. Antony, and S. Das, “Data\nmanagement challenges in cloud computing infrastructures,”\nin DNIS, 2010, pp. 1–10.\n[12] S. Das, D. Agrawal, and A. E. Abbadi, “G-store: a scalable\ndata store for transactional multi key access in the cloud,” in\nSoCC, 2010, pp. 163–174.\n[13] J Hall, J. Hartline, A. R. Karlin, J. Saia, and J. Wilkes, “On\nalgorithms for ef?cient data migration,” in SODA Society\nfor Industrial and Applied Mathematics, 2001, pp. 620–629.\n[14] E. Anderson, J. Hall, J. Hartline, M Hobbs, A. Karlin, J. Saia,\nR. Swaminathan, and J. Wilkes, “An experimental study\nof data migration algorithms,” in Algorithm Engineering.\nSpringer Berlin / Heidelberg, 2001, vol. 2141, pp. 145–158.\n[15] S Khuller, Y.-A. Kim, and Y.-C. J. Wan, “Algorithms for data\nmigration with cloning,” in PODS. ACM, 2003, pp 27–36.\n[16] U. Manber and S. Wu, “Glimpse: A tool to search through\nentire ?le systems,” in USENIX Winter 1994, pp. 23–32.\n[17] L. Lim, M. Wang, S. Padmanabhan, J. S. Vitter, and R. C.\nAgarwal, “Dynamic maintenance of web indexes using land-\nmarks,” in WWW, 2003, pp. 102–111.\n[18] ——, “Ef?cient update of indexes for dynamically changing\nweb documents,” World Wide Web Journal, vol. 10, no. 1, pp.\n37–69, March 2007.\n[19] V Poosala, P. J. Haas, Y. E. Ioannidis, and E. J. Shekita,\n“Improved histograms for selectivity estimation of range\npredicates,” SIGMOD Rec., vol. 25, no. 2, pp. 294–305, 1996.\n[20] N. Koudas, S. Muthukrishnan, and D Srivastava, “Optimal\nhistograms for hierarchical range queries \(extended abstract 196–204.\n[21] T. Rabl, M. Pfeffer, and H. Kosch, “Dynamic allocation in a\nself-scaling cluster database Concurrency and Computation:\nPractice and Experience, vol. 20, no. 17, pp. 2025–2038,\n2008.\n[22] A. Jindal and J. Dittrich, “Relax and let the database do\nthe partitioning online,” in Enabling Real-Time Business\nIntelligence. Springer Berlin Heidelberg, 2012, vol. 126,\npp. 65–80.\n16\n 





pp. 299–319, 2010.\n[21] C. Liu and J. W. Layland Scheduling Algorithms for Multipro-\ngramming in a Hard Real-Time Environment, Journal of ACM,\nVol.20, No.1, pp. 46-61, 1973.\n[22] Y. Fu, N. Kottenstette, Y. Chen, C Lu, X. D. Koutsoukos and\nH. Wang, Feedback Thermal Control for Real-Time Systems,\nIEEE International Conference on Real-Time and Embedded\nTechnology and Applications Symposium \(RTAS 


  11    Project Management 17.2 M Project Systems Engineering 16.9 M Mission Assurance 15.0 M Science $11.3 M Payload System 65.9 M Flight System 211.3 M Mission Operations Preparation 16.8 M Ground Data Systems 14.9 M ATLO $19.4 M Education and Public Outreach 1.2 M Mission and Navigation Design 10.0 M Development Reserves \(30 119.9 M Total 520.0 M  Table 6 Development Cost for Phases A-D  Payload Systems Cost  The cost of the payload system is primarily the instrumentation needed to ach ieve the science objectives and ends up being a relatively small fraction of the total cost, as presented in Table 7     High Resolution Multispectral Imager 20.4 M Thermal IR Spectrometer 12.0 M Dust Secondary Ion Mass Spectrometer 26.8 M UV Imaging Spectrograph 6.0 M Impactor capsules \(2 0.7 M Total 69.5 M  Table 7 Payload and Instrumentation Cost  Additional science instruments include Radio Science and Wide Angle Camera - not included in instrument cost calculation  Flight Systems Cost  The flight system, including th e entire spacecraft bus, is a significant fraction of our total budget as summarized in Table 8    Power $40.0 M C&DH $13.8 M Telecom $19.0 M Structures \(includes Mech. I&T 24.3 M Thermal $9.9 M Propulsion $20.1 M ACS $32.5 M Harness $2.1 M S/C Software 21.5 M Total 183.2 M  Table 8 Flight System Cost Summary  Operations Cost \(Phase E-F  Operation costs, including data analysis, is provided in Table 9       Project Management 9.1 M Project Systems Engineering 0.0 M Mission Assurance 0.5 M Science $19.8 M Mission Operations 51.1 M Ground Data Systems 7.6 M Education and Public Outreach 3.7 M Total \(15 91.8 M 


  12  Table 9 Operation Costs  7. Conclusions The SHOTPUT mission , its unique trajectory and potential encounter with six different small bodies will provide a novel view of the composition of the solar system. The science return from the mission will help answer questions on formation, composition and evolution of small bodies in our local neighborhood In addition, the team has proposed a mission that is within budget based on heritage instruments satisfying the decadal survey requirements. The opportunity for spectacular science return on this rare trajectory should not be missed The innovative SHOTPUT mission is truly one of a kind Acknowledgements The authors would like to thank Anita Sohus, Amber Norton and JPL Team X for their contributions to this work. Parts of this research were carried out at the Jet Propulsion Laboratory, California Institute of Technology, under a contract with the National Aeronautics and Space Administration References 1 o mmit t ee o n New Op po rtu n ities in  So lar System  Exploration: An Evaluation of the New Frontiers Announcement of Opportunity, \224 Opening New Frontiers in Space: Choices for the Next New Frontiers Announcement of Opportunity,\224 National Research Council, 2008   Exploration Survey, Space Studies Boa r d Division on Engineering and Physical Sciences, \223New Frontiers in the Solar System 224 National Research Council National Academies Press, 2003  3 A. M o rb id elli, H. F. Lev i so n, K. Tsiganis and R. Gomes 223Chaotic capture of Jupiter\222s Trojan asteroids in the early Solar System,\224 Nature vol 435, pp 462-465, 26 May 2005   C h e n g, \223Near Eart h As teroid Rendezvous: Mission Overview,\224 Space Sciences Revi ew, vol. 82, pp 3-29, 1997   M A Bar u cci, D P Cr uikshank S Mot t ola, M Lazzarin, \223Physical Properties of Trojan and Centaur Asteroids,\224 Asteroids III, pp 273-287, 2003  6  W.M. Grundy, J.A. Stansberry, K.S. Noll, D.C Stephens, D.E. Trilling, S.D Kern, J.R. Spencer,, D.P Cruikshanf, H.F. Levison  223The orbit, mass, size, albedo and density of \(65489\/Phorcys: A tidally-evolved binary Centaur,\224 Icaraus, vol. 191, pp 286-297, 2007    D.P C r ui ks han k et al  223C onst r ai nt s o n t h e C o m posi t i on of Trojan Asteroid 624 Hektor,\224 Icarus vol. 153, Oct. 2001 pp. 348-360   J H o rne r et al 223C onst r ai n t s fr om deut eri u m on t h e  formation of icy bodies in the Jovian system and beyond,\224 Planetary and Space Science vol. 56, Nov. 2008, pp. 15851595   M F  A\222 He arn M J S. Bel t on A  Delam e re, a n d W H Blume. Deep Impact: A Large-Scale Active Experiment on a Cometary Nucleus. Space Science Reviews, 117\(1 1\22621, 2005  10 Y.G. Fern\341n d e z, S.S. Sh eppard, and D.C. Jewitt.  The Albedo Distribution of Jovian Trojan Asteroids.  The Astronomical Journal, vol. 126, Sep. 2003, pp. 1563-1574  1 F. M a rza ri and H Sch o l l C a pt ure o f Tro j a n s by  a Growing Proto-Jupiter.  Icarus, vol. 131, Jan. 1998, pp. 4151  1 F. M a rc hi s et al S 20 06 6 24  1.  I A U C i rc., 8 7 3 2 1  2006  1 Ti scare n o M S an d R  M a l hot ra T h e Dy nam i cs o f  Known Centaurs.  The Astronomical Journal, vol. 126, Dec 2003, pp. 3122-3131   i A. et al. Sour ce regions and time scales for the delivery of water to Earth. Meteoritics & Planetary Science, vol. 35, Nov. 2000, pp. 1309-1320             


  13 B IOGRAPHY  JPL Planetary Science Summer Sc hool August 2008 class   Figure 9 SHOTPUT Mission Design Team   


  14  
 


Available Array Energy 60297 W-hr Battery Recharge Energy Losses 93 W-hr Shunt Energy Losses 20% Battery W-hr 187 W-hr Remaining Electrical Energy 60017 W-hr Power Conversion Losses 80% Efficiency 12003 W-hr Harness Losses \(4 Available Diurnal Load Energy \(CBE Average Load Energy Supported 67.9 W Array Area 0.20 m2 12 specifically the seismometer and magnetometer continuously while other instruments such as the heat flow probes may operate intermittently. The retroreflector does not require any thermal control resources. Telecom between the Earth and the hub or from the remote units to the hub would be during the lunar day only  Description of the Design  A thermal blanket \(MLI Silver-Teflon would be used to moderate the temperature variation of the surface. The MLI and the lunar material thermal conduction properties could be used to insulate the different ALGEP elements from the external environment  The Mars Exploration Rover thermal switch and a thermal radiator with thermal louvers would be used to reject the internally generated thermal energy. The MER Thermal Switch has the ability to transfer up to 11 W. For the hub three or four switches may be necessary, depending on the RF power output  Potentially a small electric heater/thermostat system may be needed \(on the order of 10% of the dissipated electrical energy example, the seismometer, which dissipates 1.5 W, may need a 0.15 W heater. A detailed thermal analysis would be necessary to further assess this need  The ALGEP hardware location would be dictated by the science requirements. Each ALGEP element could be either positioned on the surface or buried.  An example of a buried element would be the seismometer, while the hub could be surface mounted. In either case a surface blanket would be required. The surface blanket would minimize the lunar temperature variation, from a range of -173 to ~127  C to a range under the blanked between approximately -73 to 27  C. Initial calculations indicate that the blanket extending about 0.5 m beyond the edge of the instrument or hub would provide the temperature control of the lunar surface required to minimize the temperature variation. For the lunar night, a small electric heater may be needed to keep the ALGEP hardware within specified temperature limits  For polar region operation it is assumed that the ALGEP could operate at all times as the solar arrays would always have incident solar energy and could provide electrical power for operations.  Thus with electrical power for the instruments and hub, the thermal radiator and louvers could maintain the ALGEP hardware within specified temperature limits. Initial calculations indicate that the current conceptual thermal control design does not require electric heaters for this location  Design Rationale  The design uses MLI, thermal conduction control, electric heaters, thermal radiators thermal louvers, and a deployed surface blanket to provide thermal control to maintain the remote units and hub within specified temperature limits. The surface blanket would 


specified temperature limits. The surface blanket would minimize the temperature variation of the surface, and electric heaters would provide makeup thermal energy  Risk  The thermal subsystem design is a low to moderate risk element, as the hardware used has extensive flight experience. Although this system would be on the surface of the Moon, the environment would be space-like, with the  Figure 6  ALGEP avionics block diagram showing the power and command and data handing  interface. This is a low-power design to enable data collection during lunar night at the remote units. The hub  contains the same avionics package but does not interface with an instrument  13 exception of the infrared heating of the lunar surface therefore the space qualified thermal control hardware could provide thermal control for this mission  Command and Data Handling Subsystem Design Requirements  The ALGEP controller is designed to meet the six year mission lifetime requirement stemming from the science objectives flowing down to the mission requirements and has a technology cutoff of 2016 \(assumes a 2020 launch interface to the science instrument and the UHF radio.  The controller for the hub interfaces to the UHF and S-band radios. Each type of controller would be single string  Design Assumptions  All selected electronic parts for the controller have a path to flight hardware with a technology cutoff of 2016. There would be one ALGEP hub that has a bi-directional S-band link to Earth and a UHF receiver link to the remote instrument units. There would be four ALGEP remote units that have UHF transmitters to link to the ALGEP hub. The controllers would have an operating temperature range: -20  C to 35  C. The total ionizing dose of radiation would be 2 krads for the mission  Description of the Design  Both controller designs would incorporate low-powered Field Programmable Gate Arrays FPGAs devices and I/O drivers.  Portions of the existing MultiMission System Architecture Platform \(MSAP Engineering Unit \(REU IP provide the mission clock and alarm clock logic.  Both the hub and remote unit controllers would capture engineering data regarding temperatures, currents and voltages. Figure 6 provides an overview of the command and data handling and power subsystem architectures.  The remote units would be supplied with 2 Gb of memory and the hub would have 5 Gb of memory  Design Rationale  A low-powered avionics architecture would be achieved by developing a stand-alone controller capable of operating at various power levels. In the lowest power configuration only the mission clock and alarm clock logic would be active. Other logic, analog and I/O functions would be power strobed in the off mode during this very low-power mode. Science and engineering data would be stored in non-volatile memory elements that retain their data in the power-off mode  Risk  The controller requires engineering development to obtain the low-powered mode required for night operation However, it has been designed to incorporate components with flight heritage. A lower frequency oscillator would be used to reduce power  Telecom Subsystem 


Design Requirements  The telecom subsystem is designed to return 3.4 Gb of stored data every 16 days during lunar night in addition to 1.2 Gb of additional data collected each 24 hour period during daylight. This translates into a minimum direct-to-Earth return data rate of ~50 kbps for an 8 hour pass each Earth day for 16 days of sunlight. The subsystem must operate down to a temperature of -20  C and survive non-operational temperature of -50  C. The telecom subsystem would support two-way communications between the hub and the DSN network. It would also support two-way communications between the hub and each of the remote instrument packages on the surface. There would be a minimum 3 dB margin for the direct-to-Earth DTE  Design Assumptions  The telecom subsystem is assumed to be a single string design. The hub would have an S-band radio and antenna for two-way communications with a DSN 34 m ground station. The nominal downlink rate would be 120 kbps and the uplink rate would be 2 kbps. The surface links would be at UHF. The forward link data rate would be 8 kbps and the return rate would be 256 kbps. The maximum range for the surface links would be 100 m. All of the surface links would have line-of-sight between the units. It is assumed that the astronauts would point the Sband antenna towards Earth, within 5  of the center of Earth. This should be relatively easy to do as 5  is a very loose pointing requirement and the uplink/downlink would be marginally affected if the pointing is off by a little more than 5  A signal could be added which would use an uplink from the Earth to give a relative signal power to ensure the pointing requirement is met  Description of the Design  The telecom subsystem would use a commercial off-the-shelf S-band transponder \(L3 CXS-610 has a 5 W power amplifier and an S-band diplexer included This radio is used on GRAIL and a similar unit was used on Genesis. The diplexer would be connected to an S-band low gain antenna \(LGA be a 2-element S-band patch array with a boresight gain of 9 dB. It would be mounted on the end of one solar array on the hub and gimbaled to allow the astronaut to point it to the Earth  The hub communicates with each of the remote instrument units in UHF using a new UHF micro-transceiver. Each UHF microtransceiver would have a radio frequency output power of 50 mW. The UHF transceiver would use a halfduplex system meaning it would transmit and then listen However, it cannot do both at the same time. The UHF links would use a simple UHF monopole antenna, similar to the antennas flown on MER, and mounted on the top of the hub and remote units. The hub could only communicate with one remote unit at a time. Figure 7 shows the hub and remote unit telecom block diagrams  The S-Band telemetry link has a margin of 7.0 dB for a telemetry rate of 120 kbps into a 34 m beam waveguide ground station. The data rate could be increased to reduce 14 playback time. The surface link would have a margin exceeding 20 dB for a return data rate of 256 kbps. This includes a multipath loss allotment of 20 dB. The margin would be large because the range would be so small and all of the links would be line of sight  Design Rationale  Where available, the design of this subsystem uses heritage hardware. The UHF microtransceiver is a radio that is under development for the Mars program. It would be designed for low mass, low 


Mars program. It would be designed for low mass, lowpower and low temperature operation. The S-band antenna would be a smaller, simpler version of the antenna that flew on Deep Impact. Other antenna options would be available The UHF antennas have been flown on previous Mars lander/rover missions. There would be other alternatives for the S-band antenna and the UHF transceiver on the hub could use a larger power amplifier to talk to an orbiting asset as a backup to the S-band radio  Risk  The highest risk items for telecom would be the single string design for each element and six year design lifetime. However, the S-band radio has flight heritage. The UHF radios would be a new design but do not require new technology. They would be an engineering development 8. SYSTEM SUMMARY Mass Equipment List Table 5 shows a summary of the mass and power for each of the subsystems for the remote instrument units. The mass of one remote unit without the specified instrument is 26.6 kg with contingency specified at the subsystem level based on heritage. Table 6 shows a summary of mass and power by subsystem for the hub. The mass of the hub with contingency is 44.9 kg. Table 7 shows a mass summary for the entire package with appropriate contingencies added per the JPL  s Flight Project Practices and Design Principles Design Principles. The package totals 218.2 kg which includes four remote units, five instruments, one hub, and the carrier container\(s Table 5. Mass and power summary for remote units Remote Unit Mass CBE Contingency Total Power Power 14.3 kg 30% 18.5 kg 0.180 W 2 W Night /Day Thermal 2.0 kg 29% 2.5 kg 0 W Telecom UHF 0.2 24% 0.3 kg 2 W 40 W CDS 0.7 kg 30% 0.9 kg 1 W \(1/60th per hour 3 W Structure 3.4 kg 30% 4.4 kg 0 W Total x 1 unit 20.6 kg 29% 26.6 kg Diplexer S-Band Downconverter STDN command data to S/C CDS Pr oc es so r S-Band Exciter 9 dBi S-Band LGA UHF Downconverter Small UHF transceiver command data to S/C CDS 


to S/C CDS Pr oc es so r UHF PA UHF Monopole Command data to C&amp;DH Command dat  to C&amp;DH  Figure 7  Telecom block diagram for the S-band \(top bottom  units would be located on the hub while the remote units only contain a UHF system 15 9. OPERATIONAL SCENARIOS Daytime Operations During the day, the remote units and hub would be fully operational. The remote units would collect data from their instruments as specified by the science team and store it in the controller memory. Table 8 shows the data volume expected from each instrument. After 24 hours have passed the UHF telecom system on the hub is used to poll each of the remote units separately at the designated interval for the stored data. The hub then transmits the data direct-to-Earth using the S-band radio. This requires a maximum of eight hours at 50 kbps each day using the DSN 34 m antennas However, data rates as high as 120 kbps may be achieved reducing the downlink time. The hub has enough memory margin to accumulate data from all the instruments for three Earth days before it must downlink the data Nighttime Operations During nighttime operations, data collection at the remote units would be taking place. The magnetometer and seismometer collect data continuously. However, the seismometer operates at a reduced mode where the sampling rate is reduced to one-half of the daytime rate which has been deemed more than adequate by the science team. The remaining instruments collect data at various intervals that would be conducive to the science team  s current requirements. Telecom events would not be scheduled during the lunar night. The data accumulates in the controller memory over 16 Earth days \(~14 days at an equatorial location would be considered a worse case so two days have been added to be conservative data volume summary for each instrument during a 16 Earth day lunar night. When the sun comes up and the hub and remote units have sufficient power to run the telecom systems the hub polls each remote unit separately at a designated interval similar to operations during the day. The data would then be transmitted to Earth gradually over the next few days using the S-band radio Table 7. Mass summary for total package Unit Mass Contingency Mass + contingency 4 Remote Units 82.4 kg 29% 106.4 kg Hub 35.2 kg 27% 44.9 kg Instruments including cabling 17.3 kg 30% 22.5 kg Carrier Container\(s Total with heritage contingency 153.1 kg 29% 197.5 kg  System contingency  21.4 kg 14 Total Package  43% 218.9 kg Table 8. Instrument data volumes received at the hub over one Earth day in daylight operations Science Instrument Compressed Data Volume Received at Hub 


Volume Received at Hub Mb Seismometer 236 Magnetometer 58 Heat Flow Probe 2 Seismic Sounder 700 Instrument &amp; Hub Engineering Data 6 Total 1002 Hub Memory 5000 Margin 80  Table 6. Mass and power summary for hub Hub/Base Unit Mass CBE Contingency Total Power Power 14.3 kg 30% 18.5 kg 0.180 W 2 W Night /Day Thermal 13.4 kg 28% 17.2 kg 0 W Telecom UHF Telecom S-band 3.4 15% 3.9 kg 2 W 40 W CDS 0.7 kg 30% 0.9 kg 1 W \(1/60th per hour W \(day Structure 3.4 kg 30% 4.4 kg 0 W Total x 1 unit 35.2 kg 27% 44.9 kg 2.38 W avg at night  16 10. SUMMARY AND CONCLUSIONS The ALGEP modular design builds upon lessons learned from Apollo era ALSEP package and technology advances since that time. ALGEP meets the requirements of long lifetime survival while maintaining continuous operation of its instruments during the lunar night which can last up to 16 days at equatorial regions on the Moon. The package would be powered using solar arrays and batteries alone not requiring nuclear sources to supply power or maintain thermal control. This concept is feasible due to its lowpower operational mode at night The modular design and packaging scheme provides flexibility in deployment across all regions of the Moon including the farside pending the availability of an orbital communications asset. The relatively light ALGEP package could be accommodated on astronaut activity support vehicles, providing a method to distribute the packages across the Moon, ultimately gaining a Moon-wide understanding of lunar geophysical properties ACKNOWLEDGEMENTS This work was supported by the NASA Lunar Sortie Science Opportunities Program The work described in this publication was carried out at the Jet Propulsion Laboratory, California Institute of Technology under a contract with the National Aeronautics and Space Administration References herein to any specific commercial product process or service by trade name, trademark, manufacturer 


or otherwise does not constitute or imply its endorsement by the United States Government or the Jet Propulsion Laboratory, California Institute of Technology REFERENCES 1] NRC  Scientific Context for Exploration of the Moon   Washington D.C.: The Nat. Academies Press, 2007 2] Apollo 11 Prelim. Sci. Rept., NASA SP-214, 1969 3] Apollo 12 Prelim. Sci. Rept., NASA SP-235, 1970 4] Apollo 14 Prelim. Sci. Rept., NASA SP-272, 1971 5] Apollo 15 Prelim. Sci. Rept., NASA SP-289, 1972 6] Apollo 16 Prelim. Sci. Rept., NASA SP-315, 1972 7] Apollo 17 Prelim. Sci. Rept., NASA SP-330, 1973 8] ALSEP Termination Report, NASA RP-1036, 1979 9] NRC  New Frontiers in the Solar System: an Integrated Exploration Strategy  Decadal Survey D.C.: The Nat. Academies Press, 2003 10] International Lunar Network Science Definition Team Final Report, 2009 BIOGRAPHY Melissa Jones is a member of the technical staff in the Planetary and Lunar Mission Concepts Group at the Jet Propulsion Laboratory.  Current work includes development of small Lunar lander concepts and instrument packages to deploy on the Moon,  Report Manager for the Titan Saturn System Mission Outer Planets Flagship Mission study, and staffing various concept studies as a systems engineer on Team X, JPL  s mission design team.  Melissa graduated from Loras College with a B.S. in Chemistry and a Ph.D. in Space and Planetary Science from the University of Arkansas  Linda Herrell has a BA in math/computer science/languages \(University of Texas fluids and heat transfer \(City College of New York addition to analytical work in computer science and thermal and structural analysis, she has worked as both a payload \(instrument Earth orbiting \(Hubble Space Telescope, Earth Observing System \(EOS Cassini as Proposal Manager for several NASA science missions She currently serves as the Program Architect for NASA's New Millennium Program    Table 9. Instrument data volumes generated at the hub after 16 Earth day lunar night Science Instrument Compressed Data Volume Received at Hub Mb Seismometer 1980 Magnetometer 920 Heat Flow Probe 5 Seismic Sounder 0 Instrument &amp; Hub Engineering Data 72 Total 2977 Hub Memory 5000 Margin 40  17 Bruce Banerdt has been a research geophysicist at the California Institute of Technology's Jet Propulsion Laboratory since 1977, where he does research in planetary geophysics and instrument development for flight projects. He has been on science teams for numerous planetary missions 


on science teams for numerous planetary missions including Magellan, Mars Observer, Mars Global Surveyor and Rosetta. He was the US Project Scientist for the international Mars NetLander mission, for which he was also principal investigator of the Short-Period Seismometer experiment, and is currently the Project Scientist for the Mars Exploration Rovers. He led the Geophysics and Planetary Geology group at JPL from 1993-2005, and is the JPL Discipline Program Manager for Planetary Geosciences. He has held several visiting appointments at the Institut de Physique du Globe de Paris. He has a BS in physics and a PhD in geophysics from the University of Southern California  David Hansen is a member of the technical staff in the Communications Systems and Operations Group at the Jet Propulsion Laboratory. Current work includes the development of the telecom subsystem for the Juno project. David received a B.S. in Electrical Engineering from Cornell University and an M.S. in Electrical Engineering from Stanford University  Robert Miyake is a member of the technical staff in the Mission and Technology Development Group at the Jet Propulsion Laboratory. Current work includes the development of thermal control subsystems for interplanetary flagship missions to Jupiter and Saturn missions to Mars and the Earth Moon, and is the lead Thermal Chair for the Advanced Project Design Team Robert graduated with a B. S. from San Jose State University, with extensive graduate studies at UCLA University of Washington, and University of Santa Clara  Steve Kondos is a consultant to the Structures and Mechanisms group at the Jet Propulsion Laboratory. He currently is generating the mechanical concepts for small Lunar Landers and Lunar Science Instrument packages in support of various Lunar mission initiatives. He also provides conceptual design, mass and cost estimating support for various Team X studies as the lead for the Mechanical Subsystem Chair. Steve is also involved with various other studies and proposals and provides mentoring to several young mechanical and system engineers. He graduated with a B.S. in Mechanical Engineering from the University of California, Davis and has 28 years of experience in the aerospace field ranging from detail part design to system of systems architecture development. He has worked both in industry and in government in defense, intelligence commercial and civil activities that range from ocean and land based systems to airborne and space systems. Steve has received various NASA, Air Force, Department of Defense and other agency awards for his work on such projects as the NASA Solar Array Flight Experiment, Talon Gold, MILSTAR, Iridium, SBIRS, Mars Exploration Rovers ATFLIR, Glory Aerosol Polarimeter System and several Restricted Programs  Paul Timmerman is a senior member of technical staff in the Power Systems Group at the Jet Propulsion Laboratory Twenty-five years of experience in spacecraft design including 22 at JPL, over 250 studies in Team-X, and numerous proposals. Current assignments include a wide variety of planetary mission concepts, covering all targets within the solar system and all mission classes. Paul graduated from Loras College with a B.S. in Chemistry in 1983  Vincent Randolph is a senior engineer in the Advanced Computer Systems and 


the Advanced Computer Systems and Technologies Group at the Jet Propulsion Laboratory. Current work includes generating Command and Data Handling Subsystem conceptual designs for various proposals and Team X.  He also supports Articulation Control and Electronics design activities for the Advanced Mirror Development project. Vincent graduated from the University of California at Berkeley with a B.S. in Electrical Engineering 18  pre></body></html 


i models into time and covariate dependent dynamic counterparts  ii models and reliability analysis in a more realistic manner  iii level  whether or not functional components \(loyal generals diagnose correctly and take proper actions such as fault mask of failed components \(traitors asymmetric  iv survivability analysis. Evolutionary game modeling can derive sustainable or survivable strategies \(mapped from the ESS in EGT such as node failures such as security compromise level modeling in the so-called three-layer survivability analysis developed in Ma \(2008a this article  v offer an integrated architecture that unite reliability survivability, and fault tolerance, and the modeling approaches with survival analysis and evolutionary game theory implement this architecture. Finally, the dynamic hybrid fault models, when utilized to describe the survival of players in EGT, enhance the EGT's flexibility and power in modeling the survival and behaviors of the game players which should also be applicable to other problem domains where EGT is applicable  5. OPERATIONAL LEVEL MODELING AND DECISION-MAKING  5.1. Highlights of the Tactical and Strategic Levels  Let's first summarize what are obtainable at both tactical and strategic levels. The results at both tactical and strategic levels are precisely obtainable either via analytic or simulation optimization. With the term precisely, we mean that there is no need to assign subjective probabilities to UUUR events. This is possible because we try to assess the consequences of UUUR events \(tactical level ESS strategies \(strategic level time prediction of survivability. The following is a list of specific points. I use an assumed Wireless Sensor Network WSN  i of UUUR events: \(a actions which can be treated as censored events; \(b Cont' of Box 4.2 It can be shown that the replicator differential equations are equivalent to the classical population dynamics models such as Logistic differential equation and LotkaVolterra equation \(e.g., Kot 2001 Logistic equation, or the limited per capital growth rate is similar to the change rate of the fitness  xfxfi which can be represented with the hazard function or survivor functions introduced in the previous section on survival analysis.  This essentially connects the previous survival analysis modeling for lifetime and reliability with the EGT modeling. However, EGT provides additional modeling power beyond population dynamics or survival analysis approaches introduced in the previous section. The introduction of evolutionary theory makes the games played by a population evolvable. In other words, each player \(individual 


other words, each player \(individual agent and players interact with each other to evolve an optimized system Box 4.3. Additional Comments on DHF Models  The above introduced EGT models are very general given they are the system of ordinary differential equations. Furthermore, the choice of fitness function f\(x complexity to the differential equation system.  The system can easily be turned into system of nonlinear differential equations. The analytical solution to the models may be unobtainable when nonlinear differential equations are involved and simulation and/or numerical computation are often required  In the EGT modeling, Byzantine generals are the game players, and hybrid fault models are conveniently expressed as the strategies of players; the players may have different failure or communication behaviors Furthermore, players can be further divided into groups or subpopulations to formulate more complex network organizations. In the EGT modeling, reliability can be represented as the payoff \(fitness, the native term in EGT of the game. Because reliability function can be replaced by survivor function, survival analysis is seamlessly integrated into the EGT modeling. That is, let Byzantine generals play evolutionary games and their fitness reliability function  The evolutionary stable strategy \(ESS counterpart of Nash equilibrium in traditional games ESS corresponds to sustainable strategies, which are resistant to both internal mutations \(such as turning into treason generals or nodes such as security compromises represent survivable strategies and survivability in survivability analysis. Therefore, dynamic hybrid fault models, after the extension with EGT modeling, can be used to study both reliability and survivability 13 risks such as competing risks which can be described with CRA; \(c captured with the shard frailty.  We believe that these UUUR events are sufficiently general to capture the major factors/events in reliability, security and survivability whose occurrence probabilities are hard or impossible to obtain  Instead of trying to obtain the probabilities for these events which are infeasible in most occasions, we focus on analyzing the consequences of the events.  With survival analysis, it is possible to analyze the effects of these types of events on survivor functions. In addition, spatial frailty modeling can be utilized to capture the heterogeneity of risks in space, or the spatial distribution of risks \(Ma 2008a d UUUR events introduced previously. These approaches and models that deal with the effects of UUUR events form the core of tactical level modeling  To take advantage of the tactical level modeling approaches it is obviously necessary to stick to the survivor functions or hazard functions models. In other words, survival analysis can deal with UUUR events and offer every features reliability function provides, but reliability function cannot deal with UUUR events although survivor function and reliability function have the exactly same mathematical definition. This is the junction that survival analysis plays critical role in survivability analysis at tactical level. However, we 


recognize that it is infeasible to get a simple metric for survivability similar to reliability with tactical level modeling alone. Actually, up to this point, we are still vague for the measurement of survivability or a metric for survivability. We have not answered the question: what is our metric for survivability? We think that a precise or rigorous definition of survivability at tactical level is not feasible, due to the same reason we cited previously  the inability to determine the probabilities of UUUR events However, we consider it is very helpful to define a work definition for survivability at the tactical level  We therefore define the survivability at tactical level as a metric, Su\(t t function or reliability function with UUUR events considered. In the framework of three-layer survivability analysis, this metric is what we mean with the term survivability. The "metric" per se is not the focus of the three-layer survivability analysis. It is not very informative without the supports from the next two levels  strategic and operational models.  However, it is obvious that this metric sets a foundation to incorporate UUUR effects in the modeling at the next two levels  Due to the inadequacy of tactical level modeling, we proposed the next level approach  strategic level modeling for survivability. As expected, the tactical level is one foundation of strategic level modeling ii objectives: \(a affect survivability which survival analysis alone is not adequate to deal with; \(b survivability at tactical level is necessary but not sufficient for modeling survivability, we need to define what is meant with the term survivability at strategic level  With regard to \(a behaviors or modes which have very different consequences. These failure behaviors can be captured with hybrid fault models. However, the existing hybrid fault models in fault tolerance field are not adequate for applying to survivability analysis. There are two issues involved: one is the lack of real time notion in the constraints for hybrid fault models \(e.g., N&gt;3m+1 for Byzantine Generals problem synthesize the models after the real-time notions are introduced. The solution we proposed for the first issue is the dynamic hybrid fault models, which integrate survivor functions with traditional hybrid fault models. The solution we proposed for the second issue is the introduction of EGT modeling  With regard to \(b modeling our problem at strategic level, EGT modeling is essentially a powerful optimization algorithm.  One of the most important results from EGT modeling is the so-called evolutionary stable strategies \(ESS We map the ESS in EGT to survivable strategies in survivability analysis.   Therefore, at the strategic level, our work definition for survivability refers to the survivable strategies or sustainable strategies in the native term of EGT, which can be quantified with ESS  In addition to integrating dynamic hybrid fault models another advantage for introducing EGT modeling at strategic level is the flexibility for incorporating other node behaviors \(such as cooperative vs. non-cooperative those behaviors specified in standard hybrid fault models, as well as anthropocentric factors such as costs constraints  Without UUUR events, both tactical and strategic level 


Without UUUR events, both tactical and strategic level models default to regular reliability models. This implies that, in the absence of UUUR events, reliable strategies are sustainable or survivable.  This also implies that three-layer survivability analysis defaults to reliability analysis however, the three-layer approach does offer some significant advantages over traditional reliability analysis, as discussed in previous sections. Nevertheless, when UUUR events exist, reliable strategies and survivable strategies are different. This necessitates the next operational level modeling  5.2. Operational Level Modeling and Decision-Making  When UUUR events are involved, we cannot make real time predictions of survivability at tactical and strategic levels This implies that the implementations of survivable 14 strategies need additional measures that we develop in this section.  Box 5.1 explains the ideas involved with possibly the simplest example  Figure 4 is a diagram showing a simplified relationship between action threshold survivability \(TS survivability \(ES view since both TS and ES are multidimensional and dynamic in practice. Therefore, the sole purpose of the diagram is to illustrate the major concepts discussed above The blue curve is the survivability when survivable strategies specified by ESS are implemented at some point before time s.  The system is then guaranteed to hold survivability above ES. In contrary, if no ESS implemented before time s, then the system quickly falls below to the survivable level at around 40 time units  T i m e 0 1 0 2 0 3 0 4 0 5 0 6 0 7 0 8 0 9 0 1 0 0 Su rv iv ab ili ty M et ric S u t 0 . 0 0 . 1 0 . 2 0 . 3 0 . 4 0 . 5 0 . 6 0 . 7 0 . 8 0 . 9 1 . 0 E S S  i s  I m p lm e n t e d N o  E S S  is  I m p lm e n t e d ts E S T S  Figure 4. A Diagram Showing the Relationship Between TS and ES, as well as timing of s and t, with s &lt; t  6. SUMMARY  The previous sections discussed the major building blocks 


The previous sections discussed the major building blocks for the new life-system inspired PHM architecture. This section first identifies a few minor aspects that have not been discussed explicitly but are necessary for the implementation of the architecture, and then we summarize the major building blocks in a diagram  6.1. Missing Components and Links  Optimization Objectives  Lifetime, reliability, fault tolerance, and survivability, especially the latter two, are application dependent. Generally, the optimization of reliability and survivability are consistent; in that maximization of reliability also implies maximization of survivability. However, when application detail is considered, optimization of lifetime is not necessarily consistent with the optimization of reliability. Consider the case of the monitoring sensor network as an example. The network reliability is also dependent on connectivity coverage, etc, besides network lifetime. What may be further complicated is the time factor. All of the network metrics are time-dependent. A paradoxical situation between lifetime and reliability could be that nodes never 'sleep                                                   


          Box 5.1 Operational Level Modeling  Assuming that the ESS solution for a monitoring sensor network can be expressed with the following simple algebraic conditions: survivability metric at tactical level SU = 0.7, Router-Nodes in the WSN &gt; 10%, Selfish Nodes &lt; 40%. Even with this extremely simplified scenario, the ESS strategies cannot be implemented because we do not know when the actions should be taken to warrant a sustainable system.  These conditions lack a correlation with real time  The inability to implement ESS is rooted in our inability to assign definite probabilities to UUUR events, which implies that we cannot predict when something sufficiently bad will jeopardize the system survivability What we need at the operational level is a scheme to ensure ESS strategy is in place in advance  The fundamental idea we use to implement the ESS strategy is to hedge against the UUUR events. The similar idea has been used in financial engineering and also in integrated pest management in entomology. This can be implemented with the following scheme  Let us define a pair of survivability metrics: one is the expected survivability \(ES threshold survivability or simply threshold survivability \(TS ES is equivalent to the survivability metric at tactical level. ES corresponds to ESS at strategic level, but they are not equivalent since ESS is strategy and ES is survivability. TS is the survivability metric value \(at tactical level and TS can be obtained from strategic level models. For example, TS = SU\(s t condition for the implementation of ESS. In other words, the implementation of strategies that ensures TS at time s will guarantee the future ES level at time t.  To make the implementation more reliable and convenient multiple dynamic TSs can be computed at time s1, s2 sk, with si &lt; t for all i.  These TS at times s1, s2, ..., sk should be monitored by some evaluation systems  Unlike tactical and strategic levels, the operational level modeling is approximate. The term "approximate means that we cannot predict the real time survivability or we do not know the exact time an action should be taken. Instead, the action is triggered when the monitored survivability metric SU\(r survivability \(TS scheme of TS and ES, we ensure the ES by taking preventative actions \(prescribed by ESS and triggered by the TS consequences of UUUR events  Figure 4 is a diagram showing the above concepts and the decision-making process involved 15 This wakefulness \(never 'sleep short period but at the expense of network lifetime. Of course, when the network is running out of lifetime, network reliability ultimately crashes. This example reminds us that 


reliability ultimately crashes. This example reminds us that multi-objective optimization should be the norm rather than exception  Constraints and Extensions  Many application specific factors and constraints are ignored in this article. For example, we mentioned about spatial heterogeneity of environment, but never present a mathematical description The spatial heterogeneity can be modeled with the so-called spatial frailty in multivariate survival analysis \(Ma 2008a  Evolutionary Algorithm  Evolutionary game modeling when implemented in simulation, can be conveniently implemented with an algorithm similar to Genetic Algorithms \(GA ESS in the evolutionary game model with simulation is very similar to GA. Dynamic populations, in which population size varies from generation to generation \(Ma &amp; Krings 2008f of node failures. Another issue to be addressed is the synchronous vs. asynchronous updating when topology is considered in the simulation. This update scheme can have profound influences on the results of the simulation. Results from cellular automata computing should be very useful for getting insights on the update issue  6.2. Summary and Perspective  To recapture the major points of the article, let us revisit Figure 3, which summarizes the principal modules of the proposed life-system inspired PHM architecture. The main inspiration from life systems is the notion of individuals and their assemblage, the population. Population is an emergent entity at the next level and it has emergent properties which we are often more concerned with. Survival analysis, which has become a de facto standard in biomedicine, is particularly suitable for modeling population, although it is equally appropriate at individual level. Therefore, survival analysis \(including competing risks analysis and multivariate survival analysis comprehensively in the context of PHM in a series of four papers presented at IEEE AeroSpace 2008 \(Ma &amp; Krings 2008a, b, c, &amp; d proposed architecture. Survival analysis constitutes the major mathematical tools for analyzing lifetime and reliability, and also forms the tactical level of the three-layer survivability analysis  Besides lifetime and reliability, two other major modules in Figure 3 are fault tolerance and survivability. To integrate fault tolerance into the PHM system, Dynamic Hybrid Fault DHF 2008e, Ma 2008a make real-time prediction of reliability more realistic and make real-time prediction of fault tolerance level possible DHF models also unite lifetime, reliability and fault tolerance under a unified modeling framework that consists of survival analysis and evolutionary game theory modeling  DHG models also form the partial foundation, or strategic level, for the three-layer survivability analysis. At the strategic level, the Evolutionary Stable Strategies \(ESS which is mapped to survivable or sustainable strategies, can be obtained from the evolutionary game theory based DHF models. When there is not any UUUR event involved reliability and survivability are consistent, and reliable strategies are survivable. In this case, the strategic level modeling up to this point is sufficient for the whole PHM system modeling, and there is no need for the next level  operational level modeling  When there are UUUR events in a PHM system, the 


When there are UUUR events in a PHM system, the inability to determine the occurrence probabilities of UUUR events makes the operational level modeling necessary Then the principle of hedging must be utilized to deal with the "hanging" uncertainty from UUUR events. In this case reliability strategies are not necessarily survivable strategies At the operational level modeling, a duo of survivability metrics, expected survivability \(ES survivability \(TS the survivable strategies \(ESS level are promptly implemented based on the decisionmaking rules specified with the duo of survivability metrics then the PHM system should be able to endure the consequences of potentially catastrophic UUUR events. Of course, to endure such catastrophic events, the cost may be prohibitively high, but the PHM system will, at least, warn decision-makers for the potentially huge costs.  It might be cheap to just let it fail  Figure 3 also shows several other modules, such as security safety, application systems \(such as Automatic Logistics CBM+, RCM, Life cycle cost management, Real-time warning and alert systems architectures, but we do not discuss in this paper. Generally the new architecture should be fully compatible with existing ones in incorporating these additional modules. One point we stressed is that PHM system can be an ideal place to enforce security policies. Enforcing security policies can be mandatory for PHM systems that demand high security and safety such as weapon systems or nuclear plant facilities.  This is because maintenance, even without human-initiated security breaches, can break the security policies if the maintenance is not planned and performed properly  In perspective, although I did not discuss software issues in this paper, the introduced approaches and models should provide sufficient tools for modeling software reliability and survivability with some additional extension. Given the critical importance of software to modern PHM systems, we present the following discussion on the potential extension to software domain. Specifically, two points should be noted: \(1 architecture to software should be a metric which can 16 replace the time notion in software reliability; I suggest that the Kolmogorov complexity \(e.g., Li and Vitanyi 1997 be a promising candidate \(Ma 2008a change is because software does not wear and calendar time for software reliability usually does not make much sense 2 software reliability modeling.  Extending to general survivability analysis is not a problem either. In this article I implicitly assume that reliability and survivability are positively correlated, or reliability is the foundation of survivability. This positive correlation does not have to be the case. A simplified example that illustrates this point is the 'limit order' in online stock trading, in which limit order can be used in either direction: that stock price is rising or falling.  The solution to allow negative or uncorrelated relationships between reliability and survivability are very straightforward, and the solutions are already identified in previous discussions. Specifically, multiple G-functions and multi-stage G-functions by Vincent and Brown \(2005 very feasible solution, because lifetime, reliability and survivability may simply be represented with multiple Gfunctions. Another potential solution is the accommodation of the potential conflicts between reliability and survivability with multi-objective GA algorithms, which I previously suggested to be used as updating algorithms in the optimization of evolutionary games  


 The integration of dynamic hybrid fault models with evolutionary game modeling allows one to incorporate more realistic and detailed failure \(or survival individual players in an evolutionary game. This is because dynamic hybrid fault models are supported by survival analysis modeling, e.g., time and covariate dependent hazard or survivor functions for individual players. If necessary, more complex survival analysis modeling including competing risks analysis and multivariate survival analysis, can be introduced.  Therefore, any field to which evolutionary game theory is applicable may benefit from the increased flexibility in modeling individual players.  Two particularly interesting fields are system biology and ecological modeling.  In the former field, dynamic hybrid fault models may find important applications in the study of biological networks \(such as gene, molecular, and cell networks 2008g conjecture that explains the redundancy in the universal genetic code with Byzantine general algorithm. In addition they conducted a comparative analysis of bio-robustness with engineering fault tolerance, for example, the strong similarity between network survivability and ecological stability \(Ma &amp; Krings 2008g survivability analysis can be applied for the study of survivals or extinctions of biological species under global climate changes \(Ma 2008b  In this paper, I have to ignore much of the details related to the implementation issues to present the overall architecture and major approaches clearly and concisely. To deal with the potential devils in the implementation details, a well funded research and development team is necessary to take advantages of the ideas presented here. On the positive side I do see the great potential to build an enterprise PHM software product if there is sufficient resource to complete the implementation. Given the enormous complexity associated with the PHM practice in modern engineering fields, it is nearly impossible to realize or even demonstrate the benefits of the architecture without the software implementation. The critical importance of PHM to mission critical engineering fields such as aerospace engineering, in turn, dictates the great value of such kind software product  6.3. Beyond PHM  Finally, I would like to raise two questions that may be interested in by researchers and engineers beyond PHM community. The first question is: what can PHM offer to other engineering disciplines? The second question is: what kinds of engineering fields benefit most from PHM? Here, I use the term PHM with the definition proposed by IEEE which is quoted in the introduction section of the paper  As to the first question, I suggest software engineering and survivability analysis are two fields where PHM can play significant roles. With software engineering, I refer to applying PHM principles and approaches for dealing with software reliability, quality assurance, and even software process management, rather than building PHM software mentioned in the previous subsection. For survivability analysis, borrowing the procedures and practices of PHM should be particularly helpful for expanding its role beyond its originating domain \(network systems that control critical national infrastructures is a strong advocate for the expansion of survivability analysis to PHM. Therefore, the interaction between PHM and survivability analysis should be bidirectional. Indeed, I see the close relationships between PHM, software engineering, and survivability as well-justified because they all share some critical issues including reliability survivability, security, and dependability  


 The answer to the second question is much more elusive and I cannot present a full answer without comparative analysis of several engineering fields where PHM has been actively practiced. Of course, it is obvious that fields which demand mission critical reliability and dependability also demand better PHM solutions. One additional observation I would like to make is that PHM seems to play more crucial roles for engineering practices that depend on the systematic records of 'historical' data, such as reliability data in airplane engine manufacturing, rather than on the information from ad hoc events.  This may explain the critical importance of PHM in aerospace engineering particularly in commercial airplane design and manufacturing.  For example, comparing the tasks to design and build a space shuttle vs. to design and manufacture commercial jumbo jets, PHM should be more critical in the latter task  17    Figure 2. States of a monitoring sensor node and its failure modes \(after Ma &amp; Krings 2008e     Figure 3. Core Modules and their Relationships of the Life System Inspired PHM Architecture    REFERENCES  Adamides, E. D., Y. A. Stamboulis, A. G. Varelis. 2004 Model-Based Assessment of Military Aircraft Engine Maintenance Systems Model-Based Assessment of Military Aircraft Engine Maintenance Systems. Journal of the Operational Research Society, Vol. 55, No. 9:957-967  Anderson, R. 2001. Security Engineering. Wiley  Anderson, R. 2008. Security Engineering. 2nd ed. Wiley  Bird, J. W., Hess, A. 2007.   Propulsion System Prognostics R&amp;D Through the Technical Cooperation Program Aerospace Conference, 2007 IEEE, 3-10 March 2007, 8pp  Bock, J. R., Brotherton, T., W., Gass, D. 2005. Ontogenetic reasoning system for autonomic logistics. Aerospace Conference, 2005 IEEE 5-12 March 2005.Digital Object Identifier 10.1109/AERO.2005.1559677  Brotherton, T., P. Grabill, D. Wroblewski, R. Friend, B Sotomayer, and J. Berry. 2002. A Testbed for Data Fusion for Engine Diagnostics and Prognostics. Proceedings of the 2002 IEEE Aerospace Conference  Brotherton, T.; Grabill, P.; Friend, R.; Sotomayer, B.; Berry J. 2003. A testbed for data fusion for helicopter diagnostics and prognostics. Aerospace Conference, 2003. Proceedings 2003 IEEE  Brown, E. R., N. N. McCollom, E-E. Moore, A. Hess. 2007 Prognostics and Health Management A Data-Driven Approach to Supporting the F-35 Lightning II. 2007 IEEE AeroSpace Conference  Byington, C.S.; Watson, M.J.; Bharadwaj, S.P. 2008 Automated Health Management for Gas Turbine Engine Accessory System Components. Aerospace Conference 2008 IEEE, DOI:10.1109/AERO.2008.4526610 


2008 IEEE, DOI:10.1109/AERO.2008.4526610 Environment Covariates &amp; Spatial Frailty Applications: AL; Life Cycle Mgmt; Real-Time Alerts CBM+, RCM, TLCSM; Secret Sharing and Shared Control 18 Chen, Y. Q., S. Cheng. 2005. Semi-parametric regression analysis of mean residual life with censored survival data Biometrika \(2005  29  Commenges, D. 1999. Multi-state models in Epidemiology Lifetime Data Analysis. 5:315-327  Cook, J. 2004. Contrasting Approaches to the Validation of Helicopter HUMS  A Military User  s Perspective Aerospace Conference, 2004 IEEE  Cook, J. 2007. Reducing Military Helicopter Maintenance Through Prognostics. Aerospace Conference, 2007 IEEE Digital Object Identifier 10.1109/AERO.2007.352830  Cox, D. R. 1972. Regression models and life tables.  J. R Stat. Soc. Ser. B. 34:184-220  Crowder, M. J.  2001. Classical Competing Risks. Chapman amp; Hall. 200pp  David, H. A. &amp; M. L. Moeschberger. 1978. The theory of competing risks. Macmillan Publishing, 103pp  Ellison, E., L. Linger, and M. Longstaff. 1997.  Survivable Network Systems: An Emerging Discipline, Carnegie Mellon, SEI, Technical Report CMU/SEI-97-TR-013  Hanski, I. 1999. Metapopulation Ecology. Oxford University Press  Hallam, T. G. and S. A. Levin. 1986. Mathematical Ecology. Biomathematics. Volume 17. Springer. 457pp  Hess, A., Fila, L. 2002.  The Joint Strike Fighter \(JSF concept: Potential impact on aging aircraft problems Aerospace Conference Proceedings, 2002. IEEE. Digital Object Identifier: 10.1109/AERO.2002.1036144  Hess, A., Calvello, G., T. Dabney. 2004. PHM a Key Enabler for the JSF Autonomic Logistics Support Concept. Aerospace Conference Proceedings, 2004. IEEE  Hofbauer, J. and K. Sigmund. 1998. Evolutionary Games and Population Dynamics. Cambridge University Press 323pp  Hougaard, P. 2000. Analysis of Multivariate Survival Data Springer. 560pp  Huzurbazar, A. V. 2006. Flow-graph model for multi-state time-to-event data. Wiley InterScience  Ibrahim, J. G., M. H. Chen and D. Sinha. 2005. Bayesian Survival Analysis. Springer. 481pp  Kacprzynski, G. J., Roemer, M. J., Hess, A. J. 2002. Health management system design: Development, simulation and cost/benefit optimization. IEEE Aerospace Conference Proceedings, 2002. DOI:10.1109/AERO.2002.1036148  Kalbfleisch, J. D., and R. L. Prentice, 2002. The Statistical Analysis of Failure Time Data. Wiley-InterScience, 2nd ed  Kalgren, P. W., Byington, C. S.   Roemer, M. J.  2006 Defining PHM, A Lexical Evolution of Maintenance and Logistics. Systems Readiness Technology Conference 


Logistics. Systems Readiness Technology Conference IEEE. DOI: 10.1109/AUTEST.2006.283685  Keller, K.; Baldwin, A.; Ofsthun, S.; Swearingen, K.; Vian J.; Wilmering, T.; Williams, Z. 2007. Health Management Engineering Environment and Open Integration Platform Aerospace Conference, 2007 IEEE, Digital Object Identifier 10.1109/AERO.2007.352919  Keller, K.; Sheahan, J.; Roach, J.; Casey, L.; Davis, G Flynn, F.; Perkinson, J.; Prestero, M. 2008. Power Conversion Prognostic Controller Implementation for Aeronautical Motor Drives. Aerospace Conference, 2008 IEEE. DOI:10.1109/AERO.2008.4526630  Klein, J. P. and M. L. Moeschberger. 2003. Survival analysis techniques for censored and truncated data Springer  Kingsland, S. E. 1995. Modeling Nature: Episodes in the History of Population Ecology. 2nd ed., University of Chicago Press, 315pp  Kot, M. 2001. Elements of Mathematical Ecology Cambridge University Press. 453pp  Krings, A. W. and Z. S. Ma. 2006. Fault-Models in Wireless Communication: Towards Survivable Ad Hoc Networks Military Communications Conference, 23-25 October, 7 pages, 2006  Lamport, L., R. Shostak and M. Pease. 1982. The Byzantine Generals Problem. ACM Transactions on Programming Languages and Systems, 4\(3  Lawless, J. F. 2003. Statistical models and methods for lifetime data. John Wiley &amp; Sons. 2nd ed  Line, J. K., Iyer, A. 2007. Electronic Prognostics Through Advanced Modeling Techniques. Aerospace Conference 2007 IEEE. DOI:10.1109/AERO.2007.352906  Lisnianski, A., Levitin, G. 2003. Multi-State System Reliability: Assessment, Optimization and Applications World Scientific  Liu, Y., and K. S. Trivedi. 2006. Survivability Quantification: The Analytical Modeling Approach, Int. J of Performability Engineering, Vol. 2, No 1, pp. 29-44  19 Luchinsky, D.G.; Osipov, V.V.; Smelyanskiy, V.N Timucin, D.A.; Uckun, S. 2008. Model Based IVHM System for the Solid Rocket Booster. Aerospace Conference, 2008 IEEE.DOI:10.1109/AERO.2008.4526644  Lynch, N. 1997. Distributed Algorithms. Morgan Kaufmann Press  Ma, Z. S. 1997. Demography and survival analysis of Russian wheat aphid. Ph.D. dissertation, Univ. of Idaho 306pp  Ma, Z. S. 2008a. New Approaches to Reliability and Survivability with Survival Analysis, Dynamic Hybrid Fault Models, and Evolutionary  Game Theory. Ph.D. dissertation Univ. of Idaho. 177pp  Ma, Z. S. 2008b. Survivability Analysis of Biological Species under Global Climate Changes: A New Distributed and Agent-based Simulation Architecture with Survival Analysis and Evolutionary Game Theory. The Sixth 


International Conference on Ecological Informatics. Dec 25, 2008. Cancun, Mexico  Ma, Z. S. and E. J. Bechinski. 2008. A Survival-Analysis based  Simulation Model for Russian Wheat Aphid Population Dynamics. Ecological Modeling, 216\(2 332  Ma, Z. S. and A. W. Krings. 2008a.  Survival Analysis Approach to Reliability Analysis and Prognostics and Health Management \(PHM  AIAA AeroSpace Conference, March 1-8, 2008, Big Sky, MT, 20pp  Ma, Z. S. and A. W. Krings. 2008b. Competing Risks Analysis of Reliability, Survivability, and Prognostics and Health Management \(PHM  AIAA AeroSpace Conference, March 1-8, 2008.  Big Sky, MT. 20pp  Ma, Z. S. and A. W. Krings. 2008c. Multivariate Survival Analysis \(I Dependence Modeling", Proc. IEEE  AIAA AeroSpace Conference, March 1-8, 2008, Big Sky, MT. 21pp  Ma, Z. S. and A. W. Krings., R. E. Hiromoto. 2008d Multivariate Survival Analysis \(II State Models in Biomedicine and Engineering Reliability IEEE International Conference of Biomedical Engineering and Informatics, BMEI 2008.  6 Pages  Ma, Z. S. and A. W. Krings. 2008e. Dynamic Hybrid Fault Models and their Applications to Wireless Sensor Networks WSNs Modeling, Analysis and Simulation of Wireless and Mobile Systems. \(ACM MSWiM 2008 Vancouver, Canada  Ma, Z. S. &amp; A. W. Krings. 2008f. Dynamic Populations in Genetic Algorithms. SIGAPP, the 23rd Annual ACM Symposium on Applied Computing, Ceara, Brazil, March 16-20, 2008. 5 Pages  Ma, Z. S. &amp; A. W. Krings. 2008g. Bio-Robustness and Fault Tolerance: A New Perspective on Reliable, Survivable and Evolvable Network Systems, Proc. IEEE  AIAA AeroSpace Conference, March 1-8, Big Sky, MT, 2008. 20 Pages  Ma, Z. S.  and A. W. Krings. 2009. Insect Sensory Systems Inspired Computing and Communications.  Ad Hoc Networks 7\(4  MacConnell, J.H. 2008. Structural Health Management and Structural Design: An Unbridgeable Gap? 2008 IEEE Aerospace Conference, DOI:10.1109/AERO.2008.4526613  MacConnell, J.H. 2007. ISHM &amp; Design: A review of the benefits of the ideal ISHM system. Aerospace Conference 2007 IEEE. DOI:10.1109/AERO.2007.352834  Marshall A. W., I. Olkin. 1967. A Multivariate Exponential Distribution. Journal of the American Statistical Association, 62\(317 Mar., 1967  Martinussen, T. and T. H. Scheike. 2006. Dynamic Regression Models for Survival Data. Springer. 466pp  Mazzuchi, T. A., R. Soyer., and R. V. Spring. 1989. The proportional hazards model in reliability. IEEE Proceedings of Annual Reliability and Maintainability Symposium pp.252-256  Millar, R.C., Mazzuchi, T.A. &amp; Sarkani, S., 2007. A Survey of Advanced Methods for Analysis and Modeling of 


of Advanced Methods for Analysis and Modeling of Propulsion System", GT2007-27218, ASME Turbo Expo 2007, May 14-17, Montreal, Canada  Millar, Richard C., "Non-parametric Analysis of a Complex Propulsion System Data Base", Ph.D. Dissertation, George Washington University, June 2007  Millar, R. C. 2007. A Systems Engineering Approach to PHM for Military Aircraft Propulsion Systems. Aerospace Conference, 2007 IEEE. DOI:10.1109/AERO.2007.352840  Millar, R. C. 2008.  The Role of Reliability Data Bases in Deploying CBM+, RCM and PHM with TLCSM Aerospace Conference, 2008 IEEE, 1-8 March 2008. Digital Object Identifier: 10.1109/AERO.2008.4526633  Nowak, M. 2006. Evolutionary Dynamics: Exploring the Equations of Life. Harvard University Press. 363pp  Oakes, D. &amp; Dasu, T. 1990. A note on residual life Biometrika 77, 409  10  Pintilie, M. 2006. Competing Risks: A Practical Perspective.  Wiley. 224pp  20 Smith, M. J., C. S. Byington. 2006. Layered Classification for Improved Diagnostic Isolation in Drivetrain Components. 2006 IEEE AeroSpace Conference  Therneau, T. and P. Grambsch. 2000. Modeling Survival Data: Extending the Cox Model. Springer  Vincent, T. L. and J. L. Brown. 2005. Evolutionary Game Theory, Natural Selection and Darwinian Dynamics Cambridge University Press. 382pp  Wang. J., T. Yu, W. Wang. 2008. Research on Prognostic Health Management \(PHM on Flight Data. 2008 Int. Conf. on Condition Monitoring and Diagnosis, Beijing, China, April 21-24, 2008. 5pp  Zhang, S., R. Kang, X. He, and M. G. Pecht. 2008. China  s Efforts in Prognostics and Health Management. IEEE Trans. on Components and Packaging Technologies 31\(2             BIOGRAPHY  Zhanshan \(Sam scientist and earned the terminal degrees in both fields in 1997 and 2008, respectively. He has published more than 60 peer-refereed journal and conference papers, among which approximately 40 are journal papers and more than a third are in computer science.  Prior to his recent return to academia, he worked as senior network/software engineers in semiconductor and software industry. His current research interests include: reliability, dependability and fault tolerance of distributed and software systems behavioral and cognitive ecology inspired pervasive and 


behavioral and cognitive ecology inspired pervasive and resilient computing; evolutionary &amp; rendezvous search games; evolutionary computation &amp; machine learning bioinformatics &amp; ecoinformatics                 pre></body></html 


