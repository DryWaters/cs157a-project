MapReduce: Limitations, Optimizations and Open Issues\nVasiliki Kalavri\nKTH Royal Institute of Technology\nStockholm, Sweden\nkalavri@kth.se\nVladimir Vlassov\nKTH Royal Institute of Technology\nStockholm Sweden\nvladv@kth.se\nAbstract—MapReduce has recently gained great popularity\nas a programming model for processing and analyzing massive\ndata sets and is extensively used by academia and industry. Sev-\neral implementations of the MapReduce model have emerged,\nthe Apache Hadoop framework being the most widely adopted.\nHadoop offers various utilities, such as a distributed ?le system,\njob scheduling and resource management capabilities and\na Java API for writing applications. Hadoop’s success has\nintrigued research interest and has led to various modi?cations\nand extensions to the framework. Implemented optimizations\ninclude performance improvements, programming model ex-\ntensions, tuning automation and usability enhancements. In this\npaper, we discuss the current state of the Hadoop framework\nand its identi?ed limitations. We present, compare and classify\nHadoop/MapReduce variations, identify trends, open issues and\npossible future directions.\nKeywords-MapReduce, Big Data, Survey\nI. INTRODUCTION\nRecent advances in technology have allowed organizations\nto collect extremely large amounts of data, anticipating\nhigh value in analyzing them. “Big Data” management and\nprocessing has been one of the biggest challenges of our\nera Current approaches consist of processing systems de-\nployed on large amounts of commodity machines and exploit\nmassive parallelism to ef?ciently analyze enormous datasets.\nThe most successful system is the Google’s MapReduce\nframework [1], which hides the complexity of data distribu-\ntion, communication and task scheduling and offers a sim-\nple programming model for writing analytical applications,\nwhile also providing strong fault-tolerance guarantees.\nSeveral implementations of the MapReduce program-\nming model have been proposed, with open-source Apache\nHadoop framework [2] being the most widely adopted. Apart\nfrom the MapReduce programming model, Hadoop offers\nvarious other capabilities, including a distributed ?le system,\nHDFS [3] and a scheduling and resource management layer.\nDespite its popularity, the MapReduce model and its Hadoop\nimplementation have also been criticized [4] and have been\ncompared to modern parallel database management systems\n\(DBMSs  MapReduce charac-\nteristics, identifying a set of shortcomings of the model\nand current implementations [6 7], [8]. Features such\nas the static map-shuf?e-reduce pipeline, the frequent data\nmaterialization \(writing data to disk schema and sensitivity to con?guration parameters have\nbeen con?rmed to contribute negatively in its performance,\nfor certain classes of applications.\nNumerous variations of Hadoop MapReduce have been\ndeveloped during the last few years, proposing performance\nimprovements, programming model extensions, automation\nof use and tuning. Each one of the extensions deals with one\nor more shortcomings of the vanilla Hadoop MapReduce\nimplementation. The amount of these variations has grown\nsigni?cantly, making it hard for users to choose the appropri-\nate tool. Existing surveys summarize some of these systems,\nhowever, there exists no complete study categorizing them\nand clarifying the trade-offs for a potential user. Having all\nthese alternatives available, users either need to spend a lot\nof time researching which system would best ?t their needs\nor resort to common Hadoop installations, even if such a\nchoice would be suboptimal for their problem.\nIn this survey, we examine existing MapReduce imple-\nmentations based on Hadoop. The scope of our study is\nstrictly limited to systems extending or enhancing Hadoop\nand does not include more generalized data-?ow systems,\nsuch as Dryad [9], Spark [10] and Stratosphere [11]. The\ncontributions of this paper are:\n An overview of the state-of-the art in\nHadoop/MapReduce optimizations;\n• A comparison and classi?cation of existing systems;\n• A summary of the current state of the research ?eld,\nidentifying trends and open issues;\n A vision on possible future directions.\nThe rest of this paper is organized as follows. In Section\nII, we provide background on Hadoop/MapReduce and\npresent the current state of the project. In Section III we\ndiscuss the limitations of the model and implementation, as\ndemonstrated in recent literature. Section IV makes a catego-\nrization and comparison of existing MapReduce variations.\nIn Section V we focus on trends and open issues and propose\nfuture directions. We conclude in Section VI.\nII. BACKGROUND\nThis section gives an introduction to the MapReduce\nmodel and its open-source implementation, Hadoop.\n2013 12th IEEE International Conference on Trust, Security and Privacy in Computing and Communications\n978-0-7695-5022-0/13 $26.00 © 2013 IEEE\nDOI 10.1109/TrustCom.2013.126\n1031\nA. The MapReduce Programming Model\nThe MapReduce programming model is designed to ef-\n?ciently execute programs on large clusters, by exploiting\ndata parallelism. A distributed ?le system is deployed on the\nsame machines where the applications run, so that execution\ncan bene?t from data locality, by trying to move computation\nwhere the data reside. The model is inspired by functional\nprogramming and consists of two second-order functions,\nMap and Reduce, which form a static pipeline, where the\nMap stage is followed by the Reduce stage.\nData are read from the distributed ?le system, in the form\nof user-de?ned 


key-value pairs. These pairs are then grouped\ninto subsets and serve as input for parallel instances of the\nMap function. A user-de?ned function must be speci?ed and\nis applied to all subsets independently. The Map function\noutputs a new set of key-value pairs, which is then sorted by\nkey and partitioned according to a partitioning function. The\nsorted data feed the next stage of the pipeline, the Reduce\nfunction. The partitioning stage of the framework guarantees\nthat all pairs sharing the same key will be processed in the\nsame Reduce task. In a similar way, a user-de?ned function\nis applied to the pairs, producing one output le per Reduce\ntask, in the distributed ?le system.\nOne of the important advantages of the above schema is\nthat the parallelization complexity is handled by the frame-\nwork. The user only has to write the rst-order functions that\nwill be wrapped by the Map and Reduce functions. However,\nthis advantage often comes with loss of ?exibility. Each job\nmust consist of exactly one Map function followed by an\noptional Reduce function, and steps cannot be executed in a\ndifferent order. Moreover, if an algorithm requires multiple\nMap and Reduce steps, these can only be implemented as\nseparate jobs, and data can only be transferred from one job\nto the next, through the ?le system.\nIn the initial implementations of Hadoop, MapReduce is\ndesigned as a master-slave architecture. The JobTracker is\nthe master managing the cluster resources, scheduling jobs,\nmonitoring progress and dealing with fault-tolerance. On\neach of the slave nodes, there exists a TaskTracker process,\nresponsible for launching parallel tasks and reporting their\nstatus to the JobTracker The slave nodes are statically\ndivided into computing slots, available to execute either\nMap or Reduce tasks The Hadoop community realized the\nlimitations of this static model and recently redesigned the\narchitecture to improve cluster utilization and scalability.\nThe new design, YARN is presented in section II-C.\nB. HDFS\nHDFS 3] is the distributed ?le system used by the\nHadoop project. Hadoop MapReduce jobs read their input\ndata from HDFS and also write their output to it. HDFS has\nbeen very popular because of its scalability, reliability and\ncapability of storing very large ?les.\nThere are two types of nodes in HDFS: the DataNodes\nand the NameNode. Typically, a Hadoop deployment has\na single NameNode, which is the master and a set of\nDataNodes which serve as slaves. The main responsibility\nof a DataNode is to store blocks of data and to serve them\non request over the network. By default, data blocks are\nreplicated in HDFS, for fault-tolerance and higher chance\nof data locality, when running MapReduce applications. The\nNameNode is unique in an HDFS cluster and is responsible\nfor storing and managing metadata. It stores metadata in\nmemory, thus limiting the number of ?les that can be stored\nby the system, according to the node’s available memory.\nC. YARN\nYARN, Yet Another Resource Negotiator, is included in\nthe latest Hadoop release and its goal is to allow the system\nto serve as a general data-processing framework. It supports\nprogramming models other than MapReduce, while also\nimproving scalability and resource utilization. YARN makes\nno changes to the programming model or to HDFS. It\nconsists of a re-designed runtime system, aiming to elim-\ninate the bottlenecks of the master-slave architecture The\nresponsibilities of the JobTracker are split into two different\nprocesses, the ResourceManager and the ApplicationMaster.\nThe ResourceManager handles resources dynamically, using\nthe notion of containers, instead of static Map/Reduce\nslots. Containers are con?gured based on information about\navailable memory, CPU and disk capacity. It also has a\npluggable scheduler, which can use different strategies to\nassign tasks to available nodes. The ApplicationMaster is\na framework-speci?c process, meaning that it allows other\nprogramming models to be executed on top of YARN, such\nas MPI or Spark [12]. It negotiates resources with the\nResourceManager and supervises the scheduled tasks.\nIII. HADOOP/MAPREDUCE LIMITATIONS\nEven though YARN manages to overcome the well-\nknown limitations of the Hadoop scheduling framework\nand improves the scalability and resource utilization,\nthere still exist several opportunities for optimizations in\nHadoop/MapReduce. Having studied the recent literature,\nwe group the optimization opportunities in three main cate-\ngories: performance issues programming model extensions\nand usability enhancements. In this section, we discuss the\nlimitations which lead to these optimization opportunities.\nA. Performance Issues\nEven though Hadoop/MapReduce has been praised for\nits scalability, fault-tolerance and capability of processing\nvast amounts of data, query execution time can often be\nseveral hours [13]. This is orders of magnitude higher than\nwhat modern DBMSs offer and prevents interactive analysis.\nPerformance highly depends on the nature of the application,\nbut is also in?uenced by inherent system characteristics and\n1032\ndesign choices. A quite large percentage of the execution\ntime is spent in task initialization, scheduling, coordination\nand monitoring. Moreover, Hadoop/MapReduce does not\nsupport data pipelining or overlap of the Map and the\nReduce phases. Data materialization for fault-tolerance and\nintensive disk I/O during the shuf?ing phase have also been\nfound to signi?cantly contribute to the overall execution\ntime. It has been suggested that Hadoop performance would\nbene?t from well-known optimization techniques, already\nused by database systems and query optimizers. Even though\nHadoop lacks a built-in optimizer, many of the suggested\ntechniques have been implemented in Hadoop extensions 


as\ndiscussed in the next section. Optimizations include index\ncreation [14], data co-location [15], reuse of previously\ncomputed results [16], exploiting sharing opportunities [17],\nmechanisms dealing with computational skew [18] and tech-\nniques allowing early approximate query results.\nB. Programming Model Issues\nDeveloping ef?cient MapReduce applications requires ad-\nvanced programming skills and deep understanding of the\nsystem architecture. Common data analysis tasks usually\ninclude processing of multiple datasets and relational op-\nerations, such as joins, which are not trivial to implement\nin MapReduce. Therefore, the MapReduce programming\nmodel has been often characterized as too ”low-level” for\nanalysts used to SQL-like or declarative languages. Another\nlimitation of the programming model comes from its ”batch”\nnature. Data need to be uploaded to the ?le system and even\nwhen the same dataset needs to be analyzed multiple times,\nit has to be read every time. Also, the computation steps\nare ?xed and applications need to respect the map-shuf?e-\nsort-reduce sequence. Complex analysis queries are realized\nby chaining multiple MapReduce jobs, having the results\nof one serving as the input for the next. These character-\nistics make the model inappropriate for certain classes of\nalgorithms. Various applications, including machine learning\nalgorithms and graph processing, often require iterations\nor incremental computations. Since MapReduce operators\nare stateless, MapReduce implementations of iterative algo-\nrithms require manual management of state and chaining of\niterations. Abstractions and high-level languages, have been\nbuilt to facilitate MapReduce application development [19],\n[20]. Also, a set of domain-speci?c systems have emerged,\nextending the MapReduce programming model. We present\nthese systems in section IV-B.\nC. Con?guration and Automation Issues\nThe third category of optimizations are related to auto-\nmatic tuning and ease of use. There are numerous con?gura-\ntion parameters to set when deploying a Hadoop MapReduce\ncluster. Performance is often quite sensitive to them and\nusers usually rely on empirical rules of thumb”. Options\ninclude the number of parallel tasks, the size of the ?le\nblocks and the replication factor. Proper tuning of these\nparameters requires knowledge of both available hardware\nand workload characteristics, while miscon?guration might\nlead to inef?cient execution and underutilization of resources\n[13], [21]. Hadoop variations dealing with automatic tuning\nare discussed in Section IV-C.\nIV HADOOP/MAPREDUCE VARIATIONS\nSome of the optimizations discussed in this Section can\nhave multiple effects therefore, some of the presented\nsystems could fall into more than one category. At this point,\nwe need to stress that our categorization and comparison is\nbased on the primary motivation of each system examined.\nA Performance Optimizations\nOperator Pipelining and Online Aggregation: One of\nthe ?rst successful Hadoop extensions is MapReduce On-\nline [22]. It improves performance by supporting online\naggregation and stream processing, while also improving\nresource utilization. The motivation of MapReduce Online\nis to enable pipelining between operators, while preserving\nfault-tolerance guarantees. Pipelining is implemented both\nbetween tasks and between jobs. In the initial design, each\nreducer opens one TCP connection to each mapper. When a\nmapper computes a record, it determines to which partition\nit belongs and sends it via the appropriate socket. Opening a\nlarge number of TCP connections proved to be problematic,\nso the design was re?ned to use a “mixed” push/pull ap-\nproach. Each reducer is allowed to open a bounded number\nof TCP connections, while pulling data from the rest of the\nmappers in the traditional Hadoop way. One problem that\narises due to pipelining, is the nulli?cation of the effect\nof combiners. To solve this problem MapReduce Online\nbuffers intermediate data up to a speci?ed threshold, applies\nthe combiner function on them and spills them to disk. As\na side-effect of this design, early results of the jobs can be\ncomputed making approximate answers to queries available\nto users. This technique is called online aggregation and\nreturns useful early results much faster than ?nal results.\nSimply by applying the reduce function to the data that the\nreducer has seen so far, the system can provide an early\nsnapshot. In combination to the job progress metrics, a user\ncan appromixate the accuracy of the provided snapshot.\nApproximate Results: A more sophisticated approach to\napproximate results in MapReduce is proposed by Laptev et\nal. [23]. The EARL library is a Hadoop extension which\nallows incremental computations of early results using sam-\npling and the bootstrapping technique. An initial sample of\nthe data is obtained and the error is estimated using boot-\nstrapping. If the error is too high, the sample is expanded\nand the error recomputed. This process is repeated until the\nerror is under a user-de?ned threshold. In order to implement\nEARL, Hadoop was extended to support dynamic input size\nexpansion. First, pipelining between mappers and reducers\n1033\nwas implemented similarly to MapReduce Online, so that\nreducers can start processing data as soon as they become\nidle. Then mappers are kept active and reused instead of\nbeing restarted in every iteration. This modi?cation saves a\nsigni?cant amount of setup time. Finally, a communication\nchannel was built between mappers and reducers, so that\nthe termination condition can be easily tested. EARL is an\naddition to the MapReduce API and existing applications\nrequire modi?cations in order to exploit it.\nIndexing and Sorting: Quite a few of the proposed 


op-\ntimizations for Hadoop/MapReduce come from well-known\ntechniques of the database community. Long query runtimes\nare often caused due to lack of proper schemas and data\nindexing. Hadoop++ [14] and HAIL [24] are two remarkable\nattempts dealing with this matter. Hadoop++ is a transparent\naddition to Hadoop implemented using User De?ned Func-\ntions \(UDFs splits with indexes at load time.\nAdditionally to the Trojan Index, the paper also proposes\na novel Join technique, the Trojan Join, which uses data\nco-partitioning in order to perform the join operation using\nonly map tasks. HAIL proposes inexpensive index creation\non Hadoop data attributes, in order to reduce execution\ntimes in exploratory use-cases of MapReduce. It modi?es\nthe upload pipeline of HDFS and creates a different clustered\nindex per block replica. HAIL uses the ef?cient binary PAX\nrepresentation [25] to store blocks and keeps each physical\nblock replica in a different sort order. Sorting and indexing\nhappen in-memory at upload time. If index information is\navailable, HAIL also uses a modi?ed version of the task\nscheduling algorithm of Hadoop, in order to schedule tasks\nto nodes with appropriate indexes and sort orders. The block\nbinary representation and in-memory creation of indexes\nimproves upload times for HDFS, while query execution\ntimes also greatly improve when index information is avail-\nable. HAIL preserves Hadoop’s fault-tolerance properties.\nHowever, failover times are sometimes higher, due to HAIL\nassigning more blocks per map task, therefore limiting\nparallelization during recovery. In a system with the default\ndegree of replication, three different sort orders and indexes\nare available, greatly increasing the probability of nding\na suitable index for the corresponding ?ltering attribute\nof the query. HAIL bene?ts queries with low selectivity,\nexploratory analysis of data and applications for which there\nexists adequate information for index creation.\nWork Sharing: MRShare [17] is a Hadoop extension\nthat aims to exploit sharing opportunities among different\njobs. It transforms a batch of queries into a new batch, by\nforming an optimization problem and providing the opti-\nmal grouping of queries to maximize sharing opportunities.\nMRShare works on the following levels: sharing scans when\nthe input to mapping pipelines is the same and sharing map\noutputs when the reducers will have to push each tuple to\nthe correct reduce function. Hadoop was modi?ed to support\ntagging of tuples and merge the tags into the keys of tuples,\nso that their origin jobs can be identi?ed. Moreover, reducers\nwere enabled to write to more than one output ?les.\nData Reuse: ReStore [16] is an extension to Pig [19],\na high-level system built on top of Hadoop/MapReduce. It\nstores and reuses intermediate results of scripts, originating\nfrom complete jobs or sub-jobs. The input of ReStore is Pig’s\nphysical plan, i.e. a work?ow of MapReduce jobs. ReStore\nmaintains a repository where it stores job outputs together\nwith the physical execution plan, the ?lename of the output\nin HDFS and runtime statistics about the MapReduce job\nthat produced the output. The system consists of a plan\nmatcher and rewriter which searches in the repository for\npossible matches and rewrites the job work?ow to exploit\nstored data. It also has a sub-job enumerator and a sub-job\nselector, which are responsible for choosing which sub-job\noutputs to store, after a job work?ow has been executed.\nSub-job results are chosen to be stored in the repository\nbased on the input to output ratio and the complexity of their\noperators. Repository garbage collection is not implemented,\nhowever guidelines for building one are proposed.\nSkew Mitigation: SkewTune [18] is a transparent\nHadoop extension providing mechanisms to detect stragglers\nand mitigate skew by repartitioning their remaining unpro-\ncessed input data. In order to decide when a task should be\ntreated as a straggler while avoiding unnecessary overhead\nand false-positives, SkewTune is using Late Skew Detection.\nDepending on the size of the remaining data, SkewTune may\ndecide to scan the data locally or in parallel. In Hadoop,\nskew mitigation is implemented by SkewTune as a separate\nMapReduce job for each parallel data scan and for each\nmitigation. When repartitioning a map task, a map-only job\nis executed and the job tracker broadcasts all information\nabout the mitigated map to all the reducers in the system.\nWhen repartitioning a reduce task, due to the MapReduce\nstatic pipeline in?exibility, an identity map phase needs to\nbe run before the actual additional reduce task.\nData Colocation: The last system we present in this\ncategory is CoHadoop [15] and it allows applications to\ncontrol where data are stored. In order to exploit its ca-\npabilities, applications need to state which ?les are related\nand might need to be processed together. CoHadoop uses\nthis information to collocate ?les and improve job runtimes.\nWhile HDFS uses a random placement policy for load-\nbalancing reasons, CoHadoop allows applications to set a\nnew ?le property, in order for all copies of related ?les to\nbe stored together. This property, the locator, is an integer\nand there is a N:1 relationship between ?les and locators, so\nthat ?les with the same locator are stored on the same set of\ndatanodes. The mapping is managed by saving information\nin a locator table, in the Namenode’s memory. If the selected\nset of datanodes runs out of space, CoHadoop simply stores\nthe ?les in another set of datanodes. CoHadoop may lead to\nskew in data distribution and also loss of more data in the\n1034\npresence of failures. Collocation and special partitioning 


are\nperformed by adding a preprocessing step to a MapReduce\njob, which itself is a MapReduce job.\nB Programming model extensions\n1 top of Hadoop has proven to be\nmuch more ef?cient regarding development time than using\nnative MapReduce Maintenance costs and bugs are also\ngreatly reduced, as much less code is required. Pig [19]\nis one such high-level system that consists of a declarative\nscripting language, Pig Latin, and an execution engine that\nallows the parallel execution of data-?ows on top of Hadoop.\nPig offers an abstraction that hides the complexity of the\nMapReduce programming model and allow users to write\nSQL-like scripts, providing all common data operations\n\(?ltering, join, ordering, etc Hive [20]. Initially developed by Facebook, Hive\nis not just an abstraction, but a data warehousing solution It\nprovides a way to store, summarize and query large amounts\nof data. Hive’s high-level language, HiveQL allows users\nto express queries in a declarative, SQL-like manner. Very\nsimilar to Pig, HiveQL scripts are compiled to MapReduce\njobs and executed on the Hadoop execution engine.\nAnother popular query language is Jaql 26]. Jaql is less\ngeneral than the systems we have introduced in this Section,\nas it is designed for quering semi-structured data in JSON\nformat only. The system is extensible and supports paral-\nlelism using Hadoop Although Jaql has been speci?cally\ndesigned for data in JSON format, it borrows a lot of\ncharacteristics from SQL, XQuery, LISP, and PigLatin.\nCascading [27] is a Java application framework that\nfacilitates the development of data processing applications\non Hadoop. It offers a Java API for de?ning and testing\ncomplex data?ows. It abstracts the concepts of map and\nreduce and introduces the concept of ?ows, where a ?ow\nconsists of a data source, reusable pipes that perform oper-\nations on the data and data sinks. Cascading quickly gained\npopularity among the industry and Twitter even developed\nand open-sourced a Scala API for it, Scalding 28].\n2 data-intensive problems, especially in the do-\nmains of machine learning and graph processing. HaLoop\n[29], is a modi?ed version of Hadoop, with built-in sup-\nport for development and ef?cient execution of iterative\napplications. HaLoop offers a mechanism to cache and in-\ndex invariant data between iterations signi?cantly reducing\ncommunication costs. It extends Hadoop’s API, allowing the\nuser to de?ne loops and termination conditions easily. The\nauthors also propose a novel scheduling algorithm, which\nis loop-aware and exploits inter-iteration locality. It exploits\ncached data in order to co-locate tasks which access the\nsame data in different iterations.\nSupport for Incremental Computations: A special class\nof iterative applications is that of incremental computations.\nThese include jobs which need to be run repeatedly with\nslightly different, most often augmented input. Performing\nsuch computations in MapReduce would obviously lead\nto redundant computations and inef?ciencies. In order to\novercome this problem, one has to specially design their\nMapReduce application to store and use state across mul-\ntiple runs. Since MapReduce was not designed to reuse\nintermediate results, writing such programs is complex and\nerror-prone. Incoop’s [30] goal is to provide a transparent\nway to reuse results of prior computations, without demand-\ning any extra effort from the programmer. Incoop extends\nHadoop to support incremental computations, by making\nthree important modi?cations a mechanisms to identify similarities between\ndatasets and opportunities for data reuse, while preserving\ncompatibility with HDFS. \(b Reduce phase,\nused to control task granularity. This phase leverages the idea\nof Combiners to ”break” the reduce task into a tree-hierarchy\nof smaller tasks. The process is run recursively until the last\nlevel, where the reduce function is applied. In order to result\ninto a data partitioning suitable for reuse content-based\npartitioning is again performed on every level of Combiners.\n\(c improved scheduler\nwhich takes into account data locality of previously com-\nputed results, while also using a work-stealing algorithm.\nThe memoization-aware scheduler schedules tasks on the\nnodes that contain data which can be reused. However, this\napproach might create load imbalance if some data is very\npopular. To avoid this situation, the scheduler implements\na simple work-stealing algorithm. When a node runs out of\nwork, the scheduler will locate the node with the largest task\nqueue and delegate a task to the idle node.\nC. Automatic tuning\nSelf-Tuning: Con?guring and tuning Hadoop MapRe-\nduce is usually not a trivial task for developers and adminis-\ntrators, often resulting to poor performance, resource under-\nutilization and consequently increased operational costs.\nStar?sh [21] is a self-tuning system, built as an extension\nto Hadoop, which dynamically con?gures system prop-\nerties based on workload characteristics and user input.\nStar?sh performs tuning on three levels. In the job-level, it\nuses a Just-in-Time Optimizer to choose ef?cient execution\ntechniques, a Pro?ler to learn performance models and\nbuild job pro?les and a Sampler to collect statistics about\ninput intermediate and output data and help the Pro?ler\nbuild approximate models. In the work?ow-level, it uses\na 


Work?ow-aware Scheduler, which exploits data locality\n1035\non the work?ow-level, instead of making locally optimal\ndecisions. A What-if Engine answers questions based on\nsimulations of job executions. In the workload-level, Star?sh\nconsults the Workload Optimizer to ?nd opportunities for\ndata-?ow sharing, materialize of intermediate results for\nreuse or reorganize jobs inside a batch and the Elastisizer\nto automate node and network con?guration.\nDisk I/O Minimization: Sail?sh [31] is another Hadoop\nmodi?cation also providing auto-tuning opportunities, such\nas dynamically setting the number of reducers and han-\ndling skew of intermediate data. Additionally, it improves\nperformance by reducing disk I/O due to intermediate data\ntransfers. The proposed solution uses KFS [32] instead of\nHDFS, which is a distributed ?le system allowing concurrent\nmodi?cations to multiple blocks of a single ?le. The authors\npropose I-?les, an abstraction which aggregates intermediate\ndata, so that they can be written to disk in batches. An\nindex is built and stored with every ?le chunk and an of?ine\ndaemon is responsible for sorting records within a chunk.\nData-aware Optimizations: Manimal [33] is an auto-\nmatic optimization framework for MapReduce transparent\nto the programmer. The idea is to apply well-known query\noptimization techniques to MapReduce jobs. Manimal de-\ntects optimization opportunities by performing static analysis\nof compiled code and only applies optimizations which are\nsafe. The system’s analyzer examines the user code and\nsends the resulting optimization descriptors to the optimizer.\nThe optimizer uses this information and pre-computed in-\ndexes to choose an optimized execution plan, the execution\ndescriptor. The execution fabric then executes the new plan\nin the standard map-shuf?e-reduce fashion. Optionally, an\nindex generation program creates an additional MapReduce\njob to generate an indexed version of the input data. Example\noptimizations performed by Manimal include Selection and\nProjection. In the ?rst case, when the map function is a ?lter,\nManimal uses a B+Tree to only scan the relevant portion of\nthe input. In the second case, it eliminates unnecessary ?elds\nfrom the input records.\nTable I shows a brief comparison of the systems discussed\nin this survey. We have excluded high-level languages from\nthis comparison, since they share common goals and major\ncharacteristics among them.\nV. DISCUSSION\nMapReduce is a quite recent paradigm and its open-source\nimplementation, Hadoop, still has plenty of optimization\nopportunities to exploit. However, implementing even tra-\nditional optimization techniques can be very challenging\nin architectures of shared-nothing clusters of commodity\nmachines Scalability, ef?ciency and fault-tolerance are ma-\njor requirements for any MapReduce framework and trade-\noffs between optimizations and these features need to be\ncarefully studied.\nOne can identify several trends when studying the systems\ndiscussed in this survey. In contrast to traditional applica-\ntions MapReduce programs are data-intensive instead of\ncomputation-intensive and, in order to achieve good perfor-\nmance, it is vital to minimize disk I/O and communication.\nTherefore, many systems seek ways to enable in-memory\nprocessing and avoid reading from disk when possible. For\nthe same reason, traditional database techniques, such as\nmaterialization of intermediate results, caching and indexing\nare also favored.\nAnother recurring theme in MapReduce systems is relax-\nation of fault-tolerance guarantees. The initial MapReduce\ndesign from Google assumed deployments in clusters of\nhundreds or even thousands of commodity machines. In\nsuch setups, failures are very common and strict fault-\ntolerance and recovery mechanisms are necessary. However,\nafter the release of Hadoop, MapReduce has also been\nused by organizations much smaller than Google. Common\ndeployments may consist of only tenths of machines [34],\nsigni?cantly decreasing failure rates. Such deployments can\nbene?t from higher performance, by relaxing the fault-\ntolerance guarantees of the system. For example, one can\navoid materialization of task results and allow pipelining\nof data. In this scenario, when a failure occurs, the whole\njob would have to be re-executed, instead of only the tasks\nrunning on the failed node.\nMany important steps forward have been made since\nthe launch of MapReduce and Hadoop, but several open\nissues still exist in the area. Even though it is clear that\nrelaxing fault-tolerance offers performance gains, we believe\nthat this issue needs to be further studied in the context\nof MapReduce. The trade-offs between fault-tolerance and\nperformance need to be quanti?ed. When these trade-offs\nhave become clear, Hadoop could offer capabilities of tun-\nable fault-tolerance to the users or provide automatic fault-\ntolerance adjustment mechanisms, depending on cluster and\napplication characteristics.\nAnother open issue is clearly the lack of a standard\nbenchmark or a set of typical workloads for comparing the\ndifferent Hadoop implementations. Each system is evaluated\nusing different datasets, deployments and set of applications.\nThere have been some efforts in this direction [31], [35],\nbut no complete solution has been introduced and no clear\nanswer exists to what a ”typical” MapReduce workload\nwould be.\nAs far as programming extensions are concerned, we\nbelieve that the main problem with all the specialized\nsystems proposed is transparency to the developer. In our\nview, such programming extensions need to be smoothly\nintegrated into to the framework, so that existing applications\ncan bene?t from the optimizations, automatically, without\nhaving 


to change or re-compile the source code.\nFinally, even if successful declarative-style abstractions\nexist Hadoop MapReduce is still far from offering inter-\n1036\nOptimization Type Major Contributions Open-Source nAvailable to use\nTransparent to Existing\nApplications\nMapReduce\nOnline\nperformance,\nprogramming model\nPipelining, Online aggregation yes yes\nEARL performance Fast approximate query results yes no\nHadoop performance Performance gains for relational operations no yes\nHAIL performance Performance gains for relational operations no no\nMRShare performance Concurrent work sharing no no\nReStore Reuse of previously computed results no yes\nSkewTune performance Automatic skew mitigation no yes\nCoHadoop performance Communication minimization by data co-\nlocations\nno no\nHaLoop programming model Iteration support yes no\nIncoop programming model Incremental processing support no no\nStar?sh tuning, performance Dynamic self-tuning no yes\nSail?sh tuning, performance Disk I/O minimization and automatic tuning no yes\nManimal tuning, performance Automatic data-aware optimizations no yes\nTable I\nCOMPARATIVE TABLE OF HADOOP VARIATIONS\nactive analysis capabilities. Developing common analysis\ntasks and declarative queries has indeed been signi?cantly\nfacilitated. However, these high-level systems still compile\ntheir queries into MapReduce jobs, which are executed\non top of Hadoop. According to our judgment, these sys-\ntems could greatly bene?t from more sophisticated query\noptimization techniques. Mechanisms such as data reuse\nand approximate answers should also be more extensively\nstudied and exploited in high-level systems.\nUnfortunately, the majority of the proposed systems are\nnot open-source or even available to use. This prevents\nresearchers from studying or extending them and stalls\nprogress. Also, proposed systems usually only compare\nto vanilla Hadoop, not yielding very interesting results.\nConsequently, very few of the optimizations proposed have\nbeen incorporated to of?cial Hadoop releases.\nVI. CONCLUSIONS\nIn conclusion, Big Data systems and speci?cally MapRe-\nduce, are an active research area, still at its infancy. Cur-\nrently, the interest for MapReduce is at its peak and there\nexist a lot of problems and challenges to be addressed.\nThere lies a bright future ahead for Big Data as businesses\nand organizations realize more and more the value of the\ninformation they can store and analyze Developing ways to\nprocess the vast amounts of data available drives business in-\nnovation, health discoveries, science progress and allows us\nto ?nd novel ways to solve problems, which we considered\nvery hard or even impossible in the past.\nACKNOWLEDGMENT\nThis work was supported in part by the Erasmus Mundus\nJoint Doctorate in Distributed Computing \(EMJD-DC EACEA funded by the Swedish Foundation for Strategic\nResearch \(SSF  Dean and S. Ghemawat, “Mapreduce: simpli?ed data\nprocessing on large clusters,” Commun. ACM, vol. 51, no 1,\npp. 107–113, Jan. 2008.\n[2] “Hadoop: Open-Source implementation of MapReduce,”\nhttp://hadoop.apache.org Online; Last accessed Jan 2013].\n[3] K. Shvachko, H. Kuang, S. Radia, and R. Chansler, “The\nhadoop distributed ?le system,” in Proceedings of the 2010\nIEEE 26th Symposium on Mass Storage Systems and Tech-\nnologies \(MSST  MapReduce: A Major Step Backwards,”\nhttp://homes.cs.washington.edu/billhowe/mapreduce a major\nstep backwards.html, [Online; Last accessed Jan 2013].\n[5] A. Pavlo, E. Paulson, A. Rasin, D. J. Abadi, D. J DeWitt,\nS. Madden, and M. Stonebraker, “A comparison of approaches\nto large-scale data analysis,” in Proceedings of the 2009 ACM\nSIGMOD International Conference on Management of data,\nser. SIGMOD ’09. New York NY, USA: ACM, 2009, pp.\n165–178.\n[6] K.-H. Lee, Y.-J. Lee, H. Choi, Y. D. Chung, and B. Moon,\n“Parallel data processing with mapreduce: a survey,” SIG-\nMOD Rec., vol. 40, no. 4, pp. 11–20, Jan. 2012.\n[7] D. Jiang, B. C Ooi, L. Shi, and S. Wu, “The performance of\nmapreduce: an in-depth study,” Proc. VLDB Endow., vol. 3,\nno. 1-2 pp. 472–483, Sep. 2010.\n[8] A. Goyal and S. Dadizadeh, “A survey on cloud computing,”\nUniversity of British Columbia, Tech. Rep., 2009.\n[9] M. Isard, M. Budiu, Y. Yu, A. Birrell, and D. Fetterly, “Dryad:\ndistributed data-parallel programs from sequential building\nblocks,” in Proceedings of the 2nd ACM SIGOPS/EuroSys\nEuropean Conference on Computer Systems 2007, ser. Eu-\nroSys ’07. ACM, 2007, pp. 59–72.\n1037\n[10] M. Zaharia, M Chowdhury, M. J. Franklin, S. Shenker, and\nI. Stoica, “Spark: cluster computing with working sets in\nProceedings of the 2nd USENIX conference on Hot topics in\ncloud computing, ser. HotCloud’10. Berkeley, CA USA:\nUSENIX Association, 2010, pp. 10–10.\n[11] D. Battre´, S. Ewen, F. Hueske, O. Kao, V. Markl, and\nD Warneke, “Nephele/pacts: a programming model and ex-\necution framework for web-scale analytical processing in\nProceedings of the 1st ACM symposium on Cloud computing,\nser. SoCC ’10. New York, NY, USA: ACM, 2010, pp 119–\n130.\n[12] “PoweredByYarn,” http://wiki.apache.org/hadoop/PoweredByYarn,\n[Online; Last accessed Jan 2013].\n[13] S. Kavulya, J. Tan, R. Gandhi, and P. Narasimhan, “An\nanalysis of traces from a production mapreduce cluster,”\nin Proceedings of the 2010 10th IEEE/ACM International\nConference on Cluster, Cloud and Grid Computing, ser.\nCCGRID ’10. IEEE Computer Society, 2010, pp. 94–103.\n[14] J. Dittrich, J.-A 


Quiane´-Ruiz, A. Jindal, Y. Kargin, V. Setty,\nand J. Schad, “Hadoop++: making a yellow elephant run like\na cheetah \(without it even noticing  Eltabakh, Y. Tian, F. O¨zcan, R. Gemulla, A. Krettek,\nand J. McPherson, “Cohadoop: ?exible data placement and\nits exploitation in hadoop,” Proc. VLDB Endow., vol. 4, no. 9,\npp. 575–585, Jun. 2011.\n[16] I. Elghandour and A. Aboulnaga, “Restore: reusing results\nof mapreduce jobs,” Proc. VLDB Endow., vol. 5, no. 6, pp.\n586–597 Feb. 2012.\n[17] T. Nykiel, M. Potamias, C. Mishra, G. Kollios, and\nN. Koudas, “Mrshare: sharing across multiple queries in\nmapreduce,” Proc. VLDB Endow., vol. 3, no. 1-2, pp. 494–\n505, Sep. 2010.\n[18] Y. Kwon, M Balazinska, B. Howe, and J. Rolia, “Skewtune:\nmitigating skew in mapreduce applications,” in Proceedings\nof the 2012 ACM SIGMOD International Conference on\nManagement of Data, ser. SIGMOD ’12. ACM, 2012 pp.\n25–36.\n[19] A. F. Gates, O. Natkovich, S. Chopra, P. Kamath, S. M.\nNarayanamurthy, C. Olston, B. Reed, S Srinivasan, and\nU. Srivastava, “Building a high-level data?ow system on top\nof map-reduce: the pig experience,” Proc. VLDB Endow.,\nvol. 2, no. 2, pp. 1414–1425, Aug. 2009.\n[20] A. Thusoo, J. S. Sarma, N. Jain Z. Shao, P. Chakka,\nS. Anthony, H. Liu, P. Wyckoff, and R. Murthy, “Hive: a\nwarehousing solution over a map-reduce framework,” Proc.\nVLDB Endow., vol. 2, no. 2, pp. 1626–1629, Aug. 2009.\n[21] H. Herodotou, H. Lim G. Luo, N. Borisov, L. Dong, F. B.\nCetin, and S. Babu, “Star?sh: A self-tuning system for big\ndata analytics in In CIDR, 2011, pp. 261–272.\n[22] T. Condie, N. Conway, P. Alvaro, J. M. Hellerstein,\nK. Elmeleegy, and R Sears, “Mapreduce online,” in Proceed-\nings of the 7th USENIX conference on Networked systems\ndesign and implementation, ser. NSDI’10. Berkeley, CA,\nUSA: USENIX Association, 2010, pp. 21–21.\n[23] N. Laptev, K. Zeng and C. Zaniolo, “Early accurate results\nfor advanced analytics on mapreduce,” Proc. VLDB Endow.,\nvol. 5, no 10, pp. 1028–1039, Jun. 2012.\n[24] J. Dittrich, J.-A. Quiane´-Ruiz, S. Richter, S. Schuh, A. Jindal,\nand J Schad, “Only aggressive elephants are fast elephants,”\nProc. VLDB Endow., vol. 5, no. 11, pp. 1591–1602, Jul 2012.\n[25] A. Ailamaki, D. J. DeWitt, M. D. Hill, and M. Skounakis,\n“Weaving relations for cache performance in Proceedings of\nthe 27th International Conference on Very Large Data Bases,\nser. VLDB ’01. San Francisco CA, USA: Morgan Kaufmann\nPublishers Inc., 2001, pp. 169–180.\n[26] K. S. Beyer, V. Ercegovac, R. Gemulla, A Balmin, M. Y.\nEltabakh, C. C. Kanne, F. O¨zcan, and E. J. Shekita, PVLDB,\nvol. 4, no. 12, pp. 1272–1283 2011.\n[27] “Cascading,” http://www.cascading.org/, [Online; Last ac-\ncessed 2012].\n[28] “Scalding https://dev.twitter.com/blog/scalding, [Online;\nLast accessed 2012].\n[29] Y. Bu, B. Howe, M. Balazinska, and M. D. Ernst, “Haloop:\nef?cient iterative data processing on large clusters,” Proc.\nVLDB Endow., vol. 3, no 1-2, pp. 285–296, Sep. 2010.\n[30] P. Bhatotia, A. Wieder, R. Rodrigues, U. A. Acar, and\nR. Pasquin, “Incoop Mapreduce for incremental computa-\ntions,” in Proceedings of the 2nd ACM Symposium on Cloud\nComputing, ser SOCC ’11. New York, NY, USA: ACM,\n2011, pp. 7:1–7:14.\n[31] S. Rao, R. Ramakrishnan, A. Silberstein, M Ovsiannikov,\nand D. Reeves, “Sail?sh: a framework for large scale data\nprocessing,” in Proceedings of the Third ACM Symposium on\nCloud Computing, ser. SoCC ’12. New York, NY, USA:\nACM, 2012, pp. 4:1–4:14.\n[32 Kosmos distributed ?le system,”\nhttp://code.google.com/p/kosmosfs/, [Online; Last accessed\nJan 2013].\n[33] E Jahani, M. J. Cafarella, and C. Re´, “Automatic optimization\nfor mapreduce programs,” Proc. VLDB Endow., vol 4, no. 6,\npp. 385–396, Mar. 2011.\n[34] “PoweredByHadoop,” http://wiki.apache.org/hadoop/PoweredBy,\n[Online Last accessed Jan 2013].\n[35] Y. Chen, S. Alspaugh, and R. Katz, “Interactive analytical\nprocessing in big data systems: a cross-industry study of\nmapreduce workloads,” Proc. VLDB Endow., vol. 5, no. 12,\npp 1802–1813, Aug. 2012.\n1038\n 


CONCLUSION \n \nIn this paper, we suggested a network aware Hadoop \nperformance model and explored its scalability with the model. \nOur experimental results showed that the model could predict a \njob’s execution with 5 % average error compared to the real \njob measurement within up to 4 rack 160 server clusters in nresolution of second. We could explain the cause of the real job \nmeasurement pattern under various conditions with the model. \nIn addition, with the model, we explored the Hadoop \nscalability characteristic in large clusters under various inter-\nswitch bandwidths and a numbers of reduces which are \nimportant for the scalability. By using the result, we showed \nHadoop scales out well in the typical cluster network nconfigurations, and suggested guidelines for application design \nand Hadoop scalability improvement. \n A 160 server cluster is a sufficiently large cluster for most \nof newly joined users to big data analysis without sufficient \nbudget for cluster and experience. Our model contributes the \nusers to save cost by assisting to analyzing potential of their \ncluster before adding a new server.  \nREFERENCES \n \n[1] J. Dean and S. Ghemawat MapReduce: Simplified data processing on \nlarge clusters,” Proc. of OSDI’04, pp. 137-150, Dec. 2004. \n[2] The Apache Software Foundation, “Hadoop Map-Reduce tutorial,” \nHadoop Project  \n[3] Hadoop world http://www.hadoopworld.com/ \n[4] K. Shavachko, H. Kuang, S. Radia and R. Chansler, “The Hadoop \ndistributed file system,” Proc. of MSST 2010, pp.1-10, 2010. \n[5] Apache Hadoop MapReduce: Mumak: Map-Reduce simulator nAvailable online at https://issues.apache.org/jira/browse/MAPREDUCE-\n728. Accessed on Nov. 2012 \n[6] Guaying Wang, Ali R. Butt, Prashant Pandey, Karan Gupta, “Using \nrealistic simulation for performance analysis of mapreduce setups”, Proc. \nof LASP 09. Pp.19-26, 2009 \n[7] Ns-2, http://www.isi.edu/nsnam/ns/, Accessed on Nov.2012 \n[8] Hailong Yang, Zhongzhi Luan, Wenjun Li, Depei Qian, “MapReduce \nWorkload Modeling with Statistical Approach”, Journal of Grid \nComputing, Volume 10, Issue 2, pp.279-310, June 2012 \n[9] Lijie Xu MapReduce Framework Optimization via Performance \nModeling”, Proc. of Parallel and Distributed Processing Symposium \nWorkshops & PhD Forum \(IPDPSW  I.Stoica. \n“Improving MapReduce performance in heterogeneous environments”, \nProc. of OSDI, 2008 \n[11] K Morton, A. Friesen, M. Balazinska, and D.Grossman. “Estimating the \nprogress of MapReduce pipelines”,  Proc of ICDE, 2010. \n[12] A. Verma, L. Cherkasova, and R. Campbell. “ARIA:Automatic \nResource Inference and Allocation for MapReduce Environments,” Proc. \nof ICAC, 2011. \n[13] A. Verma, L. Cherkasova, and R. Campbell Resource Provisioning \nFramework for MapReduce Jobs with Performance Goals,” Proc. of \nMiddleware, 2011 n[14] Boduo Li,Edward Mazur,Yanlei Diao,Andrew McGregor,Prashant \nShenoy, "A platform for scalable one-pass analytics using MapReduce" \nProc. of the 2011 ACM SIGMOD International Conference on \nManagement of data. pp 985-996, 2011 \n[15] Herodotou, H., Babu, S. “Profiling, What-if Analysis, and Cost-based \nOptimization of MapReduce Programs,” Proc. of VLDB, 2010. \n[16] Herodotos Herodotou, “Hadoop Performance Models”, Technical nReport, CS-2011095, Duke University, http://arxiv.org/abs/1106.0940, \n2011 \n[17] Tom White. 2010 Hadoop:The Definitive Guide” \(Second edition  http://sourceforge.net/projects/bonnie/, Accessed on \nNov.2012 \n[19] Netperf, http://www.netperf.org/netperf Accessed on Nov.2012 \n0\n1000\n2000\n3000\n4000\n5000\n6000\n7000\n1 2 4 8 16 32\nIdeal\nJob\(400 MB/s 200 MB/s 100 MB/s Bglobal=100, 200, 400 MB/s,  40 servers/rack Input = 3840 blocks Fixed, Total Reducers = Total servers s under various inter-switch \nbandwidth conditions \n0\n2000\n4000\n6000\n8000\n10000\n12000\n1 2 4 8 16 32\nReduce=16\nReduce=32\nReduce=64\nReduce=Total Servers\nTime\(s Bglobal=100   MB/s,  40 servers/rack Input =  3840 blocks Fixed, Total Reducers = 16, 32, 64, Total Servers prediction under various number of reducers \n2013 5th International Conference on Computer Science and Information Technology \(CSIT 


desired\nlevel of accuracy by simply increasing the number of steps.\nIn particular, any of Messac’s canonical satisfaction function\ncan be modeled [31].\nIn the VASSAR methodology, the system architect can enter\none-of-a-kind requirement satisfaction rules. However, a\nspreadsheet-based user interface was implemented for rapid\ncoding of multi-step satisfaction functions, which have all the\nsame structure.\nStep 3a Aggregate Requirement Satisfaction—The prefer-\nence domain is hyperdimensional because there is at least one\ndimension per requirement, and in a complex system there\ncan easily be several hundreds or even thousands of require-\nments. Dominated architectures could easily be eliminated\nby means of Pareto analysis, but this is unlikely to reduce\nthe size of the tradespace by much due to the large number\nof requirements. Hence, the problem remains of choosing\nbetween architectures that have very different requirement\n10\nFigure 10. Level 2 VASSAR, step 3a: Aggregate satisfaction\nsatisfaction sets, but seem globally equally attractive. In prac-\ntice, the dimensionality of this domain needs to be reduced in\norder to be able to make a decision concerning the preferred\narchitectures. This requires the use of subjective information\ncapturing stakeholder preferences.\nHence, the last step of the methodology is the reduction of the\ndimensionality of the preference domain through aggregation\nof requirement \(i.e., subobjective then into stakeholder satisfaction. This two-\nstep aggregation process requires the elicitation of a list of\nobjectives and subobjectives from different stakeholders, and\nreduces the dimensionality of the preference domain \(i.e., the\nnumber of metrics Nsh\nto 1 if the relative importance of stakeholders to a central\nstakeholder is introduced. The relative importance of stake-\nholders can be formally computed by applying quantitative\nstakeholder analysis techniques e.g. stakeholder networks\n[32 represents the value of the system\narchitecture to the central stakeholder. The entire process is\nillustrated in Figure 10.\nMathematically, requirement aggregation rules reduce the\ndimensionality of the satisfaction space by using aggregation\nfunctions. Aggregation functions combine arithmetic and\nlogical operators. The simplest and most commonly used\narithmetic operator is the weighted average. For example, the\nsatisfaction of a stakeholder is given by a weighted average\nof the satisfaction of its objectives. More sophisticated arith-\nmetic operators are also possible \(see for example Yager’s\nordered weighted averaging operator or Fortin’s gradual num-\nbers [33], [34 type, such as the at-least-n-out-of-\nk condition: “the stakeholder is satisfied if 3 or more of these\n4 objectives are satisfied.”\nIn the VASSAR methodology, the system architect can man-\nually define one-of-a-kind aggregation functions. Weighted\naverages can be rapidly coded in from a spreadsheet-based\nuser interface.\nStep 3b: Prepare Explanations—The VASSAR methodology\nprovides a set of explanations that accompany the fuzzy value\nmetric. This is central to the methodology, as it satisfies one\nof its key requirements, namely that of showing traceability\nof the value delivery loop. Explanation rules keep track of\nTable 3. Decisions and range of options for the case study\nDecision Range of values\n#planes 1-4\n#sats per plane 1-4\nOrbit altitude [400 800]km in steps of\n100km\nOrbit inclination polar or SSO\nOrbit RAAN Dawn-dusk or AM\nPayload selection Any combination of the 5\ninstruments described in the\npayload description subsection\n\(31 combinations architecture Any partition of the payload\ninto spacecraft \(between 1 and\n52 combinations, depending\non number of instruments facts, requirement satisfaction\nfacts, objective satisfaction facts, and stakeholder satisfaction\nfacts, as illustrated in Figure 11.\n3. CASE STUDY\nWe selected a hypothetical soil moisture remote sensing\nsatellite mission as the case study to show the applicability\nthe VASSAR methodology. This hypothetical mission would\ncombine instruments that are similar to real instruments flown\nor to be flown in NASA and ESA missions References to\nthese missions will be made as required. This example was\ndesigned to illustrate different features of the methodology:\n\(1 elements of subjectivity, which are hard to\nmodel in traditional design tools;\n\(2 emergent behavior that actu-\nally drives an important part of the value delivery;\n\(3 of complexity, as it is complex\nenough to yield non-trivial results, but simple enough to avoid\nthe need to provide excessive background.\nPayload description\nFor this example we consider five candidate instruments:\na an L-band polarimetric radiometer \(LRADIO synthetic\naperture radar \(LSAR XRADIO IR P-band polarimetric\nSAR \(PSAR mass, power data rate, performance tradespace\nFor this example, we chose to represent an architecture as\nthe set of decisions laid out in Table 


3. The set of possible\narchitectures is given by the Cartesian product of the ranges\nof values in Table 3 which consists of 3,636 architectures.\n11\nFigure 11. Level 2 VASSAR, step 3b: Prepare explanations\nStakeholder requirements\nFive stakeholder groups or panels were identified for this\nexample, labeled as follows: weather climate, ecosystems,\nwater, and applications. All five panels were initially con-\nsidered equally important; a case with non-uniform weights\nis considered later in the sensitivity analysis. Note that the\npanels’ relative weights could be obtained through a formal\nmethod such as the one proposed by Cameron et al [32].\nThe specific objectives of each panel, as well as their relative\nranking, are provided in Appendix B.\nCapability rules\nNominal instrument capabilities are presented in Appendix\nA. However, architectural decisions can affect these in-\nstrument capabilities in non-trivial ways that are encoded in\nlogical rules. For example, temporal resolution and spatial\nresolution both depend on the orbital parameters. Data\nquality also depends on the orbital parameters. Below are\na few examples of situations in which data quality is severely\ncompromised due to orbital parameters.\nLighting conditions—Visible and NIR instruments \(namely\nthe corresponding channels of the IR radiometer node because they cannot gather\nenough light.\nImage distortion—Side-looking instruments cannot work at\nlow altitudes because image distortion becomes unaccept-\nable.\nEmergence rules\nEmergent behavior plays a key role in value delivery to\nstakeholders. We describe in this subsection a few examples\nof emergent behavior \(both in science and cost spatial\nresolution soil moisture dataset provided by LRADIO can be\ncombined with the lower accuracy, higher spatial resolution\ndataset provided by LSAR to produce a new high accuracy,\nmedium spatial resolution dataset.\nSample averaging—In any dataset, part of the non-systematic\nerror can be reduced by averaging samples in time or space,\nthus effectively creating a new dataset that trades accuracy\nagainst spatial or temporal resolution.\nLevel-4 data products—A level-4 net carbon ecosystem ex-\nchange dataset can be created from the combination of a\nlevel-3 soil moisture dataset and several ancillary products,\nnamely land surface temperature, vegetation state, and land-\ncover status.\nMultispectral measurements—IR and MW snow and ice cover\ndatasets can be combined to produce new, multispectral, more\naccurate datasets.\nSharing a common dish—The L-band radar and radiometer\ncan share a common antenna thus effectively reducing the\ntotal mass of the system.\nLearning Curve—If several identical satellites are developed\nand fabricated, the marginal cost of the second and subse-\nquent units is lower than the cost of the first unit due to\nlearning.\nResults\nThe set of 3,636 architectures was evaluated using VASSAR.\nThe benefit portion is based on the set of requirements from\nAppendix B. The cost portion is based on the cost model de-\nscribed in Appendix C. The point science scores and lifecycle\ncost estimates for all these architectures are shown on Figure\n12. These numbers are obtained from defuzzyfying the fuzzy\n12\nFigure 12. Expected science vs expected lifecycle cost for\n3,636 architectures \(uniform weights analysis—The main goal of any system architect-\ning tool is to gain insight into the “shape” of the tradespace,\nwhat the main trades are, whether there are families of\narchitectures, and so on. We observe several features just by\nlooking at the tradespace in Figure 12:\n\(1 a science score\nof 0. This happens when an architecture does not meet one\nor more requirements that are defined as critical to provide\nvalue, or when the instruments are put in environments where\nthey cannot operate. An example of the latter is when a side-\nlooking instrument is put at 400km, resulting in a too large\nimage distortion.\n\(2 unresolvable conflicting require-\nments. In this particular case, most of the observations\nrequire a SSO in order to get rid of diurnal variations in radi-\nance. However, a small subset of requirements that concern\noceanography or cryospheric measurements are ideally taken\nin true polar, non-SSO orbits, in order to avoid tidal aliasing\n\(oceanography cryosphere it is impossible to be in a polar\nand SSO orbit simultaneously, some value is going to be lost\nno matter what decision is made.\n\(3 costs. This is a typical behavior in\narchitectural tradespaces, that has its origins in the non-linear\nmapping between capabilities and satisfaction, namely in the\nquantization of satisfaction levels. In other words slightly\ndifferent performances may be perceived as equivalent in\nterms of satisfaction by stakeholders.\nExplanation facility—The explanation facility provides sup-\nport for more advanced analysis of the tradespace. Examples\nof the features of the explanation facility are listed below:\n\(1 The explanation facility provides\ndetailed explanations of the scores of an architecture in text\nformat as required by the user. An example of such informa-\ntion is provided in Table 4.\n\(2 support: The explanation facility\ncan provide information about one or more architectures on\nFigure 13 


Architectures with one satellite per plane high-\nlighted on the tradespace\nthe tradespace just by clicking on the corresponding points\non a chart. For example, we can obtain the details of the non-\ndominated architectures in Figure 12 by clicking on them,\nas shown in Table 5. Note that all non-dominated architec-\ntures have 800km dawn-dusk SSO, and they are monolithic\narchitectures \(all instruments are put onto a single spacecraft satellites in the constellation\n\(1 or 2 instrument on non-dominated architectures. This\nis due to the fact that it has a conflicting orbit requirement\nwith the rest of instruments, which results in an unfavorable\nscience-cost trade. In other words adding the IR instrument\nto the suite would require flying the instrument in an AM orbit\ninstead of a dawn-dusk orbit, which would negatively impact\nboth the science output of the other instruments and the cost\nof the platform.\nThe tool can also highlight the regions of the tradespace\nthat correspond to a particular combination of architectural\ndecisions. For example, Figure 13 highlights all architectures\nin which the number of satellites per plane is 1. It is easy to\nsee on this chart that it is impossible to achieve the maximum\nachievable science score with only one satellite per plane, due\nto unsatisfied temporal resolution requirements.\n\(3 advanced support, such as\nautomatic detection of common architectural features in a\nparticular region of the tradespace. For example, if we ask\nthe explanation facility to study the region in which science\nis between 0.01; 0.2], the tool automatically detects that most\nof the architectures in this region have polar, non-SSO orbits,\nas shown in Figure 14.\nFuzzy results—We emphasized earlier the large uncertainty in\nthe system architecting process, and the importance of being\nable to deal with fuzzy numbers in the RBES. It is important\nto note that conceptually, we are using fuzzy numbers for\ntwo slightly different purposes: capturing uncertainty and\ncapturing fuzziness or ambiguity. Uncertainty refers to statis-\ntical uncertainty or randomness, whereas fuzziness refers to\nnon-statistical uncertainty or vagueness. Treating statistical\nuncertainty with interval analysis is provides less information\nthan treating it with probability distribution functions \(pdf example, we are using fuzzy numbers to\n13\nTable 4. Example of text-based explanations for science score\nArchitecture #3 achieves a score of 0.8730 because:\nSubobj CLI2-2 \(meas “3.4.1 Ocean surface wind speed loss of 0.010 value because of SSO orbit does not provide adequate tidal\nsampling \(polar orbit required score of 0 because no measurement of parameter “2.3.3 Carbon net ecosystem\nexchange NEE” is found \(requires multispectral measurements meas “4.2.4 snow cover loss of 0.013 value Missing multispectral combina-\ntion of sensors does not provide adequate coverage of\npolar regions \(polar orbit required meas “4.3.2 Sea ice cover loss of 0.018 value of Insufficient accuracy \(Missing multispectral combination\nof sensors score of “Half” because of SSO orbit does not provide adequate coverage of\npolar regions \(polar orbit required meas “2.3.2 soil moisture loss of 0.020 value because:\nAttribute Horizontal-Spatial-Resolution gets a score of “Half” because of insufficient HSR to meet future\nNWP grid size \(4km required, [4;12]km achieved Figure 12 \(uniform weights km  XRADIO PSAR [1, 1, 1] 800 SSO DD 2\n586 LRADIO PSAR [1, 1] 800 SSO DD 2\n811 LRADIO PSAR [1, 1] 800 SSO DD 1\n2592 LRADIO LSAR [1] 800 SSO-DD 2\n5 PSAR [1] 800 SSO DD 1\n3605 LSAR LRADIO [1] 800 SSO-DD 1\n3627 LSAR [1 800 SSO-DD 1\n696 LRADIO [1] 800 SSO DD 2\n810 LRADIO [1] 800 SSO DD 1\nrepresent statistical uncertainty in cost, and non-statistical\nuncertainty in science. Figure 15 shows the magnitude of\nthe uncertainty for the architectures on the Pareto frontier of\nFigure 12. The sources of uncertainty for cost are mostly\nthe standard errors from the CERs used in the cost estimation\nmodel. The sources of uncertainty for science in this example\nare the use of fuzzy scores to assess requirement satisfaction\n\(each requirement is satisfied at one of five fuzzy levels as\nexplained in the section describing fuzzy numbers.\nIt is important to note that different architectures have dif-\nferent levels of uncertainty. Uncertainty in cost is similar in\nrelative terms \(not in absolute terms mag-\nnitude [35]. However, uncertainty in science is not homoge-\nneous because a requirement fully satisfied is encoded as a\nfuzzy number with mean one and zero width, and a critical\nrequirement that is not satisfied is encoded as a fuzzy number\nwith mean zero and zero width. Thus, for the same score, dif-\nferent uncertainty 


levels are possible: if the score comes from\nsatisfying a few requirements fully and completely missing\nthe rest, uncertainty will be very low; conversely, if the score\ncomes from satisfying all or most of the requirements at an\nintermediate level \(e.g., “Most” or “Some larger.\nSensitivity Analysis—There are several ways of conducting a\nsensitivity analysis in VASSAR:\n1 simply rerunning the tool with different sets of param-\neters. In this section we provide two examples of sensitivity\nanalysis: one concerning the capabilities of the P-band SAR\nto measure soil moisture, and the other one concerning the\nrelative importance of the stakeholder panels.\nA major source of uncertainty in this piece of analysis is the\nability of the P-band SAR to provide useful measurements of\nsoil moisture, which has not yet been proven. The appeal\nof P-band SAR measurements of soil moisture is that of\nincreased soil and vegetation penetration due to the lower\nfrequency. However, most of the signal at this frequency\ncomes from soil roughness, which makes the soil moisture\nretrieval challenging [36]. Hence the question of whether this\ninstrument will be able of producing useful measurements of\n14\nFigure 14. Effect of orbit inclination on science and cost\nFigure 15. Fuzzy Science vs fuzzy lifecycle cost for non-\ndominated architectures \(uniform weights instrument does\nnot have this capability. The details of the non-dominated\narchitectures under this scenario are provided in Table 6. We\nnote several changes with respect to Table 5. First, the LSAR\ninstrument appears much more often because its combination\nwith LRADIO is the only one that can provide soil moisture\nmeasurements that satisfy the needs of the weather commu-\nnity in terms of both accuracy and spatial resolution. The\nPSAR instrument still appears in the high-cost region of the\nPareto frontier, because it is the only instrument with the\nhigh penetration capability. However, it disappears of the\nlower cost of the Pareto frontier because the extra science\ndoes not compensate the cost of developing it for the given\nstakeholder preferences. It is also noticeable that the high\ncost non-dominated architectures have now more than one\nsatellite because architectures flying the two SAR on the same\nplatform are dominated \(they are too costly become three times as\nimportant as the other panels. The details about the non-\ndominated architectures in this case are shown in Table 7.\nThis change in stakeholder preferences brings forth a major\nchange in the architectural tradespace: the best architectures\nin the high-science region of the tradespace now include\nthe IR instrument, contrary to what happened for uniform\nweights. In order to get the maximum science output out\nFigure 16. Propagation of uncertainty in payload mass to\npayload cost.\nof the IR instrument it is necessary to fly it in an AM orbit,\nwhich impacts both the science output of other instruments\nand the cost of the spacecraft.\nMore advanced variants of this option allow to compute the\nthreshold value for a parameter that makes the non-dominated\nset change. For example, the tool determined in this case that\nfor wECOwi < 2.59 the best architectures remain similar to\nthose presented in Table 5, whereas for wECOwi ? 2.59, the\nbest architectures switch to those presented in Table 7. Some\ndecision makers are more comfortable with this kind of result\nthan plain results, because they feel that they can evaluate\nthe certainty with which the statement wECOwi < 2.59 is true\nmore easily than they can assign weights to the different\nstakeholder panels.\n2 encoding any parameter as a fuzzy value. For instance,\nthe mass or the accuracy of an instrument can also be encoded\nas a fuzzy number with a certain range of values, and these\nuncertainties will be propagated to the cost and science met-\nrics. An example of the propagation of uncertainty in mass\nto cost is shown in Figure 16. The triangles represent the\ntriangular membership functions for mass and cost. Note\nthat the altitudes of these triangles are notional and do not\ncorrespond to the values in the axis. The red line shows the\ncorrespondence between scalar mass and scalar cost through\na parametric relationship embedded in the tool.\n3 merit change\nwhen each variable is changed. Note that gradients or pseudo-\ngradients cannot generally be defined in this local search\nprocess as some of the variables are categorical. Instead, rules\nare created that automatically enumerate all the architectures\nthat differ from the reference architecture in just one archi-\ntectural aspect. For example, an instruments is added to or\nremoved from the payload, or the LTAN is changed from DD\nto AM. We used VASSAR to look around the architecture\n#669, highlighted in Table 5. Eleven architectures were thus\nautomatically enumerated and evaluated. They are shown in\nFigure 17. This kind of results can be useful to determine the\noptimal evolution of an architecture, such as in determining\nan optimal descoping option in the event of a downward\nbudget.\n15\nTable 6. Details of non-dominated architectures when P-band SAR cannot measure soil moisture \(uniform weights km sats per plane\n1831 LSAR LRADIO XRADIO PSAR [1, 1, 2, 2] 800 SSO DD 2\n1577 LSAR LRADIO PSAR [1, 1, 2] 800 SSO DD 2\n2948 LSAR LRADIO XRADIO PSAR [1, 1, 1, 2] 800 SSO DD 1\n2631 LSAR LRADIO PSAR [1, 1, 2] 800 SSO-DD 1\n2604 


LSAR LRADIO PSAR [1, 2, 2] 800 SSO DD 1\n2592 LSAR LRADIO [1, 1] 800 SSO-DD 2\n3605 LSAR LRADIO [1, 1] 800 SSO DD 1\n3627 LSAR [1] 800 SSO DD 1\n696 LRADIO [1] 800 SSO DD 2\n810 LRADIO [1] 800 SSO DD 1\nTable 7. Details of non-dominated architectures when ecosystems panel is 3 times as important as the others\nArch# Payload Instr allocation h \(km  XRADIO PSAR [1, 1, 1] 800 SSO DD 2\n586 LRADIO PSAR [1, 1] 800 SSO DD 2\n811 LRADIO PSAR [1, 1] 800 SSO-DD 1\n5 PSAR [1] 800 SSO DD 1\n3605 LSAR LRADIO [1, 1] 800 SSO-DD 1\n3627 LSAR [1] 800 SSO DD 1\n696 LRADIO [1] 800 SSO DD 2\n810 LRADIO [1] 800 SSO DD 1\nFigure 17. Local search around architecture #669, high-\nlighted on Table 5\n4 CONCLUSION\nThis paper has presented a methodology to assess the value\nof a system architecture using RBES Such methodology can\nbe used in the context of automatic architectural tradespace\nexploration to develop the part of computational tools that\nautomatically evaluates the architectures being generated. An\nexample of such tool was shown in the context of Earth Ob-\nserving Satellite Systems \(EOSS is\ndivided in two parts. First, the advantages and disadvantages\nof VASSAR with respect to the state-of-the-art of system\narchitecting tools is discussed. Second, the next steps in this\nresearch project are outlined.\nAdvantages and disadvantages of VASSAR\nThe following are advantages  the\nVASSAR methodology with respect to other frameworks:\n\(1  delivery\nloop. All requirements are directly traceable to stakeholder\nneeds. All capabilities are directly traceable to architectural\ndecisions.\n\(2  e.g., sci-\nence and engineering back-\ngrounds, simply because it is the way in which the human\nmind works.\n\(3  the domain-specific\nknowledge from the domain-independent knowledge, which\ntranslates into increased scalability and reusability, and facil-\nitates task allocation between system architects and software\nengineers.\n\(4  lessons learned: it serves as\na repository of knowledge to conserve expertise, and it also\nuses the lessons learned in the form of logical rules to evaluate\nsystem architectures.\n\(5  delivery loop facilitates more\n16\noptimal task allocation between man \(the system architect the computational tool architectures and through the use of the text-\nbased and graphics-based explanation facility. The system\narchitect feeds the tool with knowledge, guides the tradespace\nexploration process, and makes all non-objective decisions.\n\(6  of recursive algorithms, which\nare at the core of modeling emergence, which in turn is the\norigin of value.\n\(7  8  a computational price, which is only\nworth it if the knowledge base is likely to evolve.\n\(9  slow when the number of rules is very\nlarge.\n\(10  the expert knowledge \(e.g. lessons learned specific\npurpose: evaluating system architectures in the context of\nautomatic architectural tradespace exploration. Using this\nmethodology, a tool was created to evaluate architectures in\nthe context of Earth Observing Satellite Systems. Some of\nthe next steps concern the methodology itself, while others\nconcern this tool.\nConcerning the methodology, the extension of VASSAR’s\nexplanation facility with more advanced features requires\nthe incorporation of a machine learning layer on top of the\nRBES. This type of hybrid AI tool is seen as a potentially\nfruitful area of research. Furthermore, this paper focused\non the use of RBES for the valuation portion of the system\narchitecting process. RBES can be used in other aspects of\nthe architecting process. A similar framework has been cre-\nated that allows automatic enumeration of several canonical\ntypes of architectures using RBES [37]. This framework is\ncontinuously being improved with more efficient algorithms\nof enumerating certain classes of architectures. Finally, the\ncurrent VASSAR implementation is restrictive in terms of\nrepresentation of architectures, as they need to be represented\nas lists of pairs decision-value. A more advanced version\nof the tool could allow importing architectures expressed in\nmore powerful representation tools such as SysML or OPM.\nConcerning the tool, the knowledge base can be improved in\nseveral points, but not all improvements would have the same\nimpact on the fidelity of the tool. For instance, it is unlikely\nthat a more accurate ?V budget would result in very different\nresults. Two examples where the improvement would yield a\nhigh return in modeling fidelity are discussed below.\nFirst, the spacecraft design algorithm could benefit from a\nhigher-fidelity configuration module that accounts for the\nposition of the main spacecraft components and provides\nmore accurate estimations of the dimensions and moments\nof inertia of the spacecraft.\nSecond, the cost model uses cost estimating relationships\n\(CERs are old and have very large standard errors.\nHigher fidelity cost models could be used instead of these\nTable 


10. Stakeholders and weights\nPanel Id Description Weight\nWeather WEA Weather 20%\nClimate CLI Climate 20%\nEcosystems ECO Land and Ecosystems 20%\nWater WAT Water 20%\nHealth HEA Human health 20%\nTable 11. Weather panel objectives\nObjective Description Value\nWEA1 Initialization of NWP models 60%\nWEA2 River forecast streamflow models 20%\nWEA3 River forecast flash flood models 20%\nCERs.\nAPPENDICES\nA. INSTRUMENT CHARACTERISTICS\nThe characteristics of the 5 instruments used in the exam-\nple are provided in Tables 8 and 9 These characteristics\nare based on real instruments from the SMAP, NPP and\nBIOMASS missions. However, these real instruments are\nused as guidelines and our hypothetical instruments are not\nmeant to represent the real instruments.\nB. STAKEHOLDER REQUIREMENTS\nThe information used in the case study for the stakeholders\nand their hierarchy of requirements are shown below in\nTables 10 to 15 and Figure 18.\nC. COST MODEL\nThe cost model used in the case study is a rule-based cost\nmodel largely based on Larson and Wertzs Space Mission\nAnalysis and Design \(SMAD  based on the NASA Instrument Cost model\nTable 12. Climate panel objectives\nObjective Description Value\nCLI1 Boundary conditions for climate models 80%\nCLI2 Ocean thermohaline circulation 20%\nTable 13. Ecosystems panel objectives\nObjective Description Value\nECO1 Net carbon flux in boreal landscapes 75%\nECO2 Ocean thermohaline circulation 25%\n17\nTable 8. Instrument characteristics\nLRADIO LSAR XRADIO IR PSAR\nMass \(kg 390\nAvg. power \(W Mbps capabilities\nLRADIO LSAR XRADIO IR PSAR\nSoil moisture Highest\naccuracy,\nlow spatial\nresolution\nLow accuracy,\nhigh spatial\nresolution\nMedium\naccuracy,\nlow spatial\nresolution\nLowest\naccuracy,\nhigh spatial\nresolution\nMedium\naccuracy,\nhigh spatial\nresolution\nFreeze-thaw state High accuracy,\nhigh spatial res-\nolution\nSnow cover Medium\naccuracy,\nlow spatial\nresolution\nLow accuracy,\nhigh spatial\nresolution\nHigh accuracy,\nlow spatial reso-\nlution\nLow accuracy,\nhigh spatial\nresolution\nMedium\naccuracy,\nlow spatial\nresolution\nSea ice cover Medium\naccuracy,\nlow spatial\nresolution\nLow accuracy,\nhigh spatial\nresolution\nHigh accuracy,\nlow spatial reso-\nlution\nLow accuracy,\nhigh spatial\nresolution\nMedium\naccuracy,\nlow spatial\nresolution\nSea surface wind Low accuracy,\nlow spatial\nresolution\nLow accuracy,\nhigh spatial\nresolution\nHigh accuracy,\nlow spatial reso-\nlution\nLow accuracy,\nlow spatial\nresolution\nPrecipitation rate High accuracy,\nlow spatial reso-\nlution\nOcean salinity High accuracy,\nlow spatial reso-\nlution\nMedium\naccuracy,\nhigh spatial\nresolution\nLow accuracy,\nlow spatial\nresolution\nTable 14. Water panel objectives\nObjective Description Value\nWAT1 Estimation of runoff-EVT 67%\nWAT2 Estimation of precipitation 11%\nWAT3 Snow and cold land processes 11%\nWAT4 Sea Ice cover 11%\nTable 15. Applications panel objectives\nObjective Description Value\nHEA1 Heat Stress and Drought 20%\nHEA2 Agriculture productivity 20%\nHEA3 Flood monitoring 20%\nHEA4 Wild fires prediction 20%\nHEA5 Spread of infectious diseases 20%\n[38]. Bus cost is based on the parametric relationships\nprovided in SMAD \([35 these parametric are based\non the spacecraft mass budget, a spacecraft design module\nthat estimates the mass and power budgets of each spacecraft\nprecedes the cost estimation module.\nThe spacecraft design module is iterative because of the\ncouplings between different subsystems. For example, the\nmass of the spacecraft affects the design of the ADCS through\nthe size of the reaction wheels and the amount of propellant\namongst others, and these feed back into the computation of\nthe spacecraft mass. In practice, three iterations are sufficient\nto make the design process converge to a precision of less\nthan a kg.\nAn overview of the spacecraft design module is provided in\nFigure 20.\nOnce the mass, power, and delta-V budgets have been cal-\nculated, the different components of lifecycle cost shown\nin Figure 19 can be computed using the cost estimating\nrelationships in SMAD.\n18\nFigure 18. Hierarchy of stakeholder needs for the soil\nmoisture case study\nFigure 19. Lifecycle cost breakdown\nFigure 20. Spacecraft design algorithm\n19\nACKNOWLEDGMENTS\nThe authors would like to thank la Caixa Fellowship program,\nNASA, and Draper Laboratory for partially funding this\nproject.\nREFERENCES\n[1] E. Crawley, O. D. Weck, S. Eppinger, C. Magee,\nJ. Moses, W. Seering, J Schindall, D. Wallace, and\nD. Whitney, “Engineering Systems Monograph,” Mas-\nsachusetts Institute of Technology, Tech. Rep., 2004.\n[2] N. P. Suh, “Complexity Theory Based on Axiomatic De-\nsign,” in Complexity Theory and Applications. New\nYork: Oxford University Press, 2005, ch. 3, pp. 54–86.\n[3] M. W. Maier Architecting principles for systems-of-\nsystems,” Systems Engineering, vol. 1, no. 4, pp. 267–\n284, 1998.\n[4 M. W. Maier and E. Rechtin, The Art of Systems Archi-\ntecting. New York: CRC press, 2000.\n[5] T. Weilkiens Systems engineering with SysML/UML:\nmodeling, analysis, design. Heidelberg, Germany: The\nMorgan Kaufmann/OMG Press, 2006.\n[6] DoD Architecture Framework Group, “DoD Architec-\nture Framework version 2.1,” Washington DC 2000.\n[7] M. Rao, S. Ramakrishnan, and C. Dagli, “Modeling and\nSimulation of Net Centric System of Systems Using\nSystems Modeling Language and Colored Petri-nets :\nA Demonstration Using the Global Earth Observation\nSystem of Systems,” Systems Engineering, vol. 11,\nno. 3, pp. 203–220, 2008.\n[8] D. Dori, I 


Reinhartz-Berger, and A. Sturm, “OPCAT-\na bimodal CASE tool for object-process based system\ndevelopment,” in 5th International Conference on En-\nterprise Information Systems \(ICEIS 2003  Olsen, R. Haagmans, T. J. Sabaka, A. Kuvshinov,\nS. Maus, M. E. Purucker, M. Rother, V. Lesur, and\nM. Mandea The Swarm End-to-End mission simulator\nstudy : A demonstration of separating the various con-\ntributions to Earths magnetic field using synthetic data,”\nEarth, Planets, and Space, vol. 58, pp. 359–370, 2006.\n[10] R. M Atlas, “Observing System Simulation Exper-\niments: methodology, examples and limitations,” in\nProceedings of the WMO Workshop on the Impact of\nvarious observing systems on Numerical Weather Pre-\ndiction, Geneva Switzerland, 1997.\n[11] M. Adler, R. C. Moeller, C. S. Borden, W. D. Smythe,\nR. F. Shotwell, B. F. Cole, T. R Spilker, N. J.\nStrange, A. E. Petropoulos, D. Chattopadhyay, J. Ervin,\nE. Deems, P. Tsou, and J. Spencer Rapid Mission\nArchitecture Trade Study of Enceladus Mission Con-\ncepts,” in Proceedings of the 2011 IEEE Aerospace\nConference, Big Sky, Montana, 2011.\n[12] J. Hauser and D. Clausing, “The house of quality,”\nHarvard Business Review, no. May-June 1998, 1988.\n[13] T. L. Saaty, “Decision Making With the Analytic Hier-\narchy Process,” International Journal of Services Sci-\nences, vol. 1, no. 1, pp. 83–98, 2008.\n[14] A. M. Ross, D. E Hastings, J. M. Warmkessel, and\nN. P. Diller, “Multi-attribute Tradespace Exploration as\nFront End for Effective Space System Design,” Journal\nof Spacecraft and Rockets, vol. 41, no. 1, 2004.\n[15] W. L. Baumol On the social rate of discount,” The\nAmerican Economic Review, vol. 58, no. 4, pp. 788–\n802, 1968.\n[16] M. K Macauley, “The value of information : Measuring\nthe contribution of space-derived earth science data to\nresource management,” Journal of Environmental Eco-\nnomics and Management, vol. 22, pp. 274–282, 2006.\n[17 S. Jamieson, “Likert scales: how to \(ab Dec.\n2004.\n[18] R. C. Mitchell and R. T. Carson, Using Surveys to\nValue Public Goods: The Contingent Valuation Method,\nS. Aller, Ed. Washington DC: Library of Congress,\n1989.\n[19] O. C. Brown, P. Eremenko, and P. D Collopy, “Value-\nCentric Design Methodologies for Fractionated Space-\ncraft: Progress Summary from Phase 1 of the DARPA\nSystem F6 Program,” AIAA SPACE 2009 Conference &\nExposition, 2009.\n[20] a. Stoffelen, G. J Marseille, F. Bouttier, D. Vasiljevic,\nS. de Haan, and C. Cardinali, “ADM-Aeolus Doppler\nwind lidar Observing System Simulation Experiment,”\nQuarterly Journal of the Royal Meteorological Society,\nvol. 132, no. 619, pp 1927–1947, Jul. 2006.\n[21] A. Newell and H. A. Simon, Human Problem Solving.\nEnglewood Cliffs, NJ: Prentice Hall, 1972.\n[22] R. Lindsay, B. G. Buchanan, and E. A. Feigenbaum,\n“DENDRAL: A Case Study of the First Expert System\nfor Scientific Hypothesis Formation,” Artificial Intelli-\ngence, vol. 61, no. 2, pp. 209–261, Jun 1993.\n[23] B. G. Buchanan and E. H. Shortliffe, Rule-based Ex-\npert Systems: the MYCIN experiments of the Stanford\nHeuristic Programming Project. Addison-Wesley,\n1984.\n[24] P. Hart, R. Duda, and M. Einaudi PROSPECTORA\ncomputer-based consultation system for mineral explo-\nration,” Mathematical Geology, no. November 1977,\n1978.\n[25] J. McDermott, “R1: A Rule-Based Configurer of Com-\nputer Systems,” Artificial lntell., 19 39, vol. 19, no. 1,\npp. 39–88, Sep. 1982.\n[26] K. J. Healey, “Artificial Intelligence Research and Ap-\nplications at the NASA Johnson Space Center,” AI\nMagazine, vol. 7, no. 3, pp. 146–152, 1986.\n[27] C Forgy, “Rete: A fast algorithm for the many pat-\ntern/many object pattern match problem,” Artificial in-\ntelligence, vol. 19, no. 3597, pp. 17–37, 1982.\n[28] L. A. Zadeh, “Fuzzy Sets,” Information and Control,\nvol. 8, no. 3, pp. 338–353, Jan. 1965.\n[29] C. Haskins, “INCOSE Systems engineering handbook -\nA guide for system life cycle processes and activities,”\nSystems Engineering, 2006.\n[30] N. Das, D. Entekhabi and E. Njoku, “An Algorithm for\nMerging SMAP Radiometer and Radar Data for High-\nResolution Soil-Moisture Retrieval,” IEEE Transactions\non Geoscience and Remote Sensing, vol. 49, no. 99, pp.\n1–9, 2011.\n[31] A. Messac and A. Ismail-Yahaya, “Multiobjective ro-\nbust design using physical programming,” Structural\nand Multidisciplinary Optimization, vol. 23, no. 5, pp.\n357–371, Jun. 2002.\n20\n[32] B. Cameron, “Value flow mapping: Using networks\nto inform stakeholder analysis,” Acta Astronautica,\nvol. 62, no. 4-5, pp. 324–333 Feb. 2008.\n[33] R. Yager, “On ordered weighted averaging aggregation\noperators in multicriteria decision making,” Systems ,\nMan and Cybernetics, IEEE Transactions on, no. 1, pp.\n183–190, 1988.\n[34] J. Fortin, D Dubois, and H. Fargier, “Gradual Num-\nbers and Their Application to Fuzzy Interval Analysis,”\nIEEE Transactions on Fuzzy Systems, vol. 16, no. 2, pp.\n388–402, Apr. 2008.\n[35] H. Apgar, “Cost Estimating,” in Space Mission Engi-\nneering: The new SMAD. Hawthorne, CA: Microcosm,\n2011, ch. 11.\n[36] Chalmers University of Technology, “Use of P-band\nSAR for forest biomass and soil moisture retrieval,”\nEuropean Space Agency, Tech Rep., 2004.\n[37] D. Selva, “Rule-based system architecting of Earth\nobservation satellite systems,” PhD dissertation, Mas-\nsachusetts Institute of Technology, 2012.\n[38] H. H. Agahi, G. Ball, and G. Fox, “NICM Schedule &\nCost Rules of Thumb,” in AIAA Space Conference 2009,\nno. September, Pasadena, CA, 2009, pp 6512–6512.\nBIOGRAPHY[\nDaniel Selva received a PhD in Space\nSystems from MIT in 2012 and he is\ncurrently a post-doctoral associate in\nthe department of Aeronautics and As-\ntronautics at MIT. His research inter-\nests 


focus on the application of multi-\ndisciplinary optimization and artificial\nintelligence techniques to space systems\nengineering and architecture, in partic-\nular in the context of Earth observa-\ntion missions. Prior to MIT, Daniel worked for four years\nin Kourou \(French Guiana particular, he worked as a specialist in\noperations concerning the guidance, navigation and control\nsubsystem and the avionics and ground systems. Daniel has\na dual background in electrical engineering and aeronautical\nengineering, with degrees from Universitat Politecnica de\nCatalunya in Barcelona, Spain, and Supaero in Toulouse,\nFrance. He is a 2007 la Caixa fellow, and received the Nortel\nNetworks prize for academic excellence in 2002.\nEdward F. Crawley received an Sc.D. in\nAerospace Structures from MIT in 1981.\nHis early research interests centered on\nstructural dynamics, aeroelasticity, and\nthe development of actively controlled\nand intelligent structures. Recently, Dr.\nCrawley’s research has focused on the\ndomain of the architecture and design of\ncomplex systems. From 1996 to 2003\nhe served as the Department Head of\nAeronautics and Astronautics at MIT, leading the strategic\nrealignment of the department. Dr. Crawley is a Fellow of\nthe AIAA and the Royal Aeronautical Society \(UK is the\nauthor of numerous journal publications in the AIAA Journal,\nthe ASME Journal, the Journal of Composite Materials, and\nActa Astronautica. He received the NASA Public Service\nMedal. Recently, Prof Crawley was one of the ten members of\nthe presidential committee led by Norman Augustine to study\nthe future of human spaceflight in the US.\n21\n 


Mars program. It would be designed for low mass, lowpower and low temperature operation. The S-band antenna would be a smaller, simpler version of the antenna that flew on Deep Impact. Other antenna options would be available The UHF antennas have been flown on previous Mars lander/rover missions. There would be other alternatives for the S-band antenna and the UHF transceiver on the hub could use a larger power amplifier to talk to an orbiting asset as a backup to the S-band radio  Risk  The highest risk items for telecom would be the single string design for each element and six year design lifetime. However, the S-band radio has flight heritage. The UHF radios would be a new design but do not require new technology. They would be an engineering development 8. SYSTEM SUMMARY Mass Equipment List Table 5 shows a summary of the mass and power for each of the subsystems for the remote instrument units. The mass of one remote unit without the specified instrument is 26.6 kg with contingency specified at the subsystem level based on heritage. Table 6 shows a summary of mass and power by subsystem for the hub. The mass of the hub with contingency is 44.9 kg. Table 7 shows a mass summary for the entire package with appropriate contingencies added per the JPL  s Flight Project Practices and Design Principles Design Principles. The package totals 218.2 kg which includes four remote units, five instruments, one hub, and the carrier container\(s Table 5. Mass and power summary for remote units Remote Unit Mass CBE Contingency Total Power Power 14.3 kg 30% 18.5 kg 0.180 W 2 W Night /Day Thermal 2.0 kg 29% 2.5 kg 0 W Telecom UHF 0.2 24% 0.3 kg 2 W 40 W CDS 0.7 kg 30% 0.9 kg 1 W \(1/60th per hour 3 W Structure 3.4 kg 30% 4.4 kg 0 W Total x 1 unit 20.6 kg 29% 26.6 kg Diplexer S-Band Downconverter STDN command data to S/C CDS Pr oc es so r S-Band Exciter 9 dBi S-Band LGA UHF Downconverter Small UHF transceiver command data to S/C CDS 


to S/C CDS Pr oc es so r UHF PA UHF Monopole Command data to C&amp;DH Command dat  to C&amp;DH  Figure 7  Telecom block diagram for the S-band \(top bottom  units would be located on the hub while the remote units only contain a UHF system 15 9. OPERATIONAL SCENARIOS Daytime Operations During the day, the remote units and hub would be fully operational. The remote units would collect data from their instruments as specified by the science team and store it in the controller memory. Table 8 shows the data volume expected from each instrument. After 24 hours have passed the UHF telecom system on the hub is used to poll each of the remote units separately at the designated interval for the stored data. The hub then transmits the data direct-to-Earth using the S-band radio. This requires a maximum of eight hours at 50 kbps each day using the DSN 34 m antennas However, data rates as high as 120 kbps may be achieved reducing the downlink time. The hub has enough memory margin to accumulate data from all the instruments for three Earth days before it must downlink the data Nighttime Operations During nighttime operations, data collection at the remote units would be taking place. The magnetometer and seismometer collect data continuously. However, the seismometer operates at a reduced mode where the sampling rate is reduced to one-half of the daytime rate which has been deemed more than adequate by the science team. The remaining instruments collect data at various intervals that would be conducive to the science team  s current requirements. Telecom events would not be scheduled during the lunar night. The data accumulates in the controller memory over 16 Earth days \(~14 days at an equatorial location would be considered a worse case so two days have been added to be conservative data volume summary for each instrument during a 16 Earth day lunar night. When the sun comes up and the hub and remote units have sufficient power to run the telecom systems the hub polls each remote unit separately at a designated interval similar to operations during the day. The data would then be transmitted to Earth gradually over the next few days using the S-band radio Table 7. Mass summary for total package Unit Mass Contingency Mass + contingency 4 Remote Units 82.4 kg 29% 106.4 kg Hub 35.2 kg 27% 44.9 kg Instruments including cabling 17.3 kg 30% 22.5 kg Carrier Container\(s Total with heritage contingency 153.1 kg 29% 197.5 kg  System contingency  21.4 kg 14 Total Package  43% 218.9 kg Table 8. Instrument data volumes received at the hub over one Earth day in daylight operations Science Instrument Compressed Data Volume Received at Hub 


Volume Received at Hub Mb Seismometer 236 Magnetometer 58 Heat Flow Probe 2 Seismic Sounder 700 Instrument &amp; Hub Engineering Data 6 Total 1002 Hub Memory 5000 Margin 80  Table 6. Mass and power summary for hub Hub/Base Unit Mass CBE Contingency Total Power Power 14.3 kg 30% 18.5 kg 0.180 W 2 W Night /Day Thermal 13.4 kg 28% 17.2 kg 0 W Telecom UHF Telecom S-band 3.4 15% 3.9 kg 2 W 40 W CDS 0.7 kg 30% 0.9 kg 1 W \(1/60th per hour W \(day Structure 3.4 kg 30% 4.4 kg 0 W Total x 1 unit 35.2 kg 27% 44.9 kg 2.38 W avg at night  16 10. SUMMARY AND CONCLUSIONS The ALGEP modular design builds upon lessons learned from Apollo era ALSEP package and technology advances since that time. ALGEP meets the requirements of long lifetime survival while maintaining continuous operation of its instruments during the lunar night which can last up to 16 days at equatorial regions on the Moon. The package would be powered using solar arrays and batteries alone not requiring nuclear sources to supply power or maintain thermal control. This concept is feasible due to its lowpower operational mode at night The modular design and packaging scheme provides flexibility in deployment across all regions of the Moon including the farside pending the availability of an orbital communications asset. The relatively light ALGEP package could be accommodated on astronaut activity support vehicles, providing a method to distribute the packages across the Moon, ultimately gaining a Moon-wide understanding of lunar geophysical properties ACKNOWLEDGEMENTS This work was supported by the NASA Lunar Sortie Science Opportunities Program The work described in this publication was carried out at the Jet Propulsion Laboratory, California Institute of Technology under a contract with the National Aeronautics and Space Administration References herein to any specific commercial product process or service by trade name, trademark, manufacturer 


or otherwise does not constitute or imply its endorsement by the United States Government or the Jet Propulsion Laboratory, California Institute of Technology REFERENCES 1] NRC  Scientific Context for Exploration of the Moon   Washington D.C.: The Nat. Academies Press, 2007 2] Apollo 11 Prelim. Sci. Rept., NASA SP-214, 1969 3] Apollo 12 Prelim. Sci. Rept., NASA SP-235, 1970 4] Apollo 14 Prelim. Sci. Rept., NASA SP-272, 1971 5] Apollo 15 Prelim. Sci. Rept., NASA SP-289, 1972 6] Apollo 16 Prelim. Sci. Rept., NASA SP-315, 1972 7] Apollo 17 Prelim. Sci. Rept., NASA SP-330, 1973 8] ALSEP Termination Report, NASA RP-1036, 1979 9] NRC  New Frontiers in the Solar System: an Integrated Exploration Strategy  Decadal Survey D.C.: The Nat. Academies Press, 2003 10] International Lunar Network Science Definition Team Final Report, 2009 BIOGRAPHY Melissa Jones is a member of the technical staff in the Planetary and Lunar Mission Concepts Group at the Jet Propulsion Laboratory.  Current work includes development of small Lunar lander concepts and instrument packages to deploy on the Moon,  Report Manager for the Titan Saturn System Mission Outer Planets Flagship Mission study, and staffing various concept studies as a systems engineer on Team X, JPL  s mission design team.  Melissa graduated from Loras College with a B.S. in Chemistry and a Ph.D. in Space and Planetary Science from the University of Arkansas  Linda Herrell has a BA in math/computer science/languages \(University of Texas fluids and heat transfer \(City College of New York addition to analytical work in computer science and thermal and structural analysis, she has worked as both a payload \(instrument Earth orbiting \(Hubble Space Telescope, Earth Observing System \(EOS Cassini as Proposal Manager for several NASA science missions She currently serves as the Program Architect for NASA's New Millennium Program    Table 9. Instrument data volumes generated at the hub after 16 Earth day lunar night Science Instrument Compressed Data Volume Received at Hub Mb Seismometer 1980 Magnetometer 920 Heat Flow Probe 5 Seismic Sounder 0 Instrument &amp; Hub Engineering Data 72 Total 2977 Hub Memory 5000 Margin 40  17 Bruce Banerdt has been a research geophysicist at the California Institute of Technology's Jet Propulsion Laboratory since 1977, where he does research in planetary geophysics and instrument development for flight projects. He has been on science teams for numerous planetary missions 


on science teams for numerous planetary missions including Magellan, Mars Observer, Mars Global Surveyor and Rosetta. He was the US Project Scientist for the international Mars NetLander mission, for which he was also principal investigator of the Short-Period Seismometer experiment, and is currently the Project Scientist for the Mars Exploration Rovers. He led the Geophysics and Planetary Geology group at JPL from 1993-2005, and is the JPL Discipline Program Manager for Planetary Geosciences. He has held several visiting appointments at the Institut de Physique du Globe de Paris. He has a BS in physics and a PhD in geophysics from the University of Southern California  David Hansen is a member of the technical staff in the Communications Systems and Operations Group at the Jet Propulsion Laboratory. Current work includes the development of the telecom subsystem for the Juno project. David received a B.S. in Electrical Engineering from Cornell University and an M.S. in Electrical Engineering from Stanford University  Robert Miyake is a member of the technical staff in the Mission and Technology Development Group at the Jet Propulsion Laboratory. Current work includes the development of thermal control subsystems for interplanetary flagship missions to Jupiter and Saturn missions to Mars and the Earth Moon, and is the lead Thermal Chair for the Advanced Project Design Team Robert graduated with a B. S. from San Jose State University, with extensive graduate studies at UCLA University of Washington, and University of Santa Clara  Steve Kondos is a consultant to the Structures and Mechanisms group at the Jet Propulsion Laboratory. He currently is generating the mechanical concepts for small Lunar Landers and Lunar Science Instrument packages in support of various Lunar mission initiatives. He also provides conceptual design, mass and cost estimating support for various Team X studies as the lead for the Mechanical Subsystem Chair. Steve is also involved with various other studies and proposals and provides mentoring to several young mechanical and system engineers. He graduated with a B.S. in Mechanical Engineering from the University of California, Davis and has 28 years of experience in the aerospace field ranging from detail part design to system of systems architecture development. He has worked both in industry and in government in defense, intelligence commercial and civil activities that range from ocean and land based systems to airborne and space systems. Steve has received various NASA, Air Force, Department of Defense and other agency awards for his work on such projects as the NASA Solar Array Flight Experiment, Talon Gold, MILSTAR, Iridium, SBIRS, Mars Exploration Rovers ATFLIR, Glory Aerosol Polarimeter System and several Restricted Programs  Paul Timmerman is a senior member of technical staff in the Power Systems Group at the Jet Propulsion Laboratory Twenty-five years of experience in spacecraft design including 22 at JPL, over 250 studies in Team-X, and numerous proposals. Current assignments include a wide variety of planetary mission concepts, covering all targets within the solar system and all mission classes. Paul graduated from Loras College with a B.S. in Chemistry in 1983  Vincent Randolph is a senior engineer in the Advanced Computer Systems and 


the Advanced Computer Systems and Technologies Group at the Jet Propulsion Laboratory. Current work includes generating Command and Data Handling Subsystem conceptual designs for various proposals and Team X.  He also supports Articulation Control and Electronics design activities for the Advanced Mirror Development project. Vincent graduated from the University of California at Berkeley with a B.S. in Electrical Engineering 18  pre></body></html 


i models into time and covariate dependent dynamic counterparts  ii models and reliability analysis in a more realistic manner  iii level  whether or not functional components \(loyal generals diagnose correctly and take proper actions such as fault mask of failed components \(traitors asymmetric  iv survivability analysis. Evolutionary game modeling can derive sustainable or survivable strategies \(mapped from the ESS in EGT such as node failures such as security compromise level modeling in the so-called three-layer survivability analysis developed in Ma \(2008a this article  v offer an integrated architecture that unite reliability survivability, and fault tolerance, and the modeling approaches with survival analysis and evolutionary game theory implement this architecture. Finally, the dynamic hybrid fault models, when utilized to describe the survival of players in EGT, enhance the EGT's flexibility and power in modeling the survival and behaviors of the game players which should also be applicable to other problem domains where EGT is applicable  5. OPERATIONAL LEVEL MODELING AND DECISION-MAKING  5.1. Highlights of the Tactical and Strategic Levels  Let's first summarize what are obtainable at both tactical and strategic levels. The results at both tactical and strategic levels are precisely obtainable either via analytic or simulation optimization. With the term precisely, we mean that there is no need to assign subjective probabilities to UUUR events. This is possible because we try to assess the consequences of UUUR events \(tactical level ESS strategies \(strategic level time prediction of survivability. The following is a list of specific points. I use an assumed Wireless Sensor Network WSN  i of UUUR events: \(a actions which can be treated as censored events; \(b Cont' of Box 4.2 It can be shown that the replicator differential equations are equivalent to the classical population dynamics models such as Logistic differential equation and LotkaVolterra equation \(e.g., Kot 2001 Logistic equation, or the limited per capital growth rate is similar to the change rate of the fitness  xfxfi which can be represented with the hazard function or survivor functions introduced in the previous section on survival analysis.  This essentially connects the previous survival analysis modeling for lifetime and reliability with the EGT modeling. However, EGT provides additional modeling power beyond population dynamics or survival analysis approaches introduced in the previous section. The introduction of evolutionary theory makes the games played by a population evolvable. In other words, each player \(individual 


other words, each player \(individual agent and players interact with each other to evolve an optimized system Box 4.3. Additional Comments on DHF Models  The above introduced EGT models are very general given they are the system of ordinary differential equations. Furthermore, the choice of fitness function f\(x complexity to the differential equation system.  The system can easily be turned into system of nonlinear differential equations. The analytical solution to the models may be unobtainable when nonlinear differential equations are involved and simulation and/or numerical computation are often required  In the EGT modeling, Byzantine generals are the game players, and hybrid fault models are conveniently expressed as the strategies of players; the players may have different failure or communication behaviors Furthermore, players can be further divided into groups or subpopulations to formulate more complex network organizations. In the EGT modeling, reliability can be represented as the payoff \(fitness, the native term in EGT of the game. Because reliability function can be replaced by survivor function, survival analysis is seamlessly integrated into the EGT modeling. That is, let Byzantine generals play evolutionary games and their fitness reliability function  The evolutionary stable strategy \(ESS counterpart of Nash equilibrium in traditional games ESS corresponds to sustainable strategies, which are resistant to both internal mutations \(such as turning into treason generals or nodes such as security compromises represent survivable strategies and survivability in survivability analysis. Therefore, dynamic hybrid fault models, after the extension with EGT modeling, can be used to study both reliability and survivability 13 risks such as competing risks which can be described with CRA; \(c captured with the shard frailty.  We believe that these UUUR events are sufficiently general to capture the major factors/events in reliability, security and survivability whose occurrence probabilities are hard or impossible to obtain  Instead of trying to obtain the probabilities for these events which are infeasible in most occasions, we focus on analyzing the consequences of the events.  With survival analysis, it is possible to analyze the effects of these types of events on survivor functions. In addition, spatial frailty modeling can be utilized to capture the heterogeneity of risks in space, or the spatial distribution of risks \(Ma 2008a d UUUR events introduced previously. These approaches and models that deal with the effects of UUUR events form the core of tactical level modeling  To take advantage of the tactical level modeling approaches it is obviously necessary to stick to the survivor functions or hazard functions models. In other words, survival analysis can deal with UUUR events and offer every features reliability function provides, but reliability function cannot deal with UUUR events although survivor function and reliability function have the exactly same mathematical definition. This is the junction that survival analysis plays critical role in survivability analysis at tactical level. However, we 


recognize that it is infeasible to get a simple metric for survivability similar to reliability with tactical level modeling alone. Actually, up to this point, we are still vague for the measurement of survivability or a metric for survivability. We have not answered the question: what is our metric for survivability? We think that a precise or rigorous definition of survivability at tactical level is not feasible, due to the same reason we cited previously  the inability to determine the probabilities of UUUR events However, we consider it is very helpful to define a work definition for survivability at the tactical level  We therefore define the survivability at tactical level as a metric, Su\(t t function or reliability function with UUUR events considered. In the framework of three-layer survivability analysis, this metric is what we mean with the term survivability. The "metric" per se is not the focus of the three-layer survivability analysis. It is not very informative without the supports from the next two levels  strategic and operational models.  However, it is obvious that this metric sets a foundation to incorporate UUUR effects in the modeling at the next two levels  Due to the inadequacy of tactical level modeling, we proposed the next level approach  strategic level modeling for survivability. As expected, the tactical level is one foundation of strategic level modeling ii objectives: \(a affect survivability which survival analysis alone is not adequate to deal with; \(b survivability at tactical level is necessary but not sufficient for modeling survivability, we need to define what is meant with the term survivability at strategic level  With regard to \(a behaviors or modes which have very different consequences. These failure behaviors can be captured with hybrid fault models. However, the existing hybrid fault models in fault tolerance field are not adequate for applying to survivability analysis. There are two issues involved: one is the lack of real time notion in the constraints for hybrid fault models \(e.g., N&gt;3m+1 for Byzantine Generals problem synthesize the models after the real-time notions are introduced. The solution we proposed for the first issue is the dynamic hybrid fault models, which integrate survivor functions with traditional hybrid fault models. The solution we proposed for the second issue is the introduction of EGT modeling  With regard to \(b modeling our problem at strategic level, EGT modeling is essentially a powerful optimization algorithm.  One of the most important results from EGT modeling is the so-called evolutionary stable strategies \(ESS We map the ESS in EGT to survivable strategies in survivability analysis.   Therefore, at the strategic level, our work definition for survivability refers to the survivable strategies or sustainable strategies in the native term of EGT, which can be quantified with ESS  In addition to integrating dynamic hybrid fault models another advantage for introducing EGT modeling at strategic level is the flexibility for incorporating other node behaviors \(such as cooperative vs. non-cooperative those behaviors specified in standard hybrid fault models, as well as anthropocentric factors such as costs constraints  Without UUUR events, both tactical and strategic level 


Without UUUR events, both tactical and strategic level models default to regular reliability models. This implies that, in the absence of UUUR events, reliable strategies are sustainable or survivable.  This also implies that three-layer survivability analysis defaults to reliability analysis however, the three-layer approach does offer some significant advantages over traditional reliability analysis, as discussed in previous sections. Nevertheless, when UUUR events exist, reliable strategies and survivable strategies are different. This necessitates the next operational level modeling  5.2. Operational Level Modeling and Decision-Making  When UUUR events are involved, we cannot make real time predictions of survivability at tactical and strategic levels This implies that the implementations of survivable 14 strategies need additional measures that we develop in this section.  Box 5.1 explains the ideas involved with possibly the simplest example  Figure 4 is a diagram showing a simplified relationship between action threshold survivability \(TS survivability \(ES view since both TS and ES are multidimensional and dynamic in practice. Therefore, the sole purpose of the diagram is to illustrate the major concepts discussed above The blue curve is the survivability when survivable strategies specified by ESS are implemented at some point before time s.  The system is then guaranteed to hold survivability above ES. In contrary, if no ESS implemented before time s, then the system quickly falls below to the survivable level at around 40 time units  T i m e 0 1 0 2 0 3 0 4 0 5 0 6 0 7 0 8 0 9 0 1 0 0 Su rv iv ab ili ty M et ric S u t 0 . 0 0 . 1 0 . 2 0 . 3 0 . 4 0 . 5 0 . 6 0 . 7 0 . 8 0 . 9 1 . 0 E S S  i s  I m p lm e n t e d N o  E S S  is  I m p lm e n t e d ts E S T S  Figure 4. A Diagram Showing the Relationship Between TS and ES, as well as timing of s and t, with s &lt; t  6. SUMMARY  The previous sections discussed the major building blocks 


The previous sections discussed the major building blocks for the new life-system inspired PHM architecture. This section first identifies a few minor aspects that have not been discussed explicitly but are necessary for the implementation of the architecture, and then we summarize the major building blocks in a diagram  6.1. Missing Components and Links  Optimization Objectives  Lifetime, reliability, fault tolerance, and survivability, especially the latter two, are application dependent. Generally, the optimization of reliability and survivability are consistent; in that maximization of reliability also implies maximization of survivability. However, when application detail is considered, optimization of lifetime is not necessarily consistent with the optimization of reliability. Consider the case of the monitoring sensor network as an example. The network reliability is also dependent on connectivity coverage, etc, besides network lifetime. What may be further complicated is the time factor. All of the network metrics are time-dependent. A paradoxical situation between lifetime and reliability could be that nodes never 'sleep                                                   


          Box 5.1 Operational Level Modeling  Assuming that the ESS solution for a monitoring sensor network can be expressed with the following simple algebraic conditions: survivability metric at tactical level SU = 0.7, Router-Nodes in the WSN &gt; 10%, Selfish Nodes &lt; 40%. Even with this extremely simplified scenario, the ESS strategies cannot be implemented because we do not know when the actions should be taken to warrant a sustainable system.  These conditions lack a correlation with real time  The inability to implement ESS is rooted in our inability to assign definite probabilities to UUUR events, which implies that we cannot predict when something sufficiently bad will jeopardize the system survivability What we need at the operational level is a scheme to ensure ESS strategy is in place in advance  The fundamental idea we use to implement the ESS strategy is to hedge against the UUUR events. The similar idea has been used in financial engineering and also in integrated pest management in entomology. This can be implemented with the following scheme  Let us define a pair of survivability metrics: one is the expected survivability \(ES threshold survivability or simply threshold survivability \(TS ES is equivalent to the survivability metric at tactical level. ES corresponds to ESS at strategic level, but they are not equivalent since ESS is strategy and ES is survivability. TS is the survivability metric value \(at tactical level and TS can be obtained from strategic level models. For example, TS = SU\(s t condition for the implementation of ESS. In other words, the implementation of strategies that ensures TS at time s will guarantee the future ES level at time t.  To make the implementation more reliable and convenient multiple dynamic TSs can be computed at time s1, s2 sk, with si &lt; t for all i.  These TS at times s1, s2, ..., sk should be monitored by some evaluation systems  Unlike tactical and strategic levels, the operational level modeling is approximate. The term "approximate means that we cannot predict the real time survivability or we do not know the exact time an action should be taken. Instead, the action is triggered when the monitored survivability metric SU\(r survivability \(TS scheme of TS and ES, we ensure the ES by taking preventative actions \(prescribed by ESS and triggered by the TS consequences of UUUR events  Figure 4 is a diagram showing the above concepts and the decision-making process involved 15 This wakefulness \(never 'sleep short period but at the expense of network lifetime. Of course, when the network is running out of lifetime, network reliability ultimately crashes. This example reminds us that 


reliability ultimately crashes. This example reminds us that multi-objective optimization should be the norm rather than exception  Constraints and Extensions  Many application specific factors and constraints are ignored in this article. For example, we mentioned about spatial heterogeneity of environment, but never present a mathematical description The spatial heterogeneity can be modeled with the so-called spatial frailty in multivariate survival analysis \(Ma 2008a  Evolutionary Algorithm  Evolutionary game modeling when implemented in simulation, can be conveniently implemented with an algorithm similar to Genetic Algorithms \(GA ESS in the evolutionary game model with simulation is very similar to GA. Dynamic populations, in which population size varies from generation to generation \(Ma &amp; Krings 2008f of node failures. Another issue to be addressed is the synchronous vs. asynchronous updating when topology is considered in the simulation. This update scheme can have profound influences on the results of the simulation. Results from cellular automata computing should be very useful for getting insights on the update issue  6.2. Summary and Perspective  To recapture the major points of the article, let us revisit Figure 3, which summarizes the principal modules of the proposed life-system inspired PHM architecture. The main inspiration from life systems is the notion of individuals and their assemblage, the population. Population is an emergent entity at the next level and it has emergent properties which we are often more concerned with. Survival analysis, which has become a de facto standard in biomedicine, is particularly suitable for modeling population, although it is equally appropriate at individual level. Therefore, survival analysis \(including competing risks analysis and multivariate survival analysis comprehensively in the context of PHM in a series of four papers presented at IEEE AeroSpace 2008 \(Ma &amp; Krings 2008a, b, c, &amp; d proposed architecture. Survival analysis constitutes the major mathematical tools for analyzing lifetime and reliability, and also forms the tactical level of the three-layer survivability analysis  Besides lifetime and reliability, two other major modules in Figure 3 are fault tolerance and survivability. To integrate fault tolerance into the PHM system, Dynamic Hybrid Fault DHF 2008e, Ma 2008a make real-time prediction of reliability more realistic and make real-time prediction of fault tolerance level possible DHF models also unite lifetime, reliability and fault tolerance under a unified modeling framework that consists of survival analysis and evolutionary game theory modeling  DHG models also form the partial foundation, or strategic level, for the three-layer survivability analysis. At the strategic level, the Evolutionary Stable Strategies \(ESS which is mapped to survivable or sustainable strategies, can be obtained from the evolutionary game theory based DHF models. When there is not any UUUR event involved reliability and survivability are consistent, and reliable strategies are survivable. In this case, the strategic level modeling up to this point is sufficient for the whole PHM system modeling, and there is no need for the next level  operational level modeling  When there are UUUR events in a PHM system, the 


When there are UUUR events in a PHM system, the inability to determine the occurrence probabilities of UUUR events makes the operational level modeling necessary Then the principle of hedging must be utilized to deal with the "hanging" uncertainty from UUUR events. In this case reliability strategies are not necessarily survivable strategies At the operational level modeling, a duo of survivability metrics, expected survivability \(ES survivability \(TS the survivable strategies \(ESS level are promptly implemented based on the decisionmaking rules specified with the duo of survivability metrics then the PHM system should be able to endure the consequences of potentially catastrophic UUUR events. Of course, to endure such catastrophic events, the cost may be prohibitively high, but the PHM system will, at least, warn decision-makers for the potentially huge costs.  It might be cheap to just let it fail  Figure 3 also shows several other modules, such as security safety, application systems \(such as Automatic Logistics CBM+, RCM, Life cycle cost management, Real-time warning and alert systems architectures, but we do not discuss in this paper. Generally the new architecture should be fully compatible with existing ones in incorporating these additional modules. One point we stressed is that PHM system can be an ideal place to enforce security policies. Enforcing security policies can be mandatory for PHM systems that demand high security and safety such as weapon systems or nuclear plant facilities.  This is because maintenance, even without human-initiated security breaches, can break the security policies if the maintenance is not planned and performed properly  In perspective, although I did not discuss software issues in this paper, the introduced approaches and models should provide sufficient tools for modeling software reliability and survivability with some additional extension. Given the critical importance of software to modern PHM systems, we present the following discussion on the potential extension to software domain. Specifically, two points should be noted: \(1 architecture to software should be a metric which can 16 replace the time notion in software reliability; I suggest that the Kolmogorov complexity \(e.g., Li and Vitanyi 1997 be a promising candidate \(Ma 2008a change is because software does not wear and calendar time for software reliability usually does not make much sense 2 software reliability modeling.  Extending to general survivability analysis is not a problem either. In this article I implicitly assume that reliability and survivability are positively correlated, or reliability is the foundation of survivability. This positive correlation does not have to be the case. A simplified example that illustrates this point is the 'limit order' in online stock trading, in which limit order can be used in either direction: that stock price is rising or falling.  The solution to allow negative or uncorrelated relationships between reliability and survivability are very straightforward, and the solutions are already identified in previous discussions. Specifically, multiple G-functions and multi-stage G-functions by Vincent and Brown \(2005 very feasible solution, because lifetime, reliability and survivability may simply be represented with multiple Gfunctions. Another potential solution is the accommodation of the potential conflicts between reliability and survivability with multi-objective GA algorithms, which I previously suggested to be used as updating algorithms in the optimization of evolutionary games  


 The integration of dynamic hybrid fault models with evolutionary game modeling allows one to incorporate more realistic and detailed failure \(or survival individual players in an evolutionary game. This is because dynamic hybrid fault models are supported by survival analysis modeling, e.g., time and covariate dependent hazard or survivor functions for individual players. If necessary, more complex survival analysis modeling including competing risks analysis and multivariate survival analysis, can be introduced.  Therefore, any field to which evolutionary game theory is applicable may benefit from the increased flexibility in modeling individual players.  Two particularly interesting fields are system biology and ecological modeling.  In the former field, dynamic hybrid fault models may find important applications in the study of biological networks \(such as gene, molecular, and cell networks 2008g conjecture that explains the redundancy in the universal genetic code with Byzantine general algorithm. In addition they conducted a comparative analysis of bio-robustness with engineering fault tolerance, for example, the strong similarity between network survivability and ecological stability \(Ma &amp; Krings 2008g survivability analysis can be applied for the study of survivals or extinctions of biological species under global climate changes \(Ma 2008b  In this paper, I have to ignore much of the details related to the implementation issues to present the overall architecture and major approaches clearly and concisely. To deal with the potential devils in the implementation details, a well funded research and development team is necessary to take advantages of the ideas presented here. On the positive side I do see the great potential to build an enterprise PHM software product if there is sufficient resource to complete the implementation. Given the enormous complexity associated with the PHM practice in modern engineering fields, it is nearly impossible to realize or even demonstrate the benefits of the architecture without the software implementation. The critical importance of PHM to mission critical engineering fields such as aerospace engineering, in turn, dictates the great value of such kind software product  6.3. Beyond PHM  Finally, I would like to raise two questions that may be interested in by researchers and engineers beyond PHM community. The first question is: what can PHM offer to other engineering disciplines? The second question is: what kinds of engineering fields benefit most from PHM? Here, I use the term PHM with the definition proposed by IEEE which is quoted in the introduction section of the paper  As to the first question, I suggest software engineering and survivability analysis are two fields where PHM can play significant roles. With software engineering, I refer to applying PHM principles and approaches for dealing with software reliability, quality assurance, and even software process management, rather than building PHM software mentioned in the previous subsection. For survivability analysis, borrowing the procedures and practices of PHM should be particularly helpful for expanding its role beyond its originating domain \(network systems that control critical national infrastructures is a strong advocate for the expansion of survivability analysis to PHM. Therefore, the interaction between PHM and survivability analysis should be bidirectional. Indeed, I see the close relationships between PHM, software engineering, and survivability as well-justified because they all share some critical issues including reliability survivability, security, and dependability  


 The answer to the second question is much more elusive and I cannot present a full answer without comparative analysis of several engineering fields where PHM has been actively practiced. Of course, it is obvious that fields which demand mission critical reliability and dependability also demand better PHM solutions. One additional observation I would like to make is that PHM seems to play more crucial roles for engineering practices that depend on the systematic records of 'historical' data, such as reliability data in airplane engine manufacturing, rather than on the information from ad hoc events.  This may explain the critical importance of PHM in aerospace engineering particularly in commercial airplane design and manufacturing.  For example, comparing the tasks to design and build a space shuttle vs. to design and manufacture commercial jumbo jets, PHM should be more critical in the latter task  17    Figure 2. States of a monitoring sensor node and its failure modes \(after Ma &amp; Krings 2008e     Figure 3. Core Modules and their Relationships of the Life System Inspired PHM Architecture    REFERENCES  Adamides, E. D., Y. A. Stamboulis, A. G. Varelis. 2004 Model-Based Assessment of Military Aircraft Engine Maintenance Systems Model-Based Assessment of Military Aircraft Engine Maintenance Systems. Journal of the Operational Research Society, Vol. 55, No. 9:957-967  Anderson, R. 2001. Security Engineering. Wiley  Anderson, R. 2008. Security Engineering. 2nd ed. Wiley  Bird, J. W., Hess, A. 2007.   Propulsion System Prognostics R&amp;D Through the Technical Cooperation Program Aerospace Conference, 2007 IEEE, 3-10 March 2007, 8pp  Bock, J. R., Brotherton, T., W., Gass, D. 2005. Ontogenetic reasoning system for autonomic logistics. Aerospace Conference, 2005 IEEE 5-12 March 2005.Digital Object Identifier 10.1109/AERO.2005.1559677  Brotherton, T., P. Grabill, D. Wroblewski, R. Friend, B Sotomayer, and J. Berry. 2002. A Testbed for Data Fusion for Engine Diagnostics and Prognostics. Proceedings of the 2002 IEEE Aerospace Conference  Brotherton, T.; Grabill, P.; Friend, R.; Sotomayer, B.; Berry J. 2003. A testbed for data fusion for helicopter diagnostics and prognostics. Aerospace Conference, 2003. Proceedings 2003 IEEE  Brown, E. R., N. N. McCollom, E-E. Moore, A. Hess. 2007 Prognostics and Health Management A Data-Driven Approach to Supporting the F-35 Lightning II. 2007 IEEE AeroSpace Conference  Byington, C.S.; Watson, M.J.; Bharadwaj, S.P. 2008 Automated Health Management for Gas Turbine Engine Accessory System Components. Aerospace Conference 2008 IEEE, DOI:10.1109/AERO.2008.4526610 


2008 IEEE, DOI:10.1109/AERO.2008.4526610 Environment Covariates &amp; Spatial Frailty Applications: AL; Life Cycle Mgmt; Real-Time Alerts CBM+, RCM, TLCSM; Secret Sharing and Shared Control 18 Chen, Y. Q., S. Cheng. 2005. Semi-parametric regression analysis of mean residual life with censored survival data Biometrika \(2005  29  Commenges, D. 1999. Multi-state models in Epidemiology Lifetime Data Analysis. 5:315-327  Cook, J. 2004. Contrasting Approaches to the Validation of Helicopter HUMS  A Military User  s Perspective Aerospace Conference, 2004 IEEE  Cook, J. 2007. Reducing Military Helicopter Maintenance Through Prognostics. Aerospace Conference, 2007 IEEE Digital Object Identifier 10.1109/AERO.2007.352830  Cox, D. R. 1972. Regression models and life tables.  J. R Stat. Soc. Ser. B. 34:184-220  Crowder, M. J.  2001. Classical Competing Risks. Chapman amp; Hall. 200pp  David, H. A. &amp; M. L. Moeschberger. 1978. The theory of competing risks. Macmillan Publishing, 103pp  Ellison, E., L. Linger, and M. Longstaff. 1997.  Survivable Network Systems: An Emerging Discipline, Carnegie Mellon, SEI, Technical Report CMU/SEI-97-TR-013  Hanski, I. 1999. Metapopulation Ecology. Oxford University Press  Hallam, T. G. and S. A. Levin. 1986. Mathematical Ecology. Biomathematics. Volume 17. Springer. 457pp  Hess, A., Fila, L. 2002.  The Joint Strike Fighter \(JSF concept: Potential impact on aging aircraft problems Aerospace Conference Proceedings, 2002. IEEE. Digital Object Identifier: 10.1109/AERO.2002.1036144  Hess, A., Calvello, G., T. Dabney. 2004. PHM a Key Enabler for the JSF Autonomic Logistics Support Concept. Aerospace Conference Proceedings, 2004. IEEE  Hofbauer, J. and K. Sigmund. 1998. Evolutionary Games and Population Dynamics. Cambridge University Press 323pp  Hougaard, P. 2000. Analysis of Multivariate Survival Data Springer. 560pp  Huzurbazar, A. V. 2006. Flow-graph model for multi-state time-to-event data. Wiley InterScience  Ibrahim, J. G., M. H. Chen and D. Sinha. 2005. Bayesian Survival Analysis. Springer. 481pp  Kacprzynski, G. J., Roemer, M. J., Hess, A. J. 2002. Health management system design: Development, simulation and cost/benefit optimization. IEEE Aerospace Conference Proceedings, 2002. DOI:10.1109/AERO.2002.1036148  Kalbfleisch, J. D., and R. L. Prentice, 2002. The Statistical Analysis of Failure Time Data. Wiley-InterScience, 2nd ed  Kalgren, P. W., Byington, C. S.   Roemer, M. J.  2006 Defining PHM, A Lexical Evolution of Maintenance and Logistics. Systems Readiness Technology Conference 


Logistics. Systems Readiness Technology Conference IEEE. DOI: 10.1109/AUTEST.2006.283685  Keller, K.; Baldwin, A.; Ofsthun, S.; Swearingen, K.; Vian J.; Wilmering, T.; Williams, Z. 2007. Health Management Engineering Environment and Open Integration Platform Aerospace Conference, 2007 IEEE, Digital Object Identifier 10.1109/AERO.2007.352919  Keller, K.; Sheahan, J.; Roach, J.; Casey, L.; Davis, G Flynn, F.; Perkinson, J.; Prestero, M. 2008. Power Conversion Prognostic Controller Implementation for Aeronautical Motor Drives. Aerospace Conference, 2008 IEEE. DOI:10.1109/AERO.2008.4526630  Klein, J. P. and M. L. Moeschberger. 2003. Survival analysis techniques for censored and truncated data Springer  Kingsland, S. E. 1995. Modeling Nature: Episodes in the History of Population Ecology. 2nd ed., University of Chicago Press, 315pp  Kot, M. 2001. Elements of Mathematical Ecology Cambridge University Press. 453pp  Krings, A. W. and Z. S. Ma. 2006. Fault-Models in Wireless Communication: Towards Survivable Ad Hoc Networks Military Communications Conference, 23-25 October, 7 pages, 2006  Lamport, L., R. Shostak and M. Pease. 1982. The Byzantine Generals Problem. ACM Transactions on Programming Languages and Systems, 4\(3  Lawless, J. F. 2003. Statistical models and methods for lifetime data. John Wiley &amp; Sons. 2nd ed  Line, J. K., Iyer, A. 2007. Electronic Prognostics Through Advanced Modeling Techniques. Aerospace Conference 2007 IEEE. DOI:10.1109/AERO.2007.352906  Lisnianski, A., Levitin, G. 2003. Multi-State System Reliability: Assessment, Optimization and Applications World Scientific  Liu, Y., and K. S. Trivedi. 2006. Survivability Quantification: The Analytical Modeling Approach, Int. J of Performability Engineering, Vol. 2, No 1, pp. 29-44  19 Luchinsky, D.G.; Osipov, V.V.; Smelyanskiy, V.N Timucin, D.A.; Uckun, S. 2008. Model Based IVHM System for the Solid Rocket Booster. Aerospace Conference, 2008 IEEE.DOI:10.1109/AERO.2008.4526644  Lynch, N. 1997. Distributed Algorithms. Morgan Kaufmann Press  Ma, Z. S. 1997. Demography and survival analysis of Russian wheat aphid. Ph.D. dissertation, Univ. of Idaho 306pp  Ma, Z. S. 2008a. New Approaches to Reliability and Survivability with Survival Analysis, Dynamic Hybrid Fault Models, and Evolutionary  Game Theory. Ph.D. dissertation Univ. of Idaho. 177pp  Ma, Z. S. 2008b. Survivability Analysis of Biological Species under Global Climate Changes: A New Distributed and Agent-based Simulation Architecture with Survival Analysis and Evolutionary Game Theory. The Sixth 


International Conference on Ecological Informatics. Dec 25, 2008. Cancun, Mexico  Ma, Z. S. and E. J. Bechinski. 2008. A Survival-Analysis based  Simulation Model for Russian Wheat Aphid Population Dynamics. Ecological Modeling, 216\(2 332  Ma, Z. S. and A. W. Krings. 2008a.  Survival Analysis Approach to Reliability Analysis and Prognostics and Health Management \(PHM  AIAA AeroSpace Conference, March 1-8, 2008, Big Sky, MT, 20pp  Ma, Z. S. and A. W. Krings. 2008b. Competing Risks Analysis of Reliability, Survivability, and Prognostics and Health Management \(PHM  AIAA AeroSpace Conference, March 1-8, 2008.  Big Sky, MT. 20pp  Ma, Z. S. and A. W. Krings. 2008c. Multivariate Survival Analysis \(I Dependence Modeling", Proc. IEEE  AIAA AeroSpace Conference, March 1-8, 2008, Big Sky, MT. 21pp  Ma, Z. S. and A. W. Krings., R. E. Hiromoto. 2008d Multivariate Survival Analysis \(II State Models in Biomedicine and Engineering Reliability IEEE International Conference of Biomedical Engineering and Informatics, BMEI 2008.  6 Pages  Ma, Z. S. and A. W. Krings. 2008e. Dynamic Hybrid Fault Models and their Applications to Wireless Sensor Networks WSNs Modeling, Analysis and Simulation of Wireless and Mobile Systems. \(ACM MSWiM 2008 Vancouver, Canada  Ma, Z. S. &amp; A. W. Krings. 2008f. Dynamic Populations in Genetic Algorithms. SIGAPP, the 23rd Annual ACM Symposium on Applied Computing, Ceara, Brazil, March 16-20, 2008. 5 Pages  Ma, Z. S. &amp; A. W. Krings. 2008g. Bio-Robustness and Fault Tolerance: A New Perspective on Reliable, Survivable and Evolvable Network Systems, Proc. IEEE  AIAA AeroSpace Conference, March 1-8, Big Sky, MT, 2008. 20 Pages  Ma, Z. S.  and A. W. Krings. 2009. Insect Sensory Systems Inspired Computing and Communications.  Ad Hoc Networks 7\(4  MacConnell, J.H. 2008. Structural Health Management and Structural Design: An Unbridgeable Gap? 2008 IEEE Aerospace Conference, DOI:10.1109/AERO.2008.4526613  MacConnell, J.H. 2007. ISHM &amp; Design: A review of the benefits of the ideal ISHM system. Aerospace Conference 2007 IEEE. DOI:10.1109/AERO.2007.352834  Marshall A. W., I. Olkin. 1967. A Multivariate Exponential Distribution. Journal of the American Statistical Association, 62\(317 Mar., 1967  Martinussen, T. and T. H. Scheike. 2006. Dynamic Regression Models for Survival Data. Springer. 466pp  Mazzuchi, T. A., R. Soyer., and R. V. Spring. 1989. The proportional hazards model in reliability. IEEE Proceedings of Annual Reliability and Maintainability Symposium pp.252-256  Millar, R.C., Mazzuchi, T.A. &amp; Sarkani, S., 2007. A Survey of Advanced Methods for Analysis and Modeling of 


of Advanced Methods for Analysis and Modeling of Propulsion System", GT2007-27218, ASME Turbo Expo 2007, May 14-17, Montreal, Canada  Millar, Richard C., "Non-parametric Analysis of a Complex Propulsion System Data Base", Ph.D. Dissertation, George Washington University, June 2007  Millar, R. C. 2007. A Systems Engineering Approach to PHM for Military Aircraft Propulsion Systems. Aerospace Conference, 2007 IEEE. DOI:10.1109/AERO.2007.352840  Millar, R. C. 2008.  The Role of Reliability Data Bases in Deploying CBM+, RCM and PHM with TLCSM Aerospace Conference, 2008 IEEE, 1-8 March 2008. Digital Object Identifier: 10.1109/AERO.2008.4526633  Nowak, M. 2006. Evolutionary Dynamics: Exploring the Equations of Life. Harvard University Press. 363pp  Oakes, D. &amp; Dasu, T. 1990. A note on residual life Biometrika 77, 409  10  Pintilie, M. 2006. Competing Risks: A Practical Perspective.  Wiley. 224pp  20 Smith, M. J., C. S. Byington. 2006. Layered Classification for Improved Diagnostic Isolation in Drivetrain Components. 2006 IEEE AeroSpace Conference  Therneau, T. and P. Grambsch. 2000. Modeling Survival Data: Extending the Cox Model. Springer  Vincent, T. L. and J. L. Brown. 2005. Evolutionary Game Theory, Natural Selection and Darwinian Dynamics Cambridge University Press. 382pp  Wang. J., T. Yu, W. Wang. 2008. Research on Prognostic Health Management \(PHM on Flight Data. 2008 Int. Conf. on Condition Monitoring and Diagnosis, Beijing, China, April 21-24, 2008. 5pp  Zhang, S., R. Kang, X. He, and M. G. Pecht. 2008. China  s Efforts in Prognostics and Health Management. IEEE Trans. on Components and Packaging Technologies 31\(2             BIOGRAPHY  Zhanshan \(Sam scientist and earned the terminal degrees in both fields in 1997 and 2008, respectively. He has published more than 60 peer-refereed journal and conference papers, among which approximately 40 are journal papers and more than a third are in computer science.  Prior to his recent return to academia, he worked as senior network/software engineers in semiconductor and software industry. His current research interests include: reliability, dependability and fault tolerance of distributed and software systems behavioral and cognitive ecology inspired pervasive and 


behavioral and cognitive ecology inspired pervasive and resilient computing; evolutionary &amp; rendezvous search games; evolutionary computation &amp; machine learning bioinformatics &amp; ecoinformatics                 pre></body></html 


