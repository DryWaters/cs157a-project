Mining Irregular Association Rules based on Action & Non-acti on Type Data Razan Paul, Abu Sayed Md. Latiful Hoque Department of Computer Science and Engineering Bangladesh University of Engineering and Technology, Dhaka 1000, Bangladesh razanpaul@yahoo.com, asmlatifulhoque@cse.buet.ac.bd Abstract Conventional positive association rules are the patterns that occur frequently together These patterns represent what decisions are routinely mad e based on a set of facts Irregular association rules  are the patterns that represent what decisions are rarely made based on the same set of facts Many domains like Healthcare Banking etc need the irregular rule to improve their system. In this pap er we propose a level wise search algorithm that works  based on action and non-action type data to find irregular association rules We have observed that irregular association rules can be discovered efficiently based on action type and non-action typ e data from large database To the best of our knowledge, there is no algorithm that can determine  such type of associations Its effectiveness has be en demonstrated by testing it for a real world patient  data set 1. Introduction Data mining is applied to discover new information which is hidden in the existing information. One of the techniques in data mining i s finding association rule. The first pioneering work to mine conventional positive association rules was explained in 1   I n  t h i s  w o r k   t h e y  s h o w e d  f i n d i n g  association rule problem can be separated into two sub problems. After that many algorithms [1-6   h a v e been proposed to mine positive association rules efficiently. These algorithms find rules that repre sent decisions that occur frequently  based on a set of facts In other words rules discovered by current association mining algorithms [1-6  a r e  p a t t e r n s  t h at represent what decisions are usually made In this problem we need patterns that are rarely made. We have proposed a novel mining algorithm that can efficiently discover the association rules from the  existing data that are strong candidates of variabi lity The algorithm uses a different candidate itemset selection process a modified candidate generation process and a different mechanism of generating rules from desire itemsets compared to any levelwise search algorithm The algorithm treats all the  items as being either actions that include decision  action and output or non-actions that include facts  statements and any criterion In our problem nonaction items appear very frequently in the data, wh ile action items rarely appear with the high frequent non-action items Negative association rules find patterns where items are conflict with each other a nd do not find decision which are made rarely Rare association rules are the patterns containing rare items which are less frequent items and do not find  decisions which are made rarely Irregular pattern represents wrong decision illegal practice and variability in decision 2 Related Work A rare association rule forms with rare data items or between frequent and rare data items However this rule does not map items that are used to make decision/action to antecedent and items that repres ent actions or decision to consequent Moreover it does  not expect antecedent to be high frequent because i t find rule with high confidence The algorithms to find these rules only assign different support base d on items frequency A number of approaches has been proposed to mine rare associations 7-11   I n  7     m i n i m u m  s u p p o r t  i s  c o m p u t e d  f o r  e a c h  i t e m  based on the frequency of the item In 8   A  f i x e d  minimum support is applied to extract desired itemsets which consist of only frequent items and relative support is applied to extract desired items ets which consist of rare items In 9   N e g a t i v e Binomial distribution is applied to extract Negativ eBinomial desired itemsets In 10     t h e  a s s o c i a t i o n rules are found by taking into consideration only infrequent items The approach suggested in 11  finds the association rules by computing item-wise minimum support A negative association rule presents a relationship  among itemsets and states the presence of some itemsets in the absence of others Every positive association rule P   Q has three corresponding 978-1-4244-7571-1/10/$26.00 ©2010 IEEE 63 


negative association rules, P  Q, ¬P  Q and ¬P  Q To extract negative association rules most papers employ different correlation measures between attributes 12-14   I n   1 3    t h e  a u t h o r  proposed a level-wise search algorithm for mining both positive and negative association rules that employs rule dependency measures. In [14   a u t h o r s  proposed another level-wise search algorithm for simultaneously extracting positive and negative association rules using Pearson correlation coefficient. In  [15    a u t h o r  h a v e  p r o p o s e d  d e t e c t i on model  using  multi layer perceptron neural network s MLP  to detect  fraud/abuse problem based on medical claims. It has been proposed to detect new  unusual and known fraudulent/abusive behaviors It works based on detection model which is very slow and need huge memory requirement to analyze existing large database. In [16   a u t h o r  u s e d  p o s i t ive association rule to build clinical pathways, which can detect fraud and abuse on new data However this model cannot detect fraud and abuse from the existing large healthcare data Our proposed approach detects fraud and abuse from the existing large information 3 Irregular Association Rules Let D   t 1  t 2      t n  be a database of n transactions with a set of items I   i 1  i 2      i m   Let set of action items of I be AI   ai 1  ai 2      ai k  where k is the number of action items Let set of non-action items of I be NAI   nai 1  nai 2      nai m rF k  where I rF G is the number of nonaction items For an itemset P C I and a transaction t in D we say that t supports P if t has values  for all the attributes in P for conciseness we also write P C t By D p we denote the transactions that contain all attributes in P  The support of P is computed as  P    D p  J  i.e the fraction of transactions containing P A irregular rule is of the form P  Q  with P  NAI Q  A I P  Q    To hold the rule following condition must meet P  P  or support  P   IEJEIQI JPA?A@AJP OQLLKNP  P  P  Q  or support  P Q    I=TEIQI JPA?A@AJP KJOAMQAJP OQLLKNP and P  P Q  P  P   I=TEIQI confidence where P\(x is the probability of x          If age <= 12 then 1 If 13<=age<=60 then 2 If 60 <=age then 3 If smoke = y then 1 If smoke = n then 2 If Sex = M then 1 If Sex = F then 2  Rule Base Actual Data Data suitable for Knowledge Discovery Original value Mapped value Headache 1 Fever 2  Patient ID Age Smoke Diagnosis 1020D 2 1 1 1021D 3 2 2  Patient ID Age Smoke Diagnosis 1020D 33 Yes Headache 1021D 63 No Fever  Actual data Generate dictionary for each categorical attribute Medical domain knowledge Original value Mapped value Yes 1 No 2  Dictionary of Diagnosis attribute Dictionary of Smoke attribute Map to integer items using rule base and dictionaries  Figure 1. Data transformation of medical data 4 Mapping complex medical data to mineable items For knowledge discovery the medical data have to be transformed into a suitable transaction format  to discover knowledge We have addressed the problem of mapping complex medical data to items using domain dictionary and rule base as shown in figure 1 The medical data are types of categorical  continuous numerical data Boolean interval percentage fraction and ratio Medical domain expert have the knowledge of how to map ranges of numerical data for each attribute to a series of it ems For example there are certain conventions to consider a person is young adult or elder with respect to age A set of rules is created for each continuous numerical attribute using the knowledge of medical domain experts. A rule engine is used to  map continuous numerical data to items using these developed rules We have used domain dictionary approach to transform the data, for which medical domain expert  knowledge is not applicable to numerical form As cardinality of attributes except continuous numeric  data are not high in medical domain these attribut e values are mapped integer values using medical domain dictionaries. Therefore, the mapping process  is divided in two phases Phase 1  a rule base is constructed based on the knowledge of medical domain experts and dictionaries are constructed for  attributes where domain expert knowledge is not applicable Phase 2  attribute values are mapped t o integer values using the corresponding rule base an d the dictionaries 5 The proposed algorithm 64 


General intuition of this algorithm is as follows based on a set of lab tests with same results, if 99 doctors   practice patients as disease x and  1 per cent doctors practice patients as other diseases, then th ere is a strong possibility that this  1 percent doctor s are doing illegal practice In other words if conseque nt C occurs infrequently with antecedent A and D Q W H F H G H Q W  $  R F F X U V  I U H T X H Q W O \\   W K H Q  $L  &  L V  D    U X O H that is a strong candidate of variability In every  domain, there are a set of facts. Based on these fa cts decision and action are taken In a rule S  T  if S contains a set of facts and T contains decision or action. Then such rules represent the decision T with their corresponding facts S  If S  T has sufficient support and confidence then it represents that decision or action T is taken routinely based on facts S  However if S is high frequent and rule S-T has very low confidence. Then it indicates based on fac ts S any other decision instead of T is usually taken. It also indicates that the decision is exceptionally t aken based on these facts The main features of the proposed algorithm are as follows x If minimum support is only used like conventional association mining algorithm desired  itemsets that involve rarely appeared action items with the high frequent non-action items will not be found To find rules that involve both frequent antecedent part and rare consequent items we have used two support metrics minimum antecedent support maximum antecedent consequent support x The proposed algorithm uses maximum confidence constraint instead of widely used minimum confidence constraint to form the rules. Moreover, it partitions itemsets into action item and non-action items instead of subset generation to form rules x Rules   have non-action items in the antecedent and action items in the consequent x In candidate generation it does not check the S U R S H U W Y H U V X E V H W R I D I U H T X H Q W L W H P V H W L V I U H T X H Q W L I W K H F D Q G L G D W H L W H P V H W F R Q W D L Q V R Q H or more action items to keep that itemset Let MAS is minimum antecedent support, MACS is maximum antecedent consequent support, Ij is the itemsets of size j, S m is the desired itemset of size m C k be the sets of candidates of size k. Figure 2 shows the association mining algorithm for finding irregu lar rule Like algorithm Apriori our algorithm is also  based on level wise search Each item consists of attribute name and its value Retrieving information  of a 1-itemset we make a new 1-itemset   if this 1 itemset is not created already otherwise update it s support. The non-action 1-itemset is selected if it has support greater or equal to minimum antecedent support The action 1-itemset is selected whatever support it has By this way 1-itemsets are explored  which have high support for antecedent items and have arbitrary support for consequent items 5.1 Candidate Generation The idea behind candidate generation of all levelwise algorithms like Apriori is based on the following simple fact Every subset of a frequent itemset is frequent so that they can reduce the number of itemsets that have to be checked However our proposed algorithm in candidate generation phase check this fact if the itemsets on ly contains non-action items. This idea makes itemsets  consist of both rare action items and high frequenc y non-action items If the new candidate contains one  or   more action items then it is selected as a val id candidate If the new candidate contains only nonaction items then it is selected as a valid candid ate only if every subset of   new candidate is frequent  This way the algorithm keeps the new candidates that have one or more action items 5.2 Candidate Selection We have used two separate supports metrics to filte r out candidates An itemset with only non-action items is compared with minimum antecedent support metric as non-action items  can only  take part in  antecedent part of irregular rule which  need to b e high frequent An itemset with   one or more action items is compared with maximum antecedent consequent support metric to keep rare action items  with the high frequent non-action items An itemset with only non-action items is selected if it has support greater or equal to minimum antecedent support. An itemset with   one or more action items is selected if it has support smaller or equal to maximum antecedent consequent support By this way, itemsets are explored which has high   support  for non-action items and low support for action ite ms with high support non-action items. Here pruning is  based mostly on minimum antecedent support maximum antecedent consequent support and checki Q J W K H S U R S H U W H Y H U V X E V H W R I D I U H T X H Q W L W H P V H W  L V  I U H T X H Q W 5.3 Generating Association Rule This problem needs association rules that represent  irregular relationships between action and non-acti on items that occur rarely together. For this reason the proposed algorithm uses maximum confidence constraint    to form rules as it needs rule that h as high support in antecedent portion and has very low  support in itemset from which the rule is generated  It selects a rule if its confidence is less or equa l to maximum confidence constraint Moreover it does not use subset generation to the itemsets to form rules. Here an itemset is partitioned into action item and non-action items Action items are for consequent part and non-action items are for 65 


antecedent part. Here each itemset is mapped to only  one rule   Algorithm:  Find itemsets which  consist of non-actio n items with high support and  action  items with low support based on candidate generation Input: Database,  minimum antecedent support, maximum antecedent  consequent support Output :  Itemsets which  are strong candidates of va riability 1  K=1, S 2  Read the metadata about which attributes are action  type and which are not 3  I k Select 1-itemsets either which consist of a non-action item and has support greater or equal to minimum antecedent support or    which consists of an action item 4  While\(I k    4.1 K 4.2 C k Candidate_generation\(I k-1   4.3 CalculateCandidatesSupport\(C k  4.4 I k SelectDesiredItemSetFromCandidates C K Sk , MAS, MACS 4.5 S  = S U S k  5  return S procedure  SelectDesiredItemSetFromCandidates C K S k MAS, MACS 1  For each Itemset c  C k  1.1 If c contains only non-action items 1.1. 1  If c.support >=   MAS 1.1.2  Add it to I 1.2 else if c contains one or more action items  with non-action items 1.2.1  If c.support  <=  MACS 1.2.2 Add it to I & S k 1.3 If c contains only action items 1.3.1  Add it to I 2. return I   Procedure CalculateCandidatesSupport\(Ck 1, For each transaction t of Database 1.1 CalculateSupportFromOneTransactionFor Cadidates\(C k t  procedure  CalculateSupportFromOneTransaction ForCadidates\(C k t 1.C t Find the subsets of C k which are candidate  U  H D F K  F D Q G L G D W H  F t 2.1 c.count  Algorithm : Find Assosiation rules for Variability Finding Input:  I \(Vaiavility Itemsets\, maximumConfidence Output: R \( set of rules 1  R 2  For each X  I 2.1 Antecedent set AS = \(as 1 as 2 D V n  where  as i   X and AC\(as i   2.2  Consequent  set CS = \(cs 1 cs 2 F V n  where  cs i   X and AC\(cs i   2.3  if  \(support \(AS  CS\Support \(AS maximum confidence 2.3.1  AS L CS is a valid rule 2.3.2 R = R U \(AS L CS  procedure Candidate_generation\(I k-1  1.For each Itemset i 1   I k-1 1.1 For each Itemset i 2   I k-1 1.1.1 Newcandidate, NC = Union\(i 1 i 2  1.1.2 If  Size of  NC is k 1.1.2.1 If  NC contains one  or more action items 1.1.2.1.1 Add it to C k if every subset  of non-action items is frequent 1.1.2.2 else 1.1.2.2.1 If every subset of NC is frequent 1.1.2.2.1.1 Add it to C k  o thewise remove it 2. return C k    Figure 2 Association mining algorithm for finding i rregular rule 5.3.1. Lemma 1 Number of rules is equal to number of desired itemsets and number of discarded rules m p rF S where S is the number of desired itemsets Proof A single desired itemset consists of action type items and non-action type items Action items and non-action items are mapped to consequent and antecedent parts respectively. Let I = { i 1 i 2 L n  be the set of items to be mined, where items can be  either action type or non-action type Let AI ai 1  ai 2 D L u  be  the set of action items to be mined Let NAI= { nai 1 nai 2 Q D L v be  the set of nonaction items to be mined Each nai has to have confidence greater than minimum confidence support to be included as 1itemset and all ai are included as 1itemset Let C c 1 c 2 c 3  F n  be the set of candidate itemsets. A new candidate NC is added to C if the non-action part of NC named NCNA holds the following  property  support each subset of NCNA  minimum antecedent support A candidate c is selected for rule generation if and only L I D F W L R Q S D U W R I F  1 8 D Q G F  V X S S R U W  maximum confidence support. Action item  and non action item of a desired itemset is mapped to antecedent items and consequent items of a rule. So  every desired itemset is mapped to a single valid rule Total rules  number of desired itemsets  S Let m is the average number of distinct value each  multidimensional attribute holds. P is the number o f attributes to be mined. Number of possible differen t rules  I L  Number of discarded rules   I L rF 5 where S is the number of desired itemsets 6 Results and discussion The experiments were done using PC with core 2 duo processor with a clock rate of 1.8 GHz and 3GB of main memory The operating system was Microsoft Vista and implementation language was c#.  We used a patient dataset to verify our method  The dataset contains items which are either actions that include decision diagnosis and cost or nonactions that include lab tests, any symptom of pati ent 66 


and any criterion of disease. Each instance represe nts the data of one patient We have filtered out instances which has noisy or missing values The data set of interest has collected and preprocessed  from the different local hospitals of Bangladesh which has 50273 instances and 514 attributes included 150 discrete and 364 numerical attributes  All these data are converted into mineable items integer representation\ using domain dictionary an d rule base               0 500 1000 1500 2000 10K 25K 50K times in secs Number of transactions A priori Proposed Algorithm Figure 5 Time comparison of different maximum antecedent supports Figure 6 Time comparison of different maximum antecedent consequent supports  Figure 4 Number of rules based on maximum confidence   0 2 4 6 2 5 10 Number of rules Maximum Confidence MAS = .7 MACS = .1 MAS = .85 MACS = .5  0 500 1000 1500 2000 3 5 10 Time\(in seconds MACS MAS = .85 MC = .1 MAS = .70 MC = .1 Figure 8 Accuracy of the proposed algorithm based on maximum Confidence Figure 7 Accuracy of the proposed algorithm based on irregular metric  0 0.5 1 50 70 90 Accuracy minimum antecedent support MACS = .1 MC = .1 MACS = .1 MC = .05 Figure 3 Time comparison of Apriori and proposed algorithm for the patient dataset  0 500 1000 1500 2000 90 70 50 times in secs minimum antecedent support MACS = .1 MC = .05 MACS = .05 MC = .05  0 0.5 1 10 5 2 Accuracy Maximum confidence MAS = .85 MCS = .05 MAS = .7 MCS = .1 Table 1 Test result for patient dataset Minimum antecedent support 70 85 Maximum antecedent consequent support 10 5 Maximum confidence 10 5 Number of desired itemsets 49 31 Number of Desired rules 5 3 Time \(Seconds 922.2 1634.56 Table 1 shows test result for patient dataset afte r running the program of the  proposed algorithm with  different parameters Second column of the table presents the test result where we used minimum antecedent support of 70 maximum antecedent consequent support of 10 and maximum confidence of 10 49 desired itemsets were generated in total. 3 rules were discovered in tota l. It took about 922.2013 seconds to find these rules Third column of the table presents the test result where we used minimum antecedent support of 85 maximum antecedent consequent support of 5% and maximum confidence of 5 31 desired itemsets were generated in total 5 rules were discovered in  total It took about 1634.5634 seconds to find these  rules Figure 3 shows Apriori has taken significant higher time compared to the proposed algorithm. It i s because pruning in the proposed algorithm is based on minimum antecedent support maximum antecedent consequent support and checking the S U R S H U W H Y H U V X E V H W R I D I U H T X H Q W L W H P V H W L V I U H T X H Q W R Q Q R Q action items Figure 4 presents if maximum confidence MC increases number of valid rules increases Figure 5 shows how time is varied with different minimum antecedent support MAS values for irregular rule finding algorithm Here we measured the performance of irregular rule finding algorithm in terms of MAS keeping MACS MC number of action items number of non-action items constant Time is not varied significantly because MAS has no lead to reduce disk access as the patient data set has all sizes of candidates fo r these MAS values. It has only lead to the number of  valid candidate generations and it can save some CPU time. As it has lead to the CPU time, the three  different cases   take slightly different time Figure 6 shows how time is varied with different MACS by keeping MAS  MC number of action items, number of non-action items constant. Time is not varied significantly because MACS has no lead to reduce disk access as the patient data set has all sizes of candidates for these MAS values. It has onl y lead to the number of valid candidate generations and it can save some CPU time. As it has lead to the CPU time the three different cases take slightly different time As maximum consequent support 67 


decreases number of valid candidate generation decreases For this reason, case with 5% MACS takes more time than case with 3% MACS and case with 10 MACS takes more time than case with 5 MACS Figure 7 illustrates accuracy results for our proposed algorithm based on minimum antecedent support The value of minimum antecedent support for each presented result is also indicated The figu re presents MAS has no lead in accuracy as it is not used as a parameter in selecting valid candidate an d rules Figure 8 illustrates accuracy results for our proposed algorithm based on maximum confidence The figure presents maximum confidence has lead in accuracy as it is used as parameter in selecting va lid rules As maximum confidence decreases accuracy increases and the number of discovered rules decreases. It is because less confidence indicates th at antecedent and consequent occurs rarely together  i n the dataset 7 Conclusion Irregular patterns represent wrong decision illegal practice and variability in decision In th is paper, we propose a level wise search algorithm tha t works based on action and non-action type data to find irregular association rule The proposed algorithm has been applied to a real world patient data set. We have shown significant accuracy in the  output of the proposed algorithm. Although we have used level-wise search for finding irregular patter ns each step of our algorithm is different from any ot her level-wise search algorithm Rules generation from desired item sets is also different from conventiona l association mining algorithms 8. References 1 R Agrawal T P L H O L V N L D Q G   Swami Mining Association Rules between Sets of Items in Very Large Databases in Proceedings of the 1993 ACM SIGMOD international conference on Management of data Washington, D.C., 1993, pp. 207-216 2 R Agrawal and R Srikant Fast Algorithms for Mining Association Rules in Large Databases in Proceedings of the 20th International Conference on  Very Large Data Bases  San Francisco CA USA 1994, pp. 487 499 3 S Brin, R Motwani, J D. Ullman, and Shalom Tsur Dynamic Itemset Counting and Implication Rules for Market Basket Data in Proceedings of the 1997 ACM SIGMOD international conference on Management of data Tucson, Arizona, United States 1997, pp. 255-264 4 H Mannila H Toivonen and A I Verkamo Efficient Algorithms for Discovering Association Rules in AAAI Workshop on Knowledge Discovery in Databases 1994, pp. 181-192 5 J S Park M S Chen and P S Yu An Effctive Hash based Algorithm for mining association rules in Prof ACM SIGMOD Conf Management of Data  New York, NY, USA, 1995, pp. 175 186 6 A Savasere E Omiecinski and S B Navathe An Efficient Algorithm for Mining Association Rules in Large Databases in Proceedings of the 21th International Conference on Very Large Data Bases  1995, pp. 432 444 7 B Liu W Hsu and Y Ma Mining Association Rules with Multiple Minimum Supports in SIGKDD Explorations 1999, pp. 337--341 8 H Yun D Ha B Hwang and K H Ryu Mining association rules on significant rare data using relat ive support Journal of Systems and Software archive  vol. 67, no. 3, pp. 181 191, 2003 9 M Hahsler A Model-Based Frequency Constraint for Mining Associations from Transaction Data Data Mining and Knowledge Discovery  vol 13 no 2, pp. 137 166, 2006 10 L Zhou and S Yau Association rule and quantitative association rule mining among infrequent  items in International Conference on Knowledge Discovery and Data Mining  San Jose California 2007, pp. 156-167 11 R. U Kiran and P. K Reddy, "An improved multiple minimum support based approach to mine rare association rules in The IEEE Symposium on Computational Intelligence and Data Mining  Nashville, TN, USA, 2009, pp. 340-347 12 S Brin R Motwani and C Silverstein Beyond Market Baskets Generalizing Association Rules to Correlations in In The Proceedings of SIGMOD  AZ,USA, 1997, pp. 265-276 13 X Wu, C Zhang, and S Zhang, "Efficient Mining of Both Positive and Negative Association Rules ACM Transactions on Information Systems  vol 22 no 3 p. 381  405, 2004 14 M L Antonie and O R. Zaïane, "Mining positive and negative association rules an approach for confined rules in Proceedings of the 8th European Conference on Principles and Practice of Knowledge Discovery in Databases Pisa, Italy, 2004, pp. 27 38 15 P A Ortega C J Figueroa and G A Ruz A Medical Claim Fraud/Abuse Detection System based on Data Mining A Case Study in Chile in DMIN  2006, pp. 224-231 16 W S Yanga and S Y Hwangb A Process-Mining Framework for the Detection of Healthcare Fraud and Abuse Expert Systems with Applications  vol 31 no. 1, p. 56  68, July 2006 68 


 T ABLE 26  C LASSIFICATION  OF T RANSLATION C OUNT  Translation  Count Class Population Percentage one 58,990 76.34 two 14,581 18.87 three or more 3698 4.79 15\  User Interface There are 97,302 OSS Projects \(72.32 of the recorded projects that list the available user interface for the project.  There are 60 distinct values which is then classified into 4 classes as shown in Table 26  T ABLE 26  U SER I NTERFACE CLASSIFICATION FOR OSS  P ROJECT  User Interface Class Population Percentage  Desktop-based 58,136 46.91 Web-based 31,679 25.57 Text-based 21,228 17.13 Other 12,872 10.39 Where  Desktop-based: Win32 \(MS Windows\, X Window System \(X11\, Gnome, GTK+, etc  Text-based: Non-interactive \(Daemon Console/Terminal, etc The classification of the count of User Interface in each OSS Project is shown in Table 27 T ABLE 27  C LASSIFICATION OF U SER I NTERFACE C OUNT  User Interface Count Class Population Percentage one 77,983 80.15 two 14,132 14.52 three or more 5187 5.33 V  R ESULT AND D ISCUSSION  The process of Datamining 2-Itemset Association Rule is using Weka Datamining tool.  The class parameters were the combination of two parameters with the Consequent was always set to parameter Download There are 24 possible combinations of other parameters as the Antecedent and Download as the Consequent The result that have Download Thousands or more as Consequent with Confident  50 and Support  10% are interesting values Table 28 shows all the result of Datamining 2-Itemset Association Rule the has Consequent  Download - Thousands of more  T ABLE 28  R ESULT WITH D OWNLOAD  T HOUSANDS OF MORE AS C ONSEQUENT  Antecedent Analysis Parameter Class Pop. Sup. Conf Audience Common Users 123909 14.91% 51.76  Development Status 5-Production Stable 83422 17.54% 60.12  Antecedent Analysis Parameter Class Pop. Sup. Conf Operating System  Linux-like 129912 19.88% 52.34  Operating System  Windows 129912 18.51% 55.19  Review Count three or more 7822 28.97% 94.10  Review Count two 7822 14.02% 81.32  Review Count one 7822 36.93% 71.07  Size MB 70343 15.46% 55.71  Total Thumb eleven or more 15117 12.17% 98.87  Total Thumb two to three 15117 18.83 75.26  Total Thumb single 15117 29.34% 64.03  Total Thumb four to ten 15117 15.28 90.73  Translation English 73412 30.92% 51.62  Translation European 73412 21.54% 63.97  Note: Pop. - Population, Sup. - Support, Conf. - Confidence Table 28 shows that the success factors of OSS Project with the goal to get the number of download in thousands or more are 1  Project should target for common users as audience 2  Project source code should already in 5  Production Stable development status 3  Project should work on either Linux-like or Windows operating system 4  Project should be reviewed and thumb-reviewed by at least one users 5  Project has filename in zip format with size in MB in magnitude 6  Project should have either English or European language translation Most of the above results are reasonable except for the file size.  Stating Common users as audience will reach wider segment of users.  Users are also more interested in projects that are in reasonable level of maturity so they will select OSS Project which is already in 5  Production / Stable development status.  The selected Operating System in Windows or Linux-like are also reasonable since both are the most popular desktop-based Operating System.  The need for reviews and thumbs by other users seems to have good influence for another users to download and try the OSS The file size in MB magnitude appears with possible explanation that users are more interested in larger scale OSS Project than medium or small one.  Lastly, the English or European language translation is important since many of OSS Projects are originated from this region \(Englishspeaking countries or other European language-speaking countries\. It is also interesting to note that some freedom is still available for project initiator to decide i.e. topic programming language and description of his/her project without affecting the number of download Some caution should be considered relating to these rules The subject being researched is small to medium OSS Projects 


 from sourceforge.net that may not reflect the whole population of OSS Projects that are small, medium and large scale.  These result should also verified using OSS Project data from other portal i.e. launchpad.net, google code, etc. to verify their validity VI  C ONCLUSION  We present the Datamining 2-Itemset Association Rule of 134,549 OSS Projects crawled from sourceforge.net portal This covers about 84% of the total of 160,141 OSS Projects registered at the portal in the month of January 2010.  There are more than 27 parameter being recorded into MySQL database i.e. audience, audience count, database environment database environment count, developer count, development status, development status count, number of download filename and file size, license, license count, operating system, operating system count, programming language programming language count, review count, topic, topic count, translation, translation count, user interface, and user interface count The result of this datamining process are 6 success factors that may be applied by project initiators and developers in order to increase the probability of success of their projects The details of the guidelines is shown in Section V. Future work of this research include expanding the experiment to cover other portal i.e. launchpad.net, google code and freshmeat.net ACKNOWLEDGMENT  The authors would like to thank Maranatha Christian University \(http://www.maranatha.edu\ that provides the funding for this research and Department of Computer Science and Electronics at Gadjah Mada University http://mkom.ugm.ac.id\ which provides guideline and technical assistance for the research R EFERENCES  1  R. Agrawal., R. Srikant, Fast Algorithm for Mining Association Rule Proceeding of 20th International Conference Very Large Database 1994, pp 1 - 32 2  A. Capiluppi, J.F. Ramil, Studying the Evolution of Open Source Systems at Different Levels of Granularity: Two Case Studies Proceeding of the 7th International Workshop of Principles of Software Evolution, 2004, 113 - 118 3  S. Christley, G. Madey, Analysis of Activity in the Open Source Software Development Community, Proceeding of the 40th IEEE Annual Hawaii International Conference on System Sciences, 2007 166b 4  T.T. Dinh-Trong, J.M. Bieman, The FreeBSD Project: A Replication Case Study of Open Source Development, IEEE Transaction on Software Engineering Vol. 31 No. 6,  June 2005, 481  494 5  V.K. Gurbani, A. Garvert, J.D. Herbsleb, A Case Study of Open Source Tools and Practices in Commercial Setting, Proceeding of the fifth Workshop on Open Source Software Engineering, 2006, 1 - 6 6  J.E. Istiyanto, A.W.R. Emanuel, Success Factors of Open Source Software Projects using Datamining Technique, Proceeding of Information Technology and Communication International Seminar ITIS\, June 2009 7  P.L. Li, J. Herbsleb, M. Shaw,  Finding Predictors of Field Defects for Open Source Software Systems in Commonly Available Data Sources a Case Study of OpenBSD, Proceeding of 11th IEEE International Software Metrics Symposium, 2005,  32 8  G. von Krogh, S. Spaeth, S. Haefliger, Knowledge Reuse in Open Source Software: An Exploratory Study of 15 Open Source Projects Proceeding of 38th Hawaii International Conference on System Sciences, 2005, 198b 9  A. Mockus, R.T. Fielding, J. Herbsleb, Two Case Studies of Open Source Software Development: Apache and Mozilla, ACM Transaction on Software Engineering and Methodology Vol. II No. 3 Juli 2002, 309  346 10   A. Mockus, R.T. Fielding, J. Herbsleb, A Case Study of Open Source Software Development: The Apache Server,  ACM ICSE, 2000, 263 272 11   E.S. Raymond, The Cathedral and the Bazaar, version 3, Thyrsus Enterprises \(http://www.tuxedo.org/~esr/\, 2000 12   Sourceforge.net web portal at http://www.sourceforge.net 13   S. Spaeth, M. Stuermer, Sampling in Open Source Development: The Case for Using the Debian GNU/Linux Distribution, Proceedings of the 40th IEEE Hawaii International Conference on System Sciences 2007, 166a 14   Weka website at  http://www.cs.waikato.ac.nz/ml/weka 


Application of Chaotic Particle Swarm Optimization Algorithm in Chinese Documents Classification 763 Dekun Tan Qualitative Simulation Based on Ranked Hyperreals 767 Shusaku Tsumoto Association Action Rules and Action Paths Triggered by Meta-actions 772 Angelina A. Tzacheva and Zbigniew W. Ras Research and Prediction on Nonlinear Network Flow of Mobile Short Message Based on Neural Network 777 Nianhong Wan, Jiyi Wang, and Xuerong Wang Pattern Matching with Flexible Wildcards and Recurring Characters 782 Haiping Wang, Fei Xie, Xuegang Hu, Peipei Li, and Xindong Wu Supplier Selection Based on Rough Sets and Analytic Hierarchy Process 787 Lei Wang, Jun Ye, and Tianrui Li The Covering Upper Approximation by Subcovering 791 Shiping Wang, William Zhu, and Peiyong Zhu Stochastic Synchronization of Non-identical Genetic Networks with Time Delay 794 Zhengxia Wang and Guodong Liu An Extensible Workflow Modeling Model Based on Ontology 798 Zhenwu Wang Interval Type-2 Fuzzy PI Controllers: Why They are More Robust 802 Dongrui Wu and Woei Wan Tan Improved K-Modes Clustering Method Based on Chi-square Statistics 808 Runxiu Wu Decision Rule Acquisition Algorithm Based on Association-Characteristic Information Granular Computing 812 JianFeng Xu, Lan Liu, GuangZuo Zheng, and Yao Zhang Constructing a Fast Algorithm for Multi-label Classification with Support Vector Data Description 817 Jianhua Xu Knowledge Operations in Neighborhood System 822 Xibei Yang and Tsau Young Lin An Evaluation Method Based on Combinatorial Judgement Matrix 826 Jun Ye and Lei Wang Generating Algorithm of Approximate Decision Rules and its Applications 830 Wang Yun and Wu-Zhi Qiang Parameter Selection of Support Vector Regression Based on Particle Swarm Optimization 834 Hu Zhang, Min Wang, and Xin-han Huang T-type Pseudo-BCI Algebras and T-type Pseudo-BCI Filters 839 Xiaohong Zhang, Yinfeng Lu, and Xiaoyan Mao A Vehicle License Plate Recognition Method Based on Neural Network 845 Xing-Wang Zhang, Xian-gui Liu, and Jia Zhao Author Index 849 
xiii 


   C4.2 Open GL has excellent documentation that could help the developer learn the platform with ease C4.3 Developer has very little ex perience in working with Open GL platform  For our case study, alternative B i.e. Adobe Director was the most favorable alternative amongst all the three. It catered to the reusability criteria quite well and aimed at meeting most of the desired operational requirements for the system   6. CONCLUSION & FUTURE WORK  The main contribution of this paper is to develop an approach for evaluating performance scores in MultiCriteria decision making using an intelligent computational argumentation network. The evaluation process requires us to identify performance scores in multi criteria decision making which are not obtained objectively and quantify the same by providing a strong rationale. In this way, deeper analysis can be achieved in reducing the uncertainty problem involved in Multi Criteria decision paradigm. As a part of our future work we plan on conducting a large scale empirical analysis of the argumentation system to validate its effectiveness   REFERENCES  1  L  P Am g o u d  U sin g  A r g u men ts f o r mak i n g an d  ex p lain in g  decisions Artificial Intelligence 173 413-436, \(2009 2 A  Boch m a n   C ollectiv e A r g u men tatio n    Proceedings of the Workshop on Non-Monotonic Reasoning 2002 3 G  R Bu y u k o zk an  Ev alu a tio n o f sof tware d e v e lo p m en t  projects using a fuzzy multi-criteria decision approach Mathematics and Computers in Simualtion 77 464-475, \(2008 4 M T  Chen   F u zzy MCD M A p p r o ach t o Selec t Serv ice  Provider The IEEE International Conference on Fuzzy 2003 5 J. Con k li n  an d  M. Beg e m a n   gIBIS: A Hypertext Tool for Exploratory Policy Discussion Transactions on Office Information Systems 6\(4\: 303  331, \(1988 6 B P  Duarte D e v elo p in g a p r o jec ts ev alu a tio n sy ste m based on multiple attribute value theroy Computer Operations Research 33 1488-1504, \(2006 7 E G  Fo rm an  T h e  A n a l y t ic Hier a rch y P r o cess A n  Exposition OR CHRONICLE 1999 8 M. L ease  an d J L  L i v e l y  Using an Issue Based Hypertext System to Capture Software LifeCycle Process Hypermedia  2\(1\, pp. 34  45, \(1990 9  P e id e L i u   E valu a tio n Mo d e l o f Custo m e r Satis f a c tio n o f  B2CE Commerce Based on Combin ation of Linguistic Variables and Fuzzy Triangular Numbers Eight ACIS International Conference on Software Engin eering, Artificial Intelligence Networking and Parallel Distributed Computing, \(pp 450-454 2007  10  X  F L i u   M an ag e m en t o f an In tellig e n t A r g u m e n tatio n  Network for a Web-Based Collaborative Engineering Design Environment Proceedings of the 2007 IEEE International Symposium on Collaborative Technologies and Systems,\(CTS 2007\, Orlando, Florida May 21-25, 2007 11 X. F L i u   A n In ternet Ba se d In tellig e n t A r g u m e n tatio n  System for Collaborative Engineering Design Proceedings of the 2006 IEEE International Symposium on Collaborative Technologies and Systems pp. 318-325\. Las Vegas, Nevada 2006 12 T  M A sub jec tiv e assess m e n t o f altern ativ e m ission  architectures for the human exploration of Mars at NASA using multicriteria decision making Computer and Operations Research 1147-1164, \(June 2004 13 A  N Mo n ireh  F u zzy De cisio n Ma k i n g b a se d o n  Relationship Analysis between Criteria Annual Meeting of the North American Fuzzy Information Processing Society 2005 14 N  P a p a d ias HERMES Su p p o rti n g A r g u m e n tative  Discourse in Multi Agent Decision Making Proceedings of the 15th National Conference on Artifical Intelligence \(AAAI-98  pp. 827-832\dison, WI: AAAI/MIT Press,  \(1998a 15  E. B T riantaph y llo u   T h e Im p act o f  Ag g r e g atin g Ben e f i t  and Cost Criteria in Four MCDA Methods IEEE Transactions on Engineering Management, Vol 52, No 2 May 2005 16 S  H T s a u r T h e Ev alu a tio n o f airlin e se rv ice q u a lity b y  fuzzy MCDM Tourism Management 107-115, \(2002 1 T  D W a n g  Develo p in g a f u zz y  T O P S IS app r o ach  b a sed  on subjective weights and objective weights Expert Systems with Applications 8980-8985, \(2009 18 L  A  Zadeh  F u z z y Sets   Information and Control 8  338-353, \(1965  152 


                        





