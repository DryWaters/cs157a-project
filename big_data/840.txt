  1 Establishing Presence within the Service-Oriented Environment Eric Konieczny, Ryan Ashcraft David Cunningham, Sandeep Maripuri Booz Allen Hamilton 8283 Greensboro Drive McLean, VA  22102 703-902-5000 konieczny_eric@bah.com, ashcraft_ryan@bah.com, c unningham_david@bah.com, ma ripuri_sandeep@bah.com  Abstract 227As Service Oriented Arch itectures continue to gain prominence as a mechanism to realize standards-based distributed computing paradigms, the ability for traditional implementations to support bandwidth disadvantaged and runtime composition scenarios has been questioned 12  
Traditional approaches levera ge centralized registry platforms to enable service discovery functionality, but this inherently introduces the possibility of stale metadata and registry information that does not reflect actual operating conditions. Service presence offers a fresh opportunity to redefine service discovery; while not typically viewed as a crucial element of SOA's run time discovery solution space service presence significantly enhances the real-time monitoring of services by introducing an omnipresent mechanism for capturing a service's state. This paper focuses on analyzing and evaluating the feasibility of utilizing Peer-to-Peer \(P2P\proaches to better facilitate service presence and dynamic service discovery through discussion of experimentation conducted using an 
eXtensible Messaging and Presence Protocol \(XMPP driven prototype T ABLE OF C ONTENTS  1  I NTRODUCTION 1  2  S ERVICE O RIENTED A RCHITECTURE 2  3  M OTIVATION 3  4  S ERVICE P 
RESENCE 5  5  I MPLEMENTATION 7  6  C ONCLUSION 10  R EFERENCES 11  B IOGRAPHIES 11  1  I NTRODUCTION  Service discovery is a central concept for fully realizing the benefits of Service-Oriented Architecture \(SOA\ A robust 
service discovery implementation enables the runtime fulfillment of the \223Publish-Find-Bind\224 SOA paradigm and facilitates the execution of context-sensitive business policy. More importantly, by allowing service clients to dynamically locate and access services at runtime, SOA can better react to the malleable nature of highly distributed enterprises. Where there is frequent fluctuation in both services and service consumers, such as in mobile 1  1 978-1-4244-2622-5/09 25.00 \2512009 IEEE 2 IEEEAC paper #1311, Version 2, Updated January 9, 2009 bandwidth disadvantaged environments, paramount importance must be placed on an 
implementation\222s ability to seamlessly handle the change The lack of an effective mechanism for dynamic service discovery can result in the significant degradation of overall system capability and quality As SOA continues to gain traction within the aerospace community and becomes the underlying technology vehicle driving real-time production systems, the effectiveness of traditional SOA implementati ons within non-traditional aerospace environments must be evaluated.  The capabilities of a SOA component deployed on a fighter jet, commercial aircraft, satellite, missile, or other non-traditional asset should be synonymous to those of a component deployed to a traditional, stationary server Similarly, given the recent industry trend centered on web service enabling dynamic 
 their corresponding integration into SOA infrastructures traditional approaches and commonly accepted patterns may not suffice.  More specifically, the needs and capabilities of a dynamic service discovery implementation deployed to a volatile SOA environment s hould be re-addressed Traditional industry de-facto standards providing dynamic service discovery capabilities have generally employed standards-based, centralized re gistry platforms, such as Universal Description, Discovery and Integration \(UDDI and Electronic Business using eXtensible Markup Language ebXML\odels have several strengths and provide a powerful and flexible mechanism to store and retrieve service metadata in an interoperable fashion.  As a result 
centralized registry based service discovery implementations have gained wide acceptance and popularity within the user community.  However, due to the lack of a dynamic feedb ack mechanism, the overall effectiveness of these centralized models is limited by their storage of stale snapshots of the transient  environments in which they operate Previous research and development focusing on better facilitating dynamic service discovery in distributed environments has produced several service discovery protocol  i n cl udi ng Ji ni Net work Technol ogy and Universal Plug and Play \(UPnP technologies are specifically designed as lower-level communication protocols and as a result, have not been 


  2 widely applied at the enterprise scale.  This paper will introduce the notion of estab lishing service presence as a solution to help alleviate some of the issues surrounding the usage of traditional, registry-based service discovery platforms in dynamic environments, on an enterprise SOA level.  Service presence offers a fresh opportunity to refine dynamic service discovery by enabling the real-time monitoring of services through the omnipresent capturing of a service\222s state.  This paper will focus on how service presence can be applied to a wide variety of aerospace applications, both within the federal and commercial domains, to better solve challenging use cases associated with a SOA\222s operation in non-traditional, unpredictable environments.  Additionally, this paper will discuss the establishment of service presence through a standardsbased, eXtensible Messaging and Presence Protocol XMPP\ven solution, leveraging a rich set of presence and event-driven capabilities, to augment the service metadata publishing and retrieval infrastructure that is already in wide use across the industry 2  S ERVICE O RIENTED A RCHITECTURE  Service-Oriented Architectur e \(SOA\is a paradigm for organizing and utilizing distributed capabilities that may be under the control of different ownership domains. It provides a uniform means to offer, discover, interact with and use capabilities to produce desired effects consistent with measurable preconditions and expectati  M o re concretely, SOA is similar to traditional component models and relates different functional capabilities by providing uniform, platform-agnostic access to these capabilities via defined interfaces.  These capabilities, or services, provide a platform-neutral interface contr act that allows for service interaction across distributed and heterogeneous platforms in a uniform and universal manner. Services can be made available by publishing the serv ice to a service registry where it may be discovered by a service consumer From an enterprise architect ure perspective, the physical infrastructure to provide the underpinnings of this data sharing platform, in part, lies in the adoption of a SOA implemented using Web Services and other XML-driven initiatives. Within a SOA, services are visible to the network at large by provi ding physical interfaces over enterprise assets.  These servi ces are platform neutral, and are described with application-agnostic service descriptions that can be published to metadata registries.  Thus, networkenabled users are provided an open, standards-based means to discover relevant services and to invoke them either individually or within the framework of a larger composite process that leverages several services across the enterprise SOA provides a foundational layer for an informationcentric enterprise that satisfies new and changing business needs by enabling the dynamic sharing and aggregating of information across organizational boundaries via individual service-enabled enterprise assets [13 However, SOA, by itself, is me rely an abstract architecture specification; World Wide Web Consortium \(W3C  and the Organization for the Advancement of Structured Information Standards \(OASIS endorsed W e b Servi ce standards \(WS XML and Web technologies represent the latest attempt to realize the full capabilities of SOA.  These standards provide many of the essential physical infrastructure components required of a SOA platform 1  Message Encoding SOAP is a standardized specification for encoding message payloads between services 2  Service Interface Description Web Service Description Language \(WSDL\bes a Web service's capabilities as collections of communication endpoints capable of exchanging messages 3  Service Metadata Registry Universal Description Discovery, and Integration UDDI\ for services to expose their interface descriptions for discovery on the network  Figure 1 \226 Traditional web services basic protocol stack In particular, service discovery is a key enabling component of SOA\222s \223Publish-Find-Bind\224 architectural pattern.  As described in Figure 2, a SOA\222s service discovery capability enables a service consumer to find the information needed to access services at runtime by providing the relevant set of business context metadata describing the desired service\222s classification, functionalities and other relevant exposed metadata.  Once provided with needed invocation metadata the service consumer can dynamically leverage the desired service programmatically at run time.  As a result, service consumers can execute business logic and perform policy decision-making in real-time based on relevant business events 


  3  Figure 2 \226 Publish-find-bind SOA paradigm From an enterprise computing standpoint, service-oriented architecture implementations have resulted in a fundamental shift from application-centric computing, where only a privileged set of users access data from isolated applications that perform a limited set of tasks, to a more situationcentric model, where a consum er interacts with a looselycoupled system that provide s dynamic, context-sensitive capabilities based on the operational needs of the problem at hand.  Essential to this vision of improved interoperability and coordination is enabling services and their consumers \226 doers and users - to better coordinate the sharing of information.  This fundamental support of loose coupling significantly increases the valu e of a SOA infrastructure by eliminating integration barriers of new business components and functionalities.  Without an effective service discovery mechanism, a SOA implementation\222s components become increasingly interdependent and unable to react to one another as the system grows in size and function.  Service consumers may be limited to the design time, hard-coded usage of available services.  As a result, a SOA\222s ability to handle infrastructure change is significantly hindered as labor-intensive code-base modifications may be required for even trivial modifications such as service endpoint changes A robust dynamic service discovery solution can enhance a SOA\222s capacity to react to changing conditions by reconfiguring itself dynamically through the seamless integration of new, previously unknown services 3  M OTIVATION  With the recent advances and the rapid adoption of pervasive and grid computing, SOA has emerged as a key architectural paradigm for effectively facilitating communication between increasingly heterogeneous assets In dynamic, distributed environments, a SOA\222s ability to seamlessly handle change is paramount.  Accordingly, the effectiveness of a SOA\222s dynamic service discovery solution in providing service consumers with accurate, upto-date discovery functionality becomes even more prevalent than in a more stable infrastructure.  The negative impact of network fluctuations, service outages, reclassifications, and transient ente rprise situations can all be reduced through the effectual use of dynamic service discovery.  Due to the high frequency and amount of variability in service providers, the overall capability of a SOA may become significantly degraded or even rendered useless barring the presence of a robust dynamic service discovery solution.  Several industry areas, including federal domains such as military, defense, and intelligence as well as commercial domains focused on mobile computing platforms, have a strong business need for a service discovery implementation that is able to adapt within transient environments.  In particular, due to the highly mobile and variable nature of the environments in which they typically operate aerospace applications can especially benefit from this type of enhanced service discovery mechanism that is capable of effectively functioning in volatile enterprise situations Typical Industry Approaches to Service Discovery Traditional industry approaches to dynamic service discovery have generally leve raged centralized registry platforms.  These models often utilize well known standards such as UDDI and ebXML. Centralized registry implementations typically provide a powerful and flexible system for storing and retrieving service metadata, and as a result, have achieved significant buy-in from and adoption within the enterprise community In most cases, the process by which a service provider is registered to a service registry is a static process: a developer or system administrator manually publishes the relevant metadata describing the service to the registry.  Similarly, if a previously published service is updated or removed, the corresponding metadata changes must be manually applied to the service registry While static, human-driven service registration processes may be acceptable within more stable environments, this approach is generally not viable in dynamic, distributed enterprises.  The presence of highly variable service providers can create an abundance of stale metadata orphaned within a centralized registry.  As services fluctuate due to loss of communications, re-classifications and other dynamic enterprise interruptions, the metadata being exposed by the service registry to service consumers for dynamic service discovery purposes remains the same unless physically updated by the appropriate party.  Based on the frequency of service provider changes and service consumers accessing the serv ice registry, manually synchronizing the registry with updated service metadata may not be feasible 


  4  Figure 3 \226 System degradation as a result of invalid service metadata As service consumers attempt to dynamically discover desired services, they are provided with outdated, invalid service information from the se rvice registry.  This has several negative consequences, as consumers may attempt to programmatically invoke services that are not available or potentially initiate more serious processing errors by kicking off a sequence of incorrectly executed business logic based on service misinformation.  As invalid service metadata is propagated and leveraged  throughout the environment, the overall effec tiveness of the system is drastically reduced.  In highly dynamic SOA enterprises, the negative effects associated w ith the presence of invalid service metadata are significantly amplified in comparison to a more stable environment Challenges to Service Discovery in Aerospace Applications In comparison to many other industries, SOA infrastructures deployed within the aerospace domain are typically subject to greater amounts of vari ability and instability than traditional SOA deployments.  This is largely due to the highly mobile and potentially harsh nature of the environments in which these services frequently operate As a result, the impacts of stale service metadata discussed above, stemming from the use of traditional registry implementations for service discovery, can be comparatively pronounced in SOA-driven aerospace applications.  Within both the federal and commercial sectors of the aerospace industr y, several difficult technical challenges exist as a result of th e lack of a service discovery implementation that is capable of effectively performing in dynamic aerospace environments.  For example, consider the scenario presented in Fi gure 3, in which a commercial airline provides in-flight br oadband internet access to its passengers.  Generally, online network connectivity is provided through satellite-based internet access systems Assuming a service oriented view of an in-flight internet capability, each individual aircra ft might act as a service consumer and dynamically di scover and invoke available internet-providing satellite serv ices, which are published to a service broker.  Due to adverse weather conditions satellite position, and other variable factors, a satellite may not be available for use or may provide unacceptably slow internet access speeds.  Using th e traditional, static service registration approach discussed above, a temporarily disabled or disadvantaged satellite might be incorrectly described as fully operational within the relevant service registry.  As a result, nearby aircrafts may inappropriately attempt to consume these non-functional satellite services and provide poor quality intern et access to its passengers Traditional service discovery implementations may also introduce several obstacles within the realm of federal aerospace.  One of these prim ary challenge areas involves communications coverage loss in aerial units.  For example 


  5 consider a unmanned aerial vehicles \(UAV\that has been tasked on a low-priority reconnaissance mission.  As the UAV travels across the specifi ed target area, it may periodically enter in and out of dead-zones during which it loses network connectivity and contact with its tasking entity.  Assuming that a UAV can be considered as a service provider within a SOA, the dynamic state of the UAV, in terms of its availability to be communicated with and retasked, will not likely be reflected in the relevant service registry if a traditional service discovery and publishing paradigm is employed.  The corresponding presence of invalid metadata describing the operating state of the UAV may hinder or even prevent the dynamic re-tasking of the unit to perform time-sensitive, higher priority work Another scenario illustrating the need to re-address service discovery patterns occurred during Joint Task Force Operation Burnt Frost, in which a non-functioning U.S National Reconnaissance Office satellite was intercepted and shot down One of t h e m a jor chal l e nges of B u rnt  Frost involved the assessment of the operation\222s effect on other nearby satellites, specifically in terms of whether or not the remnants of the destroyed satellite collided into other satellites, which could potentially cause significant damage and affect satellite operational capabilities Assuming that nearby relevant satellites were deployed within a SOA environment,  each satellite might be manually published as a service provider to a traditional registry platform.  While Burnt Frost was an important success, the level of effort required by the operation\222s team may have been lowered if the pre-existing IT infrastructure specifically the service registry, could have been leveraged to immediately determine which satellites had been affected by the operation and were still fully functional and available Previous Research on  Discovery in Volatile Environments Previously conducted research efforts attempting to address issues surrounding the enablement of an effectual dynamic service discovery implementation in a distributed SOA generally utilize P2P-driven, announcement-based mechanisms over lower level communication protocols such as Jini 226 [5 W h i l e t h ese di scovery  models have several merits, they lack significant buy-in from the enterprise community One reason for this lack of support may be because the underlying technol ogies used are typically tied to a specific technology or language, such as Java, as opposed to bei ng based on open standards Additionally, other ad-hoc techniques may be applied to resolve stale service metadata storage issues, such as enabling a service registry platform to periodically prune its invalid entries.  While this begins to address the problem, a more robust architectural pattern is needed.  Given the prevalence of centralized re gistry platforms in SOA implementations in existing deployments, a mechanism is needed that will easily complement pre-existing discovery infrastructures 4  S ERVICE P RESENCE  In order to alleviate the afor ementioned issues associated with utilizing traditional mechanisms for dynamic service discovery, the notion of service presence can be applied Service presence refers to th e real-time monitoring of a service by introducing an ubiquitous mechanism for capturing service state.  Depending on the exact nature of the relevant system\222s require ments, service presence can track different aspects and leve ls of service state.  For example, in a pervasive envi ronment composed of mobile transient services that frequently fluctuate between an up and down state, service presence might be employed exclusively from the standpoint of maintaining an omnipresent reference of whether or not services are available for use.  On the other hand, other systems may find it useful to apply service presence to track other facets of service state, such as adve rtised metadata intended to be used by service consumers for discovery purposes, or even the nature of the data content provided by a service.  The architectural pattern of servi ce presence can be leveraged in a number of different ways to provide consistently valid up-to-date service information for utilization by a dynamic service discovery solution While not typically viewed as a crucial element of a SOA\222s runtime discovery solution space, the application of presence offers a fundamentally different, proactive approach to dynamic service discovery.  The establishment of service presence as a means to capture and leverage service state in real-time for use within a dynamic service discovery implementation has significant benefits to a SOA By seamlessly improving the quality of a system\222s underlying service discovery infrastructure, a SOA\222s adaptability and capacity for self-reconfigur ation based on business events and policy is similarly enhanced.  Presence can be used as a key component in enabling effective dynamic service discovery within volatile enterprises While the benefits of utilizing service presence in a more stable enterprise, in which there is little change in service composition and availability, appear to be comparatively low, it can be used to redu ce or eliminate the need for human-in-the-loop interactions on service registries.  By effectively employing service presence, a SOA infrastructure can provide qualitatively better dynamic service discovery capabilities.  Specifically, a dynamic service discovery implementation can increase its capacity to provide more accurate, de pendable service discovery results by utilizing near perfect service information as provided by a service presence mechanism; the service metadata used by the discovery implementation is, to an extent, guaranteed to be repres entative of the real-time state of the service at the time of the discovery request 


  6  Figure 4 \226 Application of service pres ence within aerospace problem domain From a service consumer\222s standpoint, the quality of dynamic service discovery responses is transparently improved without any extra effort in terms of initiating more expressive discovery requests.  Additionally, the added reliability of the receive d discovery results precludes any further work that must be done at runtime to ensure the validity of those results, such as determining whether or not a returned service is actually available and deployed to the given endpoint Benefits of Service Presence within  Aerospace Applications Service presence can be empl oyed to help enhance the quality and capabilities of dynamic service discovery implementations, especially w ithin the context of aerospace specific applications.  Revisiting the use cases described in Section 3, service presence can, from a service consumer perspective, help increase situ ational awareness of service availability and state.  The establishment of presence enables consistently accurate information regarding dynamic elements, such as satellite availability for internet access or UAV communication conn ectivity for dynamic retasking,  to be proactively published to a service discovery provider and seamlessly leveraged by consumers.  As illustrated in Figure 4, by maintaining a near perfect knowledge of satellite, aircraft, and aerial unit state in terms of accessibility, geo-location and other dynamic metadata aspects, several difficult ch allenges hindering an aerospace SOA\222s effectiveness can be addressed Another relevant domain where the pattern of service presence can be utilized invol ves communications coverage loss in sensor networks.  Wireless, ad hoc sensor networks play a key role in enabling intelligent, ubiquitous computing models, but are typically very unpredictable in terms of their connectivity to the outside world and quality of service  Addi t i onal l y wi rel e ss sensor net w orks are l e veraged across the aerospace industry for a wide variety of uses including aircraft engine health monitoring   Especi al l y  given the recent industry trend to service enable sensor units for usage within SOA infrastru ctures, service presence can be established to manage the fluctuating on and off state of sensor resources within the context of dynamic service discovery Previous Research on Service Presence The application of service pr esence within enterprise SOA environments is a comparatively undocumented and unexplored topic.  Some research has been performed investigating the potential of utilizing lower level service discovery protocols, such as Jini and JXTA, to allow services to proactively announce their presence to a group of service peers [6].  Howeve r, these approaches are more focused on providing a high-performance mechanism to 


  7 enable the self-registration of a service and the initial advertisement of its capabilitie s, as opposed to facilitating the continual real-time mon itoring of service state Additionally, the success of these models may be limited within the enterprise domain by their inherent dependence on Java and the presence of a Java Virtual Machine \(JVM Other relevant research has presented the idea of extending Session Initiation Protocol for Instant Messaging and Presence Leveraging Extensions \(SIMPLE\messages with Web Service Description Language \(WSDL\service profile snippets to enable the exchange of WSDL defined service metadata within a presence framework [7 is id ea h as several distinct benefits, in that to an extent, it provides a mechanism for tracking service st ate in real-time.  However the proposed system may be limited by its focus on providing an integrated presence framework, as opposed to a service discovery solution; only the method by which services transmit presence information is described services must have some pr ior knowledge of each other\222s address and access protocol before being able to participate 5  I MPLEMENTATION  Experimentation was conducted to develop a prototype capable of establishing an effective service presence mechanism that could be leveraged to provide improved dynamic service discovery capabilities within dynamic SOA environments.  A key aspect of the developed prototype was to ensure that the implemen ted service presence solution could be easily integrated into a pre-existing SOA infrastructure to augment the service discovery capabilities already provided by a traditi onal, centralized service registry.  With both of these overarching requirements in mind, XMPP was selected as the underlying technology vehicle to provide the needed service presence capabilities XMPP as a Means to Establish Service Presence XMPP is an open standards, XML-inspired protocol designed for near real-time, extensible instant messaging and presence informati The t echnol ogy i s  best  characterized by its simple flexible, and lightweight architecture.  Most XMPP server implementations leverage long-lived XML stream parsing models, which can enable XMPP-driven applications to achieve strong performance and high message traffic throughput.  Additionally, a powerful set of event publishing and notification functionalities are provided through a publisher-subscriber XMPP protocol extensi  Gi ven i t s  previ ousl y  described abilities, XMPP was chosen as a more viable candidate than lower level service discovery protocols, such as Jini and JXTA, to act as the core technology used for establishing service presence.  While a lower level protocol may have provided better performance, XMPP was determined to be a better fit for use at the enterprise SOA level due to its standards-based nature and rich set of builtin presence, publisher-subscriber, and messaging functionalities Notional Architecture The notional architecture for the developed dynamic service discovery prototype can be seen in Figure 5.  In the prototype, an XMPP client proxy wrapper is instantiated for each service and service cons umer deployed within the SOA, which enables the real-time sharing of presence information and the usage of XMPP\222s publisher-subscriber capabilities.  Similarly, the pr e-existing UDDI registry is wrapped by an XMPP server in stance, which acts as a proxy to service registration and metadata update requests When a service is initially deployed to the enterprise, the service self-registers its pr esence and state information through its corresponding XMPP client proxy.  In turn, the XMPP client proxy sends the appropriate message to the XMPP server announcing the presence and advertised state metadata of the new service.  This message, as shown in Figure 4, encapsulates two different types of relevant service metadata.  The first type is metadata that will remain fairly static for comparatively long periods of time and should be published and maintained within the UDDI registry.  This may include taxonomy classification, WSDL endpoint, and other stat eful information that will most likely not change at a frequency that could be prohibitive to publishing the new relevant updated metadata value in the UDDI registry on each change For extensibility and expressivity purposes, this static metadata is represented in the service announcement message as a tModel, which is provided for  the service at design time.  The second type of metadata contained within the service announcement message is any information that is highly volatile and as a result, cannot be easily published to the underlying UDDI registry due to performance and scalability constraints This may include geo-spatial information describing the service\222s deployment location, whether or not the service is available for use at a given poi nt in time, or even certain aspects of the data content provided by the service.  As this dynamic information should not be published to the UDDI registry, a mechanism is needed that will proactively notify service consumers who are interested in actively knowing when the relevant metadata has changed, or more specifically, if the metadata has entered a particular threshold.  This event driv en capability is provided through XMPP\222s publisher-subscriber infrastructure.  The volatile service metadata specified in the service announcement message is published to a pubsub node on the XMPP server    


  8  Figure 5 \226 Notational architecture of deve loped dynamic service discovery prototype For consistency and simplicity purposes, the name of the pubsub node that is published to is the same as the service\222s specified taxonomy classification node name iq type='set' from='service-provider@serviceendpoint.com'to='pubsub.xmpp-service-discoveryprovider.com' id='publish1 pubsub xmlns='http://j abber.org/protocol/pubsub  publish node='urn:xmpp-servicediscovery:taxonomy:generic-services item service-provider-metadata  xmlns='urn:xmpp-service-discovery:serviceprovider-metadata  tModel tModelKey="uuid:5DD52389-B1A4-4fe7-B1310F8EF73DD175" xmlns:uddi='urn:uddi-org:api_v3 name>Sample Service Provider</name description xml:lang="en">Sample service provider within the XMPP Service Discovery Provider description categoryBag keyedReference tModelKey="uddi:uddi.org:wsdl:porttypereference keyName="wsdl:portType Reference keyValue="uuid:340e72e412d0-44a1-9a08-3ef8733c27dc  keyedReference tModelKey="uuid:cf4c1ad837cb-412c-ac40-0ad8b419a0e3" keyName="Sample Service Provider Taxonomy" keyValue="urn:xmppservice-discovery:taxonomy:generic-services  categoryBag  tModel  subscribable-metadata available-for-use>true</available-for-use current-location kml xmlns="http://www.opengis.net/kml/2.2 Placemark name>New York City</name  description>New York City</description Point coordinates 74.006393,40.714172,0 coordinates Point Placemark kml    current-location   subscribable-metadata service-provider-metadata  item publish pubsub 


  9 iq Figure 6 - Sample service presence and metadata announcement sent by a XMPP client wrapper on behalf of a service In addition, using XMPP\222s core built-in capabilities, a connection used for message traffic flow and presence information exchange is established and maintained between the XMPP client proxy and the XMPP server.  By deploying the XMPP client proxy and the relevant service in conjunction on the same network entity, unexpected network fluctuations and outages preventing consumer interaction with the service can be automatically detected by the XMPP server through the disruption in its connection with the corresponding XMPP client proxy.  The XMPP server can then leverage the appropriate service metadata storage facilities, as described below, to appropriately update the relevant service information to reflect the network connectivity loss and unavailable state of the service Once the XMPP server receives and validates the service announcement message, it generates and sends the appropriate SOAP web service invocation to the UDDI registry to publish the service\222s static metadata Concurrently, the XMPP server publishes the service\222s transient metadata to the appropriate pubsub node on the server, which proactively aler ts any service consumers who are subscribed to the presence of services with metadata matching that of the newly published service.  Similarly when the state of a previously published service is modified the XMPP client proxy wrapper generates and forwards the appropriate service announcement message to the XMPP server.  While the presence of the published service in terms of network connectivity can be seamlessly monitored by the XMPP client proxy and XMPP server using XMPP\222s builtin presence infrastructure, th e service has the responsibility of providing the XMPP client proxy with any other updated service metadata.  Generally, this can be accomplished through the effectual use of the Observer pattern within the service As previously mentioned, the developed dynamic service discovery prototype enables se rvice consumers to receive real-time notifications regarding services of interest through an event-based subscription mechanism.  Through their corresponding XMPP client proxy, a service consumer can subscribe to published services that meet a desired taxonomic classificati on and volatile metadata criteria.  As new, previously unknown services that meet the desired subscription criteria are published to the service discovery capability, or as previously subscribed to services are modified, updates regarding the state of published services are pushed to the service consumer in real-time.  A Listener pattern interface is provided su ch that the consumer can automatically invoke custom business logic in response to certain subscribed service events.  While this event driven capability is provided to enable service consumers to monitor a service\222s dynamic state metadata, similar functionality can be realized with a service\222s static state metadata published to the UDDI registry by leveraging UDDI\222s built-in subscription capabilities [10   Additionally, service consumers may still dynamically discover services from the UDDI registry by invoking typical request-response style discovery commands that now have the added benefit of utilizing more accurate and dependable service information Analysis of the Developed Prototype The implemented prototype offers several advantages to traditional, standalone service registry implementations  in dynamic SOA environments through the establishment of service presence.  By enabli ng different mechanisms for persisting and broadcasting se rvice state based on frequency of modification, the proposed system attempts to bring together the strengths of both XMPP\222s presence and messaging capabilities and UDDI\222s metadata storage and retrieval infrastructure.  Additionally, service consumers are transparently presented with more dependable dynamic service discovery results through the underlying establishment of service pres ence, and are also given the option of leveraging a more proactive, event-driven discovery mechanism While the implemented prototype was designed to demonstrate the viability of establishing service presence at the enterprise level, there are alternate strategies that may improve the system\222s dynamic service discovery capabilities.  For example, there may be a more robust and extensible fashion to determine which advertised service metadata is persisted through the UDDI registry or through the XMPP-provided publisher-subscriber infrastructure Instead of using an ad-hoc, pr edefined approach, the service metadata\222s modification freque ncy could be monitored in real-time and depending on the requirements of the system a policy could be developed that could dynamically promote or demote metadata elements from storage within either infrastructure.  An additional aspect of the developed prototype where there is opportunity for growth lies in the schema used to define and create subscriptions to a service\222s volatile metadata set.  Currently, an ad hoc system is used to create a basic metadata filter that is applied to select the appropriate sets of services to which to subscribe A more extensible and flexib le framework for defining the criteria on which subscription filtering is performed potentially similar to the Hibernate Criteria API, would significantly increase the usability of the developed prototype from a service consumer\222s perspective.  Similarly this subscription filtering framework could be extended to allow for the definition of custom types of subscription events.  Currently, subscription events are statically defined and are only generated for instances where a service matching the provided subscription criteria is published unpublished, or has its advertised metadata modified to equal some specified value 


  10 Applicability of Prototype within Aerospace Industry There is significant potential to apply the architectural patterns used by the implemented prototype to realize dynamic service discovery related business use cases within the aerospace domain.  For exam ple, consider the scenario of a ground station tasking a series of satellites in orbit to collect imagery data needed fo r analysis and planning.  For any given collection scenario, th ere are a series of primary satellites that are most desired for use based on their ability to optimally capture image data for the given situation potentially due to several reasons, including the satellites\222 available imaging capabilities, relative location, and line of sight.  Conversely, there are a series of secondary satellites that can also be utilized to capture the needed data but will not produce the most optimal results.  In certain situations, a primary satellite that is task ed by the ground station to provide coverage for a particular area will, during its normal orbit path, come into close proximity with the sun such that it is temporarily rendered inactive.  During this period of inactivity, a secondary, backup satellite must be tasked to temporarily provide the needed coverage until the primary satellite has traveled back into a position appropriate for utilization.  In order to realize this use case, the notificationbased, event-driven architecture developed for the prototype can be applied to enable the real-time handling of important changes in service state Specifically, the appropriate ground station service consumer could create a subscription requesting to be notified when the set of metadata describing a satellite service\222s geo-location reaches a certain threshold indicating that the satellite is located within a certain distance from the sun.  The ground station consumer could then process notification events that ar e proactively pushed to it to determine in a dynamic, real-time fashion which satellites should be utilized to best maximize overall image coverage 6  C ONCLUSION  This paper presented an approach for establishing service presence as a vehicle to enhance the dynamic service discovery capabilities of a traditional centralized service registry platform.  Through the introduction of a ubiquitous mechanism for capturing service state, an enterprise SOA deployed to a transient environment can qualitatively improve its dynamic service discovery implementation and alleviate critical issues relate d to stale service information stemming from the traditional usag e of a centralized service registry.  Additionally, this paper presented an architecture for a dynamic service discovery prototype integrating service presence and event-driven capabilities provided by XMPP, with the service metadata storage and retrieval infrastructure provided by a UDDI registry.  While the proposed application of service presence has significant potential for enhancing service discovery within dynamic environments, such as those typically encountered in the aerospace industry, more exploration and research is still needed, specifically in the realm of scalability, performance security, and governance 


  11 R EFERENCES    M  B o t t s  G Perci v al l C R eed, and J. Davi dson 223OGCSensor Web Enablement: Overview And High Level Architecture,\224 http://www.opengeospatial.org   F. Zhu, M W M u t k a, and L M  Ni  Servi ce Di scovery  in Pervasive Computing Environments IEEE Pervasive Computing vol. 4, no. 4, pp. 81-90, Oct-Dec. 2005  Ken Arnol d, "The Ji ni Archi t ect ure  Dy nam i c Servi ces i n  a Flexible Network Design Automation Conference vol 0, no. 0, pp. 157-162, 36th Annual Conference on Design Automation \(DAC'99  F. Xhafa, L. Barolli, R. Fern\341ndez, T. Daradoum is, and S Caball\351, \223Extension and evaluation of JXTA protocols for supporting reliable P2P distributed computing,\224 International Journal of Web Information Systems vol. 4 no. 1, pp. 121-135, 2008  M Pirker and M Berger 223An approach for fipa agent service discovery in mobile ad hoc environments,\224 in Workshop on Agents for Ubiquitous Computing, in conjunction with AAMS 2004 July 2004   N. Furm ent o J. Hau, W Lee, S. Newhouse and J  Darlington, \223Implementations of a Service-Oriented Architecture on top of Jini, JXTA and OGSI,\224 in Grid Computing: Second European AcrossGrids Conference AxGrids 2004 Nicosia, Cyprus , Jan. 2004, pp. 90-99  R. Liscano, A. Ghavam and M Barbeau 223Integrating Service Discovery Protocols with Presence-based Communications for Ad hoc Collaborative Scenarios,\224 in Communication Networks and Services Research Conference \(CNSR 2004 Fredericton, Canada, May 1921, 2004. pp. 357-61  Presence Protocol \(XMPP\ Core,\224 IETF RFC 3920, 2004 9 R Meij er P. Millard an d P. Sain t-An d r e XEP-0060 Publish-Subscribe Version 1.12 Specification XMPP extension specification,  Oct. 2008 http://xmpp.org/extensions/xep-0060.html   T. B e l l w ood, et al  UDDI Version 3.0.2 Specification OASIS standard, Oct. 2006 http://www.uddi.org/pubs/uddi_v3.htm   S. M e guerdi c hi an , F. Koushanfar M   Pot konjak and M   Srivastava, \223Coverage Problems in Wireless Ad-hoc Sensor Networks,\224 in  INFOCOM 2001, Twentieth Annual Joint Conference of the IEEE Computer and Communications Societies Anchorage, Alaska, 2001, vol 3, pp. 1380-1387   OASIS Reference M odel for Service Oriented Architecture 1.0 http://docs.oasis-open.org/soarm/v1.0/soa-rm.pdf    M a rgaret Arney B r ad C ohen, B r ad M e dai r y 223Im p act of Advanced Collaborative Architectures on Intelligence Analysis,\224 2004 IEEE Aerospace Conference Proceedings March 2004  W o rl d W i de W e b C onsort i u m   http://www.w3.org    Organi zat i on for t h e Advancem ent of St ruct ured Information Standards http://www.oasis-open.org   ond, \223Operations Group blazes new trail during Operation Burnt Frost,\224 Peterson Air Force Base Colorado Springs, Colorado, March 11, 2008  an, a nd D. Lilja, \223Wireless Sensor Network for Aircraft Health Monitoring,\224 Broadband Networks \(BROADNETS'04 2004, pp. 748 \226 750  B IOGRAPHIES  Eric Konieczny is a Consultant with Booz Allen Hamilton Inc., providing software development and technology consulting services to the federal government.  His skill set and focus areas include Java JEE software development Service Oriented Architecture \(SOA\, and Semantic Web technologies.  He is curren tly participating in several research and piloting activitie s, specifically involving innovative approaches to dynamic service discovery and dynamic service orchestration.  He holds a BS in Computer Engineering from Virginia Polytechnic Institute Ryan Ashcraf t is an Associate with Booz Allen Hamilton He has nine years of professional experience in delivering technology consulting services to the government. He has spent much of his career sp ecializing in Model Driven Architecture \(MDA\ systems while also evangelizing iterative software development lifecycle practices.  Mr Ashcraft is currently focusing on SOA, providing architectural direction and me ntoring on several research efforts for Defense and Intelligen ce Community clients.  He has a BS in Computer Science and Economics from Vanderbilt University David Cunningham is an Associate with Booz Allen Hamilton Inc. He has over 8 years of proven successes in the development of enterpri se systems and architecture across the Department of De fense \(DoD\ and Intelligence Community \(IC\.  Mr. Cunningham has hands-on experience leading all stages of application development efforts including requirements definition, architecture and design, development, testi ng, and production support for 


  12 enterprise systems.  He has a deep understanding of SOA methodologies and st andards and leads initiatives across the DoD and IC to ensure in teroperability across the two communities Sandeep Maripuri  is a Senior Associate with Booz Allen Hamilton, Inc.  He has over 10 years of professional experience in delivering technol ogy consulting services to the government and industry, as well as significant experience in the COTS mar ketplace.  His skill set and focus areas include applying advanced technologies, such as semantics-based technologies and grid computing to NetCentric architectures.  He is currently managing research efforts aimed at prototyping transformational, nextgeneration SOA solutions for Defense and Intelligence Community clients. He holds a BS in Mechanical Engineering, minor Computer Science, from the University of Illinois at Urbana \226 Champaign  


Action Research Study on Electronic Health Records. Information Systems Management, 2007 24\(1 16. Davis, F., Perceived Usefulness, Perceived Ease of Use, and User Acceptance of Information Technology. MIS Quarterly, 1989. 13\(3 17. Finney, S. and M. Corbett, ERP Implementation: A Compilation and Analysis of Criticial Success Factors. Business Process Management Journal 2007. 13\(3 18. Ford, E.W., N. Menachemi, and M.T. Phillips Predicting the Adoption of Electronic Health Records by Physicians: When Will Health Care be Paperless? Journal of the American Medical Informatics Association, 2006. 13\(1 19. Fui-Hoon Nah, F., K.M. Zuckweiler, and J. LeeShang Lau, ERP Implementation: Chief Information Officer's Perceptions of Critical Success Factors International Journal of Human-Computer Interaction, 2003. 16\(1 Proceedings of the 42nd Hawaii International Conference on System Sciences - 2009 8 20. Gibson, N., C. Holland, and B. Light, A Case Study of a Fast Track SAP R/3 Implementation at Guilbert. Electronic Markets, 1999. 9\(3 193 21. Grant, G.G., Strategic Alignment and Enterprise Systems Implementation: The Case of Metalco Journal of Information Technology \(Routledge Ltd 3 22. Griener, G., Electronic Health Records as a Threat to Privacy. Health Law Review, 2005 14\(1 23. Hennington, A.H. and B.D. Janz INFORMATION SYSTEMS AND HEALTHCARE XVI: PHYSICIAN ADOPTION OF ELECTRONIC MEDICAL RECORDS APPLYING THE UTAUT MODEL IN A HEALTHCARE CONTEXT. Communications of AIS, 2007. 2007\(19 24. Hillestad, R., et al., Can Electronic Medical Record Systems Transform Health Care Potential Health Benefits, Savings, And Costs Health Affairs, 2005. 24\(5 25. KLAS.  2008  [cited 2008 6/11]; Available from http://klasresearch.com 26. Kraemmerand, P., C. Moller, and H. Boer, ERP Implementation: An Integrated Process of Radical Change and Continuous Learning Production Planning &amp; Control, 2003. 14\(4 338-348 27. Lapointe, L. and S. Rivard, A MULTILEVEL MODEL OF RESISTANCE TO INFORMATION TECHNOLOGY IMPLEMENTATION1. MIS Quarterly, 2005. 29\(3 28. Ma, Q. and L. Liu, The Role of Internet SelfEfficacy in the Acceptance of Web-Based Electronic Medical Records. Journal of Organizational and End User Computing, 2005 17\(1 29. Monk, E. and B. Wagner, Concepts in Enterprise Resource Planning. 2nd ed. 2006: Thomson Course Technlogy 30. Myers, M.D. and M. Newman, The qualitative interview in IS research: Examining the craft Information and Organization, 2007. 17\(1 26 31. Nelson, R., Connecting the Providers in Your Healthcare Community: One Step at a Time Frontiers of Health Services Management, 2005 22\(2 32. Neumann, C.L., et al., Achieving success: Assessing 


32. Neumann, C.L., et al., Achieving success: Assessing the role of and building a business case for technology in healthcare / Commentaries / Reply Frontiers of Health Services Management, 1999 15\(3 33. Newman, L.A., Physician Involvement, Discipline Lead EMR Implementation at Texas Children's Clinical Data Management, 1999. 6\(1 34. Orlikowski, W.J., et al., Shaping Electronic Communication: The Metastructuring of Technology in the Context of Use. Organization Science, 1995 6\(4 35. Ovretveit, J., et al., Implementation of electronic medical records in hospitals: two case studies Health Policy, 2007. 84\(2/3 36. Pare, G., Implementing clinical information systems A multiple-case study within a US hospital. Health Services Management Research, 2002. 15\(2 37. Parr, A. and G. Shanks, A Model of ERP Project Implementation. Journal of Information Technology 2000. 15\(4 38. Poissant, L., et al., The Impact of Electronic Health Records on Time Efficiency of Physicians and Nurses: A Systematic Review. Journal of the American Medical Informatics Association, 2005 12\(5 39. Prade, N., Installing an Electronic Medical Record Physician Involvement Is Critical. Clinical Data Management, 1999. 6\(9 40. Raghupathi, W., Health Care Information Systems Association for Computing Machinery Communications of the ACM, 1997. 40\(8 41. Robey, D., J.W. Ross, and M.-C. Boudreau Learning to Implement Enterprise Systems: An Exploratory Study of the Dialectics of Change Journal of Management Information Systems, 2002 19\(1 42. Rogers, E.M., Diffusion of Innovations. 5th ed. 2003 New York: Simon &amp; Schuster 43. Sandoe, K., G. Corbitt, and R. Boykin, Enterprise Integration. 2001, New York: Wiley 44. Silverman, D.D., The Electronic Medical Record System: Health Care Marvel or Morass? Physician Executive, 1998. 24\(3 Proceedings of the 42nd Hawaii International Conference on System Sciences - 2009 9 45. Sumner, M., Risk factors in enterprise-wide/ERP projects. Journal of Information Technology Routledge, Ltd 4 46. Sun, A.Y.T., A. Yazdani, and J.D. Overend Achievement Assessment for Enterprise Resource Planning \(ERP on Critical Success Factors \(CSFs Journal of Production Economics, 2005. 98\(2 189-203 47. Swartz, N., A Prescription for Electronic Health Records. Information Management Journal, 2004 38\(4 48. Swartz, N., Electronic Health Records Could Save $81 Billion. Information Management Journal, 2005. 39\(6 49. Swartz, N., Electronic Medical Records' Risks Feared. Information Management Journal, 2005 39\(3 50. Taylor, R., et al., Promoting Health Information Technology: Is There A Case For More-Aggressive Government Action? Health Affairs, 2005. 24\(5 1234-1245 51. Trimmer, K.J., L.D. Pumphrey, and C. Wiggins ERP implementation in rural health care. Journal of Management in Medicine, 2002. 16\(2/3 52. Valerius, J.D., The Electronic Health Record: What 


52. Valerius, J.D., The Electronic Health Record: What Every Information Manager Should Know Information Management Journal, 2007. 41\(1 56-59 53. Venkatesh, V., et al., USER ACCEPTANCE OF INFORMATION TECHNOLOGY: TOWARD A UNIFIED VIEW. MIS Quarterly, 2003. 27\(3 425-478                 Proceedings of the 42nd Hawaii International Conference on System Sciences - 2009 10 pre></body></html 


STREP European Commission, 2006-2009  29] PICTURE: "Process Building Block Specification Deliverable 1.7 access 2007-04-10  30] S.A. White: Introduction to BPMN. IBM Corporation 2004  31] L. Baacke, R. Fitterer, P. Rohner: "Measuring Impacts of ICT on the Process Landscape of Public Administrations", in: Proceedings of the 3rd International Conference on e-Government \(ICEG2007 Quebec, Montreal, Canada 2007, pp. 21-30    Proceedings of the 42nd Hawaii International Conference on System Sciences - 2009 10 pre></body></html 


2 1 0 00                4 G ro w th 1  1 3 1 0 9 2 0 2 3 0 10  0 56                So ci ode m og ra ph ic c ha ra ct er is tic s 


s 5 A ge y ea rs   21 7 8 7 3 9 0 01 0 22  0 1 4 0 0 8              6 G en de r i s fe m al e2   0 2 4  0 0 6 0 0 2 0 00 0 0 3 0 10    


           7 C ur re nt ly n ot w or ki ng 2  0 0 5  0 0 8 0 04 0 04 0 0 1 0 16  0 16             8 C ur re nt ly in e du ca tio n2   0 6 


6 7  0 01 0 1 9 0 08  0 03 0 6 8 0 0 7 0 3 2           9 C ur re nt ly w or ki ng 2  0 2 8  0 03 0 18  0 1 1 0 0 3 0 64  0 00 0 1 4 0 8 9   


        10 E du ca tio n ac hi ev ed 3  3 5 7 1 5 2  0 04 0 02 0 2 1 0 1 2 0 16  0 02 0 1 6 0 13  0 0 6         11 D is pe ns ab le in co m e   


  21 0 9 2 72 7  0 14  0 0 1 0 09  0 08  0 2 0 0 00 0 0 4 0 18  0 1 6 0 0 1        In te rn et u sa ge                     


  12 A ct iv e in te rn et u sa ge 1  0 0 2 0 9 6 0 2 1 0 25  0 11  0 12  0 10  0 0 4 0 05  0 0 8 0 0 5 0 0 1 0 12        13 H ou rs o nl in e h ou rs 


rs   2 6 5 3 0 3  0 04 0 12  0 1 1 0 0 3 0 40  0 0 7 0 0 7 0 4 7 0 5 3 0 07  0 1 1 0 07       14 W illi ng ne ss to p ay 1  1 8 3 0 6 3  0 03 0 10 


10  0 07  0 08  0 0 2 0 0 4 0 0 1 0 01  0 00 0 0 5 0 14  0 04 0 05      G am e sp ec ifi c va ria bl es                      15 T en 


ur e w ee ks   2 8 2 3 5 2 0 2 6 0 31  0 0 9 0 01 0 12  0 0 4 0 02 0 0 9 0 0 9 0 07  0 02 0 13  0 08  0 0 4    16 C ro ss o ve r on o ffl in e 4  0 1 5 


5 1 1 1 0 1 9 0 11  0 13  0 18  0 2 0 0 1 4 0 0 7 0 14  0 1 1 0 0 4 0 08  0 15  0 0 5 0 01 0 07    17 S at is fa ct io n1   18 7 5 1 3 16  0 18  0 00 


00 0 44  0 52  0 1 4 0 0 3 0 02 0 07  0 0 9 0 1 4 0 10  0 08  0 0 6 0 09  0 0 1 0 13   18 C om m itm en t1  0 6 2 0 8 3 0 3 1 0 13  0 37  0 39  0 0 7 


7 0 0 6 0 02 0 03  0 0 4 0 1 3 0 14  0 17  0 0 5 0 09  0 07  0 19  0 58  S ou rc e O w n ca lc ul at io n N ot e N  1 3 89 o bs er va tio ns S ig ni fic an ce le ve ls 


ls  p  0 05 S D  S ta nd ar d de vi at io n 1 5 po in t L ik er t s ca le ra ng in g fro m 2 to 2  2 du m m y va ria bl e 3 o rd in al v ar ia bl e ra ng in g fro m v oc at io na l e du ca 


tio n to P h D 4 n um be r o f c on ta ct s   Proceedings of the 42nd Hawaii International Conference on System Sciences - 2009 10 pre></body></html 


