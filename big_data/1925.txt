html><head></head><body><pre style="word-wrap: break-word; white-space: pre-wrap;">CI RED 20th  International Conference on Electricity Distribution Prague, 8-11 June 2009 Paper 0465 RESULTS OF MONITORING OF AMR SYSTEMS IN NORWAY: ANALYSIS OF METERED DATA AND DEFINITION OF THE PERFORMANCE PARAMETERS Andrei Z. MORCH SINTEF Energy Research - Norway azrn@sintef.no Ingeborg GRAABAK SINTEF Energy Research - Norway ingeborg.graabak@sintef.no Nicolai FEILBERG SINTEF Energy Research - Norway nicolaLfeilberg@sintef.no ABSTRACT Thepaper is basedon results ofbig-scale implementation of AMR systems in Norway and a consequent monitoring of performance of those for six DSOs in Norway. The data were collectedfrom approximately 17.000 customersfor a period ofsix years. The data has been statistically analysed by using the software tool Useload, developed at SINTEF Energy Research. Based on this, the study proposes definitions of two key parameters: metering quality and metering availability, which describe performance ofAMR systems throughout the whole value chain. The studyfurther makes a comparative analysis of metering quality and metering reliability for the six participating DSOs and defines a mathematic relationship between them INTRODUCTION AND TERMINOLOGY The two recent European directives : 2004/22/EC "On measuring instruments \(MID end-use efficiency and energy services \(ESD for implementation of AMR in Europe [1,2]. The first one states metrological requirements for metering instruments while the second directive links energy metering and billing to energy saving and thus requires provision of accurate metering, timely billing based on actual consumption, and sets requirements for provision of information to the customers . It is however necessary to mention that these directives identify only some functional requirements to metering of energy consumption None of these directives refers directly to the expression AMR or its most commonly used synonyms , even though some ofthe functionality mentioned in ESD in practice can be achieved only by using AMR. Furthermore, even though the term AMR is frequently used today; there are no clear definitions ofdifferent attributes describing performance of AMR systems as, for example, quality and reliability Several terms related to automatic collection of metered data are in use today \(AMR, AMM, AMI, Smart Metering Since the existing defmitions ofthese terms are fairly vague and overlapping, and for the sake of simplicity , the present paper uses the Automatic Meter Reading \(AMR AMR this paper means a metering device along with supporting systems and infrastructure for transfer and management of metered data. AMR registers timely electricity consumption, periodically or on request, in more details than a conventional system and transfers metered data to the Distribution System Operator \(DSO market actor \(-s can have optional functionality as, for example, remote control of customers' electric loads, registration of voltage deviation and other parameters AMR VALUE CHAIN AMR is a broad technical concept, which includes a complicated infrastructure required for registration, transfer and management ofmetered data. An example ofthe AMR value chain is presented in Figure 1. The figure primarily refers to the organisation of metering and billing in the Nordic countries. At the same time the figure is intentionally generic, referring to processes and not 


intentionally generic, referring to processes and not responsible actors, so it can be applied to other countries as well Initially, electricity consumption is registered by a meter The registered data is stored in the meter and periodically transferred by using various types of communication to the Data Collection System or so-called FrontEnd system The data is further transferred to the Metered Value Database \(MVDB missing or wrong values are identified and replaced J DATA TRANSFER U DATA -J METERED A CUSTOMERVALUEMETER \(PLC, GSM, PSTN COLLECTION DATABASE INFORMATION V etc FrontEnd MVDB CIS              lIIl  Actual consumpt ion data  Figure 1 Example of AMR value chain CIRED2009 Session 6 Paper No 0465 C IRE D 20th International Conference on Electricity Distribution Prague, 8-11 June 2009 Paper 0465 In some cases, especially when it comes to small companies, MVDB is not present and the quality check is done in the FrontEnd system. After the quality check the consumption data are used in the Customer Information System \(CIS Customers can receive information about their actual consumption from the meter's display or via an Internet browser, receiving data from MVDB or CIS. In the last case, the metered data will be checked for consistency and presented with a certain time delay \(from 1 hour to weeks depending on the frequency oftransferring the data from the meter to the databases ORGANISATION OF METERING IN NORWAY The electricity system in Norway is deregulated since 1991 the liberalisation ofthe market implied a separation oftasks related to the trade and transport of electric energy. DSOs are responsible for metering ofelectricity consumption and the metered data for all metering points in their respective network even though this activity can be outsourced. Unlike other European countries, Norway has not officially discussed unbundling of the metering activities yet From the 1st of January 2005 all metering points with a yearly consumption larger than 100.000 kWh should be hourly metered. It means that approximately 4 % of all metering points and about 60 % of the whole electricity consumption in Norway are already hourly metered by AMR systems today Full-scale mandatory implementation ofAMR was actively supported by the Norwegian Electricity Industry Association \(EBL projects in Norway studied the feasibility ofSmart Metering and potential challenges related to its implementation. In the meanwhile more than ten utilities \(mostly small DSOs done full-scale voluntary implementation ofSmart Metering even though it is not mandatory yet In June 2007 the Norwegian Water Resources and Energy Directorate \(NVE so-called New Metering Technologies to all customers within 2013. The first draft of mandatory functional requirements is made public in October 2008. The draft includes La. a proposal about compulsory hourly metering for all customers DEFINING QUALITY OF METERED DATA Why the metering quality is important Today there is no a universal, clear and quantifiable defmition ofmetering quality, which should be provided by AMR systems. The electricity metering itself e.g registration ofconsumed electricity by the primary meter is clearly regulated by several legal acts on national [3] and 


clearly regulated by several legal acts on national [3] and European levels [1]. These requirements however are not applicable to the rest of the metering value chain from the meter's external interface to the data storage \(-s used for billing the customer. The experience shows that considerable errors orland data losses occur during transfer of metered data from the terminal to the data collection system. Defming the metering quality is beneficial for several market actors It allows Authorities to set concrete and clearly quantifiable requirements to the whole metering value chain It assists DSOs in development of technical requirements for purchasing of AMR equipment, its installation and commissioning in order to ensure that performance of the equipment corresponds to the technical requirements It contributes to overall improvement of billing and settlements procedures, ensuring that Final Customers are billed correctly Defining the metering quality The following defmitions are based on collection and monitoring of metered data provided by AMR systems at several DSO in Norway and includes approximately 17.000 customers during a period over 6 years [4]. The experience shows that it is necessary to differentiate between requirements for metering quality and availability of metered data. The proposed defmition of metering quality consists of the two following parts I percentual deviation between the metered energy volume and the actual energy volume within the customer's settlement period II minus the percentual number of missing or erroneous metered values within the customer's settlement period Where by erroneous is meant values, deviating from the true values at the given metering point. Metering availability for a group of customers during a given week \(168 hours therefore defmed as T =\( UKM 100 TKM*168 Where T - Metering availability UKM - Total number of metered error-free values excepting estimatedvalues TKM - Total number ofmetered customers for the given week The metering quality relates to the traditional legal requirements to the metering instruments [1,3] based on metered energy volumes. On the other hand, the metering availability defmition relates directly to AMR systems and therefore is easier to identify. Error ofa metered electricity volume depends also upon availability ofmetered data, but the function will additionally include several other parameters. For example: fmal customers, having direct electric heating consume much more electricity during winter time, thus missing and erroneous values during the CIRED2009 Session 6 Paper No 0465 C IRE D 20th International Conference on Electricity Distribution Prague, 8-11 June 2009 Paper 0465 winter time will cause much higher error in the registered electricity volume, compared to the same missing or erroneous values during summer. Furthermore, availability ofmetered data does not initially say whether these data are correct or wrong EXPERIENCES FROM MONITORING 17.000 HOURLY METERED CUSTOMERS Customers with annual consum tion over 100.000 kWh 1 99.17 86.25 2 99.96 99.90 3 99.03 86.00 


3 99.03 86.00 6 99.92 97.80 Avera e 99.52 92.49 Customers with annual consumption less than 100.000 kWh 87.44 98.90 67.41 98.85 2.56 49.29 99.92 97.02 99.13 99.98 97.66 4 6 2 3 Avera e Weighted avera e: 97.52 82.70 Weighted avera e: 99.64 94.54  due to changes in network configuration Since the number of Final Customers is different at these DSOs, the study has also calculated average weighted percentages for availability ofmetered data on weekly basis and number of error-free customers. All the DSOs use combination ofPLC \(high voltage the metered data DEFINITION OF FUNCTION BETWEEN AVAILABILITY OF METERED DATA AND SHARE OF ERROR-FREE CUSTOMERS There is a clear relation between weekly availability of metered data for a given period of time, and a share of customers that are metered without errors. It is likely that different customers will be affected by poor availability of metered data and after a longer period of time the share of the customers with erroneous data will increase. The reason for this is that probability of errors for a given customer depends upon the time period during which the random errors may occur. If only one week is assessed, the percentage of affected customers may be less than availability of metered data, if for instance the errors were related to a given sub station. The function between availability ofmetered data \(which is fairly easy to register and share oferror-free customers is very interesting for the practical purposes and therefore has been estimated in the study [5]. The function has been estimated as an average registered availability of metered data and percentage of Description of the analysis The study monitored collection of metered data from six different DSOs in Norway. The monitoring results are kept anonymous and the DSOs are marked by numbers from one to six. Three DSOs have more than 60 thousand customers two companies have 15 and 60 thousand of customers and the last one has less than 15 thousand customers. Since hourly metering of customers with annual consumption more than 100.000 kWh is mandatory in Norway, it was identified two different clusters of customers Customers with consumption over 100.000 kWh: the hourly metering is mandatory and operated by DSOs on a regular basis Customers with consumption less than 100.000 kWh the hourly metering is voluntary implemented and operated by DSOs as trials The analysis is based on collection of metered data from week 1 to week 40 in 2006. The participating DSOs submitted the metered data weekly to SINTEF Energy 


submitted the metered data weekly to SINTEF Energy Research as so-called GS2 files. Further the data were analysed by using Useload software tool \(see description of the Useload in the next section Normally in order to maintain the overall quality ofmetered data, DSOs check its consistency, identify the missing or false data and replace those with estimated values Therefore the analysis of availability of metered data distinguishes between the real metered values and estimated values. All the participating DSOs, except one, indicate which values are estimated in the data files Description of analysis tool - Useload Useload is a software tool for simulation and analysis of metered data and load profiles. The program is based on given load curves and end-use load curves from national load research projects and applies statistical methods climatic dependencies and the diversification in the load among different individual customers. SINTEF Energy Research has developed the model, in cooperation with Electricite de France \(FR SE FI Electricity Association \(UK DK Results for monitoring metering Quality Table 1 summarizes the estimated availability of metered data for two groups of customers: those with annual consumption over and less than 100.000 kWh. Four DSOs provided data for the first group and five DSOs for the second [5 CIRED2009 Session 6 Paper No 0465 CI RED 20th International Conference on Electricity Distribution Prague, 8-11 June 2009 Paper 0465 error-free customers during a period of 6 months. The values are based on data, which were collected from DSOs The estimations are based both for customers with consumption over and less than 100.000 kWh for five DSOs. The values were transferred into MS Excel, where the function curve was estimated . The function is identified as a so-called polynomial with a very high score \(R2 0.9966 between the given points. The data are presented in a tabular form in Table 2 Table 2 Relationship between average availability of metered data and number of error-free customers for a 6 months period [5 Average Customers Average Customers availa- with error- availa- with bility of free bilityof error-free metered metered metered metered data pro data [%] data pro data week [%] week 99,00 88,5 99,91 98,7 99,10 89,5 99,92 98,8 99,20 90,6 99,93 99,0 99,30 91,7 99,94 99,1 99,40 92,8 99,95 99,2 99,50 93,9 99,96 99,3 99,60 95,1 99,97 99,4 99,70 96,2 99,98 99,6 99,80 97,4 99,99 99,7 99,90 98,6 100,00 100 should be set at least at 99,0 % in average during a 26 weeks period. Transferring this data to a period of26 week implementation of 99,0 % requirement will mean that metered values will be missing at 11,5 % of customers Implementation ofthe 99,0 % requirement will mean much tougher requirements to AMR systems, compared to the present situation, when there are no any clear requirements at all. According to the present regulation in Norway, the missing values should be stipulated and the error should be settled between the DSO and Electricity Supplier one week after communication with the meter is restored It is necessary to mention that having errors in metered data may have very different consequences depending of the 


customer type, electricity pricing formula and distribution network tariffs . They can be fairly insignificant for household customers with fixed electricity price and crucial for industrial customers, especially if the Final Customer pays network tariffs with max capacity charge. This capacity charge can be tens ofeuros pro kWh/h, and in case of missing metered values will be estimated by the DSO resulting in very unfortunate consequences for the customer ACKNOWLEDGEMENTS This paper is based on the results and findings from Market-based Demand Response" research project. The project is partially financed by the Research Council of Norway, Statnett SF and several electric utilities REFERENCES I] Directive 2004/22/EC ofthe European Parliament and of the Council of 5 April 2006 on measuring instruments Official Journal ofthe European Union Initially a 3 % of possible error in metered electricity volume was considered, since this figure corresponds to the requirements from Norwegian Office of Weight and Measures \(Justervesenet  can be therefore reasonably transferred to the whole metering chain. Based on statistical analysis of the monitored metered data for household customers, it appears that if DSO wants to ensure that I % of customers will receive less than 3 % error in their energy settlement, the availability ofmetered data should be at least 99,9 % \(for a detailed explanation see [4 even though it is usually possible to achieve and maintain 100 % availability of metered data, it becomes very costly for a DSO. Therefore it is necessary to define a reasonable error level for availability of metered data, which is adequate and acceptable both with regard to DSOs expenses and number of the customers that may have wrong billing Based on monitoring of metering quality in several years SINTEF Energy Research has proposed that a requirement ofavailability ofmetered data for hourly metered customers CONCLUSION: DEFINITION REASONABLE ERROR LEVEL OF A [2] Directive 2006/32/EC ofthe European Parliament and ofthe Council of5 April 2006 on energy end-use efficiency and energy services and repealing Council Directive 93/76/EEC. Official Journal ofthe European Union 3] FOR-2004-1O-22-1398 Regulations regarding requirement about electric meters in use. \(in Norwegian www.lovdata.no 4] A.Z. Morch, N. Feilberg, I. Graabak, 2006, Data format and quality requirements in the meter value chain in Norwegian Energiforskning AS, Trondheim, Norway, 35-37 5] N. Feilberg and I. Graabak 2007, Availability ofMeter Values in AMR-systems \(in Norwegian TR A6515, SINTEF Energiforskning AS, Trondheim Norway, 28-35 CIRED2009 Session 6 Paper No 0465 pre></body></html 


collected from resource monitors installed in individual Node Managers. Like the Execution Manager, this daemon will run on primary microservers with direct connections to the servers  Repository Manager, which is a daemon that maintains a collection of component meta-data and binary implementations. Individual Node Managers may contact nearby repositories to download binaries for components they are tasked to deploy, and MACRO agents may query the repository for information about components available for deployment An instance of the Repository Manager will run on the primary server for use by the MACRO server agents and server deployments. Another instance will reside on primary microservers with direct connections to SEAMONSTER server cluster for use by nodes in the field Applying MACRO to Address SEAMONSTER Challenges The remainder of this section explains how MACRO applies and enhances the CIAO and DAnCE middleware described above addresses the sensor web challenges identified in Section 2 Addressing Challenge 1: MACRO's Action/Effector Framework-MACRO's Action/Effector framework has been developed to provide a standardized mechanism that has two primary benefits for implementing short-lived, lightweight "actions," as opposed to on-going "tasks" implemented as components. First, it allows the MACRO agents with their SAPOP planning service and plan schemas to use a common vocabulary for describing preconditions, dependencies, and effects of individual actions, as well as resource requirements of the associated action implementations. Second, it provides a clear separation of concerns between invoking the action and the business logic of the action, similar to that of components, i. e., it provides a mechanism that agents can use to execute a set ofactions without knowledge at compile or link time of the impl{~mentation of those actions Action meta-data. Listing 1 describes the Action_Info data structure which allows an action to provide meta-data about itself to the system/agents. This meta-data describes properties \(e.g., a unique identifier, argument identifiers and types, return value identifier and type e.g CPU and memory requirements, hardware/sensor resources and component or object references implemented as a CORBA valuetype, which will leave open the possibility for derivation though inheritance should additional fields need to be added later without breaking backwards compatibility with the interfaces described below 6 struct Property string name any value  typedef sequence&lt;Property&gt; Properti es valuetype Action _Info public string id public Properties resource_requirements public Properties init_arguments public Properties exec_arguments public Properties reference_requirements Listing 1. Action Meta-Data IDL local interface Action readonly attribute Action_Info info void initialize \(in ObjSeq references void execute \(in any arguments out any resul t void release  Listing 2. Action Interface Action interface. Listing 2 describes the interface for the Action itself. This interface provides a vehicle for provision of meta-data, and operations to manage the full lifecycle of an Action. To provide lightweight actions with mini 


cle of an Action. To provide lightweight actions with minimal overhead, this interface is specified as a local interface which instructs the CORBA IDL compiler to omit generation of code that allows for remote invocation of the object, creating a locality constrained object. This design substantially reduces overhead, as shown in Section 4. While this locality constraint prevents MACRO agents from directly accessing Action objects, the framework provides a mechanism which does not constrain their use by those agents. This framework allows MACRO agents to access and execute actions while hiding the complexities of action deployment and execution through the Effector interface described in Section 3 The Action attribute inf0 allows the Action implementation to self-describe its meta-data, ultimately providing information to the agents about its requirements and capabilities. This information is also used by an implementation of the Effector interface to determine which object references and arguments are to be passed to the operations contained in this Action interface These operations allow the Effector to manage the lifecycle of Actions. The ini tialize operation is invoked upon creation of the Action, providing it with object references to extern "C Action_ptr create_action \(void  Listing 3. Action Factory interface Effector Action_Info load_action \(in string library_name in string factory _name void unload_action \(in string id Action_Info query_action \(in string id StringSeq list_actions void execute_action \(in string id in any arguments out any result  Listing 4. Effector Interface deployed components and objects that the business logic may need in order to successfully execute. The execute operation implements the business logic of the Action. This operation accepts two parameters, both of type CORBA Any which is a generic container which may contain any valid CORBA data type, allowing the Actions to accept arguments or provide results in a flexible, but standardized, manner. Finally, the release operation informs the Action that it is about to be deallocated so that it may release any resources that it holds Each Action implementation provides a factory method \(an example ofwhich is found in Listing 3 fector to construct instances of the action at run-time. Similar to the method used by the Onc specification [17] to construct component instances, this factory method is declared as exte rn \\ \\ C/ / , which will allow the Effector interface to load actions at run-time using methods similar to dlopen and dlsym Effector interface. Listing 4 describes the Effector interface, which is used by the MACRO agents to load and execute actions. This interface is provided as either a facet or a supported interface on a component. It is used by MACRO agents to execute plans/schemas and interact with the components providing abstractions of the available hardware, as shown in Figure 5. For example, the load_action method may be used by an agent or other Effector client to load a new action from a named shared library that contains a provided factory symbol. The operations on the Effector interface allow MACRO agents to \(1 installed in the Effector, \(2 7 component EffectorProvider provides Effector effect attribute Action_Factories factories  


 Listing 5. Example Component with Effector been loaded and query their meta-data, and \(3 Effector to execute an Action execute_action Figure 5. The Action/Effector Framework Addressing Challenge 2: Providing Flexible Agent Provisioning-The Action/Effector framework described in Section 3 provides a mechanism through which MACRO agent implementations may be dynamically provisioned at deployment time with Action objects apropos to the particular hardware configuration, including its suite ofavailable sensors, on which the agent resides. Component interface descriptions similar to standard CORBA object descriptions, may have attributes of arbitrary types. As seen in Listing 5, the example component has an attribute of type Action_Factories which is a sequence of structures containing a pair of string member variables indicating a library name and factory symbol name Component deployments are described via XML files that capture information about component configuration, topology, and connections. These XML descriptors may be used to populate the value of this attribute with desired library name/factory name pairs at deployment time. Moreover, through the mechanism used to describe the implementation dependencies of components \(i.e., shared libraries implementing a component that shared libraries implementing Actions also be downloaded from the RepositoryManager, as described in Section 3. This approach allows the component providing the Effector interface to invoke the load_act ion operation for each library/entrypoint pair provided during activation Addressing Challenge 3: Reducing Middleware FootprintInitial efforts to run MACRO \(and the associated middleware infrastructure ures due to the large footprint of the default configuration of CIAO and the limited memory capacity of the SEAMONTable 1. Results of Initial Footprint Optimization Impact ofAction/Effector Framework on MACRO Execution Overhead Initial Footprint Reduction The results of the efforts described in Section 3 are summarized in Table 4. The ExecutionManager and MACRO's Action/Effector framework \(described in 3 stantially reduces footprint overhead compared to using CIAO's complete component implementations to encapsulate SEAMONSTER tasks and actions. Table 4 summarizes the Default I Optimized I Savings ExecutionManager 12,203 KB 11,136 KB 1,067 KB NodeManager 13,865 KB 12,623 KB 1,242 KB NodeApplication 12,710 KB 11,460 KB 1,250 KB Null Component 670KB 605KB 65KB Runtime results were obtained using a primary microserver described in Section 2. This microserver consists of a 266 Mhz ARM processor with 64 MB of built-in RAM. The operating system is a derivative of the Debian Sarge running GNU/Linux kernel 2.4.26, which was provided by the manufacturer of the microserver \(Technologic Systems NodeManager \(which were described in Section 3 NodeApp1 i cat i on \(which is a component server spawned during the deployment process tion in footprint of f reduced the footprint of node-local infrastructure \(i.e., the NodeManager and NodeApplication to 24 MB Executable footprint sizes were determined by statically linking all required symbols from the underlying middleware into the final binary, ensuring that all necessary symbols from the underlying middleware are present, while not including any unnecessary symbols. For the purposes of calculating the size of a component, we assume that any symbols necessary from the underlying middleware were already present 


essary from the underlying middleware were already present in the component server, and thus the calculation of the component footprint sizes was obtained by summing the size of the shared libraries that implement the component. This size includes CORBA stubs and skeletons, the servant \(the component specific portions of the container business logic Although this reduction allowed us to deploy and operate a prototype MACRO-based application on the SEAMONSTER hardware, this deployment consumed nearly all available physical memory on the primary microservers, and resulted in frequent thrashing on the memory-constrained adjunct microservers. As discussed in Section 6, additional work is needed to further reduce the footprint of the infrastructure and component implementations I Entity STER nodes. To reduce memory footprint, the initial application ofthe deployment infrastructure to SEAMONSTER field hardware included two straightforward modifications  Leverage mechanisms present in underlying middleware. The build system of the middleware underpinning of CIAO provides configuration settings that allow one to strip unneeded features from compiled binaries, which can provide also provide substantial footprint savings in resourceconstrained environments Hardware/Software Testbed and Experiment Methodology The static footprint results were obtained via a cross-compiler toolchain used to build software for the SEAMONSTER hardware. This toolchain consists of g++ 4.1.2 and ld 2.17, which ar{~ hosted on Debian Linux 4.0 and target arm-linux-gnu. The CIAO middleware platform was version 0.6.6 4. EXPERIMENTAL RESULTS While these steps are relatively straightforward and not particularly novel, Section 4 shows that they were sufficient to reduce the static footprint of the middleware stack to a level that allowed successful use of the MACRO platform on SEAMONSTER hardware. Section 6 discusses the approach we are undertaking to further reduce middleware footprint/overhead This section presents the results of experiments that evaluate 1 for lightweight, hardware-dependent actions and \(2 duction ofmiddleware footprint described in Section 3. These results show that the efforts described reduced the total static footprint of MACRO and its underlying middleware stack They also show the reduction in overhead achieved by implementing short-lived actions in the Action/Effector framework discussed in Section 3, rather than using heavier-weight components  Leverage compiler optimizations. Most compilers have the ability to provide space-saving optimizations to most code, which an experienced programmer can easily leverage to provide footprint reduction For the initial baseline results, this platform was compiled using default options, with debugging symbols disabled and the compiler optimization level at 03, which instructs the g++ compiler to optimize for speed. For the results based on our optimization efforts, the middleware was compiled using built-in methods for reducing footprint and the compiler was instructed to optimize using 0 s, which instructs the 9 compiler to optimize for space. In all cases, we used the GNU s t rip utility to remove any debugging symbols from the compiled binaries to ensure the footprint metrics just measured the size of the executables 8 vices offered by CORBA and CCM. PitM also limits communication between components to message-passing, lacking the rich interface-based communication possible with CIAO The SOFtware Architectures \(SOFA  based on Architecture Definition Languages, which view ap 


based on Architecture Definition Languages, which view applications as hierarchies ofconnected components. This component model provides capability for run-time modifications that may be lighter weight than CIAO components, but which must be described at design time[21], thereby limiting flexibility compared with MACRO Component 623 KB Action Implementation 23 KB Effector 123 KB I Implementation Type Size Table 2. Action/Effector Footprint differences in footprint size between these two approaches When implemented as a component, the action has a footprint of over half a megabyte, substantially limiting the number of action implementations that could simultaneously be deployed to a single resource-limited field node When the action was implemented in MACRO's new Action/Effector framework, however, its footprint was only 23 KB, which is a fraction of the memory required by an executing component. Moreover, an implementation of the Effector framework as a component facet adds only 123 KB to the footprint ofan existing MACRO agent component, one of which is required per node I Deployment Latency ~ Average Time \(Seconds Component 218.96 Action/Effector 3.23 Table 3. Action/Effector Footprint A more important result, moreover, is the deployment latency experienced by a component compared against the latency experienced by an Action implementation. In this case, deployment latency refers to the amount of time from the moment deployment is started \(e.g. load_action in the Action/Effector framework the component or Action is ready for invocation. As shown in Table 4, which documents the average of twenty runs of each, the difference in deployment latency is dramatic, with component deployment requiring over three minutes while an Action is deployed in only three seconds. These results do not include the time required to download the component implementation from the Reposi toryManager, which could be substantial over a bandwidth-limited wireless connection, but is only required the first time a component is used on the microserver 5. RELATED WORK This section compares our work on MACRO with related work Resource-Constrained Component Models. Programming in the Many \(PitM  the domain of distributed, highly mobile, severely resource constrained embedded systems. While this component model meets the stringent footprint requirements of SEAMONSTER, it lacks the interoperability and rich ecosystem of serDecision-theoretic planning and scheduling. The planning service used by MACRO server-based agents - SA-POP - is a decision-theoretic planner allowing uncertainty both in environmental conditions and action outcome, like C-SHOP [22 that does so with hierarchical planning and Drips [23] that produces conditional plans. However, to enable planning with resource constraints, such as those ofsensor webs, many have chosen to separate the planning and scheduling/resource aspects of the problem \(e.g., [24] and [25 works well when the resource/time constraints are relatively loose or there are relatively few alternatives in the planning process that could use fewer or different resources. However, with tight resource constraints, as are often present in sensor webs, others have chosen to integrate planning and scheduling as SA-POP does. For example, IxTeT [26] uses partial-order planning like SA-POP and allows interleaving resource conflict resolution with the planning process, but does not perform decision-theoretic planning and incorporates scheduling/timing information directly into the action representation 


representation Plan schemas for resource-constrained planning and scheduling. The MACRO field agents use plan schemas \(also called template plans or skeletal plans  been used in other situations where complete planning was too time consuming for appropriate responses. MACRO's plan schemas have been enhanced with scheduling information, such as in [28], and generated through partial order planning techniques, like [29]. The combination of MACRO server-based agents using the SA-POP planning/scheduling service with generated schemas used by MACRO field agents provides a uniquely flexible solution for autonomy in sensor webs with a server cluster connected to DRE field systems 6. CONCLUDING REMARKS The SEAMONSTER project exhibits distributed deployment infrastructure challenges common to computationally constrained field environments in adaptive sensor webs, including standardized execution of low-level hardware-dependent actions and on-going data tasks, automated provisioning of agents for heterogeneous field hardware, and minimizing deployment infrastructure overhead in general. This paper presents the results of applying the MACRO platform with extensions designed to address these deployment challenges in SEAMONSTER. In particular, the Action/Effector framework addressed key deployment challenges as follows 9  Separate concerns by creating a unified mechanism for deploying and executing brief, low-level actions  Substantially reduce footprint of individual actions versus implementation as a component  Improve deployment latency by two orders of magnitude over a similar component implementation The remainder of this section summarizes lessons learned from applying MACRO to SEAMONSTER and outlines our future work optimizing MACRO's QoS-enabled component middleware infrastructure Lessons Learned The lessons learned from our extensions to the MACRO distributed deployment infrastructure include  Feasible integration of non-component entities. The Effector/Action framework has demonstrated the feasibility of integrating non-component entities into component assemblies where footprint, latency, or lifetime rules out the use of a full component  Unitary Effector may limit framework flexibility. A unitary Effector \(i. e., one which is incapable of operating in a hierarchical manner with other effectors in dynamic sensor web environments. Extending the Effector interface to support hierarchical and peer behavior with other Effectors deployed to the same node\(s advantages: \(1 lary as nearby nodes and devices power up/down in response to changing power availability and \(2 of"meta-Actions," which are ordered compositions of one or more concrete actions across one or more Effectors  A synchronous Effector interface may cause unacceptable delays. If an Action hangs or takes longer to complete than expected, the present synchronous interface will also cause the agent plan execution code to hang. This behavior is undesirable, however, since it may cause the agent to miss other important deadlines in its current plan of execution. Asynchronous Effector and Action interfaces can alleviate this concern  CIAO footprint is too large for resource constrained systems. The stringent resource constraints \(i.e., 32-64 MB RAM and processors operating at 266 MHz or less MONSTER field hardware were a significant hurdle due to the overhead \(especially memory footprint nents and deployment infrastructure. Previous CIAO developments focused on environments with significantly greater resources, e.g., nlore than a gigabyte of RAM and processors 


resources, e.g., nlore than a gigabyte of RAM and processors faster than two gigahertz. While CIAO is operational on the SEAMONSTER hardware, as indicated in Section 4, further work is needed to make the middleware efficient under tight resource constraints 10  DaNCE footprint and deployment latency is too high for resource constrained systems. As shown in Section 4, the largest consumers ofmemory in the middleware stack are the DAnCE daemons, in particular the ExecutionManager and NodeManager. The footprint of the newer deployment and configuration aspects of the middleware has been largely overlooked until now and needs to be addressed. Perhaps more importantly is the latency experienced during deployment, which has been observed to take as long as several minutes on SEAMONSTER hardware Future Work To further reduce the overhead of CIAO components and the DAnCE deployment infrastructure, we are working on multiple approaches, including context-aware generative techniques to prune unnecessary code/features  Generative component specialization. The CCM specification includes several features and capabilities in the component definition that may not be necessary in all situations such as generic navigation, introspection, and security features, which contribute to footprint bloat. Generative techniques could be used to prune these features on a case-by-case basis  Generative container specialization. The CIAO container is intended to be a generic solution providing a large feature set to satisfy user needs in most situations. As such it contains features and services that may not be necessary in specific deployments, and could be pruned by generating scenario-specific container implementations  Improve separation of concerns in DAnCE. The current DAnCE implementation tangles concerns of deployment and configuration with the run-time elements of the component server in the NodeApplication. This entanglement increases footprint by replicating large swathes of deployment logic in each component server. Careful analysis and refactoring is therefore needed to substantially decrease footprint and deployment latency ACE, TAO, CIAO, DAnCE, RACE, and SA-POP are opensource software that can be downloaded from download dre.vanderbilt.edu REFERENCES 1] K. Delin and S. Jackson, "Sensor Web for In Situ Exploration of Gaseous Biosignatures," 2000 2] P. Lardieri, J. Balasubramanian, D. C. Schmidt G. Thaker, A. Gokhale, and T. Damiano, "A Multi-layered Resource Management Framework for Dynamic Resource Management in Enterprise DRE Systems," Journal ofSystems and Software: Special Issue on Dynamic Resource Management in Distributed Real-time Systems, vol. 80, no. 7, pp 984-996, July 2007 3] O. Brown and P. Eremenko, "Fractionated Space Architectures: A Vision for Responsive Space," in Proceedings ofthe 4th Responsive Space Conference Los Angeles, CA: American Institute of Aeronautics &amp Astronautics, Apr. 2006 4] D. Suri, A. Howell, D. C. Schmidt, G. Biswas J. Kinnebrew, W. Otte, and N. Shankaran, "A Multi-agent Architecture for Smart Sensing in the NASA Sensor Web," in Proceedings ofthe 2007 IEEE Aerospace Conference, Big Sky, Montana, Mar. 2007 5] D. R. Fatland, M. 1. Heavner, E. Hood, and C. Connor The SEAMONSTER Sensor Web: Lessons and Opportunities after One Year," AGU Fall Meeting Abstracts, pp. A3+, Dec. 2007 6] N. Wang, D. C. Schmidt, A. Gokhale, C. Rodrigues 


6] N. Wang, D. C. Schmidt, A. Gokhale, C. Rodrigues B. Natarajan, 1. P. Loyall, R. E. Schantz, and C. D. Gill QoS-enabled Middleware," in Middleware for Communications, Q. Mahmoud, Ed. New York Wiley and Sons, 2004, pp. 131-162 7] Light Weight CORBA Component Model Revised Submission, OMG Document realtime/03-05-05 ed Object Management Group, May 2003 8] Deployment and Configuration Adopted Submission OMG Document mars/03-05-08 ed., Object Management Group, July 2003 9] 1. S. Kinnebrew, W. R. Otte, N. Shankaran, G. Biswas and D. C. Schmidt, "Intelligent Resource Management and Dynamic Adaptation in a Distributed Real-time and Embedded Sensor Web System," Vanderbilt University, Tech. Rep. ISIS-08-906, 2008 10] W. R. Otte, 1. S. Kinnebrew, D. C. Schmidt, G. Biswas and D. Suri, "Application of Middleware and Agent Technologies to a Representative Sensor Network," in Proceedings ofthe Eighth Annual NASA Earth Science Technology Conference, University of Maryland, June 2008 11] J. S. Kinnebrew, A. Gupta, N. Shankaran, G. Biswas and D. C. Schmidt, "Decision-Theoretic Planner with Dynamic Component Reconfiguration for Distributed Real-time Applications," in The 8th International Symposium on Autonomous Decentralized Systems ISADS 2007 12] N. Shankaran, D. C. Schmidt, Y. Chen X. Koutsoukous, and C. Lu, "The Design and Performance ofConfigurable Component Middleware for End-to-End Adaptation of Distributed Real-time Embedded Systems," in Proc. ofthe 10th IEEE International Symposium on ObjectlComponentlService-oriented Real-time Distributed Computing \(ISORC 2007 Island, Greece, May 2007 13] CORBA Components v4.0, OMG Document forma1l2006-04-01 ed., Object Management Group Apr. 2006 11 14] The Common Object Request Broker: Architecture and Specification, 3.0.2 ed., Object Management Group Dec. 2002 15] N. Wang, K. Balasubramanian, and C. Gill, "Towards a real-time corba component model," in OMG Workshop On Embedded &amp; Real-time Distributed Object Systems Washington, D.C.: Object Management Group, July 2002 16] Lightweight CCM FTF Convenience Document ptc/04-06-10 ed., Object Management Group, June 2004 17] Deployment and Configuration ofComponent-based Distributed Applications, v4.0, Document forma1l2006-04-02 ed., OMG, Apr. 2006 18] G. Deng, J. Balasubramanian, W. Otte, D. C. Schmidt and A. Gokhale, "DAnCE: A QoS-enabled Component Deployment and Configuration Engine," in Proceedings ofthe 3rd Working Conference on Component Deployment \(CD 2005 Nov. 2005, pp. 67-82 19] M. Mikic-Rakic and N. Medvidovic Architecture-level support for software component deployment in resource constrained environments," in CD '02: Proceedings ofthe IFIPIACM Working Conference on Component Deployment. London UK: Springer-Verlag, 2002, pp. 31-50 20] T. Kalibera and P. Tuma, "Distributed component system based on architecture description: The sofa experience," in On the Move to Meaningful Internet Systems, 2002 - DOAICoopISIODBASE 2002 Confederated International Conferences DOA, CoopIS 


Confederated International Conferences DOA, CoopIS and ODBASE 2002. London, UK: Springer-Verlag 2002, pp. 981-994 21] P. Hnetynka and F. Plasil, "Dynamic reconfiguration and access to services in hierarchical component models," in CBSE, 2006, pp. 352-359 22] A. Bouguerra and L. Karlsson, "Hierarchical Task Planning Under Uncertainty," 3rd Italian Workshop on Planning and Scheduling \(AI* IA 2004 2004 23] P. Haddawy, A. Doan, and R. Goodwin, "Efficient Decision-Theoretic Planning: Techniques and Empirical Analysis," Proceedings ofthe Eleventh Conference on Uncertainty in Artificial Intelligence 1995 24] B. Srivastava and S. Kambhampati, "Scaling up Planning by Teasing Out Resource Scheduling," Proc European Conference on Planning, 1999 25] A. EI-Kholy and B. Richards, "Temporal and Resource Reasoning in Planning: The parcPLAN Approach Proceedings ofthe 12th European Conference on Artificial Intelligence \(ECAI-96 26] P. Laborie and M. Ghallab, "Planning with Sharable Resource C~onstraints," Proc. 14th Int. Joint Conf. on AI, pp. 1643-1649,1995 27] P. Friedland and Y. Iwasaki, "The concept and implementation of skeletal plans," Journal of Automated Reasoning, vol. 1, no. 2, pp. 161-208, 1985 28] S. Miksch, Y. Shahar, and P. Johnson, "Asbru: A Task-Specific, Intention-Based, and Time-Oriented Language for Representing Skeletal Plans," in Proceedings ofthe 7th Workshop on Knowledge Engineering: Methods &amp; Languages \(KEML-97 1997, pp. 9-19 29] L. Ihrig and S. Kambhampati, "Design and Implementation of a Replay Framework Based on a Partial Order Planner," in Proceedings ofthe National Conference on Artificial Intelligence, 1996, pp 849-854 William R. Otte is a Ph.D. student in the Department of Electrical Engineering and Computer Science \(EECS Vanderbilt University. His research focuses on middleware for distributed realtime and embedded \(ORE is currently involved in several aspects of developing a Deployment and Configuration Engine \(DAnCE involves investigation of techniques for run- time planning and adaptation for component based applications as well as specification and enforcement of application quality of service and fault tolerance requirements. William graduated with a B.S. in Computer Science from Vanderbilt University Nashville TN in 2005 Deputy Office Director and a Program Manager at DARPAs Information Technology Office \(ITO ploitation Office \(IXO fort on middleware and model-driven development technologies for enterprise ORE systems. In addition to his academic research and government service, Dr. Schmidt has over fifteen years of experience researching and developing ACE TAO, CIAO, and CoSMIC, which are widely used, opensource middleware frameworks and model-driven development tools that contain a rich set of components and domainspecific languages that implement patterns and product-line architectures for mission-critical enterprise ORE systems Gautam Biswas is a Professor of Computer Science and Computer Engineering as well as a Senior Research Scientist at the Institute for Software Integrated Systems \(ISIS versity. His primary areas of research 


is in modeling, simulation, monitoring and control of complex systems as well as planning, scheduling, and resource allocation algorithms in manufacturing systems and distributed real-time environments. Dr. Biswas has published over 300 technical papers and is well-recognized for his projects in diagnosis, faultadaptive control, and learning environments. These projects have been supported with funding from DARPA, NASA NSF, AFOSR, and the Department of Education. He has served as an associate editor for a number ofjournals and has been program chair or co-chair for a number of conferences John S. Kinnebrew is a PhD student in computer science at Vanderbilt University. He received his B.A. in computer science from Harvard University in 2001. His current research focuses on artificial intelligence planning and scheduling techniques in autonomous systems Douglas C. Schmidt is a Professor of Computer Science at the Institute for Software Integrated Systems \(ISIS Vanderbilt University. He is a widely cited expert on patterns, frameworks and middleware for distributed real-time and embedded \(ORE Schmidt has published over 400 technical papers and 9 books and has given over 400 invited talks and tutorials that cover a range of research topics, including patterns, optimization techniques, and empirical analyses of software frameworks and domain-specific modeling environments that facilitate the development of ORE middleware and applications running over high-speed networks and embedded system interconnects. Dr. Schmidt has served as a 12 pre></body></html 


translated by Thomas McCarthy, Beacon Press, Boston 1984 12] Markus, M.L., Majchrzak, A., Gasser, L  A Design Theory For Systems That Support Emergent Knowledge Processes  MIS Quarterly, 26\(3 13] Walls, J., Widmeyer, G. R., El Sawy, O. A  Building an Information System Design Theory for Vigilant EIS   Information Systems Research 3\(1 14] Briggs, R., Nunamaker, J., Spraugue, R  Introduction to the Special Issue: Information Systems Design  Theory and Methodology  Journal of Information Systems, Spring 2004, 5-8 15] Royal Commission on Auckland Governance http://www.royalcommission.govt.nz 16] New Zealand Council for Infrastructure Development Strengthening Auckland Governance. 2008 17] Ackermann, F., Franco, L.A., Gallupe, B., Parent, M  GSS for Multi-Organizational Collaboration: Reflections on Process and Content  Group Decision and Negotiation 14, 2005, 307-331 18] Franco, L.A  Facilitating Collaboration with Problem Structuring Methods: A Case Study of an InterOrganisational Construction Partnership  Group Decision and Negotiation 17, 2008, 267-286 19] Lewis, F.L., Bajwa, D.S., Pervan, G., King, V.L.K Munkvold, B.E  A Cross-Regional Exploration of Barriers to the Adoption and Use of Electronic Meeting Systems   Group Decision and Negotiation 16, 2007, 381-398 20] Kolfschoten, G.L., Den Hengst-Bruggeling, M., De Vreede, G.J  Issues in the Design of Facilitated Collaboration Processes  Group Decision and Negotiation 16, 2007, 347-361 21] Guo, Z., Sheffield J  A Paradigmatic and Methodological Examination of Knowledge Management Research: 2000-2004  Decision Support Systems 44, 2008 673-688 22] Hevner, A. R., March, S. T., Park, J., Ram, S. Design Science in Information Systems Research. MIS Quarterly 28\(1 23] Boland, R. "The Process and Product of System Design," Management Science 28\(9 24] Lee, A.S. "Electronic Mail as a Medium for Rich Communication: An Empirical Investigation Using Hermeneutic Interpretation," MIS Quarterly 18\(2 143-157 Proceedings of the 42nd Hawaii International Conference on System Sciences - 2009 10 25] Klein, H.K. and Myers, M.D. "A Set of Principles for Conducting and Evaluating Interpretive Field Studies in Information Systems," MIS Quarterly, 23\(1 26] Trauth, E.M., and Jessup, L.M. "Understanding Computer-Mediated Discussions: Positivist and Interpretive Analyses of Group Support System Use," MIS Quarterly 24\(1 27] Walsham, G. "The Emergence of Interpretivism in IS Research," Information Systems Research 6\(4 394 28] Sheffield, J  The Design of GSS-Enabled Interventions: A Habermasian Perspective  Group Decision and Negotiation 13\(5 29] Sheffield, J., Guo, Z  Ethical Inquiry in Knowledge Management  International Journal of Applied Systemic Studies 1\(1  81 30] Cecez-Kecmanovic, D. "Basic Assumptions of the Critical Research Perspectives in Information Systems," in Handbook of Critical Information Systems Research Theory and Application, D. Howcroft and E. Trauth \(eds Edward Elgar, Aldershot, 2005, 19-46 31] Lyytinen, K., and Hirschheim, R. "Information Systems as a Rational Discourse: An Application of Habermas' Theory of Communicative Action 


Habermas' Theory of Communicative Action Scandinavian Journal of Management Studies 4\(1-2 19-30 32] Lyytinen, K., Klein, H.K  The Critical Theory of Jurgen Habermas as a Basis for a Theory of Information Systems  in Mumford, E., R.A. Hirschheim, G. Fitzgerald and T. Wood-Harper \(Editors Information Systems, Amsterdam: North-Holland, 1985 33] Marshall, N, Brady, T  Knowledge Management and the Politics of Knowledge: Illustrations from Complex Products and Systems  European Journal of Information Systems 10\(2 34] Mingers, J  Combining IS Research Methods Towards a Pluralist Methodology  Information Systems Research 12\(3 35] Ngwenyama, O.K. and Lee, A.S. "Communication Richness in Electronic Mail: Critical Social Theory and the Contextuality of Meaning," MIS Quarterly 21\(2 145-167 36] Ulrich, W.A  Philosophical Staircase for Information Systems Definition, Design, and Development: A Discursive Approach to Reflective Practice in ISD \(Part 1  Journal of Information Technology Theory and Application 3\(3 37] Ulrich, W  Critically Systemic Discourse: A Disursive Approach to Reflective Practice in ISD \(Part 2   Journal of Information Technology Theory and Application, 3\(3 38] Forester J, Critical Theory, Public Policy, and Planning Practice: Toward a Critical Pragmatism, State University of New York Press, Albany, 1993 39] Forester J. "Learning From Practice Stories: The Priority of Practical Judgment," in The Argumentative Turn in Policy Analysis and Planning Eds F. Fischer, J. Forester Duke University Press, Durham, NC  209 40] Innes, J.E. ?Planning Through Consensus Building Journal of the American Planning Association 62\(4 460-472 41] Healey, P. Collaborative Planning: Shaping Places in Fragmented Societies, Palgrave New York, 1997 42] Outhwaite, W. The Habermas Reader, Polity Press Cambridge, UK, 1996 43] Shakun, Melvin F. ?Right Problem Solving: Doing the Right Thing Right,? Group Decision and Negotiation 12 6 44] Mitroff, I.I., and Linstone, H.A. The Unbounded Mind Breaking the Chains of Traditional Business Thinking Oxford University Press, New York, 1993 45] Millet, I., and Gogan, J. ?A Dialectical Framework for Problem Structuring and Information Technology,? Journal of the Operational Research Society, 57, 2005, 434-442 46] Fjermestad, J., and Hiltz, S.R. ?Group Support Systems: A Descriptive Evaluation of Case and Field Studies,? Journal of Management Information Systems 17\(3 47] Shaw, D., Ackermann, F., Eden. C. ?Approaches to Sharing Knowledge in Group Problem Structuring   Journal of the Operational Research Society 54\(9 936-948 48] De Reuk, J  General Decision Assurance Principles and Procedures for Strategic Planning  International Journal of Management &amp; Decision Making 3\(2 139-150 49] Grinyer, P. ?A Cognitive Approach to Group Strategic Decision Taking: A Discussion of Evolved Practice in the Light of Received Research Results,? Journal of the Operational Research Society 51\(1 50] Ngwenyama, O. ?The Critical Social Theory Approach to Information Systems: Problems and Challenges,? In Myers, M.D., Avison, D., Editors, Qualitative Research in 


Myers, M.D., Avison, D., Editors, Qualitative Research in Information Systems, Sage, London, 2002 51] Auckland Regional Council. Auckland Strategic Planning Model \(ASP2 Auckland, 1997 52] Dias, L., and Climaco, J  Dealing With Imprecise Information in Group Multi-Criteria Decisions: A Methodology and a GDSS Architecture  European Journal of Operational Research 160\(2 53] Sheffield, J., Gallupe, B. ?Using Group Support Systems to Improve the New Zealand Economy, Part II Follow-Up Results,? Journal of Management Information Systems 11\(3 54] Van de Ven, A.H., Delbecq, A. L  The Effectiveness of Nominal, Delphi, and Interacting Group Decision Making Processes  Academy of Management Journal 17 1971, 605-621 Proceedings of the 42nd Hawaii International Conference on System Sciences - 2009 11 pre></body></html 


reliability analysis requires the capability to simultaneously process multiple failure behaviors with very different qualitative and quantitative properties. The term qualitative refers to the fault types, such as benign, symmetric asymmetric, or the transmissive and omissive Unfortunately, traditional reliability analysis cannot handle the above requirements. To achieve the flexibilities and capabilities to simultaneously quantify several types of failure behaviors required by hybrid fault models, and still to be capable of incorporating complex time-dependent failure rate represented with survival analysis models, Ma and Krings \(2008e, Ma 2008a game theory model to integrate dynamic hybrid fault models and reliability models \(represented with survival functions  Box 4.1 and 4.2 briefly describe the concepts involved in two aspects of dynamic hybrid fault \(DHF Detailed contents are referred to Ma &amp; Krings \(2008e, Ma 2008a 11                                                     


                                                Box 4.1. Agreement Algorithm Aspect of Dynamic Hybrid Fault Models: Time and Covariate Dependent Hazard Function Ma and Krings \(2008e, Ma 2008a the first aspect \(i.e., the lack of real time notion, or the agreement-algorithm side of the problem introduction of survival analysis. Specifically, time and covariate dependent survivor functions or hazard functions are utilized. In the following, I use the oral message version of the Byzantine general problem Lamport 1982 extension. The constraint of Byzantine general problem under oral message assumption \(Table 1 be replaced with the following model in the dynamic version 1 3 tmtN Further assuming that the survivor function of generals is S\(t|z    ztStNtN    ztStmtm m where N\(t t treacherous generals \(traitors S\(t|z t|z survivor functions for the total number of generals and 


survivor functions for the total number of generals and traitors, respectively.  z is the vector of covariates, and the conditional survivor functions can adopt parametric or semi-parametric covariate models such as Cox models. Obviously, the hybrid models now are not only time-dependent, but also covariate dependent.  The covariates can be any factors that affect the failures of generals. The above scheme conveniently transforms traditional hybrid fault models and their corresponding mathematical constraints for reaching agreement, into time and covariate dependent  The above models use Byzantine general problem with oral messages as an example, and the other constraints to reach agreement in hybrid fault models can be extended in the same manner.  In addition, the above models adopted discrete form, or difference equations Continuous model or differential equation can be adopted. Models similar to population dynamics can be utilized \(Ma and Bechinski 2008 field that studies the change of population numbers from generation to generation. The concept of population usually refers to animal, plant or human population Hallam &amp; Levin. 1986, Kingsland 1995, Kot 2001 Lande &amp; Engen, 2003 mathematical models such as expressed with survival analysis, populations of animals, Byzantine generals, or wireless sensor nodes, are essentially the same Therefore, the models in population dynamics theory can be used to replace above models to represent more complex systems. The population dynamics approach is particular convenient for the utilization of evolutionary game modeling, which is necessary for addressing the second aspect of the dynamic hybrid fault models Box 4.2. Reliability Aspect of Dynamic Hybrid Fault Models: Byzantine Generals Playing Evolutionary Games The solution to the first aspect \(Box 4.1 not sufficient to apply the DHF models to reliability or survivability analysis.  Ma and Krings \(2008e, Ma 2008a introduced evolutionary game theory \(EGT the second aspect of the problem  reliability aspect of dynamic hybrid fault models. With the Byzantine general problem as an example and they term the approach Byzantine Generals Playing Evolutionary Games  Basic Concepts in EGT  In EGT, game players are population individuals, game payoffs are the fitness of individuals, and strategies are evolved dynamically.  Similar to the Nash equilibrium in traditional game theory evolutionary stable strategy \(ESS both internal mutation and external perturbation.  The ESS can be mapped to the sustainable or survivable strategies. When mapping to the Byzantine general problem, players are the generals, and fitness or payoff of a game is mapped to reliability \(survivability sub-population of players, which can be represented with the hazard function or survival function introduced in the previous section.  The sub-populations can refer to groups of generals \(such as loyal general group or treacherous general group behaviors of generals, such as malicious vs. benign symmetric vs. asymmetric  Basic Mathematical Models for EGT  In literature mathematical models for evolutionary games can be as simple as simple algebraic equations or as complex as differential equation systems. For example, the so termed replicator dynamics model is actually the adaptation of population dynamics modeling for describing evolutionary games. Replicator dynamics describes evolution of the frequencies of strategies in a population. In evolutionary 


game theory, replicator dynamics is described with differential equations. For example, if a population consists of n types nEEE ,...,, 21 with frequencies 21 nxxx . The fitness xfi of iE will be a function of the population structure, or the vector 21 nxxxx Following the basic tenet of Darwinism, one may define the success as the difference between the fitness xfi of iE  and the average fitness   xfxxf ii of the population. The simplest replicator model can be defined as   xfxfxdtdx iii for .,...,2,1 ni =  The population nStx ?   where nS is a simplex, which is the space for population composition, is similar to mixed strategies in traditional games \(Hofbauer amp; Sigmund 1998, Vincent &amp; Brown 2005, Nowak 2006  12                                                  Box 4.3 included some additional comments on DHF models. The following is a summary for the potential benefits of introducing DHF models to reliability and PHM  i 


i models into time and covariate dependent dynamic counterparts  ii models and reliability analysis in a more realistic manner  iii level  whether or not functional components \(loyal generals diagnose correctly and take proper actions such as fault mask of failed components \(traitors asymmetric  iv survivability analysis. Evolutionary game modeling can derive sustainable or survivable strategies \(mapped from the ESS in EGT such as node failures such as security compromise level modeling in the so-called three-layer survivability analysis developed in Ma \(2008a this article  v offer an integrated architecture that unite reliability survivability, and fault tolerance, and the modeling approaches with survival analysis and evolutionary game theory implement this architecture. Finally, the dynamic hybrid fault models, when utilized to describe the survival of players in EGT, enhance the EGT's flexibility and power in modeling the survival and behaviors of the game players which should also be applicable to other problem domains where EGT is applicable  5. OPERATIONAL LEVEL MODELING AND DECISION-MAKING  5.1. Highlights of the Tactical and Strategic Levels  Let's first summarize what are obtainable at both tactical and strategic levels. The results at both tactical and strategic levels are precisely obtainable either via analytic or simulation optimization. With the term precisely, we mean that there is no need to assign subjective probabilities to UUUR events. This is possible because we try to assess the consequences of UUUR events \(tactical level ESS strategies \(strategic level time prediction of survivability. The following is a list of specific points. I use an assumed Wireless Sensor Network WSN  i of UUUR events: \(a actions which can be treated as censored events; \(b Cont' of Box 4.2 It can be shown that the replicator differential equations are equivalent to the classical population dynamics models such as Logistic differential equation and LotkaVolterra equation \(e.g., Kot 2001 Logistic equation, or the limited per capital growth rate is similar to the change rate of the fitness  xfxfi which can be represented with the hazard function or survivor functions introduced in the previous section on survival analysis.  This essentially connects the previous survival analysis modeling for lifetime and reliability with the EGT modeling. However, EGT provides additional modeling power beyond population dynamics or survival analysis approaches introduced in the previous section. The introduction of evolutionary theory makes the games played by a population evolvable. In other words, each player \(individual 


other words, each player \(individual agent and players interact with each other to evolve an optimized system Box 4.3. Additional Comments on DHF Models  The above introduced EGT models are very general given they are the system of ordinary differential equations. Furthermore, the choice of fitness function f\(x complexity to the differential equation system.  The system can easily be turned into system of nonlinear differential equations. The analytical solution to the models may be unobtainable when nonlinear differential equations are involved and simulation and/or numerical computation are often required  In the EGT modeling, Byzantine generals are the game players, and hybrid fault models are conveniently expressed as the strategies of players; the players may have different failure or communication behaviors Furthermore, players can be further divided into groups or subpopulations to formulate more complex network organizations. In the EGT modeling, reliability can be represented as the payoff \(fitness, the native term in EGT of the game. Because reliability function can be replaced by survivor function, survival analysis is seamlessly integrated into the EGT modeling. That is, let Byzantine generals play evolutionary games and their fitness reliability function  The evolutionary stable strategy \(ESS counterpart of Nash equilibrium in traditional games ESS corresponds to sustainable strategies, which are resistant to both internal mutations \(such as turning into treason generals or nodes such as security compromises represent survivable strategies and survivability in survivability analysis. Therefore, dynamic hybrid fault models, after the extension with EGT modeling, can be used to study both reliability and survivability 13 risks such as competing risks which can be described with CRA; \(c captured with the shard frailty.  We believe that these UUUR events are sufficiently general to capture the major factors/events in reliability, security and survivability whose occurrence probabilities are hard or impossible to obtain  Instead of trying to obtain the probabilities for these events which are infeasible in most occasions, we focus on analyzing the consequences of the events.  With survival analysis, it is possible to analyze the effects of these types of events on survivor functions. In addition, spatial frailty modeling can be utilized to capture the heterogeneity of risks in space, or the spatial distribution of risks \(Ma 2008a d UUUR events introduced previously. These approaches and models that deal with the effects of UUUR events form the core of tactical level modeling  To take advantage of the tactical level modeling approaches it is obviously necessary to stick to the survivor functions or hazard functions models. In other words, survival analysis can deal with UUUR events and offer every features reliability function provides, but reliability function cannot deal with UUUR events although survivor function and reliability function have the exactly same mathematical definition. This is the junction that survival analysis plays critical role in survivability analysis at tactical level. However, we 


recognize that it is infeasible to get a simple metric for survivability similar to reliability with tactical level modeling alone. Actually, up to this point, we are still vague for the measurement of survivability or a metric for survivability. We have not answered the question: what is our metric for survivability? We think that a precise or rigorous definition of survivability at tactical level is not feasible, due to the same reason we cited previously  the inability to determine the probabilities of UUUR events However, we consider it is very helpful to define a work definition for survivability at the tactical level  We therefore define the survivability at tactical level as a metric, Su\(t t function or reliability function with UUUR events considered. In the framework of three-layer survivability analysis, this metric is what we mean with the term survivability. The "metric" per se is not the focus of the three-layer survivability analysis. It is not very informative without the supports from the next two levels  strategic and operational models.  However, it is obvious that this metric sets a foundation to incorporate UUUR effects in the modeling at the next two levels  Due to the inadequacy of tactical level modeling, we proposed the next level approach  strategic level modeling for survivability. As expected, the tactical level is one foundation of strategic level modeling ii objectives: \(a affect survivability which survival analysis alone is not adequate to deal with; \(b survivability at tactical level is necessary but not sufficient for modeling survivability, we need to define what is meant with the term survivability at strategic level  With regard to \(a behaviors or modes which have very different consequences. These failure behaviors can be captured with hybrid fault models. However, the existing hybrid fault models in fault tolerance field are not adequate for applying to survivability analysis. There are two issues involved: one is the lack of real time notion in the constraints for hybrid fault models \(e.g., N&gt;3m+1 for Byzantine Generals problem synthesize the models after the real-time notions are introduced. The solution we proposed for the first issue is the dynamic hybrid fault models, which integrate survivor functions with traditional hybrid fault models. The solution we proposed for the second issue is the introduction of EGT modeling  With regard to \(b modeling our problem at strategic level, EGT modeling is essentially a powerful optimization algorithm.  One of the most important results from EGT modeling is the so-called evolutionary stable strategies \(ESS We map the ESS in EGT to survivable strategies in survivability analysis.   Therefore, at the strategic level, our work definition for survivability refers to the survivable strategies or sustainable strategies in the native term of EGT, which can be quantified with ESS  In addition to integrating dynamic hybrid fault models another advantage for introducing EGT modeling at strategic level is the flexibility for incorporating other node behaviors \(such as cooperative vs. non-cooperative those behaviors specified in standard hybrid fault models, as well as anthropocentric factors such as costs constraints  Without UUUR events, both tactical and strategic level 


Without UUUR events, both tactical and strategic level models default to regular reliability models. This implies that, in the absence of UUUR events, reliable strategies are sustainable or survivable.  This also implies that three-layer survivability analysis defaults to reliability analysis however, the three-layer approach does offer some significant advantages over traditional reliability analysis, as discussed in previous sections. Nevertheless, when UUUR events exist, reliable strategies and survivable strategies are different. This necessitates the next operational level modeling  5.2. Operational Level Modeling and Decision-Making  When UUUR events are involved, we cannot make real time predictions of survivability at tactical and strategic levels This implies that the implementations of survivable 14 strategies need additional measures that we develop in this section.  Box 5.1 explains the ideas involved with possibly the simplest example  Figure 4 is a diagram showing a simplified relationship between action threshold survivability \(TS survivability \(ES view since both TS and ES are multidimensional and dynamic in practice. Therefore, the sole purpose of the diagram is to illustrate the major concepts discussed above The blue curve is the survivability when survivable strategies specified by ESS are implemented at some point before time s.  The system is then guaranteed to hold survivability above ES. In contrary, if no ESS implemented before time s, then the system quickly falls below to the survivable level at around 40 time units  T i m e 0 1 0 2 0 3 0 4 0 5 0 6 0 7 0 8 0 9 0 1 0 0 Su rv iv ab ili ty M et ric S u t 0 . 0 0 . 1 0 . 2 0 . 3 0 . 4 0 . 5 0 . 6 0 . 7 0 . 8 0 . 9 1 . 0 E S S  i s  I m p lm e n t e d N o  E S S  is  I m p lm e n t e d ts E S T S  Figure 4. A Diagram Showing the Relationship Between TS and ES, as well as timing of s and t, with s &lt; t  6. SUMMARY  The previous sections discussed the major building blocks 


The previous sections discussed the major building blocks for the new life-system inspired PHM architecture. This section first identifies a few minor aspects that have not been discussed explicitly but are necessary for the implementation of the architecture, and then we summarize the major building blocks in a diagram  6.1. Missing Components and Links  Optimization Objectives  Lifetime, reliability, fault tolerance, and survivability, especially the latter two, are application dependent. Generally, the optimization of reliability and survivability are consistent; in that maximization of reliability also implies maximization of survivability. However, when application detail is considered, optimization of lifetime is not necessarily consistent with the optimization of reliability. Consider the case of the monitoring sensor network as an example. The network reliability is also dependent on connectivity coverage, etc, besides network lifetime. What may be further complicated is the time factor. All of the network metrics are time-dependent. A paradoxical situation between lifetime and reliability could be that nodes never 'sleep                                                   


          Box 5.1 Operational Level Modeling  Assuming that the ESS solution for a monitoring sensor network can be expressed with the following simple algebraic conditions: survivability metric at tactical level SU = 0.7, Router-Nodes in the WSN &gt; 10%, Selfish Nodes &lt; 40%. Even with this extremely simplified scenario, the ESS strategies cannot be implemented because we do not know when the actions should be taken to warrant a sustainable system.  These conditions lack a correlation with real time  The inability to implement ESS is rooted in our inability to assign definite probabilities to UUUR events, which implies that we cannot predict when something sufficiently bad will jeopardize the system survivability What we need at the operational level is a scheme to ensure ESS strategy is in place in advance  The fundamental idea we use to implement the ESS strategy is to hedge against the UUUR events. The similar idea has been used in financial engineering and also in integrated pest management in entomology. This can be implemented with the following scheme  Let us define a pair of survivability metrics: one is the expected survivability \(ES threshold survivability or simply threshold survivability \(TS ES is equivalent to the survivability metric at tactical level. ES corresponds to ESS at strategic level, but they are not equivalent since ESS is strategy and ES is survivability. TS is the survivability metric value \(at tactical level and TS can be obtained from strategic level models. For example, TS = SU\(s t condition for the implementation of ESS. In other words, the implementation of strategies that ensures TS at time s will guarantee the future ES level at time t.  To make the implementation more reliable and convenient multiple dynamic TSs can be computed at time s1, s2 sk, with si &lt; t for all i.  These TS at times s1, s2, ..., sk should be monitored by some evaluation systems  Unlike tactical and strategic levels, the operational level modeling is approximate. The term "approximate means that we cannot predict the real time survivability or we do not know the exact time an action should be taken. Instead, the action is triggered when the monitored survivability metric SU\(r survivability \(TS scheme of TS and ES, we ensure the ES by taking preventative actions \(prescribed by ESS and triggered by the TS consequences of UUUR events  Figure 4 is a diagram showing the above concepts and the decision-making process involved 15 This wakefulness \(never 'sleep short period but at the expense of network lifetime. Of course, when the network is running out of lifetime, network reliability ultimately crashes. This example reminds us that 


reliability ultimately crashes. This example reminds us that multi-objective optimization should be the norm rather than exception  Constraints and Extensions  Many application specific factors and constraints are ignored in this article. For example, we mentioned about spatial heterogeneity of environment, but never present a mathematical description The spatial heterogeneity can be modeled with the so-called spatial frailty in multivariate survival analysis \(Ma 2008a  Evolutionary Algorithm  Evolutionary game modeling when implemented in simulation, can be conveniently implemented with an algorithm similar to Genetic Algorithms \(GA ESS in the evolutionary game model with simulation is very similar to GA. Dynamic populations, in which population size varies from generation to generation \(Ma &amp; Krings 2008f of node failures. Another issue to be addressed is the synchronous vs. asynchronous updating when topology is considered in the simulation. This update scheme can have profound influences on the results of the simulation. Results from cellular automata computing should be very useful for getting insights on the update issue  6.2. Summary and Perspective  To recapture the major points of the article, let us revisit Figure 3, which summarizes the principal modules of the proposed life-system inspired PHM architecture. The main inspiration from life systems is the notion of individuals and their assemblage, the population. Population is an emergent entity at the next level and it has emergent properties which we are often more concerned with. Survival analysis, which has become a de facto standard in biomedicine, is particularly suitable for modeling population, although it is equally appropriate at individual level. Therefore, survival analysis \(including competing risks analysis and multivariate survival analysis comprehensively in the context of PHM in a series of four papers presented at IEEE AeroSpace 2008 \(Ma &amp; Krings 2008a, b, c, &amp; d proposed architecture. Survival analysis constitutes the major mathematical tools for analyzing lifetime and reliability, and also forms the tactical level of the three-layer survivability analysis  Besides lifetime and reliability, two other major modules in Figure 3 are fault tolerance and survivability. To integrate fault tolerance into the PHM system, Dynamic Hybrid Fault DHF 2008e, Ma 2008a make real-time prediction of reliability more realistic and make real-time prediction of fault tolerance level possible DHF models also unite lifetime, reliability and fault tolerance under a unified modeling framework that consists of survival analysis and evolutionary game theory modeling  DHG models also form the partial foundation, or strategic level, for the three-layer survivability analysis. At the strategic level, the Evolutionary Stable Strategies \(ESS which is mapped to survivable or sustainable strategies, can be obtained from the evolutionary game theory based DHF models. When there is not any UUUR event involved reliability and survivability are consistent, and reliable strategies are survivable. In this case, the strategic level modeling up to this point is sufficient for the whole PHM system modeling, and there is no need for the next level  operational level modeling  When there are UUUR events in a PHM system, the 


When there are UUUR events in a PHM system, the inability to determine the occurrence probabilities of UUUR events makes the operational level modeling necessary Then the principle of hedging must be utilized to deal with the "hanging" uncertainty from UUUR events. In this case reliability strategies are not necessarily survivable strategies At the operational level modeling, a duo of survivability metrics, expected survivability \(ES survivability \(TS the survivable strategies \(ESS level are promptly implemented based on the decisionmaking rules specified with the duo of survivability metrics then the PHM system should be able to endure the consequences of potentially catastrophic UUUR events. Of course, to endure such catastrophic events, the cost may be prohibitively high, but the PHM system will, at least, warn decision-makers for the potentially huge costs.  It might be cheap to just let it fail  Figure 3 also shows several other modules, such as security safety, application systems \(such as Automatic Logistics CBM+, RCM, Life cycle cost management, Real-time warning and alert systems architectures, but we do not discuss in this paper. Generally the new architecture should be fully compatible with existing ones in incorporating these additional modules. One point we stressed is that PHM system can be an ideal place to enforce security policies. Enforcing security policies can be mandatory for PHM systems that demand high security and safety such as weapon systems or nuclear plant facilities.  This is because maintenance, even without human-initiated security breaches, can break the security policies if the maintenance is not planned and performed properly  In perspective, although I did not discuss software issues in this paper, the introduced approaches and models should provide sufficient tools for modeling software reliability and survivability with some additional extension. Given the critical importance of software to modern PHM systems, we present the following discussion on the potential extension to software domain. Specifically, two points should be noted: \(1 architecture to software should be a metric which can 16 replace the time notion in software reliability; I suggest that the Kolmogorov complexity \(e.g., Li and Vitanyi 1997 be a promising candidate \(Ma 2008a change is because software does not wear and calendar time for software reliability usually does not make much sense 2 software reliability modeling.  Extending to general survivability analysis is not a problem either. In this article I implicitly assume that reliability and survivability are positively correlated, or reliability is the foundation of survivability. This positive correlation does not have to be the case. A simplified example that illustrates this point is the 'limit order' in online stock trading, in which limit order can be used in either direction: that stock price is rising or falling.  The solution to allow negative or uncorrelated relationships between reliability and survivability are very straightforward, and the solutions are already identified in previous discussions. Specifically, multiple G-functions and multi-stage G-functions by Vincent and Brown \(2005 very feasible solution, because lifetime, reliability and survivability may simply be represented with multiple Gfunctions. Another potential solution is the accommodation of the potential conflicts between reliability and survivability with multi-objective GA algorithms, which I previously suggested to be used as updating algorithms in the optimization of evolutionary games  


 The integration of dynamic hybrid fault models with evolutionary game modeling allows one to incorporate more realistic and detailed failure \(or survival individual players in an evolutionary game. This is because dynamic hybrid fault models are supported by survival analysis modeling, e.g., time and covariate dependent hazard or survivor functions for individual players. If necessary, more complex survival analysis modeling including competing risks analysis and multivariate survival analysis, can be introduced.  Therefore, any field to which evolutionary game theory is applicable may benefit from the increased flexibility in modeling individual players.  Two particularly interesting fields are system biology and ecological modeling.  In the former field, dynamic hybrid fault models may find important applications in the study of biological networks \(such as gene, molecular, and cell networks 2008g conjecture that explains the redundancy in the universal genetic code with Byzantine general algorithm. In addition they conducted a comparative analysis of bio-robustness with engineering fault tolerance, for example, the strong similarity between network survivability and ecological stability \(Ma &amp; Krings 2008g survivability analysis can be applied for the study of survivals or extinctions of biological species under global climate changes \(Ma 2008b  In this paper, I have to ignore much of the details related to the implementation issues to present the overall architecture and major approaches clearly and concisely. To deal with the potential devils in the implementation details, a well funded research and development team is necessary to take advantages of the ideas presented here. On the positive side I do see the great potential to build an enterprise PHM software product if there is sufficient resource to complete the implementation. Given the enormous complexity associated with the PHM practice in modern engineering fields, it is nearly impossible to realize or even demonstrate the benefits of the architecture without the software implementation. The critical importance of PHM to mission critical engineering fields such as aerospace engineering, in turn, dictates the great value of such kind software product  6.3. Beyond PHM  Finally, I would like to raise two questions that may be interested in by researchers and engineers beyond PHM community. The first question is: what can PHM offer to other engineering disciplines? The second question is: what kinds of engineering fields benefit most from PHM? Here, I use the term PHM with the definition proposed by IEEE which is quoted in the introduction section of the paper  As to the first question, I suggest software engineering and survivability analysis are two fields where PHM can play significant roles. With software engineering, I refer to applying PHM principles and approaches for dealing with software reliability, quality assurance, and even software process management, rather than building PHM software mentioned in the previous subsection. For survivability analysis, borrowing the procedures and practices of PHM should be particularly helpful for expanding its role beyond its originating domain \(network systems that control critical national infrastructures is a strong advocate for the expansion of survivability analysis to PHM. Therefore, the interaction between PHM and survivability analysis should be bidirectional. Indeed, I see the close relationships between PHM, software engineering, and survivability as well-justified because they all share some critical issues including reliability survivability, security, and dependability  


 The answer to the second question is much more elusive and I cannot present a full answer without comparative analysis of several engineering fields where PHM has been actively practiced. Of course, it is obvious that fields which demand mission critical reliability and dependability also demand better PHM solutions. One additional observation I would like to make is that PHM seems to play more crucial roles for engineering practices that depend on the systematic records of 'historical' data, such as reliability data in airplane engine manufacturing, rather than on the information from ad hoc events.  This may explain the critical importance of PHM in aerospace engineering particularly in commercial airplane design and manufacturing.  For example, comparing the tasks to design and build a space shuttle vs. to design and manufacture commercial jumbo jets, PHM should be more critical in the latter task  17    Figure 2. States of a monitoring sensor node and its failure modes \(after Ma &amp; Krings 2008e     Figure 3. Core Modules and their Relationships of the Life System Inspired PHM Architecture    REFERENCES  Adamides, E. D., Y. A. Stamboulis, A. G. Varelis. 2004 Model-Based Assessment of Military Aircraft Engine Maintenance Systems Model-Based Assessment of Military Aircraft Engine Maintenance Systems. Journal of the Operational Research Society, Vol. 55, No. 9:957-967  Anderson, R. 2001. Security Engineering. Wiley  Anderson, R. 2008. Security Engineering. 2nd ed. Wiley  Bird, J. W., Hess, A. 2007.   Propulsion System Prognostics R&amp;D Through the Technical Cooperation Program Aerospace Conference, 2007 IEEE, 3-10 March 2007, 8pp  Bock, J. R., Brotherton, T., W., Gass, D. 2005. Ontogenetic reasoning system for autonomic logistics. Aerospace Conference, 2005 IEEE 5-12 March 2005.Digital Object Identifier 10.1109/AERO.2005.1559677  Brotherton, T., P. Grabill, D. Wroblewski, R. Friend, B Sotomayer, and J. Berry. 2002. A Testbed for Data Fusion for Engine Diagnostics and Prognostics. Proceedings of the 2002 IEEE Aerospace Conference  Brotherton, T.; Grabill, P.; Friend, R.; Sotomayer, B.; Berry J. 2003. A testbed for data fusion for helicopter diagnostics and prognostics. Aerospace Conference, 2003. Proceedings 2003 IEEE  Brown, E. R., N. N. McCollom, E-E. Moore, A. Hess. 2007 Prognostics and Health Management A Data-Driven Approach to Supporting the F-35 Lightning II. 2007 IEEE AeroSpace Conference  Byington, C.S.; Watson, M.J.; Bharadwaj, S.P. 2008 Automated Health Management for Gas Turbine Engine Accessory System Components. Aerospace Conference 2008 IEEE, DOI:10.1109/AERO.2008.4526610 


2008 IEEE, DOI:10.1109/AERO.2008.4526610 Environment Covariates &amp; Spatial Frailty Applications: AL; Life Cycle Mgmt; Real-Time Alerts CBM+, RCM, TLCSM; Secret Sharing and Shared Control 18 Chen, Y. Q., S. Cheng. 2005. Semi-parametric regression analysis of mean residual life with censored survival data Biometrika \(2005  29  Commenges, D. 1999. Multi-state models in Epidemiology Lifetime Data Analysis. 5:315-327  Cook, J. 2004. Contrasting Approaches to the Validation of Helicopter HUMS  A Military User  s Perspective Aerospace Conference, 2004 IEEE  Cook, J. 2007. Reducing Military Helicopter Maintenance Through Prognostics. Aerospace Conference, 2007 IEEE Digital Object Identifier 10.1109/AERO.2007.352830  Cox, D. R. 1972. Regression models and life tables.  J. R Stat. Soc. Ser. B. 34:184-220  Crowder, M. J.  2001. Classical Competing Risks. Chapman amp; Hall. 200pp  David, H. A. &amp; M. L. Moeschberger. 1978. The theory of competing risks. Macmillan Publishing, 103pp  Ellison, E., L. Linger, and M. Longstaff. 1997.  Survivable Network Systems: An Emerging Discipline, Carnegie Mellon, SEI, Technical Report CMU/SEI-97-TR-013  Hanski, I. 1999. Metapopulation Ecology. Oxford University Press  Hallam, T. G. and S. A. Levin. 1986. Mathematical Ecology. Biomathematics. Volume 17. Springer. 457pp  Hess, A., Fila, L. 2002.  The Joint Strike Fighter \(JSF concept: Potential impact on aging aircraft problems Aerospace Conference Proceedings, 2002. IEEE. Digital Object Identifier: 10.1109/AERO.2002.1036144  Hess, A., Calvello, G., T. Dabney. 2004. PHM a Key Enabler for the JSF Autonomic Logistics Support Concept. Aerospace Conference Proceedings, 2004. IEEE  Hofbauer, J. and K. Sigmund. 1998. Evolutionary Games and Population Dynamics. Cambridge University Press 323pp  Hougaard, P. 2000. Analysis of Multivariate Survival Data Springer. 560pp  Huzurbazar, A. V. 2006. Flow-graph model for multi-state time-to-event data. Wiley InterScience  Ibrahim, J. G., M. H. Chen and D. Sinha. 2005. Bayesian Survival Analysis. Springer. 481pp  Kacprzynski, G. J., Roemer, M. J., Hess, A. J. 2002. Health management system design: Development, simulation and cost/benefit optimization. IEEE Aerospace Conference Proceedings, 2002. DOI:10.1109/AERO.2002.1036148  Kalbfleisch, J. D., and R. L. Prentice, 2002. The Statistical Analysis of Failure Time Data. Wiley-InterScience, 2nd ed  Kalgren, P. W., Byington, C. S.   Roemer, M. J.  2006 Defining PHM, A Lexical Evolution of Maintenance and Logistics. Systems Readiness Technology Conference 


Logistics. Systems Readiness Technology Conference IEEE. DOI: 10.1109/AUTEST.2006.283685  Keller, K.; Baldwin, A.; Ofsthun, S.; Swearingen, K.; Vian J.; Wilmering, T.; Williams, Z. 2007. Health Management Engineering Environment and Open Integration Platform Aerospace Conference, 2007 IEEE, Digital Object Identifier 10.1109/AERO.2007.352919  Keller, K.; Sheahan, J.; Roach, J.; Casey, L.; Davis, G Flynn, F.; Perkinson, J.; Prestero, M. 2008. Power Conversion Prognostic Controller Implementation for Aeronautical Motor Drives. Aerospace Conference, 2008 IEEE. DOI:10.1109/AERO.2008.4526630  Klein, J. P. and M. L. Moeschberger. 2003. Survival analysis techniques for censored and truncated data Springer  Kingsland, S. E. 1995. Modeling Nature: Episodes in the History of Population Ecology. 2nd ed., University of Chicago Press, 315pp  Kot, M. 2001. Elements of Mathematical Ecology Cambridge University Press. 453pp  Krings, A. W. and Z. S. Ma. 2006. Fault-Models in Wireless Communication: Towards Survivable Ad Hoc Networks Military Communications Conference, 23-25 October, 7 pages, 2006  Lamport, L., R. Shostak and M. Pease. 1982. The Byzantine Generals Problem. ACM Transactions on Programming Languages and Systems, 4\(3  Lawless, J. F. 2003. Statistical models and methods for lifetime data. John Wiley &amp; Sons. 2nd ed  Line, J. K., Iyer, A. 2007. Electronic Prognostics Through Advanced Modeling Techniques. Aerospace Conference 2007 IEEE. DOI:10.1109/AERO.2007.352906  Lisnianski, A., Levitin, G. 2003. Multi-State System Reliability: Assessment, Optimization and Applications World Scientific  Liu, Y., and K. S. Trivedi. 2006. Survivability Quantification: The Analytical Modeling Approach, Int. J of Performability Engineering, Vol. 2, No 1, pp. 29-44  19 Luchinsky, D.G.; Osipov, V.V.; Smelyanskiy, V.N Timucin, D.A.; Uckun, S. 2008. Model Based IVHM System for the Solid Rocket Booster. Aerospace Conference, 2008 IEEE.DOI:10.1109/AERO.2008.4526644  Lynch, N. 1997. Distributed Algorithms. Morgan Kaufmann Press  Ma, Z. S. 1997. Demography and survival analysis of Russian wheat aphid. Ph.D. dissertation, Univ. of Idaho 306pp  Ma, Z. S. 2008a. New Approaches to Reliability and Survivability with Survival Analysis, Dynamic Hybrid Fault Models, and Evolutionary  Game Theory. Ph.D. dissertation Univ. of Idaho. 177pp  Ma, Z. S. 2008b. Survivability Analysis of Biological Species under Global Climate Changes: A New Distributed and Agent-based Simulation Architecture with Survival Analysis and Evolutionary Game Theory. The Sixth 


International Conference on Ecological Informatics. Dec 25, 2008. Cancun, Mexico  Ma, Z. S. and E. J. Bechinski. 2008. A Survival-Analysis based  Simulation Model for Russian Wheat Aphid Population Dynamics. Ecological Modeling, 216\(2 332  Ma, Z. S. and A. W. Krings. 2008a.  Survival Analysis Approach to Reliability Analysis and Prognostics and Health Management \(PHM  AIAA AeroSpace Conference, March 1-8, 2008, Big Sky, MT, 20pp  Ma, Z. S. and A. W. Krings. 2008b. Competing Risks Analysis of Reliability, Survivability, and Prognostics and Health Management \(PHM  AIAA AeroSpace Conference, March 1-8, 2008.  Big Sky, MT. 20pp  Ma, Z. S. and A. W. Krings. 2008c. Multivariate Survival Analysis \(I Dependence Modeling", Proc. IEEE  AIAA AeroSpace Conference, March 1-8, 2008, Big Sky, MT. 21pp  Ma, Z. S. and A. W. Krings., R. E. Hiromoto. 2008d Multivariate Survival Analysis \(II State Models in Biomedicine and Engineering Reliability IEEE International Conference of Biomedical Engineering and Informatics, BMEI 2008.  6 Pages  Ma, Z. S. and A. W. Krings. 2008e. Dynamic Hybrid Fault Models and their Applications to Wireless Sensor Networks WSNs Modeling, Analysis and Simulation of Wireless and Mobile Systems. \(ACM MSWiM 2008 Vancouver, Canada  Ma, Z. S. &amp; A. W. Krings. 2008f. Dynamic Populations in Genetic Algorithms. SIGAPP, the 23rd Annual ACM Symposium on Applied Computing, Ceara, Brazil, March 16-20, 2008. 5 Pages  Ma, Z. S. &amp; A. W. Krings. 2008g. Bio-Robustness and Fault Tolerance: A New Perspective on Reliable, Survivable and Evolvable Network Systems, Proc. IEEE  AIAA AeroSpace Conference, March 1-8, Big Sky, MT, 2008. 20 Pages  Ma, Z. S.  and A. W. Krings. 2009. Insect Sensory Systems Inspired Computing and Communications.  Ad Hoc Networks 7\(4  MacConnell, J.H. 2008. Structural Health Management and Structural Design: An Unbridgeable Gap? 2008 IEEE Aerospace Conference, DOI:10.1109/AERO.2008.4526613  MacConnell, J.H. 2007. ISHM &amp; Design: A review of the benefits of the ideal ISHM system. Aerospace Conference 2007 IEEE. DOI:10.1109/AERO.2007.352834  Marshall A. W., I. Olkin. 1967. A Multivariate Exponential Distribution. Journal of the American Statistical Association, 62\(317 Mar., 1967  Martinussen, T. and T. H. Scheike. 2006. Dynamic Regression Models for Survival Data. Springer. 466pp  Mazzuchi, T. A., R. Soyer., and R. V. Spring. 1989. The proportional hazards model in reliability. IEEE Proceedings of Annual Reliability and Maintainability Symposium pp.252-256  Millar, R.C., Mazzuchi, T.A. &amp; Sarkani, S., 2007. A Survey of Advanced Methods for Analysis and Modeling of 


of Advanced Methods for Analysis and Modeling of Propulsion System", GT2007-27218, ASME Turbo Expo 2007, May 14-17, Montreal, Canada  Millar, Richard C., "Non-parametric Analysis of a Complex Propulsion System Data Base", Ph.D. Dissertation, George Washington University, June 2007  Millar, R. C. 2007. A Systems Engineering Approach to PHM for Military Aircraft Propulsion Systems. Aerospace Conference, 2007 IEEE. DOI:10.1109/AERO.2007.352840  Millar, R. C. 2008.  The Role of Reliability Data Bases in Deploying CBM+, RCM and PHM with TLCSM Aerospace Conference, 2008 IEEE, 1-8 March 2008. Digital Object Identifier: 10.1109/AERO.2008.4526633  Nowak, M. 2006. Evolutionary Dynamics: Exploring the Equations of Life. Harvard University Press. 363pp  Oakes, D. &amp; Dasu, T. 1990. A note on residual life Biometrika 77, 409  10  Pintilie, M. 2006. Competing Risks: A Practical Perspective.  Wiley. 224pp  20 Smith, M. J., C. S. Byington. 2006. Layered Classification for Improved Diagnostic Isolation in Drivetrain Components. 2006 IEEE AeroSpace Conference  Therneau, T. and P. Grambsch. 2000. Modeling Survival Data: Extending the Cox Model. Springer  Vincent, T. L. and J. L. Brown. 2005. Evolutionary Game Theory, Natural Selection and Darwinian Dynamics Cambridge University Press. 382pp  Wang. J., T. Yu, W. Wang. 2008. Research on Prognostic Health Management \(PHM on Flight Data. 2008 Int. Conf. on Condition Monitoring and Diagnosis, Beijing, China, April 21-24, 2008. 5pp  Zhang, S., R. Kang, X. He, and M. G. Pecht. 2008. China  s Efforts in Prognostics and Health Management. IEEE Trans. on Components and Packaging Technologies 31\(2             BIOGRAPHY  Zhanshan \(Sam scientist and earned the terminal degrees in both fields in 1997 and 2008, respectively. He has published more than 60 peer-refereed journal and conference papers, among which approximately 40 are journal papers and more than a third are in computer science.  Prior to his recent return to academia, he worked as senior network/software engineers in semiconductor and software industry. His current research interests include: reliability, dependability and fault tolerance of distributed and software systems behavioral and cognitive ecology inspired pervasive and 


behavioral and cognitive ecology inspired pervasive and resilient computing; evolutionary &amp; rendezvous search games; evolutionary computation &amp; machine learning bioinformatics &amp; ecoinformatics                 pre></body></html 


