 Title Named Entity Recognition using  Wikipedia and A bbreviation Generation    Youngmin P ark  Department of Computer Science and Engineering, Sogang University  Seoul Korea  pymnlp@gmail.com   Sangwoo Kang  Department of Computer Science and Engineering, Sogang University  Seoul, Korea  gahng.sw gmail.com   Jungyun Seo  Department of Computer Science and Engineering, Sogang University  Seoul, Korea  seojy@sogang.ac.kr    Abstract 227  In this paper we propose a title named entity recognition model using Wikipedia  and a 
bbreviation generation  The proposed title named entity recognition model automatically extracts title named entities from Wikipedia so constant renewal is possible without additional costs. Also, in order to establish a dictionary of title named entity abbreviations, generatio n rules are used to generate abbreviation candidates and abbreviations are selected through web search methods. In this paper w e  
p r o p 
o s e  a statistical model that recognizes title named entities 
using CRF s Conditional Random Fields\The proposed model uses lexical information, a named entity dictionary, and an abbreviation dictionary, and provides title named entity recognition performance of 82.1% according to experimental results   Keyword s 227  Title named entity, Wikipedia, Conditional random field, Abb reviation generation  I   I NTRODUCTION  A named entity refers to a word that is not registered in regular dictionaries or is a proper noun such as a person\222s name a name of a location, or an institution name. Named entity recognition refers to the recognition  of such named entities within the natural language and categorizes them according to their meaning. Studies on named entity recognition mainly began with the recognition process of people, location, and 
institution names. Recently, various named entity ca tegorization systems are being developed and studied for various application fields  With the recent and active development of voice conversation interfaces on IPTVs and smartphones, new named entity categorization systems and recognition technologies are required. In particular, constant renewal of a named entity dictionary is necessary for cases where new named entities are continuously generated such as song, drama, and movie titles Furthermore, since title named entities are commonly used as abbreviati ons, maintenance of a dictionary is inevitably costly  Wikipedia \(www.wikipedia.org\ is an open encyclopedia where numerous editors continuously write and edit while everyone can freely access such information, and as such can be useful as a massive knowle dge source  In this paper, a title named entity recognition model 
utilizing Wikipedia is proposed. Constant renewal is possible for the proposed model since the named entity dictionary is generated using Wikipedia. Moreover, an abbreviation dictionary is g enerated in order to recognize title named entities described as abbreviations. The statistics based model CRF Conditional Random Fields\ was used as the named entity recognition process, and vocabulary, part of speech, the named entity dictionary, and an  abbreviation dictionary were used as features   II  R ELATED W ORK  Named entity recognition research mainly utilizes statistics based classification models. The most widely used statistics based models include MEMM \(Maximum Entropy Markov Model\, CRF Conditional Random Fields\, and SVM \(Support Vector Machine\ [1  2    Unfortunately, there 
were  not many  s tudies on title named entity recognition  recently In 3   ti tl ed  named entity recognition for English was proposed. This paper presented a method inv olving the repetition of pattern expansion using dictionary information and expansion of the dictionary using the expanded pattern information. As a study on analyzing abbreviations 4  an aly ze d a b b r ev ia ti o n s b as ed  on the finding that most English abbrevi ations are composed of capital letters and that the initial letter of each word is used for arranging during abbreviation generation 5  d ef in ed  an  abbreviation generation rule for Korean to establish an abbreviation dictionary  Figure 1  Title Named Entity Re cognition Model  169 


 III  T ITLE N AMED E NTITY  D ICTIONARY  In this Chapter  we describe  a method that generates  title named entity and abbreviation dictionary  using Wikipedia and web search A diagram of the overall composition of the proposed model is shown in Fig. 1   A  Title Named Entity Dictionary Construction using Wikipedia  New words are constantly created with the passing of time and this creates the burden of continuously renewing and updating the named entity dictionary. To solve this problem data from Wikipedia  are used in this study to generate a named entity dictionary. Pages of Wikipedia include classification information tags, and thus the classification of the named entity of the corresponding page can be identified through the classification information. F ig   2 shows the classification information tag for the Wikipedia page of the TV program \221I am a Singer  222 as an example. It can be seen through the classification information that \221I am a Singer\222 is under the classification of \221Program   222  Figure 2  E xample of a  Wikipedia page  Na neun Gasooda    In this study, the 10 classifications of \221Title   222 221Song   222, \221Program   222, \221Movie   222 221Drama   222, \221Cartoon   222, \221Novel   222 221Animation   222, \221Book   222, and \221Essay   222 from the Wikipedia classification information were selected as the classifications to determine a title named entity. The titles of pages categorized within the selected classifications were used to construct the title named entity dictionary. As a result, a total of 7751 na med entities were extracted. Here, extraction is performed by comparison with the last syntactic word of the classification information tag   B  Abbreviation Generation of Title Named Entity  In actuality, there are numerous cases where a title named entity is  used as an abbreviation in a natural language. For example, \221Na gasoo   222 is used as an abbreviation for 221Na neun Gasooda     222 while \221Moo do   222 is used for \221Moo han do jun    222. When a title named entity appears as an abbreviation like these exa mples, they cannot be applied to the title named entity dictionary. In this study, the abbreviation rule studies in 5  w er e u s ed  to g en er a te  an abbreviation candidate for each title named entity. Two abbreviation rules were used and they are shown in Tabl e 1 When the title is longer than 5 syntactic words, only the first 5 syntactic words were extracted  TABLE I  A BBREVIATION G ENERATION RULE  Rule1  Multiple syntactic word combination type  disc  For title named entities composed of more than 2 syntactic words abbreviation candidates are generated using the 2 or more initial morpheme syllable, or a combination of each syntactic word comprising the title named entity  exam  Na neun Gasooda       NNP JX NNG VCP EF   Na Ga   Na Gasoo     Woori Gyulhon heteoyo      NP  VV EP EF   Woo Gyul Woo Gyulhon    Rule 2  Single syntactic word syllable combination type  disc  For title named entities composed of a single syntactic word, among the morphemes that compose the title named entity, a combination of the initial syllables of 2 or more morphemes is used to generate abbreviation candidates  exam  Moo han do jun      NNG NNG   Moo do     Among the generated abbreviation candidates, there are a number of candidates that are not used in real life. It is thus necessary to verify whether the candidates are abbreviations that are actually used. In this study, verification is performed through an Internet search under the assumption that the title named entity and the corresponding abbreviation can be found in the same page. At this point, the second stage verification is attempted  First, the target title named entity is collected by searching the Internet using a search engine, and among the search results for  each questions, 100 snippets are extracted. The abbreviation candidate that is most frequently encountered in the extracted snippets is selected as the solution abbreviation  Second, t he abbreviation selected through the first stage verification is conver sely verified through an Internet search The abbreviation is searched using a search engine and if the title named entity exists in the snippets, the abbreviation is chosen as the final abbreviation  Fig   3  shows the verification example of 221 Na neun Gasooda    222  and its abbreviation 221 Na Gasoo    222    170 


    Figure 3  Verification using web seach   IV  M ACHINE L EARNING M ODEL  A  Conditional Random Fields  In this study, a probabilistic model for title named entity recognition using C onditional R andom F ield s CRFs  6  was produced  We have used the toolkit CRF++ 0.54[7   All morphemes contain the morpheme unit boundary tags \221B\222, \221I\222 221E\222, or \221O\222. \221B\222 is the first morpheme of a title named entity, \221I\222 is the middle morpheme of a title named entity, and \221E\222 is the last mo rpheme of a title named entity. If there is only one morpheme, the \221B\222 tag is given. Also, morphemes not included in the title named entity are given the \221O\222 tag  Fig   4  shows the tagging results for \223I want to watch Na neun Gasooda       224   Figure 4  Example of a BIEO tagging  B  Feature set  The set of  basic  features for the probabilistic model includes the morpheme, part of speech and spacing  Here, t he spacing feature is  Boolean value of first morpheme in syntactic word  In addition  w e use  dependency relation of position i  as feature    Table II  shows the basic features  that are used  In this study, features were generated through the named entity dictionary generated from Wikipedia and the abbreviation dictionary generated using abbreviation rules. The named entity dictionary feature uses the Boolean value of the longest named entity a mong the named entities in a sentence that match a named entity in the title named entity dictionary   TABLE II  B ASIC F EATURES   Morpheme, POS  Spacing  unigram  bigram  dependency  position  i 2, i 1  i  i+1  i+2  i 2, i 1  i 1, i  i, i+1  i+1, i+2  i  parent  of i   i nearest child  of i  i 2, i 1, i i+1, i+2   The same method is used for the abbreviation named entity dictionary as well. Table III shows the dictionary features that are used   TABLE III  D ICTIONARY FEATURES   Title Named Entity  Abbreviation  position  i 2, i 1, i, i+1, i+1, i+2  i 2, i 1, i, i+1, i+2   V  E XPERIMENT S  In this paper, the corpus of 3808 sentences  in Korean  where the BIEO information of each title named entity was tagged, was used  We have used t h e  UTagger[8 l i b ra r y  fo r morphological analysis  and POS tagging   We also used a dependency parser    In a corpus, a total of 2056  title named entities exist 80  percent of the corpus was used for learning and 20  percent  was used for evaluation. For the evaluation of performance, the Recall, Precision, and F1 score were used as the criteria for each named entity unit. The results are  shown in Table 3  TABLE IV  RESULT OF E VALUATION  feature set  Table Column Head  Recall  Precision  F1 score  Lee[3  in English  0.584  0.522  0.552  basic feature  0 4 38  0 4 89  0 4 62  Named Entity Dic  0.7 30  0.95 2  0.8 2 6  Abbreviati on Dic  0.7 3 3  0.95 8  0.8 31   The F1 score was 81.4% when the abbreviation dictionary was not used as a feature set while the F1 score was 82.1 when the abbreviation dictionary was used as a feature set  Among the test data, for the cases where the title named entity was described as an abbreviation, an F1 score of 0% was obtained when not using the abbreviation dictionary Meanwhile, an F1 score of 75% was attained when using the abbreviation dictionary  It is unfair to compare directly Lee[3  and our model, because Lee model used cor pus in English. But it is sufficiently to explain that our model make good use to title named entity tagging  171 


VI  C ONCLUSION  In this paper, a method of establishing a title named entity dictionary using Wikipedia and an abbreviation dictionary using abbreviati on generation rules was proposed. In addition a web search based verification method for verification of the extracted abbreviations was proposed. Also, a CRFs probabilistic model using the morpheme, title named entity dictionary, and abbreviation diction ary as feature s for title named entity recognition of a natural language was proposed and a performance evaluation resulted in an F1 score of 82.1 For the named entity recognition, the dictionary has to be constantly renewed due to the generation of new  named entities however, the cost increases. On the other hand, the proposed model utilizes Wikipedia, which is continuously updated, and thus a dictionary can be automatically established with no additional cost  As a freely accessible massive knowledge source Wikipedia has potential to be applied to a diverse range of fields. For future studies, various methods to apply and utilize Wikipedia should be researched  A CKNOWLEDGMENT   This work was supported by the IT R&D program of MKE/KEIT. [10041678, The Original Technology Development of Interactive Intelligent Personal Assistant Software for the Information Service on multiple domains  R EFERENCES     S eong Won  Kim and  D ong Yul  Ra 223 Korean Named Entity Recognition Using Two level Maximum Entropy Model 224  In proceedings  of KIISE  symposium vol 2, no.1 pp 88 226 86  2008   6 \(in Korean    Changki Lee, Yi gyu Hwang, Huo Jung Oh, Soojong Lim, Jeong Heo Chung Hee Lee, Hyeon Jin Kim, Ji Hyun Wang and Myung Gil Jang  223 Fine Grained Named Entity Recognition using Conditio nal Random Fields for Question Answering 224  In proceedings  of H CLT pp 268 226 272  200 6   10  in Korean    Joo Young Lee, Young In Song and Hae Chang Rim 223 Title Named Entity Recognition based on Automatically Constructed Context Patterns and Entity Dictionary 224  In proceedings  of HCLT pp 40 226 45  200 4   10  in Korean    Kazem Taghva and Jeff Gilbreth, "Recognizing acronyms and their definitions", International Jounal on Document Analysis and Recognition Vol 1, Issue 4, pp 191 198, 1999, 5    Yeo Chan Yoon, Young In Song  Joo Young Lee  and Hae Chang Rim  Construction of Korean Acronym Dictionary Based on Korean Acronym Types  In p roceedings of Korean Society for Cognitive Science Spring Conference    pp 81 8 5  2006   6 \(in Korean    J. Lafferty A. McCallum and F. Pereira  Conditional Random Fields Probabilistic Models for Segmenting and Labeling Sequence Data," In proceedings of ICML, pp.282 289, 2001    https://code.google.com/p/crfpp     http://nlplab.ulsan.ac.kr    Youngmin Park 223 A Correction Method using the projectivity for Deterministic Korean Dependency Parsing 224 Master 222 s thesis of Sogang University 2012    172 


sample sets Burst component 75 p  q t t       R 88 p 85 to with a mean value of B Fig 2 Forecasting model for network resource and KPI period component per period The value of seasonality component in each position Fig 3 Procedure of RRC connection setup KPI to evaluate LTE accessibility performance Moreover we select the following typical LTE capacity/resource indicators Average number of connected users per cell DL physical resource blocks usage UL physical resource blocks usage Physical DL control channel usage Paging resource usage Average number of active users in the UL buffer per cell Average number of active users in the DL buffer per cell Physical random access channel usage In the simulation we are using real AT&T and Verizon historical data The numerical result is shown in Table III In the table the Mean Absolute Percentage Accuracy MAPA in training set ranges from 79 71 q can further be decomposed to stationary time series indicates a signi\223cant change from normal trend which is caused by external known or unknown factors Those known factors to be happening are predictable such as gabling day festivals game day etc The unknown factors which are unpredictable may be caused by some random events with small probability For example in a short period many users make calls simultaneously which generate huge traf\223c shortly Random component RS 5  V N UMERICAL R ESULTS To evaluate the performance of the proposed relational and forecasting model we select the RRC connection setup success rate as a sample KPI to deploy simulations The RRC connection establishment is used to make the transition from RRC Idle mode to RRC Connected mode UE must make the transition to RRC Connected mode before transferring any application data or completing any signaling procedures The RRC connection establishment procedure is always initiated by the UE but can be triggered by either the UE or the network The signaling for RRC connection establishment is shown in Fig 3 The entire procedure is completed using only RRC signaling A 3-way handshake is used to move the UE into RRC connected mode This KPI describes the ratio of all successful RRC establishments to RRC establishment attempts for UTRAN network and is used to evaluate UTRAN and RNC or cell admission capacity for UE and/or system load It\220s a primary q B5.3.pd f 82  which indicates the 223tted values of the resource indicators in their respective training set shows very low variance between true and 223tted values The test set\220s MAPA ranges from  which is not far from the mean value in training set This indicates that the reliability of the model is very good because the MAPA does not drop much from training to test set   RN 1 0 0 6 4 4 WOCC 2014  is given by the mean value of data points at the same position in the   1 to with a mean value and white noise 


4 2014 IEEE Wireless Telecommunications Symposium for test set 88 in training and in test set As a whole any given LTE KPI is obtained through step 19 17 2010 IEEE 71st Vehicular Technology Conference 9 50 79 23 19 89 1 Journal of Electrical and Computer Engineering 84  vol.14 no.2 2012  Na v aie K and Sharaf at A R 215 A frame w ork for UMTS air interf ace analysis,\216 B5.3.pd f Doctor Dissertation of Stevens Institute of Technology 71 for training and Wireless Telecommunications Symposium Fig 4 Overall MAPA results VI C ONCLUSIONS This paper investigates the methodology for evaluating the LTE network capacity and performance from the aspect of big data analytics and statistical modeling In this paper we develop a novel mode to evaluate LTE network performance based on traf\223c measurements and service growth trends A relational algorithm is developed to obtain the relationship between LTE network resources and LTE KPIs and a forecasting algorithm is developed to trend network resource consumptions based on traf\223c and service growth To evaluate the validity of this study case studies have been done using data gathered from AT&T and Verizon The numerical results show that the proposed methodology has a high accuracy robustness and reliability Moreover this model can be a generalized model to study the performance of other networks such as UMTS GPRS and CDMA for the reason that the relationship between a network KPI and its associated network resource indicators in any given networks can be derived based upon the relational model Since UMTS and CDMA are still mainstreams among mobile operators globally it may be of more signi\223cant value to mobile operators if 216downgrading\216 this model to study 3G and even 2G network performance and capacity issues R EFERENCES  Y e Ouyang M Hosein F allah Sanqing Hu Y ong Ren Y irui Hu Zhichang Lai Mingxin Guan and Wenyuan Lu 215A Novel Methodology of Data Analytics and Modeling to Evaluate LTE Network Performance,\216 International Journal of Interdisciplinary Telecommunications and Networking where relational model and forecasting model are utilized So the MAPA of overall analytical model will be 75 in training set and 84  2002  Szlo v encsak A Godor  I Harmatos J and Cinkler  T  215Planning reliable UMTS terrestrial access networks,\216 IEEE Transactions on Mobile Computing IEEE Transactions on Vehicular Technology  vol.2 no.2 2010 6 TABLE III F ITTING ALGORITHM FOR TREND COMPONENT  vol.62 no.5 2013  Amzallag D Bar Y ehuda R Raz D and Scalosub G 215Cell Selection in 4G Cellular Networks,\216  vol.40 no.1 2002  Khan A Lingfen Sun and Ifeachor  E 215QoE Prediction Model and its Application in Video Quality Adaptation Over UMTS Networks,\216 Moreover the goodness of 223t of all resource indicators are above 79 in test set The forecasting model indicates the MAPA is IEEE Transactions on Multimedia Fifth World Congress on Intelligent Control and Automation   to  which is also an optimal result showing that the independent variables in terms of those  2014  Shiao-Li Tsao and Chin-Ching Lin 215Design and e v aluation of UMTSWLAN interworking strategies,\216  vol.28 no.3 2003  Ikuno J.C Wrulich M and Rupp M 215System Le v el Simulation of L TE Networks,\216  2010  Ouyang Y e 215T raf 223c Dimensioning and Performance Modeling of 4G LTE Networks,\216  vol.12 no.7 2013  Li W ang Zengzhi Li and Chengqian Song 215Netw ork traf 223c prediction based on seasonal ARIMA model,\216  2010  Ouyang Y e and M Hosein F allah 215 An Analysis of T raf 223c and Throughput for UMTS Packet Core Networks,\216  2004  Y e Ouyang and F allah M.H 215 A performance analysis for UMTS pack et switched network based on multivariate KPIs,\216 4 IEEE Communications Magazine 2002 IEEE 56th Vehicular Technology Conference  2012  Engels A Re yer  M Xiang Xu Mathar  R Jietao Zhang and Hongcheng Zhuang 215Autonomous Self-Optimization of Coverage and Capacity in LTE Cellular Networks,\216 components can well explain the variance of each resource indicator The relational model shows the MAPA is Resource Indicators MAPA Training Set MAPA Test Set Goodness of 223t Average number of connected users 0.870 0.794 0.825 Downlink PRB Usage 0.863 0.787 0.810 Uplink PRB Usage 0.830 0.728 0.790 PDCCH Usage 0.838 0.758 0.802 Paging Resource Usage 0.845 0.722 0.781 Average number of active users in the downlink buffer 0.880 0.775 0.811 PRACH Usage 0.821 0.716 0.759 Mean value 0.850 0.754 0.797      WOCC 2014 


2014 International Conference on Computing for Sustainable Global Development INDIACom Type Detection Rate As per the third iteration, the detection rate of the one-stop is much better than SNORT. The results of the third iteration are shown as under in table VIII  TABLE VIII: DETECTION RATE Iteration 3 Also as per the results, there is decrease in the rate of false alarm generation. The results of false alarm generation for second iteration are as shown in table below  TABLE VII: FALSE ALARM  C       SNORT SNORT SNORT 98.2 98.4 98.6 98.8 99 99.2 99.4 Snort Onestop Journal of Security Engineering\ 5, no. 4 \(2008\: 8 http://www.sersc.org/journals/JSE/vol5_no4_2008/3.p   Successful Real-Time Security Monitoring, Riptech  Inc. white paper September 2001 4 iteration 3  A CKNOWLEDGMENT  I would like to thanks Prof.S.M.K.Quadri for his valuable support R EFERENCES   1 Lazarevic, A., Ertoz, L., Kumar, V., Ozgur, A., & Srivastava, J. \(2003 May\. A comparative study of anomaly detection schemes in network intrusion detection. In Proceedings of the third SIAM international conference on data mining  \(Vol. 3,  pp. 25-36\. Society for Industrial Applied 3 onestop Fig. 8 Detection Rate  Also there is great decrease in the false alarm rate, which is important as far as intrusion detection systems are concerned The figures of false alarm generation at third iteration are as given in table below  TABLE IX: FALSE ALARM After third iteration the results came same for other iterations too. i.e detection rate = 99.2% and false alarm rate =0.99 VIII 1.33 1.22 98.6 99.2 1.33 0.99                                    Fig. 7:False Alarm detection rate snort snort 804 onestop Fig. 9:  False Alarm  2 SAKURAI, Kouichi, and Tai-hoon Kim. "A Trend in IDS researches  One-stop One-stop One-stop Anderson, James P. Computer security threat monitoring and surveillance. Vol. 17. Technical report, James P. Anderson Company Fort Washington, Pennsylvania, 1980 Type Percentage of False Alarm Type Percentage of False Alarm C ONCLUSION  The current research if focused on mitigating false alarm and design of a new hybrid model which will adopt both the techniques. In this paper, we have proposed a new hybrid model which combines both the modules i.e anomaly and signature based also we have added few more modules which will check for false alarm and will add new rules to the signature database automatically thus we can say, it is a model which will detects novel intrusion made on the system and is reducing the number of false alarm. In future, we will try to implement the model for intrusion preventions also. We will also try to build the model using machine learning also 


Zanero, Stefano. \215Analyzing TCP Traffic Patterns Using Self Organizing Maps\216. Image analysis and Processing-ICIAP 2005 Springer Berlin Heidelberg, 2005. 83-90  2014 International Conference on Computing for Sustainable Global Development INDIACom L. Kuang, "DNIDS: A Dependable Network Intrusion Detection System Using the CSI-KNN Algorithm", Master thesis, Queen\220s University Canada, September 2007   5 Haines JW, Lippman R, Fried DJ, Zissman MA, Tran E, Boswell SB 1999 DARPA intrusion detection evaluation: design and procedures MIT Lincoln Laboratory Technical Report, TR-1062, Massachusetts USA; 2001  Bloedorn, E., Christiansen, A. D., Hill, W., Skorupka, C., Talbot, L. M Tivel, J. \(2001\. Data mining for network intrusion detection: How to get started. MITRE Technical Report 7 Rakes, T. R., Deane, J. K., & Paul Rees, L. \(2012\. IT security planning under uncertainty for high-impact events. Omega, 40\(1\, 79-88 9 Tavallaee, Mahbod, et al. "A detailed analysis of the KDD CUP 99 data set." Proceedings of the Second IEEE Symposium on Computational Intelligence for Security and Defence Applications 2009. 2009  Gudadhe, M., Prasad, P., & Wankhade, K. \(2010, September\. A new data mining based network intrusion detection model. In Computer and Communication Technology \(ICCCT\, 2010 International Conference on \(pp. 731-735\. IEEE  Mahoney MV, Chan PK. An Analysis of the 1999 DARPA/Lincoln laboratory evaluation data for network anomaly detection. Recent advances in intrusion detection. In Sixth international symposium, Raid 2003, Pittsburgh, PA, USA; 8\20510 September 2003. p. 220\20539  Bilal Maqbool Beigh, Uzair Bashir and Manzoor Chahcoo. Article Intrusion Detection and Prevention System: Issues and Challenges International Journal of Computer Applications 76\(17\:26-30, August 2013. Published by Foundation of Computer Science, New York, USA  Roesch, M. \(1999, November\ Snort: Lightweight Intrusion Detection for Networks. In LISA \(Vol. 99, pp. 229-238 6 805 Carl, Glenn, et al. "Denial-of-service attack-detection techniques Internet Computing, IEEE 10.1 \(2006\2-89                       Chandola, V., Banerjee, A., & Kumar, V. \(2009\. Anomaly detection: A survey. ACM Computing Surveys \(CSUR\ 41\(3\ 15  O'Mahony, Michael P., Neil J. Hurley, and Gu\351nol\351 CM Silvestre Recommender systems: Attack types and strategies." AAAI. 2005  Wu, H., Schwab, S., & Peckham, R. L. \(2008\ U.S. Patent No 7,424,744. Washington, DC: U.S. Patent and Trademark Office 8 Ghorbani, Ali A., Wei Lu, and Mahbod Tavallaee. "Evaluation Criteria Network Intrusion Detection and Prevention. Springer US, 2010. 161183  Denning, D. E. \(1987\. An intrusion-detection model. Software Engineering, IEEE Transactions on, \(2\, 222-232  Beigh, B. M., & Peer, M. A. \(2011\. Intrusion Detection and Prevention System: Classification and Quick  Patcha, Animesh, and Jung-Min Park. "An overview of anomaly detection techniques: Existing solutions and latest technological trends Computer Networks 51.12 \(2007\: 3448-3470  Lippman R, Haines JW, Fried DJ, Korba J, Das K. Analysis and results of the 1999 DARPA off-line intrusion detection evaluation. In Proceedings of the third international workshop on recent advances in intrusion detection, Toulouse, France; 2\2054 October 2000. p. 162\20582  Kendall K. A database of computer attacks for the evaluation of intrusion detection systems. Master Thesis, Massachusetts Institute of Technology, Lexington, MA; 1999  Data set, DARPA intrusion detection evaluation data set;1999.<http://www.ll.mit.edu/IST/ideval/data/1999 1999_data_index.html  


1 2 3 3 3 3 1 3 1 1 1 1 1 1 2 1 1 1 1 1 2 G G G G G G G c g f k G G G h h G G i G G G G G G V V v u V v V v v G v v v G V v G u v u v V v v V V E E V V E V v V E v V u V u v V V u T T s V T s  T T V G G i E E E E u E i i i i i i i i i i i i i i i i i i i i i i i i i i i i i d d i d d i d i i i i i i i i i i i i 212 i i 212 i i f G   and and and and and and and can be handled similarly In such a way Type-2 nodes can be effectively reduced in is generated from two can be computed In c G c G c G in in in itself is an is still a vertex cover of in line 4 of Algorithm 3 by joining in into into in in the in the next iteration of  In the following we introduce techniques to re duce the nodes and edges when constructing G  Thus the key point to reduce the I/O cost of the  when adding nodes into from  before adding can be removed from is removed can be removed from and Get SCC and there is no need to add v G v G v G v G v G v G v G v G v G v G v G h G h G h G h G E in each graph in each graph Example 6.1  when generating can be removed because  we check whether Node Reduction has been covered by node b e l j VII I/O C OST M INIMIZATION In this section we show how to optimize our contractionexpansion based is a Type-1 node from constructed in the from which is computed using can only hold                                                                                                                                                                             Type-2 nodes are order sensitive i.e if node in line 8-9 of Algorithm 3 for each edge smallest nodes using operator line 2 of Algorithm 3 A sequential scan of Fig 5 shows the process of the graph expansion phase to expand the graphs in order of  when constructing  if there does not exit another node may not be a Type-2 node Note that our aim is to reduce nodes in To remove Type-1 node  we only keep the nodes with both using a dictionary  In addition it is straightforward that each edge denoted by light gray nodes and has already been computed using Algorithm 3 the following two types of nodes can be removed from are Type-2 nodes after scanned suppose G are the removed nodes when constructing denoted by dark gray nodes In with a single node Finally there are two in Algorithm 3 Such an operation does not generate any extra I/O cost in Algorithm 3 In order to reduce Type-2 nodes when scanning all edges in which many not reside entirely in the main memory Suppose algorithm on approach by further reducing the I/O cost The I/O cost can be reduced in two ways 1 to reduce the number of graphs constructed in the graph contraction phase and 2 to reduce the number of nodes and edges for each graph s in later iterations A Type-2 node th graph contraction phase without increasing the I/O complexity Although sSCC g g f i i c k b l k i j G c d e b a l g f h i k j m SCC f g e c f c e f g b i l j k d or 0 Any node with              6 4                       1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 212    Thus     in later iterations as  Since SCC SCC SCC SCC SCC SCC SCC nodes respectively has been added into  Such edges can be reduced in a lazy way when generating Type-1 For a node Type-2 For a node is a valid node set of with  Similarly the with with with will be removed in with G G needs to be added after line 2 of Algorithm 3 to eliminate parallel edges in  0 We develop two methods to reduce the edge size in order to reduce the intermediate results We will discuss the ef\336ciency in our performance studies Firstly for parallel edges with the same form out out out out out out out out 0 deg deg deg deg deg deg deg deg nbr nbr nbr nbr nbr nbr nbr nbr u G u v u v u v u v u w v>u in in in in in in in in in in in i i i i i i i i i i i i i  all nodes nodes in memory since a node with higher degree are less possible to be removed from 4 3 2 1  However such a solution needs to check whether Semi u>v generated in the graph contraction phase in Fig 4 The dashed circles in each graph algorithm is to reduce the number of nodes and number of edges cannot be combined with other nodes to form new  According to the node selection condition in Lemma 5.1 without generating any extra I/O cost in Algorithm 3 can be removed because when  Given graph such that Lemma 7.1 can reside entirely in the main memory By doing so we can reduce the number of Type-2 nodes in Edge Reduction can be removed from 0 SCC SCC SCC SCC SCC SCC SCC SCC SCC SCC SCC SCC SCC SCC SCC SCC SCC SCC s are computed namely 002 212 002 002   024    002 002 002 004 004   002       wehave to make sure that th iteration According to the stop condition of graph contraction reducing the number of graphs is equivalent to reducing the number of nodes Omitted due to lack of space is an  and there is no need to include again The situation for to cover the edge Given  0  Fig 5 Graph Expansion Example computed according to Lemma 6.4 This can be done in line 8 of Algorithm 4 by checking whether 216 if  By applying the  for node s of node  for node  Thus node with a single node in without introducing new I/O cost thus we only reduce those Type-1 and Type-2 nodes that are easy to be identi\336ed The following lemma can be used to reduce Type-1 nodes or or  we only maintain the top  only one of them needs to be kept in 212 1 2  suppose  200  200   A Type-1 node  4 3 2 1 4 3 3 4 3 2 1 1 1 1 G E  G G V V V V E V V v V V v v V V   V V V  V E  E w            0  0     and nodes  If so edge  we introduce two ways to reduce the number of edges when generating  it is possible that G   017      Proof Sketch Ext Ext 002 002 002 002 g G G  


Size of Largeincrease The reasons are twofold Firstly when increases according to the node selection scheme to construct decrease There are two reasons Firstly when the memory size increases the stop condition for graph contraction is easier to be satis\336ed since more nodes can 336t in memory Secondly when the memory size increases the costs of the external sorts in both graph contraction and graph expansion phases decrease  Average Degree Number of Largeincreases the time and I/O consumptions for both increases the number of iterations in graph contraction increases This is because when number of edges increases the cost to sort and scan edges in each iteration increases thus more time and I/Os are consumed in each iteration                                     2 4 1 u E  V v E    u v  G  V E M V M V K G V V M KB Range 25M,50M,100M,150M,200M 2,3,4,5,6 200M,300M,400M,500M,600M 400K 8K 20,30,40,50,60 30,40,50,60,70 10K to in the operator in line 4 both in line 4 and augmented in all nodes in in line 5-7 VIII P ERFORMANCE S TUDIES In this section we conduct experimental studies by comparing four external algorithms for is the number of bytes to keep a node in memory We set the max time cost to be 24 hours If a test does not stop in the time limit we will denote it using until all nodes form an to Size of Small The results are shown in Fig 7\(a and Fig 7\(b for time and I/O costs respectively When the memory size increases the time and I/O costs for both 100M 400M 40 1 1 50 TABLE I R ANGE AND D EFAULT V ALUE FOR P ARAMETERS Parameter in all cases since more nodes/edges are removed in each iteration in Operator  operator speci\336es a unique total order among all nodes in the graph operator in line 9 when generating algorithm needs to hold and and and and and used in introduced in 26  w h i ch is cu r r e n tly th e m o s t I O ef 336cien t sem i e x t er n a l algorithm for and  Secondly when and out out out out out out out Fig.6\(a and Fig 6\(b show the time and I/O costs when varying the number of edges of WEBSPAM-UK2007 from 20 to 100 respectively v G v G v G v G v G v G v G v G v G v G v G v G v G v G 002 212 327 327  002 002 327 327 327 327 327       2 cannot stop in the time limit even if the graph contains only 20 of the edges When Size of 8 our e x t e rnal cont ract i on-e xpans i o n b as ed algorithm Algorithm 2 and our algorithm by applying the optimization techniques introduced in Section VII in new edges are added into In Algorithm 3 in order to make use of the new s The graphs contain nodes from 25M to 200M with average degree varying from 2 to 6 A synthetic graph is generated as follows We construct a graph computation namely the external contraction based 13 t he e x t e rnal DFS based by randomly selecting all nodes in SCC SCC SCC SCC SCC SCC  we apply the algorithm computation The  Finally additional random nodes and edges are added to the graph The parameters for synthetic datasets and their default values are shown in Table VIII outperforms 1PB 1PB since it cannot stop in all cases Memory Size need to be computed in Ext Ext Ext Ext EM Ext EM Ext Ext Ext Ext Ext Ext Ext Ext    3  002  For the semi-external algorithm  In our experiments we use a real large web graph and several synthetic datasets The real web graph is WEBSPAM-UK2007 4  which consists of 105,896,555 web4 barcelona.research.yahoo.net/webspam/datasets/uk2007/links   4H   8H   12H   16H   20H   24H   INF   20   40   60   80   100   Time\(hour Ext-SCC-Op   Ext-SCC                           DFS-SCC                 Largein in in in in in in 2 plus one disk block in the main memory that is Size of MassiveNumber of Massive\(a Time Vary Memory   1M   2M   3M   4M   5M   6M   7M   8M   INF   400M   600M   800M   1G   Number of I/Os Ext-SCC-Op   Ext-SCC                       DFS-SCC               iff one of the following three conditions holds 1 b I/Os Vary Memory Fig 7 WEBSPAM-UK2007 Varying Memory Size pages in 114,529 hosts in the UK domain The graph contains 105,895,908 nodes and 3,738,733,568 edges with the average degree 35 per node For synthetic data we generate 3 different kinds of datasets denoted Massive.The 4K,6K,8K,10K,12K 6K,8K,10K,12K,14K u w u G u G u G u G u G u G u G  For any  containing different sizes of and Small 327     V i i i i i d d d i i De\036nition 7.1 DFS Op Op Op Op Op Op 217 before adding  The default memory size is  In our experiments we do not show the results of  thus more iterations are needed according to the stop condition of graph contraction in 327 Semi add Datasets Exp-1 Performance on WEBSPAM-UK2007 in Algorithm 3 more nodes will be selected in id id 200K,300K,400K,500K,600K as follows DFS SCC SCC SCC SCC SCC SCC SCC SCC SCC SCC SCC SCC SCC SCC SCC SCC SCC SCC SCC SCC SCC SCC SCC SCC SCC SCC SCC SCC SCC  By considering  All the algorithms are implemented using Visual C 2005 and tested on a PC with Intel Core2 Quar 2.66GHz CPU and 3.5GB memory running Windows XP The disk block size is  according to Theorem 5.3 nodes with small degrees are removed when constructing 256 400   256 400 Default INF 327 deg deg deg deg deg deg deg deg deg deg deg deg deg deg deg deg deg deg deg deg deg  4 w V V E V G V G   u  v V G G E E E E G where can be further reduced We rede\336ne the operator Number of SmallD M s s s i i i i i i i 1 1 1 1 1 1 u>v 4  Secondly using operator  and for each removed node  s 336rst Then we add edges among the nodes in an  We vary the memory size from                     a Time Vary Graph Size   1M   2M   3M   4M   5M   6M   7M   8M   INF   20   40   60   80   100   Number of I/Os Ext-SCC-Op   Ext-SCC                           DFS-SCC                 b I/Os Vary Graph Size Fig 6 WEBSPAM-UK2007 Varying Graph Size Percent   4H   8H   12H   16H   20H   24H   INF   400M   600M   800M   1G   Time\(hour Ext-SCC-Op   Ext-SCC                       DFS-SCC               


SCC SCC SCC SCC SCC SCC SCC SCC SCC SCC SCC increases the time and I/O costs for both dataset dataset The results for both Largedatasets are similar to those in the Massive When either the average   800 105 895 908 8  256  847 200 600 25 200 50 12 30 70 f I/Os SmallTo test the synthetic data we vary the memory size M   K  M M M M M M M M M M D D D D K s s s of nodes from 2 to 6 The time and I/O costs on Largedo not have signi\336cant impact on the ef\336ciency of our algorithms as long as by 20 on average for both time and I/O consumptions Fig 8\(c and Fig 8\(d show the results on Large 1 1 4  the costs for both d I/Os Vary Degree   c Time Vary Degree   25 327         Size and G M G M V V V V V V V K E G Wevary the node size decrease sharply The reason is that in order to process the graph using in all test cases to to is smaller the decrease rate is larger This is because when is smaller more iterations are needed for both to  and the time and I/O costs are shown in Fig 9\(a and Fig 9\(b respectively When to to respectively Fig 9\(g and Fig 9\(h show the time and I/O costs when varying the number of 4   s and and and and and and and and Wevary the average degree Size   Size   Time\(hour Number of I/Os Time\(hour Number of I/Os Time\(hour Number of I/Os Time\(hour Number of I/Os Time\(hour Number of I/Os Time\(hour Number of I/Os Time\(hour Number of I/Os 2H   3H   4H   5H   INF   200M   300M   400M   500M   600M   Ext-SCC-Op   Ext-SCC                           DFS-SCC                 200K   400K   600K   800K   1M   1.2M   INF   200M   300M   400M   500M   600M   Ext-SCC-Op   Ext-SCC                           DFS-SCC                 1H   2H   3H   4H   5H   INF   200M   300M   400M   500M   600M   Ext-SCC-Op   Ext-SCC                           DFS-SCC                 200K   400K   600K   800K   1M   1.2M   INF   200M   300M   400M   500M   600M   Ext-SCC-Op   Ext-SCC                           DFS-SCC                 1H   2H   3H   4H   5H   INF   200M   300M   400M   500M   600M   Ext-SCC-Op   Ext-SCC                           DFS-SCC                 200K   400K   600K   800K   1M   1.2M   INF   200M   300M   400M   500M   600M   Ext-SCC-Op   Ext-SCC                           DFS-SCC                 8H   12H   16H   20H   INF   25M   50M   100M   150M   200M   Ext-SCC-Op   Ext-SCC                           DFS-SCC                 1M   2M   3M   4M   5M   INF   25M   50M   100M   150M   200M   Ext-SCC-Op   Ext-SCC                           DFS-SCC                 2H   4H   6H   8H   10H   INF   2   3   4   5   6   Ext-SCC-Op   Ext-SCC                           DFS-SCC                 400K   600K   800K   1M   1.2M   INF   2   3   4   5   6   Ext-SCC-Op   Ext-SCC                           DFS-SCC                 2H   3H   4H   5H   INF   4K   6K   8K   10K   12K   Ext-SCC-Op   Ext-SCC                           DFS-SCC                 400K   600K   800K   1M   INF   4K   6K   8K   10K   12K   Ext-SCC-Op   Ext-SCC                           DFS-SCC                 2H   3H   4H   5H   INF   30   40   50   60   70   Ext-SCC-Op   Ext-SCC                           DFS-SCC                 400K   600K   800K   1M   INF   30   40   50   60   70   Ext-SCC-Op   Ext-SCC                           DFS-SCC                 e Time Small,andwhen increase This is because when n in Synthetic Data in Synthetic Data DFS DFS DFS Exp-5 Vary Op Op Op Op Op Op Op Op Op Op Op Op Ext  The time and I/O costs on Massiveare shown in Fig 9\(c and Fig 9\(d respectively When decrease When f I/Os Vary Ext Ext Ext Ext Ext Ext Ext Ext Ext Ext Ext Ext Ext Ext Ext Ext Ext Ext Ext Ext Ext Ext Ext Ext  V  V Number in Synthetic Data c Time Large\(a Time Vary e Time Vary cannot stop in limited time in all cases Similar to the results on the real dataset in Fig 7 when dataset and Fig 8\(e and Fig 8\(f show the results on Smallconsume less than 1 hour increases the time and I/O consumptions for both consumes more than 20 hours while both are the number of nodes and the number of edges of the graph As a result the size of memory is needed thus when the memory size is dataset are shown in Fig 8\(a and Fig 8\(b respectively dataset and this is true for all the remaining test cases when varying other parameters in synthetic data In the following due to the lack of space we only show the test results on the Large and in the graph contraction phase the contraction rate decreases when the number of iterations increases since the graph becomes denser with larger number of iterations is larger and the cost on each iteration to scan and   Exp-4 Vary Average Degree in Synthetic Data from from increases the time and I/O consumptions for both and the number of outperforms outperforms cannot stop within the time limit when outperforms in all cases When the memory increases from increases the time and I/O costs for both When a Time Massive\(b I/Os Massiveis larger is larger the gap between is larger This is because when number of edges is larger more edges can be pruned by the edge reduction techniques used in increases the number of edges increases As a result more iterations are needed and larger cost is consumed in each iteration as analyzed in Exp-1 when varying the graph size size increases or the number of are not in\337uenced much As anal yzed in Section VII the key factors that in\337uence the cost of Num   Num Fig 9 Synthetic Data Largecan be directly applied on the original graph to output all                       Fig 8 Synthetic Data Vary Memory Size outperforms  and Smallincrease This is because the stop condition for graph contraction is harder to be satis\336ed when  sort nodes/edges is larger when   Fig 9\(e and Fig 9\(f show the time and I/O costs when varying the average no iteration is needed and size from SCC SCC SCC SCC SCC SCC SCC SCC SCC SCC SCC SCC SCC SCC SCC SCC SCC SCC SCC SCC SCC SCC SCC SCC SCC SCC SCC SCC SCC SCC SCC SCC SCC SCC SCC SCC SCC SCC SCC SCC SCC SCC SCC SCC SCC SCC SCC 1H   4H   200K   1H   200K   1H   200K   sfrom b I/Os Vary g Time Vary h I/Os Vary        218 d I/Os LargeSemi Semi Exp-2 Vary Memory Size Exp-3 Vary Node Size   


are 336xed This also explains why the results in the three datasets Massiveis a primitive operation in directed graph exploration which has been studied for both internal memory model and external memory model In the internal memory model strongly connected components of a directed graph can be computed in s for a directed graph with the assumption that the nodes of the graph cannot reside entirely in memory We overcome the de\336ciencies of the existing external    sort sort computation algorithms and propose a new two-phase algorithm with graph contraction followed by graph expansion We analyze the I/O cost of our approach and show that our algorithm can signi\336cantly reduce the number of random I/Os We propose techniques to further reduce the I/O cost of our algorithm and con\336rm the I/O ef\336ciency of our approaches using extensive experiments on both real and synthetic web scale graphs The work was supported by grant of the Research Grants Council of the Hong Kong SAR China No 418512 R EFERENCES  J  A bello A  L  Buchs baum  a nd J  W e s t brook A f unctional a pproach to external graph algorithms s of a graph Zhang et al 26 i mpro v e s uch a n a l gori t h m by constructing and maintaining a special in-memory spanning tree of the graph The semi-external algorithms 23 an d  2 6  are introduced in details in Section III Other than the problem of 336nding time based on DFS 12  A naive way to externalize the internal DFS algorithm requires s Such an algorithm may end up an in\336nite loop and cannot compute all  33\(2 2001  H  Y ildir im  V  C haoji and M  J  Z aki Grail Scalable reachability index for large graphs s repeatedly until the graph 336ts in memory then an internal memory algorithm is used to 336nd the 336nal sor DFS tree on external directed graphs several problems in the external memory model are studied in the literature Dementiev et al 14 p ro vi de an i m pl ement a t i o n o f a n e xt ernal m emory minimum spanning tree algorithm based on the ideas of 22 which performs extremely well in practice even though theoretically inferior to the algorithms of 1   1 0   A jw an i e t al 4 6  propos e i mpl e ment at i ons of e x t e rnal undi rect ed breadth-\336rst search algorithm with the idea from 18 Ul rich Meyer et al 20 21  19  des i gn and i mpl e ment pract i c al I/O-ef\336cient single source shortest paths algorithm on general undirected sparse graphs Surveys about designing I/O ef\336cient algorithms for massive graphs can be found at 24 5  X C ONCLUSIONS In this paper we study I/O ef\336cient algorithms to 336nd all  3\(1 2010  J  Hellings  G  H  F letcher  and H  H averkort Ef\336cient external-memory bisimulation on dags In  3\(1 2010  Z  Z h ang J  X Y u  L  Q in L  C hang a nd X L i n I/O e f 336 cient Computing sccs in massive graphs In scan by maintaining the list of nodes that should not be traversed using tournament trees 17 and b uf fered repos i t o ry t rees 8  respectively Despite their theoretical guarantees these algorithms are considered impractic al for general directed graphs that encountered in real applications Cosgaya-Lozano and Zeh 13 p res e nt a c ont ract i o n b as ed al gori t h m w hi ch cont ract s V M E B V B 2 are similar as stated in Exp-2 IX R ELATED W ORK Finding strongly connected components of a directed graph V G V G E G E V E E V E  14\(1 1985  T  H  Cor m en C  S tein R  L  R i v es t and C  E  L eis e r s on  2003  U Me yer a nd N Z e h I/O-ef 336c ient undirected shortest paths with unbounded edge lengths In s Both DFS based algorithm 8 and c ont ract i o n b as ed algorithm 13 a re i n t roduced i n det a i l s i n S e ct i o n III In addition to external algorithms there are semi-external algorithms for ACM Comput Surv Introduction to Algorithms IFIP TCS         Proc of ESA\22202 Proc of ESA\22206 SIAM J Comput Commun ACM Proc of SIGMOD\22213  32\(3 2002 2 A  A ggar w a l a nd J  S  V itter  T h e i nput/output com p le xity of s o r ting and related problems  31\(9 1988  A  V  A ho J  E  Hopcroft a nd J  D Ullm an I/Os Chiang et al 10 propos e a n a l gori t h m with I/O complexity  Addison-Wesley 1983 4 D  A jw ani R D e m e ntie v  and U  M e y er  A com putational s tudy of external-memory bfs algorithms In  2006  D  A jw ani a nd U Me yer   6\(1 2011  A  L  Buchs baum  M  H  G oldw a sser S Venkatasubramanian and J Westbrook On external memory graph traversal In  2002  J  S  V itter  E x ter n al m e m o r y algor ithm s and d ata s tr uctur e s   2007 7 E  A ngel R Cam p igotto a nd C L a f o r e s t  A nalys i s a nd com p ar is on of three algorithms for the vertex cover problem on large graphs with low memory capacities  1995  N  Chiba a nd T  N i s h izeki A r bor icity and s ubgr aph lis ting algor ithm s   2009  R Dem e ntie v  P  Sanders  D  S chultes  and J  F  S ibe y n E ngineering an external memory minimum spanning tree algorithm In  2012  V  K u m a r a nd E  J  Schw abe Im pro v e d a lgorithm s and d ata s tructures for solving graph problems in external memory In  2002  U  M e yer a nd V  O s ipo v  D es ign a nd im plem entation o f a pr actical i/o-ef\336cient shortest paths algorithm In  2009  U Me yer a nd N Z e h I/O-ef 336c ient undirected shortest paths In  2006  J  F  S i be yn E x ter n al connected com p onents  I n  2013 A CKNOWLEDGMENT  Algorithmic Operations Research          267        and computation which assume that all nodes of the graph can 336t in the main memory Sibeyn et al 23 propose a semi-external DFS  which can be used to 336nd all og  pages 457\320468 2012  Y  J  C hiang M T  Goodrich E  F  Gro v e  R  T am as s i a D E  V e ngrof f and J S Vitter External-memory graph algorithms In  Proc of ALENEX\22207 Proc of SIGMOD\22212 Proc of SODA\22295 Proc of SEA\22209 PVLDB Proc of ALENEX\22209 Proc of ESA\22203 PVLDB                    McGraw-Hill 2001  A  Cos g ayaL o zano a nd N  Z e h A h eur i s tic s t r o ng connecti vity algorithm for large graphs In Algorithmica LargeProc of SPAA\22202 G O O O O Algorithmics of Large and Complex Networks Data Structures and Algorithms SCC SCC SCC SCC SCC SCC SCC SCC SCC SCC SCC  Later Kumar and Schwabe 17 a nd B u chs b aum e t a l  8  i mprove the I/O complexity to  chapter 1 Design and Engineering of External Memory Traversal Algorithms for General Graphs Springer 2009  D  A jw ani U Me yer  and V  O s i po v  Im pro v e d e xternal m em ory b fs implementation In  2000  J  Cheng Y  K e  S  Chu and C Cheng E f 336 cient p roces s i ng of distance queries in large graphs a vertex cover approach In  2004  W  F a n J  L i  S  M a H W a ng and Y  W u Graph hom om orphis m revisited for graph matching  1996  K Mehlhorn a nd U Me yer  E xtern al-memory breadth-\336rst search with sublinear i/o In  2004  J  F  Sibe yn J  Abello a nd U Me ye r Heuristics for semi-external depth 336rst search on directed graphs In Proc of SWAT\22204  and SmallProc of SODA\22206 Proc of SODA\22200 219 Proc of SPDP\22296 Proc of SIGMOD\22212 


                  


             


 





 17  Jar r e n  A   B al d w i n  is  a  Ch i c a g o  n a t i v e  a n d  c u r r e n t l y  se r v e s a s t h e  l e a d  E l e c t r i c a l  En g i n e e r  a t  B a y  A r e a  s t a r t u p   Oc u l e v e  I n c   He  g r a d u a t e d  fr o m  t h e  U n i v e r s i t y  o f Il l i n o i s  wi t h  a  B  S   i n  2 0 0 9  an d  r ecei v ed  an  M  S   i n  El e c t r i c a l  En g i n e e r i n g  f r  St a n f o r d  U n i v e r s i t y  i n  2 0 1 2   Ja r r e n  d e v e l o p e d  h a r d w a r e  a n d  so f t w a r e  sy st e m s f o r  a  w i d e  ra n g e  o f  f i e l d s   i n c l u d i n g  s p a c e  s c i e n c e  s y s t e m s  a n d  m e d i c a l  de vi c e s  a s  a N A S A  A m es  i nt e r n i n t he  In t e l l i g e n t  S y s t e m s     1  2  3   4   5   6   7   8   9   10   11   12   13   


                        


                           


   












































     2 8    b 4      1 8             1 2     1  8 2  


1 9    8      2 1       1     2    8    2 3\f        


     8 D 4 9  F  \b 1 8 #J 9 1     2 1   2 #-@ 1   2 9  E 1   1   2 9      6  


    8  8   1  D 1         1 F  \b0         2 D    F  \b 1 8  9  


  1 9  1   E 1  2 9     1 1 F  \b       1    18   F   1    1 #-$+  \b  2 2  


1 D     1 #-$+.B- 0/:% .0             9 1      18    1 6     1 2  1  1  


1   6      2    1 2 E 8 D 1      1 2   1   1 #-4  #-@E     2  1  1  1       


 8     1          2 F    6   F  2   8    2 C<CC/C N\bO 5      


CD    b$44NO F P Q 6   2 b$$$ ,=\b\bA  A N,O 2 C C  b$$4N  92 2   f  9-\b$$4 B N?O  !-    91  2 1 HH111-18-N+O    -1 :3%   2     0-4 


     b N4O 2   2- \f  C b$@$ \b# >\b\b$3\b$N@O  f :.% 9 /9 \f    1  6  f 2  4   A254 


Advantages of Our M ethod Advantages of Our M ethod Exploit the memory v ertical data format utilizes slidin g windows to g form a much larger database to analyze  Flexibility in Choosing what to choose  Choosing what to choose to build the rules Computational and memory efficiency We have a team working only on this aspect 45 Associative IDS for NextGen Frameworks Dr S Dua LA Tech 45 


Preliminary Results Intra transaction Relations Data rate simulator NH-134 Mb HOP PATH update \(Y/N Inference 11.5 Y Y 2 0.120 N N      Y   n 0.345 N NH134 Y/N   Inf 1 0.150 N N 2 0 120 Y N Inter transaction Relations 2 0  120 Y N       5 5.55 0.456 Y Relations  n 0.345 N N Nmap on DMRL nmap.org 


Anticipated Outcome Anticipated Outcome Develop algorithm capable of learning from a given heterogeneous diverse Develop algorithm capable of learning from a given heterogeneous diverse data ff Dynamic algorithmic f ramework designed to shi f t modalities and sampling rates based on complex logic Flexibility of integration into the Snort intrusion detection system 47 Associative IDS for NextGen Frameworks Dr S Dua LA Tech 47 


References References Aircraft Cockpit Image courtesy USAF http://www.faa.gov htt p   www.faa g ov  air traffic  technolo gy  p g  _ gy  Acharya R Dua S Du X Sree V Chua C K Automated Diagnosis of Glaucoma Using Texture and Higher Order Spectra Features To appear in IEEE Transactions on Information Technology in Biomedicine  Du X Dua S 2011 Cancer Prognosis Using Support Vector Regression in Imaging  Modality World Journal of Clinical Oncology 2  1   44 49 Du X Dua S 2010 Salient Frame Extraction Using Support Vector Regression and Motion Features pp 5 Proc of the National Aerospace and Electronics Conference July 14 16 2010 D M P D S 2010 Di i i ti Ft d Cl ifi ti Mthd f D essaue r  M  P  D ua S  2010  Di scr i m i na ti ve F ea t ures an d Cl ass ifi ca ti on M e th o d s f or Accurate Classification 1st ed vol 7704 pp 14 Bellingham WA Proceedings of SPIE Dessauer M P Dua S 2010 Low Resolution Vehicle Tracking using Dense and Reduced Local Gradient Features Maps 1st ed vol 7694 pp 8 Bellingham WA Proceedings of SPIE SPIE 


Acknowledgements Acknowledgements Fundin g A g encies  US 4 1 Million direct fundin g g g 4 g LA BoR NIH NSF AFRL AFOSR and NASA Research Team Samuel Kasimalla Brandy McKnight Dr Pradeep Chowriappa Connor Johnson Vasanth Nair Mihir Chowriappa  Connor Johnson  Vasanth Nair  Mihir Karnik Mohit Jain and Swadheen Songmen Associative IDS for NextGen Frameworks Dr S Dua LA Tech 49 All the respective Logos belong to their owners 


Rf d Rdi R e f erence d R ea di ngs Copyright of cover pages held by respective publishers 


Thank You Questions Thank You  Questions Dr Sumeet Dua E mail sdua@latech.edu Web http://dmrl.latech.edu Associative IDS for NextGen Frameworks Frameworks Dr S Dua LA Tech 51 Image Source roadtrafficsigns.com 


