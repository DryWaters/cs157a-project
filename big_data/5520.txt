Alerts Analysis and Visualization in Network-based Intrusion Detection Systems  Li Yang, Wade Gasior, Rajeshwar Katipally Department of Computer Science and Engineering Univeristy of Tennessee at Chattanooga Chattanooga, TN 37403, USA Li-Yang@utc.edu   Xiaohui Cui Applied Software Engineering Research Group Computational Sciences and Engineering Division Oak Ridge National Laboratory Oak Ridge, TN 37831, USA cuixhui@gmail.com  Abstract The alerts produced by network-based intrusion detection systems, e.g. Snort, can be difficult for network administrators to efficiently review and respond to due to the enormous number of alerts generated in a short time frame. This work describes how the visualization of raw IDS alert data assists network administrators in understanding the current state of a network and quickens the process of reviewing and responding to intrusion attempts.  The project presented in this work consists of three primary components. The first component provides a visual mapping of the network topology that allows the end-user to easily browse clustered alerts. The second component is based on the flocking behavior of birds such that birds tend to follow other birds with similar behaviors.  This component allows the enduser to see the clustering process and provides an efficient means for reviewing alert data.   The third component discovers and visualizes patterns of multistage attacks by profiling the attackers behaviors Keywords  intrusion detection, visulization, flocking clustering I.  INTRODUCTION Intrusion detection systems are used to monitor network traffic and information system for possible security breach such as scanning, and denial of service.  IDSs trigger alerts to report them upon detection of intrusions.  These alerts are reported to network administrator who will make decision and respond to 


alerts.  The alerts generated by network-based IDS such as Snort can make it difficult for network administrators to efficiently review and respond to due to the enormous number of alerts generated on high-traffic networks. By processing alerts using clustering techniques and then visually presenting them to the network administrator, intrusion detection systems can be improved such that useful, easily understandable output is produced resulting in quicker response decisions.  Moreover using the alerts generated by current IDSs, it is not possible to detect multistage attacks [6], by which many websites are being affected. To detect or stop potential attacks there is a necessity to detect anomalous behavior from existing patterns so that we can predict the future actions by the attackers. To find the sequential patterns we need to analyze IDS alerts using data mining techniques In this paper, we describe how the visualization of IDS alert data assists network administrators in understanding the current topology of a network and quickens the process of   reviewing and responding to intrusion attempts.  The project presented in this paper consists of three primary components. The first component provides a visual mapping of the network topology that allows the end-user to easily browse clustered alerts. The second component is based on the flocking behavior of to cluster alerts based on similarity. In the third component, we visualize and predict multistage intrusions. We have considered anomaly detection, due to its ability to detect novel attacks 10]. Our system aims to discover temporal pattern of attackers behaviors, which is profiled using a rule generation algorithm. Our system uses a simple interface to display and predict the behaviors of attackers II. BACKGROUD AND RELATED WORK RAAS [2] which was designed for data abstraction uses hashing techniques is an automated way of archiving huge amounts of data generated by snort in which it maintains several tables. They have grouped alerts on temporal basis, as it is totally focused on archiving snort alerts; further analysis has to be done to detect multi-stage attacks.  Even it was an automated way of archiving data it has possible overhead of moving data between different tables.  In Snort View [1 Koike and Ohno have done exceptionally well to visualize the alerts.  The Snort view is based on 2-D time diagram and alerts are shown as icons in different colors which were 


designed to reduce false detections.  Though they have considered only essential data to visualize there is a need to analyze them further to make it more useful for network administrators in finding future attacks.  The works in [3], [4 and [5] have done well to visualize essential events from large set of alerts considering different information from each alert using different technique such as trees and graphs.  They do not concentrate on temporality, the flow of the alerts and source and destination at a time.  IDS Rain storm [7] presents a visualization tool in which more IP addresses for alerts can be seen at a time by filtering them out based on severity level of attacks.  Intrusion Detection toolkit \(IDtk  IEEE International Conference on Social Computing / IEEE International Conference on Privacy Security, Risk and Trust 978-0-7695-4211-9/10 $26.00  2010 IEEE DOI 10.1109/SocialCom.2010.120 785 glyph-based visualization tool that gives the user maximum flexibility in setting up how the visualization display represents intrusion detection data. The Time-based Network traffic Visualizer \(TNV  context and time in the process of intrusion detection analysis The TNV contains a matrix showing network activity of hosts over time. VisAlert [20] is an extensible visualization that can accept multiple data sources, including intrusion detection ID   by applying data mining techniques on these alerts, how can we generate patterns effectively with credibility for future use Anup K. Ghosh et al. attempts to learn program profiles using a feed-forward backpropagation neural network and then the technique evolves to an Elman network for recognizing recurrent features in program execution traces [10].  In [15 Klaus Juslich showed how to use alarm clustering to identify root causes.  Terran Lane et al. [17] investigate temporal sequences of discrete, unordered observations and transforms them into a metric space via a similarity measure that encodes intra-attribute dependencies.  Mathew et al. [6] have developed a tool which was aimed for detection of multistage attacks in which attack paths was concentrated. If the sequence of attacks between the source and destination is more than it might not be possible to detect the attack as it would not be possible to visualize all this sequence of events 


at a time.  We were motivated by [8, 9, 14] to use data mining techniques to find the rules and patterns by considering essential features from each alert III. ARCHITECTURE Our intrusion visualization and multistage intrusion detection system, which is based on alerts generated by Snort one of the widely used open source IDS, has a simple architecture shown in figure 1  with four steps as generation of Snort alerts, clustering and association rule generation profiling attackers behavior and finally the prediction and visualization of multistage attacks. The administrator can quickly get an overview of the traffic flow on the network and is able to see how many alerts each of these nodes has produced, when they were produced, and a detailed listing of each alert. Our work uses network traffic captured over a five day period involving over 300 different network nodes  Figure 1.  Architecture of Multi-stage Intrusion Detection and Visulization System Since Snort IDS generates thousands of alerts in small time period [12], it is hard to find which alerts lead to a serious attack in the future. The process of analyzing those generated alerts by applying flocking model to cluster alerts and data mining techniques to find multistage attacks is the key of our system. Our Intrusion Detection System is based on the alerts generated by snort and association rules created by the Apriori algorithm [11, 13]. The outcome from the third step is the basis for our systems interface where we visualize potential multistage attack to make administrators decision making more efficiently IV. VISULIZATION AND CLUSTERING The network traffic visualization component processes raw Snort alert data into a visual format that displays each node on the network and its associated alerts and connections Details of alerts are able to be presented to the network administrator, including full network addresses, service, port numbers, durations, etc. Our model as shown in Figure 2 is able to visualize a network topology and its alert traffic based raw Snort alerts. A network topology map is generated which allows the end user to efficiently access the details of network nodes and their associated alerts A. Snort Alert Processing 


Snort generates thousands of alerts in just a small amount of time, with each alert having less significant information.  It is very important to analyze them and convert them into a generalized form by considering only essential attributes such as source and destination IP address, source and destination port numbers, destination port number, time stamp of the alert and the type of the alert. Below is a sample alert from Snort  1:2000537:6] ET SCAN NMAP -sS Classification: Attempted Information Leak] [Priority: 2 07/17-09:30:09.298097 192.168.101.66:33966 -> 192.168.101.53:175 TCP TTL:49 TOS:0x0 ID:27814 IpLen:20 DgmLen:44 S* Seq: 0x3C25204F  Ack: 0x0  Win: 0x800  TcpLen: 24 TCP Options \(1  The dataset we produced have generated to build our basic model consists of around 3GB of network traffic, out of those millions of packets we could generate 150K snort alerts of size 63MB . As we need to extract common details in each alert less significant information details such as protocol information should be ignored.  After extracting common and essential attributes, 50K alerts were reduced to 3K in number and 360KB in size. A sample alert is in the format \(Attack type timestamp, Source IP, Source port, Destination IP, Destination port Snort alert  portscan 192.168.101.54,4497  We chose to group similar alerts together on temporal basis. We assume that alerts can be grouped into one if they share the same Source IP address, alert type, and occur in a specific and short time span. This approach is different from the one in [8], where they group all the alerts with same source Our approach is effective in eliminating false detections and 786 also to find sequential pattern of attacks on temporal basis which plays significant role in finding potential multistage attacks.  After the grouping has been done, we have added two more columns to alerts one as count, the number of alerts grouped together, and the other one is the behavior code to help 


while visualizing the alerts. The behavior code indicates similarity of current alerts with other alerts, which help to cluster similar alerts. A sample alert after grouping looks like the one below with the last attribute 50 as the number of grouped alerts  192.168.101.56, 192.168.72.1, 07/17- 10:59:06, ETSCANNMAP, 70, 50   Figure 2.  Topology Visualization As we have taken one second as the time span to group alerts, we could keep essential alerts intact and reduce the number of alerts at the same time B. Alert Clustering Using Flocking Model The alerts that are grouped in the previous step are clustered and visualized in the flocking model as shown in Figure 3.  Each flocking node represents a single alert, and is color-coded by alert type. The alerts move based on their attraction to one another, which is determined using a similarity comparison model. Alerts with maximum similarity tend to group together as they move. This is a useful tool which presents network administrators with a visual clustering of IDS alerts. Incorrectly classified alerts \(false alarms distinguished due to their lack of similarity with correctly classified alerts The flocking model is an artificial intelligence model inspired by biology phenomena where similar birds and fish tend to flock or swim together. The behavior of each bird or node within the flocking model follows three simple rules 1. Separation avoids crowding neighbors \(short range repulsion 2. Alignment steers towards average heading of neighbors 3. Cohesion steers towards average position of neighbors long range attraction  With each node following these three simple rules, the group demonstrates flocking and clustering behaviors.  The similar alerts will be grouped together The similarity between two alerts is expressed as a number within the range 0 to 1, with 0 for no similarity to 1 for identical.  We use Q-grams algorithm [18] to determine similarity which approximate string matching by sliding a 


window of length q over the characters of a string to create a number of 'q' length grams for matching a match is then rated as number of q-gram matches within the second string over possible q-grams.  The intuition behind the use of q-grams as a foundation for approximate string processing is that when two strings s1 and s2 are within a small edit distance of each other they share a large number of q-grams in common Consider the following example. The positional q-grams of length q=3 for string "sam chapman" are f\(1,##s 2,#sa 3,sam 4,am 5,m c 6, ch 7,cha 8,hap 9,apm 10,pma 11,man 12,an 13,n indicate the beginning and end of the string. So getting the qgrams for two query strings allows the count of identical qgrams over the total q-grams available. This method is frequently employed as a 'fuzzy' search in databases to allow non exact matching of queries. A rating is also often given by the ratio of the q-grams distance metric   Figure 3.  Alert Clustering using Flocking Model V. ASSOCIATION RULE GENERATION We mine association rules from Snort [12] alerts, to discover behavior patterns of attackers which are useful to detect multi-stage intrusions. The main aim to analyze Snort alerts further by extracting essential features is to find the patterns of attacks and eventually to record the behavior of each attacker.  Alerts generated by Snort helps to profile behavior patterns based on the sequences of alerts.  The knowledge base built from patterns of attacker behaviors help to detect and predict intrusions in real-time.  We will use temporal association rules to learn sequences of a user behavior.  This effort attempts to capture attackers who use one 787 attack to prepare for another one. This would help us to predict future attacks. For simplicity and clarity, Alert analysis is divided into four steps Now that we have reduced the alert list by eliminating non essential information, our task is to find the sequential patterns We still might have some false detection, which can mislead us to take some action, we need to eliminate them and find the sequential patterns. To find patterns Association algorithm is the most efficient and easy approach. The Apriori algorithm 


we applied to generate association rules for each host, does some calculation based on the sequential events and gives us best of all rules.  The Apriori algorithm contains join and prune steps [11].  The join step let a set of k-candidate itemsets to be joined if k-1 items are identical.  The prune step removes k-1 itemset that is not frequent from frequent k-itemset.   Below are some sample patterns we discovered from our alert dataset 1 2 3 To describe how association rules would help us in finding the potential future attacks, as we have three probabilities to predict from, once we encounter a PORTSCAN attack, in the next step the attacker may go for either SNMPattack or ETSCANNMAP. Based on available rules we can predict the future step of an attacker and stop it from being effective During real-time discovery, we utilize the learned rules in our knowledge base so that we can still discover and predict behaviors of attackers. We used support and confidence as our metrics to find how reliable and frequent a rule is. Support and confidence are two parameters for measuring the rule interestingness.   The confidence value is a measure of or belief in the association rule which represents the certainty reliability, or accuracy of the rule as seen in \(1  defines the support of an association pattern as the percentage of task-relevant data tuples for which the pattern is true as seen in \(2 support\(X -> Y X?Y 1 confidence\(X -> Y Y X 2 The support and confidence values are compared against thresholds.  A rule will be of interest if both are support and confidence values fall above minimum support and minimum confidence thresholds.  Network administrators set their own values for support and confidence to eliminate non essential rules, which would give them a set of rules to record attackers behavior. For example, we calculated support and confidence for the rules we listed above 1 0.29 0.40 2 0.14 conf\(1.0 3 0.14 0.20 Each rule has different support and confidence value. If we 


set minimum support as 0.20 and confidence as 0.30 as thresholds, we can eliminate third rule and the remaining rules would be used as the behavior of the attacker VI. IMPLEMENTATION The data available to us contains various network attacks including multistage ones.  The alerts that provided inputs to the system are Snort intrusion detection system. We have used Java technology to implement flocking and data mining algorithms, where as to visualize multistage attacks we have used Adobe flex along with Java script  788 Figure 4.  Alert and Its Prediction at the Node 192.168.101.66 With selected time range as shown in Figure 4, there is a current ICMPPINGNAMP alert at the node 192.168.101.66 The model retrieve prediction rules from our learned knowledge based and precide that attacker may launch ETSCANNAMP or SNMPattack with 0.14 as support value and 0.5 as confidence value.  When the time range is increased or with time going by, a new alert PORTSCAN is detected as shown in Figure 5, and new applicable rules are retrieved The new rules indicate that attacker may adopt WEBATTACK or SNMPattak in the next step.  By predicating behaviors of attakders, network administration can prepare possible response such as firewall reconfiguration, or the fixing of discovered vulnerabilities   Figure 5.  Development of Alerts and Prediction at the Node 192.168.101.66 789  VII. CONCLUSION AND FUTURE WORK Our system is efficient in predicting and visualizing potential multistage attacks. The experimentation results are quite outstanding in predicting the potential multistage attacks. Our stem is basic but effective; there is a room to improve the performance of the system by modifying the algorithms we applied. Now that we have developed a system that can predict multistage attacks, our aim is to improve the performance of the system, to add more features to find novel attacks REFERENCES 1] Hideki Koike, Kazuhiro Ohno, SnortView: Visualization System of 


Snort Logs, Proceedings of the ACM workshop on Visualization and data mining for computer security, Washington DC, USA, 2004 2] Soleimani M., Khosrowshahi E., Doroud M., Damanafshan M., Behzadi A., Abbaspour M., A Reliable Analyzer and Archiver for Snort Intrusion Detection System, Proceedings of the 2007 ACM symposium on Applied computing, Korea, 2007 3] Patrick Hertzog, Visualizations to improve reactivity towards security incidents inside corporate networks, Proceedings of the 3rd international workshop on Visualization for computer security, Alexandria, Virginia USA, 2006 4] Shabtai, Klimov, Shahar, Elovici, An intelligent, interactive tool for exploration and visualization of time-oriented security data, Proceedings of the 3rd international workshop on Visualization for computer security, Alexandria, Virginia, USA, 2006 5] Mansmann, Fisher, Keim, North, Visual support for analyzing network traffic and intrusion detection events using TreeMap and graph representations, Proceedings of the Symposium on Computer Human Interaction for the Management of Information Technology, Maryland USA, 2009 6] Mathew, Giomundo, Uoadhyaya, Sudit,Slotz, Understanding multistage attacks by attack-track based visualization of heterogeneous event streams, Proceedings of the 3rd international workshop on Visualization for computer security, Virginia, USA, 2006 7] Abdullah, Copeland, Tool update: high alarm count issues in IDS rainstorm, Proceedings of the 3rd international workshop on Visualization for computer security, Alexandria, Virginia, USA, 2006 8] Wenke Lee, Applying data mining to intrusion detection: the quest for automation, efficiency, and credibility, ACM SIGKDD Explorations Newsletter, December, 2002 9] Dokas, Kumar, Lazarevic, Srivastava, Tan, Data Mining for Network Intrusion Detection, USA, 2004 10] Anup K.Ghosh, Aaron Schwartzbard and Michael Schatz. Learning Program Behavior Profiles for Intrusion Detection. Proceedings of the 1st conference on Workshop on Intrusion Detection and Network Monitoring, Santa Clara, California, pp.51-62, 2002 11] Pang-Ning Tan, Michael Stenbach, Vipin Kumar. Introduction to data mining. Pearson Addison Wesley. 2006 12] The snort. http://www.snort.org 13] Jiawei Han and Micheline Kamber, Data mining concepts and techniques. Academic Press, San Diego, California, 2001 14] Dokas, Kumar, Lazarevic, Srivastava, Tan, Data Mining for Network Intrusion Detection, USA, 2004 


15] Klaus Juslich.Clustering intrusion detection alarms to support root cause analysis.  ACM Transactions on Information and System Security, vol 6, pp. 443-471, 2002 16] John R. Goodall and A. Ant Ozok and Wayne G. Lutters and Penny Rheingans and Anita Komlodi. A user - centered approach to visualizing network traffic for intrusion detection. Extended Abstracts on Human Factors in Computing Systems,  pp. 1403 -1406, Portland, OR, USA April, 2005 17] Lane, T. and Brodley, C. E., Temporal sequence learning and data reduction for anamoly detection.Proceedings of ACM Transactions on Information and System Security, pp. 295-331, 1999 18] Luis Gravano and Panagiotis G. Ipeirotis and H. V. Jagadish and Nick Koudas and S. Muthukrishnan and Lauri Pietarinen and Divesh Srivastava. Using q-grams in a DBMS for approximate string processing.  IEEE Data Engineering Bulletin. pp.28-34, vol. 24, 2001 19] Goodall, John R., Wayne G. Lutters, Penny Rheingans, and Anita Komlodi. "Preserving the Big Picture: Visual Network Traffic Analysis with TNV." Proceedings of the Workshop on Visualization for Computer Security \(VizSec 20] Y. Livnat et al., A Visualization Paradigm for Network Intrusion Detection, Proc. IEEE Workshop Information Assurance and Security IAW    790 


tags. However, only a few algorithms have been proposed to handle tags synonymy problem, by mainly focussing on clustering similar tags together using mostly similarity metrics In Szomszor et al. [14], the authors present an algorithm for the tag merging by synonymy. The proposed algorithm performs the task in three stages: \(i matrix of synonyms by using WordNet; \(ii non-ambiguous synonym and; \(iii synonym pairs with the term that is most popular. Even though this can be of help ?nding a pair of synonym tags it can somewhat restrict synonym tags discovery. Indeed if a synonymy between a pair of tags is found, the pair is directly replaced by the synonym term without further checking, whereas one of the tags pair may have other synonyms. In the following, we introduce a new algorithm called EXTRACTSYNTAGSET, that investigates all possible synonymys relationships between tags. Thus, EXTRACTSYNTAGSET searches in WordNet synonyms candidate in folksonomy by invoking the SEARCHSYN procedure. Moreover, contrarily to the Szomszor et al. approach, [14], the extracted set of tags synonyms is added to the set of synonyms tagsets, i.e., SSyntagset, for tags meanings enrichment. The pseudo-code of EXTRACTSYNTAGSET is sketched by Algorithm 1, whereas the used notations are summarized in Table II EXTRACTSYNTAGSET takes as input the set SSimtagset resulting from the previous step and outputs the set SSyntagset, which contains the representative tags with their associated synonyms. The EXTRACTSYNTAGSET procedure operates as follows: in Lines 2-3, it initializes the set SL by the ?rst representative tag in the set of representatives tags extracted from SSimtagset, i.e., RT , and an empty set, i.e., all synonyms of the tag occurring in folksonomy must not be retrieved later in the search procedure, and initializes the set SSyntagset to the empty set From Line 4 to 21, the algorithm iteratively searches for synonym tags corresponding to the representative tag in the folksonomy. This is done until the set SL becomes empty Thus, in each iteration, STagset is initialized by tagsets associated to st1.tag in SSimtagset where st1 is the ?rst 


element in SL In Line 7, EXTRACTSYNTAGSET invokes the SEARCHSYN procedure to search for synonym tags, i.e., SS . Thereafter, in Lines 8-9, st1 and the related tag st1.tag are respectively removed from SL and RL 373 Table II NOTATIONS USED IN THE EXTRACTSYNTAGSET ALGORITHM SSimtagset : The set of tagsets which contains all equivalent tags and their representative tag SSyntagset : The set of tagsets which contains all synonym tags and their representative tag RT : The set of representatives tags extracted from SSimtagset STagset : The set of tagsets which contains the representative tag and the associated synonyms SL : The set of pairs \(tag, notSynTags SS : The set of synonym tags of the representative tag Next, cf., Lines 10-18, EXTRACTSYNTAGSET selects each tag t from SS and checks whether it has not been treated yet In such case, EXTRACTSYNTAGSET checks whether it is already inserted in SL, i.e., it has been retrieved with another tag, then st1.tag have to be added to the set t.notSynTags Otherwise, a new entry associated to t must be created with a set containing st1.tag and added to the set SL At end of the iteration \(outer loop its set of synonyms tagsets, i.e., STagset, is added to SSyntagset. Thereafter, cf., Lines 20-21, if RT = ? and SL = ?, then EXTRACTSYNTAGSET adds a new entry to the set of pairs. Otherwise, the algorithm comes to an end with the set SSyntagset Step 4: Filter infrequent tagsets Filter out tags occurring less than a certain threshold B. Group related tags The second step of NONTAXFOLKS is to identify groups of related tag, i.e., representative tag in folksonomy. Approches using clustering or statical similarity metrics techniques for the organisation of related tags into clusters are widely used. Hence, in [5], the author uses a subsumption based model, derived from the co-occurrence of tags, to ?nd groups or related tags. On the other hand, Begelman et al 15] organise the tag space as an undirected graph, repre 


senting co-occurring tags as vertices, weighting the edges between them according to their co-occurrence frequency and applying a spectral clustering algorithm to re?ne the resulting groups. However, in such approches, correlation between tags, users and resources are often lost. Indeed, a semantically relation between tags is usually discovered if they had been assigned by users with similar interests. On the other hand, related resources are usually tagged many times by semantically related tags and ?nally users may have similar interests if they share many resources in their assignments In [4], the author use co-occurrence information to build graphs relating tags with users and tags with resources and applies techniques of network analysis to discover sets of clusters of semantically related tags. Similarly, in our proposed approach, we make use of the semantic relatedness embodied in the different frequencies of co-occurences among users, resources and tags in the social bookmarking Algorithm 1: EXTRACTSYNTAGSET Data: SSimtagset : {\(rt, {tagset Result: SSyntagset : {\(rt, {tagset Begin1 SL = {\(RT [1 T S = ?;3 While SL = ? do4 st1 = SL[1];5 STagset = {tagsets1 | ? \(st1.tag, tagsets1 SSimtagset SS = SEARCHSYN\(st1 RT = RT \\ {st1.tag};8 SL = SL \\ {st1};9 Foreach tag t ? SS do10 If t ? RT then11 If ? st2 ? SL | st2.tag = t then12 st2.notSynTags = st2.notSynTags13 st1.tag Else14 st2.tag = t;15 st2.notSynTags = {st2.tag};16 SL = SL ? {st2};17 STagset = STagset ? {tagsetst | ? \(t,18 tagsetst 


SSyntagset = SSyntagset ? {\(st1.tag,19 STagset If RT = ? ? SL = ? then20 SL = {\(RT [1 return SSyntagset ;22 End23 system, i.e., folksonomy. However, instead of using probabilistic models or network analysis techniques for grouping related tags, we mine frequent triadic concepts. Indeed, the triadic concept structure describes three types of sets: \(i set T of related tags; \(ii i.e., users whose have tagged by T and; \(iii resources, i.e., which were assigned with T by users U Hence, triadic concepts allow grouping semantically related tags taking into account the Users tagging behavior in a folksonomy In fact, in [16] and [11], the authors have considered a folksonomy as a triadic context and proposed an algorithm called TRIAS to get out implicit shared conceptualizations formally sketched by triadic concepts. TRIAS takes as input a folksonomy F := \(U , T, R, Y by its representative tag beforehand identi?ed, i.e., trep, as well as three user-de?ned thresholds : u ? minsupp, t minsupp and r ?minsupp. The TRIAS algorithm outputs the set of all frequent T C that ful?ll these aforementioned 374 thresholds Hence, running TRIAS algorithm on the triadic context depicted by Table I, with u ?minsupp = 2, t ?minsupp 2 and r?minsupp = 2 yields the following tri-concepts T C1 = {\(u1, u2, u3, u5, u7 t2, t3, t4 r1, r2, r3 T C2 = {\(u5, u6, u7 t4, t5 r1, r2 T C3 = {\(u2, u3, u4, u7 t1, t4 r2, r3 After the group related tags step, we present in the following the extraction of non-taxonomic relationships C. Non-taxonomic relationship extraction In the following, we introduce an algorithm called NTREXTRACTION for extracting non-taxonomic relationships between pairs of tags picked from the triadic concepts structure. As we previously mentioned, two tasks have to be carried out for learning non-taxonomic relationships: \(i 


discovery and selection of all pairs of related tags; \(ii discovery and selection of predicates, i.e., non taxonomic labels, used for expressing non taxonomic relationships between the pairs of tags according to their semantic meaning Notations used in this algorithm are summarized in Table III The pseudo-code of the NTREXTRACTION algorithm is sketched by Algorithm 2. NTREXTRACTION takes as input two sets: the set of triadic concepts T C and the set of representative tags. NTREXTRACTION outputs the set of all non-taxonomic relationships candidates NT R between tags discovered from T C. NTREXTRACTION operates as follows: ?rstly, NTREXTRACTION discovers all pairs of concepts from the sets of tags contained in the tri-concepts structure. For performing this task and to avoid the useless computation of pairs, NTREXTRACTION invokes the procedure DESCSORTTC which sorts the set of tri-concepts in a descending order with respect to the size of the tag set Line 4 Thereafter, NTREXTRACTION, cf., Lines 10-20, extracts the set of non-taxonomic relationships from each pair of tags. Speci?cally, in Line 11, NTREXTRACTION invokes the SEARCHWIKIPEDIA procedure to identify from Wikipedia sentences containing both tags \(ti, tj we use sentences as text units for analysis since they are Table III NOTATIONS USED IN THE NTREXTRACTION ALGORITHM T C : The set of all frequent tri-concepts T : The set of representative tags NT R : The set of non-taxonomic relationships extracted from Wikipedia T T S : The list of sets of tags which have been used to extract pairs PS : The set of pairs \(ti, tj tri-concepts ST C : Sorted list of tri-concepts SSent : Set of sentences extracted from Wikipedia Stree : Syntactic tree of sentence Algorithm 2: NTREXTRACTION Data 1 2 Result: NT R : {Non-taxonomic relationships Begin1 


T T S = ? ;2 PS = ? ;3 ST C = DESCSORTTC\(T C Foreach tri? concept tc ? ST C do5 If  t ? T T S | tc.tags ? t then6 PS = PS ? {\(ti, tj tc.tags ? tj ? tc.tags ? i < j T T S = T T S ? {tc.tags};8 NT R = ? ;9 Foreach pair \(ti, tj SSent = SEARCHWIKIPEDIA\(ti, tj Foreach sentences ? SSent do12 STree = PARSESENTENCE\(s subject = EXTRACTSUBJECT \(STree, ti, tj If subject = null then15 predicate =16 EXTRACTPREDICATE\(STree If predicate = null then17 object = EXTRACTOBJECT\(STree,18 ti, tj If object = null ? object = subject19 then NT R = NT R ? {subject,20 predicate, object return NT R ;21 End22 more informative than single words to detect relationships between tags pairs. Thus, in the inner loop \(Lines 12-20 NTREXTRACTION invokes the PARSESENTENCE procedure which uses the Stanford Parser to generate a Treebank parse tree for each input sentence Example 5: The parse tree for the sentence S = The concept of open source and free sharing of technological information has existed long before computers existed.. The triplet, i.e., < subject, predicate, object >, is extracted out from this sentence. Since \(S a tree having three children: a noun phrase \(NP concept of open source and free sharing of technological information, a verbal phrase \(V P before computers existed and the full stop TRACTSUBJECT procedure extracts the NP and searches for a mapping with at least one tag of the selected pair 


ti, tj open source, long 375 procedure extracts the compound verb from V P , i.e., has existed. Similarly, the EXTRACTOBJECT procedure extracts one of the three phrases: noun phrase NP , adjective phrase ADV P and prepositional phrase PP Once identi?ed, the set NT R of non-taxonomic relationships candidates have to be pruned to withdraw all infrequent relations. Hence, we make use of Borgelts ef?cient implementation of the APRIORI algorithm for frequent termsets extraction [17]. In the following, we remind some de?nition that will be of need in the sequel De?nition 6: An extraction context is a triplet K NT R, E , M taxonomic relationships, E is a ?nite set of terms and M is a binary \(incidence i.e., M ? NT R  E couple \(ntr, e ntr ? NT R contains the item e ? E Example 6: An example of an extraction context K is depicted by Table IV with O = {ts1, ts2, ts3, ts4, ts5, p1 p2, p3, p4, p5, to1, to2, to3, to4, to5} and I = {ntr1, ntr2 ntr3, ntr4, ntr5, ntr6, ntr7 De?nition 7: A termset9 E is said to be frequent if Supp\(E threshold, denoted minsup. The set of frequent termsets will be denoted FEK Note that we have added a restriction in the APRIORI implementation algorithm for considering only possible combinations between frequent terms. Since only two combinations are allowed, i.e., tag subject and predicates and tag subject and tag object. Therefore, once the set FEK is discovered, the association rules must have to derived only from the frequent 3-itemsets. Indeed, we paid attention to association rules of the form R: ts, to?p, where ts denotes a subject tag, to denotes an object tag and p denotes a predicate Example 7: Given the extraction context depicted by Table IV with minsup = 2 and minconf = 0.5, the derived valid association rules are given by the following table ts1, to4 ? p1 \(2, 0.5 ts1, to4 ? p2 \(2, 0.5 ts3, to4 ? p3 \(2, 1.0 


V. EXPERIMENTAL RESULTS The problem of evaluating non-taxonomically related concepts is quite complex since the non-taxonomic relationships are rarely contained in a gold standard. Hence, few experimental evaluations have been reported for comparing ontologies on the lexical as well as on the taxonomic level, e.g., [18] compares the generated ontology by their methodology against category structure from Open Directory 9 Note that each term may refer to a tag subject, a tag object or a predicate Project10 \(ODP  evaluation of the resulting ontology structure by comparing it to an ontology extracted from sei.cmu.edu and cluster from FLICKR. In fact, an investigation of the structure of existing ontologies via the Swoogle ontology search engine [19] has shown that domain ontologies very occasionally model this kind of relationships. Due to the problem of ?nding gold standards with good non-taxonomic relationships coverage and the amount of the obtained results, a manual evaluation is not reliable. So, we will focus the evaluation step on objective and automatic assessments. In this case, due to the lack of general purpose automatic evaluation procedures new mechanisms should be designed. In the following, we present an approach to evaluate non taxonomic relationships results in an automatic way against an electronic general domain repository: WordNet A. The dataset description We investigate the tag sets in DEL.ICIO.US thanks to both its popularity and availability. In fact, DEL.ICIO.US is a fast growing social bookmarking service. It offer hosts its users to centrally collect and share their bookmarks, which can refer to any resource on the web as long as this resource can be identi?ed by an URL. When adding a bookmark, users can provide a description, by default the title of the web site, an extended description and tags they consider related A bookmark can be added by going to the DEL.ICIO.US web site or, more conveniently, by using one of the many browser plug-ins which make bookmarking to a social bookmarking system as easy as browser wise bookmarking DEL.ICIO.US went online in September 2003 and is still constantly growing. Hence, we apply our NONTAXFOLKS approach on a snapshot11 described in the following table 


Dataset Nb users Nb resources Nb tags Del.icio.us 1518 12813 5621 B. Evaluation measures Assessing semantic similarity between words is a central issue in many research ?elds such as Psychology Linguistics, Cognitive Science, Biomedicine, and Arti?cial Intelligence. Semantic similarity can be exploited to improve accuracy of current Information Retrieval techniques, e.g 20], to discover mapping between ontology entities [21], to validate or repair mappings [22] or to perform word-sense disambiguation [23]. As a matter of fact, semantic similarity is relevant in many research areas and therefore, designing accurate methods is mandatory for improving the performance of the bulk of applications relying on it. Basically similarity or distance methods, e.g., [24] aims at assessing a score between a pair of words by exploiting a semantic 10 http://www.dmoz.org 11 http://data.dai-labor.de/corpus/delicious 376 Table IV AN EXTRACTION CONTEXT Relations/Terms ts1 ts2 ts3 ts4 p1 p2 p3 p4 to1 to2 to3 to4 ntr1 ntr2 ntr3 ntr4 ntr5 ntr6 ntr7 ntr8 network such as WordNet. Different relatedness measures implemented by WordNet::Similarity12 are proposed Given that the basis for the assessment of a relationship between a pair of terms13 comes back to statistical scores computed between terms. In this respect, we use the Jiang relatedness metric [25] that de?nes the link strength between two terms, i.e., e1 and e2. Thus, we have distJIANG\(e1, e1 e1 e2 LCA\(e1, e2 Where LCA\(e1,e2 de?ned in WordNet taxonomy and IC\(ei i ? {1,2 describes the information content of a term e which is de?ned as the negative log likelihood of the probability of 


encountering a related term, i.e. IC\(c e intuition behind the use of the negative likelihood is that the more probable a term to appear, the less information it conveys. All these features show that Jiangs measure tends to be more general and more appropriate for evaluating nontaxonomically related terms. Indeed, a high score of the relatedness measures suggests a strong relationship between terms Nevertheless, all relatedness measures have limitations because they assume that all the semantic content of a particular term is modeled by semantic links in WordNet Consequently, in many situations, truly related terms obtain a low scores even though their belongings to a certain category of tags, e.g., jargon tags Additionally, when measuring the quality of an automatically knowledge acquisition results, the typical measures used in Information Retrieval are Recall, Precision and F-Measure. However, computing Recall and F-Measure requires the availability of a Gold Standard. Hence, we will only compute the Precision which speci?es to which extent the non-taxonomic relationships is extracted correctly. In this case, the ratio between the correctly extracted relations i.e., their relatedness measures is greater than or equal to a minimum threshold, and the whole number of extracted ones is computed. Thus, we have Precision Total correctly selected entities Total selected entities 12 http://search.cpan.org/dist/WordNet-Similarity 13 A term refers to a tag subject or a tag object C. Evaluation of non-taxonomic relationships Only a percentage of the full set of non-taxonomic relationships \(89 is caused by the presence of non standard terms which are not contained in WordNet and, in consequence, cannot be evaluated using WordNet-based relatedness measures. Fig. 5 depicts the evaluation results of the extracted non-taxonomic relationships against their relatedness measures High relatedness score \(88 17% of the extracted relationships, as most of terms are strongly related with respect WordNet Null Scores were obtained for 5% of the extracted 


relationships. Analyzing this case in more detail, we have observed that the poor score is caused in many situations by the way in which Jiangs distance metric works. This latter completely depends on the distance between two terms based on the number of edges found on the path between them in WordNet. In consequence this measure returns a value that does not fully represent reality. For example, on the one hand, Jiangs distance metric returns a null value for the relationship between insurance and car, even though the ?rst is a commonly related to the second, i.e., car involved insurance Finally with a minimal Jiangs distance metric threshold, set to 46%, the computed precision of correctly extracted relationships candidates is equal to 68.8 An example of extracted non-taxonomic relationships is depicted in Table V where each relation describes the subject tag, e.g., tool, the predicate, e.g is being developed within, and the object tag, e.g mesh. Fig. 4 represent a fragment output of the extracted ontological structure where each concept de?nes a set of similar and synonym tags and labels, i.e., mentions has been, revealed, caused and is created with describe the predicates of the non-taxonomic relationships between terms Due to the limitations observed by the automatic evaluation procedure and the lack of gold standards containing non-taxonomic relationships, we have examined the extracted non-taxonomic relationships from a linguistic point 377 Top space      distance     quad great     groovy nifty caused address      addresses extension      quotation   reference  references extensions        referenz     source      refrence sources    rfrences    quotations research    search     searching searchs open-source     open_source 


opensource linux aim     design     designer      designers patern    project     patterns     projekte projects web+design    web_design webdesign internet       internetbs net          web network      networking networks      web discussion     news       password word      words community      communities is_created_with mentions revealed has_been Figure 4. A fragment output of the extracted ontological structure of view. This qualitative evaluation can bring some interesting insights about the kind of results one can expect Invalid relations are extracted: Even though a relation such as music cities skill is considered as correct one since tag subject, tag object and predicate are correctly extracted. From a semantic point of view, this relation has no meaning. Hence, a higher precision is expected Figure 5. Summary of non-taxonomic evaluation measure Table V EXAMPLES OF EXTRACTED NON TAXONOMIC RELATIONSHIPS Subject Predicate Object search has been reference reference mentions search tool is being developed within mesh security added encoding search revealed reference java provides library by performing the sense analysis on complete relations An ambiguity in the extracted predicates between terms is observed: Hence, same relations are redundant since they use a synonym predicates between terms, e.g java provides library and java yields library. Thus we expect that the redundancy removal within extracted relations will be of bene?t for the improvement of the 


obtained results VI. CONCLUSION AND FUTURE WORK The extraction of non-taxonomic relationships from folksonomies is to the best of our knowledge is the least tackled task within ontology building from folksonomy. This is why there is a need of novel and general purpose approaches covering the full process of learning relationships. In this paper, we introduced a new approach called NONTAXFOLKS that starts by pre-processing tags aiming at getting a set of frequent tagsets corresponding to an agreed representation Then, they are used to retrieve related tags using external resources such as WordNet. Thanks to the particular structure of triadic concepts, it allows grouping semantically related tags by considering the semantic relatedness embodied in the different frequencies of co-occurences among users, resources and tags in the folksonomy. Thereafter we introduced an algorithm called NTREXTRACTION for extracting non-taxonomic relationships between pair of tags picked from the triadic concepts. In summary, our approach uses several well known techniques \(such as formal concept analysis or association rule discovering the social bookmaring environnement in order to propose a new way of extracting labeled non-taxonomic relationships between tags. Currently, we are investigating the following topic concerning the discovered predicates between two terms. Indeed, in order to avoid relationships redundancy and thus a redundancy in the builded ontology. One can try to classify them into prede?ned semantic classes, detect synonyms, inverses, etc. A standard classi?cation of verbs could be used for this purpose, adding additional information about the semantic content, e.g., senses, verb types, thematic roles, etc., of predicates relationships 378 REFERENCES 1] J. Pan, S. Taylor, and E. Thomas, Reducing ambiguity in tagging systems with folksonomy search expansion, in Proceedings of the 6th Annual European Semantic Web Conference \(ESWC2009 2] V. S. M. Kavalec, A. Maedche, Discovery of lexical entries for non-taxonomic relations in ontology learning, in Proceedings of the SOFSEM 2004, LNCS, vol. 2932, 2004, pp 249256 


3] L. Specia and E. Motta, Integrating folksonomies with the semantic web, in Proceedings of the 4th European Semantic Web Conference \(ESWC 2007 Innsbruck, Austria, vol. 4519, June 2007, pp. 624639 4] P. Mika, Ontologies are us: A uni?ed model of social networks and semantics, in Proceedings of the 4th International Semantic Web Conference \(ISWC2005 3729, Galway, Ireland, June 2005, pp. 522536 5] P. Schmitz, Inducing ontology from ?ickr tags, in Proceedings of the Workshop on Collaborative Tagging \(WWW 2006 Edinburgh, Scotland, May 2006 6] M. Zhou, S. Bao, X. Wu, and Y. Yu, An unsupervised model for exploring hierarchical semantics from social annotations, in Proceedings of the 6th International Semantic Web Conference and 2nd Asian Semantic Web Conference ISWC/ASWC2007 Korea, vol. 4825, November 2006, pp. 673686 7] C. Schmitz, A. Hotho, R. Jaschke, and G. Stumme, Mining association rules in folksonomies, in Proceedings of the 10th IFCS Conference \(IFCS 2006 2006, pp. 261270 8] A. Hotho, A. Maedche, S. Staab, and V. Zacharias, On knowledgeable unsupervised text mining, in Proceedings of Text Mining Workshop, Physica-Verlag, 2003, pp. 131152 9] A. Hotho, R. Jaschke, C. Schmitz, and G. Stumme, Information retrieval in folksonomies: Search and ranking, in The Semantic Web: Research and Applications, vol. 4011 Springer, 2006, pp. 411426 10] F. Lehmann and R. Wille, A triadic approach to formal concept analysis, in Proceedings of the 3rd International Conference on Conceptual Structures: Applications, Implementation and Theory. Springer-Verlag, 1995, pp. 3243 11] R. Jaschke, A. Hotho, C. Schmitz, B. Ganter, and G.Stumme Discovering shared conceptualizations in folksonomies Web Semantics: Science, Services and Agents on the World Wide Web, vol. 6, pp. 3853, 2008 12] A. Mathes, Folksonomies - cooperative classi?cation and communication through shared metadata, Graduate School of Library and Information Science, University of Illinois Urbana-Champaign, Tech. Rep. LIS590CMC, December 2004 13] H. Lin, J. Davis, and Y. Zhou, An integrated approach 


to extracting ontological structures from folksonomies, in Proceedings of the 6th European Semantic Web Conference ESWC 2009 vol. 5554, 2009, pp. 654668 14] M. Szomszor, H. Alani, K. OHara, and N. Shadbolt, Semantic modelling of user interests based on cross-folksonomy, in Proceedings of the 7th International Semantic Web Conference \(ISWC 2008 15] G.Begelman, P. Keller, and F.Smadja, Automated tag clustering: Improving search and exploration in the tag space, in Proceedings of the the Collaborative Web Tagging Workshop WWW 2006 16] R. Jaschke, A. Hotho, C. Schmitz, B. Ganter, and G. Stumme TRIAS - an algorithm for mining iceberg tri-lattices, in Procedings of the 6th IEEE International Conference on Data Mining, \(ICDM 2006 2006, pp. 907911 17] C. Borgelt, Ef?cient implementation of APRIORI and ECLAT, in FIMI, COEUR Workshop Proceedings, COEURWS.org, vol. 126, 2003 18] J. Tang, H. Leung, Q. Luo, D. Chen, and J. Gong, Towards ontology learning from folksonomies, in Proceedings of the 21st international jont conference on Arti?cal intelligence IJCAI 2009 20892094 19] L. Ding, T. Finin, A. Joshi, R. Pan, R. Cost, Y. Peng P. Reddivari, V. Doshi, and J. Sachs, Swoogle: A search and metadata engine for the semantic web, in Proceedings of the 13th ACM Conference on Information and Knowledge Management, ACM Press, 2004, pp. 652659 20] A. Hliaoutakis, G. Varelas, E. Voutsakis, E. Petrakis, and E. E Milios, Information retrieval by semantic similarity, International Journal on Semantic Web and Information Systems IJSWIS 21] G. Pirro, M. Ruffolo, and D. Talia, Secco: On building semantic links in peer to peer networks, Journal on Data Semantics XII, LNCS 5480, pp. 136, 2009 22] C. Meilicke, H. Stuckenschmidt, and A. Tamilin, Repairing ontology mappings, in Proceedings of the International Conference AAAI 2007, Vancouver, British Columbia, Canada 2007, pp. 14081413 23] S. Ravi and M. Rada, Unsupervised graph-based word sense 


disambiguation using measures of word semantic similarity in Proceedings of the International Conference ICSC 2007 Irvine, California, USA, 2007 24] H. G. A. Budanitsky, Semantic distance in wordnet: an experimental application oriented evaluation of ?ve measures in Proceedings of the International Conference NACCL 2001 Pittsburgh, Pennsylvania, USA, 2007, pp. 2934 25] J. Jiang and D. Conrath, Semantic similarity based on corpus statistics and lexical taxonomy, in Proceedings of the International Conference ROCLING X, 1997 379 


DMITAR Rlt  DMITAR  R esu lt s 2  5 Rules Formed Associative IDS for NextGen Frameworks Dr S Dua LA Tech 28 


DMITAR Rl  Varying Maxspan DMITAR  R esu l ts 3  5 Varying Maxspan Associative IDS for NextGen Frameworks Dr S Dua LA Tech 29 


DMITAR Res lts 4/5 Vig Di i DMITAR  Res u lts  4/5 V ary i n g Di mens i ons Associative IDS for NextGen Frameworks Dr S Dua LA Tech 30 


DMITAR Rl  Varying Number of Transactions DMITAR  R esu l ts 5  5 Varying Number of Transactions Associative IDS for NextGen Frameworks Dr S Dua LA Tech 31 


N/C t Rh N ew C urren t R esearc h Problem Domain Problem Statement and Challenges Associative Mining based IDS Associative Mining based IDS Introduction to data mining ii lid ii Assoc i at i on ru l e i n d ata m i n i ng DMITAR Algorithm  ARD h New Researc h Associative IDS for NextGen Frameworks Dr S Dua LA Tech 32 


Further Research Further Research Objectives of Our Intrusion Detection System Development Objectives of Our Intrusion Detection System Development 1 Refine and scale the DMITAR algorithm to suit our application 2 Develop methods for dynamically altering the sensor parameters Our Focus is Securing the NextGen Frameworks with New Technology Technology Associative IDS for NextGen Frameworks Dr S Dua LA Tech 33 


Simulated Sensing Environment Simulated Sensing Environment Screenshots of Data C ollected from S ynthetic Sensors Screenshots of Data C ollected from S ynthetic Sensors Simulated in Our Laboratory Three Steps Slides Collect data Collect data from all sources  all attributes  Select Select the source and their hierarchical attributes attributes to be monitored and Select Select the source and their hierarchical attributes attributes to be monitored  and Sample Sample them at different rates different rates and process them Associative IDS for NextGen Frameworks Dr S Dua LA Tech 34 


Data Collection Simultaneous collection of data screen from ENTITIES aircrafts Associative IDS for NextGen Frameworks Dr S Dua LA Tech 35 Source PRTG Network Monitor software screen shot Demo info www.paessler.com 


Parameter Selection Selection of an ENTITY/aircraft and monitoring its parameters and sensor readings Associative IDS for NextGen Frameworks Dr S Dua LA Tech 36 Source PRTG Network Monitor software screen shot Demo info www.paessler.com 


Sensor Sampling Selecting one sensor/probe and reading it at different resolutions or sampling rates Associative IDS for NextGen Frameworks Dr S Dua LA Tech 37 Source PRTG Network Monitor software screen shot Demo info www.paessler.com 


Si l ti Nt k Si mu l a ti on on N e t wor k Most scenarios can be simulated on a computer or computer network network  The aircrafts and sensors are simulated on a computer network bllb b y ana l ogica l su b stitutions Sensors provide information at different rates Sensors provide information at different rates Need Based Sensor Prioritization NSP and Dynamic Sensing Rate Sampling Associative IDS for NextGen Frameworks Dr S Dua LA Tech 38 


Vulnerability Search Scan 39 Sample UQA script with Nmap performed in DMRL Associative IDS for NextGen Frameworks Dr S Dua LA Tech 39 Source Nmap screenshot with a pearl script  Find Namp on Nmap.org 


Modality Aspect Modality Aspect A Multimodal distribution is a continuous probability distribution with two or more modes of underlying data Mltil d i M u lti p l e mo d es i n our model Associative IDS for NextGen Frameworks Dr S Dua LA Tech 40 Source http://en.wikipedia.org/wiki/File:Bimodal bivariate small.png 


Multi Modality Modality Fusion 41 SENSITIVE  UNCLASSIFIED For Official Use Only Associative IDS for NextGen Frameworks Dr S Dua LA Tech 41 


Emphasis Emphasis Our approach emphasizes on pre empting the attack Our intent is NOT to perform an autopsy to discover attacks Instead we aim to detect and prevent in attacks in real time Associative IDS for NextGen Frameworks Dr S Dua LA Tech 42 


Techniques for Discriminative Rules Techniques for Discriminative Rules Resolution Analysis Features Analyzed at Different Depths Anti Monotonic Principle Modality Aspect Treading into Unexplored Feature spaces Associative IDS for NextGen Frameworks Dr S Dua LA Tech 43 


Representative Outcomes Representative Outcomes Illustration of the Final Analysis Our method shifts between modalities and sampling rates for optimization The blue parallelograms are actual intrusions 44 The blue parallelograms are actual intrusions The Red Green Blue Plots are response of system Associative IDS for NextGen Frameworks Dr S Dua LA Tech 44 


Advantages of Our M ethod Advantages of Our M ethod Exploit the memory v ertical data format utilizes slidin g windows to g form a much larger database to analyze  Flexibility in Choosing what to choose  Choosing what to choose to build the rules Computational and memory efficiency We have a team working only on this aspect 45 Associative IDS for NextGen Frameworks Dr S Dua LA Tech 45 


Preliminary Results Intra transaction Relations Data rate simulator NH-134 Mb HOP PATH update \(Y/N Inference 11.5 Y Y 2 0.120 N N      Y   n 0.345 N NH134 Y/N   Inf 1 0.150 N N 2 0 120 Y N Inter transaction Relations 2 0  120 Y N       5 5.55 0.456 Y Relations  n 0.345 N N Nmap on DMRL nmap.org 


Anticipated Outcome Anticipated Outcome Develop algorithm capable of learning from a given heterogeneous diverse Develop algorithm capable of learning from a given heterogeneous diverse data ff Dynamic algorithmic f ramework designed to shi f t modalities and sampling rates based on complex logic Flexibility of integration into the Snort intrusion detection system 47 Associative IDS for NextGen Frameworks Dr S Dua LA Tech 47 


References References Aircraft Cockpit Image courtesy USAF http://www.faa.gov htt p   www.faa g ov  air traffic  technolo gy  p g  _ gy  Acharya R Dua S Du X Sree V Chua C K Automated Diagnosis of Glaucoma Using Texture and Higher Order Spectra Features To appear in IEEE Transactions on Information Technology in Biomedicine  Du X Dua S 2011 Cancer Prognosis Using Support Vector Regression in Imaging  Modality World Journal of Clinical Oncology 2  1   44 49 Du X Dua S 2010 Salient Frame Extraction Using Support Vector Regression and Motion Features pp 5 Proc of the National Aerospace and Electronics Conference July 14 16 2010 D M P D S 2010 Di i i ti Ft d Cl ifi ti Mthd f D essaue r  M  P  D ua S  2010  Di scr i m i na ti ve F ea t ures an d Cl ass ifi ca ti on M e th o d s f or Accurate Classification 1st ed vol 7704 pp 14 Bellingham WA Proceedings of SPIE Dessauer M P Dua S 2010 Low Resolution Vehicle Tracking using Dense and Reduced Local Gradient Features Maps 1st ed vol 7694 pp 8 Bellingham WA Proceedings of SPIE SPIE 


Acknowledgements Acknowledgements Fundin g A g encies  US 4 1 Million direct fundin g g g 4 g LA BoR NIH NSF AFRL AFOSR and NASA Research Team Samuel Kasimalla Brandy McKnight Dr Pradeep Chowriappa Connor Johnson Vasanth Nair Mihir Chowriappa  Connor Johnson  Vasanth Nair  Mihir Karnik Mohit Jain and Swadheen Songmen Associative IDS for NextGen Frameworks Dr S Dua LA Tech 49 All the respective Logos belong to their owners 


Rf d Rdi R e f erence d R ea di ngs Copyright of cover pages held by respective publishers 


Thank You Questions Thank You  Questions Dr Sumeet Dua E mail sdua@latech.edu Web http://dmrl.latech.edu Associative IDS for NextGen Frameworks Frameworks Dr S Dua LA Tech 51 Image Source roadtrafficsigns.com 


