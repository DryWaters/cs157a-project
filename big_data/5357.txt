On a Fuzzy Group-by Clause in SQLf Patrick Bosc Member IEEE  and Olivier Pivert Abstract 227 Group-by is a core database operation that is used extensively in data analysis and decision support systems In many application scenarios it appears useful to group values according to their compliance with a certain concept instead of founding the grouping on value equality In this paper we propose a new SQLf construct that supports fuzzy-partitionbased group-by FGB We show that FGB can be used to generate fuzzy summaries as well as to mine fuzzy association rules in a practical and ef\002cient way I I NTRODUCTION The relationships between databases and fuzzy sets have been studied for a long time Among the very 002rst works is that launched by L.A Zadeh while supervising V Tahani's Ph.D thesis in the early 70s The core of this study was about the design of new querying capabilities for relational databases The basic idea was to use fuzzy sets in order to devise new predicates intended for representing a graded satisfaction instead of the 223all-or-nothing\224 behavior conveyed by Boolean conditions If this type of issue was quite innovative at that time it turns out that it has gained more and more acceptance for some years in the database community Many fuzzy querying approaches have been proposed in the last decades among which a fuzzy extension of the SQL language called SQLf This language has the same general philosophy as SQL as to querying features and syntax in particular and offers new possibilities regarding 003exible querying The underlying principle was to introduce graduality wherever it appeared meaningful by using fuzzy predicates in the where clause of a base block of course but also by introducing fuzzy nesting operators fuzzy quanti\002ers and so on However the group-by clause in SQLf remained unchanged with respect to SQL As noted in grouping capabilities have been extensively studied and implemented in data management systems The standard group-by operator has relatively good execution time and scalability properties However while its semantics is simple it is also limited because it is based only on equality i.e all the tuples in a group have exactly the same values of the grouping attributes In this paper we aim to extend this core database operation by de\002ning a 223fuzzy grouping\224 mechanism The contributions of this paper are as follows 017 we introduce the fuzzy group-by FGB operator which extends standard group-by to allow the formation of groups based on prede\002ned fuzzy partitions of the attribute domains rather than equality of data 017 we show how this mechanism makes it possible to perform some kind of data summarization 223on demand\224 Patrick Bosc and Olivier Pivert are with IRISA\226ENSSAT Lannion France email f bosc pivert g irisa.fr 017 we point out the interest of the FGB operator for the purpose of fuzzy association rule mining The remainder of the paper is organized as follows Section II presents the general framework of the SQLf language Section III introduces the de\002nition of the FGB operator and shows how fuzzy summaries can be obtained by means of appropriate aggregates applied to the fuzzy groups that are produced by this operator Section IV discusses different forms that the complementary having clause can take Section V deals with the way FGB can be used for mining fuzzy association rules Section VI brie\003y tackles implementation aspects Related work is presented in Section VII and Section VIII presents the conclusions and directions for future research II R EMINDER A BOUT SQL F The language called SQLf described in e xtends SQL so as to support fuzzy queries The general principle consists in introducing gradual predicates wherever it makes sense The three clauses select  from and where of the base block of SQL are kept in SQLf and the 223from\224 clause remains unchanged The principal differences affect mainly two aspects  017 the calibration of the result since it is made with discriminated elements which can be achieved through a number of desired answers  k  a minimal level of satisfaction  t  or both and 017 the nature of the authorized conditions as mentioned previously Therefore the base block is expressed as select  distinct   k j t j k  t  attrib utes from relations where fuzzy-cond where 223fuzzy-cond\224 may involve both Boolean and fuzzy conditions This expression is interpreted as 017 the fuzzy selection of the Cartesian product of the relations appearing in the 223from\224 clause 017 a projection over the attributes of the 223select\224 clause duplicates are kept by default and if 223distinct\224 is speci\002ed the maximal degree is attached to the representative in the result 017 the calibration of the result top k elements and/or those whose score is over the threshold t  The operations from the relational algebra 227 on which SQLf rests 227 are straightforwardly extended to fuzzy relations by considering fuzzy relations as fuzzy sets on the one hand and by introducing gradual predicates in the appropriate operations selections and joins especially on the other hand The de\002nitions of these extended relational operators can be 978-1-4244-8126-2/10/$26.00 ©2010 IEEE 


found in As an illustration we gi v e the de\002nitions of the fuzzy selection and join operators hereafter where r and s denote two fuzzy relations de\002ned respectively on the sets of domains X and Y  017 026 select  r    t     026 r  t   026   t  where  is a fuzzy condition and  is a triangular norm most usually min is used 017 026 join  r s A B 022   tu     026 r  t   026 s  u   026 022  t:A u:B  where A resp B  is a subset of X resp Y  A and B are de\002ned over the same domains 022 is a binary relational operator possibly fuzzy t:A resp u:B  stands for the value of t over A resp u over B  III A N E XTENDED G ROUP B Y C LAUSE In SQLf as in SQL a group by clause builds a partition based on the atomic values of the attributes speci\002ed in this clause Then 223 group by A 224 leads to a partition where every group is associated with an A value present in the relation The idea we advocate here is to extend this mechanism so as to build a partition based on intervals or fuzzy sets of values A Use of a Crisp Partition The generic form of such a query is select label\(A  aggregate from r  where   group by label\(A using p\(A  f L 1      L n g where p  A  is a partition de\002ned on the domain of A  label  A  denotes any label L i from p  A   and  is a fuzzy or crisp condition Example 1 Let Emp be a relation of schema id name age salary Let us assume that one wants to retrieve the average salary for each age class twenties thirties etc In SQL one has to express as many queries as there are age classes However one can imagine an expression of the type select label\(age avg salary from Emp group by label\(age using p\(age  f 20  29  30  39  40  49  50  59  60  69 g  With the data from Table I the result is fh 20  29  26  5 i  h 30  39  32 i  h 40  49  45 i  h 50  59  61 i  h 60  69  37 i g  005 In the case where  is a fuzzy condition the only type of aggregate which can appear in the select clause is count  because of the dif\002culty of de\002ning the other aggregates on fuzzy sets For a given L i from p  A   count  L i  is computed the following way count  L i   X t 2 r  t:A 2 L i 026   t   One also introduces a variant of count  denoted countrel  which computes the relative cardinality i.e the average satisfaction degree associated with a group It is de\002ned as count rel  L i   P t 2 r  t:A 2 L i 026   t  jf t 2 r j t:A 2 L i gj  TABLE I E XTENSION OF RELATION EMP e e-name position age w-dep sal\(k 17 Smith engineer 51 3 65 76 Martin engineer 40 5 45 26 Jones secretary 24 3 19 12 Green technician 39 3 32 19 Duncan clerk 28 1 24 8 Brown manager 54 1 57 31 Harris technician 29 5 18 9 Davis janitor 61 1 15 44 Howard manager 22 3 45 23 Lewis engineer 62 1 59 Fig 1 A fuzzy partition on the domain of attribute age Example 2 Let us consider the query select label\(age count  count-rel from Emp where salary is medium group by label\(age using p\(age  f 20  29  30  39  40  49  50  59  60  69 g  With the fuzzy term medium de\002ned as in Fig 2 and the data from Table I one gets the result fh 20  29  1  0  25 i  h 30  39  0  7  0  7 i  h 40  49  1  1 i  h 50  59  0  8  0  4 i  h 60  69  0  6  0  3 ig  005 B Use of a Fuzzy Partition The extension to the fuzzy partition case 227 which allows to take into account vague classes and to have a better robustness by making query results less sensitive to the boundaries of the classes 227 is rather straightforward One just has to have available fuzzy partitions de\002ned on the attribute domains On the other hand it is not possible anymore to use any type of aggregate in the select clause one is limited to using count even when the condition in the where clause is Boolean since the groups themselves are fuzzy The fuzzy partitions used may be e.g Ruspini partitions  i.e such that 8 x 2 X P L i 2 P 026 L i  x   1 where P denotes a partition de\002ned on domain X cf Fig 1 and 2 With such a fuzzy partition a given tuple can belong to at most two classes Ruspini partitions are probably the easiest to handle for an end-user however the approach described hereafter is valid for any kind of fuzzy partition Example 3 Let us assume that one has available a fuzzy partition 227 still denoted by p  age  227 de\002ned on the domain of attribute age  Let us consider the query 223\002nd for each fuzzy age class the number of employees which earn more than 3000 euros.\224 It can be expressed as 


Fig 2 A fuzzy partition on the domain of attribute salary TABLE II T UPLES FROM EMP AND THEIR DEGREES e age 026 yg 026 ma 026 old sal 026 low 026 med 026 high 17 51 0 0.9 0.1 65 0 0 1 76 40 0 1 0 45 0 1 0 26 24 0.6 0.4 0 19 1 0 0 12 39 0 1 0 32 0.3 0.7 0 19 28 0.2 0.8 0 24 1 0 0 8 54 0 0.6 0.4 57 0 0.8 0.2 31 29 0.1 0.9 0 18 1 0 0 9 61 0 0 1 15 1 0 0 44 22 0.8 0.2 0 45 0 1 0 23 62 0 0 1 59 0 0.6 0.4 select label\(age count from Emp where salary  30k group by label\(age using p\(age  f young middle-aged old g  With the data from Table II the result is fh young 0  8 i  h middle aged 3  7 i  h old 1  5 ig where each number returned corresponds to a 006 count 005 We now extend count and count-rel the following way count  L i   X t 2 r   026   t   026 L i  t:A  1 count rel  L i   P t 2 r   026   t   026 L i  t:A  P t 2 r 026 L i  t:A   2 Using these two aggregates the fuzzy group by clause makes it possible to compute fuzzy summaries 223on demand\224 in contrast with the approach proposed in which 002rst b uilds a summary of the whole database then uses it to answer queries An example of a query aimed at providing a fuzzy summary is given hereafter Example 4a Let us consider the query 223what is the distribution over the different age classes of the employees whose salary is medium?\224 It can be expressed as select label\(age count from Emp where salary is medium group by label\(age using p\(age  f young middle-aged old g  With the data from Table II and using   min  one gets fh young 0  8 i  h middle aged 2  5 i  h old 1  0 ig  005 Example 4b Let us now consider the query 223which proportion of employees from each age class has a salary which is medium?\224 It can be expressed as select label\(age count-rel from Emp where salary is medium group by label\(age using p\(age  f young middle-aged old g  With the data from Table II and using   min  one gets fh young 0  47 i  h middle aged 0  43 i  h old 0  4 ig  005 IV H AVING CLAUSE The different forms of a having clause that can come as a complement to a group-by clause are described hereafter through a few examples A Inclusion constraint An example which involves a Boolean condition in the having clause is 223\002nd every age class such that at least 30 of the employees from that class have a high salary\224 select label\(age from Emp E1 group by label\(age having count 025  select  count  0.3 from Emp where salary is high and age is E1.label\(age using p\(age  f young middle-aged old g  Another example which involves a fuzzy having clause is 223\002nd the extent to which all the employees of a given age class have a high salary select label\(age from Emp E1 group by label\(age having  select e from Emp where salary is high contains set e using p\(age  f young middle-aged old g  The evaluation of such a query rests on a graded inclusion It constitutes the prototype expression for fuzzy association rule mining and will be detailed in Section V B aggregate 1 022 aggregate 2 Even though a limitation exists as to the aggregates which can be computed on a fuzzy set 227 as already mentioned 227 it is still possible to evaluate conditions which compare two aggregates F or instance 223\002nd the age classes such that the maximum of the technician's salaries is greater than the minimum of the engineer's salaries\224 select label\(age from Emp E1 where job  technician group by label\(age having max\(salary   select min\(salary from Emp where age is E1.label\(age and job  engineer using p\(age  f young middle-aged old g  In such a query the where clause could also involve a fuzzy condition C aggregate is  One may also compute the extent to which an aggregate satis\002es a fuzzy condition   by means of the approach proposed in F or instance 223\002nd the age classes where 


the average salary of engineers is high\224 select label\(age from Emp where job  engineer group by label\(age having avg salary is high using p\(age  f young middle-aged old g  Here again the where clause can also involve a fuzzy condition V U SE FOR A SSOCIATION R ULE M INING A Introduction We now explain how the fuzzy group by clause can be used for evaluating in a simple way fuzzy association rules of the type  age is L i  salary is L 0 j  where L i and L 0 j are two fuzzy labels de\002ned respectively on the domain of age and that of salary  As mentioned in at least tw o fuzzy extensions of association rules may be considered those based on fuzzy or scalar cardinalities and those based on fuzzy implications cf also for the latter cate gory Hereafter we do not deal with fuzzy-cardinality-based rules since they may be somewhat dif\002cult to interpret for an end-user and also because they cannot be represented and handled easily in a purely relational DBMS The approach based on a scalar cardinality  006 count rests on a straightforward extension of the usual de\002nition of con\002dence Let us consider a fuzzy association rule of the type  A is L i  B is L 0 j  In this approach the validity con\002dence of the rule is de\002ned as P t 2 r   026 L i  t:A   026 L 0 j  t:B  P t 2 r 026 L i  t:A  In the fuzzy-implication-based approach the rule  A is L i  B is L 0 j  expresses a constraint on the B value for each tuple in the relation The association rule also denoted by  A L i    B L 0 j   then means 223for every tuple t  the more t:A is L i  the more t:B is L 0 j 224 i.e  A L i    B L 0 j   8 t 2 r 026 L i  t:A   f 026 L 0 j  t:B  where  f denotes a fuzzy R-implication In this case the con\002dence of the rule is equal to min t 2 r 026 L i  t:A   f 026 L 0 j  t:B   B Rules of the type A is L i  B is L 0 1 Computation of the Support First one introduces a variant of count named count-g whose general de\002nition is count g  L i   P t 2 r   026   t   026 L i  t:A  j r j  3 Let us consider the generic SQLf query select label\(A count-g from r where B is L 0 group by label\(A using p\(A  f L 1      L n g It allows for computing the support of every fuzzy association rule of the type 223 A is L i  B is L 0 224 for a given L 0  2 Computation of the Con\002dence Let us consider the generic SQLf query select label\(A from r group by label\(A having  select K from r where B is L 0  contains set K using p\(A  f L 1      L n g where K denotes the primary key of the relation a Scalar Cardinality Using the approach based on scalar cardinality the con\002dence of the rule corresponds to the cardinality-based degree of inclusion of the fuzzy set E  L i    select e from r where A is L i  in the fuzzy set F   select e from r where B is L 0  i.e to the degree 026 produced by the evaluation of the having clause 026  P t 2 r   026 L 0  t:B   026 L i  t:A  P t 2 r 026 L i  t:A   b R-implication Using the approach based on a fuzzy R-implication the con\002dence of the rule corresponds to the implication-based degree of inclusion of E  L i  in F 227 see e.g 227 i.e to the de gree 026 produced by the evaluation of the having clause when contains is replaced by contains-f  026  min t 2 r 026 L i  t:A   f 026 L 0  t:B   For instance with 006ukasiewicz implication  contains-Lu  we have 026  min t 2 r min 1  1 000 026 L i  t:A   026 L 0  t:B   Example 5 Let us consider the set of rules of the form age is L i  salary is medium where L i belongs to p  age   They can be evaluated by means of the following two queries select label\(age count-g from Emp where salary is medium group by label\(age using p\(age  f young middle-aged old g  which using the data from Table I the partitions from Fig 1 and 2 and   min returns f 0  08  h young i  0  25  h middle-aged i  0  1  h old ig  and select label\(age from Emp group by label\(age having  select e from Emp where salary is medium contains set e using p\(age  f young middle-aged old g which returns f 0  47  h young i  0  43  h middle-aged i  0  4  h old ig  If contains were replaced by contains-Lu in the second query we would get f 0  4  h young i  0  1  h middle-aged ig  005 


C Rules of the type A is L  B is L 0 i Now let us consider mining fuzzy association rules of the type 223 A is L  B is L 0 i 224 for a given L  Again two SQLf queries are necessary select label\(B count-g from r where A is L group by label\(B using p\(B  f L 0 1      L 0 n g for computing the support of the rules considered and select label\(B from r group by label\(B having set K contains  select K from r where A is L  using p\(B  f L 0 1      L 0 n g for computing their con\002dence values Example 6 Let us consider the set of rules of the form age is young  salary is L 0 i where L 0 i belongs to p  salary   They can be evaluated by means of the following two queries select label\(salary count-g from Emp where age is young group by label\(salary using p\(salary  f low medium high g and select label\(salary from Emp group by label\(salary having set e contains  select e from Emp where age is young using p\(salary  f low medium high g  With the data from Table I and the partitions from Fig 1 and 2 the 002rst query returns f 0  09  h low i  0  08  h medium i  0  h high ig  As to the second one 227 which corresponds to the scalar cardinality approach since it involves the operator contains 227 it returns the result f 0  53  h low i  0  47  h medium i  0  h high ig  If contains were replaced by contains-Lu in the second query we would get f 0  2  h low i  0  4  h medium i  0  2  h high ig  005 VI A BOUT THE E VALUATION OF A F UZZY G ROUP BY The complexity of the evaluation of an FGB clause is very similar to that of a regular group-by clause Two cases may be distinguished 017 if the attribute appearing in the FGB clause 227 let us denote it by A 227 is indexed it is possible to directly access the tuples which belong to a given fuzzy class L i  they are the tuples t such that t:A 2 support  L i   Let us recall that the support of a fuzzy label is expressed as an interval and can be straightforwardly determined from the membership function associated with that label The degree to which tuple t belongs to class L i is equal to 026 L i  t:A   017 otherwise as usual one may sort the relation on attribute A and compare the A value of each tuple with the overlapping segments which correspond to the supports of the different fuzzy labels in the partition of domain  A  in order to build the fuzzy groups Here too of course 026 L i  t:A  must be computed for each tuple t  As can be seen the cost of the evaluation of an FGB clause should be more or less equivalent to that of a regular groupby clause since the only additional cost is that related to the computation of the membership degrees VII R ELATED W ORK A Extended Group-by The work in proposes some SQL constructs to mak e clustering facilities available from SQL in the context of spatial data Basically these constructs act as wrappers of conventional clustering algorithms but no further integration with database systems is studied Li et al  e xtend the group-by operator to approximately cluster all the tuples in a prede\002ned number of clusters Their framework makes use of conventional clustering algorithms e.g K-means and employ summaries and bitmap indexes to integrate clustering and ranking into database systems Silva et al  introduce a similarity group-by operator in order to group objects with similar values Our study differs from and 2 in that 1 we focus on fuzzy grouping based on vague concepts not on similarity-based grouping 2 we do not aim at 223discovering\224 the clusters since in our approach the groups are explicitly speci\002ed in the query by means of a fuzzy partition which by the way gives them a well-identi\002ed meaning and 3 the authors of and 2 do not consider a general fuzzy querying framework such as SQLf where the fuzzy groupby construct is just a piece of the puzzle but only extend a particular feature of SQL B Fuzzy Database Summarization Techniques Developed by Rasmussen and Yager SummarySQL is a fuzzy query language which can evaluate the truth degree of a summary guessed by the user A summary expresses knowledge about the database in a statement under the form 223 Q objects in DB are S 224 or 223 Q R objects in DB are S 224 where DB stands for the database Q is a linguistic quanti\002er and R and S are linguistic terms The expression is evaluated for each tuple and the associated truth values are later used to obtain a truth value for the summary The statements considered by the authors are in a sense more general than the fuzzy association rules that we deal with since they involve fuzzy quanti\002ers However our approach can easily be extended to capture such statements by relaxing the operator contains that appear in the having clause using e.g one of the approaches described in When it comes to mining fuzzy statements the main difference lies in the fact that does not propose an y SQL construct to e v aluate these statements 223in a batch\224 as we do thanks to the FGB clause the statements have to be checked one by one and no fuzzy partitioning of the domains is used In Saint-P aul et al propose an approach to the production of linguistic summaries structured in a hierarchy 


i.e a summarization tree where the tuples from the database are rewritten using the linguistic variables involved in fuzzy partitions of the attribute domains The main difference with our approach is that vie ws summarization as an independent process which is not performed by means of SQL queries but by a speci\002c algorithm As mentioned before the FGB operator enables to obtain summaries 223on demand\224 without having to summarize the whole database C Mining Association Rules with SQL The use of SQL queries for mining association rules has been advocated by several authors see e.g 15  17 18 19 20 Ho we v er  none of these approaches considers an extended group-by mechanism and none considers fuzzy association rules either To the best of our knowledge the only approach which uses a fuzzy extension of SQL for mining fuzzy association rules or gradual functional dependencies as the authors call them is which relies on SummarySQL already discussed in the subsection above VIII C ONCLUSION In this paper we have introduced a fuzzy group-by FGB operator based on the use of fuzzy partitions of attribute domains and described how it could be integrated into the SQLf language The main goal of FGB is to generate more meaningful and useful groupings than the regular group-by operator We have shown how this construct makes it possible to generate fuzzy summaries 223on demand\224 as well as to mine fuzzy association rules in a practical way Among perspectives for future work let us mention 017 implementation aspects and experimentations it is of course important to make sure that queries involving a fuzzy grouping have execution times comparable to those involving a classical group-by One can be reasonably optimistic about this issue given the results presented in about a similarity-based group-by SGB which show that the overhead in this case is no more than 25 FGB should be even more ef\002cient than SGB since i the clusters are prede\002ned ii the use of fuzzy partitions still makes it possible to employ evaluation techniques based on sorts and/or indexes cf Section VI 017 an investigation about the way other measures than support and con\002dence for assessing fuzzy association rules cf could be tak en into account 017 a variant of the approach described here aimed at expert users where fuzzy cardinalities would be computed instead of scalar ones In a fuzzy association rule mining context this implies computing the validity of the rules by means of a technique such as that described in 017 an extension of the format of the rules to be mined for instance through a relaxation of the universal quanti\002er based on one of the approaches proposed in R EFERENCES  P  Bosc and O Pi v ert 223SQLf  a relational database language for fuzzy querying,\224 IEEE Transactions on Fuzzy Systems  vol 3 no 1 pp 1\22617 1995  Y  N Silv a W  G Aref and M H Ali 223Similarity group-by  224 in Proc of ICDE'09  2009 pp 904\226915  P  Bosc B Buckles F  Petry  and O Pi v ert 223Fuzzy databases 224 in Fuzzy Sets in Approximate Reasoning and Information Systems The Handbook of Fuzzy Sets Series  J Bezdek D Dubois and H Prade Eds Dordrecht The Netherlands Kluwer Academic Publishers 1999 pp 403\226468  E H Ruspini 223 A ne w approach to clustering 224 Information and Control  vol 15 no 1 pp 22\22632 1969  R Saint-P aul G Raschia and N Mouaddib 223General purpose database summarization,\224 in Proc of VLDB'05  2005 pp 733\226744  P  Bosc O Pi v ert and L Li 264 etard 223On the comparison of aggregates over fuzzy sets,\224 in Intelligent Systems for Information Processing From Representation to Applications  B Bouchon-Meunier L Foulloy and R Yager Eds Amsterdam The Netherlands Elsevier 2003 pp 141\226152  P  Bosc and L Li 264 etard 223Aggregates computed over fuzzy sets and their integration into SQLf,\224 International Journal of Uncertainty Fuzziness and Knowledge-Based Systems  vol 16 no 6 pp 761\226792 2008  P  Bosc and O Pi v ert 223On some fuzzy e xtensions of association rules 224 in Proc of the Joint 9th IFSA World Congress and 20th NAFIPS International Conference  Vancouver Canada 2001 pp 1104\2261109  E H 250 ullermeier 223Implication-based fuzzy association rules,\224 in Proc of PKDD'01  2001 pp 241\226252  P  Bosc and O Pi v ert 223On tw o qualitati v e approaches to tolerant inclusion operators,\224 Fuzzy Sets and Systems  vol 159 no 21 pp 2786\2262805 2008  C Zhang and Y  Huang 223Cluster by a ne w SQL e xtension for spatial data aggregation,\224 in Proc of ACM GIS  2007 pp 53\22656  C Li M W ang L Lim H W ang and K C.-C Chang 223Supporting ranking and clustering as generalized order-by and group-by,\224 in Proc of SIGMOD'07  2007 pp 127\226138  D Rasmussen and R R Y ager  223Summary SQL 226 a fuzzy tool for data mining,\224 Intell Data Anal  vol 1 no 1-4 pp 49\22658 1997  R Meo G Psaila and S Ceri 223 An e xtension to SQL for mining association rules,\224 Data Min Knowl Discov  vol 2 no 2 pp 195\226 224 1998  J Clear  D Dunn B Harv e y  M L He ytens P  Lohman A Mehta M Melton L Rohrberg A Savasere R M Wehrmeister and M Xu 223Nonstop SQL/MX primitives for knowledge discovery,\224 in Proc of KDD'99  1999 pp 425\226429  S Thomas and S Sara w agi 223Mining generalized association rules and sequential patterns using SQL queries,\224 in Proc of KDD'98  1998 pp 344\226348  T  Y oshiza w a I Pramudiono and M Kitsure g a w a 223SQL based association rule mining using commercial RDBMS IBM DB2 UBD EEE\\224 in Proc of DaWaK'00  2000 pp 301\226306  T  Imielinski and A V irmani 223MSQL A query language for database mining,\224 Data Min Knowl Discov  vol 3 no 4 pp 373\226408 1999  K Rajamani A L Cox B R Iyer  and A Chadha 223Ef 002cient mining for association rules with relational database systems,\224 in Proc of IDEAS'99  1999 pp 148\226155  R Pereira M Millan and F  Machuca 223Ne w algebraic operators and SQL primitives for mining association rules,\224 in Neural Networks and Computational Intelligence  2003 pp 227\226232  D Ras mussen and R R Y ager  223Finding fuzzy and gradual functional dependencies with SummarySQL,\224 Fuzzy Sets and Systems  vol 106 no 2 pp 131\226142 1999  D Dubois E H 250 ullermeier and H Prade 223A systematic approach to the assessment of fuzzy association rules,\224 Data Min Knowl Discov  vol 13 no 2 pp 167\226192 2006  P  Bosc D Dubois O Pi v ert and H P rade 223On fuzzy association rules based on fuzzy cardinalities,\224 in Proc of the 10th IEEE International Conference on Fuzzy Systems FUZZ-IEEE'01  Melbourne Australia 2001 


Capacity for analysis and synthesis, Research skills Capacity to learn 4   Interpersonal skills Leadership, Interpersonal skills, Ability to communicate with non-experts, Oral and written communications in native language, Critical and self-critical capability, Teamworking 5   Personal skills Ability to work autonomously Problem solving, Capacity to adapt to new situations Knowledge of a second language, Concern for quality, Will to succeed, Elementary computing skills, Capacity for applying knowledge in practice Decision making, Project design and management Information management skills Table 7 shows the mean importance of each gr oup of competences by stakeholder group for the First Cycle Degree respondents. For the employers the personal skills are the most importance group followed by professional skills and interpersonal skills. The table confirms that employers rank internationalisation and entrepreneurship lowest. Academics agree with the order of the competence groups but rate all of them more strongly important than employers. Students also rank the competence groups in the same order but rate internationalisation slightly higher than employers and entrepreneurship very slightly lower Analysis of the level of development of the competenceas shows that there is good agreement that Professional skills are the best developed of the skill groups followed by Personal skills and Interpersonal skills. As with importance the Entrepreneurship and Internationalisation skill groups are developed the least. There is clearly a difference between the rated importance and level of development of these groups in that the Personal skills group is rated most important but the Professional skills group is developed the most. Other than that the general structure of the supply demand balance of the generic competences is quite well aligned V  CONCLUSIONS AND RECOMMENDATIONS  The objective of this study was to apply the Tuning Methodology to the EIE discipline set to test the alignment between the views of the importance and level of development of sets of competences between students, academics and employers. The results of this study show that the Tuning Methodology is a useful tool for assessing alignment in these subjects  TABLE VII  MEAN IMPORTANCE OF EACH GROUP BY STAKEHOLDER  Competence Group Academic Employer Student Internationalization 2.86 2.63 2.79 Entrepreneurship 3.07 3.05 3.02 Interpersonal skills 3.23 3.09 3.06 Professional skills 3.36 3.29 3.13 Personal skills 3.44 3.30 3.29  In total 3,275 questionnaires have been collected from the stakeholder groups from a range of European countries. The number of responses from each c ountry is variable and a full by country analysis is not possible with the responses currently available, that said a range of analyses have been carried out Tests of the homogeneity of the responses across all countries show that there are country differences in some analyses and some of these are explored, others merit further investigation. Many of the analyses presented in this paper are aggregated results and therefore potentially suffer clustering problems. This too is a topic of further investigation The following is a summary of the key conclusions drawn from the analyses presented Consistent top of importance of the generic competences for all stakeholders is Problem solving. Second in the ranking for students is Elementary computing skills. Comparatively students under rate the importance of this skill, perhaps it is taken for granted in students than in academics and employers The results show employers value it more than students and this message could be communicated to students A number of gaps exist between the importance and level of development between the stakeholders. The largest gap is Knowledge of a second language and the evidence from the languages section suggests this view is strongly aimed at English The generic competences group into 5 sets with Personal skills rated consistently as the most important set. This is followed, in descending order of importance, by Professional skills, Interpersonal skills, Internationalisation and Entrepreneurship. The smallest mean Internationalisation is just over midway between weak and considerable. Given the European Unions desire to see greater student and employee mobility across Europe, it is clear there is scope for scope for improvement in the value placed in this skill set by curriculum designers Curriculum designers and academics can take comfort in the finding that Professional skills are the best developed of the skill gr oups followed by Personal sk ills and Interpersonal skills. This not only aligns with the views of employers but aligns with anecdotal evidence on the real purpose of EIE education programmes. That said there is a trend in a number of countries across Europe away from large firm employment towards a Small to Medium Sized Enterprise culture. Curriculum designers may wish to reflect on the fact that entrepreneurial skills are very low in the list and perhaps merit more attention and emphasis in the curricula In general the different stakeholders rate the importance and level of development on average differently. This difference has been taken into account in the conclusions drawn. The general unevenness in ranking reflects different perspectives and is, in itself not considered a major issue, of concern are the relative positions of competences and the relative gaps. In general and even allowing for this employers and academics tend to rate competences higher in importance than students and graduates a number of specific instances of differences are drawn out in section 8 73 


After the text edit has been completed, the paper is ready for the template. Duplicate the template file by using the Save As command, and use the naming convention prescribed by your conference for the name of your paper. In this newly created file, highlight all of the contents and import your prepared text file. You are now ready to style your paper; use the scroll down window on the left of the MS Word Formatting toolbar A CKNOWLEDGMENT  The authors acknowledge the funding provided by the European Union for this project and to the members of the project team for help in collecting questionnaires R EFERENCES   1  European Association for Education in Electrical and Information Enginering http://www.eaeeie.org  2  EIE-Surveyor project http://www.eie-surveyor.org  3  Tuning Report http://tuning.unideusto.org/tuningeu/index.php?option=content&task=vi ew&id=172&Itemid=205  4  Overview of the Bologna Process  Implementation in Europe in Electrical and Informaiton Engineetring, ISBN 2-9516740-3-1, pp 542  74 


              


   


                        





