Towards an Optimal Algorithm for Recognizing Laman Graphs Ovidiu Daescu University of Texas at Dallas daescu@utdallas.edu Anastasia Kurdia University of Texas at Dallas akurdia@utdallas.edu Abstract Agraph with vertices and edgesisaLaman graph or equivalently a generically minimally rigid graph if 2 3 and every induced subset of vertices spans at most 2 3 edges Laman graphs play a fundamental role in rigidity theory We discuss the Veri cation problem Given a graph with vertices decide if it is Laman We present an algorithm that 
recognizes Laman graphs in    log  time where   is the best time to extract two edge disjoint spanning trees from a graph with vertices and 2 2 edges or decide no such trees exist So far it is known that   is  3 2  log  1 Introduction Generically minimally rigid graphs in the plane also known as Laman graphs are fundamental to rigidity theory 12 5  A g rap h with 
vertices and edges is a Laman graph if 2 3 and every induced subset of vertices spans at most 2 3 edges Laman graphs have an inductive construction   start with an edge for 2 and at each step add a new vertex in one of the following two ways I attach a new vertex via two edges to two existing vertices or II delete an edge and connect a new vertex to both endpoints of that edge plus one other existing vertex These steps are called vertex addition Henneberg I insertionoftypeI\and edge splitting Henneberg II insertion of type II respectively and the result of each step is 
a Laman graph A Henneberg sequence for graph is a sequence of vertex additions and edge splittings required to construct  The reverse operations for vertex addition and edge splitting are called Henneberg deletion I and Hennberg deletion II  respectively The sequence of such operations that completely decomposes is called The authors would like to thank Ileana Streinu for organizing the 2005 and 2006 Barbados workshops partially supported by NSF This work would not have been possible without participation in those workshops Daescu s research is supported in part by NSF award CCF0635013 a 
reverse Henneberg sequence  In this paper we consider recognizing Laman graphs Speci cally we address the Veri cation problem GivenagraphGwith vertices decide if it is Laman  Most existing veri cation algorithms take quadratic time in the number of input vertices to recognize Laman graphs 8 2  A v ery e le ga nt a n d s imple algo r ith m i s the pebble game algorithm rst proposed by Jacobs and Hendrickson   a nd g e ne r a l i ze d l a t e r on b y S t re i n u Lee and Theran in a number of papers 13 7 14  Thepebblegamealgorithmsolvestheveri cation problem in 
 2  time Recski 11 a nd Lo v a s z an d Y emin i  9  p r o v e d t h a t a graph    is Laman if and only if for each edge  the multigraph   is the union of two edge disjoint spanning trees In the remaining of this sectionweassumeanedgeof has been doubled and denotes the resulting graph A known subquadratic time algorithm is due to Gabow and Westermann 3 a nd r e qu ires  3 2 log  time They solve this problem in two steps 1 Find a 2-forest of 
two edge disjoint spanning trees which is done in  3 2 log  time and 2 Test if a data structure computed in step 1 called top clump  is empty this is done in  log  time Thus step 2 is coupled with step 1 in the sense that if two edge disjoint spanning trees are given to step 2 computed by some arbitrary method then step 2 should be changed and could require asymptotically larger time Very recently it was suggested to us that a method presented in 14 c an b e ada p ted to s p ee d up the top clump test to   time assuming the data 
structures computed in step 1 are available A different veri cation algorithm was proposed recently by Bereg  Th e meth od in 2  p erfo rm s a step by-step decomposition of  aiming to construct a hierarchical decomposition of  called a red-black hierarchy RBH It is proven in  that is a Laman graph if and only if it admits a RBH The RBH construction in 2 h as thre e s t e ps  1  Find tw o e dg e d isjoin t s pan ning trees by some method Bereg uses an  2  time Proceedings of the 42nd Hawaii International Conference on System Sciences - 2009 1 978-0-7695-3450-3/09 $25.00 © 2009 IEEE 


algorithm to obtain the trees but he could have used the algorithm in 3  f o r  3 2  log  time 2 Construct a red-black hierarchy which is done in  2  time 1 and 3 Certify the hierarchy which is done in   time Since steps 2 and 3 do not depend on how step 1 is performed Bereg s method decouples the computation of the two edge disjoint spanning trees in step 1 from the rest of the computation Our Results We present an    log  time veri cation algorithm based on the following simple observation from Corollary 4 in  it i s n o t n eces s a ry to actually construct to decide is Laman we only need to decide whether a RBH decomposition exists for  Thus steps 2 and 3 above from Bereg s algorithm become 2 use the two spanning trees to decide whether admits a RBH decomposition Our algorithm has two steps 1 Compute two edge disjoint spanning trees by the best possible method We use the algorithm in  s i nc e t his i s t h e bes t w e k n o w if say a simple  log  time algorithm is discovered for this part we will use that one This step takes  3 2 log  time 2 Given two edge disjoint spanning trees for  we give a simple solution for deciding whether admits a RBH decomposition that uses depthrst search and segment trees only and takes  log  time This step is independent of how step 1 is done At the end of step 2 we know if is Laman or not Moreover we also show that the RBH can be actually constructed in  log  time using a two steps procedure that is simple and easy to implement Thus our algorithm decouples step 1 from step 2 to take advantage of future improvements on step 1 and solves the second step of the veri cation in  log  time instead of  2  time 2 Red-black hierarchies Red-black hierarchies RBH are introduced in 2 as follows A hierarchy     for a given graph        isagraph        is a set of edges forming a rooted tree The function    de nes a oneto-one correspondence between the vertices of and the leaves of the tree denoted as    The function       maps an edge    of to the edge     1    2    of called cross edge so that 1    and 2    are ancestors but not common ancestors of   and    respectively A RBH is a hierarchy     satisfying the following conditions 1 The root of the tree has ex1 An improved  log  time solution has recently been posted at de k l g f n o q m p e add a b c j i h Figure 1 A graph      actly two children root rule 2 A vertex is the only child of its parent if and only if it is a leaf leaf rule 3 For any cross edge its endpoints have the same grandparent but different parents in the tree cross-edge rule 4 Cross edges connect all grandchildren of a vertex and form a tree tree rule Given  the construction of the RBH in 2 has twomajorphases First,acopyofanedgeof    is added to and two edge-disjoint spanning trees called red tree nd called black tree  are computed for     using a known method if no such trees exist then is not Laman and we stop Agraph and its two edge disjoint spanning trees are shown in Figure 1 Second a decomposition of is performed and a characterizing hierarchy    is constructed in correspondence with the steps of the decomposition We describe this decomposition 2 b e low Suppose  and let   In the rst step a root  corresponding to  is created in and is colored red In the second step the edge  is removed from and two nodes corresponding to the resulting black trees 0 and 1 are made children of in and are colored black Then an iterative procedure is performed to construct Attheendofstep 1  edges of one color form a spanning forest   0  of   0   where are connected subgraphs of  and each element of is a spanning tree of its connected subgraph  When restricted to these subgraphs edges of the other color form a set   0 0  0 0   0   Each element of is a forest spanning its respective connected subgraph  The trees  are linked together in only with edges of color Thereare 1 vertices of color at the last level of  each corresponding to a tree from  At the beginning of the th step all edges of color crossing the multi-cut de ned by Proceedings of the 42nd Hawaii International Conference on System Sciences - 2009 2 


e  q k a i j b h g c d c d a q k m n j lf i a i h b l g e f p o n m q k h g f n m o p p o p p o n m m o p op b a i l q k j cd n g h k q l mo a bij f e Figure 2 at the end of step 8 that completes the decomposition of  are found and deleted from  At this point consists of P 0   connected subgraphs and the trees  of color are the spanning trees of their respective subgraphs For each vertex of corresponding to a tree from  1 vertices of color corresponding to the trees from are created in as children of  A cross edge is added between two vertices and at this now lowest level if the corresponding trees and were previously in the same connected component and got separated at step 1 by removing an edge of color between them Addition of cross edges to completes the th step of the decomposition At step 1  these actions are repeated for the swapped colors When at some step a cut of color is to be found and some connected component does not have such cut avertex corresponding to a tree of color that spans is created in and the decomposition stops for  The decomposition of ends when it has ended for all connected components The resulting graph characterizing the decomposition of the graph in Figure 1 is shown in Figure 2 The entire decomposition process is given in appendix After is constructed a check of whether satis es the de nition of the RBH is performed If the answer is positive is a RBH and the corresponding graph is a Laman graph The method in 2 t ak es  2  time to construct the decompositioncharacterizing graph and   time to verify that it satis es the de nition of the RBH 3 A suf cient condition We show that if all edges are removed from during the decomposition process the graph constructed from the decomposition is always a RBH and thus is a Laman graph Vertices of correspond to spanning trees of connected subgraphs of  Anything marked by the subscript in what follows refers to    denotes the connected subgraph of vertex    denotes the set of vertices of      denotes a tree spanning      denotes the set of vertices of spanned by the tree  We rst prove that the four RBH rules introduced earlier always hold for the decomposition-characterizing graph of any graph   iftheedgesetof can be partitioned into two edge-disjoint spanning trees Let    denote the color associated with node red or black If     is red then is black and vice versa Root rule Atthevery rst step is empty and a node of color  corresponding to the spanning tree that does not contain the added edge   is created in  The node is the root of Then  is deleted from the other tree  which creates exactly two trees of color in and exactly two nodes of color in that are children of  corresponding to these two trees Thus the root rule always holds Leaf rule We rst prove that if a vertex is the only child of its parent then is a leaf If a vertex is the only child of its parent the connected subgraph     could not be split any further during decomposition and       Atthe step when was created the decomposition process has stopped for    there was just one tree of color    in     and just one tree of color    otherwise     would have been partitioned further and would have siblings Hence the vertex corresponding to   is a leaf in  Next we prove that a leaf vertex cannot have any siblings Suppose there is a vertex having 1 children and at least one of them is a leaf The vertex corresponds to a connected subgraph spanned by a tree of color     and a spanning forest of trees of color  Each of its children corresponds to a connected subgraph  1 2   spanned by a tree of color and a forest of color possibly containing only one tree If this spanning forest contains more than one tree there are edges of color in connecting the trees of the spanning forest At the next step of the decomposition these edges will be deleted the spanning tree of color will split into at least two different trees and corresponding vertices will be created in as chilProceedings of the 42nd Hawaii International Conference on System Sciences - 2009 3 


dren of Hence cannot be a leaf vertex If the spanning forest of   contains just one tree then a vertex corresponding to that tree of color  is created in as a child of and again cannot be a leaf vertex This argument holds for every child of  contradicting the assumption that at least one child of is a leaf Cross-edge rule  A cross edge is added between any two vertices and at step if their corresponding vertex sets   and   previously belonged to one connected subgraph  and got separated at step 1 by removing the edge between them At level 2 of there is always a vertex that corresponds to   The vertices at the same level of correspond to connected subgraphs that are disjoint subgraphs of  Hence no other vertex at level 2 of can correspond to a connected subgraph containing       their subsets or the union of their subsets The vertex corresponding to the connected subgraph  is a common grandparent of and  Again according to the construction rules parents of and in correspond to different connected subgraphs so and have different parents Tree rule If edges are removed from the tree spanning the vertex set   corresponding to some vertex of  1 new trees result from and 1 nodes are created as grandchildren of in  For each edge deleted from  a cross edge is added between the vertices corresponding to the two sub-trees of that were connected by  Each grandchild of gets a cross edge incident to it There are 1 grandchildren of and edges connecting them The cross edges form a tree spanning all the grandchildren of  We have shown that red-black hierarchy rules hold for any  Then we only need to check if satis es the general de nition of a hierarchy Lemma 3.1 If all edges are removed from during the decomposition process then the characterizing graph of satis es the de nition of hierarchy Proof The edges of are the union of the edges of the rooted tree and the cross edges There is a cross edge   in for each edge    of  The edge is deleted from when it crosses the cut separating from  according to the construction rules a cross edge is then added between the vertices of corresponding to the connected components of and at the current step There is one-to-one correspondence between the leaves of and the vertices of  Since the graph splitting procedure continues until all edges are removed each vertex of is eventually disconnected from the rest of the graph by deleting an edge of some color  Avertex corresponding to a tree of color spanning the connected subgraph    is then created in Since cannot be split further the decomposition stops for and becomes a leaf vertex of Also there is no leaf vertex in that does not correspond to a vertex of  Suppose there exists such a vertex in  Then it corresponds to a tree spanning a connected subgraph  with   1  This means that contains edges that were not deleted during the decomposition of  a contradiction The endpoints of are ancestors of   and    respectively but they are not their common ancestors recall that   and   are the leaf vertices of corresponding to vertices and of  The vertex corresponds to some connected component   The vertices of that are descendants of correspond to connected components over the subsets of   The leaf vertices of that correspond to vertices in   are the descendants of in Since    is an ancestor of    Similarly is an ancestor of   Thevertices and are connected by a cross edge corresponding to two disjoint connected subgraphs Therefore cannot be an ancestor of    and the end vertices of are not common ancestors of   and    2 Lemma 3.2 If has edges left at the end of the decomposition process the characterizing graph of does not satisfy the de nition of hierarchy Proof If there are non-deleted edges of when the decomposition stops then there are no corresponding edges for them in  In addition we do not have a one-to-one map from to   someleavesof correspond to connected subgraphs containing several vertices 2 Thus building is not required for certifying Laman graphs just decompose based on the rules in 2 a nd c h e c k i f has edges left when the decomposition ends 4 The decomposition algorithm We have shown that building is not required for verifying that is a Laman graphs It is suf cient to perform the decomposition of according to the rules from 2 an d t hen c heck wheth er ther e a re ed ges left in  The decomposition algorithm has some notable features At each step edges of only one color are deleted The groups of red and black edges are deleted in turns At each step except the rst and the last ones at least one edge is deleted from some edges may never be deleted Thus the edges of can be grouped so that edges of one group are deleted from at the same step The decomposition process provides a natuProceedings of the 42nd Hawaii International Conference on System Sciences - 2009 4 


ral order on these groups We denote this ordering as  2 3    where the index of corresponds to the step at which the edges of the group are deleted Instead of weuse to characterize the graph decomposition Our main goal now is to speed up the decomposition algorithm from 2 using t h e f o llo wing simple observation deletion of any edge    from its tree of color     where is a parent of in a DFS ordering of the tree of color    always forms two trees such that one of them is rooted at and all nodes in that tree are descendants of  We slightly modify the graph decomposition algorithm from   T he edg e s t o b e d ele t e d a t t he ne xt s tep are identi ed at the end of the preceding step and marked for deletion At the rst step  is marked for deletion and no other action is performed Each iterative step in consists of removing the marked edges of some color and identifying and marking the edges crossing the cuts of the opposite color  that appear after removing the marked edges We also note that once the original graph has split into several connected subgraphs the decomposition proceeds independently on each subgraph and the problem of nding the edges to be deleted at the subsequent step can be viewed as several independent subproblems each on a distinct connected subgraph Consider the graph and its two edge disjoint spanning trees and  rooted at vertices and  respectively Let    be the depthrst search traversal of starting at and using only edges of color where is either red or black We assign each vertex of two DFS order numbers one from     and another one from     New edges are never added to the trees so the numbers never change For any edge of color  it is always possible to establish the parent-child relationship of its endpoints by looking at their DFS numbers for color  Whenever an edge is mentioned in this text as a vertex pair the rst vertex is always the parent of the second vertex in       When an edge    of color is deleted from a tree rooted at some and spanning a connected subgraph  two trees emerge rooted at and rooted at  Only the vertices of are descendants of in DFS\(c The ancestor/descendant relationship can be established in the    tree by looking at the discovery and nish times     and     respectively of the vertices Lemma 4.1 An edge    of color crosses the cut      induced by the deletion of the edge    of color if and only if one of its endpoints is a descendant of and the other one is not i.e exactly one of its endpoints discovery times is in       Proof If   6 and   then and so clearly crosses the cut A symmetric argument applies if   and   6  If   6 and   6  neither nor are in  so both endpoints of are in and does not cross the cut If   and    both endpoints of are in and does not cross the cut 2 From Lemma 4.1 it follows that if we associate an interval      with every edge of color theintervals corresponding to the edges crossing the cut have exactly one endpoint in  We identify such intervals using a segment tree data structure enhanced with two lists at each internal node one sorted by the start time of the intervals stored at the node and one sorted by their nish time A segment tree 1 is a b alan ced bina ry s ear ch t r ee th at s t o r es a s et of intervals with endpoints from a nite set of abscissae intervals corresponding to edges of color forexample Each of its nodes has an interval   associated with it and stores a list of input intervals intersecting    Binary search in a segment tree allows to report the intervals containing a query point In our case the endpoints of the intervals are integer numbers so an interval containing a point  for any 0 1  contains the point as well First we nd the intervals with one endpoint before   and the other endpoint in by querying for intervals containing the point    Second we nd the intervals with one endpoint in and the other endpoint after   by querying for intervals containing the point    To ensure that each returned interval has an endpoint in we augment the standard segment tree by storing two sorted lists at each node instead of just one list With each node  we store a list    of intervals that intersect   that is sorted by the nish time of the intervals in non-decreasing order similarly the list  stores the same intervals sorted by their starting time in non-increasing order We give both queries above an additional parameter   for the rst one and   for the second one The rst query only looks at the lists  and reports the intervals that have their right endpoint no greater than    The second query only looks at the lists  and reports the intervals that have their starting point no earlier than    Thus this data structure allows us to return intervals with exactly one endpoint in  Each query with an edge interval  takes log   time where is the number of intervals crossing edges reported To avoid reporting an interval more than once the interval is deleted from the segment tree including the sorted lists associated with the nodes that store it when it is returned by a query This can be easily done in log  time Having two segment trees one for the red intervals        Proceedings of the 42nd Hawaii International Conference on System Sciences - 2009 5 


of the black edges and the another one for the black intervals        of the red edges allows to ef ciently identify edges of the cuts at each step of the decomposition Lemma 4.2 The decomposition of can be done in  log  time Theorem 4.3 Given a graph with vertices and edges deciding whether is a Laman graph or not can be done in    log  time where   is the time to extract two edge disjoint spanning trees from or decide no such trees exist Proof We can check that 2 3 in   time Finding two edge disjoint spanning trees or deciding no such trees exist takes   time The best known algorithm so far gives    3 2  log  time 3 The decomposition takes  log  time  log  for the segment trees  log  to answer all queries and   to check if has any edges left at the end of the decomposition 2 5 The reconstruction algorithm The order in which edges are deleted from during the decomposition determines the structure of the corresponding red-black hierarchy sogiven onecanunambiguously construct in top-down fashion according to the rules from 2  T he v e rtices o f correspond to subtrees of and  and there is a vertex in for each distinct sub-tree of or  that appeared during the decomposition of  In the original approach to construct the th level of  one has to know the spanning sub-trees at step 2 of the decomposition and to gure out what trees appear after removal of edges at the beginning of step  It takes   time to nd the emerging trees We consider the decomposition process in reverse order i.e start from red and black disjoint trees and add edges to them until two spanning trees are formed and take advantage of the fact that it is faster to union the disjoint sets into larger sets than to partition the trees into disjoint sub-trees As a result the proposed bottomup construction method is faster and produces the same graph as the top-down approach The last group of  2 3  contains edges of some color deleted at the very last step of the decomposition Each endpoint of edges of corresponds to a subtree of of color spanning only the vertex  A leaf node    is added to the th level of foreachsuchvertex  Only one leaf vertex is created for the endpoint shared by multiple edges from  For every edge    of a corresponding cross edge         is added to For p op o p o Figure 3 after considering edges of 8        m o p m p op mo p o Figure 4 after considering edges of 8 and 7           every leaf vertex   of  its parent should be at level 1 of  corresponding to a subtree in that is of color and spans only the vertex Suchparentvertex      is added to level 1 of along with a tree edge connecting and   we call this the parent creation rule  The vertices of connected by a cross edge have the same grandparent For every cross edge tree formed at the thlevel,avertex is added to level 2 of aswellasatree edge connecting and forevery Wehave completed level of as well as added some elements to the two upper levels See Figure 3 and Figure 4 for an illustration At the th iterative step for each cross edge    of of color two vertices and on the th level of are identi ed They correspond to trees in of color that contained and respectively at the thstepof the decomposition If for some endpoint of an edge from does not exist on the th level of anew vertex should be created at the th level and a parent for it should be added following the parent creation rule Then the cross edge corresponding to    is added to between and  After all edges of are considered all cross-edges of the th level of are in place For each cross edge tree formed at the th level of Proceedings of the 42nd Hawaii International Conference on System Sciences - 2009 6 


 a node is added to level 2 of  That grandparent node becomes a parent of the parents of the vertices of spanned by the cross-edge tree  At this time the th level of is complete and levels 1 and 2 of are partially constructed Repeating these steps for all  2  yields the RBH  Lemma 5.1 Given two edge-disjoint spanning trees for  a red-black hierarchy for ifitexists,canbeconstructed in  log  time Proof Obtaining for takes  log  time Lemma 4.3 The time spent on reconstructing one level is proportional to the number of cross edges at that level The total number of cross edges is   Weuse a standard UNION-FIND data structure for maintaining the vertices of that the vertices of correspond to at each step notice that the actual trees of color or  dened by those vertices in are not needed to construct  This allows to complete the reconstruction phase in  log  time so the total time for constructing the RBH is  log   2 References  Se r g e y Be re g  F a s t e r a l g o r ith m s fo r r ig id ity in th e p la n e  http://arxiv.org/abs/0711.2835  Se r g e y Be re g  Ce rtify i n g a n d c o n stru c tin g m in im a lly rigid graphs in the plane In SCG 05 Proceedings of the twentyrst annual symposium on Computational geometry  pages 73 80 2005 3 H arol d G abo w and H erbert W e st erman n F o rest s frames and games algorithms for matroid sums and applications Algorithmica  7\(1\65 497 1992 4 R ut h H aa s Au dre y L ee Il ean a S t r ei nu a n d L oui s Theran Characterizing sparse graphs by map decompositions Journal of Combinatorial Mathematics and Combinatorial Computing JCMCC  62 2007 5 R ut h H aas  D a v id Or d e n Gu nt er Rot e  F r a nci s co S a nt o s  Brigitte Servatius Herman Servatius Diane Souvaine Ileana Streinu and Walter Whiteley Planar minimally rigid graphs and pseudo-triangulations Computational Geometry Theory and Applications 31:31 61 2005 6 D on al d J a c ob s a n d Br u c e H en dr i c kso n  A n a l gor i t h m for two dimensional rigidity percolation The pebble game Journal on Computational Physics  137\(2\46 365 2007 7 Aud r e y L e e a nd I l ea na S t r e in u P e bb l e game al gor i t h ms and sparse graphs Discrete Mathematics  308\(8\:1425 1437 2008 8 A ud r e y L ee  I le ana S t r ei nu  a nd L o u i s T her a n  Fi nd i n g and maintaining rigid components In Proceedings of the 17th Canadian Conference on Computational Geometry CCCG 05  pages 219 222 2005 9 L  L o v a s z a nd Y  Y e mi ni  O n g e n er i c r i gi di t y i n the plane SIAM J Algebraic and Discrete Methods  3\(1\:91 98 1982  F r an co P  P r eparat a a n d M i chae l I an S h amos  Computational Geometry An Introduction Springer-Verlag 1985  A Recsk i  A ne twor k t heo r y a ppr o ach t o t h e r i g i d i t y of scheletal structures II Laman s theorem and topological formulae Discrete Applied Math 8:63 68 1984  I l ea na St r e i n u  P s eud o t r i an gul at i o n s  r ig id i t y a n d motion planning Discrete  Computational Geometry  34:587 635 2005  I l ea na St r e i n u a n d L o u i s T her a n  S p ar se hyp er graphs and pebble game algorithms Available at http://arxiv.org/abs/math/0703921  I l ea na S t r e i n u a nd Lo ui s T he r a n Sp ar sit y c er ti f y in g graph decompositions http://arxiv.org/abs/0704.0002 Proceedings of the 42nd Hawaii International Conference on System Sciences - 2009 7 


Appendix A sample construction of the decomposition characterizing graph As an example we consider the decomposition of the graph from Figure 5 The red tree drawn with thick lines is rooted at the vertex and the blacktreeisrootedatthevertex  All vertices of except the top one are marked with the lists of vertices of their corresponding subtrees The edges of deleted at the step are shown with dashed lines Figure 20 presents the resulting graph characterizing the decomposition of   de k l g f n o q m p e add a b c j i h Figure 5 Original example graph  de k l g f n o q m p e add a b c j i h Figure 6 at the end of step 1  no changes in the original graph Figure 7 at the end of step 1  de k l g f n o q m  p e add  a b c j i h Figure 8 at the end of step 2  c d a i h b l g e f p o n m q k Figure 9 at the end of step 2  de k l g f n o q m  p  a b c j i h Figure 10 at the end of step 3  c d a i h b l g e f p o n m q k h g f n m o p b a i l q k j cd e Figure 11 at the end of step 3  Proceedings of the 42nd Hawaii International Conference on System Sciences - 2009 8 


 c j i h de k l g f n o q m    p  a b  Figure 12 at the end of step 4  e  q k a i j b g c d c d lf h a i h b l g e f p o n m q k h g f n m o p p o n m b a i l q k j cd e Figure 13 at the end of step 4  c j i h de k l g f n o q m    p  a b  Figure 14 at the end of step 5  e  q k a i j b h g c d c d lf a i h b l g e f p o n m q k h g f n m o p p o n m m o p b a i l q k j cd n g h k q l a bij f e Figure 15 at the end of step 5  a b c j i h de k l g f n o q m  p   Figure 16 at the end of step 6  e  q k a i j b h g c d c d a q k m n j lf i a i h b l g e f p o n m q k h g f n m o p p o p o n m m o p b a i l q k j cd n g h k q l a bij f e Figure 17 at the end of step 6  a b c j i h de k l g f n o q m   p Figure 18 at the end of step 7  Proceedings of the 42nd Hawaii International Conference on System Sciences - 2009 9 


e  q k a i j b h g c d c d a q k m n j lf i a i h b l g e f p o n m q k h g f n m o p p o p p o n m m o p b a i l q k j cd n g h k q l mo a bij f e Figure 19 at the end of step 7  e q k a i j b h g c d c d a q k m n j lf i a i h b l g e f p o n m q k h g f n m o p p o p p o n m m o p op b a i l q k j cd n g h k q l mo a bij f e Figure 20 at the end of step 8 that completes decomposition of  Proceedings of the 42nd Hawaii International Conference on System Sciences - 2009 10 


Dr Mohammad Mojarradi is an expert in developing mixedsignallmixed-voltage electronic circuits for drive and control of actuators power supplies sensors and micro-machined electromechanical interface applications He manages the development of the electronic circuits for the thermal cycle resistant electronics task for Mars Science Laboratory at JPL and leads a research consortium of universities developing electronics for extreme environments He received his Ph.D from UCLA in 1986 has twenty-five patents eighty publications and is a senior member of IEEE Prior to joining JPL he was an Associate Professor at Washington State University and the Manager of the mixed-voltagelspecialty integrated circuit group at the Xerox Microelectronics Center El Segundo CA Patrick McCluskey is an Associate Professor of Mechanical Engineering at the University of Maryland College Park where he is associated with the CALCE Electronic Products and Systems Center He has published extensively in the area of packaging and reliability Of electronics and microsystems for high power and extreme temperature environments including two books and numerous book chapters He has also served as general or technical chairman for numerous conferences in these research areas Dr McCluskey is an associate editor of the IEEE Transactions on Components and Packaging Technologies He received his Ph.D in Materials Science and Engineeringfrom Lehigh University Benjamin J Blalock received his B.S degree in electrical engineering from The University of Tennessee Knoxville in 1991 and the M.S and Ph.D degrees also in electrical engineering from the Georgia Institute of Technology Atlanta in 1993 and 1996 respectively He is currently an Associate Professor in the Department Of Electrical Engineering and Computer Science at The University of Tennessee where he directs the Integrated Circuits and Systems Laboratory ICASL His research focus there includes analog integrated circuit design for extreme environments both wide temperature and radiation on CMOS and SiGe BiCMOS multi-gate transistors and circuits on SOI analog circuit techniques for sub 100-nm CMOS mixed-signallmixed-voltage circuit design for systems-on-a-chip and biomicroelectronics Dr Blalock has co-authored over 80 refereed papers He has also worked as an analog IC design consultant Dr Blalock is a senior member of the IEEE Raymond J Garbos is VP and Chief Engineer of Aura Instrumentation Inc He is responsible for the development of advanced avionics concepts architectures and technologies for aerospace applications He has over thirty five years of circuit logic and system architecture design experience He was an Engineering Fellow for Sanders Associates 1984-8 5 Lockheed Martin 1986 2000 and BAE Systems 2001-06 He was the RL V Avionic IPT lead for Lockheed Martin and has participated in many Advanced Space Avionics Studies supporting MSFC He received BSEEIMSEM degrees from Northeastern University in 196811971 and a MAT degree from Rivier College in 2001 Leora Peltz is a scientist at Boeing Phantom Works responsible for the development and application of sensors and advanced avionics and insertion   into flight applications She has experience in evaluation and modeling of circuits and materials in extreme environments and the real-time operation of distributed architectures Leora received a PhD degree from Case Western Reserve University in 2003 Dr Michael Alles is a Research Associate Professor in the Electrical Engineering Department and the Program Manager for Commercial Systems with Vanderbilt University's Institute for Space and Defense Electronics ISDE where he works in the area of radiation effects in microelectronics He spent 2 years as a Business Unit Director for Silvaco International 10 years with Ibis Technology Corporation in product development and program management and 1 year with Harris Semiconductor as a design engineer Dr Alles has a strong background in semiconductor technology including manufacturing and metrology computer-aided design tools for semiconductor fabrication processes devices and integrated circuit design and expertise in modeling and simulation of radiation effects in semiconductor devices and circuits Dr Alles has served on the SIA ITRS starting materials working group since 1999 serving as chairman of the SOI materials group for the 2001 revision of ITRS and has been a reviewer for Transactions on Nuclear Science several times He has over 40 technicalltrade publications and 2 patents Dr Alles received his Ph.D in Electrical Engineering 12192 MS in Electrical Engineering 8190 11 


and his B.E in Electrical Engineering with a Double Major in Physics 5187 allfrom Vanderbilt University Dr Alles present research focus is in the application of advanced and emerging semiconductor technologies in radiation environments R Wayne Johnson is a Samuel Ginn Distinguished Professor of Electrical Engineering at Auburn University and Director of the Laboratory for Electronics Assembly and Packaging LEAP At Auburn he has established teaching and research laboratories for advanced packaging and electronics manufacturing His research efforts are focused on the materials processing and reliability aspects of electronics manufacturing Current projects include lead free electronics assembly mixed leadfree and Sn/Pb electronics assembly wafer level packaging flip chip assembly assembly of ultra thin Si die 30,um and electronics packagingfor extreme environments 2300C to 4850C Wayne was the 1991 President of the International Society for Hybrid Microelectronics ISHM He received the 1993 John A Wagnon Jr Technical Achievement Award from ISHM was named a Fellow of the Society in 1994 and received the Daniel C Hughes Memorial Award in 1997 He is a Fellow of the Institute of Electrical and Electronics Engineers IEEE and a member of the Surface Mount Technology Association SMTA and IPC Association Connecting Electronics Industries He is currently a member of the IEEE Components Packaging and Manufacturing Technology CPMT Society Board of Governors and Vice President of Publications He is also Editor-in-Chief of the IEEE Transactions on Electronics Packaging Manufacturing He has published 58 journal papers 140 conference papers 6 book chapters and co-edited one book on electronics packaging and electronics manufacturing He has also presented a number of invited talks Wayne holds one U.S patent Wayne received the B.E and MSc degrees in 1979 and 1982 from Vanderbilt University Nashville TN and the Ph.D degree in 1987 from Auburn University Auburn AL all in electrical engineering 12 


11 Xiao Yang L Haizhon S Choi 2004 Protection and Guarantee for Video and Voice Traffic in IEEE 802.1 le Wireless LANs INFOCOM 2004 Twenty-third Annual Joint Conference of the IEEE Computer and Communication Societies Volume 3 Issue 7-11 21522162 12 W Spearman J Martin A Distributed Adaptive Algorithm for QoS in 802.1 le Wireless Networks Proceedings of the 2007 International Symposium on Performance Evaluation of Computer and Telecommunication Systems SPECTS'07 San Diego CA July 2007 pp 379-386 13 Lim L.W Malik R Tan P.Y Apichaichalermwongse C Ando K Harada Y Panasonic Singapore Labs A QoS Scheduler for IEEE 802.1l e WLANs Consumer Communications and Networking Conference 2004 pp 199-204 14 V Vleeschauwer J Janssen G Petit and F Poppe Quality bounds for packetized voice transport Alcatel Tech Rep 1st Quarter 2000 15 ITU Series H Audiovisual and Multimedia Systems Infrastructure of audiovisual services Coding of moving video H.264 03/2005 International Telecommunication Union 12 BIOGRAPHY cooperative signal received his B.S Engineering from respectively processing and sensor networks He M.S and Ph.D degree in Electrical UCLA in 1993 1995 and 2000 Will Spearman is a Master's Candidate at Clemson University's School of Computing His work focuses on QoS in 802.cle and wireless networks His background includes a B.S in Psychology with a minor focus in Computer Science He currently is employed at Network Appliance Inc Dr Jim Martin is an Assistant Professor in the School of Computing at Clemson University His research interests include broadband access autonomic computing Internet protocols and network performance analysis He has received funding from NASA the Department of Justice BMW IBM and Cisco Dr Martin received his Ph.D from North Carolina State University Prior to joining Clemson Dr Martin was a consultant for Gartner and prior to that a software engineer for IBM Jay Gao joined the Jet Propulsion Laboratory in 2001 and is currently a senior research staff in the Communications Networks Group in the Telecommunication Research and Architecture section His research is primarily focused on space-based wireless communications and networking with emphasis on applications for the Mars Network He is currently conducting research for developing quality-of-service QoS protocols for the envisioned Interplanetary Network IPN and study optimization and protocols for deep space Ka-band communications He also supports requirements definition and interface design activities for the Department of Defense's Transformational Communications MilSatcom project and system engineering effort for NASA's Exploration System and Mission Directorate ESMD supporting the Constellation Program for return of human to the Moon and Mars Other research interests include optical-based sensorweb discrete event simulation of distributed communication/sensor systems energy efficient routing and self-organization algorithm for 13 


  14  Figure 5:  Site B1 Terrain horizon ma sk with 1 degree azimuth spacing  Figure 6:  Site B1 Terrain horizon mask with 1 de gree azimuth spacing, in e quatorial coordinates 


  15  Figure 7: Lunar South Pole Solar Illumination Yearly Average  Figure 8:  Lunar South Pole DTE Visibility Yearly Average 


  16  Figure 9: Lunar North Pole Sola r Illumination Yearly Average  Figure 10:  Lunar North Pole D TE Visibility Yearly Average 


  17  Figure 11: Site A1 Elevation Topography  Figure 12: Site A1 Yearly Average Solar Illumination and DTE visibility, Medium Resolution 


  18   Figure 13:  Site LB Te rrain Horizon Mask  Figure 14:  Theory and Computed values of Average Yearly Solar Illumination 


  19  Figure 15:  Theory and Computed values of Average Yearly DTE Communication  Figure 16:  Heliostat Mirror Design to Eliminate Cable Wrap 


  20 Angeles, where he also received a B.S. in Applied Mathematics  Eric Fetzer is a Senior Member of the Technical Staff at the Jet Propulsion Laboratory, Pasadena, California specializing in satellite observations of the atmosphere.  His scientific interests include planetary boundary layer processes, tropical phenomena, upper tropospheric variability, and climatologies of temperature, water vapor and clouds.  His technical interests include analysis of large data sets, and of multi-sensor observations. He has over 20 peer-reviewed publications and given numerous scientific presentations, public lectures and media interviews about climate science. Eric received a B.A. in Physics from the University of California Berkeley, and a Ph.D. in Astrophysical, Planetary and Atmospheric Sciences from the University of Colorado, Boulder   Amy Braverman is a Senior Statistician at the Jet Propulsion Laboratory, California Institute of Technology She holds a B.A. in Economics from Swarthmore College an M.A. in Mathematics from UCLA, and a Ph.D. in Statistics also from UCLA. Prior to her current position in JPL's Science Data Understanding Group, she was a Caltech Post-doctoral Scholar at the Jet Propulsion Laboratory, and a Scientist in the Flight Sciences Experiments Section of the Science Division. Dr Braverman conducts research on information-theoretic methods for the analysis of massive data sets and streams statistical data fusion, high-dimensional data analysis, and statistical analysis for climate model evaluation and diagnosis. She has published in both the statistics and geoscience literature, and is active in both communities She is a member of the Multi-angle Imaging SpectroRadiometer Science Team, and serves as a member of the Atmospheric Infrared Sounder Science Integration Team. Her responsibilities on both missions include designing data reduction algorithms for massive, remote sensing data sets. Dr. Braverman also holds an appointment in the Department of Statistics at UCLA as Adjunct Associate Professor, and is active in UCLA\222s Center for Environmental Statistics. She is member of the Committee on Applied and Theoretical Statistics of the US National Academy of Science. She has refereed for the Journal of the American Statistical Association, the Journal of Computational and Gr aphical Statistics, IEEE Transactions on Geoscience and Remote Sensing, and the Journal of Applied Meteorology and Climatology Seungwon Lee is a senior member of the High Capability Computing and Modeling Group at Jet Propulsion Laboratory. She is conducti ng research on comet gas dynamics, nonlinear dynamics control, climate model parameterization, Earth science data analysis, parallel computing, and advanced numerical algorithms. She received her Ph.D in Physics fr om the Ohio State University and her M.S. and B.S. in Physics from the Seoul National University, Korea  Matthew Henderson is software engineer in the High Capability Computing and Mode ling group at JPL. His current work includes Web Services and Instrument Data Level 2 subsetting. He received a B.S. Computer Science from CSU Pomona, and is currently pursuing M.S Computer Science  Steven J. Lewis is a member of the Information System and Computer Science staff member at the Jet Propulsion Laboratory.  He received a BS in Mathematics from the University of California, Los Angeles in June 2001, and the MS and Ph.D. Degree from Claremont Graduate University in May 2004 and May 2007, respectively.  He worked as a post doctoral fellow at Keck Graduate Institute from June 2007 until he joined JPL in March of 2008.  During his graduate and post doctoral work, his studies focused on applications of Bayesian methods to hidden Markov models with particular interest and application to protein sequencing.  His work at JPL has focused on integrating web services into various programming platforms for the purposes of accessing NASA satellite data, as well as developing object tracking so ftware and contributing to image enhancement and restoration efforts Van Dang is a member of the Science Data Understanding Group at the Jet Propulsion Laboratory. She was responsible for the NEWS Level 2 processing that generated the formal merged Level 2 data from multiple A-Train instruments  Manuel de la Torre is a Physicist from the Universidad Complutense at Madrid \(Spain\. After finishing his Ph.D work at the University of Bayreuth \(Germany\ on pattern formation in turbulent flows and a 7 1/2 year stunt as Ass and Assoc. Prof. at the Escuela T\351cnica Superior de Ingenieros Aeron\341uticos in Madrid \(Spain\, he came to the Jet Propulsion Laboratory on a 1-year Sabatical leave in 1997 wanting to apply fundamental concepts of nonlinear systems and geophysical fluid dynamics to something that might be directly useful to soci ety. He discovered the JPL as a great place to achieve that goal and extende d his stay a bit longer, becoming Technical staff and working on different aspects of remote sensing, validation of satellite instruments, and data analysis of atmospheric processes and climate  


