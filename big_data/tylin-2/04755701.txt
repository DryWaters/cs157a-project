What Is Complex About 273 Applications Untangling Application Architecture Complexity in a Case of European Investment Banking  Martin Mocker Rotterdam School of Management, Erasmus University  mmocker@rsm.nl   Abstract  In this paper, we first derive propositions from the current literature addressing the causes and impacts of application ar chitecture \(AA We then untangle AA complexity itself by differentiating four types of AA complexity that are mingled in extant literature: interdependency diversity-, deviation-, and 
overlap-related AA complexity. Based on this more differentiated view we validate the propositions in the setting of a European Bank. Our findings suggest that only interdependency-rela ted AA complexity behaves as currently assumed. Other types show partially opposite effects  1. Introduction  Global competition, new or changing regulations and changes in customer demand  lead businesses to increase their complexity by creating new organizational layers or units, issuing variations of their products that cater to new customer segments or adding geographies to their existing ones  
Alongside business complexity, the complexity of information technology \(IT\systems supporting the business \(i.e. IT complexity\ increasing [1  Th i s i s  a critical issue because of the negative impacts that IT complexity has on business, e.g. on its agility and as the overriding concern on costs [1, 3 Although a number of publications mention IT complexity, a literature review among the top IS and business journals shows that IT complexity often is 
not the actual object of research. Nevertheless, it is possible to derive propositions from the statements made in the \(academic and consulting\ literature However, these propositions remain conjectural, with anecdotal backing at most. They also implicitly use the concept of "IT complexity" to mean different things, indicating a lack of clarity on the different facets or types of IT complexity in current research see Section 2 Our research helps to addresses this issue by explicating the often implicit propositions on the causes and impacts of an important part of IT 
complexity \(namely application architecture \(AA complexity\d by validating them on 273 applications in the investment banking \(IB\ arm of a European bank. By relating back to the science of complexity, we untangle the vague concept of AA complexity into different types of AA complexity interdependency-, diversity-, deviation-, and overlap/redundancy-related AA complexity. We are able to show that in our case study, these types are strikingly different with respect to their causes and impacts and 
hence require more differentiated research than has been conducted previously To achieve this, we first study literature in order to derive current propositions about AA complexity Section 1\e then briefly describe our case and the research method applied to validate the propositions Section 2\After summarizing the results of the analyses performed \(Section 3\we discuss our interpretations \(Section 4\d conclude by pinpointing implications for practice and further research on AA complexity. Furthermore, an appendix presents the results of the analyses in detail  
2. Application architecture complexity  deriving propositions from the literature  Literature on IT related complexity is very fragmented, in part due to the various meanings of complexity and the various disciplines that examine it. For example, theoretical computer science refers to the computational complexity of algorithms. Here complexity is defined as the efficiency with which a problem of a certain size can be solv A s  another example, software engineering looks at the 
procedural\plexity within application programs as measured e.g. by lines of a be s  cyclomatic number [9, 10  t h e num ber of li n e arl y  independent paths through a program's source code or the Halstead me a f u n c tio n of t h e  number of operators and operands used  in relation to the available vocabulary\. However, these metrics take the perspective of the developer or reviewer of an application program Proceedings of the 42nd Hawaii International Conference on System Sciences - 2009 1 978-0-7695-3450-3/09 $25.00 © 2009 IEEE 


In contrast to these perspectives, we would like to take the perspective of the IT manager looking at a company's set of applications and their interconnections, also referred to as application architecture \(AA\. AA has been defined as being concerned with "individual applications and their interfaces" [4, p. 48 Tog e th er w i th i n f o r m ation architecture, business process architecture as well as technology architecture, AA forms the basis of Enterprise Architecture" [4 A l t h oug h  w e s t a y on the level of applications and measure their degree of complexity, unlike the previously described views we do not look at their "interior" complexity Instead, we move one level up by viewing the applications in relation to other applications  From this perspective, we do not find many research articles dealing directly with AA complexity. However, we do find a number of statements in the academic and consulting literature that include several implicit propositions on causes as well as on impacts of AA complexity. Table 1 analyzes a selection of these statements with respect to types of AA complexity, their causes and impacts as derived from the academic and consulting literature From this analysis, one can see that different authors \(or sometimes even the same author\ude to complexity but are actually referring to different facets or types of AA complexity: interdependency diversity, deviation from standards and overlap/redundancy. Currently, research does not differentiate between these types of complexity which is why we would like to untangle them in this paper Interdependency refers to the interconnectedness of the applications in terms of the interfaces they have with each other. Applications with more interfaces to other applications would be more interdependent than those with fewer interfaces 1  Diversity relates e.g. to the number of different technologies that an application is built on   1 Several types of interdependencies \(or "coupling"\ have been differentiated with respect to modules within individual applications; this includes syntactic vs. semantic vs. pragmatic dependencies [16-18 o r co n t r o l v s d a ta e x cha n g e de pe n d e n c i e s  19  T h e s e ty pe s o f de pe nde nc ie s be t w e e n intr aap pl ic at io n modules might also be transferred to inter-application dependencies. While we did not explicitly differentiate between the types, we relied on "documented" interfaces which are mostly explicit \("syntactic", e.g. an application making a Remote Procedure Call to another one\ and sometimes only implicit semantic", e.g. if an application expects a certain data format to be left by another one and hence also assumes a certain meaning of the data\ Further research might differentiate between different types of interdependencies more explicitly than we did \(see also outlook on further research in Section 5 Statement Source Cause of AA complexity Type of AA complexity Impact of AA complexity Growing complexity in companies' systems can fossilize operations", "legacy systems cobbled together to respond to each new business initiative create rigidity and excessive cost", "Inflexibility  w a s  t he result of systems so complex that any change required individually rewiring systems to all the other systems they connect to  hange becom e s a    pens i v e advent ure  4, p. 11  cf. also  Age of applications legacy Business requirements business initiatives Interdependence systems heavily connected  to each other \(interfaced or wired"/"cobbled together Agility decreases rigidity fossilize inflexibility Costs increase expensive The complexity has not added value. Most managers can list processes they perform in many different ways in multiple parts of the company and support with many different systems 4, p. 11  Business requirements context: diverse business processes Overlap redundancy: many applications supporting overlapping processes  wide duplication of functions", "to combat complexity   produc ed m i llions of  dollars in savings 1, p Business requirements context: diverse business processes \("functions Overlap \(see above Costs increase Reducing complexity means developing and implementing companywide standards   w ill lead t o low er c o s t s   13, p 54  also None Deviation from standard Costs increase Over time they had amassed a staggering number of disparate hardware platforms operating systems, database management systems  reduce their IT complexity and, in the process, slash IT operating and maintenance cost 3 c f   also Age \("over time Diversity of number of different technological platforms IT operations and maintenance costs increase Table 1: Deriving propositions on AA complexity from the literature \(selection Proceedings of the 42nd Hawaii International Conference on System Sciences - 2009 2 


such as operating systems \(OS\ or database management systems \(DBMS\. In contrast  deviation from the standard looks at whether the technologies upon which an application is built comply with the standard technology set by a policy within a company. An application could be built on one single DBMS \(and hence exhibit low diversity but this DBMS could be non-standard-compliant within the company \(and hence the deviation of the application from the standard would be higher While diversity and deviation form connections from AA "downwards" towards the IT infrastructure technology\itecture [4, p. 48   overlap/redundancy forms a connection "upwards towards business process architecture [4, p. 48  describes the degree to which an application covers certain functionality already covered by other applications. If two applications are supporting the same business processes for the same business products, they overlap. Hence, within the different layers of architecture that have been identified in the literature [4, 20 e focu s on application s  architecture \(especially when looking at interdependency\hat is concerned with "individual applications and their interfaces" [4, p clu din g  its touch points with business process architecture when looking at overlap/redundancy\ as well as with technology architecture \(when looking at diversity and deviation from standards The identified types of AA complexity fit well with mainstream definitions of complexity in general complexity science [7, 21 In lin e w i t h oth e rs  w e  view complexity as an intrinsic structural property of the respective system \(here: the application architecture and the application\, and not as something that is primarily psychological in nature or something relative to the person observing the system 12, 26 Although not meant to be comprehensive, Table 1 allows us to rephrase the statements in the form of propositions, which are summarized in the conceptual model underlying our research \(see Figure 1    Causes of IT complexity Age Business requirements  IT complexity Interdependency Diversity of technologies Deviation from technology standards Overlap/redundancy  Impact of IT complexity Cost Agility  Figure 1: Conceptual model underlying the propositions  The propositions we derived \(by applying the four AA complexity types introduced above Related to causes 2 of AA complexity  1  Older applications have a higher complexity P1.1: interdependency, P1.2: diversity, P1.3 deviation from standards, P1.4 overlap/redundancy\an newer ones \(cf. the first and last line of Table 1\he underlying logic is that over time, the business and IT environments change. These changes lead to adaptations of the applications. As many of those changes get implemented in a "rush" rather than in a "well-designed" way, older applications have a higher chance of being more complex than applications that have been introduced lately and hence not been exposed to so many changes 2  Applications with a higher complexity of business requirements also exhibit higher AA complexity \(P2.1 P2.4 as above for the different types\an those applications with simpler business requirements \(cf. the second and third line of Table 1\he reasoning underlying this proposition is different from the first in the following way: regardless of the applications' age, some applications might just have to handle more \(complex\ business requirements than others and hence itself be more complex. This can be true for young as well as old applications Related to impacts of AA complexity 3  Applications with higher AA complexity \(P3.1 P3.4 as above for the different types\ cause higher IT costs \(maintenance and operations than applications with lower AA complexity cf. all lines except the second one in Table 1 The logic underlying this proposition is that it takes more resources to operate and maintain applications that e.g. have more interfaces This might be because e.g. making a single change to the application could necessitate checking all interfaces. Hence, the more interfaces an application has, the more effort and hence costs\ are incurred. As another example, if an application uses more than one database or operating system, it will also collect" more cost: when changes are applied to any of these platforms, the application might have to be checked for whether it still performs as expected on the changed platform Hence, an application using two DBMS has double the chance of having to be checked than an application only using one DBMS   2 In fact, the factors we term "causes" might be proxies for other root causes \(e.g. "rushed" changes\, which are more difficult to measure. We relied on the propositions as found in the literature Proceedings of the 42nd Hawaii International Conference on System Sciences - 2009 3 


Also, if an application relies on technologies e.g. DBMS\at are not compliant to the standard employed in a company, the company might have to build up new skills to support this application, further adding to the cost of maintaining and operating the application \(see 1, 3, 13 f o r f u rth e r e x a m ples  4  Applications with higher AA complexity cause lower business agility than applications with lower AA complexity \(cf. the first line in Table 1\ One logic behind this proposition is that it might be more difficult to adapt an application to meet new business environmental conditions if the application is complex \(e.g. because more interfaces have to be changed the change in business conditions cannot be implemented swiftly within complex applications \(cf. "adaptive agility  How e v e r becau se of t h e overriding importance of costs in practice and in order to stay focused, we do not consider proposition 4 in this paper Although intuitive, these propositions have not been validated in the literature on AA complexity so far 3 Before laying out our approached to validating these propositions, we will highlight the conclusions that researchers and practitioners/consultants have drawn from them: the current mantra is clearly to reduce AA complexity, i.e. reduce the interdependency of applications, diversity, standard deviation and functional overlap in order to reduce costs. This way of thinking is especially evident in article titles such as "Fighting complexity in IT" [5  or in advices like "any company's first step should be to focus relentlessly on reducing complexity rather than increasing it" and that Leonardo da Vinci's motto, "Simplicity is the ultimate sophistication should be adopted by "every CIO A s  another example, the objective to "combat IT complexity by creating simplification policies" was also found on Gartner's list of the top ten resolutions for the CI ce, a s i m p le AA i s us u a ll y  s e e n  as favorable [28, p. 1   The results from validating the propositions will show whether these conclusions are always warranted. If not, adjusting these recommendations is an implication for further research and for practice    3 To verify this, we conducted a comprehensive literature review 29  W e incl u d e d  to p I S and b u s i ne s s jo ur nal s  3 0   MI S Q  I S R JMIS, MS, OS, SMR, HBR, CMR, DSI, ASQ, AMR, AMJ. This resulted in 1850 articles, of which 196 were deemed relevant These were analyzed in detail with respect to the above propositions  3. Brief description of case and method  We set out to validate the propositions identified above in investment banking \(IB\This is because banking itself is a highly information-intensive industry  m atters  in ban k i ng IB in particular is a very dynamic area of banking, with quickly changing business requirements. The industry is driven by innovation and introducing new products quickly; because of the informationintensiveness of banks, there is also a concurrent need to quickly implement the related changes with IT. In addition, the impact of AA complexity \(in terms of costs\ felt very strongly in IB when the business cycle \(determined by the stock exchange experiencing a downturn because IT costs form a major part of the overall costs  The company we selected for our study is a major European bank founded over 100 years ago with around 40,000 employees working in 28 first-level departments \(i.e. departments below board level operates 1,000 branches and its assets are roughly EUR 500 billion. The bank has so far pursued mainly organic growth with few large acquisitions. Besides IB, the bank offers retail banking, real estate and treasury services towards its private and small to medium corporate and institutional customers Contributing around 25% of the bank's total profit before the subprime crisis, IB has been one of the bank's major offerings. Over the last three years 2005-2007\, IB costs have remained stable, with revenues climbing at a CAGR of 28%. In the same time period, front-office IB staff rose from around 800 to around 900 FTE. IB has undergone some consolidation, with the former separate IB unit being integrated into the bank as a division. The division incorporates capital markets activities in credit equities, interest rates and foreign exchange with a strong focus on derivatives and structured products The bank itself categorizes its IB business into a matrix of 11 processes and 14 products \(called the product-process matrix\amples of processes are product development", "sales", "trading", "contract agreement", and "regulatory reporting". Examples of products include "listed derivatives", "securities", and OTC derivatives On the IT side, 273 applications support these processes for each of the products. Hence, an application "covers" a certain number of cells within this product-process matrix  3.1. Data collection  We collected data on these 273 applications from the IT staff members responsible for the applications Proceedings of the 42nd Hawaii International Conference on System Sciences - 2009 4 


only one person per application\he data we collected are mapped to the different constructs and variables in Table 2 \(column "N" indicates the number of applications for which data for the respective variables were available  Construct Variables measuring the constructs N AA complexity Interdependency gp3_y4_Sum_Intf number of interfaces of the application to other applications \(in- and outgoing 127 Diversity gp2_y7a_OS number of OS used by application 212 gp2_y8a_DBMS Number of DBMS used by application 146 Deviation from standard gp2_y7b_OS_Dev: Degree of deviation from standard OS for each OS used by an application we checked whether it was in the list of standard OSs supported by the bank 212 gp2_y8b_DBMS_Dev Degree of deviation from std. DBMS  146 Overlap redundancy gp3_overlap_count: Count of how often an application covers functionality that is also covered by another application relies on the product-process matrix introduced above 273 Causes of AA complexity Application age y14_Age number of years since first go-live  date of application 57 Business requirements y19_#_user_dpts number of user departments  using the application; measure of the diversity of requirements 244 y24_#_IB_bankprod number of IB products covered by the application; measure of the scope of the application 273 y26_#_IB_bankproc number of IB processes  covered by the application; measure of the scope of the application 273 Impacts of AA complexity: costs y36_Ops_cost cost of operating it or "keeping the application running", i.e. of making backups, supporting the servers it is running on, etc. Activities associated with these costs are performed by the infrastructure unit of the IT department. We recorded the costs incurred last year after confirming that they tend to remain stable over time 154 y37_Maint_cost cost that an application produces for maintaining it, i.e. fixing errors and making minor changes needed to keep the current state of requirement-fulfillment Activities associated with these costs are performed by the development unit of the IT department. These costs were collected for the last three years \(2005-2007 184 Table 2: Variables measured 4   3.2. Data analysis  Outliers/extreme values were identified using boxplots as well as by comparing means with 5   4 Legend: OS = Operating system; DBMS = Database management system; IB = Investment banking trimmed means. Where significant deviations were found \(ingoing interfaces: 5.43 \(mean\ vs. 3.85 \(5 trimmed mean\tgoing interfaces: 5.54 vs. 4.37 number of user departments: 3.33 vs. 2.44; operations costs: 292 vs. 164; maintenance costs: 377 vs. 261 the outliers were discussed with the company to ensure that the provided data were correct We conducted the analyses with and without the outlier data to ensure that they did not have a significant impact. Because the outliers were confirmed to be typical for IB, the following results are based on the data set that includes the outliers Preliminary analyses consisting of the inspection of histograms and normality \(e.g. the KolmogorovSmirnov test, which showed a significance of .000 for all variables\dicated a potential violation of the assumptions of homoscedasticity c e n onparametric tests were used that do not rely on the respective assumptions The complexity variables \(interfaces, diversity deviation, and overlap/redundancy\were first analyzed using Spearman's rank order correlation to ensure that they were not correlated with each other No correlation of any two of these variables indicated a significant correlation at the .01 level, the highest rho obtained with significance at the .05 level p=.031\was rho=.198. This was interpreted as an indication that the variables measured different aspects of AA complexity Thereafter, to address the skewedness of the complexity variables, we transformed them into categorical variables: for the total number of interfaces, we created three categories \(for applications with 2, 3-7, or 8 interfaces\; for the diversity of OS \(and DBMS\we set up two categories \(for covering one or more than one OS DBMS\ as there were only 36 \(20\s using two or more OS \(DBMS\or the deviation from standard OS \(DBMS\we created two categories \(deviating from standard or not; only 49 70\pplications deviated from the standard OS DBMS\or overlap/redundancy, we transformed the data into three categories \(for applications overlapping with 34, 35-79 or 80 applications in their covered cells For those variables with only two categories diversity of OS/DBMS and deviation from standard OS/DBMS\ we performed the Mann-Whitney test for those variables with three categories \(interfaces and overlap/redundancy\we performed the KruskalWallis test to check whether applications in the different categories differed significantly for each of the cause and impact variables Furthermore, to check for the impact of categorization, we performed a Spearman rank order Proceedings of the 42nd Hawaii International Conference on System Sciences - 2009 5 


test between the variables representing AA complexity and the variables representing causes and impacts. The results match closely in terms of significance of category differences and correlation i.e. for those variables where groups exhibited significant differences, we also observed medium correlation strength \(in terms of rho values between 0.3 and 0.5\with significance at the .01 level reinforcing that the categorization did not have a distorting impact on the data \(with the exception of the complexity-impact relation of overlap/redundancy, as this exhibited a non-linear relation that cannot be measured using the Spearman correlation; see Section 4  4. Results  For better readability, we summarize the results of the analyses described above. The appendix contains a detailed description. Table 3 depicts the results with respect to the support found for the propositions derived in Section 2 5   Table 3: Summary of results   Overall, we found support for all propositions \(13\ly for interdependency-related AA complexity Other types of AA complexity did not fully behave as proposed   5 Legend: "+" highly significant \(.01 level\upport of proposition that higher value of 'causes' coincide with higher value IT complexity \(e.g. older applications have higher level of interdependency\ or higher value of IT complexity leads to higher impact \(e.g. higher level of interdependency of applications also leads to higher maintenance cost\. "\(+\" significant \(.05 level support of proposition that that higher value of 'causes' coincide with higher value IT complexity \(e.g. applications covering more products also exhibit a higher level of interdependence significant \(.05 level\ inversion of propositions \(e.g. older applications exhibit lower level of deviation from standard OS\. "\(+\" significant \(.05 level\hape inversion of propositions \(e.g medium level of overlap/redundancy of applications leads to lower operations cost than applications with low or high level overlap/redundancy. "-+" ditto with highly significant \(.01 level N/A" not applicable as overlap is computed from the two variables process and products coverage. "" \(empty cell proposition not supported More specifically, the results for interdependency-related AA complexity show that groups of applications with more interfaces record a higher median score in terms of age \(P1.1\ well as in terms of user departments involved. The same is true at a lower significance level for the number of IB products and processes: the groups of applications with more interfaces also cover more investment banking products and processes \(P2.1\en it comes to complexity impacts, we also found a statistically significant difference in operations cost as well as maintenance cost across the three different interdepency-groups of applications. The more interdependent group \(i.e. applications with 3-7 or more than 8 interfaces\ recorded a higher median of operations and maintenance costs than the less interdependent group \(less than 3 interfaces applications \(hence supporting proposition P3.1  For diversity-related AA complexity  we got different results: almost none of the propositions found support. Although 8 different operating systems \(OS\ were used in total by the 273 applications 6 our tests revealed no significant difference neither in the age nor in the number of user departments involved, number of IB products or processes covered for applications using one versus applications using more than one OS. Hence propositions P1.2 and P2.2 cannot be supported \(at least not when measuring OS-related diversity We see similar results when measuring diversitycomplexity in terms of the number of DBMS used by an application \(overall, we identified 6 different DBMS used by the 273 applications 7 he only significant difference is for the age of applications Applications with more than one DBMS were also older on average than applications with only one DBMS, in support of proposition P1.2 \(in terms of DBMS\lower significance level, we see a significant difference in terms of the amount of user departments involved for those applications with one versus those with more than one DBMS: the former group involves less user departments than the latter This supports P2.2 stating that the more complex business requirements, the more diverse the applications get \(in terms of DBMS\e do not find support for this proposition when looking at the   6 The OS used were: Windows XP/2003 \(used by 28% of applications\, SunOS \(24%\, Solaris \(23%\, zOS \(13%\, AIX 5%\, Linux \(4%\, VMS \(1%\, Other Unix \(1%\; an application can use multiple OS, e.g. if the front-end of a multi-tier application runs on Windows and the back-end runs on AIX 7 The DBMS used were: Sybase \(used by 38% of applications Oracle \(24%\, DB2 \(18%\, MS SQL \(13%\, IMS \(4%\, proprietary DBMS \(3 Proceedings of the 42nd Hawaii International Conference on System Sciences - 2009 6 


number of products or processes covered by the application, though We also found no significance with regards to cost impacts of diversity-related complexity \(neither for DBMS nor for OS\ce, propositions P3.2 could not be supported  Turning to deviation-related AA complexity we found significant differences in terms of the products covered and at a lower significance level in terms of age and processes covered between those applications that do not deviate and those that deviate from the standard OS. Non-standard-compliant applications cover more products and also more processes. However, compliant applications are slightly older \(median: 3.2 years\ than non-compliant ones \(median: 2.2 years\hese results lend support to proposition P2.3 \(when measuring compliance to OS standards\terestingly, the results also indicate that the relation between age and deviation from proposition P1.3\ reverse to the proposition: older applications are more standard compliant Measuring the deviation of applications from the standard DBMS provides a somewhat different picture: significant differences only exist for the number of user departments involved in the application. Here, we find again a surprising result the standard-conformant applications have more userdepartments involved \(median: 3\an non-compliant ones \(median: 1 department; overall median: 2 departments\. This is inverse to the original proposition. We do not find support for propositions stating that with an increase in either age \(P1.3\r business requirements complexity \(P2.3 applications also increase in their deviation from standard technology \(in terms of DBMS As far as deviation-related impacts are concerned we found only one significant result: the group of applications that did not comply to DBMS standards exhibit lower maintenance cost than the compliant applications. In contrast to the original proposition 3.3, for DBMS-standard deviation, we observe significantly lower maintenance cost for noncompliant than for compliant applications  With regards to overlap-/redundancy-related AA complexity we found some support for proposition P2.4 stating that involvement of more users leads to more overlap of applications 8 No significant differences are found regarding the age of the applications, hence, the proposition that older   8 The variables for the coverage of products and processes were not included in this test as the overlap was computed using these two variables \(implying that there is a significant relation between the respective variables applications also exhibit a higher degree of overlap was not supported \(P1.4 However, interesting results were found for the impacts of overlap-redundancy-related AA complexity: it is striking to see that the applications with a medium level of overlaps have a lower median in operations cost than those with a low or high-level of overlap, implying a non-linear, U-shaped relation between overlap and operations cost. Interestingly the same holds true for maintenance cost. Hence, the original proposition \(P3.4\that applications with higher overlap also exhibit higher IT cost is not supported  5. Discussion  Up to now, the \(practical and academic discussion of AA complexity has lacked differentiation. Various kinds of AA complexity have been lumped together with little attempt to distinguish between them. The implicit propositions underlying the respective statements and recommendations have been that all these kinds of AA complexity increase with age and business complexity, and in turn cause higher IT costs In our case, however, the result \(Table 3\dicate that only interdependency-related AA complexity behaves as assumed by consultants and researchers with respect to causes and impact: older applications and those with more complex business requirements also exhibit more interfaces \(i.e. a higher degree of interdependency\; at the same time, more interdependent applications incur higher IT costs than less interdependent applications. An explanation for this is the intuitive assumption underlying the abovementioned propositions: on the one hand, when a business grows over time, applications are added, and these have to be connected to ever more applications In former times, more point-to-point interfaces might have been used, while newer applications try to reduce interfaces e.g. by relying on central middleware. On the other hand, it might also be more difficult to maintain and operate applications with many connections because it is not easy to keep track of all the interdependencies: changing one application means that all of the other applications connected to it have to be changed, as well, thus leading to higher costs for those interdependent applications. The advice of "doing more with less seems to hold true here. In this case, consultants would probably be right in advising their clients to either maintain the growth of or reduce the number of interfaces \(e.g. by introducing Enterprise Application Integration \(EAI\yers to eliminate point-to-point interfaces Proceedings of the 42nd Hawaii International Conference on System Sciences - 2009 7 


However, the other types of AA complexity diversity, deviation, and overlap\ot act according to the general propositions of researchers and consultants in our case. In the following paragraphs, we would like to discuss the deviations from the propositions stated in the introduction The diversity of applications with respect to OS does not seem to be related to any of the causes or impacts we looked at in our case. Concerning DBMS diversity seems to increase with age and the number of involved users. However, no relation to causes is found for DBMS-diversity either. There are multiple possible explanations for this. Firstly, looking at the data, we do not find many applications using multiple OS or DBMS in the company we chose for our case study \(e.g. there were only 20 applications using more than one DBMS\nce, the company might have already worked on the diversity issue Nevertheless, we would have expected some difference even among these few applications in the case of a strong relation. Secondly, we find differences in the support for the propositions depending on which level of the "technology stack we look at. If we think of the different types of technologies as being organized in a layered stack with the specificity of technologies increasing towards the top, OS would probably be on a low level and DBMS would be on a higher level \(because a DBMS is less 'general purpose', i.e. more constrained in what it can be used for\e might find the propositions supported only for 'more specific technologies, which we did not test for \(such as middleware, e.g. application servers, directory services, etc.\rther research might extend the proposition to include a broader coverage of the technology stack". Thirdly, it might well be that diversity \(i.e. the sheer number of technologies used by an application\ is indeed not an important complexity criterion on the level of applications However, it might still be important on more aggregate levels, such as application landscapes: If a business product \(such as derivatives\ makes use of applications that together employ a large number of different technologies on each layer of the technology stack, this combined diversity might very well have an impact on costs. Hence, we would have to look at higher levels of the IT architecture and could formulate the respective proposition for these levels even though they are not supported on the level of applications. Comparing complexity as well as its causes and impacts on different levels of IT architecture \(e.g. applications vs. application landscapes\would enable dissecting the impact that the combination of application has in contrast to single applications \(i.e. answer what the formation of a landscape is really contributing to the overall complexity\ch research could serve to further disentangle AA complexity by not only differentiating different types of AA complexity interdependency, diversity, deviation, and overlap but also by distinguishing different levels of AA complexity \(e.g. applications vs. application landscapes Regarding deviation, we again see differences depending on which level of the technology stack we look at: applications deviating from the standard OS also cover more investment banking products and processes. The reason for this might be that different investment products and processes were historically supported by applications on different platforms Hence applications that have been extended to also cover these products and processes had to be made compatible. This would also provide an explanation for why younger applications deviate more from the standard OS than older ones: introducing more connector" applications serving multiple products and processes will bear out this observation. This explanation makes us aware of the fact that the propositions would benefit from taking into account the previous complexity management activities conducted by the bank. A mediating construct of Complexity management activities and abilities might hence improve the conceptual model for future research. For this purpose, variables would have to be identified to measure the level of activities that address the respective AA complexity type \(e.g integration measures addressing interdependency standardization efforts addressing deviation, and consolidation efforts addressing overlap/redundancy Complexity management activities might mediate both the causes-complexity relation as well as the complexity-impact relation \(see Figure 2 for a refined conceptual model   Causes of IT complexity Age Business requirements  IT complexity Interdependency Diversity of technologies Deviation from technology standards Overlap/redundancy  Impact of IT complexity Cost Agility  Complexity management activities  Figure 2: Refined Conceptual Model  Regarding DBMS-related deviation, we observed two surprising relationships in our case: those applications that deviated more from the standard DBMS involved fewer user departments and also incurred less maintenance costs. The propositions suggested the inverse relationship. An explanation might be that the IT department refused to maintain the applications that were not standard-compliant Proceedings of the 42nd Hawaii International Conference on System Sciences - 2009 8 


These applications might hence generate "hidden" IT costs somewhere else. These costs might then not be reported as IT cost, but e.g. as marketing cost in the case of a non-compliant marketing information system. This explanation would hint at a problem with allowing exceptions to standards if the user department itself takes care of the non-compliant application. In this case, official indicators might underestimate the costs incurred by non-compliance unless the decentralized cost is being tracked as well We cannot think of an intrinsic argument that might warrant the introduction of non-compliant technologies with the aim of decreasing maintenance costs. It should be noted that this might not be the case for other impact variables \(such as agility short-term agility might very well improve if applications with non-standard technologies are added, because it would allow business requirements to be fulfilled more quickly in the short-term However, as we did not include agility as a dependent variable in our study, this claim remains conjectural Concerning overlap/redundancy of applications we only see the proposition on increased user department involvement influencing a higher degree of overlap among applications. Interestingly, the degree of overlap among applications exhibited a Ushaped relation to both operations and maintenance costs, with medium-level overlapping applications incurring the least cost. The explanation for this might be that applications need to have some level of overlap in order to be integrated and should not only serve as silos that consume even more resources to keep them connected with other applications [4, p  th e oth e r e x tre m e, t hos e application s  w i t h a  very high overlap might be so redundant that they incur double work, which increases costs as well This explanation was confirmed when we discussed the results with the bank itself. It follows that at least in this case, reducing overlap is not always warranted, as there might be an optimal level of overlap that does not necessarily coincide with the lowest level of overlap. This reminds us that not all relationships have to be linear when it comes to complexity. Especially in relation to agility, for some types of complexity, a certain amount might be essential and even beneficial, but too much might again be detrimental. While this has been investigated to some degree in non-IT-related areas 1, 2 it h a s rem a i n ed on l y a clai m s o f a r i n th e field of IT complexity \(e.g ilit y i s  hy pot h e sized to  decrease at the extreme ends of the vague construct IT complexity", hence leaving ample room for future research  6. Conclusions  We have shown that the propositions underlying current research and \(consulting\ practice do not hold true for all types of AA complexity. We disentangled the rather broad and vague AA complexity concept by proposing four types of AA complexity interdependency-, diversity, deviation- and overlap/redundancy-related AA complexity. We would recommend against referring broadly to "AA complexity" without further differentiation in future research; we advise specifying which type of AA complexity \(interdependency, diversity, deviation or overlap\ really meant. Being more precise will enable us to add further to the body of knowledge in this highly relevant area of IS research. This proved to hold especially true as we found that the general propositions were only valid for interdependencyrelated AA complexity and not for the other types of AA complexity. Future research should clearly be based on multiple case studies rather than just on a single case study in order to allow for generalization As we found support for the propositions for interdependency-related AA complexity, we propose honing in on this type of AA complexity further, e.g by differentiating the degree or type of interdependency between applications \(see footnote 1\or example, a question of interest could be whether batch-oriented interfaces are more costly to maintain than online interfaces or interfaces facilitated by middleware We also pointed to potential differences for similar types of IT complexity on different architectural levels \(such as for deviation and diversity on the level of applications vs. deviation and diversity on the level of application landscapes which might warrant further research Based on the interpretation of our research findings, we also proposed several adjustments to the current propositions by referring to the technologystack levels for diversity and deviation, and by introducing AA complexity management activities as a mediating construct We hope that this research will serve as a foundation for future research in this area, which has so far in its entangled form been marked by assumptions rather than the subject of actual research       Proceedings of the 42nd Hawaii International Conference on System Sciences - 2009 9 


7. References  1 A s hk e n a s R Simplicity-Minded Management Harvard Business Review, 2007 85 12\: p. 101-109 2 G o ttf re ds on, M. a nd K  A s pina ll Innovation vs Complexity Harvard Business Review, 2005 83 11\6271  S can t l e b u r y  S   et al    From IT Complexity to Commonality: Making Your Business More Nimble in Opportunities for Action in Information Technology 2004 The Boston Consulting Group 4 Ross J.W  P. W e ill, a n d D  C. Ro be rtso n Enterprise Architecture As Strategy 2006, Boston, MA: Harvard Business Scholl Press 5 Ma tte rn F S  Sc h nw  l de r, a n d W  Ste i n  Fighting Complexity in IT McKinsey Quarterly, 2003\(1\. 57-65 6 Child J  Parkinson's Progress: Accounting for the Number of Specialists in Organizations Administrative Science Quarterly, 1973 18 3\: p. 328 7 G e ll-Ma nn, M What is complexity Complexity, 1995 1 1\: p. 16-19 8 P a rk  R.E   Software size measurement: a framework for coutning source statements 1992, Software Engineering Institute, Pittsburg 9 Mc Ca be T  A complexity measure in Proceedings of Int'l Conf. Sofrware Engineering 1976 10  Mc Ca be T  a n d D   Sha r o n  Cyclomatic Complexity and the Year 2000 IEEE Software, 1996 13 3\ p. 115 1 Halstead  M  H   Elements of Software Science 1977 New York: Elsevier 12 r te ta B.M. a n d R  E. G i a c h e tti A measure of agility as the complexity of the enterprise system Robotics and Computer-Integrated Manufacturing, 2004 20 p. 495-503 1 S h p i l b erg D  et al    Avoiding the Alignment Trap in Information Technology. \(Cover story MIT Sloan Management Review, 2007 49 1\: p. 51-58 14 Bo h, W  F. a nd D. Y e llin Using Enterprise Architecture Standards in Managing Information Technology Journal of Management Information Systems 2007 23 3\: p. 163-207 15 Chil d P  e t a l  SMR Forum: The Management of Complexity Sloan Management Review, 1991 33 1\ p 73-80 16 K a is le r, S.H F  A r m our, a nd M. Va l i v u lla h  Enterprise Architecting: Critical Problems in Proceedings of the 38th Annual Hawaii International Conference on System Sciences \(HICSS'05 2005: Hawaii 17 X i a   F  Module Coupling: A Design Metric in AsiaPacific Software Engineering Conference \(APSEC'96  1996 18 K u bic e k H  The Organization Gap in Large-scale EDI systems in Scientific Research on EDI 1992: Alphen aan den Rijn 1 Hi tz M  and B  M o n t azeri  Measuring Coupling and Cohesion in Object-Oriented Systems in Proc. Int Symposium on Applied Corporate Computing 1995 2 Z ach m a n  J A    A framework for information systems architecture IBM Systems Journal, 1987 26 3\: p. 276292 2 J o hn so n G    Researchers on Complexity Ponder What It's All About in New York Times 1997. p. B4 22 Si ng h, K  The impact of technological complexity and interfirm cooperation on business survival Academy of Management Journal, 1997 40 2\: p. 339 23 A x e l rod, R  a nd M.D  C ohe n Harnessing Complexity organizational implications of a scientific frontier 2000 New York: Basic Books 24 Ke lly S. a nd M.A   A llison The Complexity Advantage 1999, New York: McGraw-Hill 25 S h e r m a n, H  a nd R Sc hultz  Open Boundaries creating business innovation through complexity 1998 New York: Perseus Books 26 Ca m pbe ll, D  J  Task Complexity: A Review and Analysis Academy of Management Review, 1988 13 1 p. 40-52 2 L e e O K  et al   IT-Enabled Organizational Agility and Firms' Sustainable Competitive Advantage in Proceedings of the Twenty Eighth International Conference on Information Systems 2007. Montral 28 r h out M  v E W a a r ts, a nd J.v   Hille g e rsbe rg   Change factors requiring agility and implications for IT  European Journal of Information Systems, 2006 15 p 132-145 29 W e bs te r, J  a n d R.T  W a ts on Analyzing the Past to Prepare for the Future: Writing a Literature Review MIS Quarterly, 2002 26 2\ p. xiii-xxiii 30 A I S MIS Journal Rankings 2007  [cited 2007 18 April 2007 v a ila ble  f r o m  http://www.isworld.org/csaunders/rankings.htm  31 Pruit t  S  Gartner issues 10 CIO resolutions for 2005  in InfoWorld 2004 32  Po rter M.E  an d  V  E  Mi lla r How information gives you competitive advantage Harvard Business Review 1985 63 4\: p. 149-160 33 T a ba c hnik  B.G  a nd L  S. Fide ll Using multivariate statistics 5th ed. 2007, Boston: Pearson 34 Marten so n s   A  Producing and Consuming Agility in Agile Information Systems - Conceptualization Construction, and Management K.C. DeSouza, Editor 2006, Butterworth-Heinemann. p. 41-51   Proceedings of the 42nd Hawaii International Conference on System Sciences - 2009 10 


Appendix: Detailed description of results  We structured the results of the analyses described in Section 3 according to the two different types of propositions, namely those related to the causes and those related to the impacts of AA complexity  A.1. Results from analyzing causes of AA complexity  Causes of interdependency-related AA complexity The Kruskal-Wallis test revealed a statistically significant difference in the age and number of user departments covered for the three different interdependency groups of applications \(see Table 4 for n and p values\he groups of applications with more interfaces record a higher median score in terms of age as well in terms of user departments involved \(see also  Table 4\The same is true at a lower significance level \(0.05 level\or the number of IB products and processes: the groups of applications with more interfaces also cover more products and processes \(see Table 4 for for n and p values\ce, we do find support for proposition P1.1, which states that the older an application, the higher its interdependency-complexity it is. We also find support for proposition P2.1, which asserts that the higher the complexity of business requirements the higher the interdependency-complexity of applications is  Causes of diversity-related AA complexity The Mann-Whitney U test revealed no significant difference in either the age or the number of user departments involved, or in the number of IB products or processes covered for applications with one OS versus applications with more than one OS see Table 5\. Hence, we do not find support for propositions P1.2 and P2.2, which state that \(OSrelated\ersity complexity is caused by age or business requirements-complexity We obtained similar results when measuring diversity-complexity in terms of the number of DBMS used by an application. The only significant difference at the .01 level was in the age of applications: The group of applications with more than one DBMS was also older on average than those applications with only one DBMS. This supports proposition P1.2, which states that the older the applications get, the more diverse they become \(in terms of DBMS\At a lower significance level \(.05 we see a significant difference in terms of the amount of user departments involved for those applications with one DBMS versus those with more than one DBMS: the former group was found to involve fewer user departments than the latter. This supports P2.2 which asserts that the more complex the business requirements are, the more diverse the applications become \(in terms of DBMS\. However, we do not find support for this proposition when looking at the number of products or processes covered by the application, though. See Table 5 for the detailed results of the analyses  Causes of deviation-related AA complexity A Mann-Whitney U Test \(Table 6\ealed significant differences in terms of the products covered and at a lower significance level in terms of age and processes covered between those applications that do not deviate from the standard OS and those that do. Nonstandard applications cover more products and also more processes \(median: 1 vs. 2\wever, standardcompliant applications at this firm are slightly older median: 3.2 years\ than the non-compliant applications \(median: 2.2 years\hese results lend support to proposition P2.3, which states that the higher the complexity of the business requirements in terms of product and process coverage\is, the more deviation from the standard \(in terms OS\s found in applications. Interestingly, the results also indicate that the relation between age and deviation from standard technology \(in terms of OS proposition P1.3\tradicts the proposition: older applications are more standard compliant Measuring the deviation of an application from the standard DBMS provides a somewhat different picture. A Mann-Whitney U test \(Table 6\ealed significant differences only for the number of user departments involved in the application \(at .05 level of significance\ain we find a surprising result in that the standard-conformant applications involve more user-departments \(median: 3\han the non-compliant ones \(median: 1 department; overall median: 2 departments\. We do not find support for the propositions stating that an increase in either age P1.3\siness requirements complexity \(P2.3 causes an increase in applications' deviation from standard technology \(in terms of DBMS\e see indications for an inverse relationship between the number of user departments involved and the deviation of applications from standards in terms of DBMS technology  Causes of overlap-/redundancy-related AA complexity A Kruskal-Wallis \(Table 7\ealed significant differences in terms of the number of user departments involved for those applications that have a low to medium overlap and those with a significant overlap \(the first two groups involve one user department and the last group involved 2.5 user Proceedings of the 42nd Hawaii International Conference on System Sciences - 2009 11 


departments on average\ignificant differences were found regarding the age of the applications. The variables for the coverage of the products and processes were not included in this test because the overlap was computed using these two variables implying that there is a significant relation between the respective variables\his lends some support to proposition P2.4 stating that involvement of more users leads to greater overlap of applications. The proposition that older applications also exhibit a higher degree of overlap was not supported \(P1.4  A.2. Results from analyzing impacts of AA complexity  Impacts of interdependency-related AA complexity A Kruskal-Wallis test \(Table 4\ealed a statistically significant difference in operations cost as well as maintenance cost across the three different interdependency-groups of applications. The more interdependent group \(i.e. applications with 3-7 or with 8 or more interfaces\igher median of operations \(Md=119,000 and 363,000 EUR respectively\ and maintenance costs \(Md=326,000 and 506,000 EUR respectively\ than the less interdependent group \(fewer than 3 interfaces applications \(Md=52,000 EUR operations costs and 64,000 EUR maintenance costs\. This supports the proposition \(P3.1\ that more interdependent applications also incur higher IT \(operations and maintenance\ts  Impacts of diversity-related AA complexity   Regarding OS-related diversity, a Mann-Whitney U test \(Table 5\howed no significant difference between the operations costs of more \(Md=93,890 n=105\d less diverse applications \(Md=131,540 n=27\09.5, z=-1.174, p=.24. The same holds for maintenance costs \(Md=166,400; n=121 vs Md=116,900; n =31\782, z=-.43; p=.668 To measure DBMS-related diversity, a MannWhitney U test was conducted \(Table 5\d revealed no significance difference in operations costs of more Md=129,985; n=85\d less diverse applications Md=154,777; n=16\5, z=-.237, p=.813. The same holds for maintenance costs \(Md=210,500 n=98 vs. Md=245,700; n=19\36, z=-.704 p=.481. Hence, the proposition \(P3.2\ that diversityrelated AA complexity leads to higher IT costs is not supported  Impacts of deviation-related AA complexity   Regarding deviation from the standard OS, a MannWhitney U test \(Table 6\revealed no significant difference between the maintenance costs and operations costs for standard-compliant \(Md=83,581 n=94 for operations cost and Md=148,300; n=113 for maintenance cost\nd non-compliant applications Md=180,147; n=38 for operations cost and Md=166,400; n=39 for maintenance cost z=-1.921, p=.055 for operations cost and U=2116 z=-.371, p=.711 for maintenance cost Concerning deviation from the standard DBMS, a Mann-Whitney U test \(Table 6\ealed a significant difference between maintenance costs for standardcompliant \(Md=373,100; n=59\d non-standardcompliant applications \(Md=170,200; n=58 U=1303, z=-2.231, p=.026. It is remarkable that the non-compliant applications had lower maintenance costs than the compliant applications. The difference between operations costs for compliant Md=109,978; n=51\d non-compliant applications Md=180,147; n=50\s not significant, U=1196.5 z=-.533, p=.594 Thus, the proposition \(P3.3\at application that deviate from technology standards incur higher IT costs is not supported. In contrast, for DBMSstandard deviation, we observed significantly lower maintenance cost for non-compliant than for compliant applications  Impacts of overlap/redundancy-related AA complexity a Kruskal-Wallis test \(Table 7\ showed significant differences in operations costs across the applications with a low \(less than 34 overlaps Md=90,442; n=37\edium \(35-79 overlaps Md=55,770; n=56\ and high level of overlap/redundancy \(more than 80 overlaps Md=129,985; n=61 6.862, p=.032. It is striking to see that the applications with medium overlaps have a lower median operations cost than those with a low or high-level of overlap, implying a non-linear U-shape relation between overlap and operations cost. Interestingly, the same holds true for maintenance cost. Applications with a low degree of overlap exhibited a median maintenance cost of 96,600 \(n=59\, those with a medium level of overlap incurred a median of 81,300 \(n=58\d highly overlapping applications a median of 248,700 \(n=67 9.791, p=.007. Hence, the proposition \(P3.4\at applications with a greater degree of overlap also exhibit higher IT costs is not supported  Proceedings of the 42nd Hawaii International Conference on System Sciences - 2009 12 


Interdependency Number of interfaces \(gp3_y4_sum_intf  2 22 2 22 Df 047 000 000 016 000 000 Asymp. Sig 6.134 22.298 20.875 8.331 17.018 18.917 N Median 46 45 43 46 27 37 41 41 41 41 36 38 2 intf 8 intf 1.0000 2.2000 1.0000 1.0000 52.3020 64.4000 2.0000 7.8000 4.0000 2.0000 363.9885 506.3500 2 intf 8 intf Mean rank 55.89 47.03 44.13 56.13 33.67 37.77 2 intf 73.46 83.40 76.61 76.21 60.89 68.89 8 intf 40 39 33 40 30 34 3 7 intf 1.0000 3.2000 2.0000 1.0000 119.3940 326.2000 3 7 intf 63.63 59.97 56.50 60.54 42.33 58.22 3 7 intf  Business requirements Causes of complexity Impacts of complexity  No. of IB products covered y24_#_IB_ bankprod Application age y14_age No. of user departments y19_#_ user_dpts No. of IB process covered \(y26_ IB_bankproc Operations cost \(y36_ ops_cost Maintenance cost \(y37_ Maint_cost 2  Table 4: Results of Kruskal-Wallis test for causes and impacts of interdependency-related AA complexity    Diversity Number of OS/DBMS used by an application Operating systems \(gp2_y7a_OS DBMS \(gp2_y8a_DBMS 2,726.500 18,302.500 1.503 133 1,087.500 1,318.500 1.362 173 3,308.000 902 367 543.000 7,446.000 3.925 000 2,642.000 2,536.000 3,202.000 855 392 757.500 7,198.500 2.187 029 2,884.500 18,460.500 965 335 1,216.500 1,447.500 583 560 1,209.500 6,774.500 1,174 240 654.500 790.500 237 813 1,782.000 9,163.000 430 668 836.000 5,687.000 704 481 Wilcoxon W Z Asymp. Sig N Median Mean rank Mann-Whitney U Wilcoxon W Z Asymp. Sig Mann-Whitney U 21 1.0000 125 1.0000 75.30 62.79 20 8.0500 117 2.2000 63.64 100.35 19 3.0000 113 1.0000 63.70 83.13 21 1.0000 125 1.0000 74.27 68.93 16 154.7770 85 129.9850 51.30 49.41 19 245.7000 98 210.5000 58.03 64.00 N Median 1 DBMS 2 DBMS 1 DBMS 2 DBMS Mean rank 1 DBMS 2 DBMS Data not shown as no significance found  Business requirements Causes of complexity Impacts of complexity  No. of IB products covered \(y24_#_ IB_bankprod Application age y14_age No. of user departments y19_#_user_dpts No. of IB process covered \(y26_#_ IB_bankproc Operations cost \(y36_ ops_cost Maintenance cost \(y37_ Maint_cost  Table 5: Results of Mann-Whitney test for causes and impacts of diversity-related AA complexity  Proceedings of the 42nd Hawaii International Conference on System Sciences - 2009 13 


 Deviation degree of deviation from standard OS/DBMS Operating systems \(gp2_y7b_OS_Dev DBMS \(gp2_y8b_DBMS_Dev 2,780.000 16,146.000 3.681 000 163 49 1.0000 2.0000 99.06 131.27 2,611.000 5,312.000 227 820 73 1.0000 73 1.0000 72.77 74.23 3,970.500 2.107 035 151 47 3.2000 2.2000 104.18 84.48 2,102.000 4,587.000 1.074 283 70 2.2000 67 3.5000 72.63 2,842.500 65.53 2,902.000 4,030.000 1.509 131 143 47 2.0000 1.0000 98.71 85.74 1,551.500 3,829.500 3.041 002 67 1.0000 65 3.0000 76.13 57.16 3,103.500 16,469.500 2.698 007 163 49 1.0000 2.0000 101.04 124.66 2,610.000 5,311.000 232 816 73 1.0000 73 1.0000 72.75 74.25 1,404.000 5,869.000 1.921 055 94 38 83.5815 180.1470 62.44 76.55 1,196.500 2,522.500 533 594 50 180.1470 51 109.9780 49.46 52.57 2,116.000 8,557.000 371 711 113 39 148.3000 166.4000 75.73 78.74 1,303.000 3,014.000 2.231 026 58 170.2000 59 373.1000 65.92 51.97  Wilcoxon W Z Asymp. Sig N Median No deviation \(1.0 Deviation 1.1 No deviation \(1.0 Deviation 1.1 Mean rank Mann-Whitney U No deviation \(1.0 Deviation 1.1 Wilcoxon W Z Asymp. Sig N Median No deviation \(1.0 Deviation \(>1.0 No deviation \(1.0 Deviation \(>1.0 Mean rank Mann-Whitney U No deviation \(1.0 Deviation \(>1.0  Business requirements Causes of complexity Impacts of complexity  No. of IB products covered \(y24_#_ IB_bankprod Application age y14_age No. of user departments y19_#_user_dpts No. of IB process covered \(y26_#_ IB_bankproc Operations cost \(y36_ ops_cost Maintenance cost \(y37_ Maint_cost  Table 6: Results of Mann-Whitney test for cause s and impacts of deviation-related AA complexity  Overlap/redundancy \(gp3_overlap_count 22 22 Df 216 001 032 007 Asymp. Sig 3.066 13.139 6.862 9.791 2 N Median 90 81 37 59 79 78 61 67 34 80 2.2000 1.0000 90.4420 96.6000 2.6000 2.5000 129.9850 248.7000 34 80 Mean rank 129.29 113.80 82.76 87.25 34 137.18 144.50 85.66 108.10 80 86 85 56 58 35 79 2.2000 1.0000 55.7705 81.3000 35 79 118.22 110.61 65.14 79.82 35 79  Not applicable Not applicable Business requirements Causes of complexity Impacts of complexity  No. of IB products covered \(y24_ _IB_bankprod Application age y14_age No. of user departments y19_#_ user_dpts No. of IB process covered \(y26_ _IB_bankproc Operations cost \(y36_ ops_cost Maintenance cost \(y37_ Maint_cost  Table 7: Results of Kruskal-Wallis test for causes and impacts of overlap-/redundancy-related AA complexity Proceedings of the 42nd Hawaii International Conference on System Sciences - 2009 14 


  15 R EFERENCES    http://www.w3.org/XML/Schema   eb Orchestration with BPEL\224 http://www.idealliance.org/pa pers/dx_xml03 papers/0406-01/04-06-01.html  Hi bernat e hom e page www.hibernate.org   Al l a rd, Dan and Hut c herson, Joe, \223C om m uni cat i ons Across Complex Space Networks\224, IEEE Aerospace Conference, March 1-8, 2008  W e b Servi ce Defi ni t i on Language http://www.w3.org/TR/wsdl   B a uer, C h ri st i a n and Ki ng Javi n Java Persi s t e nce for Hibernate, New York: Manning Publications, 2007 7] \223Software Agents An Overview\224 http://www.sce.carleton.ca/netm anage/docs/AgentsOverview ao.html  e thodology.org  http://www.riaspot.com artic les/entry/What-is-Ajax  http://www.json.org 11 h ttp to m cat.ap ach e.o r g   12] http://java.sun com/products/servlet  http://www.w3.org/Sty le/CSS    B IOGRAPHY  Dan Allard has worked as a software engineer at the Jet Propulsion Laboratory for the past 17 years.   He currently leads the development of core JPL accountability systems applications and infrastructure Other recent work includes the development of a message-based ground data system for the Mars Science Laboratory as well as research and development of ontologybased distributed communications     Dr. Charles D \(Chad\ards, Jr received his A.B degree in Physics from Princeton University in 1979 and his Ph.D. in Physics from the Calif ornia Institute of Technology in 1984.  Since then he has worked at NASA\222s Jet Propulsion Laboratory, where he currently serves as Manager of the Mars Network Office and as Chief Telecommunications Engineer for the Mars Exploration Program, leading the development of a dedicated orbiting infrastructure at Mars providing essential telecommunications and navi gation capabilities in support of Mars exploration.  Prior to that he managed the Telecommunications and Mission Operations Technology Office, overseeing a broad program of research and technology development in support of NASA\222s unique capabilities in deep space communications and mission operations.  Earlier in his career, Dr. Edwards worked in the Tracking Systems and Applications section at JPL where he carried out research on novel new radio tracking techniques in support of deep space navigation, planetary science, and radio astronomy  


  16  


Thank you Questions 


 18  Astronautical Congress Valencia, 2006 27  Bu reau  In tern atio n a l d e s Po ids et Mesures. \(2 008  August\SI Base Units. [On http://www.bipm.org/en/si/base_units   B IOGRAPHY  Author, Karl Strauss, has been employed by the Jet Propulsion Laboratory for over 22 years.  He has been in the Avionics Section from day One.  He is considered JPL\222s memory technology expert with projects ranging from hand-woven core memory \(for another employer\o high capacity solid state designs.  He managed the development of NASA\222s first Solid State Recorder, a DRAM-based 2 Gb design currently in use by the Cassini mission to Satu rn and the Chandra X-Ray observatory in Earth Orbit.  Karl was the founder, and seven-time chair of the IEEE NonVolatile Memory Technology Symposium, NVMTS, deciding that the various symposia conducted until then were too focused on one technology.  Karl is a Senior IEEE member and is active in the Nuclear and Plasma Scie nce Society, the Electron Device Society and the Aerospace Electronic Systems Society Karl is also an active member of SAE Karl thanks his wonderful wife of 28 years, Janet, for raising a spectacular family: three sons, Justin, Jeremy Jonathan.  Karl\222s passion is trains and is developing a model railroad based upon a four-day rail journey across Australia\222s Northern Outback   


 19 Bollobás, B. 2001. Random Graphs. Cambridge University Press; 2nd edition. 500pp  Cawley, G. C., B. L. C. Talbot, G. J. Janacek, and M. W Peck. 2006. Sparse Bayesian Ke rnel Survival Analysis for Modeling the Growth Domain of Microbial Pathogens  Chiang C. L. 1960. A stochastic study of life tables and its applications: I. Probability distribution of the biometric functions. Biometrics, 16:618-635  Cox,  D. R. 1972. Regression models and life tables J. R Stat. Soc. Ser. B 34:184-220  Cox, D. R. 1975.   Partial likelihood Biometrika 62:269276  Cox, D. R. & D. Oakes. 1984 Analysis of Survival Data  Chapman & Hall. London  Cressie, N. A. 1993 Statistics for Spatial Data John Wiley Sons. 900pp  Duchesne, T. 2005. Regression models for reliability given the usage accumulation history. In "Modern Statistical and Mathematical Methods in Reliability". Edited by A. Wilson N. Limnios, S. Kelly-McNulty Y. Armijo. pp.29-40. World Scientific, New Jersey  Eleuteri, A., R. Tagliaferri, L. Milano, G. Sansone, D D'Agostino, S. De Placido,  M. Laurentiis. 2003.  Survival analysis and neural networks. Proceedings of the International Joint Conference on Neural Networks, Vol. 4 20-24 July 2003 Page\(s\:2631 - 2636  Ellison, E., L. Linger, and M Longstaff. 1997.  Survivable Network Systems: An Emerging Discipline, Carnegie Mellon, SEI, Technical Report CMU/SEI-97-TR-013, 1997  Fleming, T. R. & D. P. Harrington. 1991. Counting process and survival analysis. John Wiley & Sons. 429pp  Graver, J. and M. Sobel 2005. You may rely on the Reliability Polynomial for much more than you might think Communications in Statistics: Theory and Methods  34\(6\1411-1422  Graves, T. and M. Hamada. 2005. Bayesian methods for assessing system reliability: models and computation. In Modern Statistical and Mathematical Methods in Reliability". Edited by A. Wilson, et al. pp.41-53  Grimmett, G. 2006 The Random-Cluster Model Springer  Grimmett, G. 1999 Percolation Springer  Hougaard, P. 2000. Analysis of Multivariate Survival Data Springer. 560pp  Ibrahim, J. G., M. H. Chen and D. Sinha. 2005. Bayesian Survival Analysis.  Springer. 481pp  Jin Z. 2005. Non-proportional semi-parametric regression models for censored data. In "Modern Statistical and Mathematical Methods in Reliability". Edited by A. Wilson N. Limnios, S. Kelly-McNulty, Y. Armijo. pp.279-292 World Scientific  Kalbfleisch, J. D. & R. L. Prentice. 1980 The Statistical Analysis of Failure Time Data John Wiley & Sons.  New York. 1980  Kalbfleisch, J. D. &  R. L. Prentice, 2002. The Statistical Analysis of Failure Time Data.  Wiley-InterScience, 2nd ed 462pp  Lisboa, P. J. G. and H. Wong. 2001. Are neural networks best used to help logistic regression? Proceedings of International Joint Conference on Neural Networks, IJCNN 01. Volume 4, 15-19,  July 2001. Page\(s\:2472 - 2477 vol.4  Kauffman, R. J. and B. Wang. 2002. Duration in the Digital Economy. Proceedings of th e 36th Hawaii International Conference on System Sciences \(HICSS03\ Jan 2003  Kaplan, E. L. & P.  Meier.  1958.  Nonparametric estimation from incomplete observations J. Amer. Statist. Assoc  53:457-481  Klein, J. P. and P. K. Goel 1992. Survival Analysis: State of the Art.  Kluwer Academic Publishes. 450pp  Klein, J. P. and  M. L Moeschberger. 20 03. Survival analysis techniques for ce nsored and truncated data Springer  Krings, A. and Z. S. Ma. 2006.  "Fault-Models in Wireless Communication: Towards Survivable Ad Hoc Networks MILCOM 2006, Military Communications Conference, 2325 October, 7 pages, 2006  Krings, A. W. 2008.  Survivable Systems.  in Information Assurance: Dependability and Security in Networked Systems Yi Qian, James Joshi, David Tipper, and Prashant Krishnamurthy, Morgan Kaufmann Publishers. \(in press  Lawless, J. F. 1982. Statistical models and methods for lifetime data.  John Wiley & Sons. 579pp  Lawless, J. F. 2003. Statistical models and methods for lifetime data.  John Wiley & Sons. 2nd ed. 630pp  Li, M. and P. Vitanyi. 1997. Introduction to  Kolmogorov Complexity and Its Applications. 2nd ed, Springer  Ma, Z. S. 1997.  Survival analysis and demography of Russian wheat aphid populations.  Ph.D dissertation, 307pp University of Idaho Moscow, Idaho, USA 


 20 Ma, Z. S., and E. J. Bechinski. 2008.  Developmental and Phenological Modeling of Russian Wheat Aphid Annals of Entomological Soc. Am In press  Ma, Z. S. and A. W. Krings. 2008a. The Competing Risks Analysis Approach to Reliability Survivability, and Prognostics and Health Management.  The 2008 IEEEAIAA AeroSpace Conference. BigSky, Montana, March 18, 2008. \(In Press, in the same volume  Ma, Z. S. and A. W. Krings 2008b. Multivariate Survival Analysis \(I\e Shared Frailty Approaches to Reliability and Dependence Modeling. The 2008 IEEE-AIAA AeroSpace Conference. BigSky Montana, March 1-8, 2008 In Press, in the same volume  Ma, Z. S. and A. W. Krings. 2008c. Multivariate Survival Analysis \(II\ Multi-State Models in Biomedicine and Engineering Reliability. 2008 IEEE International Conference on Biomedical Engineering and Informatics BMEI 2008\27th-30th, 2008 Accepted   Mani, R., J. Drew, A. Betz, P. Datta. 1999. Statistics and Data Mining Techniques for Lifetime Value Modeling ACM Conf. on Knowledge Discovery and Data Mining  Mazzuchi, T. A., R Soyer., and R. V Spring. 1989. The proportional hazards model in reliability. IEEE Proceedings of Annual Reliability and Maintainability Symposium pp.252-256  Meeker, W. Q. and L. A. Escobar. 1998. Statistical Methods for Reliability Data. Wiley-Interscience  Munson, J. C. 2003. Software Engineering Measurement Auerbach Publications  Nelson, W. 1969. Hazard plotting for incomplete failure data J. Qual. Tech 1:27-52  Nakagawa, T. 2006.  Shock and Damage Models in Reliability Theory. Springer  Osborn, B. 2005. Leveraging remote diagnostics data for predictive maintenance.   In "Modern Statistical and Mathematical Methods in Reliability". Edited by A. Wilson N. Limnios, S. Kelly-McNulty, Y. Armijo. pp. 353-363  Pena, E. A. and E. H. Slate. 2005. Dynamic modeling in reliability and survival analysis. In "Modern Statistical and Mathematical Methods in Reliability". Edited by A. Wilson N. Limnios, S. Kelly-McNulty, Y. Armijo. pp.55-71  Reineke, D. M., E. A. Pohl, and W. P. Murdock. 1998 Survival analysis and maintenance policies for a series system, with highly censore d data.  1998 Proceedings Annual Reliability and Maintainability Symposium. pp 182-188  Schabenberger, O. and C. A. Gotway. 2005. Statistical Methods for Spatial Data Analysis.  Chapman & Hall/CRC  Severini, T. A. 2000. Likelihood methods in statistics Oxford University Press  Shooman, M. L. 2002. Reliability of Computer Systems and Networks: Fault Tolerance, Analysis and Design. John Wiley and Sons. 551pp  Stillman, R. H. and M. S. Mack isack, B. Sharp, and C. Lee 1995. Case studies in survival analysis of overhead line components. IEE Conferen ce of the Reliability and Distribution Equipment. March 29-31, 1995. Conference Publication No. 406. pp210-215  Therneau, T. and P. Grambsch. 2000 Modeling Survival Data: Extending the Cox Model Springer  Wilson, A.  N. Limnios, S Kelly-McNulty, Y. Armijo 2005. Modern Statistical and Mathematical Methods in Reliability. World Scientific, New Jersey  Xie, M. 1991. Software Reliability Modeling. World Scientific Press    B IOGRAPHY   Zhanshan \(Sam\ Ma holds a Ph.D. in Entomology and is a Ph.D. candidate in Computer Science at the University of Idaho. He has published approximately 30 journal and 30 conference papers, mainly in the former field.  Prior to his recent return to academia, he worked as senior network/software engineers in software industry.  His current research interests include reliability and survivability of wireless sensor networks, fault tolerance survival analysis, evolutionary game theory, evolutionary computation and bioinformatics  Axel W. Krings is a professor of Computer Science at the University of Idaho.  He received his Ph.D. \(1993\ and M.S 1991\ degrees in Computer Science from the University of Nebraska - Lincoln, and his M.S. \(1982\ in Electrical Engineering from the FH-Aachen, Germany.  Dr. Krings has published extensively in the area of Computer Network Survivability, Security, Fault-Tolerance and Realtime Scheduling. In 2004/2005 he was a visiting professor at the Institut d'Informatique et Mathématiques Appliquées de Grenoble, at the Institut National Polytechnique de Grenoble, France.  His work has been funded by DoE/INL DoT/NIATT, DoD/OST and NIST 


