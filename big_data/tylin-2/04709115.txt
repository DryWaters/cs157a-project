Dataflow Visual Programming Language Debugger  Supported by Fisheye View   Yangyi Sui, Lili Pang, Jun Lin College of Instrument Science and Electronic Engineering, Jilin University, Changchun China, 130061 suiyangyi@163.com   Xiaotuo Zhang School of Communication Engineering, Jilin University, Changchun, China, 130022    Abstract  Programs developed by Dataflow Visual Programming Languages \(DFVPLs\ often contain lots of visual information. If more useful information could be displayed in the limited range of screen, the efficiency of debugging would be improved. We took full advantage of the characteristic of fisheye view that can display both “local detail” and “global context simultaneously, improved the previous implementation models and algorithms, and solved the problems of using fisheye view on DFVPL such as nest hierarchy the difference in nodes’ size is big and wires are complex. We comb ined the debugger w ith fisheye view and proved its practicability and feasibility by some contrastive experiments  Keywords Dataflow visual programming language debugger, fisheye view, information visualization program visualization  1  Introduction  Dataflow visual programming languages have many advantages such as simple structure, inherent parallel potential, easily understandable graphic representation T h eref ore th e y h a v e been  w i del y  used in virtual instrumentation, digital signal processing, parallel computing etc. In practical applications dozens or even hundreds of nodes often appear in the DFVPL programs. Thus it is difficult to display complete information in the limited visual range on computer screen. Particularly during the debugging process, the serious non-intuitive obstacle of human computer interaction makes programmers synthesize the relationship between nodes in programs and debugging information in their own minds, which greatly reduces the efficiency of debugging h e common solutions of this problem are rolled view enlarged view and the multi-view. But the effect is not satisfied To simulate the feature of fisheye, construct the fisheye lens and display the image which is observed through lens into fisheye view. A fisheye view might magnify nearby objects while shrink distant objects. It has the feature of simultaneous showing both “local detail” and “global context”. Based on the research by Furnas and other people [3-5 a ny  s c h o l a rs  h a v e  proposed a variety of ways to apply fisheye idea in wide fields [6u ch as dat a f l o w  v i su a l  programming environment, the large graphic visualization, PDA, three-dimensional reconstruction virtual touring, and image-based rendering and so on In this paper we first outline LabScene, the dataflow visual programming language, which is developed by us. Then we aim at the features of DFVPL and focus on the dataflow semantics, improve the implementation of models and algorithms and combine fisheye view with debugger. It makes both the information of current running node and the overall dataflow semantics display simultaneously in the limited screen range. Therefore, the efficiency of debugging is advanced  2  LabScene -- One of DFVPLs  LabScene is an experimental virtual instrument oriented DFVPL i k e L a bV IEW 1416]. It i s  abstracted the basic elements of a circuit and mapped a program that defined by DFVPL  A program represented by DFVPL is a composition of nodes, wires and containers. It is represented by a 3-tuple   rs s,Containe Nodes,Wire Program   
The 9th International Conference for Young Computer Scientists 978-0-7695-3398-8/08 $25.00 © 2008 IEEE DOI 10.1109/ICYCS.2008.77 1024 


 Figure 1. Instance of calculating prime number  Nodes are a set of node  Node is displayed by different icons. It contains a set of input terminal and a set of output terminal   Wires are a set of Wire  Wire is a set to represent data flow route Containers are a set of Container  Container can contain nodes or containers  Container is called as Parent of node if it contains node  Container also can be considered a special node  The instance of calculating prime number is shown in Figure 1. The While Container is displayed by the rectangular frame and has ability of controlling cycle Nodes are connected by wires The node on the border of container called border node If the outside nodes and the border nodes are connected, the container is connected with the outside nodes  3  Implementation Model of Fisheye View  First we introduce the correlative terms. The normal view of a DFVPL program is shown in figure 1 The coordinates of the normal view is called normal coordinates and the coordinates of the fisheye view is called fisheye coordinates Every node has different shape, size and some attachments like label Position  and size are the two properties of the node. The node concerned by users during debugging is called focus  API denotes the importance of every node VW denotes the worth of visualization of every node and is used to distinguish the nodes’ size. Nodes in the same layer have the same parent container  3.1  Framework of Model  The point P norm under the normal coordinates  transforming to the point P feye under the fisheye  coordinates is achieved by the improved method of Sark at is     1     y y y y x x x x foucs max max norm foucs max max norm feye P D D D G T  P D D D G T P  and    2  1 1    dx x d x G  In the formula 2 d is an adjustable constant. It is called distortion factor. In the formula 1 x norm D is the horizontal distance between the point to be transformed and the focus in the same layer under the normal coordinates  x max D is gotten according to the situation that which layer the transformed point in: if P norm is in the top layer, setting the largest rectangular area which could surround all nodes and wires as A max the x max D is the horizontal distance between the focus and the A max boundary under the normal coordinate s; if P norm is in a container, the x D max is the horizontal distance from the focus to the boundary of the container T is a transformation function which is responsible for transforming the calculated relative coordinates into the absolute coordinates to paint The node’s worth of visualization in the same layer is designed as    3      n API f n VW  and  is an adjustable constant to ensure VW not to be 0. The node’s size is designed as      4    e feye f n VW c s f n S    In formula 4 c e s are all the adjustable constants s is called zoom factor. Notice that the nodes’ size got from formula 4 couldn’t guarantee there are no overlaps among the nodes. It is guaranteed by the algorithm behind  
1025 


3.2  Framework of Main Algorithms  The framework of main algorithms is shown in Figure 2, and we will mainly introduce the 5 steps in the middle  Figure 2. Framework of main algorithms  3.3  Implementation  3.3.1. Calculating API  API in ordinary fisheye view is a pre-set value which is assigned to each node at the beginning of algorithm. For outstanding the dataflow semantics, the improved method is dynamically calculated density of dataflow between the focus and the other nodes. The following algorithm is based on the truth that nodes with connection are closer than those without connection; nodes with direct connection are closer than those with indirect connection Algorithm of API is as follows 1  If the target node is the focus  API equals 1 2  Otherwise, traverse all the nodes connected with the input terminals of the node by starting from the input terminals of the focus If the target node can not be found, traverse all the input terminals of the traversed nodes. If the target node is found API equals 1 n 1\d number n is the traversed layers. If input terminals have no connected nodes, turn to step \(3 continue finding the target node 3  Do the same thing as step \(2\g the output terminals of the focus If the target node is found API  equals 1 n 1\ and number n is the traversed layers Otherwise, the two nodes have no dataflow relationship and API equals 0 According to the algorithm API is a real number between [0-1 d t h e recipr ocal of trav ers e d la y e rs  reflects the density relationship between the focus and the other nodes  3.3.2. Calculating Zoom Scale Nodes might be overlapped after zooming, which is not obvious when the original sizes of nodes are almost the same and the overlaps can be reduced by interactive parameters adjustment. But in DFVPL, containers which have control ability such as while container contain plenty of nodes, so their sizes are much different from ordinary nodes. In order that guarantee containers do not overlap with the other nodes and the normal zoom scale of nested nodes, we calculate the zoom scale of every node first and then modified these overlapped nodes from the top layer to the bottom layer The key of calculating zoom scale is VW because only VW of the same layer can be calculated with formula 3. So, algorithm is needed to reflect nested hierarchy, which is as follows 1  Start from the focus seek up its immediate parent containers recursively along the nested hierarchy and get the collection called List p  2  Search List p take the outmost parent container as the current calculating container and set it as CurrentContainer Traverse List p from outside to inside and go to step \(3 3  According to API of all nodes in the CurrentContainer and formula 3, calculate VW and modify it if those nodes only exist in containers. If the node is a child of one container of List p multiply VW  of the upper layer by the got VW gain the last VW If the node is not a child of one container of List p take its parent VW as its own  3.3.3. Calculating Position In DFVPL, the nested hierarchy makes it special to express the node's position, which is defined by the relative position between the node and its parent container. If we still use the previous method to calculate the node’s position in fisheye view, the nest hierarchy will be lost after it is transformed. Therefore, it is necessary to modify the function G according to the focus Details are as follows 1  Get the parameters needed in formula 1 according to the information of the layer where the focus lies in and figure out the position P p of the other nodes in the same layer. If the target node is a container all nodes in it will inherit its position. Then set the relative position of the node in the container as P s the zoom scale of this container as S p so the relative position of the node in fisheye coordinates is P p  P s S p Finally, use the function T to get the coordinates of the node for printing 2  Set the parent container of the focus as a new focus if the parent container is not the top container then go to step \(1\therwise stop  3.3.4. Limiting Zoom Scale The zoomed containers according to formula 4 often cover other nodes. Thus we propose an algorithm to limit zoom scale. This algorithm not only modifies the zoom scale of 
1026 


container but also affects the positions of nodes in it Therefore it is necessary to adjust the parameters together. Details are as follows 1  Call the top container to be calculated as CurrentContainer  2  Traverse the nodes in CurrentContainer If the zoom scale of CurrentContainer has been modified adjust the positions of these nodes using the new zoom scale. If the traversal node is a container, figure out the minimum distance of coordinates between the right bottom corner of the container and all the other nodes in the same layer, marked min x and min y  According to the minor and positive one of min x and min y and the original zoom scale of the container get a new zoom scale of the container. When the CurrentContainer s traversal is over, set a child container as the new CurrentContainer repeat step \(2 until the whole DFVPL’s traversal is completed This algorithm is mainly used for adjusting containers in DFVPL. In fact, ordinary nodes also might overlap each other after it is zoomed. Since its influence is not obvious, it will be neglected  in order to reduce calculation  3.3.5. Mapping Wires The algorithm of mapping wires is similar to calculate position. After it is zoomed the points which are connected close to the terminals of the node would not be connected with the terminals correctly because the size of the node is not obtained from the right bottom corner of the node by using formula 1. So, we need to correct the position of wrong point, and keep the segments horizontal or vertical Details are as follows 1  If the output terminal of the node is the first point of segment point  i gu re ou t th e recta n gle area of the transformed node, according to the relative position of the output terminal with the node, get a new position P n assign P n to point   2  If the segment formed by point  d point   are horizontal before transforming, assign the ordinate of P n the same with the new ordinate of point  o  the same thing along the point collection, till the segment formed by the two points is vertical. If point 0 and point  r e v e rt i cal bef o re t r an s f or m i ng do t h e  similar modification, till the segment is horizontal By analogy, we can correct the position from the last point of wire \(the input terminal of the node above  4  Integrating Debugger with Fisheye View  4.1  Integral Structure  The debugger and fisheye view can be integrated in MVC pattern, as shown in Figure 3. Fisheye view belongs to view layer, debugger belongs to control layer and DFVPL programs belong to model layer Taking nodes or containers as units, LabScene supports single-step debugging, animation debugging and breakpoint debugging. Debugger records the process of debugging as a series of events, which can be replayed after debugging. Interactive view can transmit the edit files to debugger in real time and is the chief debugging view. Fisheye view does well tracking the current debugging state. User can use both interactive view and fisheye view in the mean time to improve debugging efficiency   Figure 3. Structure of fisheye debugger  4.2  Practicality Discussion  LabScene starts up a thread in each debugging mode and draws rectangles four times during debugging in interactive view with a delay of 100ms each time, to get a zooming out animation effect. If the operation of fisheye view can be finished within less than 400ms, users will not feel the stagnancy that the fisheye view brings. For a desktop computer \(Pentium 4, CPU 1.80GH, RAM 1G\ith different amount of nodes, the time \(ms\ that the algorithm of fisheye view spent is shown in Table 1. It is found that the amount of nodes is linear with approximate time. When the amount is added to 352, consumption of time would be still less than 300ms. DFVPL is a structural design which is a program can be sealed to use as a function node. Actually, in one program, it is hardly to find thousands of nodes but hundreds of sealed nodes to accomplish functions. So the debugger su pported by fisheye view is practical The debugger has the characteristic of time delay which is suitable for displaying the fisheye view, if show fisheye view according to mouse click, it will cause confusion and efficiency problem because of the sharp movement of the mouse. That is why LabScene does not integrate interactive editor with fisheye view   
1027 


Table  1. Runtime testing  amount test time 7 55 114 223 352 1st 15 62 109 203 282 2nd 16 63 109 219 281 3rd 15 78 109 217 297 4th 15 62 94 202 285 5th 16 62 93 210 266 average 15.4 65.4 102.8 210.2 282.2  5  Experiment  As the example of calculating prime number shown in Figure 1, when the debugging node is "+1", the effect is shown in Figure 4. The focus of the upper part is "+1" in the outer layer, and the focus of the lower part is "+1" in While circle The constants are d 2  0.2 s 2 c 1 e 1 It is easy to observe the nodes that have dataflow relationship with "+1", reducing the attention of programmers to the nodes which are not close related to "+1". For example, in the upper part of Figure 4 While circle is close to "+1", but it is minified. It is significant that this kind of view can be shown clearly to programmers about dataflow semantics, concerned details and whole information. It is proved through the experiment that the model and the algorithms we proposed are feasible      Figure 4. Calculating prime number in fisheye view   6  Related Work  The closest related work is the similar dataflow visual programming environment, KLIEG [2, 6T h e design of fisheye on it mainly show the effect of fisheye by reducing details of non-focus nodes and interfacing by dialog box. There are no corresponding solutions for the features of DFVPL such as nest hierarchy, the difference in nodes’ size is big and wires are complex. However, if these characteristics are ignored, it will cause problems like losing nest hierarchy, covering nodes each other and losing positions of wires Some famous DFVPLs such as LabVIEW [14Prograph [17 an d V EE [18  s u pport s o m e t ool s t o  directly display the execution of DFVPL programs. But they have no fisheye view to help displaying visual information   
1028 


7  Conclusions and Future Work  This paper analyzes some problems when applying ordinary models and algorithms of fisheye view straightly in DFVPLs, such as loss of nested hierarchy overlap of nodes and dislocation of wires etc. Aiming at these problems we proposed a new model and corresponding algorithms. It is proved that combining debugger with the improved fisheye view is practical and feasible through experiments The constants in fisheye view model can be used to adjust displaying effect. At present, we only choose the suitable constants through experiments. In order to improve the adaptive capacity of fisheye view, the following work is studying the relationship between layouts of DFVPLs and constants  Acknowledgments  This research was supported by the Programs of Science and Technology Development Plan of Jilin Province and National Science and Technique Supporting Plan Major Programs of China during the 11th Five-Year Plan Period. Xuansong Xie has contributed to earlier versions of LabScene  References  1  WM Johnston, JRP Hanna, and RJ Millar, “Advances in Dataflow Programming Languages ACM Computing Surveys ACM Press, USA, 2004, vol. 36, no. 1, pp. 1-23 2  B Shizuki, E Shibayama, and M Toyoda, “Static visualization of dynamic data flow visual program execution Proceedings of the Sixth International Conference on Information Visualisation IEEE Press London, 2002, pp. 713-718 3  GW Furnas, “Generalized fisheye views ACM SIGCHI Bulletin ACM Press, USA, 1986, vol. 17, no. 4, pp. 16-23 4  YK Leung and MD Apperley, “A Review and Taxonomy of Distortion-Oriented Presentation Techniques ACM Transactions on Computer-Human Interaction ACM Press USA, 1994, vol. 1, no. 2, pp. 126-160 5  M Sarkar and MH Brown, “Graphical Fisheye Views Communications of the ACM Brown University, Providence USA, 1994, vol. 3, no. 2, pp. 73-83 6  M Toyoda, B Shizuki, S Takahashi, S Matsuoka, and E Shibayama, “Supporting Design Patterns in a Visual Parallel Data-flow Programming Environment Proceedings of IEEE Symposium on Visual Languages IEEE  Computer Society Press, Isle of Capri, Italy, 1997, pp. 76-83 7  M Toyoda and E Shibayama, “Hyper Mochi Sheet: a predictive focusing interface for navigating and editing nested networks through a multi-focus distortion-oriented view Conference on Human Factors in Computing Systems  ACM Press, USA, 1999, pp. 504-511 8  B Shizuki, M Toyoda, E Shibayama, and S Takahashi Smart Browsing among Multiple Aspects of Data-Flow Visual Program Execution, Using Visual Patterns and Multi-Focus Fisheye Views Journal of Visual Languages and Computing Academic Press, UK, 2000, vol. 11, no. 5 pp. 529-548 9  ER Gansner, Y Koren, and SC North, “Topological Fisheye Views for Visualizing Large Graphs IEEE Transactions on Visualization and Computer Graphics IEEE Computer Society Press  United States, 2005, vol. 11, no. 4 pp. 457-468 10  T B ring, J Gerken, and H Reiterer, “User Interaction with Scatter plots on Small Screens - A Comparative Evaluation of Geometric-Semantic Zoom and Fisheye Distortion IEEE Transactions on Visualization and Computer Graphics IEEE Computer Society Press, United States, 2006, vol. 12, no. 5, pp. 829-836 11  C Zhang and JY Wang, “3D Model Reconstruction from Fish-Eye Images and Virtual Walk-through Journal of Computer-aided Design & Computer Graphics Institute of Computing Technology, China, 2004, vol. 16, no. 1, pp 80-89 12  XH Ying and ZY Hu, “Fisheye Lense Distortion Correction Using Spherical Perspective Projection Constraint Chinese Journal of Computers Science Press China, 2003, vol. 26, no. 12, pp. 1702-1708 13  XS Xie, YY Sui, and J Lin, “Hardware virtual model for G language Chinese Journal of Scientific Instrument  Science Press, China, 2006, vol. 27, no. 9, pp. 1112-1115 14  GM Vose and G Williams, “LabVIEW: Laboratory Virtual Instrument Engineering Workbench BYTE  McGraw-Hill Companies, USA, 1986, vol. 11, no. 9, pp 84-92 15  R Jamal, “Graphical object-oriented programming with LabVIEW Nuclear Instruments and Methods in Physics Research Section A Elsevier  North-Holland, 1994, vol. 352 no. 1-2, pp. 438-441 16  R Jamal and L Wenzel, “The Applicability of the Visual Programming Language LabVIEW to Large Real-World Applications IEEE Proceedings of the 11th International IEEE Symposium on Visual Languages IEEE  Computer Society Press, Darmstadt, Germany, 1995, pp. 99-106 17  PT Cox and T Smedley, “A Visual Language for the Design of Structured Graphical Objects IEEE Proceedings of 1996 IEEE Symposiu m on Visual Languages IEEE  Computer Society Press, Boulder, USA, 1996, pp. 296-302 18  M Klinger, “Reusable test executive and test programs methodology and implementation comparison between HP VEE and LabView IEEE Systems readiness technology conference IEEE  Computer Society Press, San Antonio USA, 1999, pp. 305-312  
1029 


 Individual results may belong to more than one category under a given facet e.g if the user searched for Knight and it appeared in both the Author and Bio sections of a document that document would belong to both categories As facets and their categories are non-hierarchical and as records may belong to more than one facet the UI allows users to select multiple facet categories and they are presented with all records that belong to any of those facets Other faceted UI's rely on facet categories being hierarchical and only allow users to select an individual category under each facet  Interactions with the faceted UI are performed purely client-side for high performance The authors are unaware of any faceted user interfaces that are performed purely on the client and that provide the immediate feedback and high performance inherent in this implementation The user interface has presented some challenges and have remaining open questions including  How to handle user selections When all categories for a facet are selected and the user selects one category should all other categories be de-selected or the one selected  What numerical value to display next to each facet category current implementation shows the total number of records in that facet category but this value may be confusing when one facet has multiple categories turned off  How to handle very long facet category lists currently the lists are unordered but even when they are ordered users may seek the categories with fewest results or with the most results 4 CONCLUSION The NETMARK XDB Faceted Search user interface will continue to be improved based upon feedback provided by end-users The techniques and layout will be leveraged for other applications at NASA and other agencies It is applicable to systems that leverage the XDB server technology and semi-structured contextualized nature of the query results produced Further developments include evaluating how best to combine less-structured documents with more structured data sets such as the PVCS records They also include leveraging ontologies and taxonomies to organize and unify the display in a more logical and userfriendly fashion The technique may be easily applied to any search system that uses generated metadata to provide views of the information to be retrieved 7 


6 REFERENCES 5 BIOGRAPHIES Christopher D Knight is a computer engineer at the NASA Ames Research Center He is one of the key developers focused on asynchronous collaborative technologies and architectures for rapid application development tools for enabling collaboration He received a bachelor's degree in computer science from Cal Poly San Luis Obispo in 1996 Jane T Maim is Senior Technical Assistant in the Inlaorteigensytes Sytes Bntressanch focused Automation Robotics and tc i aSimulation Division developmen toolsfor en EngineeringDirectorate NASA bachlors dereein JohnuersoinSpce ftmCenterl wher she has led intelligent systems research and development since 1984 She has led research on model-based hazard analysis and simulation for engineering intelligent systems and on information extraction from text for modeling using ontology-based semantic text analysis Her 1973 Ph.D in Experimental Psychology is from the University of Michigan with a dissertation on mathematical modeling of information processing in problem solving 1 David Maluf P Tran NETMARK A Schema-Less Extension for Relational Databases for Managing Semistructured Data Dynamically ISMIS 2003 2 A.S Pollit The key role of classification and indexing in viewbased searching Technical report University of Huddersfield UK 1998 3 Eetu Makela Eero Hyvonen and Teemu Sidoroff ViewBased User Interfaces for Information Retrieval on the Semantic Web Proceedings of the ISWC-2005 Workshop End User Semantic Web Interaction Nov 2005 4 E Stoica M Hearst and M Richardson Automating Creation of Hierarchical Faceted Metadata Structures in the proceedings of NAACL-HLT Rochester NY April 2007 5 Web Distributed Authoring and Versioning WebDAV Standards w 6 Uniform Resource Identifier Generic Syntax IETF RFC 3986 h 7 XML Stylesheet Language for Transformation XSLT Standards a 8 Asynchronous JavaScript and XML AJAX Description hik 8 


 arctan   9 the longitude of the site at Cartesian coordinates \(x,y centered on the pole.  The equation uses the variable L1 for the longitude where the horizon mask crosses \226   L sin 0 0       212     212 002 else 0 1 1 1  xy 212 005  t 004   004 L  DTE L  002   t  005  002 212  Hp d R     7  Comparing these theoretical e quations with the computed illumination and DTE communications averages required using an adjusted lunar reference altitude at the poles.  The lunar reference geoid radius of 1738 km is not a good average value for the terrain at either pole.  The lunar south pole is part of the Aitken Basin, and the GSSR Digital Elevation Model elevations ha ve an average of -1880 m within 200 km of the south pole.  The lunar north pole region has an average elevation of -1673 m within 150 km of the north pole.  These averag es were subtracted from base site reference altitude to get the value of \221h\222 used in equation 2.  This effectively gaves the base sites a higher elevation relative to the local average elevation  For selected base sites, solar illumination and DTE communications averages were computed for tower heights from 2 m to 1500 m, and in some cases 3000 m.  Then these tower heights plus adjusted altitudes and base locations were used in equations 1 through 7 to get predicted values of the yearly average metrics.  The results are shown in figures 14 and 15.  Figure 14 shows black curves of equation 5 plotted parametrically with distance from the pole.  For the selected sites, the computed yearly average solar illumination is shown by squares, connected by a dashed line with the theoretical yearly average for the same location and tower heights The theoretical values are marked with X\222s.  South lunar Pole sites are in blue and the lunar north pole sites are in red.  The plots show reasonable agreement of computed values and theory, with the computed value never exceeding the theoretical.   Figure 15 shows black curves of equation 7 plotted parametrically with distance from the pole.  Th e value of L0 was set to zero for the parametric curves.  Fi gure 15 include computed and theoretical values of the yearly average DTE communications for the same sites as figure 14, using the same symbol and color conventions  At no site will a tower of 1500 m or less provide both 100 average yearly solar illumination and 100% average DTE communications.  Towers of 1500 m at sites NB and NC will raise the average yearly solar illumination to 100 But for the lunar south pole sites, like B1, towers of over 2500 m are required to rais e the average yearly solar illumination to 100%.  This is because the peaks Malapert 002 peaks  t\002 1  212  0 1 4 R      6  The yearly average Earth co mmunications, DTE, is then given by the equation        L L  L L Hm R  8  The obscuring effect of these p eaks is also shown in figure 5, where the peak Malapert t 006 002    L  2 cos 180 abs 180 sin 006 212 003 003  002 latitude These variables are   003  and Leibnitz 002 obscure the view of the sun from the lunar south pole.  Equation 8 gives the elevation, Hp, above a spherical surface needed to see the winter sun over a peak of elevation Hm at a distance, d from the pole.  Equation 8 provided values in Figures 4 and 14 for the Malapert 003 and Leibnitz 212 003 is at +10 degrees azimuth  Figure 15 shows the yearly average DTE communication varies more with distance fr om the pole toward the prime meridian that with tower height above the local terrain Towers up to 3000 m at the poles do not make significant improvements in the DTE co mmunications average.  The computed yearly average DT E communications for site NG exceed the predicted values fo r towers between 32 and 1500 meters tall.  This is because the view northward from site NG toward the Earth looks across the floor of Byrd Crater which averages about -2500 m elevation  Considerations for Photovoltaic Array Design  The lunar pole sites create some difficult challenges for designing a continuously operating photovoltaic power system.  A site with continuous solar illumination will see the Sun travel through 360 degrees of azimuth during 1 synodic month.  A photovoltaic power system would require several permanently mounted photovoltaic arrays pointed in several directions, or would have to continually track the Sun with a single array.  Sin ce a single array requires much less mass, the design of the solar tracking system is examined here  The requirement to continually track the Sun could be met by installing the photovoltaic array on a vertical axle oriented parallel to the lunar spin axis.  At the lunar south pole, this axle would rotate counterclockwise with the Sun to keep the array normal to the solar radiation.  This requires a foundation to support the axle cross beam structures to hold the array on the axle, and a drive system to turn the array.  This system also requires a solution to the \221cable wrap\222 problem, in order to continually track the Sun.  After 1 synodic month the array has turned through 360 degrees and needs to continue rotating in the same direction.  Power and control cables from the array need to go through multiple slip rings, or the array needs to rotate 360 degrees clockwise to unwrap the cables.  A slip ring design is further complicated by the requirement to tolerate the fine dust on    arccos 004  005  b t cos if 


  10 the lunar surface.  Using the \221cable unwrap\222 method means stopping power production for a short amount of time, once per synodic month  A heliostat design using a focusing mirror may provide a low-mass solution to the \221cable wrap\222 problem [Ref 10   Figure 16 shows a photovoltaic array installed horizontal to the local terrain.  A parabolic section mirror is installed above the array, angled at approximately 45 degrees to the local horizontal.  This mirror is suspended from the crossbar of a mast placed next to the array.  The mast could also be the structure for the Lunar Co mmunications Terminal \(LCT antennas.  The mirror is suspe nded from an axle that is oriented parallel to the lunar spin axis and rotates once per synodic month to continually reflect solar radiation onto the array.  The mirror can continue to track after 360 degrees revolution, since there are no cables attached to the moving part.  This heliostat \221periscope\222 design provides continuous solar tracking, but is partially shaded once per revolution when the Sun passes behind the support mast  Shaping the mirror into a para bolic arc concentrates solar power for a small increase in mass.  The tradeoffs should consider the relative mass-perunit area of the mirror and the photovoltaic panels, the reflectivity of the mirror material and the relative masses of an array-support axle versus a mirror heliostat axle plus mast  Additional flat \221periscope\222 mirrors mounted on the crossbar could be used to direct solar light to areas nearby.  This provides an efficient method of lighting work areas because it bypasses the inefficiencies of the photovoltaic system battery storage, and electric lighting.  If the photovoltaic power system is located on a crat er rim \(as in Figure 16\a flat \221periscope\222 mirror could provide continuous lighting to exploration crews in the perman ently shadowed areas within the crater.  Sufficiently large heliostat mirrors could redirect enough sunlight to run photovoltaic arrays at remote locations.  This would provide very efficient power transfer for operating within the permanently shaded areas  5  C ONCLUSIONS   Separating the lunar pole solar illumination problem into terrain horizon mask and solar motion computations simplified the production of illumination metrics.  Using a simplified model of average solar motion allowed quick comparisons between lunar south pole sites.  The results show that within 100 km of the lunar south pole, solar illumination is maximized at previously identified site locations.  These sites are small areas on the peaks of isolated mountains and crater rims.  No site provides 100 yearly average for both solar illumination and DTE communication.  Lunar north pole sites were also examined No site at either pole prov ides 100% yearly average for solar illumination unless a tower at least 1500 m is placed on one of the best lunar north pole sites  The best lunar south pole sites are on the rim of Shackleton crater, and the ridge west of Sh ackleton crater.  These 3 sites have yearly average of solar illumination between 93 and 97%.  The Sites have 100% solar power generation capability about 85 to 92% of the year.  For both of these metrics, Site B1 on the ridge West of Shackleton crater has the highest solar illumination values.  Site B1 has direct-toEarth visibility of the entire Earth disk about 51% of each month.  More detailed analysis of site B1 can use the terrain horizon masks presented here, coupled with more detailed true-of-date solar motion computations  Examination of the site solar illumination profiles at 40meter resolution shows the peaks of illumination are distributed over many points.  The locations with greater than 80% solar illumination are spread over 100s of meters This supports the conclusion that the Digital Elevation Model has adequate sampling to show the true terrain characteristics  The lunar north pole base sites NB and NC have yearly average solar illumination around 97%, and have 100 solar power generation capability about 88 to 92% of the time for the average year  The yearly average for 100% DTE communications at the best lunar north pole and south pole sites are all around 50%.  The yearly average DTE communications does not vary significantly with tower height, but does increase to 100% for sites about 100 km from the poles toward the lunar prime meridian 6  A CKNOWLEDGMENTS  This research was carried out at the Jet Propulsion Laboratory, California Institute of Technology, under a contract with the National Aeronautics and Space Administration  The author expresses thanks to Martin A. Slade of JPL\222s GSSR group for his time and assistance with the 2006 GSSR Digital Elevation Model data.  The author also wished to thank Charles Ruggier and Laif Swanson of the SCiP Study Team at JPL for their support of this work  R EFERENCES   1. Scott Hensley, Eric Gurrola Paul Rosen, Martin Slade Joseph Jao, Micheal Kobrick, Raymond Jurgens, Eric De Jong, and Barbara Wilson, \223RADAR generates highresolution topographic map of the Moon\224, Society of PhotoOptical Instrumentation Engineers Newsroom, June 16 2008  2.  J. L. Margot, D. B. Campbell, R. F. Jurgens, M. A Slade, \223Topography of the Lunar Poles from RADAR 


  11 Interferometry: A Survey of Co ld Trap Locations\224, Science Vol 284, pg 1658-1660, 4 June 1999  3.  NASA, \223The Vision for Sp ace Exploration\224,  Feb. 2004 http://www.nasa.gov pdf/55584main_vision_space_explorat ion-hi-res.pdf  4.  M. Kruijff, \223The Peaks of Eternal Light on the Lunar South Pole: How they were found and what they look like\224 4th International Conference on Exploration and Utilization of the Moon \(ICEUM4\ESA/ESTEC, SP-462, September 2000  5.  J. Fincannon, \223Lunar South Pole Illumination: Review Reassessment, and Power Sy stem Implications\224, 5 th  International Energy Conversion Engineering Conference and Exhibit \(IECEC\, 25-27 June 2007, AIAA 2007-4700  6.  J. Fincannon, \223Charact erization of Lunar Polar Illumination From a Power System Perspective\224, 56 th AIAA Aerospace Sciences Meeting and Exhibit, 7-10 January 2008, AIAA 2008-0447  7.  M. Zuber, I. Garrick-Be thell, \223What Do We Need to Know to Land on the Moon Again?\224, Science, Vol 310, pg 983-985, 11 November 2005  8.  Gazetteer of Planetary Nomenclature, International Astronomical Union, 03/31/2008  9.  Ewan A. Whitaker, \223The Lunar South Polar Regions\224 Journal of the British Astronomical Association, Vol. 64 No. 6, pp. 234-242  10. James D. Burke, \223Merits of A Lunar Polar Base Location\224, Lunar Bases and Space Activities of the 21st Century. Houston, TX, Lunar and Planetary Institute, edited by W. W. Mendell, 1985, p.77  B IOGRAPHY   Scott H. Bryant is a member of the senior staff at the Jet Propulsion Laboratory. He has a bachelor\222s in Aeronautics and Astronautics Engineering from MIT and a master\222s in Astronautics from USC.  He has worked for the Jet Propulsion Laboratory for over 10 years, working on several of JPL\222s Deep Space Network \(DSN\s.  His projects include the receivers, exciters, and spacecraft tracking subsystems.  He has been principally involved with software design and development for spacecraft tracking, including holding the position of cognizant design engineer for the current DSN Ranging system. Scott is currently the implementation and design lead for the spacecraft tracking and ranging portion of JPL\222s Network Simplification Project.  He has also work ed with the study groups examining communications and navigation issues for the Constellation system lunar studies.  The work presented here was performed for the SCiP Lunar Architecture study group  


  12  Figure 1:  Lunar South Pole Elevation Map from GSSR 2006 Digital Elevation Model  Figure 2:  Lunar North Pole Elevation Ma p from GSSR 1997 Digital Elevation Model 


  13  Figure 3:  Shackleton Crater T opographic Map, with Base Sites  Figure 4: Solar Lines-of-Si ght at Lunar South Pole 


  14  Figure 5:  Site B1 Terrain horizon ma sk with 1 degree azimuth spacing  Figure 6:  Site B1 Terrain horizon mask with 1 de gree azimuth spacing, in e quatorial coordinates 


  15  Figure 7: Lunar South Pole Solar Illumination Yearly Average  Figure 8:  Lunar South Pole DTE Visibility Yearly Average 


  16  Figure 9: Lunar North Pole Sola r Illumination Yearly Average  Figure 10:  Lunar North Pole D TE Visibility Yearly Average 


  17  Figure 11: Site A1 Elevation Topography  Figure 12: Site A1 Yearly Average Solar Illumination and DTE visibility, Medium Resolution 


  18   Figure 13:  Site LB Te rrain Horizon Mask  Figure 14:  Theory and Computed values of Average Yearly Solar Illumination 


  19  Figure 15:  Theory and Computed values of Average Yearly DTE Communication  Figure 16:  Heliostat Mirror Design to Eliminate Cable Wrap 


  20 Angeles, where he also received a B.S. in Applied Mathematics  Eric Fetzer is a Senior Member of the Technical Staff at the Jet Propulsion Laboratory, Pasadena, California specializing in satellite observations of the atmosphere.  His scientific interests include planetary boundary layer processes, tropical phenomena, upper tropospheric variability, and climatologies of temperature, water vapor and clouds.  His technical interests include analysis of large data sets, and of multi-sensor observations. He has over 20 peer-reviewed publications and given numerous scientific presentations, public lectures and media interviews about climate science. Eric received a B.A. in Physics from the University of California Berkeley, and a Ph.D. in Astrophysical, Planetary and Atmospheric Sciences from the University of Colorado, Boulder   Amy Braverman is a Senior Statistician at the Jet Propulsion Laboratory, California Institute of Technology She holds a B.A. in Economics from Swarthmore College an M.A. in Mathematics from UCLA, and a Ph.D. in Statistics also from UCLA. Prior to her current position in JPL's Science Data Understanding Group, she was a Caltech Post-doctoral Scholar at the Jet Propulsion Laboratory, and a Scientist in the Flight Sciences Experiments Section of the Science Division. Dr Braverman conducts research on information-theoretic methods for the analysis of massive data sets and streams statistical data fusion, high-dimensional data analysis, and statistical analysis for climate model evaluation and diagnosis. She has published in both the statistics and geoscience literature, and is active in both communities She is a member of the Multi-angle Imaging SpectroRadiometer Science Team, and serves as a member of the Atmospheric Infrared Sounder Science Integration Team. Her responsibilities on both missions include designing data reduction algorithms for massive, remote sensing data sets. Dr. Braverman also holds an appointment in the Department of Statistics at UCLA as Adjunct Associate Professor, and is active in UCLA\222s Center for Environmental Statistics. She is member of the Committee on Applied and Theoretical Statistics of the US National Academy of Science. She has refereed for the Journal of the American Statistical Association, the Journal of Computational and Gr aphical Statistics, IEEE Transactions on Geoscience and Remote Sensing, and the Journal of Applied Meteorology and Climatology Seungwon Lee is a senior member of the High Capability Computing and Modeling Group at Jet Propulsion Laboratory. She is conducti ng research on comet gas dynamics, nonlinear dynamics control, climate model parameterization, Earth science data analysis, parallel computing, and advanced numerical algorithms. She received her Ph.D in Physics fr om the Ohio State University and her M.S. and B.S. in Physics from the Seoul National University, Korea  Matthew Henderson is software engineer in the High Capability Computing and Mode ling group at JPL. His current work includes Web Services and Instrument Data Level 2 subsetting. He received a B.S. Computer Science from CSU Pomona, and is currently pursuing M.S Computer Science  Steven J. Lewis is a member of the Information System and Computer Science staff member at the Jet Propulsion Laboratory.  He received a BS in Mathematics from the University of California, Los Angeles in June 2001, and the MS and Ph.D. Degree from Claremont Graduate University in May 2004 and May 2007, respectively.  He worked as a post doctoral fellow at Keck Graduate Institute from June 2007 until he joined JPL in March of 2008.  During his graduate and post doctoral work, his studies focused on applications of Bayesian methods to hidden Markov models with particular interest and application to protein sequencing.  His work at JPL has focused on integrating web services into various programming platforms for the purposes of accessing NASA satellite data, as well as developing object tracking so ftware and contributing to image enhancement and restoration efforts Van Dang is a member of the Science Data Understanding Group at the Jet Propulsion Laboratory. She was responsible for the NEWS Level 2 processing that generated the formal merged Level 2 data from multiple A-Train instruments  Manuel de la Torre is a Physicist from the Universidad Complutense at Madrid \(Spain\. After finishing his Ph.D work at the University of Bayreuth \(Germany\ on pattern formation in turbulent flows and a 7 1/2 year stunt as Ass and Assoc. Prof. at the Escuela T\351cnica Superior de Ingenieros Aeron\341uticos in Madrid \(Spain\, he came to the Jet Propulsion Laboratory on a 1-year Sabatical leave in 1997 wanting to apply fundamental concepts of nonlinear systems and geophysical fluid dynamics to something that might be directly useful to soci ety. He discovered the JPL as a great place to achieve that goal and extende d his stay a bit longer, becoming Technical staff and working on different aspects of remote sensing, validation of satellite instruments, and data analysis of atmospheric processes and climate  


