 1 A Hybrid-FPGA System for On-Board Data Processing Targeting the MATMOS FTIR Instrument Dmitriy L. Bekker, Marcin Lukowiak  Muhammad Shaaban   Department of Computer Engineering Rochester Institute of Technology 83 Lomb Memorial Drive Rochester, NY 14623-5603 585-475-2808  585-475-2373   dbekker@alum.rit.edu mxleec@rit.edu   meseec@rit.edu   Jean-Francois L. Blavier  Paula J. Pingree   Jet Propulsion Laboratory California Institute of Technology 4800 Oak Grove Drive Pasadena, CA 91109-8099 818-354-6665  818-354-0587   Jean-Francois.Blavier@jpl.nasa.gov 
Paula.J.Pingree@jpl.nasa.gov   Abstract The MATMOS Fourier Transform Infrared FTIR\ spectrometer is one of three scientific inst ruments on the previously proposed MARVEL mission MATMOS requires computationally intensive floating-point s ignal processing to reduce the amount of data prior to do wnlink With the goal of reducing design time and the size and weight of instrument electronics this paper presen ts an FTIR spectrometry implementation targeting the Xili nx Virtex-4FX hybrid-FPGA and its embedded PowerPC 405  processor We explore different hardware and softwa re optimizations and architectural configurations of t he hybridFPGA system to demonstrate optimal performance in o nboard data processing By including a dedicated flo 
atingpoint unit and dot-product co-processor in the hard ware as well as utilizing optimized single-precision math l ibrary functions and a modified IBM PowerPC performance li brary in the software, we demonstrate a more than 8x redu ction in execution time compared to the non-optimized softwa re only implementation A dual-processor design concept as an enhancement that would further reduce the execution time is also presented 1 2 3  T ABLE OF C ONTENTS  1  I NTRODUCTION  1  2  D ATA C OLLECTION AND P ROCESSING 2  3  FTIR  B ASE S YSTEM 3 
 4  S OFTWARE O PTIMIZATIONS 5  5  H ARDWARE O PTIMIZATIONS 6  6  R ESULTS A NALYSIS 11  7  C ONCLUSIONS AND F UTURE W ORK 12  R EFERENCES  14  B IOGRAPHY  14  1  I NTRODUCTION  With the increasing complexity of today’s NASA scie nce missions, currently available spacecraft flight pro cessors risk becoming overburdened with on-board data processing 
    1  1-4244-1488-1/08/$25.00 ©2008 IEEE  2 IEEEAC paper #1232, Version 1, Updated December 8 2007 3 This paper is a summary of the Masters Thesis Hardware and Software Optimization of Fourier Transform Infrared Spectrom etry on HybridFPGAs D L Bekker 1   c a r r i e d  o u t  a t  t h e  R o c h e s t e r  I n stitute of Technology and continuing the work presented in [2  tasks Furthermore these radiation-hardened proces sors require additional interface boards and are limited  in their computational capabilities Hybrid field-programmab le gate arrays FPGAs offer the versatility of running div erse software applications on state-of-the-art embedded 
processors while taking advantage of reconfigurable  hardware resources within the same chip package T hese tightly coupled Systems-On-a-Chip \(SoC\ can be deve loped with custom architectures and promise breakthrough performance capability At the 2007 IEEE Aerospace Conference we presented a paper titled An FPGA/SoC Approach to On-Board Dat a Processing Enabling New Mars Science with Smart Payloads where we introduced the MATMOS 4 instrument at that time proposed for the 2011 Mars Scout MARVE L 5  mission MARVEL base-lined two RAD750 SBCs to perform the on-board data processing functions for MATMOS at significant utilization of precious on-bo ard resources mass volume etc Following-up on an initial 
evaluation of the Xilinx Virtex-II Pro V2P hybrid FPGA that was determined not to meet MATMOS’s requiremen ts we introduced a demonstration of the then-recentlyreleased Xilinx Virtex-4FX \(V4FX\ hybrid-FPGA for the MATMOS  fast Fourier transform FFT portion of the algorit hm This demonstration proved promising with the use of the V4FX’s new Auxiliary Processor Unit APU controller that tightly couples co-processors built in the FPGA fabric to t he main PowerPC 405 PPC405 core Based on the results for  the FFT we presented a processor concept for MATMOS th at could potentially meet the requirements utilizing a dual-core V4FX FPGA [2   In the past year this research task has focused on  developing a fully functional hybrid-FPGA implement 
ation of the FTIR spectrometry algorithm with emphasis on  reducing the overall execution time by optimizing i n both hardware and software domains The algorithm writt en entirely in FORTRAN is first ported to the PPC405 processor with the help of the FORTRAN-to-C Convert er  f2c and its supporting libraries [3   O n c e  p o r t e d   t h e FTIR spectrometry software is carefully studied in order  to    4 Mars Atmospheric Trace Molecule Spectroscopy \(MATM OS 5 Mars Volcanic Emission and Life \(MARVEL 


 2 identify areas of improvement Profiling tools are used to locate bottlenecks and computationally intensive po rtions of the algorithm Two software optimizations are evaluated   Use of non-ANSI single-precision math functions   Use of IBM Performance Libraries Perflib  The techniques listed above are compatible with bot h the V2P and the V4FX two families of Xilinx’s currentl y available hybrid-FPGAs The first technique require s modification of the FTIR spectrometry code to use s ingleprecision math function calls where acceptable Sin gleprecision arithmetic is performed much faster than doubleprecision thus reducing the overall execution time  The second software optimization uses Perflib a set of libraries that replaces string manipulation functions and sta ndard floating-point emulation with hand optimized routin es written specifically for the PPC405 processor 4   Xilinx’s Embedded Development Kit EDK provides a version o f Perflib compiled for string single and double-precision optimization Additionally this paper describes a build of Perflib  that optimizes only the double-precision floatingpoint functions to complement the single-precision floatingpoint unit \(FPU\ implemented in the FPGA fabric The core focus of the paper however is on hardwar e optimizations their integration with the system a nd compatibility with the software Different system architectures memory configurations and bus frequ encies are evaluated to find the optimal solution. The new soft-core single-precision Xilinx FPU and its integration wit h the APU controller is studied extensively Additionally  a custom HW accelerator that optimizes single-precisi on dotproduct calculations is presented and implemented a longside the FPU thus demonstrating multiple co-processors s haring the same physical hardware interface  a capability  not previously tested by Xilinx The outcome of this research is an 8x reduction in execution time of the FTIR spectrometry algorithm when compar ed to a software-only implementation on the V4FX60 FPGA Only one of two available PPC405 cores is utilized and with minimal changes to the FTIR spectrometry software This is the fastest implementation of the algorithm on an F PGA platform to date Although in its current form whi le incapable of meeting the data processing requiremen ts for MATMOS, future improvements to the software as well as a dual-core design may provide a fully realized implementation This paper begins with a brief overview of the data  processing steps in the MATMOS FTIR algorithm and presents an all software implementation for the emb edded PPC405 processor After profiling this base system  the subsequent sections present incremental results of the aforementioned software and hardware optimizations  A complete analysis of the results is then presented followed by conclusions and recommendations for further work  2  D ATA C OLLECTION AND P ROCESSING  The MATMOS instrument measures the 850-4300 cm 1  region of the infra-red spectrum of sunlight as it shines through the Martian atmosphere Figure 1 This measurement is done at a high 0.02 cm 1 spectral resolution necessary to identify certain trace gases such as CH 4  and N 2 O that might be produced by life or volcanism. MATMO S records roughly 26 spectra per occultation with ea ch containing 172,500 spectral elements There are two  occultations per orbit one for sunrise and one for  sunset Figure 2\. The duration of an occultation is betwe en 78 and 169 seconds, thus requiring that each spectrum be c ollected in 3.0 to 6.5 seconds [2    Fig 1  A conceptual drawing of the MARVEL spacecraft with the MATMOS instrument gathering data through t he Martian atmosphere as it points towards the Sun [2   Fig 2  The spacecraft sees two solar occultations per orb it sunset shown above\ [2   


 3 The spectrum is recorded with a Fourier Transform Spectrometer FTS a Michelson interferometer in w hich the optical path difference of light rays is contin uously varied with moving mirrors Using photovoltaic dete ctors this modulated light is converted to an electric si gnal known as an interferogram The MATMOS FTS utilizes three separate detectors in  the process of collecting occultation spectra An HgCdTe detector is used to collect longer wavelengths 12  m to 5  m and an InSb detector collects shorter wavelengths \(5  m to 2  m  An Ge detector is used to collect the reference laser interferogram used to measure the path diffe rence  internal to the FTS For each orbit the three det ectors produce 659 Mbytes of raw data that must be process ed and compressed prior to downlink The data processing consists of five steps: interfe rogram resampling phase correction FFT spectra averaging  and lossless compression Table 1 Re-sampling convert s the time-domain signal to the path difference domain, r emoving frequency modulation in the process and reducing th e number of points for each solar detector Phase cor rection makes the interferogram symmetrical about the zero path difference ZPD a point where the two moving mirr ors inside the interferometer are at equal distance to the beam splitter This allows the two symmetrical halves of  the interferogram to be averaged together. The spectrum is then computed with an FFT reducing the dynamic range of  the interferogram thus allowing it to be represented wi th fewer data bits Averaging scans taken above the atmosphe re and then performing lossless compression further reduce s the volume of data to be transmitted to Earth Table 1  Reduction in data volume due to on-board data proce ssing Data Processing Step Reduction Factor Data Size \(Mb ytes Raw Interferogram  659.18 Interferogram Re-sampling 1.83 360.21 Phase Correction 2.00 180.10 Fast Fourier Transformation 6.10 29.53 Spectra Averaging 2.00 14.76 Lossless Compression 1.80 8.20 Net Data Reduction 80.37 8.20  3  FTIR  B ASE S YSTEM  The target platform to host all system builds prese nted in this paper is the Xilinx ML410 development board wh ich features the V4FX60 FPGA. This FPGA is in the -11 s peed grade allowing the dual embedded PPC405 cores to op erate at up to 400 MHz when the APU controller is not in use or up to 275 MHz when the APU controller is in use \(as is the case for much of the work presented in this paper 5   This board comes in a standard ATX form factor \(see Figure 3\ with 64 Mbytes of component DDR memory \(32-bit and 256 Mbytes DDR2 DIMM memory 64-bit The DDR memory is capable of running at up to 266 MHz  however the available memory controller IP core operates at  100 MHz  thus delivering PC-1600 performance 1.6 Gbytes/sec\. In the case of DDR2, the controller IP core can interface with a 266 MHz memory module however the module supplied with the board is capable of runnin g at up to 200 MHz  thus delivering PC2-3200 performance 3.2 Gbytes/sec\ [6    Fig 3  The Xilinx ML410 evaluation board comes in an ATX form factor and hosts the V4FX60 FPGA that feat ures two embedded PowerPC405 processors [6   The board also features a SystemACE compact flash controller dual Ethernet PHYs PCI and PCI express  interfaces, VGA interface, USB ports, and much more The SystemACE controller can be used to access data on a compact flash card non-volatile storage and also has the ability to configure the FPGA with hardware bitstre ams and software object codes stored in one of eight config uration locations on the card The starting point for implementing the base system is FTIR source code in FORTRAN and simulated interferograms  provided by NASA Jet Propulsion Laboratory 7   T h e  software contains only the three most time consumin g data processing steps shown in Table 1  interferogram r esampling phase correction and fast Fourier transfo rmation The base system implemented on the ML410 developme nt board must have adequate hardware resources to exe cute the software which must first be ported to the Pow erPC processor Generating a Hardware Platform Using Xilinx Platform Studio XPS and the Base Sys tem Builder BSB in EDK the hardware platform shown i n Figure 4 is generated Some of the main features of this build are 


 4   100 MHz max\ processor local bus \(PLB\ and on-chip peripheral bus OPB clock frequency for highest possible transfer rates on system buses   200 MHz PPC405 processor clock frequency 6    Cache enabled for maximum performance instruction and data, burst and/or cacheline The bussed peripherals include   OPB RS232 UARTLITE for standard input/output \(I/O functionality over a serial null modem link to the host PC \(and HyperTerminal   OPB SystemACE controller for access to the compact flash CF card where the simulated time-domain interferogram is stored non-volatile memory prior  to transfer to main system memory   PLB DDR2 memory controller with interface to external 256 Mbytes DDR2 DIMM to act as main system memory for data processing  Fig. 4 FTIR base system diagram \(main component only Note that local on-chip memory is not used because all software data and text sections are significantly l arger than on-chip memory capacity Configuring Software Prior to converting the FORTRAN source to C source capable of cross-compilation for the FPGA’s embedde d    6 Although the PPC405 core on the V4FX60 -11 speed g rade FPGA can be clocked at up to 400 MHz the use of the APU controller \(in later builds limits this frequency to 275 MHz A 200 MHz processor clock is selected as it is an integer multiple of the bus frequency a nd is easier to work with in terms of the on board digital clock managers \(DC M PPC405 processor the expected output of the FTIR software is obtained from execution on a PC. This i s shown in the form of spectrum graphs in Figure 5 below  a Full spectrum  b A portion of the full spectrum Fig 5  The spectrum produced from simulated interferogram data after executing the FTIR softwar e on a PC [7  Converting FORTRAN to C is a three step process 1  Remove all I/O operations from the FORTRAN source except for simple string printing 2  Run f2c to automatically generate C source 3  Augment the generated C source with a  Proper device initialization b  SystemACE file I/O functions c  PPC405 timing routines \(for benchmarking A detailed description of this process including t he configuration of f2c and its support library libf2c is given in 1   I t  i s  i m p o r t a n t  t o  f o l l o w  t h e  c o n f i g u r a t i o n  steps precisely in order to generate C source capable of proper cross-compilation to the FPGA’s embedded PPC405 processor using the Xilinx supplied GCC compiler \(v ersion 4.1.1 


 5 Checking Processing Results The FTIR spectrometry software configured for execu tion on the ML410 development board with no HW or SW optimizations applied reports the run times shown i n Table 2 below Table 2  Execution times for FTIR base system on ML410 board  PPC405 Freq 200 MHz Interferograms 1 Detectors 1 Software Component Time \(sec Re-sampling 1197.7938 Spectrum \(Phase Correction, FFT 117.4963 TOTAL 1315.2901  Most importantly the spectrum produced by the FTIR  spectrometry software executing on the ML410 develo pment board is indistinguishable from the reference spect rum graphs in Figure 5 Initial Performance Evaluation In order to know what aspects of the FTIR software to optimize and whether to do it in hardware or in sof tware, it is first important to understand where the bottlene cks are in the computation An excellent tool to identify wher e in the software the CPU spends most of its time is the Xil inx profiler in the Software Development Kit SDK Whe n software profiling is enabled a timer is configure d on the PPC405 processor to keep track of the amount of tim e spent in each function called This data is stored in a m emory region specified by the user and can later be downl oaded to the host system i.e the development PC for analy sis Profiling was performed on the FTIR base system wit h the results presented in Figure 6 below  Fig. 6 Profiling results for FTIR base system The graph in Figure 6 lists top ten time consuming functions called in the FTIR spectrometry algorithm. Not surp risingly most functions called take up very minimal CPU time  to execute However two functions stand out far above  the rest together taking up over 45 of the CPU time These two functions are atan and __ieee754_atan2  From their names, it is clear that both come from the math lib rary. After a close inspection of the original FTIR C-source i t was found that all math library functions were being ca lled with double-precision arguments even though the input interferogram is in single-precision Double-precis ion arithmetic is more complex than single-precision ar ithmetic and should be avoided when double-precision is not absolutely necessary For the original FTIR C-sourc e this was the source of the bottleneck and the reason why the atan and __ieee754_atan2 functions were taking up so much CPU time 4  S OFTWARE O PTIMIZATIONS  Non-ANSI Single-precision Math Library Functions Based on the profile data in Figure 6, the followin g doubleprecision math library function calls were changed to their singe-precision \(SP\, non-ANSI counterparts   double acos\( double  float acosf\( float   double cos\( double  float cosf\( float   double sin\( double  float sinf\( float   double atan2 double double    float atan2f float float   double sqrt\( double  float sqrtf\( float   double atan\( double  float atanf\( float This resulted in a significant speedup Table 3 wh ile producing a spectrum that deviated only by 0.000979 5 from the reference spectrum in Figure 5 Table 3  Execution times for system with SP math functions SW Optimizations None base system SP Math Functions  PPC405 Freq 200 MHz 200 MHz  Interferograms 1 1  Detectors 1 1  Software Component Time \(sec Time \(sec Speedup Re-sampling 1197.7938 780.9376 1.53x Spectrum \(Phase Correction, FFT 117.4963 109.9881 1.07x TOTAL 1315.2901 890.9257 1.48x   Fig. 7 Profiling results after SP math functions optimiza tion 


 6 The profiling data Figure 7 shows that the two fu nctions previously taking up over 45 of the CPU time atanf the SP version of atan  and __ieee754_atan2f the SP version of __ieee754_atan2 now only take a little under 33%. New functions have risen to the top of the profile sugg esting that the CPU is now executing a more balanced program IBM PowerPC Performance Library The IBM PowerPC performance libraries  Perflib  is another great optimization that can easily be incor porated into an existing system 4   A b s o l u t e l y  n o  c h a n g e s  to the source are required it is only necessary to link t o these libraries for them to take effect Perflib works by replacing string and floating-point routines provided by the compiler with more efficient hand coded implementations specifically targeting the PPC405 and PPC440 proces sors In EDK Perflib has been pre-compiled and can be linked to the software project by specifying the mppcperflib option at link time This instructs the GCC linker to substit ute IBM performance libraries for standard string and float ing-point routines Perflib significantly reduces the overall execution time Table 4 The reported maximum deviation is s till 0.0009795 Table 4  Execution times for system with SP math and Perflib  SW Optimizations None base system SP Math IBM Perflib  PPC405 Freq 200 MHz 200 MHz  Interferograms 1 1  Detectors 1 1  Software Component Time \(sec Time \(sec Speedup Re-sampling 1197.7938 244.1836 4.91x Spectrum \(Phase Correction, FFT 117.4963 44.4243 2.64x TOTAL 1315.2901 288.6079 4.56x  The profile now has an even greater diversity of fu nctions that take up the most CPU time see Figure 8 The atanf function now takes up only 2.23% of CPU time \(not s hown in graph\ while a new function __mulsf3 takes up the most CPU time, 9.27%. This function is responsible for f loatingpoint multiplication and is one replaced by Perflib   Fig. 8 Profiling results for system with SP math and Perflib  5  H ARDWARE O PTIMIZATIONS  Having optimized the FTIR algorithm in software th e next step is to determine what can be done in the hardwa re to further reduce the execution time. This section des cribes the integration of two co-processors into the hardware  the Xilinx APU floating-point unit and a custom designe d floating-point dot-product co-processor The co-pro cessors were first integrated individually and then configu red to work together in the same system Xilinx APU Floating-point Unit The Xilinx APU-FPU is a fabric co-processor bus FC B bound co-processor that extends the native PPC405 I SA to include support for single-precision floating-point  operations Running at half the CPU frequency it c an achieve a sustained performance of up to 100 MFLOPS  with only modest resource utilization  about 5 on  the V4FX60 FPGA [8   The FPU consists of an FCB interface component, exe cution control and decode logic, a 32-bit register file \(c ontaining 32 registers and the various individual execution un its for floating-point operations As a Xilinx supplied Log iCORE only the top level inputs/outputs of the FPU are vi sible to the developer for interfacing The user has the opt ion of selecting between the “lite” \(no div/sqrt\ and the full” \(with div/sqrt\ configurations [8    Fig. 9 FTIR system with FPU co-processor Inserting the FPU core into an existing PowerPC sys tem is a four step process [8    


 7 1  Configure the PPC405 processor to enable APU controller operation set APU control configuration  register to initial value of 0b1  2  Insert the FCB core and configure it to use process or clock and bus reset 3  Insert the FPU core, select the appropriate configu ration lite or full and configure it to use the half rate clock 4  Connect the FCB to the processor \(master\ and the F PU slave The FPU \(in “full” configuration\ is added to the F TIR base system hardware design following the steps outlined above The diagram in Figure 9 represents this new system  With the FPU in the system all single-precision fl oatingpoint arithmetic is now done in the hardware and th e Xilinx supplied GCC compiler automatically generates hardw are floating-point instructions However for the FTIR software to function properly all precompiled libraries mus t be recompiled with hardware FPU support enabled In particular this applies to libf2c  and Perflib  The recompilation of libf2c is extensively documented in [1    As for Perflib it is not supported by Xilinx to work with the FPU because both overlap in their optimization of s ingleprecision floating-point arithmetic the FPU only h andles single-precision floating-point arithmetic while Perflib  optimizes both singe and double-precision floatingpoint arithmetic\. This creates a conflict, which can be resolved by separating the double-precision optimization routin es provided by Perflib  and relying on the FPU for all singleprecision arithmetic. This provides the best of bot h worlds good double-precision performance through Perflib and excellent single-precision performance though the h ardware FPU String optimization part of the original Perflib  package is not necessary in the case of the FTIR spectrometry algorithm because most time is spent o n floating-point arithmetic Table 5 lists the optimized floating-point routines  provided in the original Perflib package It was determined that only the double-precision routines from Perflib can exist alongside the hardware FPU The conversion routines  did not work properly when deployed in a system with th e FPU present. Thus, the original Perflib makefile was modified to only compile the following routines into the librar y  fadd  fsub  fmul  fdiv  fcmpd  Complete instructions for recompiling Perflib and using it in a system with the FPU are presented in [1   The FTIR system with a hardware FPU single-precisi on math functions and double-precision Perflib optimization demonstrates a significant speedup over previous implementations. As seen in Table 6, this build ach ieves an almost eight-fold reduction in the overall executio n time This comes at no price to the accuracy The maximum  deviation is still reported as 0.0009795 Table 5  Optimized floating-point routines provided by Perflib  Routine Type Description fadd DP add two DP numbers fsub DP subtract two DP numbers fmul DP multiply two DP numbers fdiv DP divide two DP numbers fadds SP add two SP numbers fsubs SP subtract two SP numbers fmuls SP multiply two SP numbers fdivs SP divide two SP numbers dtof conv convert DP to SP ftod conv convert SP to DP dtoi conv convert DP to INT ftoi conv convert SP to INT fcmpd DP compare two DP numbers fcmps SP compare two SP numbers fneg SP/DP negate a SP or DP number itod conv convert INT to DP itof conv convert INT to SP ftoui conv convert SP to unsigned INT dtoui conv convert DP to unsigned INT  Table 6  Execution times for system with APU-FPU, SP math functions, and DP Perflib  SW Optimizations None base system SP Math IBM Perflib \(DP  HW Optimizations None base system APU-FPU 100 MHz  PPC405 Freq 200 MHz 200 MHz  Interferograms 1 1  Detectors 1 1  Software Component Time \(sec Time \(sec Speedup Re-sampling 1197.7938 151.1817 7.92x Spectrum \(Phase Correction, FFT 117.4963 14.3672 8.18x TOTAL 1315.2901 165.5489 7.95x   Fig 10  Profiling results for system with APU-FPU SP math functions, and DP Perflib  The hardware FPU single-precision math functions and double-precision Perflib are general optimizations that can be applied to almost any type of data processing sy stem that requires extensive floating-point arithmetic Once these optimizations are implemented the next step is to look at more application specific ways to reduce the execut ion time For this matter the profiling information is extre mely 


 8 important The profile of the current build is show n in Figure 10 The most time consuming routine here is dotprod_  accounting for almost 10 of CPU time This function is part of the re-sampling step and is tar geted for a hardware implementation, as described in the next s ection Dot-product Hardware Co-processor The dotprod function computes the scalar product of interpolation operators and the input function and is part of the re-sampling step. The computationally intensive portion of the function is shown in the code segment below   for i__ = 1; i__ <= i__1; ++i__ Dot product fin\(kin+1\ with oper\(1,j ret_val  ret_val  fin[i__  kin    o p e r  i _ _    j    oper_dim1    fin[*nop + 1 - i__ + kin    o p e r  i _ _    j r    o p e r _ d i m1      As shown in the code segment above the format of computing the dot product is as follows retval  retval  fin  a   oper  b     fin  c   oper  d   In the notation above the  and  signs inside  the brackets indicate the direction of change i.e inc rementing or decrementing index In this case the dot-produ ct is calculated from both ends of the operator array simultaneously. Since the largest values are typica lly located in the middle of the operator array a higher degre e of precision is achieved by working with these values in the final steps of the computation However this comes  at the price of longer memory latencies as the array acces s is not consecutive One iteration in the loop requires two multiplicati ons an addition and an accumulation all in single-precis ion floating-point format. After studying the APU-FPU l atencies associated with these operations it was determined  that a more efficient solution to computing the dot-produc t can be achieved by building a dedicated dot-product co-pro cessor from individual floating-point operators that are a vailable as part of the Xilinx IP collection This additional f abric coprocessor module FCM communicates with the PPC405  through the APU, sharing the FCB with the FPU. It c onsists of a load/store unit and an arithmetic core The lo ad/store unit facilitates data transfers to and from the FCB while the arithmetic core computes the dot-product \(Figure 11  Communicating with the dot-product core from the so ftware is a matter of issuing FCM load/store instructions that can transfer up 16 bytes of data at a time \(four single precision floats This coincides with the structure of the dotprod  function which operates on four new data points per  iteration Details on setting up FCM quadword trans fers in the software are given in [1    Fig 11  FCM load/store unit interface to FCB and dotproduct co-processor arithmetic core  Fig. 12 Dot-product arithmetic core block diagram The design of the dot-product arithmetic core is sh own in Figure 12 above Two single-precision floating poin t multipliers and two adders are used in the core Th e maximum latency in any one stage is 7 cycles which  corresponds to the best case issue rate of FCM load  instructions 7 The total latency of the core is 22 cycles, after  which the result is produced every seven cycles Th e accumulator in the reduction circuit has its feedba ck signal    7 The FCM load issue rate depends on the current sta te of the CPU pipeline and the availability of load data in cache Lower l atencies for the multipliers and adders can be achieved at the expen se of lowering the frequency In this design, the target frequency is the FCB frequency \(200 MHz  


 9 asynchronously latched This is to ensure data appe ars on the input of the final adder in time for the next a ccumulation Care must be taken when implementing a high frequen cy design with such a latch In particular, the latch delay must be constrained not to exceed one clock cycle  Fig. 13 FTIR system with dot-product co-processor The dot-product core is added to the FTIR base syst em initially without the FPU coprocessor This is done  to first validate proper dot-product core functionality in h ardware before putting it on the FCB with another unit \(i.e the FPU A system diagram of this hardware configuration is shown in Figure 13 above Table 7  Execution times for system with dot-product co-processor, SP math functions, and Perflib  SW Optimizations None base system SP Math IBM Perflib  HW Optimizations None base system Dot-prod 200 MHz  PPC405 Freq 200 MHz 200 MHz  Interferograms 1 1  Detectors 1 1  Software Component Time \(sec Time \(sec Speedup Re-sampling 1197.7938 211.4479 5.66x Spectrum \(Phase Correction, FFT 117.4963 44.4456 2.64x TOTAL 1315.2901 255.8935 5.14x   The GCC compiler is not well suited to work with cu stom hardware that integrates with the processor down at  the instruction level This is quite a nuisance especia lly when compiler optimization is turned on. Such optimizati ons often cause incorrect rearrangement of instructions and o veroptimization of data accesses For this matter cert ain modification are required in the software, some of which are very obscure These necessary modifications are dis cussed in detail in [1   The FTIR system with the dot-product co-processor b uilds successfully meeting all timing constraints and pr oducing accurate results Table 7 This system has a lower  total execution time than the SW-only optimized FTIR buil d with SP math functions and Perflib Table 4\. However, the execution time is higher than on the FTIR system wi th the FPU co-processor FPU system speedup = 7.95x, Table 6 This is because the FPU optimizes all single-precis ion floating-point arithmetic whereas the dot-product c oprocessor only optimizes the dot-product calculatio n Nevertheless the core produces accurate results an d achieves a good speedup over the software FPU / Dot-product Compatibility and Integration With the dot-product core functionality verified, t he FPU is put back into the system Figure 14 This configur ation where the FPU is sharing the FCB with another coprocessor, has never been tested by Xilinx  Fig 14  FTIR system with dot-product and FPU coprocessors There are two issues with the FPU in Xilinx Platfor m Studio 9.1.02i that prevent it from working properly with another co-processor on the FCB The first issue deals with  instruction decoding Both the FCM load/store instr uction and the FPU load/store instruction share the same p rimary op-code 31 The only difference between the two instructions is in the first bit of the extended op code 9   


 10 While debugging with the ChipScope Logic Analyzer c ore it was found that the FPU attempted to decode ordin ary FCM load/store instructions This of course cause d a conflict on the FCB as the load/store core of the d ot-product co-processor also attempted to decode this instruct ion Xilinx quickly fixed this issue and delivered an up dated FPU core that properly ignored FCM load/store instructions 8  The second issue deals with the FCMAPULOADWAIT signal that is part of the FCB interface. This sign al is used to indicate to the APU controller that the FCM is not yet ready to receive the next load data The FPU constantly t oggles this line as part of its internal synchronization l ogic that lets it operate at half the clock rate of the FCB When other cores are present on the FCB toggling the FCMAPULOADWAIT signal interferes with their operation since the FCB is basically a wired-or bus. This was the case with the dot-product co-processor which would not load data correctly with the FPU toggling the FCMAPULOADWAIT signal. According to Xilinx, the FPU only needs to use the FCMAPULOADWAIT  signal under two conditions 1  The APU controller sends the two halves of a double precision load transfer back-to-back, and the FPU c an’t keep up 2  The APU controller flushes an outstanding operation  and then immediately provides load data to the FPU before it has had time to process the flush The first scenario does not apply to this design as  the FPU only supports single-precision floating-point opera tion The second scenario is, according to Xilinx, “unlikely although the probability of it happening depends on the code  being executed. Since the FPU implementation is hidden fr om the developer the only possible but not ideal soluti on to this issue is to disconnect the FCMAPULOADWAIT signal from the FPU Future releases of XPS will most likely fi x this issue at its source Table 8  Execution times for system with dot-product and FPU co-processors, SP math functions, and DP Perflib  SW Optimizations None base system SP Math IBM Perflib  HW Optimizations None base system APU-FPU \(100 MHz Dot-prod \(200 MHz  PPC405 Freq 200 MHz 200 MHz  Interferograms 1 1  Detectors 1 1  Software Component Time \(sec Time \(sec Speedup Re-sampling 1197.7938 149.3297 8.02x Spectrum \(Phase Correction, FFT 117.4963 14.3675 8.18x TOTAL 1315.2901 163.6972 8.03x     8 The updated FPU should be available in future rele ases of XPS The results in Table 8 show only a small improvemen t over the execution times observed with an FPU-only syste m no dot-product co-processor, Table 6\. One explanation for this is a higher than expected overhead in getting the d ata from memory to the dot-product co-processor To confirm this theory a number of similar systems were built and the performance of the dot-product core was compared to  the FPU when working with a smaller data set both from external DDR2 memory and on-chip block ram BRAM memory Perflib  was used in all tests to optimize software performance The CPU frequency was fixed to 200 MHz  The results are summarized in Table 9 below Table 9  Dot-product core testing with smaller data set Mem Type SW sec FPU sec Dot-prod sec Dot-prod Speedup BRAM 0.0065  0.00032 20.26x DDR2 0.0026  0.00042 6.13x BRAM  0.00070 0.00032 2.18x DDR2  0.00082 0.00042 1.94x  A few conclusions can be made from the data above First the dot-product core is about twice the speed of th e FPU when not starved for data.  It is clearly evident t hat working with a smaller more contiguous data set results in  better performance than working with larger less organize d chunks of data, as seen in the FTIR spectrometry al gorithm Additionally, both the FPU and the dot-product co-p rocessor achieve better execution times when the data set is  stored entirely in BRAM The results also indicate that th e performance of the dot-product co-processor is not significantly affected by the addition of the FPU t o the FCB in other words the two co-processors sharing the s ame bus are not slowing each other down Even though the do tproduct core is a valid co-processor, it only impro ves system performance under favorable memory access condition s which is not the case in the FTIR spectrometry algo rithm  Fig 15  Profiling results for system with dot-product and FPU co-processors, SP math functions, and DP Perflib  In the execution time profile Figure 15 the dotprod_ function is shown to consume less CPU time than bef ore With both the FPU and dot-product co-processor the  


 11 dotprod_ function consumes 2.95 of the CPU time compared to the previously observed value of 9.97 Figure 10 However this does not mean the function execu ted faster. In fact, as seen in the results in Table 8 the speedup is negligible compared to an FPU-only system Table  6 The value for dotprod_ function is lower because the profiler does not include helper functions that are  called within the dotprod_ function otherwise the function main would consume 100% of CPU time\. These helper funct ions could include various low level data copy and manip ulation operations. In fact, the profile now shows new func tions that take up significant CPU time that were not visible before for example memcpy  The cumulative contribution of the helper functions to the overall execution time is t he reason why little speedup is seen with the dot-product coprocessor even with the dotprod_ function itself taking up less CPU time 6  R ESULTS A NALYSIS  Table 10 presents the execution times of all system s described in this paper Without a doubt the two s oftware optimizations using single-precision math library and Perflib  and the inclusion of the APU-FPU core together provide impressive speedup across the board That i s because the aforementioned optimizations affect nea rly all portions of the FTIR software improving both singl eprecision SP math functions and APU-FPU as well a s double-precision arithmetic Perflib  The dot-product co-processor core, however, has alm ost no effect on the system performance. This is most like ly due to the noncontiguous pattern of memory access in the d otproduct computation of the FTIR spectrometry algori thm As was shown earlier, smaller more uniformly access ed data sets can achieve nearly 2x speedup over the FPU whe n using the dot-product co-processor Comparing the best performing FTIR system build on the ML410 development board to a V2P based NASA JPL implementation in 7  s h o w s  a n  o v e r a l l  s p e e d u p  o f  1 78x Table 11 The results of the best performing FTIR  build are first scaled to the appropriate number of inter ferograms and detectors to match what was used in the NASA JP L V2P research task. The reported speedup is seen even th ough the CPU on the ML410 system is clocked at a lower frequ ency than on the V2P In Table 12 the execution times of the best perform ing FTIR system are compared to the execution times of the B AE RAD750 SBC evaluated at NASA JPL 7   E v e n  w i t h  hardware and software optimizations the FTIR syste m on the V4FX hybrid-FPGA still lags behind a software-o nly implementation on the RAD750 however the margin i s a lot smaller than anything seen previously Overall  the FPGA system processes the data about 4.5x slower th an the RAD750 This is mostly due to the time spent in the  resampling phase of the FTIR spectrometry algorithm The spectrum computation is actually faster on the FPGA  than on the RAD750 \(1.14x speedup\. Additionally, the FP GA is only utilizing one of its two PPC405 cores A dualcore implementation will narrow the margin even further  Table 10  Execution times for all V4FX FTIR system builds CPU \(MHz FPU \(MHz Dot-prod \(MHz SP Math Perflib Re-sampling \(sec Spectrum \(sec Total \(sec Speedu p 200   n  1197.7938 117.4963 1315.2901 1.00x 200   y  780.9376 109.9881 890.9257 1.48x 200   y standard 244.1836 44.4243 288.6079 4.56x 200 100  y DP-only 151.1817 14.3672 165.5489 7.95x  200  200 y standard 211.4479 44.4456 255.8935 5.14 x 200 100 200 y DP-only 149.3297 14.3675 163.6972 8.0 3x      V2P NASA JPL ML410 Xilinx    RAD750 BAE ML410 Xilinx  SW Optimizations IBM Perflib standard SP Math IBM Perflib   SW Optimizations None SP Math IBM Perflib  HW Optimizations None APU-FPU \(100 MHz Dot-prod \(200 MHz   HW Optimizations Native FPU APU-FPU \(100 MHz Dot-prod \(200 MHz  PPC405 Freq 300 MHz 200 MHz   PPC405 Freq 133.33 MHz 200 MHz  Interferograms 104 scaled to 104   Interferograms 1 04 scaled to 104  Detectors 2 scaled to 2   Detectors 2 scaled to 2  Software Component Time \(min Time \(min Speedup  Software Component Time \(min Time \(min Speedup Re-sampling 780 518 1.51x  Re-sampling 69 518 0.13x  Spectrum \(Phase Correction, FFT 142+90 50 4.64x  Spectrum \(Phase Correction, FFT 42+15 50 1.14x TOTAL 1012 568 1.78x  TOTAL 126 568 0.22x  Table 11  Execution times for best performing FTIR system on ML410 board and comparison to NASA JPL V2P board [7  Table 12  Execution times for best performing FTIR system on ML410 board and comparison to BAE RAD750 SBC [7  


 12 7  C ONCLUSIONS AND F UTURE W ORK  This research task started with an all-FORTRAN implementation of the FTIR spectrometry algorithm converted it to C code, and developed a number of H W/SW systems on the V4FX60 hybrid-FPGA The execution ti me of the all software C implementation of the FTIR spectrometry algorithm was recorded and used for comparison as a base case Two software-based optimizations were applied that reduced the executi on time by more than 4.5x These included modifying the cod e to use all single-precision math library functions no n-ANSI when dealing with single-precision data and utilizi ng the IBM Performance Libraries  Perflib  to improve the speed of all single and double-precision arithmetic The idea of using a DP-only Perflib was introduced and then used in conjunction with the single-precision APU-FPU to fu rther improve system performance The bulk of the research dealt with looking into ha rdwarebased improvements to the FTIR spectrometry system  These included the Xilinx APU-FPU, and a single-pre cision dot-product co-processor The APU-FPU delivered significant speedup for all single-precision floati ng-point operations The dot-product co-processor although ineffective in the FTIR spectrometry system due to poor spatial locality of the data, showed nearly a 2x im provement over the APU-FPU when working with smaller, sequent ially accessed data sets Furthermore it was implemented  as a load/store-based APU-connected FCM thus establishin g a reference for creating similar APU co-processors T he design of a non-system-bused CPU-coupled co-process or is frequently overlooked in design guides yet it is a  very effective way to offload software routines to hardw are implementation The ML410 development board on which all of this w ork was conducted, hosts the V4FX60 hybrid-FPGA contain ing two PPC405 processors This research task focused o n optimizing the performance of the FTIR spectrometry  algorithm on a single PPC405 core, however, the des ign can be extended to utilize both available cores. Figure 16 on the following page shows a dual-core design that can be  implemented on the ML410 board The two PPC405 processors each have dedicated PLB interfaces but s hare a common OPB. On the common OPB, the processors need to negotiate access to the RS232 UART and SystemACE CF  controller. This negotiation can be done through du al-ported shared BRAM accessible by each processor from thei r respective PLB. The ML410 board has two external me mory interfaces that are both utilized in this concept PPC405 CPU0 uses the DDR2 DIMM 256 Mbytes while PPC405 CPU1 utilizes the DDR on-board component memory 64  Mbytes\. Each of the processors has some dedicated on-chip memory OCM connected through OCM interface The instruction side OCM is particularly necessary so e ach processor can store its own boot code in its own on chip memory as booting both processors from external mem ory may not be possible Both processors have their own FPUs connected on dedicated FCB interfaces Since the processing of individual interferograms is a comple tely independent task an up to 2x reduction in executio n time may be possible with a dual-core system However o ne bottleneck that may limit the speedup is negotiatin g access to the shared CF card controller Additional improvement to the overall performance o f the FTIR spectrometry system may be possible by rewriti ng the software in C. The automatic conversion from FORTRA N to C using f2c most likely does not produce optimal code, and it is certainly not appealing to read Some functio ns may also need to be rewritten with an optimized pattern  of data access This can help in cases such as the dot-prod uct coprocessor Further performance improvement may be achieved by trying a different compiler one that is specifical ly targeted for the embedded PPC405 processor A V2P performanc e study done at the NASA Goddard Space Flight Center concluded that using the WindRiver Diab DCC 5.2 com piler provides a 38 performance increase over the GNU-GC C 3.4 compiler The comparison was based on running a  Dhrystone benchmark application on a 400 MHz PPC405 design The GNU-GCC compiler achieved 458 DMIPS while the WindRiver Diab DCC achieved 628 DMIPS as  reported by Xilinx\ [10   Implementing additional hardware co-processors may result in the further reduction of execution time Using t he dotproduct design as a reference the FFT function fo r example can be implemented in the hardware This w ill help in the spectrum computation component of the s oftware processing. It may be necessary to re-arrange the d ata access pattern for optimal co-processor performance to av oid the pitfall seen when deploying the dot-product core Finally, no embedded processing system is complete without an OS. Linux is a good choice and is supported by X ilinx in EDK It is important to first finalize the hardware  design prior to deploying the OS Support for the APU may be lacking in Linux and getting the OS to recognize th e hardware FPU may be a project in itself For the FTIR spectrometry algorithm this research task started the process of moving from an all software system to a mixed HW/SW implementation on the V4FX60 hybridFPGA In the best case a more than 8x speedup was achieved compared to the FTIR base system This implementation, although nearly 2x faster the V2P s ystem at NASA JPL still lags behind the current state-of-th e-art space processor  the BAE RAD750 However the marg in between the two was narrowed down significantly and with further research as suggested above will most lik ely be eliminated altogether Directly benefiting from the  work presented in this paper is a 3-year JPL technology 


 13 development task that will support the MATMOS on-bo ard processing implementation for a future flight i nstrument   Fig. 16 Dual-core concept targeting ML410 development boar d 


 14 R EFERENCES  1  D L Bekker Hardware and Software Optimization of Fourier Transform Infrared Spectrometry on HybridFPGAs  MS Thesis Rochester Institute of Technology Rochester NY August 2007 Available http://hdl.handle.net/1850/4805  2  P J Pingree J.-F L Blavier G C Toon and D  L Bekker An FPGA/SoC Approach to On-Board Data Processing  Enabling New Mars Science with Smart Payloads in IEEE Aerospace Conference 2007  Big Sky MT March 2007 Available http://ieeexplore.ieee.org/xpl/freeabs_all.jsp?isnu mber=4 144550&arnumber=4161501  3  S I Feldman D M Gay M W Maimone and N L Schryer, “A Fortran-to-C Converter,” Computing Scie nce Technical Report 149, AT&T Bell Laboratories, Murra y Hill NJ March 22 1995 Available http://www.netlib.org/f2c/f2c.pdf  4  IBM PowerPC Embedded Processor Performance Libraries tech rep IBM Microelectronics Divisi on Hopewell Junction, NY, December 12 2003 5  Virtex-4 Data Sheet: DC and Switching Characterist ics Datasheet DS302 Xilinx Inc San Jose CA March 27 2007 Available http://www.xilinx.com/bvdocs/publications/ds302.pdf  6  ML410 Embedded Development Platform  Xilinx Inc San Jose CA March 6 2007 Available http://www.xilinx.com/bvdocs/userguides/ug085.pdf  7  G Toon J.-F Blavier M McAuley and A Kiely Advanced On-Board Science Data Processing System for a Mars-orbiting FTIR Spectrometer R&TD Task 01STCR  R.05.023.048 NASA Jet Propulsion Laboratory Pasadena, CA, 2005 8  APU Floating-Point Unit v3.0 product specificati on Xilinx Inc San Jose CA January 26 2007 Availa ble http://www.xilinx.com/bvdocs/ipcenter/data_sheet/ap u_fp u.pdf  9  PowerPC 405 Processor Block Reference Guide Xilinx Inc San Jose CA July 20 2005 Available www.xilinx.com/bvdocs/userguides/ug018.pdf  10  D. Petrick, “Analyzing the Xilinx Virtex-II Pro Pow erPC with the Dhrystone Benchmark Applications,” tech. r ep NASA Goddard Space Flight Center Greenbelt Maryland Available http://klabs.org/DEI/Processor/PowerPC/v2pro_ppc_pe rf ormance_petrick.doc  B IOGRAPHY  Dmitriy Bekker has just completed his Masters Degree in Computer Engineering at the Rochester Institute of Technology in Rochester NY His areas of interest include FPGAs embedded systems digital signal processing and system architecture. He has coop  internship experience working at Brookhaven National Laboratory Syracuse Research Corporation NASA Dryden Flight Research Center, and the Jet Propulsion Laboratory. He recen tly won in the 2006 IEEE Student Design Contest for his pro ject in autonomous vehicle navigation. He is a member of IE EE Dr Lukowiak is an assistant professor in the Computer Engineering Department at Rochester Institute of Technology in Rochester NY His research interests are concentrated in the area of multidisciplinary projects that require modeling and hardware implementations FPGA and ASIC of data processing systems Dr Marcin Lukowi ak obtained his Ph.D in Technical Sciences from the P oznan University of Technology in October 2001 Muhammad Shaaban is an associate professor of computer engineering at the Rochester Institute of Technology His research interests include high performance computing processor microarchitecture heterogeneous and reconfigurable computing Shaaban has a PhD in Computer Engineering from the University of Souther n California. He is a senior member of the IEEE Dr. Blavier first joined the JPLMkIV Team in August 1985 as a contractor from Ball Aerospace He participated in the MkIV campaigns in McMurdo Antarctica groundbased and from Punta Arenas Chile NASA DC-8 In late 1987, he started graduate work with Profs Delbouille and Dubois at the University  of Liège Belgium his research tasks included install ing the 


 15 Fourier transform spectrometers at the Internationa l Scientific Station of the Jungfraujoch Switzerland  for atmospheric measurements and at the Institute of Astrophysics in Liège for laboratory measurements He was hired by JPL in August 1990 as MkIV cognizant engin eer and participated in all the MkIV campaigns since th en \(one DC-8 campaign 19 balloon campaigns Dr J.-F Bla vier obtained his Ph.D in Physics from the University o f Liège in July 1998 Paula Pingree is a Senior Engineer in the Instruments and Science Data Systems Division at JPL She has been involved in the design integration test and operation of several JPL flight projects most recently Deep Impact DI She has worked on the Tunable Laser Spectrometer development for the 2009 Mars Rover and is presently the Electronics CogE for the Juno Mission s Microwave Radiometer She also enjoys research and technology development for Smart Payloads in her s pare time Paula has a Bachelor of Engineering degree i n Electrical Engineering from Stevens Institute of Te chnology in Hoboken, NJ, and an MSEE degree from California State University Northridge.  She is a member of IEEE 


 16  A High Capacity Solid Sate Recorder \(HC-SSR\is suggested using devices predicated to be available for each decade.   The design is robu st and easily implemented using conservative design and manufacturing techniques D EFINITIONS  rad radiation absorbed dose\:   the dose causing 0.01 joule of energy to be absorbed per kilogram of matter.   As the absorption is greatly affected by the molecular structure of the material, citations should al so indicate the material as a subscript to the term 223rad\224, as in rad Si indicating Silicon equivalency.  For the purposes of this paper, radiation equivalency always assumes Silicon For completeness, it should be noted that System International replaced the \223rad\224 with the unit Gr ay \(Gy\nd having an equivalency of 100 rads = 1 Gy [27 How e v e r   the use of rads, kilorads, megarads remains in the industry vernacular and is used in this document Moore\222s Law Named after Fairchild Semiconductor technologist Gordon Moore, Moore\222s law was derived from empirical data which shows that the dimensions of basic memory cells will shrink by approximately 50% of the previous value every 30 to 36 months.  It is Moore\222s Law more or less, that forms the backbone of the ITRS examinations for memory devices A DDITIONAL M ATERIAL  Standard Dose Rates for Various Orbits and Missions per year Earth    LEO  100 rad \(protons  MEO  100 krad \(protons electrons  GEO  1 krad \(electrons  Transfer Orbit  10 krad \(protons electrons Mars     Surface  2 krad \(electrons  Orbit  5 krad \(protons  Transit  5 krad \(protons Jovian     Transfer  100 Mrad \(protons electrons A CKNOWLEDGEMENT  The research described in this paper was carried out at the Jet Propulsion Laboratory, California Institute of Technology, under a contract with the National Aeronautics and Space Administration.   The Author thanks the many who guided the concept and offered support all along the way.   With special thanks to fellow-JPL\222ers Gary Noreen who provided funding\nd Taher Daud who provided editing ad-hoc extraordinaire  R EFERENCES    G M o o r e C r a m m i ng m o re C o m pone nt s o n t o  Integrated Circuits Electronics vol. 38, no. 8, April 1965 2 G M o ore, "No Expo n e n tial is Forev er: B u t 223Forever\224 Can Be Delayed Digest of Technical Papers, International Solid State Circuits Conference pp. 1.1-1 thru 1.1-19, 2003  S eagate Tec hnology Com p any. Seagate Tec hnical Corporation. [Onlin http://www.seagate.com/docs/pdf/marrketing/Article _Perpendicular_Recording.pdf   B l u R ay Di sc Ass o ci at i on  2 00 5 M a rc h B l u-R a y  Disc Technical Papers  J Vel e v K  D B e l a shche n ko  an d et _al   2 0 0 7  October\ MSREC - University of Nebraska Onlin http://www.mrsec.unl.edu/research/nuggets/nugget_2 6.shtml  6 R Katti, "Honeywell Rad i atio n Hard en ed  No nVolatile Memory \(MRAM\ Product Development in Proceedings, IEEE No n-Volatile Memory Technology Symposium Orlando, 2004, pp. L2:1-15 7 S aif u n  Sem ico n d u c tor  2 008 NV M Techno log y  Over http://www.saifun.com/content.asp?id=113  


 17    J. Ta usc h  S. T y son a n d T T a i r ba nks  Multigenerational Radiation Response Trends in SONOSb ased NROM Flash Memories with Neutron Latch-up Mitigation," in NSREC Radiation Effects Workshop Honolulu, 2007, pp. 189-193 9  Semico n du c to r In du str y A s sociatio n SIA  2 008   August\ Home. [Online  www.itrs.net  1  S. Ty s o n P ri v a t e C o m m uni que Tra n sEl  Semiconductor, Albuquerque, NM, 2008 1  T. M i k o l a ji c k  and C U Pi n n o w  2 00 8 N o vem b er Indo-German Winter Academy, 2008, Course 3 Onlin http://www.leb.eei.unierlangen.de/winterakadem ie/2008/courses/course3_ material/futureMemory/Mikolajick_TheFutureofNV M.pdf   BAE System s North Am erica, [Data Sheet Microcircuit, CMOS, 3.3V, NVRAM 8406746, April 28, 2008, Rev A 1  N Ha dda d a n d T Scot t  A da pt i n g C o m m erci al  Electronics to the Natura lly Occurring Radiation Environment," in IEEE Nuclear and Space Radiation Effects Conference Short Course Tucson, 1994, pp iv-14 1  D. R  R o t h a n d et _al S EU a n d TI D Test i n g of t h e Samsung 128 Mbit and the Toshiba 256 Mbit flash memory," in Radiation Effects Data Workshop  Reno, 2000 1  F. I r o m and D N guy e n  S i n gl e E v ent  Ef fe ct  Characterization of High Density Commercial NAND and NOR Nonvolatile Flash Memories Honolulu, 2007 1  C Ha fer M  L a hey a n d et _al R adi a t i o n H a rd ness  Characterization of a 130nm Technology," in Proceedings IEEE Nuclea r and Space Radiation Effects Conference Honolulu, 2007 17  T. R O l dh am J. Fr iend lich  an d et_ a l, "TID  an d SEE Response of an Advanced Samsung 4Gb NAND Flash Memory," , Honolulu, 2007  R. C. Lac o e C MOS Scaling, Desi gn Princi ples a n d Hardening-by-Design Methodologies," in Nuclear and Space Radiation Effects Conference Short Course Notebook Monterey, 1993, pp. II-1 thru II142 1 J. Pat t e rs o n a n d S  Gue rt i n   E m e rgi ng S E F I M o des and SEE Testing for Highly-Scaled NAND FLASH Devices," in Proceedings 2005 Non-Volatile Memory Technology Symposium vol. CD-ROM, Dallas, TX 2005, pp. G-3, Session G ; Paper 3 2 J. Ta usc h  S. T y son a n d T F a i rba nks  Mulitgenerational Radiation Response Trends in SONOSb ased NROM Flash Memories with Neutron Latch-up Mitigation," in Honolulu Radaition Effects Data Workshop, NSREC, 2007, pp. 189-193 2 M Janai  B Ei t a n A Sha p pi r I B l o o m and G  Cohen, "Data Retention Reliability Model of NROM Nonvolatile Memory Products IEEE Transactions on Device and Materials Reliability vol. 4, no. 3, pp 404-415, September 2004 2 D N g uy en a n d F I r o m Tot al Io ni zi n g  Do se \(T ID  Tests on Non-Volatile Memories: Flash and MRAM," in 2007 IEEE Radiation Effects Workshop  vol. 0, Honolulu, 2007, pp. 194-198  G. Noree n  a n d et_al L ow Cost Deep Space Hybrid Optical/RF Communications Architecture," , Big Sky, Montana, 2009, Pre-print 2 T. Sasa da a n d S. I c hi kawa  A p p l i cat i o n o f  Sol i d  State Recorders to Spacecraft," in Proceedings, 54th International Astronautical Cogress Bremen, 2003 2 H Ka nek o  E rr or C o nt r o l C odi ng f o r  Semiconductor Memory Systems in the Space Radiation Environment," in Proceedings, 20th IEEE International Symposium in Defect and Fault Tolerance in VLSI Systems, DFT2005 Monterey 2005 2 T. Sasa da a n d H Ka nek o  D evel o p m e nt an d Evaluation of Test Circuit for Spotty Byte Error Control Codes," in Proceedings, 57th International 


 18  Astronautical Congress Valencia, 2006 27  Bu reau  In tern atio n a l d e s Po ids et Mesures. \(2 008  August\SI Base Units. [On http://www.bipm.org/en/si/base_units   B IOGRAPHY  Author, Karl Strauss, has been employed by the Jet Propulsion Laboratory for over 22 years.  He has been in the Avionics Section from day One.  He is considered JPL\222s memory technology expert with projects ranging from hand-woven core memory \(for another employer\o high capacity solid state designs.  He managed the development of NASA\222s first Solid State Recorder, a DRAM-based 2 Gb design currently in use by the Cassini mission to Satu rn and the Chandra X-Ray observatory in Earth Orbit.  Karl was the founder, and seven-time chair of the IEEE NonVolatile Memory Technology Symposium, NVMTS, deciding that the various symposia conducted until then were too focused on one technology.  Karl is a Senior IEEE member and is active in the Nuclear and Plasma Scie nce Society, the Electron Device Society and the Aerospace Electronic Systems Society Karl is also an active member of SAE Karl thanks his wonderful wife of 28 years, Janet, for raising a spectacular family: three sons, Justin, Jeremy Jonathan.  Karl\222s passion is trains and is developing a model railroad based upon a four-day rail journey across Australia\222s Northern Outback   


 19 Bollobás, B. 2001. Random Graphs. Cambridge University Press; 2nd edition. 500pp  Cawley, G. C., B. L. C. Talbot, G. J. Janacek, and M. W Peck. 2006. Sparse Bayesian Ke rnel Survival Analysis for Modeling the Growth Domain of Microbial Pathogens  Chiang C. L. 1960. A stochastic study of life tables and its applications: I. Probability distribution of the biometric functions. Biometrics, 16:618-635  Cox,  D. R. 1972. Regression models and life tables J. R Stat. Soc. Ser. B 34:184-220  Cox, D. R. 1975.   Partial likelihood Biometrika 62:269276  Cox, D. R. & D. Oakes. 1984 Analysis of Survival Data  Chapman & Hall. London  Cressie, N. A. 1993 Statistics for Spatial Data John Wiley Sons. 900pp  Duchesne, T. 2005. Regression models for reliability given the usage accumulation history. In "Modern Statistical and Mathematical Methods in Reliability". Edited by A. Wilson N. Limnios, S. Kelly-McNulty Y. Armijo. pp.29-40. World Scientific, New Jersey  Eleuteri, A., R. Tagliaferri, L. Milano, G. Sansone, D D'Agostino, S. De Placido,  M. Laurentiis. 2003.  Survival analysis and neural networks. Proceedings of the International Joint Conference on Neural Networks, Vol. 4 20-24 July 2003 Page\(s\:2631 - 2636  Ellison, E., L. Linger, and M Longstaff. 1997.  Survivable Network Systems: An Emerging Discipline, Carnegie Mellon, SEI, Technical Report CMU/SEI-97-TR-013, 1997  Fleming, T. R. & D. P. Harrington. 1991. Counting process and survival analysis. John Wiley & Sons. 429pp  Graver, J. and M. Sobel 2005. You may rely on the Reliability Polynomial for much more than you might think Communications in Statistics: Theory and Methods  34\(6\1411-1422  Graves, T. and M. Hamada. 2005. Bayesian methods for assessing system reliability: models and computation. In Modern Statistical and Mathematical Methods in Reliability". Edited by A. Wilson, et al. pp.41-53  Grimmett, G. 2006 The Random-Cluster Model Springer  Grimmett, G. 1999 Percolation Springer  Hougaard, P. 2000. Analysis of Multivariate Survival Data Springer. 560pp  Ibrahim, J. G., M. H. Chen and D. Sinha. 2005. Bayesian Survival Analysis.  Springer. 481pp  Jin Z. 2005. Non-proportional semi-parametric regression models for censored data. In "Modern Statistical and Mathematical Methods in Reliability". Edited by A. Wilson N. Limnios, S. Kelly-McNulty, Y. Armijo. pp.279-292 World Scientific  Kalbfleisch, J. D. & R. L. Prentice. 1980 The Statistical Analysis of Failure Time Data John Wiley & Sons.  New York. 1980  Kalbfleisch, J. D. &  R. L. Prentice, 2002. The Statistical Analysis of Failure Time Data.  Wiley-InterScience, 2nd ed 462pp  Lisboa, P. J. G. and H. Wong. 2001. Are neural networks best used to help logistic regression? Proceedings of International Joint Conference on Neural Networks, IJCNN 01. Volume 4, 15-19,  July 2001. Page\(s\:2472 - 2477 vol.4  Kauffman, R. J. and B. Wang. 2002. Duration in the Digital Economy. Proceedings of th e 36th Hawaii International Conference on System Sciences \(HICSS’03\ Jan 2003  Kaplan, E. L. & P.  Meier.  1958.  Nonparametric estimation from incomplete observations J. Amer. Statist. Assoc  53:457-481  Klein, J. P. and P. K. Goel 1992. Survival Analysis: State of the Art.  Kluwer Academic Publishes. 450pp  Klein, J. P. and  M. L Moeschberger. 20 03. Survival analysis techniques for ce nsored and truncated data Springer  Krings, A. and Z. S. Ma. 2006.  "Fault-Models in Wireless Communication: Towards Survivable Ad Hoc Networks MILCOM 2006, Military Communications Conference, 2325 October, 7 pages, 2006  Krings, A. W. 2008.  Survivable Systems.  in Information Assurance: Dependability and Security in Networked Systems Yi Qian, James Joshi, David Tipper, and Prashant Krishnamurthy, Morgan Kaufmann Publishers. \(in press  Lawless, J. F. 1982. Statistical models and methods for lifetime data.  John Wiley & Sons. 579pp  Lawless, J. F. 2003. Statistical models and methods for lifetime data.  John Wiley & Sons. 2nd ed. 630pp  Li, M. and P. Vitanyi. 1997. Introduction to  Kolmogorov Complexity and Its Applications. 2nd ed, Springer  Ma, Z. S. 1997.  Survival analysis and demography of Russian wheat aphid populations.  Ph.D dissertation, 307pp University of Idaho Moscow, Idaho, USA 


 20 Ma, Z. S., and E. J. Bechinski. 2008.  Developmental and Phenological Modeling of Russian Wheat Aphid Annals of Entomological Soc. Am In press  Ma, Z. S. and A. W. Krings. 2008a. The Competing Risks Analysis Approach to Reliability Survivability, and Prognostics and Health Management.  The 2008 IEEEAIAA AeroSpace Conference. BigSky, Montana, March 18, 2008. \(In Press, in the same volume  Ma, Z. S. and A. W. Krings 2008b. Multivariate Survival Analysis \(I\e Shared Frailty Approaches to Reliability and Dependence Modeling. The 2008 IEEE-AIAA AeroSpace Conference. BigSky Montana, March 1-8, 2008 In Press, in the same volume  Ma, Z. S. and A. W. Krings. 2008c. Multivariate Survival Analysis \(II\ Multi-State Models in Biomedicine and Engineering Reliability. 2008 IEEE International Conference on Biomedical Engineering and Informatics BMEI 2008\27th-30th, 2008 Accepted   Mani, R., J. Drew, A. Betz, P. Datta. 1999. Statistics and Data Mining Techniques for Lifetime Value Modeling ACM Conf. on Knowledge Discovery and Data Mining  Mazzuchi, T. A., R Soyer., and R. V Spring. 1989. The proportional hazards model in reliability. IEEE Proceedings of Annual Reliability and Maintainability Symposium pp.252-256  Meeker, W. Q. and L. A. Escobar. 1998. Statistical Methods for Reliability Data. Wiley-Interscience  Munson, J. C. 2003. Software Engineering Measurement Auerbach Publications  Nelson, W. 1969. Hazard plotting for incomplete failure data J. Qual. Tech 1:27-52  Nakagawa, T. 2006.  Shock and Damage Models in Reliability Theory. Springer  Osborn, B. 2005. Leveraging remote diagnostics data for predictive maintenance.   In "Modern Statistical and Mathematical Methods in Reliability". Edited by A. Wilson N. Limnios, S. Kelly-McNulty, Y. Armijo. pp. 353-363  Pena, E. A. and E. H. Slate. 2005. Dynamic modeling in reliability and survival analysis. In "Modern Statistical and Mathematical Methods in Reliability". Edited by A. Wilson N. Limnios, S. Kelly-McNulty, Y. Armijo. pp.55-71  Reineke, D. M., E. A. Pohl, and W. P. Murdock. 1998 Survival analysis and maintenance policies for a series system, with highly censore d data.  1998 Proceedings Annual Reliability and Maintainability Symposium. pp 182-188  Schabenberger, O. and C. A. Gotway. 2005. Statistical Methods for Spatial Data Analysis.  Chapman & Hall/CRC  Severini, T. A. 2000. Likelihood methods in statistics Oxford University Press  Shooman, M. L. 2002. Reliability of Computer Systems and Networks: Fault Tolerance, Analysis and Design. John Wiley and Sons. 551pp  Stillman, R. H. and M. S. Mack isack, B. Sharp, and C. Lee 1995. Case studies in survival analysis of overhead line components. IEE Conferen ce of the Reliability and Distribution Equipment. March 29-31, 1995. Conference Publication No. 406. pp210-215  Therneau, T. and P. Grambsch. 2000 Modeling Survival Data: Extending the Cox Model Springer  Wilson, A.  N. Limnios, S Kelly-McNulty, Y. Armijo 2005. Modern Statistical and Mathematical Methods in Reliability. World Scientific, New Jersey  Xie, M. 1991. Software Reliability Modeling. World Scientific Press    B IOGRAPHY   Zhanshan \(Sam\ Ma holds a Ph.D. in Entomology and is a Ph.D. candidate in Computer Science at the University of Idaho. He has published approximately 30 journal and 30 conference papers, mainly in the former field.  Prior to his recent return to academia, he worked as senior network/software engineers in software industry.  His current research interests include reliability and survivability of wireless sensor networks, fault tolerance survival analysis, evolutionary game theory, evolutionary computation and bioinformatics  Axel W. Krings is a professor of Computer Science at the University of Idaho.  He received his Ph.D. \(1993\ and M.S 1991\ degrees in Computer Science from the University of Nebraska - Lincoln, and his M.S. \(1982\ in Electrical Engineering from the FH-Aachen, Germany.  Dr. Krings has published extensively in the area of Computer Network Survivability, Security, Fault-Tolerance and Realtime Scheduling. In 2004/2005 he was a visiting professor at the Institut d'Informatique et Mathématiques Appliquées de Grenoble, at the Institut National Polytechnique de Grenoble, France.  His work has been funded by DoE/INL DoT/NIATT, DoD/OST and NIST 


States\nWAb-3.4: NEW RESULTS IN THE ANALYSIS OF DECISION-FEEDBACK 2118\nEQUALIZERS\nAhmed Mehana, Samsung Electronics, Co Ltd., United States; Aria Nosratinia, University of Texas at \nDallas, United States\nWAb-5: TARGET TRACKING II\nWAb-5.1: POSTERIOR DISTRIBUTION PREPROCESSING FOR PASSIVE 2125\nDTV RADAR TRACKING: SIMULATED AND REAL DATA\nEvan Hanusa, Laura Vertatschitsch, David Krout, University of Washington, United States\nWAb-5.2: DEPTH-BASED PASSIVE TRACKING OF SUBMERGED SOURCES  ............................................2130\nIN THE DEEP OCEAN USING A VERTICAL LINE ARRAY\nLisa Zurk, John K. Boyle, Jordan Shibley, Portland State University, United States\nWAb-5.3: GENERALIZED LINEAR MINIMUM MEAN-SQUARE ERROR 2133\nESTIMATION WITH APPLICATION TO SPACE-OBJECT TRACKING\nYu Liu, X. Rong Li, Huimin Chen, University of New Orleans, United States\nWAb-5.4: FEATURE-AIDED INITIATION AND TRACKING VIA TREE SEARCH ..........................................2138\nHossein Roufarshbaf Jill Nelson, George Mason University, United States\nxxxiii\nWAb-6: DIRECTION OF ARRIVAL ESTIMATION\nWAb-6.1: A SELF-CALIBRATION TECHNIQUE FOR DIRECTION 2145\nESTIMATION WITH DIVERSELY POLARIZED ARRAYS\nBenjamin Friedlander, University of California, Santa Cruz, United States\nWAb-6.2: CRAMER-RAO PERFORMANCE BOUNDS FOR SIMULTANEOUS  ..............................................2150\nTARGET AND MULTIPATH POSITIONING\nLi Li, Jeff Krolik, Duke University, United States\nWAb-6.3: COPY CORRELATION DIRECTION-OF-ARRIVAL ESTIMATION  .................................................2155\nPERFORMANCE WITH A STOCHASTIC WEIGHT VECTOR\nChrist Richmond, Keith Forsythe, MIT Lincoln Laboratory, United States; Christopher Flynn, Stevens nInstitute of Technology, United States\nWAb-6.4: LOCATING CLOSELY SPACED COHERENT EMITTERS USING 2160\nTDOA TECHNIQUES\nJack Reale, Air Force Research Laboratory / Binghamton University, United States; Lauren Huie, Air \nForce Research Laboratory, United States Mark Fowler, State University of New York at Binghamton, \nUnited States\nWAb-7: ENERGY- AND RELIABILITY-AWARE DESIGN\nWAb-7.1: LOW-ENERGY ARCHITECTURES FOR SUPPORT VECTOR 2167\nMACHINE COMPUTATION\nManohar Ayinala, Keshab K Parhi, University of Minnesota, United States\nWAb-7.2: TRUNCATED MULTIPLIERS THROUGH POWER-GATING FOR 2172\nDEGRADING PRECISION ARITHMETIC\nPietro Albicocco, Gian Carlo Cardarilli, University of Rome Tor Vergata, Italy; Alberto Nannarelli, \nTechnical University of Denmark Denmark; Massimo Petricca, Politecnico di Torino, Italy; Marco Re, \nUniversity of Rome Tor Vergata Italy\nWAb-7.3: A LOGARITHMIC APPROACH TO ENERGY-EFFICIENT GPU 2177\nARITHMETIC FOR MOBILE DEVICES\nMiguel Lastras Behrooz Parhami, University of California, Santa Barbara, United States\nWAb-7.4: ON SEPARABLE ERROR DETECTION FOR ADDITION ..................................................................2181\nMichael Sullivan, Earl Swartzlander, University of Texas at Austin, United States\nWPb-1: PAPERS PRESENTED IN 2012\nWPb-1.1 DYNAMICALLY RECONFIGURABLE AVC DEBLOCKING FILTER  .............................................2189\nWITH POWER AND PERFORMANCE CONSTRAINTS\nYuebing Jiang, Marios Pattichis, University of New Mexico\nxxxiv\n 


on science teams for numerous planetary missions including Magellan, Mars Observer, Mars Global Surveyor and Rosetta. He was the US Project Scientist for the international Mars NetLander mission, for which he was also principal investigator of the Short-Period Seismometer experiment, and is currently the Project Scientist for the Mars Exploration Rovers. He led the Geophysics and Planetary Geology group at JPL from 1993-2005, and is the JPL Discipline Program Manager for Planetary Geosciences. He has held several visiting appointments at the Institut de Physique du Globe de Paris. He has a BS in physics and a PhD in geophysics from the University of Southern California  David Hansen is a member of the technical staff in the Communications Systems and Operations Group at the Jet Propulsion Laboratory. Current work includes the development of the telecom subsystem for the Juno project. David received a B.S. in Electrical Engineering from Cornell University and an M.S. in Electrical Engineering from Stanford University  Robert Miyake is a member of the technical staff in the Mission and Technology Development Group at the Jet Propulsion Laboratory. Current work includes the development of thermal control subsystems for interplanetary flagship missions to Jupiter and Saturn missions to Mars and the Earth Moon, and is the lead Thermal Chair for the Advanced Project Design Team Robert graduated with a B. S. from San Jose State University, with extensive graduate studies at UCLA University of Washington, and University of Santa Clara  Steve Kondos is a consultant to the Structures and Mechanisms group at the Jet Propulsion Laboratory. He currently is generating the mechanical concepts for small Lunar Landers and Lunar Science Instrument packages in support of various Lunar mission initiatives. He also provides conceptual design, mass and cost estimating support for various Team X studies as the lead for the Mechanical Subsystem Chair. Steve is also involved with various other studies and proposals and provides mentoring to several young mechanical and system engineers. He graduated with a B.S. in Mechanical Engineering from the University of California, Davis and has 28 years of experience in the aerospace field ranging from detail part design to system of systems architecture development. He has worked both in industry and in government in defense, intelligence commercial and civil activities that range from ocean and land based systems to airborne and space systems. Steve has received various NASA, Air Force, Department of Defense and other agency awards for his work on such projects as the NASA Solar Array Flight Experiment, Talon Gold, MILSTAR, Iridium, SBIRS, Mars Exploration Rovers ATFLIR, Glory Aerosol Polarimeter System and several Restricted Programs  Paul Timmerman is a senior member of technical staff in the Power Systems Group at the Jet Propulsion Laboratory Twenty-five years of experience in spacecraft design including 22 at JPL, over 250 studies in Team-X, and numerous proposals. Current assignments include a wide variety of planetary mission concepts, covering all targets within the solar system and all mission classes. Paul graduated from Loras College with a B.S. in Chemistry in 1983  Vincent Randolph is a senior engineer in the Advanced Computer Systems and 


the Advanced Computer Systems and Technologies Group at the Jet Propulsion Laboratory. Current work includes generating Command and Data Handling Subsystem conceptual designs for various proposals and Team X.  He also supports Articulation Control and Electronics design activities for the Advanced Mirror Development project. Vincent graduated from the University of California at Berkeley with a B.S. in Electrical Engineering 18  pre></body></html 


i models into time and covariate dependent dynamic counterparts  ii models and reliability analysis in a more realistic manner  iii level  whether or not functional components \(loyal generals diagnose correctly and take proper actions such as fault mask of failed components \(traitors asymmetric  iv survivability analysis. Evolutionary game modeling can derive sustainable or survivable strategies \(mapped from the ESS in EGT such as node failures such as security compromise level modeling in the so-called three-layer survivability analysis developed in Ma \(2008a this article  v offer an integrated architecture that unite reliability survivability, and fault tolerance, and the modeling approaches with survival analysis and evolutionary game theory implement this architecture. Finally, the dynamic hybrid fault models, when utilized to describe the survival of players in EGT, enhance the EGT's flexibility and power in modeling the survival and behaviors of the game players which should also be applicable to other problem domains where EGT is applicable  5. OPERATIONAL LEVEL MODELING AND DECISION-MAKING  5.1. Highlights of the Tactical and Strategic Levels  Let's first summarize what are obtainable at both tactical and strategic levels. The results at both tactical and strategic levels are precisely obtainable either via analytic or simulation optimization. With the term precisely, we mean that there is no need to assign subjective probabilities to UUUR events. This is possible because we try to assess the consequences of UUUR events \(tactical level ESS strategies \(strategic level time prediction of survivability. The following is a list of specific points. I use an assumed Wireless Sensor Network WSN  i of UUUR events: \(a actions which can be treated as censored events; \(b Cont' of Box 4.2 It can be shown that the replicator differential equations are equivalent to the classical population dynamics models such as Logistic differential equation and LotkaVolterra equation \(e.g., Kot 2001 Logistic equation, or the limited per capital growth rate is similar to the change rate of the fitness  xfxfi which can be represented with the hazard function or survivor functions introduced in the previous section on survival analysis.  This essentially connects the previous survival analysis modeling for lifetime and reliability with the EGT modeling. However, EGT provides additional modeling power beyond population dynamics or survival analysis approaches introduced in the previous section. The introduction of evolutionary theory makes the games played by a population evolvable. In other words, each player \(individual 


other words, each player \(individual agent and players interact with each other to evolve an optimized system Box 4.3. Additional Comments on DHF Models  The above introduced EGT models are very general given they are the system of ordinary differential equations. Furthermore, the choice of fitness function f\(x complexity to the differential equation system.  The system can easily be turned into system of nonlinear differential equations. The analytical solution to the models may be unobtainable when nonlinear differential equations are involved and simulation and/or numerical computation are often required  In the EGT modeling, Byzantine generals are the game players, and hybrid fault models are conveniently expressed as the strategies of players; the players may have different failure or communication behaviors Furthermore, players can be further divided into groups or subpopulations to formulate more complex network organizations. In the EGT modeling, reliability can be represented as the payoff \(fitness, the native term in EGT of the game. Because reliability function can be replaced by survivor function, survival analysis is seamlessly integrated into the EGT modeling. That is, let Byzantine generals play evolutionary games and their fitness reliability function  The evolutionary stable strategy \(ESS counterpart of Nash equilibrium in traditional games ESS corresponds to sustainable strategies, which are resistant to both internal mutations \(such as turning into treason generals or nodes such as security compromises represent survivable strategies and survivability in survivability analysis. Therefore, dynamic hybrid fault models, after the extension with EGT modeling, can be used to study both reliability and survivability 13 risks such as competing risks which can be described with CRA; \(c captured with the shard frailty.  We believe that these UUUR events are sufficiently general to capture the major factors/events in reliability, security and survivability whose occurrence probabilities are hard or impossible to obtain  Instead of trying to obtain the probabilities for these events which are infeasible in most occasions, we focus on analyzing the consequences of the events.  With survival analysis, it is possible to analyze the effects of these types of events on survivor functions. In addition, spatial frailty modeling can be utilized to capture the heterogeneity of risks in space, or the spatial distribution of risks \(Ma 2008a d UUUR events introduced previously. These approaches and models that deal with the effects of UUUR events form the core of tactical level modeling  To take advantage of the tactical level modeling approaches it is obviously necessary to stick to the survivor functions or hazard functions models. In other words, survival analysis can deal with UUUR events and offer every features reliability function provides, but reliability function cannot deal with UUUR events although survivor function and reliability function have the exactly same mathematical definition. This is the junction that survival analysis plays critical role in survivability analysis at tactical level. However, we 


recognize that it is infeasible to get a simple metric for survivability similar to reliability with tactical level modeling alone. Actually, up to this point, we are still vague for the measurement of survivability or a metric for survivability. We have not answered the question: what is our metric for survivability? We think that a precise or rigorous definition of survivability at tactical level is not feasible, due to the same reason we cited previously  the inability to determine the probabilities of UUUR events However, we consider it is very helpful to define a work definition for survivability at the tactical level  We therefore define the survivability at tactical level as a metric, Su\(t t function or reliability function with UUUR events considered. In the framework of three-layer survivability analysis, this metric is what we mean with the term survivability. The "metric" per se is not the focus of the three-layer survivability analysis. It is not very informative without the supports from the next two levels  strategic and operational models.  However, it is obvious that this metric sets a foundation to incorporate UUUR effects in the modeling at the next two levels  Due to the inadequacy of tactical level modeling, we proposed the next level approach  strategic level modeling for survivability. As expected, the tactical level is one foundation of strategic level modeling ii objectives: \(a affect survivability which survival analysis alone is not adequate to deal with; \(b survivability at tactical level is necessary but not sufficient for modeling survivability, we need to define what is meant with the term survivability at strategic level  With regard to \(a behaviors or modes which have very different consequences. These failure behaviors can be captured with hybrid fault models. However, the existing hybrid fault models in fault tolerance field are not adequate for applying to survivability analysis. There are two issues involved: one is the lack of real time notion in the constraints for hybrid fault models \(e.g., N&gt;3m+1 for Byzantine Generals problem synthesize the models after the real-time notions are introduced. The solution we proposed for the first issue is the dynamic hybrid fault models, which integrate survivor functions with traditional hybrid fault models. The solution we proposed for the second issue is the introduction of EGT modeling  With regard to \(b modeling our problem at strategic level, EGT modeling is essentially a powerful optimization algorithm.  One of the most important results from EGT modeling is the so-called evolutionary stable strategies \(ESS We map the ESS in EGT to survivable strategies in survivability analysis.   Therefore, at the strategic level, our work definition for survivability refers to the survivable strategies or sustainable strategies in the native term of EGT, which can be quantified with ESS  In addition to integrating dynamic hybrid fault models another advantage for introducing EGT modeling at strategic level is the flexibility for incorporating other node behaviors \(such as cooperative vs. non-cooperative those behaviors specified in standard hybrid fault models, as well as anthropocentric factors such as costs constraints  Without UUUR events, both tactical and strategic level 


Without UUUR events, both tactical and strategic level models default to regular reliability models. This implies that, in the absence of UUUR events, reliable strategies are sustainable or survivable.  This also implies that three-layer survivability analysis defaults to reliability analysis however, the three-layer approach does offer some significant advantages over traditional reliability analysis, as discussed in previous sections. Nevertheless, when UUUR events exist, reliable strategies and survivable strategies are different. This necessitates the next operational level modeling  5.2. Operational Level Modeling and Decision-Making  When UUUR events are involved, we cannot make real time predictions of survivability at tactical and strategic levels This implies that the implementations of survivable 14 strategies need additional measures that we develop in this section.  Box 5.1 explains the ideas involved with possibly the simplest example  Figure 4 is a diagram showing a simplified relationship between action threshold survivability \(TS survivability \(ES view since both TS and ES are multidimensional and dynamic in practice. Therefore, the sole purpose of the diagram is to illustrate the major concepts discussed above The blue curve is the survivability when survivable strategies specified by ESS are implemented at some point before time s.  The system is then guaranteed to hold survivability above ES. In contrary, if no ESS implemented before time s, then the system quickly falls below to the survivable level at around 40 time units  T i m e 0 1 0 2 0 3 0 4 0 5 0 6 0 7 0 8 0 9 0 1 0 0 Su rv iv ab ili ty M et ric S u t 0 . 0 0 . 1 0 . 2 0 . 3 0 . 4 0 . 5 0 . 6 0 . 7 0 . 8 0 . 9 1 . 0 E S S  i s  I m p lm e n t e d N o  E S S  is  I m p lm e n t e d ts E S T S  Figure 4. A Diagram Showing the Relationship Between TS and ES, as well as timing of s and t, with s &lt; t  6. SUMMARY  The previous sections discussed the major building blocks 


The previous sections discussed the major building blocks for the new life-system inspired PHM architecture. This section first identifies a few minor aspects that have not been discussed explicitly but are necessary for the implementation of the architecture, and then we summarize the major building blocks in a diagram  6.1. Missing Components and Links  Optimization Objectives  Lifetime, reliability, fault tolerance, and survivability, especially the latter two, are application dependent. Generally, the optimization of reliability and survivability are consistent; in that maximization of reliability also implies maximization of survivability. However, when application detail is considered, optimization of lifetime is not necessarily consistent with the optimization of reliability. Consider the case of the monitoring sensor network as an example. The network reliability is also dependent on connectivity coverage, etc, besides network lifetime. What may be further complicated is the time factor. All of the network metrics are time-dependent. A paradoxical situation between lifetime and reliability could be that nodes never 'sleep                                                   


          Box 5.1 Operational Level Modeling  Assuming that the ESS solution for a monitoring sensor network can be expressed with the following simple algebraic conditions: survivability metric at tactical level SU = 0.7, Router-Nodes in the WSN &gt; 10%, Selfish Nodes &lt; 40%. Even with this extremely simplified scenario, the ESS strategies cannot be implemented because we do not know when the actions should be taken to warrant a sustainable system.  These conditions lack a correlation with real time  The inability to implement ESS is rooted in our inability to assign definite probabilities to UUUR events, which implies that we cannot predict when something sufficiently bad will jeopardize the system survivability What we need at the operational level is a scheme to ensure ESS strategy is in place in advance  The fundamental idea we use to implement the ESS strategy is to hedge against the UUUR events. The similar idea has been used in financial engineering and also in integrated pest management in entomology. This can be implemented with the following scheme  Let us define a pair of survivability metrics: one is the expected survivability \(ES threshold survivability or simply threshold survivability \(TS ES is equivalent to the survivability metric at tactical level. ES corresponds to ESS at strategic level, but they are not equivalent since ESS is strategy and ES is survivability. TS is the survivability metric value \(at tactical level and TS can be obtained from strategic level models. For example, TS = SU\(s t condition for the implementation of ESS. In other words, the implementation of strategies that ensures TS at time s will guarantee the future ES level at time t.  To make the implementation more reliable and convenient multiple dynamic TSs can be computed at time s1, s2 sk, with si &lt; t for all i.  These TS at times s1, s2, ..., sk should be monitored by some evaluation systems  Unlike tactical and strategic levels, the operational level modeling is approximate. The term "approximate means that we cannot predict the real time survivability or we do not know the exact time an action should be taken. Instead, the action is triggered when the monitored survivability metric SU\(r survivability \(TS scheme of TS and ES, we ensure the ES by taking preventative actions \(prescribed by ESS and triggered by the TS consequences of UUUR events  Figure 4 is a diagram showing the above concepts and the decision-making process involved 15 This wakefulness \(never 'sleep short period but at the expense of network lifetime. Of course, when the network is running out of lifetime, network reliability ultimately crashes. This example reminds us that 


reliability ultimately crashes. This example reminds us that multi-objective optimization should be the norm rather than exception  Constraints and Extensions  Many application specific factors and constraints are ignored in this article. For example, we mentioned about spatial heterogeneity of environment, but never present a mathematical description The spatial heterogeneity can be modeled with the so-called spatial frailty in multivariate survival analysis \(Ma 2008a  Evolutionary Algorithm  Evolutionary game modeling when implemented in simulation, can be conveniently implemented with an algorithm similar to Genetic Algorithms \(GA ESS in the evolutionary game model with simulation is very similar to GA. Dynamic populations, in which population size varies from generation to generation \(Ma &amp; Krings 2008f of node failures. Another issue to be addressed is the synchronous vs. asynchronous updating when topology is considered in the simulation. This update scheme can have profound influences on the results of the simulation. Results from cellular automata computing should be very useful for getting insights on the update issue  6.2. Summary and Perspective  To recapture the major points of the article, let us revisit Figure 3, which summarizes the principal modules of the proposed life-system inspired PHM architecture. The main inspiration from life systems is the notion of individuals and their assemblage, the population. Population is an emergent entity at the next level and it has emergent properties which we are often more concerned with. Survival analysis, which has become a de facto standard in biomedicine, is particularly suitable for modeling population, although it is equally appropriate at individual level. Therefore, survival analysis \(including competing risks analysis and multivariate survival analysis comprehensively in the context of PHM in a series of four papers presented at IEEE AeroSpace 2008 \(Ma &amp; Krings 2008a, b, c, &amp; d proposed architecture. Survival analysis constitutes the major mathematical tools for analyzing lifetime and reliability, and also forms the tactical level of the three-layer survivability analysis  Besides lifetime and reliability, two other major modules in Figure 3 are fault tolerance and survivability. To integrate fault tolerance into the PHM system, Dynamic Hybrid Fault DHF 2008e, Ma 2008a make real-time prediction of reliability more realistic and make real-time prediction of fault tolerance level possible DHF models also unite lifetime, reliability and fault tolerance under a unified modeling framework that consists of survival analysis and evolutionary game theory modeling  DHG models also form the partial foundation, or strategic level, for the three-layer survivability analysis. At the strategic level, the Evolutionary Stable Strategies \(ESS which is mapped to survivable or sustainable strategies, can be obtained from the evolutionary game theory based DHF models. When there is not any UUUR event involved reliability and survivability are consistent, and reliable strategies are survivable. In this case, the strategic level modeling up to this point is sufficient for the whole PHM system modeling, and there is no need for the next level  operational level modeling  When there are UUUR events in a PHM system, the 


When there are UUUR events in a PHM system, the inability to determine the occurrence probabilities of UUUR events makes the operational level modeling necessary Then the principle of hedging must be utilized to deal with the "hanging" uncertainty from UUUR events. In this case reliability strategies are not necessarily survivable strategies At the operational level modeling, a duo of survivability metrics, expected survivability \(ES survivability \(TS the survivable strategies \(ESS level are promptly implemented based on the decisionmaking rules specified with the duo of survivability metrics then the PHM system should be able to endure the consequences of potentially catastrophic UUUR events. Of course, to endure such catastrophic events, the cost may be prohibitively high, but the PHM system will, at least, warn decision-makers for the potentially huge costs.  It might be cheap to just let it fail  Figure 3 also shows several other modules, such as security safety, application systems \(such as Automatic Logistics CBM+, RCM, Life cycle cost management, Real-time warning and alert systems architectures, but we do not discuss in this paper. Generally the new architecture should be fully compatible with existing ones in incorporating these additional modules. One point we stressed is that PHM system can be an ideal place to enforce security policies. Enforcing security policies can be mandatory for PHM systems that demand high security and safety such as weapon systems or nuclear plant facilities.  This is because maintenance, even without human-initiated security breaches, can break the security policies if the maintenance is not planned and performed properly  In perspective, although I did not discuss software issues in this paper, the introduced approaches and models should provide sufficient tools for modeling software reliability and survivability with some additional extension. Given the critical importance of software to modern PHM systems, we present the following discussion on the potential extension to software domain. Specifically, two points should be noted: \(1 architecture to software should be a metric which can 16 replace the time notion in software reliability; I suggest that the Kolmogorov complexity \(e.g., Li and Vitanyi 1997 be a promising candidate \(Ma 2008a change is because software does not wear and calendar time for software reliability usually does not make much sense 2 software reliability modeling.  Extending to general survivability analysis is not a problem either. In this article I implicitly assume that reliability and survivability are positively correlated, or reliability is the foundation of survivability. This positive correlation does not have to be the case. A simplified example that illustrates this point is the 'limit order' in online stock trading, in which limit order can be used in either direction: that stock price is rising or falling.  The solution to allow negative or uncorrelated relationships between reliability and survivability are very straightforward, and the solutions are already identified in previous discussions. Specifically, multiple G-functions and multi-stage G-functions by Vincent and Brown \(2005 very feasible solution, because lifetime, reliability and survivability may simply be represented with multiple Gfunctions. Another potential solution is the accommodation of the potential conflicts between reliability and survivability with multi-objective GA algorithms, which I previously suggested to be used as updating algorithms in the optimization of evolutionary games  


 The integration of dynamic hybrid fault models with evolutionary game modeling allows one to incorporate more realistic and detailed failure \(or survival individual players in an evolutionary game. This is because dynamic hybrid fault models are supported by survival analysis modeling, e.g., time and covariate dependent hazard or survivor functions for individual players. If necessary, more complex survival analysis modeling including competing risks analysis and multivariate survival analysis, can be introduced.  Therefore, any field to which evolutionary game theory is applicable may benefit from the increased flexibility in modeling individual players.  Two particularly interesting fields are system biology and ecological modeling.  In the former field, dynamic hybrid fault models may find important applications in the study of biological networks \(such as gene, molecular, and cell networks 2008g conjecture that explains the redundancy in the universal genetic code with Byzantine general algorithm. In addition they conducted a comparative analysis of bio-robustness with engineering fault tolerance, for example, the strong similarity between network survivability and ecological stability \(Ma &amp; Krings 2008g survivability analysis can be applied for the study of survivals or extinctions of biological species under global climate changes \(Ma 2008b  In this paper, I have to ignore much of the details related to the implementation issues to present the overall architecture and major approaches clearly and concisely. To deal with the potential devils in the implementation details, a well funded research and development team is necessary to take advantages of the ideas presented here. On the positive side I do see the great potential to build an enterprise PHM software product if there is sufficient resource to complete the implementation. Given the enormous complexity associated with the PHM practice in modern engineering fields, it is nearly impossible to realize or even demonstrate the benefits of the architecture without the software implementation. The critical importance of PHM to mission critical engineering fields such as aerospace engineering, in turn, dictates the great value of such kind software product  6.3. Beyond PHM  Finally, I would like to raise two questions that may be interested in by researchers and engineers beyond PHM community. The first question is: what can PHM offer to other engineering disciplines? The second question is: what kinds of engineering fields benefit most from PHM? Here, I use the term PHM with the definition proposed by IEEE which is quoted in the introduction section of the paper  As to the first question, I suggest software engineering and survivability analysis are two fields where PHM can play significant roles. With software engineering, I refer to applying PHM principles and approaches for dealing with software reliability, quality assurance, and even software process management, rather than building PHM software mentioned in the previous subsection. For survivability analysis, borrowing the procedures and practices of PHM should be particularly helpful for expanding its role beyond its originating domain \(network systems that control critical national infrastructures is a strong advocate for the expansion of survivability analysis to PHM. Therefore, the interaction between PHM and survivability analysis should be bidirectional. Indeed, I see the close relationships between PHM, software engineering, and survivability as well-justified because they all share some critical issues including reliability survivability, security, and dependability  


 The answer to the second question is much more elusive and I cannot present a full answer without comparative analysis of several engineering fields where PHM has been actively practiced. Of course, it is obvious that fields which demand mission critical reliability and dependability also demand better PHM solutions. One additional observation I would like to make is that PHM seems to play more crucial roles for engineering practices that depend on the systematic records of 'historical' data, such as reliability data in airplane engine manufacturing, rather than on the information from ad hoc events.  This may explain the critical importance of PHM in aerospace engineering particularly in commercial airplane design and manufacturing.  For example, comparing the tasks to design and build a space shuttle vs. to design and manufacture commercial jumbo jets, PHM should be more critical in the latter task  17    Figure 2. States of a monitoring sensor node and its failure modes \(after Ma &amp; Krings 2008e     Figure 3. Core Modules and their Relationships of the Life System Inspired PHM Architecture    REFERENCES  Adamides, E. D., Y. A. Stamboulis, A. G. Varelis. 2004 Model-Based Assessment of Military Aircraft Engine Maintenance Systems Model-Based Assessment of Military Aircraft Engine Maintenance Systems. Journal of the Operational Research Society, Vol. 55, No. 9:957-967  Anderson, R. 2001. Security Engineering. Wiley  Anderson, R. 2008. Security Engineering. 2nd ed. Wiley  Bird, J. W., Hess, A. 2007.   Propulsion System Prognostics R&amp;D Through the Technical Cooperation Program Aerospace Conference, 2007 IEEE, 3-10 March 2007, 8pp  Bock, J. R., Brotherton, T., W., Gass, D. 2005. Ontogenetic reasoning system for autonomic logistics. Aerospace Conference, 2005 IEEE 5-12 March 2005.Digital Object Identifier 10.1109/AERO.2005.1559677  Brotherton, T., P. Grabill, D. Wroblewski, R. Friend, B Sotomayer, and J. Berry. 2002. A Testbed for Data Fusion for Engine Diagnostics and Prognostics. Proceedings of the 2002 IEEE Aerospace Conference  Brotherton, T.; Grabill, P.; Friend, R.; Sotomayer, B.; Berry J. 2003. A testbed for data fusion for helicopter diagnostics and prognostics. Aerospace Conference, 2003. Proceedings 2003 IEEE  Brown, E. R., N. N. McCollom, E-E. Moore, A. Hess. 2007 Prognostics and Health Management A Data-Driven Approach to Supporting the F-35 Lightning II. 2007 IEEE AeroSpace Conference  Byington, C.S.; Watson, M.J.; Bharadwaj, S.P. 2008 Automated Health Management for Gas Turbine Engine Accessory System Components. Aerospace Conference 2008 IEEE, DOI:10.1109/AERO.2008.4526610 


2008 IEEE, DOI:10.1109/AERO.2008.4526610 Environment Covariates &amp; Spatial Frailty Applications: AL; Life Cycle Mgmt; Real-Time Alerts CBM+, RCM, TLCSM; Secret Sharing and Shared Control 18 Chen, Y. Q., S. Cheng. 2005. Semi-parametric regression analysis of mean residual life with censored survival data Biometrika \(2005  29  Commenges, D. 1999. Multi-state models in Epidemiology Lifetime Data Analysis. 5:315-327  Cook, J. 2004. Contrasting Approaches to the Validation of Helicopter HUMS  A Military User  s Perspective Aerospace Conference, 2004 IEEE  Cook, J. 2007. Reducing Military Helicopter Maintenance Through Prognostics. Aerospace Conference, 2007 IEEE Digital Object Identifier 10.1109/AERO.2007.352830  Cox, D. R. 1972. Regression models and life tables.  J. R Stat. Soc. Ser. B. 34:184-220  Crowder, M. J.  2001. Classical Competing Risks. Chapman amp; Hall. 200pp  David, H. A. &amp; M. L. Moeschberger. 1978. The theory of competing risks. Macmillan Publishing, 103pp  Ellison, E., L. Linger, and M. Longstaff. 1997.  Survivable Network Systems: An Emerging Discipline, Carnegie Mellon, SEI, Technical Report CMU/SEI-97-TR-013  Hanski, I. 1999. Metapopulation Ecology. Oxford University Press  Hallam, T. G. and S. A. Levin. 1986. Mathematical Ecology. Biomathematics. Volume 17. Springer. 457pp  Hess, A., Fila, L. 2002.  The Joint Strike Fighter \(JSF concept: Potential impact on aging aircraft problems Aerospace Conference Proceedings, 2002. IEEE. Digital Object Identifier: 10.1109/AERO.2002.1036144  Hess, A., Calvello, G., T. Dabney. 2004. PHM a Key Enabler for the JSF Autonomic Logistics Support Concept. Aerospace Conference Proceedings, 2004. IEEE  Hofbauer, J. and K. Sigmund. 1998. Evolutionary Games and Population Dynamics. Cambridge University Press 323pp  Hougaard, P. 2000. Analysis of Multivariate Survival Data Springer. 560pp  Huzurbazar, A. V. 2006. Flow-graph model for multi-state time-to-event data. Wiley InterScience  Ibrahim, J. G., M. H. Chen and D. Sinha. 2005. Bayesian Survival Analysis. Springer. 481pp  Kacprzynski, G. J., Roemer, M. J., Hess, A. J. 2002. Health management system design: Development, simulation and cost/benefit optimization. IEEE Aerospace Conference Proceedings, 2002. DOI:10.1109/AERO.2002.1036148  Kalbfleisch, J. D., and R. L. Prentice, 2002. The Statistical Analysis of Failure Time Data. Wiley-InterScience, 2nd ed  Kalgren, P. W., Byington, C. S.   Roemer, M. J.  2006 Defining PHM, A Lexical Evolution of Maintenance and Logistics. Systems Readiness Technology Conference 


Logistics. Systems Readiness Technology Conference IEEE. DOI: 10.1109/AUTEST.2006.283685  Keller, K.; Baldwin, A.; Ofsthun, S.; Swearingen, K.; Vian J.; Wilmering, T.; Williams, Z. 2007. Health Management Engineering Environment and Open Integration Platform Aerospace Conference, 2007 IEEE, Digital Object Identifier 10.1109/AERO.2007.352919  Keller, K.; Sheahan, J.; Roach, J.; Casey, L.; Davis, G Flynn, F.; Perkinson, J.; Prestero, M. 2008. Power Conversion Prognostic Controller Implementation for Aeronautical Motor Drives. Aerospace Conference, 2008 IEEE. DOI:10.1109/AERO.2008.4526630  Klein, J. P. and M. L. Moeschberger. 2003. Survival analysis techniques for censored and truncated data Springer  Kingsland, S. E. 1995. Modeling Nature: Episodes in the History of Population Ecology. 2nd ed., University of Chicago Press, 315pp  Kot, M. 2001. Elements of Mathematical Ecology Cambridge University Press. 453pp  Krings, A. W. and Z. S. Ma. 2006. Fault-Models in Wireless Communication: Towards Survivable Ad Hoc Networks Military Communications Conference, 23-25 October, 7 pages, 2006  Lamport, L., R. Shostak and M. Pease. 1982. The Byzantine Generals Problem. ACM Transactions on Programming Languages and Systems, 4\(3  Lawless, J. F. 2003. Statistical models and methods for lifetime data. John Wiley &amp; Sons. 2nd ed  Line, J. K., Iyer, A. 2007. Electronic Prognostics Through Advanced Modeling Techniques. Aerospace Conference 2007 IEEE. DOI:10.1109/AERO.2007.352906  Lisnianski, A., Levitin, G. 2003. Multi-State System Reliability: Assessment, Optimization and Applications World Scientific  Liu, Y., and K. S. Trivedi. 2006. Survivability Quantification: The Analytical Modeling Approach, Int. J of Performability Engineering, Vol. 2, No 1, pp. 29-44  19 Luchinsky, D.G.; Osipov, V.V.; Smelyanskiy, V.N Timucin, D.A.; Uckun, S. 2008. Model Based IVHM System for the Solid Rocket Booster. Aerospace Conference, 2008 IEEE.DOI:10.1109/AERO.2008.4526644  Lynch, N. 1997. Distributed Algorithms. Morgan Kaufmann Press  Ma, Z. S. 1997. Demography and survival analysis of Russian wheat aphid. Ph.D. dissertation, Univ. of Idaho 306pp  Ma, Z. S. 2008a. New Approaches to Reliability and Survivability with Survival Analysis, Dynamic Hybrid Fault Models, and Evolutionary  Game Theory. Ph.D. dissertation Univ. of Idaho. 177pp  Ma, Z. S. 2008b. Survivability Analysis of Biological Species under Global Climate Changes: A New Distributed and Agent-based Simulation Architecture with Survival Analysis and Evolutionary Game Theory. The Sixth 


International Conference on Ecological Informatics. Dec 25, 2008. Cancun, Mexico  Ma, Z. S. and E. J. Bechinski. 2008. A Survival-Analysis based  Simulation Model for Russian Wheat Aphid Population Dynamics. Ecological Modeling, 216\(2 332  Ma, Z. S. and A. W. Krings. 2008a.  Survival Analysis Approach to Reliability Analysis and Prognostics and Health Management \(PHM  AIAA AeroSpace Conference, March 1-8, 2008, Big Sky, MT, 20pp  Ma, Z. S. and A. W. Krings. 2008b. Competing Risks Analysis of Reliability, Survivability, and Prognostics and Health Management \(PHM  AIAA AeroSpace Conference, March 1-8, 2008.  Big Sky, MT. 20pp  Ma, Z. S. and A. W. Krings. 2008c. Multivariate Survival Analysis \(I Dependence Modeling", Proc. IEEE  AIAA AeroSpace Conference, March 1-8, 2008, Big Sky, MT. 21pp  Ma, Z. S. and A. W. Krings., R. E. Hiromoto. 2008d Multivariate Survival Analysis \(II State Models in Biomedicine and Engineering Reliability IEEE International Conference of Biomedical Engineering and Informatics, BMEI 2008.  6 Pages  Ma, Z. S. and A. W. Krings. 2008e. Dynamic Hybrid Fault Models and their Applications to Wireless Sensor Networks WSNs Modeling, Analysis and Simulation of Wireless and Mobile Systems. \(ACM MSWiM 2008 Vancouver, Canada  Ma, Z. S. &amp; A. W. Krings. 2008f. Dynamic Populations in Genetic Algorithms. SIGAPP, the 23rd Annual ACM Symposium on Applied Computing, Ceara, Brazil, March 16-20, 2008. 5 Pages  Ma, Z. S. &amp; A. W. Krings. 2008g. Bio-Robustness and Fault Tolerance: A New Perspective on Reliable, Survivable and Evolvable Network Systems, Proc. IEEE  AIAA AeroSpace Conference, March 1-8, Big Sky, MT, 2008. 20 Pages  Ma, Z. S.  and A. W. Krings. 2009. Insect Sensory Systems Inspired Computing and Communications.  Ad Hoc Networks 7\(4  MacConnell, J.H. 2008. Structural Health Management and Structural Design: An Unbridgeable Gap? 2008 IEEE Aerospace Conference, DOI:10.1109/AERO.2008.4526613  MacConnell, J.H. 2007. ISHM &amp; Design: A review of the benefits of the ideal ISHM system. Aerospace Conference 2007 IEEE. DOI:10.1109/AERO.2007.352834  Marshall A. W., I. Olkin. 1967. A Multivariate Exponential Distribution. Journal of the American Statistical Association, 62\(317 Mar., 1967  Martinussen, T. and T. H. Scheike. 2006. Dynamic Regression Models for Survival Data. Springer. 466pp  Mazzuchi, T. A., R. Soyer., and R. V. Spring. 1989. The proportional hazards model in reliability. IEEE Proceedings of Annual Reliability and Maintainability Symposium pp.252-256  Millar, R.C., Mazzuchi, T.A. &amp; Sarkani, S., 2007. A Survey of Advanced Methods for Analysis and Modeling of 


of Advanced Methods for Analysis and Modeling of Propulsion System", GT2007-27218, ASME Turbo Expo 2007, May 14-17, Montreal, Canada  Millar, Richard C., "Non-parametric Analysis of a Complex Propulsion System Data Base", Ph.D. Dissertation, George Washington University, June 2007  Millar, R. C. 2007. A Systems Engineering Approach to PHM for Military Aircraft Propulsion Systems. Aerospace Conference, 2007 IEEE. DOI:10.1109/AERO.2007.352840  Millar, R. C. 2008.  The Role of Reliability Data Bases in Deploying CBM+, RCM and PHM with TLCSM Aerospace Conference, 2008 IEEE, 1-8 March 2008. Digital Object Identifier: 10.1109/AERO.2008.4526633  Nowak, M. 2006. Evolutionary Dynamics: Exploring the Equations of Life. Harvard University Press. 363pp  Oakes, D. &amp; Dasu, T. 1990. A note on residual life Biometrika 77, 409  10  Pintilie, M. 2006. Competing Risks: A Practical Perspective.  Wiley. 224pp  20 Smith, M. J., C. S. Byington. 2006. Layered Classification for Improved Diagnostic Isolation in Drivetrain Components. 2006 IEEE AeroSpace Conference  Therneau, T. and P. Grambsch. 2000. Modeling Survival Data: Extending the Cox Model. Springer  Vincent, T. L. and J. L. Brown. 2005. Evolutionary Game Theory, Natural Selection and Darwinian Dynamics Cambridge University Press. 382pp  Wang. J., T. Yu, W. Wang. 2008. Research on Prognostic Health Management \(PHM on Flight Data. 2008 Int. Conf. on Condition Monitoring and Diagnosis, Beijing, China, April 21-24, 2008. 5pp  Zhang, S., R. Kang, X. He, and M. G. Pecht. 2008. China  s Efforts in Prognostics and Health Management. IEEE Trans. on Components and Packaging Technologies 31\(2             BIOGRAPHY  Zhanshan \(Sam scientist and earned the terminal degrees in both fields in 1997 and 2008, respectively. He has published more than 60 peer-refereed journal and conference papers, among which approximately 40 are journal papers and more than a third are in computer science.  Prior to his recent return to academia, he worked as senior network/software engineers in semiconductor and software industry. His current research interests include: reliability, dependability and fault tolerance of distributed and software systems behavioral and cognitive ecology inspired pervasive and 


behavioral and cognitive ecology inspired pervasive and resilient computing; evolutionary &amp; rendezvous search games; evolutionary computation &amp; machine learning bioinformatics &amp; ecoinformatics                 pre></body></html 


