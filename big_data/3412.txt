An Optimal Association Rule Mining Algorithm Based on Knowledge Grid   Tao Wen 1, 2 Gang Wang 1 Quan Guo 2 Xuebin Ma 1 1 Software Center, Northeastern University, Dalian, 116023, China 2 Department of Computer Science and Technology Neusoft Institute of Information Dalian, 116023, China E-mail: wanggang7844730@163.com   Abstract  Distributed data mining and in particular gridenabled data mining has become an active area of research and development in recent years. As the amount of available digital electronic data is growing at an unprecedented rate, it is necessary to provide general data mining algorithms that help to leverage grid capacity in supporting high-performance distributed computing for solving their data mining problem in a distributed way. In this paper, an optimal multi-strategy based hybrid distribution  MBHD   algorithm based on knowledge grid is proposed for performance improvement over current grid-based association rule mining algorithms. With the optimization polices based on auction model and timestamp mechanism, MBHD algorithm effectively solves the load imbalance problem in grid environment and decreases the communication overhead. The response time performance of MBHD algorithm with different numbers of hosts and minimum supports is analyzed by experiments. The numerical results show that MBHD is efficient and performs better than count distribution  CD  algorithm, intelligent data distribution  IDD  algorithm and hybrid distribution  HD  algorithm  1. Introduction  In many applications it is necessary to perform the analysis of very large data sets. Due to rapid growth of geographically distributed data collection in recent years, the computation of the frequencies of the occurrence of subsets of items in knowledge discovery process becomes more expensive and time consuming Grid computing has emerged as an important new branch of distributed computing focused on large-scale resource sharing and high-performance orientation. It provides effective computational support for applications such as knowledge discovery  A few research frameworks currently have been presented for deploying distributed data mining applications in grids [2, 3  al l o f w h ic h  a r e g e n e r a l  environments supporting execution of data mining tasks on machines that belong to a Grid. Several projects such as Grid Mine  a n d  T e ra G r i d  5  ha v e  focused on the creation of middleware/systems for data mining and knowledge discovery on top of the Data Grid [6 7 di s c us s e s s o m e a ppr o a c h e s f o r e xpl o i t i n g  grid computing to support distributed data mining by using Grids as decentralized high-performance platforms where to execute data mining tasks and knowledge discovery algorithms and applications. The DataMiningGrid system [8  h a s b een d es i g n ed  t o m eet  the requirements of modern and distributed data mining scenarios. It provides tools and services facilitating the grid-enabling of data mining applications without any intervention on the application side A knowledge grid architecture based on mobile agent has been presented by us in a previous paper  In this paper, we propose a knowledge-grid-based association rule mining algorithm using timestamp strategy and resource allocation optimization mechanism based on auction model that can effectively decrease the communication overhead and achieve a better load-balanced distribution of the candidate itemsets. The remainder of the paper is organized as follows. In Section 2 we introduce auctioning-based resource allocation optimization mechanism in MBDH and in Section 3 timestamp strategy is discussed. To substantiate the theoretical analysis, experiments are performed in Section 4 to evaluate the effectiveness of the proposed algorithm. Finally, a brief conclusion is included in Section 5  2. Optimization mechanism based on auction model  The knowledge grid architecture is defined on top of basic grid toolkits and services. The data mining algorithms based on knowledge grid platform should be designed to adapt the characteristics of grid platform such as distributed, heterogeneous and 
Fifth International Conference on Fuzzy Systems and Knowledge Discovery 978-0-7695-3305-6/08 $25.00 © 2008 IEEE DOI 10.1109/FSKD.2008.95 572 
Fifth International Conference on Fuzzy Systems and Knowledge Discovery 978-0-7695-3305-6/08 $25.00 © 2008 IEEE DOI 10.1109/FSKD.2008.95 572 


dynamic. These characteristics of grid environment make the load balancing issue in grid-based data mining algorithms a key factor to making the best use of available grid resources The market mechanism is very suitable for solving the problem of resource management in the grid context because market theory in economics reflects the supply and demand of resources and provides precise depiction for efficiency of resource allocation 9  I n t h is p a p e r  au c t io n i n g is u s e d to al lo c a te t h e  resources and regulate supply and demand of the available grid resources. The scheduling policy using auction mechanism can enable resource allocation optimization in knowledge grid through distributed resource allocation between grid resource and grid user and balance the workload well for MBHD algorithms We define a general discrete resource allocation problem in terms of the following elements 12     n Rrr r  represents the resources available on the grid  12  m Aaa a  represents the user agents competing for these resources  12  n P pp p  is used to denote the highest current bid price 12  n Qqq q  is used to denote the seller’s reservation price. The auctioneer begins at the resource’s reservation price, and solicits progressively higher oral bids from the user agent until only one bidder is left. The resource will be sold to the highest bidder at the last price offered MBHD algorithm first performs a scan over the entire database of transactions D and computes the counts k N of the candidate itemsets k C then uses resource allocation optimization mechanism based on auction model to allocate the k N candidate itemsets amongst the N grid nodes. The performance of MBHD algorithm is maximized when the equilibrium prices obtained through the optimization of the tasks of computing the counts of itemsets and the grid node resources optimization In the auctioning-based optimization algorithm each partition of candidate itemsets performs the following steps 1\espectively selects budget attitude i   2\ Selects a set of grid nodes/resources R  available for the requested computation task 3\mputes the budget function  i vR which is defined as follows    max 1 min 2 1  ii i vR v l v l    Where max v is the highest budget min v is the lowest budget 1 l refers to the number of elements of resource set R  under max v  2 l stands for the number of elements of resource set R  under min v  4\ Selects a resource j from the set of resources R   the ask price of which is the closest to  i vR  5\ids the ask prices for the resource j that maximizes its surplus, based on the current ask prices 6\ Prices are iteratively changed to accommodate the demands for resources until the total demand equals to the total amount of resources available  3. Timestamp-based optimization strategy  The HD algorithm [10 a d d r es s e s t h e ef f i ci en c y  problem of parallel association rule discovery algorithm by combining the CD and the IDD algorithms. When executing the IDD in HD algorithm the size of the candidate sets s can be described as a function of an independent variable k in the following way   f kkk s f kkk     Where  f k is an incremental function and  f k  is a decreasing function k refers to the number of scanning the database. The amount of the computation performed by each grid node will be smaller under the condition of  kkk k   Where  kk is the threshold value However, the number of the transactions transferred among grid nodes will not be reduced because each grid node needs to scan the entire database of transactions and compute the counts. This caused redundant network traffic This paper first uses timestamp mechanism and linear regression method to estimate the relationship of the amount of computation and network traffic, and then dynamically adjusts the number of resources/grid nodes available in order to avoid redundant network traffic The timestamp mechanism is as follows Each grid node stores 2 N time units which are denoted as the following   c c 1 c 2 c c  iii ij iN ttt t t  1   d d 1 d 2 d d  iii ij iN ttt t t  2 1 iN  1 j N   Where N is the number of all resources/grid nodes c ij t refers to the computation time that grid node i P  scans the portions of the transactions j D and compute the count of candidate sets d ij t represents the delay 
573 
573 


time that is spent on transferring the portions of the transactions j D between 1 i P  and i P  The time vectors c i t and d i t can be computed based on the following parameters s ij t which is the time that grid node 1 i P  transfers the portion of the transactions j D to grid node i P  r ij t which is the time that grid node i P receives the portion of the transactions j D from grid node 1 i P   b ij t which is the time that grid node i P starts to scan the portion of the transactions j D  e ij t which is the time that grid node i P ends to scan the portion of the transactions j D  The total time that N parallel grid nodes scan the portion of the transactions is  cc,1c,2c 1 max    N j jNj j tttt   3 The total time that is spent on transferring the portion of the transactions is  td,1d,2d 1 max    N j jNj j tttt   4 For simplicity, we will assume that there is relatively stable network bandwidth and a better balancing of load throughout the network  In IDD, with the increase in the number of grid nodes t t remains unchanged t  tDv  where v is average network transmission speed D represents whole transactions c t is inversely proportional to N  the total data throughput t D is proportional to N  where t D ND   We use linear regression to estimate the value of scanning time. The target of a linear regression problem is to reconstruct an unknown function  f XY  having a linear behavior in each region i X  YX    5 When only a training set S containing k samples   ii x y 1 2 ik  is available. The output 1 k y   gives an evaluation of  1 k fx  which refers to the value of scanning time for k 1 times As is well known  and  are regression coefficients, which are estimated through the following equations      1 2 1 k ii i k i i x xy y xx       6 yx    7 Where x is the average of 12  k x xx  y is the average of 12  k yy y  If 1 k y  and y satisfy 1 k yy   then the number of grid nodes will be reduced to N  which is obtained by the following equation 1 k yN N y     8 or the number of grid nodes will remain unchanged  4. Experiments  We generated a synthetic dataset using a tool provided by IBM. The parameters for the data set chosen are average transaction length of 15 and average size of frequent item sets of 6. Data sets with 600 transactions \(30KB\ were generated for different grid nodes To compare the scalability of the four schemes \(CD IDD, HD and MBHD\ we performed scaleup tests with above 30K transactions and minimum support of 0.1%. These scaleup results are shown in Fig 1  0 23456 10 20 30 40 50 Number of grid nodes 78                  CD IDD HD MBHD  Figure 1 Sizeup result with 0.1% minimum support   Looking at the performance of the MBHD algorithm, we see that response time remains almost constant as we increase the number of grid nodes while the minimum support fixed. Comparing against CD IDD and HD, we see that MBHD actually performs better as the number of grid nodes increases We also performed experiments in which we successively decreased the minimum support level These experiments for 8 grid nodes are shown in Fig 2. The result shows that MBHD also performs better than CD, IDD and HD  
574 
574 


0.5 0.4 0.3 0.2 0.1 0 50 100 150 200 250  Minimum support      0         CD IDD HD MBHD  Figure 2 Response time on 8 grid nodes as the minimum support varies This performance advantage of HD over CD, IDD and HD is due to the following two reasons. First MBHD used resource allocation optimization mechanism based on auctioning to allocate the candidate itemsets k C amongst the N grid nodes that minimizes load imbalance and second, the reduction operation to obtain the counts in IDD is performed among fewer grid nodes because of the adoption of the timestamp strategy, which decreases the communication overhead  5. Conclusions  In this paper, we propose a grid-based association rule mining algorithm using timestamp strategy and resource allocation optimization mechanism based on auction model that can effectively decrease the communication overhead and solve the load imbalance problem in grid environment. Our experimental results show that the combination of association rule discovery algorithm and grid techniques is efficient and reasonable  Acknowledgements  This paper is supported by a grant from the National Natural Science Foundation of China \(No.60602061\, and a grant from the National High-Tech Research and Development Plan of China \(No.2004AA113020  References  1  V  St a nko v s ki  M  M a y   J   Fr ank e   A  Sc hus t e r   D   McCourt, W. Dubitzky, “A service-centric perspective for data mining in complex problem solving environments Proceedings of the International Conference on Parallel and Distributed Processing Techniques and Applications 2004. pp. 780-787 2 M C a n n a t a ro  A  C o n g i u s t a  C   Ma st ro i a n n i  A   Pugliese, D. Talia, P. Trunfio, “Grid-based data mining and knowledge discovery In: Intelligent Technologies for Information Analysis 2004. pp. 19–45 3  G W a n g T  W e n  Q  Gu o  X. B M a   A k n o wl e d g e  grid architecture based on mobile agent Proceedings of the 2nd International Conference on Semantics Knowledge and Grid 2006. pp. 48-48 4  P  B r e z a n y  J  H o fe r, A   M  T j o a A  W o e h r e r   GridMiner: An infrastructure for data mining on computational grids Proceedings of the APAC Conference and Exhibition on Advanced Computing Grid Applications and eResearch 2003 5 T e r a G r id  h t tp    www te r a g r i d  o r g  a b o u t    6  A  C h er v e nak  I  Fo s t e r  C  K e s s el m a n C  S a l i s bur y  S  Tuecke, “The data grid: towards an architecture for the distributed management and analysis of large scientific datasets Journal of Network and Computer Application 2001, 23\(3\: 187–200 7  D  T a l i a G r i dba s e d d i s t r i bu t e d da t a m i n i ng s y s t em s   algorithms and services Proceedings of the 9th International Conference on High Performance and Distributed Mining 2006 8  V   S t an k ovs k i   M  S w a i n  V  K r a v t s ov T  N i e s s e n D   Weqener, J. Kindermann, W. Dubitzky, “Grid-enabling data mining applications with DataMiningGrid: An architectural perspective Future Generation Computer Systems 2008, 24\(4\: 259-279 9  C  L  L i  L  Y  L i  A di s t r i bu t e d ut i l i t y bas e d t w o l e v e l  market solution for optimal resource scheduling in computational grid Parallel Computing 2005, 31\(34\: 332-351 10  E  Ha n  G K a r y p i s  V Ku m a r   S c a l a b l e p a r a l l e l  algorithms for mining association rules IEEE Transactions on Knowledge and Data Eng 2000, 12\(3 337-352    
575 
575 


4 Itemsets and Decision Trees So far we have discussed how to transmit binary data by using decision trees In this section we present how to selec t the itemsets representing the dependencies implied by the decision trees We will use this link in Section 5 A similar link between itemsets and decision trees is explored in 27 although our setup and goals are different Given a leaf L  the dependency of the item a t is captured in the coding table of L  Hence we are interested in 002nding itemsets that carry the same information That is itemsets from which we can compute the coding table To derive the codes for the leaf L it is suf\002cient to compute the probability q D  a t  1 j L   q D  a t  1  L  q D  L   1 Our goal is to express the probabilities on the right side of the equation using itemsets In order to do that let P be the path from L to its root Let pos  L  be the items along the path P which are tested positive Similarly let neg  L  be the attributes which are tested negative Using the inclusion-exclusion principle we see that q D  L   q D  pos  L   1  neg  L   0  X V 022 neg  L   000 1 j V j f r  pos  L   V   2 We compute q D  a t  1  L  in a similar fashion Let us de\002ne sets  L  for a given leaf L to be sets  L   f V  pos  L  j V 022 neg  L  g  f V  pos  L   f a t g j V 022 neg  L  g  Combining Eqs 1–2 we see that the collection sets  L  satis\002es our goal Proposition 6 The coding table associated with the leaf L can be computed from the frequencies of sets  L   Example 7 Let L 1  L 2  and L 3 be the leaves from left to right of T 4 in Figure 1\(d Then the corresponding families of itemsets are sets  L 1   f a ac g  sets  L 2   f b ab bc abc g  and sets  L 3   f  a b ab c ac bc abc g  We can easily see that the family sets  L  is essentially the smallest family of itemsets from which the coding table can be derived uniquely Proposition 8 Let G 6  sets  L  be a family of itemsets Then there are two data sets say D 1 and D 2  for which q D 1  a t  1 j L  6  q D 2  a t  1 j L  but f r  G  D 1   f r  G  D 2   Given a tree T we de\002ne sets  T  to be sets  T   S L 2 lvs  T  sets  L   We also de\002ne sets  T   S i sets  T i  where T  f T 1      T K g is a decision tree model 5 Choosing Good Itemsets The connection between itemsets and decision trees made in the previous section allows us to consider an orthogonal approach to identify good itemsets Informally our goal is to construct decision trees from a family of itemsets F  selecting the subset from F that provides the best compression of the data More formally our new approach is as follows given a downward closed family of itemsets F  we build a decision tree model T  f T 1      T K g providing a good compression of the data with sets  T  022 F  Before we can describe our main algorithm we need to introduce some further notation Firstly given two trees T p and T n not using attribute c  we de\002ne J OIN T REE  c T p  T n  to be the join tree with c as the root node T p as the positive branch of c  and T n as the negative branch of c  Secondly to de\002ne our search algorithm we need to 002nd the best tree bt  a t  S F   arg min T f c  T  j t  T   a t  src  T  022 S sets  T  022 F g  that is bt  a t  S F   returns the best tree for a t for which the related sets are in F and only splits on attributes in S  To compute the optimal tree bt  a t  S F   we use the exhaustive method presented originally in 27  g i v e n i n A l gorithm 2 The algorithm is straightforward it tests each valid item as the root and recurses itself on both branches Algorithm 2 G ENERATE algorithm for calculating bt  a t  S F   that is the best tree T for a t using only S as source and having sets  T  022 F  1 B  S   S F   2 C  T RIVIAL T REE  a t   3 for b 2 B do 4 G  f X 000 b j b 2 X 2 F g  5  D p  D n   S PLIT  D b   6 T p  G ENERATE  a t  G  S D p   7 T n  G ENERATE  a t  G  S D n   8 C  C  J OIN T REE  b T p  T n   9 end for 10 return arg min T f c  T  j T 2 Cg  We can now describe the actual algorithm for constructing decision tree models with a low cost Our method automatically discovers the order in which the attributes can be transmitted most succinct For this it needs to 002nd sets of attributes S i for each attribute a i such that these should be encoded before a i  The collection S  f S 1      S K g should de\002ne an acyclic graph and the actual trees are bt  a i  S i  F   We use c  S  as a shorthand for the total complexity P i c  bt  a i  S i  F  of the best model built from S  
592 
592 


We construct the set S iteratively At the beginning of the algorithm we have S i   and we increase the sets S i one attribute at a time We allow ourselves to mark the attributes The idea is that once the attribute a i is marked then we are not allowed to augment S i any longer At the beginning none of the nodes are marked To describe a single step in the algorithm we consider a graph H   v 0      v K   where v 1      v K represent the attributes and v 0 is a special auxiliary node We start by adding edges  v i  v 0  having the weight c  bt  a i  S i  F   thus the cost of the best tree possible from F using only the attributes in S i  Then for each unmarked node v i we 002nd out what other extra attribute will help most to encode it succinct To do this we add the edge  v i  v j  for each v j with the weight c  bt  a i  S i  f a j g  F   Now let U be the minimum directed spanning tree of H having v 0 as the sink Consider an unmarked node v i such that  v i  v 0  2 E  U   That node is now the best choice to be 002xed as it helps to encode the data best We therefore mark attribute a i and add a i to each S j for each ancestor v j of v i in U  This process is repeated until all attributes are marked The details of t he algorithm are given in Algorithm 3 Algorithm 3 The algorithm S ET P ACK constructs a decision tree model T given a family of itemsets F such that sets  T  022 F  Returns a DAG a family S   S 1      S K  of sets of attributes The trees are T i  bt  a i  S i  F   1 S   S 1      S K             2 r   r 1      r K    false      false   3 V  f v 0      v K g  4 while there exists r i  false do 5 E    6 for i  1      K do 7 E  E   v i  v 0   8 w  v i  v 0   c  bt  a i  S i  F   9 if r i  false then 10 for j  1      K do 11 T  bt  a i  S i  f a j g  F   12 if c  T  024 w  v i  v 0  then 13 E  E   v i  v j   w  v i  v j   c  T   14 end if 15 end for 16 end if 17 end for 18 U  dmst  V E  f Directed Min Spanning Tree g 19 for  v i  v 0  2 E  U  and r i  false do 20 r i  true  21 for v j is a parent of v i in U do 22 S j  S j  a i  23 end for 24 end for 25 end while 26 return S  The marking of the attributes guarantees that there can be no cycles in S  In fact the marking order also tells us a valid order for transmitting the attributes Further as at least one attribute is marked at each step this guarantees that th e algorithm terminates in K steps Let S be the collection of sources The following proposition tells us that the augmentation performed by S ET P ACK does not compromise the optimality of collections next to S  Proposition 9 Assume the collection of sources S  f S 1      S K g  Let O  f O 1      O K g be the collection of sources such that S i 022 O i and j O i j 024 j S i j  1  Let S 0 be the collection that Algorithm 3 produces from S in a single step Then there is a collection S 003 such that S 0 i 022 S 003 i and that c  S 003  024 c  O   Proof Let G be the graph constructed by Algorithm 3 for the collection S  Construct the following graph W  For each O i such that O i  S i add the edge  v i  v 0   For each O i 6  S i add the edge  v i  v j   where f a j g  O i 000 S i  But W is a directed spanning tree of G  Let U be the directed minimum spanning tree returned by the algorithm Let S 003 i  S 0 i if  v i  v 0  2 E  U  and S 003 i  S 0 i  f a j g if  v i  v j  2 E  U   Note that S 003 de\002nes a valid model and because U is optimal we must have c  S 003  024 c  O   Corollary 10 Assume that F is a family of itemsets having 2 items at maximum The algorithm S ET P ACK returns the optimal tree model Let us consider the complexity of the algorithms The algorithm S ET P ACK runs in a polynomial time By using dynamic programming we can show that G ENERATE runs in O  j F j 2  time We also tested a faster variant of the algorithm in which the exhaustive search in G ENERATE is replaced by the greedy approach similar to the ID3 algorithm We call this variant S ET P ACK G REEDY  6 Related Work Finding interesting itemsets is a major research theme in data mining To this end many measures have been suggested over time A classic measure for ranking itemsets is frequency for which there exist ef\002cient search algorithms 2 15  O t h e r m e a s u r e s i n v o l v e c o m p a r i n g h o w much an itemset deviates from the independence assumption 1,3,4,11  I n y e t o t h e r a p p r o a c h e s m o r e 003 e x i b l e m o d els are used such as Bayes networks 17 18  M a x i m u m Entropy estimates 24 31  R e l a t e d a r e a l s o l o w e n t r o p y sets itemsets for which the entropy of the data is low 16  Many of these approaches suffer from the fact that they require a user-de\002ned threshold and further that at low thresholds extremely many itemsets are returned many of which convey the same information To address the latter 
593 
593 


problem we can use closed 28 o r n o n d e r i v a b l e  6  i t e m sets that provide a concise representation of the original itemsets However these methods deteriorate even under small amounts of noise Alternative to these approaches of describing the pattern set there are methods that instead pick groups of itemsets that describe the data well As such we are not the 002rst to embrace the compression approach to data mining 12  R e cently Siebes et al 30 i n t r o d u c e d t h e M D L b a s e d K RIMP algorithm to battle the frequent itemset explosion at low support thresholds It returns small subsets of itemsets th at together capture the distribution of the data well These code tables have been successfully applied in classi\002cation 22  m e a s u r i n g t h e d i s s i m i l a r i t y o f d a t a  3 3   a n d d a t a generation 34  W h i l e t h e s e a p p l i c a t i o n s s h o w s t h e p r a c ticality of the approach K RIMP can only describe the patterns between the items that are present in the dataset On the other hand we consider the 0 s and the 1 s in the data symmetrically and hence we are able to provide more detailed descriptions of the data including patterns betwee n the presence and absence of items More different from our methods are the lossy data description approaches These strive to describe just part of the data and as such may overlook important interactions Summarization 7 i s a c o m p r e s s i o n a p p r o a c h t h a t i d e n t i 002 e s a group of itemsets such that each transaction is summarized by one set with as little loss of information as possible Yet different are pattern teams 20  w h i c h a r e g r o u p s o f m o s t informative lengthk itemsets 19  s e l e c t e d t h r o u g h a n e x ternal interestingness measure As this approach is computationally intensive the number of team members is typically  10  Bringmann et al 5 p r o p o s e d a s i m i l a r s e l e c tion method that can consider larger pattern sets However it also requires the user to choose a quality measure to which the pattern set has to be optimized unlike our parameterfree and lossless method Alternatively we can view the approach in this paper as building a global model for data and then selecting the itemsets that describe the model This approach then allows us to use MDL as a model selection technique In a related work 32 t h e a u t h o r s b u i l d d e c o m p o s a b l e m o d e l s i n o r d e r to select a small family of itemsets that model the data well The decision trees returned by our methods and particularly the DAG that they form have a passing resemblance to Bayes networks 9  H o w e v e r  a s b o t h t h e m o d e l c o n struction and complexity weighing differ strongly so do th e outcomes To be more precise in our case the distributions p  x par  x  are modeled and weighted via decision trees whereas in the Bayes network setup any distribution is weighted equally Furthermore we use the correspondence between the itemsets and the decision trees to output local patterns as opposed to Bayes networks which are traditionally used as global models 7 Experiments This section contains the results of the empirical evaluation of our methods using toy and real datasets 7.1 Datasets For the experimental validation of the two packing strategies we use a group of datasets with strongly differing stati stics From the LUCS/KDD repository 8 w e t o o k a n u m b e r of often used databases to allow for comparison to other methods To test our methods on real data we used the Mammals presence database and the Helsinki CS-courses dataset The latter contains the enrollment records of students taking courses at the Department of Computer Science of the University of Helsinki The mammals dataset consists of the absence/presence of European mammals 25 in geographical areas of 50x50 kilometers 1 The details of these datasets are provided in Table 1 Table 1 Statistics of the datasets used in the experiments Dataset j D j K  of 1's anneal 898 71 20.1 breast 699 16 62.4 courses 3506 98 4.6 mammals 2183 40 46.9 mushroom 8124 119 19.3 nursery 12960 32 28.1 pageblocks 5473 44 25.0 tic–tac–toe 958 29 34.5 7.2 Experiments with Toy Datasets To evaluate whether our method correctly identi\002es in\dependencies we start our experimentation using two arti\002cial datasets of 2000 transactions and 10 items For both databases the data is generated per transaction and the presence of the 002rst item is based on a fair coin toss For the 002rst database the other items are similarly generated However for the second database the presence of an item is 90 dependent on the previous item As such both datasets have item densities of about 50 If we apply G REEDY P ACK  our greedy decision tree building method to these datasets we see that it is unable to compress the independent database at all Opposing the dependently generated dataset can be compressed into only 1 The full version of the dataset is available for research pur poses upon request http://www.european-mammals.org  
594 
594 


Table 2 Compression number of trees and numbers of extract ed itemsets for the greedy algorithm G REEDY P ACK K RIMP Dataset c  T b  bits c  T  bits c  T  c  T b    trees  sets min–sup  sets  bits ratio  anneal 23104 12342 53.4 71 1203 1 102 22154 34.6 breast 8099 2998 37.0 16 17 1 30 4613 16.9 courses 76326 61685 80.8 98 1230 2 148 71019 79.3 mammals 78044 50068 64.2 40 845 200 254 90192 42.3 mushroom 442062 115347 26.1 119 999 1 424 231877 20.9 nursery 337477 180803 53.6 32 3409 1 260 258898 45.5 pageblocks 15280 7611 49.8 44 219 1 53 10911 5.0 tic–tac–toe 25123 14137 56.3 29 619 1 162 28812 62.3 50 of the original number of bits Inspection of the resulting itemsets show that the resulting model correctly de scribes the dependencies in detail The resulting 19 itemsets are f a 1      a 10  a 1 a 2      a 9 a 10 g  7.3 The Greedy Method Recall that our goal is to 002nd high quality descriptions of the data Following the MDL principle the quality of the found descriptions can objectively be measured by the compression of the data We present the compressed sizes for G REEDY P ACK in Table 2 The encoding costs c  T  include the size of the encoded data and the decision trees The initial costs as denoted by c  T b   are those of encoding the data using na¨\021ve single-node T RIVIAL T REE s Each of these experiments required 1–10 seconds runtime with an exception of 60 s for mushroom  From Table 2 we see that all models returned by G REEDY P ACK strongly reduce the number of bits required to describe the data this implicitly shows that good models are returned The quality can be gauged by taking the compression ratios into account In general our greedy method reduces the number of bits to only half of what the independent model requires As two speci\002c examples of the found dependencies in the courses dataset the course Data Mining was packed using Machine Learning  Software Engineering  Information Retrieval Methods and Data Warehouses  Likewise AI and Machine Learning were used to pack the Robotics course Like discussed above our approach and the K RIMP 30 algorithm have stark differences in what part of the data is considered However as both methods use compression and result good itemsets it is insightful to compare the algorithms For the latter we here allow it to compress as well as possible and thus consider candidates up to as low min-sup thresholds as feasible Let us compare between the outcomes of either method For K RIMP these are itemsets for ours it is the combination of the decision trees and the related itemsets We see that K RIMP typically returns fewer itemsets than G REEDY P ACK  However our method returns itemsets that describe interactions between both present and absent items Next we observed that especially the initial K RIMP compression requires many more bits than ours and as such K RIMP attains better compression ratios However if we disregard the ratios and look at the raw number of bits the two methods require we see that K RIMP generally requires twice as many bits to describe only the 1's in the data than G REEDY P ACK does to represent all of the data 7.4 Validation through Classi\014cation To further assess the quality of our models we use a simple classi\002cation scheme 22  F i r s t  w e s p l i t t h e t r a i n i n g database into separate class-databases We pack each of these Next the class labels of the unseen transactions wer e assigned according to the model that compressed it best We ran these experiments for three databases viz mushroom  breast and anneal  A random 90 of the data was used to train the models leaving 10 to test the accuracy on The accuracy scores we noted resp 100 98.0 and 93.4 are fully comparable to and for the second even better than the classi\002ers considered in 22  7.5 Choosing Good Itemsets In this subsection we evaluate S ET P ACK  our itemset selection algorithm Recall that this algorithm selects item sets such that they allow for building succinct encoding decision trees The difference with G REEDY P ACK is that in this setup the resulting itemsets should be a subset of a given candidate family Here we consider frequent itemsets as candidates We set the support threshold such that the experiments with S ET P ACK were 002nished within 1 2 2 hours with an exception of 23 hours for considering the 
595 
595 


Table 3 Compressed sizes and number of extracted itemsets f or the itemset selection algorithms Candidate Itemsets S ET P ACK S ET P ACK G REEDY K RIMP Dataset min-sup  sets c  T  c  T  c  T b    sets c  T  c  T  c  T b    sets  bits  sets anneal 175 8837 20777 89.9 103 20781 89.9 69 31196 53 breast 1 9920 5175 63.7 42 5172 63.9 49 4613 30 courses 55 5030 64835 84.9 268 64937 85.1 262 73287 93 mammals 700 7169 65091 83.4 427 65622 84.1 382 124737 125 mushroom 1000 123277 313428 70.9 636 262942 59.5 1225 474240 140 nursery 50 25777 314081 93.0 276 314295 93.1 218 265064 225 pageblocks 1 63599 11961 78.3 92 11967 78.3 95 10911 53 tic–tac–toe 7 34019 23118 92.0 620 23616 94.0 277 28957 159 large candidate family for mushroom  For comparison we use the same candidates for K RIMP  We also compare to S ET P ACK G REEDY  which required 1–12 minutes 7 minutes typically with an exception of 2 1 2 hours for mushroom  Comparing the results of this experiment Table 3 with the results of G REEDY P ACK in the previous experiment we see that the selection process is more strict now even fewer itemsets are regarded as interesting enough Large candidate collections are strongly reduced in number up to three orders of magnitude On the other hand the compression ratios are still very good The reason that G REEDY P ACK produces smaller compression ratios is because it is allowe d to consider any itemset Further the fact alone that even with this very strict selection the compression ratios are generally well below 90 show that these few sets are indeed of high importance to describing the major interactions in the data If we compare the number of selected sets to K RIMP  we see that our method returns in the same order as many itemsets These descriptions require far less bits than tho se found by K RIMP  As such ours are a better approximation of the Kolmogorov complexity of the data Between S ET P ACK and S ET P ACK G REEDY the outcomes are very much alike this goes for both the obtained compression as well as the number of returned itemsets However the greedy search of S ET P ACK G REEDY allows for much shorter running times 8 Discussion The experimentation on our methods validates the quality of the returned models The models correctly detect dependencies in the data while ignoring independencies Only a small number of itemsets is returned which are shown to provide strong compression of the data By the MDL principle we then know these describes all important regularities in the data distribution in detail ef\002ciently and witho ut redundancy This claim is further supported by the high classi\002cation accuracies our models achieve The G REEDY P ACK algorithm generally uses more itemsets and obtains better packing ratios than S ET P ACK  While G REEDY P ACK is allowed to use any itemset S ET P ACK may only use frequent itemsets This suggests that we may able to achieve better ratios if we use different candidates  for example low-entropy sets 16  The running times of the experiments reported in this work range from seconds to hours and depend mainly on the number of attributes and rows of the datasets The exhaustive version S ET P ACK may be slow on very large candidate sets however the greedy version S ET P ACK G REEDY can even handle such families well Considering that our curren t implementation is rather na¨\021ve and the fact that both methods are easily parallelized both G REEDY P ACK and S ET P ACK G REEDY are suited for the analysis of large databases The main outcomes of our models are the itemsets that identify the encoding paths However the decision trees from which these sets are extracted can also be regarded as interesting as these provide an easily interpretable view o n the major interactions in the data Further just consideri ng the attributes used in such a tree as an itemset also allows for simple inspection of the main associations In this work we employ the MDL criterion to identify the optimal model Alternatively one could consider using either BIC or AIC both of which can easily be applied to judge between our decision tree-based models 9 Conclusions In this paper we presented two methods that 002nd compact sets of high quality itemsets Both methods employ compression to select the group of patterns that describe all interactions in the data best That is the data is considere d symmetric and thus both the 0s and 1s are taken into account in these descriptions Experimentation with our methods 
596 
596 


showed that high quality models are returned Their compact size typically tens to thousands of itemsets allow fo r easy further analysis of the found interactions References 1 C  C  A g g a r w a l a n d P  S  Y u  A n e w f r a m e w o r k f o r itemset generation In Proceedings of the ACM SIGACTSIGMOD-SIGART symposium on Principles of Database Systems PODS  pages 18–24 ACM Press 1998 2 R  A g r a w a l  H  M a n n i l a  R  S r i k a n t  H  T o i v o n e n  a n d A  I  Verkamo Fast discovery of association rules In Advances in Knowledge Discovery and Data Mining  pages 307–328 AAAI 1996 3 S  B r i n  R  M o t w a n i  a n d C  S i l v e r s t e i n  B e y o n d m a r k e t baskets Generalizing association rules to correlations In ACM SIGMOD International Conference on Management of Data  pages 265–276 ACM Press 1997 4 S  B r i n  R  M o t w a n i  J  D  U l l m a n  a n d S  T s u r  D y n a m i c itemset counting and implication rules for market basket data In ACM SIGMOD International Conference on Management of Data  pages 255–264 1997 5 B  B r i n g m a n n a n d A  Z i m m e r m a n n  T h e c h o s e n f e w  O n identifying valuable patterns In IEEE International Conference on Data Mining ICDM  pages 63–72 2007 6 T  C a l d e r s a n d B  G o e t h a l s  M i n i n g a l l n o n d e r i v a b l e f r e quent itemsets In Proceedings of the 6th European Conference on Machine Learning and Principles and Practice of Knowledge Discovery in Databases  pages 74–85 2002 7 V  C h a n d o l a a n d V  K u m a r  S u m m a r i z a t i o n c o m p r e s s i n g data into an informative representation In Proceedings of the IEEE Conference on Data Mining  pages 98–105 2005 8 F  C o e n e n  T h e L U C S K D D d i s c r e t i s e d  n o r m a l i s e d A R M and CARM data library 2003 9 G  F  C o o p e r a n d E  H e r s k o v i t s  A B a y e s i a n m e t h o d f o r the induction of probabilistic networks from data Machine Learning  9:309–347 1992 10 T  C o v e r a n d J  T h o m a s  Elements of Information Theory 2nd ed John Wiley and Sons 2006 11 W  D u M o u c h e l a n d D  P r e g i b o n  E m p i r i c a l b a y e s s c r e e n i n g for multi-item associations In ACM SIGKDD Conference on Knowledge Discovery and Data Mining  pages 67–76 2001 12 C  F a l o u t s o s a n d V  M e g a l o o i k o n o m o u  O n d a t a m i n i n g  compression and kolmogorov complexity In Data Mining and Knowledge Discovery  volume 15 pages 3–20 Springer 2007 13 P  D  G r  u n w a l d  The Minimum Description Length Principle  MIT Press 2007 14 J  H a n  H  C h e n g  D  X i n  a n d X  Y a n  F r e q u e n t p a t t e r n mining Current status and future directions In Data Mining and Knowledge Discovery  volume 15 Springer 2007 15 J  H a n a n d J  P e i  M i n i n g f r e q u e n t p a t t e r n s b y p a t t e r n growth methodology and implications SIGKDD Explorations Newsletter  2\(2\:14–20 2000 16 H  H e i k i n h e i m o  E  H i n k k a n e n  H  M a n n i l a  T  M i e l i k  a i nen and J K Sepp¨anen Finding low-entropy sets and trees from binary data In ACM SIGKDD Conference on Knowledge Discovery and Data Mining  pages 350–359 2007 17 S  J a r o s z e w i c z a n d T  S c h e f f e r  F a s t d i s c o v e r y o f u n e x p ected patterns in data relative to a bayesian network In ACM SIGKDD Conference on Knowledge Discovery and Data Mining  pages 118–127 2005 18 S  J a r o s z e w i c z a n d D  A  S i m o v i c i  I n t e r e s t i n g n e s s o f frequent itemsets using bayesian networks as background knowledge In ACM SIGKDD Conference on Knowledge Discovery and Data Mining  pages 178–186 2004 19 A  J  K n o b b e a n d E  K  Y  H o  M a x i m a l l y i n f o r m a t i v e k itemsets and their ef\002cient discovery In ACM SIGKDD Conference on Knowledge Discovery and Data Mining  pages 237–244 2006 20 A  J  K n o b b e a n d E  K  Y  H o  P a t t e r n t e a m s  I n Proceedings of the 10th European Conference on Machine Learning and Principles and Practice of Knowledge Discovery in Databases  pages 577–584 2006 21 P  K o n t k a n e n a n d P  M y l l y m  a k i  A l i n e a r t i m e a l g o r i t h m for computing the multinomial stochastic complexity Information Processing Letters  103\(6\:227–233 2007 22 M  v a n L e e u w e n  J  V r e e k e n  a n d A  S i e b e s  C o m p r e s s i o n picks the item sets that matter In Proceedings of the 10th European Conference on Machine Learning and Principles and Practice of Knowledge Discovery in Databases  pages 585–592 2006 23 M  L i a n d P  V i t  a n y i  An Introduction to Kolmogorov Complexity and its Applications  Springer-Verlag 1993 24 R  M e o  T h e o r y o f d e p e n d e n c e v a l u e s  ACM Trans Database Syst  25\(3\:380–406 2000 25 A  J  M i t c h e l l J o n e s  G  A m o r i  W  B o g d a n o w i c z  B Krystufek P J H Reijnders F Spitzenberger M Stubb e J B M Thissen V Vohralik and J Zima The Atlas of European Mammals  Academic Press 1999 26 K  V  S  M u r t h y  On growing better decision trees from data  PhD thesis Johns Hopkins Univ Baltimore 1996 27 S  N i j s s e n a n d  E Fromont Mining optimal decision trees from itemset lattices In ACM SIGKDD Conference on Knowledge Discovery and Data Mining  pages 530–539 2007 28 N  P a s q u i e r  Y  B a s t i d e  R  T a o u i l  a n d L  L a k h a l  D i s c o vering frequent closed itemsets for association rules Lecture Notes in Computer Science  1540:398–416 1999 29 J  R i s s a n e n  F i s h e r i n f o r m a t i o n a n d s t o c h a s t i c c o m p l e xity IEEE Transactions on Information Theory  42\(1\:40–47 1996 30 A  S i e b e s  J  V r e e k e n  a n d M  v a n L e e u w e n  I t e m s e t s t h a t compress In Proceedings of the SIAM Conference on Data Mining  pages 393–404 2006 31 N  T a t t i  M a x i m u m e n t r o p y b a s e d s i g n i 002 c a n c e o f i t e m s e t s Knowledge and Information Systems KAIS  2008 Accepted for publication 32 N  T a t t i a n d H  H e i k i n h e i m o  D e c o m p o s a b l e f a m i l i e s o f itemsets In Proceedings of the 12th European Conference on Machine Learning and Principles and Practice of Knowledge Discovery in Databases  2008 33 J  V r e e k e n  M  v a n L e e u w e n  a n d A  S i e b e s  C h a r a c t e r i s i ng the difference In ACM SIGKDD Conference on Knowledge Discovery and Data Mining  pages 765–774 2007 34 J  V r e e k e n  M  v a n L e e u w e n  a n d A  S i e b e s  P r e s e r v i n g privacy through data generation In Proceedings of the IEEE Conference on Data Mining  pages 685–690 2007 
597 
597 


