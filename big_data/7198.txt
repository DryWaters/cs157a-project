Abstract erms 1 y Methods Han as and ys only computing of and the   F I N ound an as  the sufarray which is mor e space ef 002cient than a suf 002x tr ee functionalities 002rst memory in Fr om then on much mor e ef fort has array models 4 5 6 7 8 9  11 12 13 In r espect of the r esear ch on LCP array classi\002ed ements both original only 14 15 and those fr om the second category owsnputs 16  18 19 So far  the algorithms designed by the into external memory 10 In addition to the sequential algorithms high 017 Deand Shunde issng@mail.sysu.edu.cn hanlb@mail2.sysu.edu.cn 017 of of waihchan@ied.edu.hk CPUs GPUs 20 21 22 23 002x oposed state-of-the-art exhave pracchecker DC3 SAIS eSAIS 10 and so forth In addition to help avoid an e.g In obability its in describes the LCP ently the work LCP  ution obabilisprinciple of literally the sequences technique 002nthe 0018-9340 \(c This article has been accepted for publication in a future issue of this\ journal, but has not been fully edited. Content may change prior to fin\al publication. Citation information: DOI 10.1109/TC.2017.2702642, IEEE Transactions on Computers 


0018-9340 \(c This article has been accepted for publication in a future issue of this\ journal, but has not been fully edited. Content may change prior to fin\al publication. Citation information: DOI 10.1109/TC.2017.2702642, IEEE Transactions on Computers 2 A of O  n  002xed-size a each the the method veri\002ed to indicate B ogram A Secalgorithmic algorithms emarks M D A Preliminaries string x 0 n 000 1 intealphabet 006 size O 1 or O  n  002x of x by sa of f 0  1 n 000 1 g that suf  sa  i   suf  sa  j  for j 2 0 n  and j  e suf  sa  i  and suf  sa  j  starting with x  sa  i  and x  sa  j  say suf  sa  j  of suf  sa  i  if j i 000 j j 1 The of x by cp of n e cp   0 and cp  i  of suf  sa  i  and suf  sa  i 000 1 for i 2 1 n  in\002nitetheir  Idea 1 both and in x computed convenience to x be in 006 hence ent 1 Both sa 0 n  and cp 0 n  only all i 2 1 n   1 sa of f 0  1 n 000 1 g  2 x  sa  i  sa  i   cp  i  000   x  sa  i 000 1 sa  i 000   cp  i  000 1  3 x  sa  i   cp  i  x  sa  i 000   cp  i   oof immediCondiin sa and any in sa ect to of O  n  An convert two e two equality 002culty ement function 002ngerprint suppose L and 016 number om 1 L  002ngerprint fp  j  a substring x  j  to scan x compute fp 0 k  all k 2 0 n  d fp 0 i 000 1 and fp 0 j  subtract obtain fp  j  3 1 fp 0  000 0  2 fp 0 i  fp 0 i 000 1 001 016  x  i  mo d L for i 025 0  3 fp  j  fp 0 j  000 fp 0 i 000 1 001 016 j 000 i 1 d L  common a setting L value this pr operty is utilized in 25 to design  have 1 Both sa 0 n  and cp 0 n  a all i 2 1 n   1 sa of f 0  1 n 000 1 g  2 fp  sa  i  sa  i   cp  i  000  fp  sa  i 000 1 sa  i 000   cp  i  000 1  3 x  sa  i   cp  i  x  sa  i 000   cp  i   olthat L 197 and 016 101 compute fp 0 p  iteratively values substrings neighboring in sa i.e suf  sa 0 and suf  sa 1 substrings e x  sa 0 sa   cp 1 000 1 and x  sa 1 sa   cp 1 000 1 3 fp  sa 0 sa   cp 1 000 1 ence between fp 0 sa 0 000 1 and fp 0 sa   cp 1 000 1 have  fp  sa 1 sa   cp 1 000 1 educing fp 0 sa 1 000 1 om fp 0 sa   cp 1 000 1 002ngerprints e  Algorithm in e each in sa of sa and cp o-initialized arrays p and mk checking e p the in x and mk whether sa a of f 0  1 n 000 1 g  Scan x with i m 0 to n 000 1 each scanned x  i  compute fp 0 i  to p  i   


0018-9340 \(c This article has been accepted for publication in a future issue of this\ journal, but has not been fully edited. Content may change prior to fin\al publication. Citation information: DOI 10.1109/TC.2017.2702642, IEEE Transactions on Computers  Scan sa and cp with i om 1 to n 000 1 for scanned sa  i  and cp  i  let u  sa  i  v  cp  i  and w  sa  i 000 1 perform Retrieve p  u 000 1 and p  u  v 000 1 om p to compute fp  u  v 000 1 set mk  u   1  Retrieve p  w 000 1 and p  w  v 000 1 om p to compute fp  w  v 000 1  if fp  u  v 000  fp  w  v 000 1 and x  u  v  x  w  v   Set mk  sa   1  if mk  i   1 all i 2 0 n   takes O  n  inexternal degradaAssume that x  sa and cp design diskthat  scans sa and cp to oduce T 1 T 2 T 3 002rst 2all of x assigns when out fp 0 i 000 1 tuple e with e 1 st  i om T 1 T 2 T 3 update e with fp 0 i 000 1 then d e to T 0 1 T 0 2 T 0 3 components in T 1 of sa algorithm their to sequentially step 23-31 obtain 016 cp  i  computing  p 1 and  p 2 keep all 016 cp  i  This space than n we in O  d log 2 n e  using O  d log 2 n e  Let e om 0 n  binary is k d log 2 n e k 1 k 0 have 016 e 005 d log 2 n e i 0 016 k i 001 2 i which h f 016 1 016 2 016 2 d log 2 n e g known ysis of O  n  size M  size D size B and e O  n  and O  n=B  ee O  n log B  n=B  and O  n=B log B  n=B  espectively Algorithm 1 5 array as 013 and f each a r takes 2 001 f  r  for of T 1 T 0 1 and  013 2 001 f  r  sorting of T 2 T 0 2 and T 3 T 0 3 space tackles T 1 T 0 1  T 2 T 0 2 and T 3 T 0 3 single over x 002ngerprints 4 of x  M D B Preliminaries the principle 24 which r equir es much less we  in x S*-type detail x  i  1 i  n 000 1 2 x  i  x  i  3 x  i   x  i  and x  i  otherwise x  i  if x  i  and x  i  L-type then x  i  is S*-type  in sa common that in sa can left  use sa bkt  c  the character c and sa bkt L  c   sa bkt S  c  sub-bucket  cp kets e lcp bkt  c   lcp bkt L  c   lcp bkt S  c  LCPin sa bkt  c   sa bkt L  c   sa bkt S  c  e the is n 1  sa 003 0 n 1  S*while cp 003   0 and subin sa 3 


A the 2 2 Both sa 0 n  and cp 0 n  a all i 2 1 n 1  and j 2 0 n   1 x  sa 003  i  and sa 003  i  6  sa 003  k  all k 2 0 n 1  and k 6  i  2 fp  sa 003  i  sa 003  i   cp 003  i  000  fp  sa 003  i 000 1 sa 003  i 000   cp 003  i  000 1  3 x  sa 003  i   cp 003  i  x  sa 003  i 000   cp 003  i   4 sa  j   sa 0  j  and cp  j   cp 0  j  for j 2 0 n  e sa 0 and cp 0 om sa 003 and cp 003 IS method Algorithm conand verify sa 003 and cp 003 002ngerprinting of sa 003 and cp 003 array sa 003 oduced om sa and in sa  say suf  sa  i  and suf  sa  j  of 0018-9340 \(c This article has been accepted for publication in a future issue of this\ journal, but has not been fully edited. Content may change prior to fin\al publication. Citation information: DOI 10.1109/TC.2017.2702642, IEEE Transactions on Computers 4 1 1 1 Function kByFP  x  sa  cp  n  2 T 1   sa  i  l  j i 2 0 n  3 T 2   sa  i   cp  i  l  j i 2 0 n 000 1 4 T 3   sa  i   cp  i  l  j i 2 1 n  5 in T 1  T 2 and T 3 espectively 6 p 0 7 for i 2 0 n  do 8 if T 1  y  and T 1  top   1 st  i then 9 e  T 1  top   T 1  op   e 3 d  p  T 0 1  push  e  10 end 11 else 12 return violated 13 end 14 while T 2  y  and T 2  top   1 st  i do 15 e  T 2  top   T 2  op   e 3 d  p  e 4 th  x  i   T 0 2  push  e  16 end 17 while T 3  y  and T 3  top   1 st  i do 18 e  T 3  top   T 3  op   e 3 d  p  e 4 th  x  i   T 0 3  push  e  19 end 20 p  p 001 016  x  i  mo d P  x  n  character 21 end 22 in T 0 1  T 0 2 and T 0 3 espectively 23 for i 2 1 n  do 24 p 1  T 0 1  top   3 d  T 0 1  op   p 2  T 0 2  top   3 d  ch 1  T 0 2  top   4 th  T 0 2  op  25  p 1  p 2 000 p 1 001 016 cp  i  d P 26 p 1  T 0 1  top   3 d  p 3  T 0 3  top   3 d  ch 2  T 0 3  top   4 th  T 0 3  op  27  p 2  p 3 000 p 1 001 016 cp  i  d P 28 if  p 1 6   p 2 or ch 1 025 ch 2 then 29 return violated 30 end 31 end 32 return ue cp 003  i  of suf  sa 003  i  and suf  sa 003  i 000 1 for i 2 1 n 1   array t in t  i  of x  i  e t  i   1 or 0 if x  i  L-type  Idea used and memory 10 12  14 Such a constr uction algorithm mainly consists of a computing sa 003 and cp 003 an inducing sa and cp om sa 003 and cp 003 1  that sa 003 and cp 003 induce a 2 2 Both sa 0 n  and cp 0 n  only satis\002ed Both sa 003 and cp 003 ect 2 sa  sa 0 and cp  cp 0 e sa 0 and cp 0 induced om sa 003 and cp 003 method 


0018-9340 \(c This article has been accepted for publication in a future issue of this\ journal, but has not been fully edited. Content may change prior to fin\al publication. Citation information: DOI 10.1109/TC.2017.2702642, IEEE Transactions on Computers 5 f cp  i  cp  j 000 1 cp  j  g sorts in sa 2-3 scans x 4-13 lexical generate sa 003 14pair in sa 003 minimum the cp that their 3 with sa 003 and cp 003 Given sa 003 and cp 003 ocess induce sa 0 and cp 0 om sa 003 and cp 003 with sa and cp to 32-36 alphabet 006 size O 1 can check sa and cp and the items in cp a item v 1 it item v 2 in cp If v 1  v 2  then v 2 induce quickly of cp be ovide 002x/LCP modi\002ed e p 1 p 2 and sp 1 sp 2 the sub-buckets  Let p 1  c  and p 2  c  of sa bkt L  c  and lcp bkt L  c  for c 2 0  006  Scan sa and cp L-type induced 002x p character c 0 LCPvalue q if p  p 1  c 0  and q  p 2  c 0   move p 1  c 0  and p 2  c 0  the right Let sp 1  c  and sp 2  c  of sa bkt S  c  and lcp bkt S  c  for c 2 0  006  Scan sa and cp suf\002x p character c 0 LCP-value q  if p  sp 1  c 0  and q  sp 2  c 0  move sp 1  c 0  and sp 2  c 0  left ysis 002rst checking sa 003 and cp 003 sorting checking sa and cp externalogram second om sa and x ocess E S Setup alexternallibrary a eal-world normalized investigated 017 oseconds 017 bytes 017 external 40-bit e ograms ubuntu allowed ogB\224  Results ogA 224enwiki consists depicted speed performance at 155 n all nearly 200 n is about 26  0  65 2 arrays every the S*for insight ogB S*the number under I/O checking sa 003 and cp 003 checking sa and cp  its arrays conalgorithm in tuned ogA eabout 21 n that addition and handling the length in f 1  2  4  8 g for 


Corpora k 006 k n 6 2 2 1 Function kByIS  x  sa  cp  n  2 T 1   sa  i  l  j i 2 0 n  3 in T 1 component 4 pos  000 1 5 for i 2  n 0 do 6 e  T 1  top   T 1  op  7 if x  i  S*-type then 8 if pos 025 e 1 st then 9 return violated 10 end 11 T 2  push  e   pos  e 1 st 12 end 13 end 14 in T 2 component 15 i 0  j 0  cp min  max al 16 while T 2  y  do 17 e  T 2  top   T 2  op  18 while true do 19 cp min  min  cp min cp  i  20 if e 2 nd  i then 21 sa 003  j   e 1 st  cp 003  j   cp min  j  j 1  i  i 1 22 break 23 end 24 i  i 1 25 end 26 cp min  max al 27 end 28 if CheckByFP  sa 003 cp 003 n 1  se then 29 return violated 30 end 31  sa 0 cp 0  cess  sa 003 cp 003  32 for i 2 0 n  do 33 if sa  i  6  sa 0  i  k cp  i  6  cp 0  i  then 34 return violated 35 end 36 end 37 return ue Description enwiki 256 74.7 ikipedia https://dumps.wikimedia 16/05/01 ot 96 2.5 at ot ent elease/knowledgebase 16/05/11 oteins 27 1.1 http otein 06/12/15 become performance our e ound 90 n e\002x om 1 to 8 unning om 1  05 to 1  33  002x the even outputs our as 002x builder 017 seSparse\036  for building LCP  017 pSAscan for building SA and the Sparse\036  the A on for  0018-9340 \(c This article has been accepted for publication in a future issue of this\ journal, but has not been fully edited. Content may change prior to fin\al publication. Citation information: DOI 10.1109/TC.2017.2702642, IEEE Transactions on Computers 1  n 


Dataset 002xes PDU IOV T S*-type all ratio S*-type all ratio S*-type all ratio S*-type all ratio enwiki 1g 329810376 1073741824 0.31 15.67 40 0.39 89.94 155 0.58 1.05 1.70 0.62 enwiki 2g 650901939 2147483648 0.30 15.41 40 0.39 89.18 155 0.58 1.22 1.85 0.66 enwiki 4g 1301327878 4294967296 0.30 15.45 40 0.39 89.14 155 0.58 1.19 1.89 0.63 enwiki 8g 2586471839 8589934592 0.30 15.35 40 0.38 88.80 155 0.57 1.33 2.14 0.62 ot 829262945 3028811776 0.27 13.94 40 0.35 83.80 155 0.54 1.04 2.26 0.46 oteins 379092002 1184366592 0.32 16.21 40 0.41 92.29 155 0.60 1.14 1.85 0.62 mean 1012811163 3189156522 0.30 15.34 40 0.38 88.86 155 0.57 1.16 1.95 0.60 Solution the is Sparse\036 e to n 2 M This algorithms when n the in when n is than M and pSAscan 224enwiki for 224enwiki big n the 1 in is the only it for by and ogram  times with signi\002cantly designs  Discussion Design designs sorts of T 1 T 0 1 T 2 T 0 2 T 3 T 0 3 sequence disks B sorting existing have algorithms 2 integer string characters B performance om sa S cp S or sa L cp L Sbe 002rst buckets suppose array get sa S cp S onwe check sa S cp S induce sa 0 cp 0 in etrieving sa 003 cp 003 and well Design  gin and voluse sorting for ocess  than space the implementation the 002le obsolete and/or years 12  with dif fer ent methods for solving the key pr oblem the work engineering these inoptimizthe ound 8 n ocess easonable the time out e 0018-9340 \(c This article has been accepted for publication in a future issue of this\ journal, but has not been fully edited. Content may change prior to fin\al publication. Citation information: DOI 10.1109/TC.2017.2702642, IEEE Transactions on Computers 2  7 


3  total enwiki 1g 2.21 0.61 2.82 0.39 0.59 0.98 1.70 2.54 enwiki 2g 2.63 0.53 3.16 0.47 0.53 1.00 1.84 2.51 enwiki 4g 2.90 0.63 3.53 0.59 0.40 0.99 1.89 2.56 enwiki 8g 3.02 0.63 3.65 0.83 0.45 1.28 2.13 2.79 erent a of 224enwiki\224 8 Dataset 1 2 ogA ogB eSAIS sparse\036 0018-9340 \(c This article has been accepted for publication in a future issue of this\ journal, but has not been fully edited. Content may change prior to fin\al publication. Citation information: DOI 10.1109/TC.2017.2702642, IEEE Transactions on Computers total pSAscan sparse\036 


on Computers 9 Miscellaneous alternatives lexical makes array check checkapplicable may a ebuild using by examcase much an solution C S obabilistically  methods the experimental 2 1 space e and our to B constant practice design algorithms work r eports that a car eful engineering of the ound 8 n for n 024 2 40 oaching 6 n or for ge n IS optimal e LCP for simultaneously is builder method R S Symposium Matching and Retrieval Algorithmica 1:1\226 2014  G Nong W  H Chan S Q Hu and Y  W u 223Induced Sorting 224 0018-9340 \(c This article has been accepted for publication in a future issue of this\ journal, but has not been fully edited. Content may change prior to fin\al publication. Citation information: DOI 10.1109/TC.2017.2702642, IEEE Transactions on Computers on Experiments Symposium Matching Symposium Matching on Computing the Computation Algorithms  2004  U Manber and G Myers 223Suf 002x Arrays A New Method for Onches,\224 5 1993  J K 250 arkk 250 Array in Netherlands 943\226955  P  K o and S Alur u 223Space Ef 002cient Linear T ime Constr uction of in pp 200\226210  D K Kim J S Sim H Park and K Park 223Linear T ime Constr ucin 186\226199  G Nong S Zhang and W  H Chan 223T wo Ef 002ci ent Algorithms 224 2011  R Dementiev  J K 250 ark 250 223Better uction.\224 2008  P  Ferragina T  Gagie and G Manzini 223Lightweight Data Index,\224 63 2012  G Manzini and P  Ferragina 223Engineering a Lightweight Suf 002x Algorithm,\224 33\22650 2004  T  Bingmann J Fischer  and V  Osipov  223Inducing Suf 002x and LCP in 88\226102  J K 250 arkk 250 External in Palermo 53\22660  G Nong W  H Chan S Zhang and X F  Guan 223Suf 002x Array Substrings,\224 2015  J Fischer  223Inducing the LCP-Array,\224 in pp 374\226385  P  Flick and S Alur u 223Parallel Distributed Memory Constr uction in 1\22610  T  K G Lee H Arimura S Arikawa and K Park 223Linear and in pp 181\226192  J K 250 arkk 250 Longestin 2009 181\226192  S J Puglisi and T  Andr ew  223Space-time T radeof fs for Longestin Gold 124\226135  M Deo and S Keely  223Parallel Suf 002x Array and Least Common in New 197\226206  V  Osipov  223Parallel Suf 002x Array Constr uction for Shar ed Memory in 2012 379\226384  L W ang S Baxter  and J Owens 223Fast Parallel Suf 002x Array on in 573\226587  J K 250 arkk 250 Memin 2015 329\226342  J K 250 arkk 250 Array in 2016  R Dementiev  J K 250 arkk 250 223Better uction,\224 2008  P  Bille J Fischer  and et al 223Sparse Suf 002x T r ee constr uction in in 148\226159 oceedings NetAnalysis Informatics Colloquium ogramming on ogramming SIGPLAN ogramming Computing  M Abouelhodaa S Kurtzb and E Ohlebuscha 223Replacing Suf 002x Arrays,\224 of Data of Algorithmics of Algorithmics Systems Information Systems SympoMatching on Matching Struces Algorithmica 


Experience Development  S Burkhar dt and J K 250 arkk 250 Array in pp 55\22669  R Karp and M Rabin 223Ef 002cient Randomized Pattern Matching Algorithms,\224 2 1987  L Ar ge and M Thor up 223RAM-ef 002cient external memory sorting.\224 2013  R Dementiev  L Kettner  and P  Sanders 223STXXL Standar d T emSets,\224  2008  J K 250 arkk 250 223Engineering in pp 98\226108 10 the Experiments Symposium Matching 0018-9340 \(c This article has been accepted for publication in a future issue of this\ journal, but has not been fully edited. Content may change prior to fin\al publication. Citation information: DOI 10.1109/TC.2017.2702642, IEEE Transactions on Computers Computations 


992\226 2012  P  Buncic 223CernVM Minimal Maintenance Appr oach to the V ir tualization,\224 2011  BoincVM https://code.google.com/p/boincvm  V  Cunsolo S Distefano A Pulia\002to and M Scarpa 223Applying in 2010  S Distefano and A Pulia\002to 223Cloud@Home T owar d a V olunteer Cloud,\224 2012  M Fazio A Pulia\002to and S Distefano 223Managing V olunteer Cloud,\224 2013  A Alwabel R J W alters and G B W ills 223T owar ds a V olunteer in 2013  A E S Ahmed A K Alsammak and E Algizawy  223A New used ces,\224 76 2013  GENI https://www geni.net  Apache 223Hadoop,\224 http://hadoop.apache.or g  J Dean and S Ghemawat 223MapReduce Simplied Data Pr ocessing in 2004  K S Shams M W  Powell T  M Cr ockett J S Norris R Rossi and Framein  606\226611  J Hellerstein 223Science in the Cloud,\224 in  2012  A Rezgui and S Rezgui 223A Stochastic Appr oach for V irtual in 2014  A Rezgui G Quezada M M Ra\002que and Z Malik 223A CapacUsing in 2014  B Rochwer ger  D Br eitg and D Hadas J Cacer es A Galis MonCloud in  2010  A Celesti F  T usa M V illari and A Pulia\002to 223Impr oving V irtual in  2010  227\227 223Thr ee-Phase Cr oss-Cloud Federation Model The Cloud in 2010  D Bermbach T  Kurze and S T ai 223Cloud Federation Ef fects of Cost,\224 in 2013  T  Kurze M Klems D Bermbach A Lenk S T ai and M Kunze in  2011  G Fox and D Gannon 223Pr ogramming Paradigm s for T echnical in 2012  D Ar dagna E D Nitto P  Mohagheghi S Mosser  C Ballagny  Petcu model-driven multiple in 50\22656  M Miglierina G P  Gibilisco D Ar dagna and E D Nitto 223Model in 2013  M Miglierina M Balduini N S Hoonejani E D Nitto and Multiin 2013  B Rochwer ger  D Br eitgand A Epstein D Hadas I Loy  K Na Enough,\224 3 2011  B Rochwer ger  D Br eitgand E L Levy  A Galis K Nagin I M Benand Computing,\224 2009  IBM 223Reservoir 224 http://www r esear ch.ibm.com/haifa/pr ojects systech  D V illegas N Bobr of f I Roder o J Delgado Y  Liu A De\223Cloud Model,\224 2012  G Kecskemeti A Kertesz A C Mar osi and P  Kacsuk 223Inter oper in 18\22635  M Makkes C Ngo Y  Demchenko R Strijkers R Meijer  and Multiin 2013  R Buyya R Ranjan and R Calheir os 223InterCloud UtilityScalin C.Berlin 13\22631 Engineering IC2E and Sciences on AFIN Inter\(CCGRID of INTERNET Phys Paradigms Computer 2332-7790 \(c This article has been accepted for publication in a future issue of this\ journal, but has not been fully edited. Content may change prior to fin\al publication. Citation information: DOI 10.1109/TBDATA.2017.2703830, I\EEE Transactions on Big Data Computational IJCSE ofessional Cloud orkshop in MISE for ocessing Applications on COMPUTING ICSE MISE  S Caton and O Rana 223T owar ds Autonomic Management for ces,\224 Interirtualization COMPUTING Journal Development orkshop ence USA IEEE Boston ency Experience OSDI Grid CCGrid on Reasoning XX 11 scalabile may access perspective other e ce security eats because allocate ces data this originating at om ces up its shrinks  ent in CloudFinder we of execution workload A S a Consortium R S LNCS Theory Practice 


2011  J Br ober g R Buyya and Z T ari 223MetaCDN Harnessing Storage Delivery,\224 2009  Emulab http://www emulab.net  Planetlab http://www planetlab.or g  SuraGrid http://www suragrid.or g  Futur eGrid https://portal.futur egrid.or g  Open Science Grid http://www opensciencegrid.or g  V  D Cunsolo S Distefan o and A Pulia\002to 223CloudHome on T op VOIR,\224 2012  S Malik and F  Huet 223V irtual Cloud Rent Out the Rented in 2011  GENI 223GENI Rack Speci\002cation,\224 http://gr oups.geni.net/geni wiki/GeniRacks  227\227 223GENI Rack Pr ojects,\224 her ehttp://gr oups.geni.net/geni wiki/GENIRacksHome  Chamelon https://www chameleoncloud.or g  CloudLab http://www cloudlab.us  HiBench https://github.com/intelhadoop/HiBench  J Buell 223A Benchmarking Case Study of V irtualized Hadoop Per e 2011  IBM 223T eraSort Benchmark,\224 http://www01.ibm.com/support knowledgecenter/SSGSMK educe integration/map educe terasort example.dita ICET XX 12 CLOUD pp 2010  S Malik F  Huet and D Car omel 223Coope rative Cloud ComputCloud,\224 in and UAE and Applications 2332-7790 \(c This article has been accepted for publication in a future issue of this\ journal, but has not been fully edited. Content may change prior to fin\al publication. Citation information: DOI 10.1109/TBDATA.2017.2703830, I\EEE Transactions on Big Data  F  Bermbach M Klems S T ai and M Menzel 223MetaStorage A Consistency-Latency in Sciences Engineering proScience he Big Comrecomcoauthored erences  ifunded committees IEEE LCN in Institute pursusame on  comput comwhere REsearch lie uted inteis these deal au of He and CM essor tHe in receivVirginia include data ation OutPhD ICWS cited top  SerEngineer Medjaheds utomo in and echxComessor Inxinclude comor al apcontrol 


                                


                                 


                            


                           


                 





This article has been accepted for inclusion in a future issue of this j\ournal. Content is final as presented, with the exception of pagination EEE   19 S Gong Cheng om Xidian  in 2007 and the M.S. and technical  3   He is currently an Associate Professor with Northwestern Polytechnical University. His main research interests are computer vision and pat tern recognition ei Han ently techni ch The ersity cher at the Uni His omputer vision, multi and brain imaging analysis. He es such as IEEE T C t T IONS  ON P A t t T ERN  A A YSIS  AND M CHINE  I I N t T ELLIGENCE AMI I I N t T ER NA t T IONAL J OURNAL  OF  C C O m p MP U t T ER V ISION V T C t T IONS  ON  I I m M GE P SSING  TIP C C ONFERENCE  ON  C C O m p MP U t T ER V ISION  AND P A t t T ERN  R R OGNI t T ION VPR I I N t T ERNA t T IONAL  C C ONFERENCE  ON  C C O m p MP U t T ER V ISION V I I N t T ERNA t T IONAL J OIN t T  C C ONFER ENCE  ON  A A R t T IFICIAL  I I N t T ELLIGENCE IJCAI Prof. Han is an Associate Editor of the I E E E IEEE T RANSAC t T IONS  ON  H H U m M AN M ACHINE  S S YS t T E m M S  Neurocomputing   Processing and Machine Vision and Applications  u ently f  tor ests include emote sensing om e eas  international journal, including Neurocomputing Elsevier Cognitive  Computation Springer International Journal of Image and Graphics  World of Scientific 


