An improved similarity measure method in Collaborative Filtering Recommendation Algorithm  Jiumei Mao School of Computer Science Technology, Soochow University Suzhou, China mao_jiumei@126.com Zhiming Cui School of Computer Science Technology, Soochow University Suzhou, China szzmcui@suda.edu.cn Pengpeng Zhao   School of Computer Science Technology, Soochow University Suzhou, China ppzhao@suda.edu.cn Xuehuan Li School of Computer Science Technology, Soochow University Suzhou, China lixuehuan538@163.com 
  
Collaborative filtering recommendation technology is successfully used in personalized recommendation services Since the magnitudes of users and commodities in E-commerce system has increased dramatically, the user rating data in the entire item space become extremely sparse. There is a certain deviation while using traditional similarity measure methods which reduces the recommendation accuracy for the recommendation systems. To overcome the shortages of the traditional similarity measures under such conditions, this paper proposes using similarity impact factor to improve similarity measures in collaborative filtering recommendation algorithms The experimental results show that the factor can effectively improve the similarity measure result while user rating data are 
Abstract 
extremely sparse, and significantly improve the accuracy of the recommendation systems 
KeywordsÑRecommendation system; Collaborative filtering Similarity measurement 
 
I INTRODUCTION  AND  MOTIVATION With the rapid spread of the Internet and the rapid development of E-commerce, it is becoming more and more urgent to obtain the required information quickly and efficiently from the mass data. Providing recommendation service for users is applied to a variety of portals and Ecommerce system increasingly, which functioned as collecting usersê historical information to learn their interests and behavior patterns and analyze their behavior 
Collaborative filtering technology is very broadly used in the recommendation system, which includes User-based Collaborative Filtering [1 an d It em b ased C o ll ab o r a tiv e  Filtering  T h is t e c hno l o gy  is b a s e d o n th e ne a r e s t n e ighbo r and the recommending form concludes Rating Prediction and Top-N recommendation [4,5  T a p est ry is th e f i r s t  collaborative filtering recommendation system proposed which records usersê views after reading articles, each user should explicitly point out the users who have the similar behavi Gro u p L e n s 7 Ri ngo 8 a n d Vi d e o Recommender [9 ar e als o  e a r lie r  c o ll ab o r a tiv e  f ilt er i n g recommendation system, which provides recommendation service for films, news, music, by analyzing other usersê views 
With the constant expansion of E-commerce system, all kinds of problems exist in the recommendation system about data sparsity [10  c o l d  s t a r t 1 1    sc ala b i lity 1 2    C o l d  s t ar t  problem is the extreme case of data sparsity, which cannot be completely avoided. Random recommendation [13 popularity-based recommendation methods [1 a r e m a in ly  methods to deal with the cold start problem. Random recommendation method has a broader coverage but poor user experience. Popularity-based recommendation methods can solve the problem better, but it is not individual and cannot solve the Long-tail. In the case that the rating data are extremely sparse, the accuracy of the traditional similarity 
measure methods depends on the number of common rated items, which leads to the result that the nearest neighbor of target users and items are inaccurate, and the recommendation qualityês decline. In order to solve the data sparseness problem matrix dimensionality reduction based on collaborative filtering method is proposed in [15 w h ic h w o uld  le a d t o  the lost a lot of relevant information and the result is not satisfactory. In reference [17  a c o lla b o r at iv e f ilt er i n g recommendation algorithm based on item rating prediction is proposed, which firstly predict the user's score of the ungraded items based on the similarity among items and then fill the item-score matrix, so that the target user's nearest neighbor can 
be calculated out and the target recommended is achieved. Due to the use of traditional similarity measurement methods in preliminary score prediction, which cannot measure the similarity between items or users, then the subsequent calculation is affected, at last, the entire recommendation quality would have a decline. To eliminate the error of the similarity measurement, using correlation weight factor to calculate the similarity is proposed in [18,19  an d  t h en  influence weight is proposed in [2 Re fer e nce  2 1  i m p r o v e s  the similarity measure method by comparing certain threshold with the number of common rated items In this paper, an improved similarity measure method for 
collaborative filtering recommendation Algorithm is proposed after studying the problems in traditional similarity measurements in the case that the usersê rating data are extremely sparse. Based on the measure method on items and users, it is proposed to use similarity impact factor to improve the similarity measurement and the improved method is used to predict the rating of ungraded items. The experimental result shows that the similarity impact factor can rectify the deviations existed in the traditional similarity measure method  Corresponding autho r 
2013 International Conference on Cloud Computing and Big Data 978-1-4799-2829-3/13 $26.00 © 2013 IEEE DOI 10.1109/CLOUDCOM-ASIA.2013.39 297 
2013 International Conference on Cloud Computing and Big Data 978-1-4799-2830-9/14 $31.00 © 2014 IEEE DOI 10.1109/CLOUDCOM-ASIA.2013.39 297 


 
  12   
R nm 
     
ab R R a U b U a U b U ak R k I b U a U b U ak R k I b U a U b U ak R k I 
      1       2       3 
a U a U a U b U a U a U b U a U a U a U b U 
  
     
n m nm n n m m A Similarity measurement methods 1 Cosine-based Similarity m 2 Adjusted Cosine Similarity 3 Pearson Correlation Similarity B Problem analysis of similarity measures 
 
 1 22  11 cos  
  12  
  
 
ai R ab s im U U 
when the data is extremely sparse effectively and the entire quality of recommendation algorithm is improved. In section 2 the traditional similarity measure methods are summed up and the measure result is analyzed in the case that data is extremely sparse. In section 3, the main content of the improved similarity measure method in Collaborative Filtering Recommendation Algorithm is presented. In section 4 experiments on the similarity impact factor and the recommendation algorithm and the experimental analysis are showed. In the end, summary of this paper is presented II SIMILARITY  MEASURE  METHODS  AND  ANALYSIS In recommendation systems, user rating database consists of users and items User rating data can be represented as a user-item rating matrix, denoted by where denotes the users  denotes the items Let  be the rating of user on item  which reflects userês interests and preference for the item The similarity between pairs of users or the similarity between pairs of items is used to predict the userês rating on the item in collaborative filtering recommendation algorithms which can be measured based on the users or items. The accuracy of the similarity measures determines the quality of the recommendation system. Let be the similarity between user and user Firstly we need to get all items that be rated by and and calculate the similarity between them by different similarity measure methods. Similarly, let be the similarity between and so that all the usersê rating on the item and the item can be obtained The can be calculated according to the usersê rating The similarity can be calculated between pairs of users or pairs of items. Among the most commonly used traditional metrics we have: Cosine-based Similarity, Adjusted Cosine Similarity and Pearson Correlation Similarity [22, 23  In t h is paper, we set the similarity between users as an example to introduce traditional metrics In Cosine-based Similarity, we regard the user rating or the item rating as the rating vector, where the rating of the item that didnêt be rated by the user is assumed to be 0. The similarity between users or items can be measured by calculating the cosine of the angle between vectors. The smaller is the angle, the higher is the similarity. Let  be the rating vectors of the user and user on the  dimension space of the items. The similarity between user  and user can be expressed as follows Where  denotes the rating that user rated on the item  To adjust the deviation between different usersê different rating scales in Cosine-based Similarity metric, Adjusted Cosine Similarity improves the result by subtracting the average rating of the user rating on items. Let be the set of the common items that the user and the user rated  and respectively denote the set of items which user and user have rated. The similarity between the user and the user can be expressed as follows Where  denotes the rating that user rated on the item  and denote the average rating of the user and  respectively Correlation Similarity metric measures the similarity between pairs of users or pairs of items on their mutual rating and amends the deviation between different users rating scale Let be the set of common items that user and user  have rated. The similarity between user and user is measured by Pearson correlation coefficient as follows Where  denotes the rating that user rated on the item  and denote the average rating of the user and  With the development of E-commerce system, the number of users and the number of items are growing exponentially which results in the extreme sparsity of the user rating. In the large scale E-commerce systems, compared with the total number of items, the number of items that a user has rated is very scarce, and the items that different users have common rated are much less. In the case that the rating data are extremely sparse, there are some defects in the traditional similarity metrics. We will analyze the existing problems of the 
m ak bk ab k ab ab mm ab ak bk kk RR RR sim U U ine R R RR RR 
 
 22    22   
 
n UUU U m I II I a U i I ai UUII a U b U a U b U i I i I 
   002\002 
j I j I 
 
002 002\002 002 002\002 
ij s im I I ij s im I I 
ab UU I a U I b U I 
002 002\002    002 002\002    
UU ab UU ab ak a bk b kI ab ak a bk b kI kI RRRR sim U U RR RR ab UU I UU ab UU UU ab ab ak a bk b kI ab ak a bk b kI kI RRRR sim U U RR RR 
003\003\004 003\003\004 003\003\004 003\003\004 005 003\003\004 003\003\004 
002 002\002 
003\003\004 003\003\004 
a R b R a R b R 
002 002 
298 
298 


 
005   5 
ab UU I I ab UU I ab a b UU U U I II 
R nm 
003 
ab UU a U b U a U b U a U b U a U b U a U b U ab s im U U ab ab s im U U sim U U a U b U ab ab s im U U sim U U 
004 with number of the common rated items by users. The fixed similarity is expressed as follows 004 is manually set and the optimal threshold parameter is obtained through experiments To solve the problems of traditional metrics under the condition that user rating data are extremely sparse , and adaptively correct the similarity between users, we propose a method which uses similarity impact factor 
  
a U b U 
ab ab ab UU UU UU II II a U I b U I ab UU I ab a b UU U U I II 
A Similarity impact factor 
traditional similarity metric in the case of extreme sparse of user rating data in detail later In Cosine Similarity method, while building the user-item rating matrix if the rating of the item is not given then assuming that the rating is zero, it can effectively improve the performance of similarity measurement. When the number of users and items is big and user rating data are extremely sparse, it is not credible to set the unknown rating to be zero. In fact, users' preference for unrated items can be neither identical nor completely different. When user and user have no rating on the item, due to their rating may not be zero, it is no doubt that the similarity result between users are raised. When the rating data are extremely sparse, it will have a great impact on the calculation of similarity. When there is only a user given score on the item, setting the unknown score to zero will make the calculation of similarity less than the actual value. When the user rating data are extremely sparse, the influence will be smaller. Thus, in the case that user data is extremely sparse Cosine Similarity measure is not effective on the calculation of similarity between users. In fact, the cosine similarity calculation value increases the similarity between users, and Adjusted Cosine Similarity measure has the same problem In the correlation similarity measurement, let  be the rating item set of user  When calculating the similarity between user and user we need to obtain the common rating item set of user and user  then calculate the similarity between user and user on the set of with Pearson Correlation Similarity metric. However the credibility of the similarity measured by the method depends on the size of the intersection the more the common rated items are, the higher the credibility of the similarity metric is. In the case that user rating are extreme sparse, the set of the common item rated by two users is very small. We canêt grantee that the similarity between users is relatively high even the scores of items are very similar in such small sets. When the rated items of users are the same, that is  the similarity measured based on the intersection of the items is more credible. When it is no doubt that the similarity between two users measured on the intersection of the rated items will be increased, since the deviations of usersê rating data in the non-intersection portion are not necessarily identical. Only calculating the similarity on their intersection is similar to setting the deviation of their rating data in non-intersection portion to zero, it will lead to the result that the calculated similarity is higher than the actual value Therefore, in the case that user rating data are extremely sparse, there are some defects in the correlation similarity metric In conclusion, in the case of user rating data are extremely sparse, the traditional similarity metrics canêt effectively measure the similarity between users, and will increase the value of similarity in the calculation process. There is also the same problem in the calculation of similarity between items which leads to deviations when predicting usersê rating on items. Reference [15,16 for w a r d fi l l i ng t h e user i t e m matrix for improving, but it still canêt effectively measure the similarity III IMPROVED  SIMILARITY  MEASURE  FOR  COLLABORATIVE  FILTERING  RECOMMENDATION  ALGORITHM Similarity metric can be measured on either pairs of users or pairs of items. In this paper, we take the former for example to illustrate the improved method of similarity, namely, Userbased Collaborative Filtering recommendation method. The calculation of similarity between users depends on the number of common rated items for them. Under the condition that user rating data are extremely sparse, traditional metrics have accidental impact. In order to eliminate the impact, reference 18 o s e d to add a cor re l a ti o n w e i ght fa c t o r to ca l c ula t e the similarity. Further on, reference po s e d t o s e t  influence weight. In Uncertain nearest Neighbor Collaborative Filtering recommendation algorithm \(UNCF\[21 b a se d  o n  the adjusted cosine similarity metric, it fix similarity between users by comparing threshold The threshold to correct the traditional similarity between users, as in Where and denote the sets of items rated by user  and  is the co-rated items by user and The similarity which adjusted by the similarity impact factor is expressed as follows When  1 it means that user and user have the same rated items, so the similarity between users measured by the traditional metrics can fully reflect the value of the similarity. Therefore the adjusted similarity meets  
ab UU I 
 
     
004 004 003  4 
   005     
ab UU I I ab a b UU U U I II 
 005  6   
003 
ab UU ab ab II s im U U sim U U 
 
min     
ab UU I 
 
 
 
005  
299 
299 


 
 0    
  
      1  
B Rating prediction algorithm A Datasets B Metrics C Comparison of similarity measurements 
N pp p N rr r 
y R 
  12  
x x y y ax xi x UU ai a ax UU iy ay y II i iy II sim U U R R RR sim U U sim I I R R R sim I I 
When  0 it means that user and user  donêt have any common rated items, so the similarity between users measured by the traditional metrics canêt be used to denote the similarity of users. Therefore  When  01 it means that the common rated items are one part of all the rated items set. So the similarity impact factor is used to adaptively adjust the similarity measured by the traditional metrics according to the proportion of common rated items in all the rated items. The adjusted similarity is  So we introduce the similarity impact factor which is used to adjust the deviation caused by the traditional metrics under the case that user rating data are extremely sparse, to adaptively improve the measure of similarity. This method improves the quality of the recommendation In this paper, the impact factor is used to improve the similarity metrics. The userês rating on the items is predicted according to the similarity measured by the method, which shows the userês interest in the item. As to the target user  and the item that is ungraded by the user, the collaborative filtering algorithm, which is improved by using the impact factor, combines the similarity between users with the similarity between items and predicts userês rating on items The prediction formula is expressed as follows and and respectively and denote the average rating of the item and item In the prediction formula, we use the parameter to balance the effects of usersê similarity and item similarity to predict the rating. When 0 it is the Item-based Collaborative Filtering. On the contrary 1 it is the User-based Collaborative Filtering IV EXPERIMENTS  AND  ANALYSIS The proposed algorithmês quality is experimented in this section, and we would analyze the experimental result and answer the following questions. \(1\Whether the similarity metrics improved by the impact factor will perform better in prediction. \(2\ Whether the improved method is more precise when compared with other collaborative filtering algorithms and which one is the best collaborative filtering recommendation algorithm The test data in the experiment is the famous movie rating data provided by the research group GroupLens http://www.grouplens.org\ MovieLens, including 943 users 100,000 rating records on 1682 movies, every user gives their rates on 20 films at least. The rating value is integer from 1 to 5, and if the rate is 5, the user is very satisfied with the film. On the contrary, rate 1 shows that the user is not interested in the film. The experimental testing dataset is divided into 8 groups and all the rating matrix is divided into training set and test set MAE \(Mean Absolute Error\ is selected as the metrics of recommendation system, which belongs to the statistical accuracy metrics. This method is easy to understand and can intuitively measure the recommendation systemês quality which is the most commonly used method to evaluate the recommendation performance. MAE computes the average deviation between the actual rating and the predicted rating which are used to evaluate the accuracy of prediction Therefore, the smaller the MAE is, the higher the recommendation quality is. Let the rating set of users on items be the actual corresponding rating collections be then MAE can be defined as follows The experimental purpose in this chapter is to compare the traditional similarity measure method, the method improved by impact factor and the leading research recently. Improved similarity measure method is implemented in the user-based collaborative filtering \(UBCF\ and the item-based collaborative filtering \(IBCF\, comparing with the traditional metrics and the adjusted method proposed in the Uncertain Neighbors Collaborative Filtering \(UNCF\[21 in  th e s a m e d a tas ets   
003\004 005\006 005\006 005\006 007\010 003\004 005\006 005\006 005\006 005\006 007\010 002 002 002 002 
a U b U ab sim U U ab ab ab s imUU simUU simUU a U i I a R x a U x i R i I y I 
  005         7  8 
x is used to denote the training setês percentage of the total data set, and we used Density to denote the sparse degree of every sets. The information of datasets is showed in Table 1 TABLE I 
   
 005   
002 002 
 
007 007 002 002 002 002        
N ii i p r MAE N 
R denote the average rating of the items that rated by user 
U 
    
007 007 007 
ab UU I ab a b UU U U I II 
  12   
005  005  
006 006  003 
Datasets Users Items Ratings Density  
INFORMATION  OF  DATASETS 400u 400 1543 44317 7.18 80 U1 943 1682 100000 6.305 80 U2 943 1682 100000 6.305 80 U3 943 1682 100000 6.305 80 U4 943 1682 100000 6.305 80 U5 943 1682 100000 6.305 80 Ua 943 1682 100000 6.305 90 Ub 943 1682 100000 6.305 90 
1 
x 
002 
   
300 
300 


Datasets 002=45 002=110 002=130 002=250 002=300 002=350 002=400 002=500 0.760429 0.753908 0.743289 0.742154 0.738712 0.738712 0.738712 0.738712 0.744781 0.756699 0.770376 Datasets 002=45 002=110 002=130 002=250 002=300 002=350 002=400 002=500 0.756657 0.756657 0.756657 0.756657 0.756657 0.756657 0.738894 0.738894 0.729352 0.729352 0.729352 0.731497 0.731497 0.731497 0.731497 0.727338 0.727338 0.727338 0.727338 0.734525 0.734525 0.734525 0.740452 0.740452 0.758044 0.758044 
   
THE  SIMILARITY  MEASURE  RESULT  OF  UNCF  ON  THE  DEMENSION  OF  USERS 400u 0.761555 0.760466 0.760558 0.760558 0.760558 0.760558 0.760558 U1 0.754575 0.754013 0.753940 0.753910 0.753910 0.753910 0.753910 U2 0.744220 0.743300 0.743292 0.743292 0.743292 0.743292 0.743292 U3 0.742622 0.742182 0.742338 0.742338 0.742338 0.742338 0.742338 U4 0.739519 0.738808 0.738753 0.738714 U5 0.745843 0.744807 0.744931 0.744935 0.744935 0.744935 0.744935 Ua 0.757429 0.756719 0.756731 0.756756 0.756762 0.756762 0.756762 Ub 0.770932 0.770419 0.770399 0.770412 0.770420 0.770420 0.770420 TABLE III THE  SIMILARITY  MEASURE  RESULT  OF  UNCF  ON  THE  DEMENSION  OF  ITEMS 400u 0.757414 0.756669 U1 0.740862 0.739416 0.739260 0.738974 0.738929 0.738896 U2 0.731676 0.730098 0.729851 0.729406 0.729355 U3 0.733337 0.732218 0.732009 0.731568 U4 0.728813 0.727616 0.727532 0.727374 U5 0.736016 0.734801 0.734704 0.734587 0.734544 Ua 0.740762 0.740680 0.740546 0.740515 0.740482 0.740460 Ub 0.760143 0.758830 0.758641 0.758256 0.758165 0.758090 Comparison of the similarity measure methods in UBCF 
Firstly, the adjusted method in UNCF is implemented on the dimension of users and items respectively, and MAE is selected as metrics. By gradually increasing the threshold    Fig. 1 
004  the best measurement results can be obtained in each dataset As show in Table 2 and Table 3, the similarity measured by the method fluctuates little with the change of the threshold, and would be stable when the threshold value reaches a certain value TABLE II 
400u u1 u2 u3 u4 u5 ua ub 0.8 0.805 0.81 0.815 0.82 0.825 0.83 0.835 DataSets MAE UBCF_cosine   Cosine Cosine_ 400u u1 u2 u3 u4 u5 ua ub 0.73 0.735 0.74 0.745 0.75 0.755 0.76 0.765 0.77 0.775 0.78 DataSets MAE UBCF_Adjust_cosine   Adjust_cosine Adjust_cosine_UNCF Adjust_cosine_ 400u u1 u2 u3 u4 u5 ua ub 0.73 0.74 0.75 0.76 0.77 0.78 0.79 DataSets MAE UBCF_pearson_correlation   Pearson_correlation Pearson_correlation_ 400u u1 u2 u3 u4 u5 ua ub 0.72 0.74 0.76 0.78 0.8 0.82 0.84 DataSets MAE UBCF   cosine cosine_ Adjust_cosine Adjust_cosine_ adjust_cosine_UNCF pearson_correlation pearson_correlation_ 
301 
301 


  
400u u1 u2 u3 u4 u5 ua ub 0.76 0.77 0.78 0.79 0.8 0.81 0.82 0.83 DataSets MAE IBCF_cosine   Cosine Cosine_ 400u u1 u2 u3 u4 u5 ua ub 0.71 0.72 0.73 0.74 0.75 0.76 0.77 DataSets MAE IBCF_Adjust_cosine   Adjust_cosine Adjust_cosine_UNCF Adjust_cosine_ 400u u1 u2 u3 u4 u5 ua ub 0.72 0.73 0.74 0.75 0.76 0.77 0.78 DataSets MAE IBCF_pearson_correlation   Pearson_correlation Pearson_correlation_ 400u u1 u2 u3 u4 u5 ua ub 0.7 0.72 0.74 0.76 0.78 0.8 0.82 DataSets MAE IBCF   cosine cosine_ Adjust_cosine Adjust_cosine_ adjust_cosine_UNCF pearson_correlation pearson_correlation_ 
Comparison of the similarity measure methods in IBCF Comparison of accuracy of recommendation algorithm 
 
We verified the precision of the improved similarity measurement by comparing with other similarity measurements. Abscissa indicates the data sets that used in the experiment, and the ordinate represents the MAE result. The similarity results are showed respectively based on users and items, as illustrated on Fig 1 and Fig 2. It can be seen that the MAE of the similarity measures improved by the impact factor is lower than that of other measures, so the proposed method is better than the method of using a threshold in the UNCF. It means that by using the impact factor, the similarity metrics are more precise and the recommended result is better   Fig. 2   Fig. 3 The experimental purpose in this chapter is to validate the effectiveness of the proposed algorithm by comparing the collaborative filtering recommendation algorithms improving the similarity metrics with that using the traditional similarity measures. We implement collaborative filtering recommendation algorithms combining the similarity between users with the similarity between items, which using the traditional similarity metrics and the improved similarity metrics with impact factor. The datasets U1-U5 are used in the experiments. The results of the five experiments and the average result of them are showed in Fig 3, in which, abscissa 
0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 0.72 0.74 0.76 0.78 0.8 0.82 0.84 MAE U1   Cosine Cosine_ Adjust_cosine Adjust_cosine_ Pearson_correlation Pearson_correlation_ 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 0.7 0.72 0.74 0.76 0.78 0.8 MAE U2   Cosine Cosine_ Adjust_cosine Adjust_cosine_ Pearson_correlation Pearson_correlation_ 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 0.72 0.74 0.76 0.78 0.8 0.82 MAE U3   Cosine Cosine_ Adjust_cosine Adjust_cosine_ Pearson_correlation Pearson_correlation_ 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 0.72 0.74 0.76 0.78 0.8 0.82 MAE U4   Cosine Cosine_ Adjust_cosine Adjust_cosine_ Pearson_correlation Pearson_correlation_ 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 0.72 0.74 0.76 0.78 0.8 0.82 MAE U5   Cosine Cosine_ Adjust_cosine Adjust_cosine_ Pearson_correlation Pearson_correlation_ 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 0.72 0.74 0.76 0.78 0.8 0.82 MAE Average   Cosine Cosine_ Adjust_cosine Adjust_cosine_ Pearson_correlation Pearson_correlation_ 
D Recommendation quality comparison 
302 
302 


 
Qi Qi, Zhenyu Chen, Jia Liu, Chengfeng Hui, and Qing Wu, çUsing inferred tag ratings to improve user based collaborative filtering,é New York: Proceedings of the 27th Annual ACM Symposium on Applied Computing, pp. 2008-2013, March 2012 2 SuyunWei, Ning Ye, Shuo Zhang , Xia Huang, and Jian Zhu Collaborative Filtering Recommendation Algorithm Based on Item Clustering and Global Similarity,é Business Intelligence and Financial Engineering \(BIFE\, 2012 Fifth International Conference on. IEEE, pp 69-72, August 2012 3 Nathan N. Liu, Min Zhao, Evan Xiang, and Qiang Yang. çOnline evolutionary collaborative filtering,é New York: Proceedings of the fourth ACM conference on Recommender systems, pp. 95-102 September 2010 4 Heung-Nam Kim, Ae-Ttie Ji, Inay Ha, Geun-Sik Jo, çCollaborative filtering based on collaborative tagging for enhancing the quality of recommendation,é Electronic Commerce Research and Applications vol. 9,no. 1, pp. 73-83, 2010 5 N. Hurley, M. Zhang, çNovelty and diversity in top-N recommendations-analysis and evaluation,é ACM Transactions on Internet Technology, vol. 10, no. 4, pp. 1-29, 2011 6 Goldberg D, Nichols D, Oki B, Terry D, çUsing collaborative filtering to weave an information tapestry,é Communications of the ACM, vol. 35 no. 12, pp. 61-70, 1992 7 Resnick P, Iacovou N, Suchak M, Bergstorm P, and Riedl J GroupLens: an open architecture for collaborative filtering of netnews Proceedings of the 1994 ACM conference on Computer supported cooperative work, pp. 175-186, October 1994 8 Shardanand, Upendra, and Pattie Maes, çSocial information filtering algorithms for automating çword of mouthé,é Proceedings of the SIGCHI conference on Human factors in computing systems, pp.210217, 1995 9 Hill W, Stead L, Rosenstein M, and Furnas, G, çRecommending and evaluating choices in a virtual community of use,é Proceedings of the SIGCHI conference on Human factors in computing systems, pp.194201, 1995  Zan Huang, Hsinchun Chen, and Naniel Zeng, çApplying associative retrieval techniques to alleviate the sparsity problem in collaborative filtering,é ACM Transactions on Information Systems \(TOIS\, vol. 22 no. 1, pp. 116-142, 2004  Jes˙s Bobadilla, Fernando Ortega, Antonio Hernando, Jes˙s Bernal, çA collaborative \002ltering approach to mitigate the new user cold start problem,é Knowledge-Based Systems, vol. 26, pp. 225-238, 2012  Yehuda Koren, Robert Bell, çAdvances in collaborative filtering,é US Recommender Systems Handbook, pp. 145-186 ,2011  Benjamin Marlin, Richard S. Zemel, Sam Roweis, Malcolm Slaney Collaborative Filtering and the Missing at Random Assumption Computer Science, vol. 34, no. 3, pp. 78-81, 2012  Cheng-Jun Zhang, An Zeng, çBehavior patterns of online users and the effect on information filtering,é Physica A: Statistical Mechanics and its Applications, vol. 391, no. 4, pp. 1822-1830, 2012  ZHOU Jun-Feng, TAN Xian, and GUO Jing-Feng, çAn Optimized Collaborative Filtering Recommendation Algorithmé, Journal of Computer Research and Development, vo1. 41, no. 10, pp. 1842-1847 October 2004 012<\007oJ  8\034\022  F¡\034C\022  003‘/°\004Ï\010Í,X\011#\011‡Eõ$∏\031|9$1k  Au1k\035\016-Ë0J\003‚\011•\022 41\(10\ 1842-1847, 20   ZHANG Guang-Wei, LI De-Yi, LI Peng, KANG Jian-Chu, CHEN GuiSheng, çA Collaborative Filtering Recommendation Algorithm Based on Cloud Model,é Journal of Software, vol. 18, no. 10, pp. 2403-2411 2007 024Ù\007\035\011  035"\025  035"T  024ã\024Œ\007  L\034\036\026  015Œ\004b 004e\037ı\015_,X\011#\011‡E 031|9$1k  EC\004 021:\030y 18\(10\-2411, 200  Deng AL, Zhu YY, Shi BL, çA Collaborative Filtering Recommendation Algorithm Based on Item Rating Predictioné, Journal of Software, vol. 14, no. 9, pp. 1621-1628, 2003 Fg\(\005\035k  035\005\030@\010  033ë\005\003 004  015Œ\004bNM,¬Aò\007⁄NX#\037,X\011#\011‡Eõ$∏\031|9$1k  EC\004 \021:\030y 14\(9 1621-1628, 200  Herlocker J, Konstan J A, Riedl J, çAn empirical analysis of design choices in neighborhood-based collaborative filtering algorithms Information retrieval, vol. 5, no. 4, pp. 287-310, 2002  McLaughlin M R, Herlocker J L, çA collaborative filtering algorithm and evaluation metric that accurately model the user experience Proceedings of the 27th annual international ACM SIGIR conference on Research and development in information retrieval. pp. 329-336, July 2004  Hao Ma, Irwin King, and Michael R. Lyu, çEffective missing data prediction for collaborative filtering,é Proceedings of the 30th annual international ACM SIGIR conference on Research and development in information retrieval, pp. 39-46, July 2007  HUANG Chuang-Guang, YIN Jian, WANG Jing, LIU Yu-Bao, WANG Jia-Hai, çUncertain Neighborsê Collaborative Filtering Recommendation Algorithm,é Chinese Journal of Computers, vol. 33, no. 8, pp. 13691377, August 2010 Tò\007Ô\007\035  011DHH  M 007  K  003·.B\021nE Fè,X\011#\011‡Eõ$∏\031|9$1k  Au1k\035\016\021:\030y 33\(8\, 1369-1377, 2010  J. Bobadilla, F. Ortega, A. Hernando, A. GutiÈrrez, çRecommender systems survey,é Knowledge-Based Systems, vol. 46, pp. 109Ö132 2013  Xiang Cui, Guisheng Yin, çMethod of collaborative filtering based on uncertain user interests cluster,é Journal of Computers, vol. 8, no. 1, pp 186-193, January 2013  
007 
                       
represents the value of parameter and ordinates represents the MAE results As Fig 3 shows, the MAE of the algorithm proposed in this paper is lower than the traditional collaborative filtering recommendation algorithm in all conditions above. So it can be concluded that using impact factor to improve the similarity metrics can significantly improve the accuracy of recommendation. The collaborative filtering recommendation using the adjusted similarity measure that improved by the impact factor have the best performance V CONCLUSION Firstly, in order to deal with the problem that user rating data are extremely sparse, this paper analyzed the problems of the traditional similarity measurements that their measurement accuracy depends on the number of common ratings of users or items. Then it is proposed to improve Collaborative Filtering Recommendation Algorithm by using similarity impact factor which can reduce the negative impact due to data sparsity. The experimental results show that the proposed similarity impact factor can improve the accuracy of the similarity measures effectively, and the improved collaborative filtering recommendation algorithms are more precise A CKNOWLEDGMENT  This work is partially supported by NSFC\(No.61003054 No.61170020\; Science and Technology Support Program of Suzhou\(No. SG201257\; Science and Technology Support program of Jiangsu province\(No. BE2012075\; Open fund of Jiangsu Province Software Engineering R&D Center \(No SX201205\ the Opening Project of Suzhou High-tech Key Laboratory of Cloud Computing & Intelligent Information Processing\(No. SXZ201302 R EFERENCES  1 
303 
303 


Figure 3 Figure adapted from our previous work sho wing the m o v ement of dif ferent units in the Afghanistan w a r  Figure 4 Figure adapted from our previous work sho wing patterns in the Afghanistan w a r data P atterns mark ed by A  C show lots of events happening at the same time 1  3 show lack of events and periodicity of pauses  P  Ball J Asher  D  Sulmont and D Manrique Ho w many peruvians have died American Association for the Advancement of Science Tech Rep 2003  P  Ball E T abeau and P  V erwimp The bosnian book of dead Assessment of the database full report Households in Conîict Network Tech Rep 2007  D Bo yd and K Cra wford Critical questions for big data Provocations for a cultural technological and scholarly phenomenon Information Communication  Society  vol 15 no 5 pp 662Ö679 2012  J.-B Michel Y  K Shen A P  Aiden A V eres M K Gray  J P Pickett D Hoiberg D Clancy P Norvig J Orwant et al  Quantitative analysis of culture using millions of digitized books science  vol 331 no 6014 pp 176Ö182 2011  L Mano vich Data stream database timeline the forms of social media 2012 On A v ailable http://lab softw arestudies.com/2012/10/datastream-database-timeline-new.html  Z S Syed T  Finin and A Joshi W ikipedia as an ontology for describing documents in ICWSM  2008  M L Jock ers Macroanalysis Digital Methods and Literary History  University of Illinois Press 2013  S Jones and H Petrie Charte x Disco v ering spatial descriptions and relationships in medieval charters 2013  C Gro v e r  T rading conferences  2012  S Soderland B Roof B Qin S Xu O Etzioni et al  Adapting open information extraction to domain-speciìc relations AI Magazine  vol 31 no 3 pp 93Ö102 2010  Guardian.co.uk  Afghanistan w a r logs  2011 Online Available http://www.theguardian.com/world/the-war-logs  M Mateas and A Stern F ac ade An experiment in building a fully-realized interactive drama in Game Developers Conference Game Design track  vol 2 2003 p 82  N Kiya vitskaya N Zeni J R Cordy  L  Mich and J Mylopoulos Cerno Light-weight tool support for semantic annotation of textual documents Data  Knowledge Engineering  vol 68 no 12 pp 1470Ö1492 2009  C L Sidner   T o w ards a computational theory of deìnite anaphora comprehension in english discourse DTIC Document Tech Rep 1979 44 


 J A Ha wkins Deìniteness and Indeìniteness  Humanities Press 1978  J Me yer and R Dale Mining a corpus to support associati v e anaphora resolution in Proceedings of the Fourth International Conference on Discourse Anaphora and Anaphor Resolution  2002  R Mitk o v  B  Bogurae v  and S Lappin Introduction to the special issue on computational anaphora resolution Computational Linguistics  vol 27 no 4 pp 473Ö477 2001  B W ebber  M  Egg and V  K ordoni Discourse structure and language technology Natural Language Engineering  vol 18 no 4 pp 437Ö490 2012  M Dimitro v  K Bontche v a  H  Cunningham and D Maynard A lightweight approach to coreference resolution for named entities in text Anaphora Processing Linguistic cognitive and computational modelling  vol 263 p 97 2005  S Lappin and H J Leass  A n algorithm for pronominal anaphora resolution Computational linguistics  vol 20 no 4 pp 535Ö561 1994  R Mitk o v   F actors in anaphora resolution the y are not the only things that matter a case study based on two different approaches in Proceedings of a Workshop on Operational Factors in Practical Robust Anaphora Resolution for Unrestricted Texts  Association for Computational Linguistics 1997 pp 14Ö21  K V a n Deemter and R Kibble On coreferring Corefer ence in muc and related annotation schemes Computational linguistics  vol 26 no 4 pp 629Ö637 2000  C Northw ood T ernip temporal e xpression recognition and normalisation in python Ph.D dissertation Masters thesis University of Shefìeld 2010  A Auger and J Ro y  Expression of uncertainty in linguistic data in 11th International Conference on Information Fusion 2008  IEEE 2008 pp 1Ö8  M J Druzdzel V erbal uncertainty e xpressions Literature review Pittsburgh PA Carnegie Mellon University Department of Engineering and Public Policy  1989  E Marshman Expressions of uncertainty in candidate knowledge-rich contexts A comparison in english and french specialized texts Terminology  vol 14 no 1 pp 124Ö151 2008  D Klein and C D Manning  Accurate unle xicalized parsing in Proceedings of the 41st Annual Meeting on Association for Computational Linguistics-Volume 1  Association for Computational Linguistics 2003 pp 423Ö430  W  W  Cohen and J Richman Learning to match and cluster large high-dimensional data sets for data integration in Proceedings of the eighth ACM SIGKDD international conference on Knowledge discovery and data mining  ACM 2002 pp 475Ö480  S F  Chen and J Goodman  A n empirical study of smoothing techniques for language modeling in Proceedings of the 34th annual meeting on Association for Computational Linguistics  Association for Computational Linguistics 1996 pp 310 318  B.-J Hsu and J Glass Iterati v e language model estimation efìcient data structure  algorithms in Proceedings of Interspeech  vol 8 2008 pp 1Ö4  T  Zhang and D Johnson  A rob ust risk minimization based named entity recognition system in Proceedings of the seventh conference on Natural language learning at HLTNAACL 2003-Volume 4  Association for Computational Linguistics 2003 pp 204Ö207  L Ratino v and D Roth Design challenges and misconceptions in named entity recognition in Proceedings of the Thirteenth Conference on Computational Natural Language Learning  Association for Computational Linguistics 2009 pp 147Ö155  A X Chang and C Manning Sutime A library for recognizing and normalizing time expressions in LREC  2012 pp 3735Ö3740  A Shrestha Y  Zhu B Miller  and Y  Zhao Storygraph Telling stories from spatio-temporal data in Lecture Notes in Computer Science  vol 8034 Springer 2013 pp 693 703  A T  P ang C M W ittenbrink and S K Lodha  Approaches to uncertainty visualization The Visual Computer  vol 13 no 8 pp 370Ö390 1997  W  T  C T  F orce W orld trade center task force intervie ws  2001  B Shneiderman The e yes ha v e it A task by data type taxonomy for information visualizations in Visual Languages 1996 Proceedings IEEE Symposium on  IEEE 1996 pp 336Ö343  C T rack er  Incidents e xport  I n visible Children and Resolve Tech Rep 2013  ECCC  Anne x 25 Written record of intervie w 09 june 1999 1999  ECCC Written record of intervie w o f Prak Khan  2007  ECCC Written record of intervie w o f Duch by CIJ o n 2101-2008 2008  M Halbw achs and L A Coser  On collective memory  University of Chicago Press 1992 45 


application or middleware platform to collect request ows Thus it is much easier to deploy FChain in large-scale IaaS clouds Blacksheep correl a t e s t he change poi nt of s y s t em-l e v el metrics e.g cpu usage with the change in count of Hadoop application states i.e events extracted from logs of DataNodes and TaskTrackers to detect and diagnose the anomalies in a Hadoop cluster Kahuna-BB correl a t e s b l ack-box dat a system-level metrics and white-box data Hadoop console logs across different nodes of a MapReduce cluster to identify faulty nodes In comparison FChain is a black-box fault localization system which is application-agnostic without requiring any knowledge about the application internals We believe that FChain is more practical and attractive for IaaS cloud systems than previous white-box or gray-box techniques V C ONCLUSION In this paper we have presented FChain a robust blackbox online fault localization system for IaaS cloud computing infrastructures FChain can quickly pinpoint faulty components immediately after the performance anomaly is detected FChain provides a novel predictability-based abnormal change point selection scheme that can accurately identify the onset time of the abnormal behaviors at different components processing dynamic workloads FChain combines both the abnormal change propagation knowledge and the inter-component dependency information to achieve robust fault localization FChain can further remove false alarms by performing online validation We have implemented FChain on top of the Xen platform and conducted extensive experimental evaluation using IBM System S data stream processing system Hadoop and RUBiS online auction benchmark Our experimental results show that FC hain can achieve much higher accuracy i.e up to 90 higher precision and up to 20 higher recall than existing schemes FChain is light-weight and non-intrusive which makes it practical for large-scale IaaS cloud computing infrastructures A CKNOWLEDGMENT This work was sponsored in part by NSF CNS0915567 grant NSF CNS0915861 grant NSF CAREER Award CNS1149445 U.S Army Research Ofìce ARO under grant W911NF-10-1-0273 IBM Faculty Awards and Google Research Awards Any opinions expressed in this paper are those of the authors and do not necessarily reîect the views of NSF ARO or U.S Government The authors would like to thank the anonymous reviewers for their insightful comments R EFERENCES   A m azon E las tic Com pute Cloud  h ttp://a w s  a m azon com ec2   V i rtual c om puting lab  http://vcl ncs u  e du  P  Barham  A  D onnelly  R I s aacs  a nd R M o rtier   U s ing m agpie f or request extraction and workload modelling in 
 2004  M  Y  Chen A  A ccardi E  K icim an J  L lo yd D  P atters on A  F ox and E Brewer Path-based failure and evolution management in  2004  R F ons eca G  P o rter  R H  K atz S  S h enk e r  and I  S toica X T race A pervasive network tracing framework in  2007  I  Cohen M  G o lds z m i dt T  K elly  J  S ym ons  a nd J  S  Chas e Correlating Instrumentation Data to System States A Building Block for Automated Diagnosis and Control in  2004  I  C ohen S  Z h ang M  G o lds z m i dt J  S ym ons  T  K elly  a nd A  F ox Capturing indexing clustering and retrieving system history in  2005  S  D uan S  Bab u  a nd K  M unagala F a A s ys tem for a utom ating failure diagnosis in  2009  S  K andula R Mahajan P  V erkaik S  A garw al J  P a dhye a nd V  Bahl Detailed diagnosis in computer networks in  2009  A  J  O liner  A  V  K ulkarni and A  A ik en  U s ing c orrelated s u rpris e to infer shared inîuence in  2010  P  Bahl R Chandra A  G r eenber g  S  K andula D  A  M altz and M Zhang Towards highly reliable enterprise network services via inference of multi-level dependencies in  2007  Z  G ong X  G u  a nd J  W ilk es   P RE S S  P Redicti v e E las tic ReS ource Scaling for Cloud Systems in  2010  H  N guyen Y  T a n and X  G u P A L  P ropagation-a w are a nom aly localization for cloud hosted distributed applications in  2011  B Gedik H Andrade K L  W u P  S  Y u and M  D oo SP ADE  t he system s declarative stream processing engine in  2008  A pache H adoop S y s tem   http://hadoop apache  or g/co re   Rice uni v e rs ity bidding s y s tem   http://rubis  objectw eb  o r g   M Ben-Y e huda D  B reitgand M F actor  H  K o lodner  V  K r a v ts o v  and D Pelleg NAP a building blo ck for remediating performance bottlenecks via black box network analysis in  2009  Y  T a n X  G u  a nd H  W a ng  A dapti v e s ys tem anom aly prediction f or large-scale hosting infrastructures in  2010  D  L  M ills   A b rief his t ory o f N T P tim e m e m o irs o f a n i nternet timekeeper  2003  Y  T a n H  N guyen Z  S h en X  G u C V e nkatram ani and D  R ajan PREPARE Predictive Performance Anomaly Prevention for Virtualized Cloud Systems in  2012  M  Bas s e ville and I  V  N ikiforo v   Prentice-Hall Inc 1993  L  Cherkaso v a  K  O zonat N Mi J  S ym ons a nd E  Sm irni  Anom aly application change or workload change towards automated detection of application performance anomaly and change in  2008  P  Barham and e t al   X e n a nd the a rt of virtualization  i n  2003  T he ircache p roject  h ttp://www.ircache.net  H ttperf  h ttp://code google com  p htt p er f  S  K u llback  T h e ku llback-leibler distance  1987  X  Chen M  Z hang Z  M  M a o and P  B ahl  A utom ating n etw ork application dependency discovery experiences limitations and new solutions in  2008  M Y u  A  G reenber g  D  M altz J  Re xford L  Y u an S  K andula and C Kim Proìling network performance for multi-tier data center applications in  2011  M K  A guilera J  Mogul J  W iener  P  R e ynolds  a nd A  Muthitacharoen Performance debugging for distributed systems of black boxes in  2003  S  A g arw ala F  A l e g re K  S chw a n and J  M ehalingham  E 2E P r of A utomated end-to-end performance management for enterprise systems in  2007  P  Re ynolds  J  L  W iener  J  C M ogul M  K  A guilera and A  V ahdat  WAP5 black-box performance debugging for wide-area systems in  2006  R Apte L  Hu K  S chw a n and A  G hosh L ook W ho s T alking Discovering dependencies between virtual machines using cpu utilization in  2010  G Khanna I  L aguna F  A rshad an d S Bagchi Distr ibuted diagnosis of failures in a three tier e-commerce system in  2007  R R S a m b as i v an A  X  Z heng M  D e Ros a  E  K re v at S  W h itm an M Stroucken W Wang L Xu and G R Ganger Diagnosing performance changes by com paring request ows in  2011  J  T a n a nd P  N a ras i m h an  RA M S and B lackS h eep I nferring w h ite-box application behavior using black-box techniques CMU Tech Rep 2008  J  T a n X  P a n E  Marinelli S  K a vulya R  G andhi a nd P  N a ras i m h an Kahuna Problem diagnosis for mapreduce-based cloud computing environments in  2010 
OSDI NSDI NSDI OSDI SOSP ICDE SIGCOMM DSN SIGCOMM CNSM SLAML SIGMOD ICAC PODC Computer Communication Review ICDCS Detection of abrupt changes theory and application DSN SOSP The American Statistician OSDI NSDI SOSP DSN WWW HotCloud SRDS NSDI NOMS 
207 
30 
30 


A Global Solution COVERAGE North and South America EMEA and Asia White lines are flights in the masFlight platform from February 8, 2013 Yellow pins are weather stations feeding hour ly data to our platform Maps from Google Earth / masFlight masFlight tracks flights, airports and weather around the world  Global daily flight information capture  82,000 flights  350 airlines  1700 airports  Integrated weather data for 6,000 stations  Match weather to delays  Validate block forecasts at granular level  Add weather analytics to IRROPS review and scenario planning 


Example 1: Proposed FAA Tower Closures masFlight used big-data to link airport operations across three large data sets  Current and historical airline schedules  Raw Aircraft Situation Display to Industry \(ASDI\AA  Enhanced Traffic Management System Counts \(ETMS\Airport operations counts by type \(commercial, freight, etc TOWER CLOSINGS Dots indicate closures; Red dots have scheduled service Based on scheduled service March 1 7, 20 13; scheduled service includes scheduled charter flights, cargo flig hts, and passenger flights Dots  indicate  closures  Red  dots  have  scheduled  service Bas ed  o n sc h edu l ed  se rvi ce  M a r c h 1  7, 2013; scheduled se rvi ce includ es scheduled c harter fli g hts car g o fli g hts a nd passen g er fli g hts Findings: Proposed Tower Closings  From schedules database: 55 airports with scheduled passenger airline service  14 EAS Airports  From ASDI & ETMS: 10,600 weekly flights on a flight plan \(ex. VFR and local traffic  6,500 Part 91/125 weekly flights  4,100 Part 135/121 weekly flights  


Example 1: Big-Data Analytics Applied to ASDI and ETMS To Analyze Operations TOWER CLOSINGS  26 44 24 23 11 10 6 2 1 2 Up to 5 5-10 10-15 15-20 20-25 25-30 30-35 35-40 40-45 45 Count of Airports Average Number of Daily Operations with a Flight Plan Filed Distribution of Airports By Average Number of ìDailyî Impacted Flights Airports Affected by Tower Closures Source: ASDI radar data ñ Part 91 151 flying and Part 135/121 flying March 1-7, 2013; masFlight analysis Note: Average ìdailyì operations based on 5-day week 


Example 2: Aviation Safety Causal Factor For example, consider the following ASRS report \(ACN 1031837 Departing IAH in a 737-800 at about 17,000 FT, 11 m iles behind a 737-900 on the Junction departure over CUZZZ Intersection. Smooth air with wind on the nose bearing 275 degrees at 18 KTS We were suddenly in moderate chop which lasted 4 or 5 seconds then stopped and then resumed for another 4 or 5 seconds with a significant amount of ri ght rollingÖ I selected a max rate climb mode in the FMC in order to climb above the wake and flight path of the leading -900 We asked ATC for the type ahead of us and reported the wake encounter. The 900 was about 3,300 FT higher than we were  Synopsis  B737-800 First Officer reported wake encounter from preceding B737-900 with resultant roll and moderate chop What causal factors can be identified from this narrative that could be applied to future predictive applications CAUSAL FACTORS Data-mining algorithms can mine the text of safety reports to obtain specific data that can be used to analyze causal factors  


Example 2: Identifying Causal Factors CAUSAL FACTORS  Indicators ñ Data Element Methods ñ Identifying Context and Causes  Time of day  Date range \(month day  Aircraft type  Fix or coordinates  Originating airport  Destination airport  Weather notes We pinpoint the sequencing of flights on the IAH Junction Seven departure \(at CUZZZ\the specified wind conditions to find cases wher e a B737-900 at 20,000 feet precedes by 11 miles a B737-800 at 17,000 feet  Search related data sets including ASDI flight tracks, local traffic and congestion  Weather conditions for alter native causes \(winds aloft shear and convecti ve activity  Airline specific informati on \(repeated occurrence of event in aircraft type Big data gives us visibility into contextual factors even if specific data points are missing such as a specific date or route Big-data analytics gives us insight into unreported factors as well 


Example 3: Correlating Utilization and Delays  60 65 70 75 80 85 90 95 100 7 9 11 13 ONTIME DEPARTURE PERFORMANCE HOURS OF DAILY UTILIZATION 60.0 70.0 80.0 90.0 100.0 7.0 9.0 11.0 13.0 Narrowbodies By Day of Week 60.0 70.0 80.0 90.0 100.0 7.0 9.0 11.0 13.0 Widebodies by Day of Week Daily Utilization vs. On-time Departures January 2013 System Operations Correlation Coefficient -0.53 Includes AA, AC, AS B6 F9, FL, NK, UA, US VX and WN SOURCE masFlight \(masflight.com COMPARING OTP AND UTILIZATION 


 6.2 6.0 5.8 5.8 5.2 4.9 LGB JFK BOS MCO DCA FLL JetBlue Focus Average Daily Deps per Gate Used UTILIZATION BY HUB Example 4: Daily Utilization of Gates, by Hub Big-data analysis of different carriers daily departures per gate used SOURCE masFlight \(masflight.com June 1 through August 31, 2012 Gates with minimum 1x daily use 7.7 7.4 7.2 6.2 6.1 5.8 3.8 3.6 ORD LAX SFO EWR DEN IAH IAD CLE United Airlines Hubs Average Daily Deps per Gate Used 7.8 6.4 5.5 5.4 5.3 4.4 4.3 4.0 SEA SAN PDX ANC SFO GEG LAX SJC Alaska Airlines Hubs Average Daily Deps per Gate Used 7.2 6.9 6.8 6.4 5.0 2.7 ORD DFW LAX LGA MIA JFK American Hubs Average Daily Deps per Gate Used 7.2 6.9 6.6 4.9 4.2 CLT DCA PHL PHX BOS US Airways Hubs Average Daily Deps per Gate Used 6.6 5.9 5.5 4.7 MCO BWI ATL MKE AirTran Hubs Average Daily Deps per Gate Used ne pe 


Conclusions for Big Data in Aviation  Big-data transforms operational and commercial problems that were practically unsolvable using discrete data and on-premises hardware  Big data offers new insight into existing data by centralizing data acquisition and consolidation in the cloud and mining data sets efficiently  There is a rich portfolio of information that can feed aviation data analytics  Flight position, schedules, airport/gate, weather and government data sets offer incredible insight into the underlying causes of aviation inefficiency  Excessive size of each set forces analysts to consider cloud based architectures to store, link and mine the underlying information  When structured, validated and linked these data sources become significantly more compelling for applied research than they are individually  Todayís cloud based technologies offer a solution CONCLUSIONS 


Conclusions:  Our Approach  masFlightís data warehouse and analysis methods provide a valuable example for others attempting to solve cloud based analytics of aviation data sets  masFlightís hybrid architecture, consolidating secure data feeds in on-premises server installations and feeding structured data into the cloud for distribution, addresses the unique format, security and scale requirements of the industry  masFlightís method is well suited for airline performance review competitive benchmarking, airport operations and schedule design and has demonstrated value in addressing real-world problems in airline and airport operations as well as government applications CONCLUSIONS 





