An Algorithm of Mining Spatial Topology Association Rules Based on Apriori Gang F ANG\\ Jiang XIONG', Cheng-Sheng TU\\ Ai-Ping LU02 1. College of Math and Computer Science, Chongqing Three Gorges University, Chongqing 404000, P.R. China 2. Department of Economic Management, Xichang College, Xichang, Sichuan 615013, P.R. China E-mail: cqwzjsjfg@163.com.xjcqI23@sohu.com.cqwztcs@163.com.aiaimehi@163.com Abstract-This paper introduces an algorithm of mmmg spatial topology association rules based on Apriori, which is used to mining spatial multilayer transverse association rules from spatial database. This algorithm creates candidate frequent topological itemsets via down-top search strategy as Apriori, which is suitable for mining short spatial topological frequent itemsets. This algorithm compresses a kind of spatial topological relation to form a digit. By this method, firstly, the algorithm may efficiently reduce some storage space when creating mining database. Secondly, the algorithm is easy to computing topological relation between spatial objects, namely it may fast compute support of candidate itemsets. Finally, the algorithm is fast to connect \(k+l frequent itemsets as down-top search strategy. The result of experiment indicates that the algorithm of mining spatial topology association rules based on Apriori is able to extract spatial multilayer transverse association rules from spatial database via efficient data store, and it is very efficient to extract short frequent topology association rules Keywords- spatial data mining; topology association rules multilayer transverse association; down-top search; Apriori I. INTRODUCTION The research and application of spatial data mining have become hotspot for people. Spatial association rules is one of important part of spatial data mining, which mainly extracts these interactions, spatial dependency and spatial symbiosis patterns with spatial objects as in [1]. Nowadays, traditional association rules is expanded to spatial data mining, there are mainly three kinds methods of mining spatial association rules as in [2], such as, layer covered based on clustering as in [2], mining approach based on spatial transaction as in [3 4 and 5] and mining approach based on non-spatial transaction as in [2]. Mining approach based on spatial transaction uses spatial overlying and buffer analysis to search spatial predicate of spatial objectives and other objects in spatial database, and extracts Boolean association 


rules from spatial transaction database formed by these spatial predicate. This method is used to mining monolayer transverse association rules and multilayer transverse association rules, which is one of wide applied techniques Spatial topological relation is one of typical and important multilayer spatial relation. And so, this paper introduces an algorithm of mining spatial topology association rules based on Apriori via mining approach based on spatial transaction which uses spatial topological relation as example to present multilayer spatial association rules mining 978-1-4244-6585-9/10/$26.00 2010 IEEE 101 II. PRELIMINARY KNOWLEDGE As we all know this basic knowledge as in [1, 2 preliminary knowledge of spatial topology association rules is expressed as follows Spatial association rules mainly contain three parts as follows, spatial association among properties of the same objects in the same spatial relation pattern, spatial association among different objects in the same spatial relation pattern and spatial association among different objects in the different spatial relation pattern. The first part is known as spatial lengthwise association, the second and third parts are known as spatial transverse association Association rules expressing as the second spatial relation is known as monolayer transverse spatial association rules Association rules expressing as the third spatial relation is known as multilayer transverse spatial association rules According to mining approach based on spatial transaction this algorithm uses spatial topological relation as example extracts multilayer spatial association rules, and so we only thick seven kinds of spatial topology association as table 1 Definition 1 Spatial Transaction to Binary Digit, a spatial transaction expressing topological relation is denoted by binary digit The course of turning spatial transaction into binary digit is expressed as follows Step 1 , we define target object class and non-target object class, target object class is denoted by Ot. There are m non target objects classes, which are denoted by ik \(k=l ...m Step2, we use 3 non-zero binary digits to denote a kind of topological relation that expresses sole spatial topological 


relation between target object and non-target object Step3, the number of bit is 3 times the number of classes in non-target objects of spatial transaction database Step4, spatial topological relation is denoted by binary digit as following table I TABLE 1. SPATIAL TOPOLOGICAL RELATION No. Topological relation Spatial Predicate Binary Digit 1 disjoint disjoint \(0" ik 001 2 touch touch \(0" ik 010 3 overlap overlap \(0" ik 011 4 cover cover \(0" ik 100 5 contain contain \(0" ik 101 6 covered covered \(0" ik 110 7 inside inside \(0" ik 111 Here, we let \(000 are no non-target objects in buffer of target objects Example, item sets of spatial non-target objects class is expressed as 1= {iJ, i2, i3, i4, i5}, we also define the order of binary digit according to the order of item sets Suppose here is a entity of target object class denoted by Db Ot touches a entity of non-target object class as i2, spatial predicate is denoted by touch \(Db i2 expressed as \(01Oh. Ot contains a entity of non-target object class as i3, spatial predicate is denoted by contain \(Db i3 namely, binary digit is expressed as \(101h. Ot insides a entity of non-target object class as i4, spatial predicate is denoted by inside \(Db i4 as \(111 and i5 are not in the buffer of the entity of target object class as Ot. The spatial topological relation may be expressed as Fig. 1, we also may use \(000, 010, 101, 111, 000 the spatial to 010 ical relation 0 Figure 1. The spatial topological relation Definition 2 Topological Relation Bit, it is a binary digit with 3 bit, which expresses a kind of topological relation between two entities of target object class and non-target object class Example, if a spatial transaction is denoted as a binary digit \(000, 010, 101, 111, 000 010 101 111 Definition 3 Spatial Transaction to Integer, a spatial 


transaction expressing spatial topological relation is denoted by an integer Example, if a spatial transaction is denoted by this binary digit \(000, 010, 101, 111, 000 to express this spatial transaction Definition 4 Spatial Transaction Length, which is denoted as STL. Its value equals the number of non-target objects class in buffer of entity of target object class. Namely it also equals the number of spatial topological relation between two entities of target object class and non-target object class Example, the spatial transaction as Fig.l is expressed as touch \(Db i2 Db i3 Db i4 expressed as binary digit p = \(000, 010, 101, 111, 000 length equals to 3, namely, STL \(P Definition 5 Transaction Relation to Integer Relation, a spatial transaction ST[ is expressed as integer IJ, another ST2 is expressed as integer h if ST[ c Sh and we will define I[ch Example, item sets of non-target spatial object class is expressed as 1= {iJ, i2, i3, i4, i5}' Let ST[ be {touch \(Db i2 contain \(Db i3 Db i4 102 contain \(Db i3 Db i4 ST 2 c ST J, and then we record 366 c 1390 Property 1 There are two binary digits p and q with m Topological Relation Bits, p is used to express a spatial transaction STp, q is used to express a spatial transaction STq The necessary and sufficient condition for STp c STq is p q = p, and STL\(q/\\\(?p q P Proving of sufficient condition is expressed as follows We use TRBi express value of No.i Topological Relation Bit in a binary digit Suppose, TRBi"* 0 \(i = jt,j2 .. A, k<m p, and others are O. In these Topological Relation Bits, we let No.bs \(s =1, 2 ... t, t ? 3m For p /\\ q = p, and so in these Topological Relation Bits of q these No.bs \(s =1,2 ... t, t ? 3m otherwise, p /\\ q "* p And for STL\(q/\\\(?p q p o \(i = j[,j2 .. A, k<m same Topological Relation Bit in this binary digit p 


otherwise, STL\(q /\\ \(?p q p are 0 or 1. As definition 1 and 5, we know STp C STw Proving of necessary condition is expressed as follows Suppose, TRBi"* 0 \(i = jJ,j2" jb k<m p, and others are O. In these Topological Relation Bits, we let No.bs \(s =1, 2 ... 1, t ? 3m For STp c STq, according to definition 1 and 5, and so TRBi 0 \(i = jhh .. A, k<m the same Topological Relation Bit in this binary digit p otherwise, here is NoA spatial topological relation, it belongs to STp, but it doesn't belong to STq, this contradicts with STp C STq binary digit q, these No.bs \(s =1, 2 ... t, t ? 3m alII, and others are O. And so the rest of binary bits in binary digit q are 0 or 1. Hence, p /\\ q = p, and STL\( q /\\ \(?p STL\(q P Deduction 1 There are two binary digits p and q. If P is turned into integer Ip, q is turned into integer Iq, and p /\\ q p, and Ip ? Iq Deduction 2 Let integer Ip express a spatial transaction STp, and let integer Iq express a spatial transaction STw If Iq Ip, and STp ct. STq Property 2 Let binary digit p express spatial transaction STp, and let binary digit q express spatial transaction STw Andp /\\ q =p,andSTL\(q/\\\(?p q P If STq is a frequent itemset, and STp is also a frequent itemset If STp is not a frequent itemset, and STq is not also a frequent itemset III. THE ALGORITHM OF MINING SPATIAL TOPOLOGY ASSOCIATION RULES A. Forming Mining Database In order to form mining database of spatial topology association rules, from original spatial database, we need turn spatial transaction into a digit. The course of turning used by the algorithm is described as follows Firstly, we define target object class 0 and non-target object class ik \(k=1...m target object class as 1= {iJ, i2 ... im}, and so each non-target object class h existing in spatial transaction has an order denoted by Nk If there is a kind of spatial topological relation as table I between entities of target object class and 


non-target object class Ik, obviously, according to definition 1 and 2, this spatial topological relation is able to be denoted by some Topological Relation Bit as table I. And then. we will put this Topological Relation Bit in No.k 10catlOn Finally, we will gain a binary digit with 3m bit According to this way, the algorithm will gain a digit by scanning every spatial transaction, and mining database is formed of these digits Now we save these digits by this data structure expressed as follows Structure spatial transaction Int Digit; I I saving digit expressed as spatial transaction Int Count; II saving the sum of same digit expressed as spatial transaction} ST Example, here is three entities of target objects class as OJ, O2 and 03, and non-target object class 1= {iJ, i2 ... is No.1 spatial transaction ST] is expressed as {touch \(OJ i2 0], i3 OJ, i4 000,010, 101, 111,000 namely, this integer 1390 may express ST ST [1 ].Digit= 1390, ST [1 ].Count= 1 No.2 spatial transaction ST2 is expressed as {contain \(02 i3 02, i4 000, 000, 10 111, 000 integer 366 may express ST2 ST [2].Digit=366, ST [2].Count=1 No.3 spatial transaction ST3 is expressed as {touch \(03 i2 03, i3 03, i4 000, 010, 10 1, 111, 000 namely, this integer 1390 may express ST3 As thIS information has been saved, we only add 1 to Count ST [1 ].Digit= 1390, ST [1 ].Count=2 B. The course of generating frequent topological item sets The course of generating frequent topological item sets is similar to Apriori, namely, according to down-top search strategy, the algorithm uses three stages to generate frequent topological item sets, which is expressed as follows Firstly, the algorithm computes all these I-topologIcal item sets, and gains all the I-frequent topological item set Secondly, the algorithm connects I-frequent topolOgIcal item sets to generate these entire 2-candidate frequent topological item sets 


Finally, the algorithm computes \(k+ I topological item sets, and generates all these \(k+l topological item sets \(k> 1 C. The method of computing support According to property 2, we know that the method of computing support is formed two steps as follows Let an integer Iq express a spatial transaction ST q, let another Ip express a candidate frequent item sets CSTp 103 Stepl , computing this value Ip /\\ Iq , if Ip /\\ Iq * Ip, we will know that CSTp ct ST q, namely, the spatial transaction ST q does not support candidate frequent itemsets CSTp. If Ip Iq = Ip, then going to step2 Step2, if STL{lq /\\ \(? Ip Ip CSTp C STq. And so we will know that the spatial transact?on ST supports candidate frequent itemsets CSTp. OtherwIse the q spatial transaction STq does not support candidate frequent itemsets CSTp D. The process of mining topology association rules According to the down-top search strategy of Apriori, the process of Inining topology rules is expressed as follows Step 1 , the algorithm computes all these I-topologIcal item sets, and gains all the I-frequent topological item sets Step2, the algorithm connects I-frequent topological i?em sets to generate these entire 2-candidate frequent topologIcal item sets Step3, the algorithm computes \(k+l topological item sets, and generates all these \(k+1 topological item sets \(k> I topologIcal Item sets Step5, according to confidence given by user, the algorithm computes all topology association rules IV. THE ANALYSIS AND EXPERIMENTAL RESULT OF ALGORITHM Nowadays, there are very little documents of research spatial topology association rules. Here we only present the capability and experimental result of the algorithm A. The Analysis of Capability The algorithm is suitable for mining short frequent 


topological item sets because it adopts down-top search strategy to generate candidate frequent topological item sets The algorithm realizes Inining spatial multilayer transverse association rules from spatial database because it compresses a kind of spatial topological relation to form a digit, namely it adopts an efficient data store of spatial topological relation compressing B. The experimental result of the algorithm Now we use experiment to prove above analyses. The mining algorithms denoted by MST AR is used to generate frequent topological itemsets from 6142 spatial transactions which are denoted by integer from I to 4095, the number of spatial non-target object class is denoted by m=4 These spatial transactions observe the discipline which is expressed as follows Spatial transaction denoted by 4095 has one instance Spatial transaction denoted by 4094 has two instances Spatial transaction denoted by 4093 has one instance Spatial transaction denoted by 4092 has two instances Our experimental circumstances are expressed as follows Intel\(R R language of the procedure is Visual C# 2005.NET, OS is Windows XP Professional The experimental result of the algorithms is expressed as Fig.2 and 3. The runtime of the algorithms is expressed as Fig.4 as length of frequent item sets changes iii The result of alRlng ellpeuaent \(;J IIni", O .. tab 1ST Absolutt Support o.t .. s .. 4095 SpttalObJtctsChu 4 Ilrllft\( Rnlll 0. lIt .. : idiljoint\(O,D I 1I0.2h,,:{oVlr1'flai,D lo.3It,,:{conhin\(D,D lIo.Ut .. :lcoyutd by\(D,D lIo.SIt .. : lilllidt{tl,D il 1Io.6h b.Th .. :1 b.Sh 1Io.9It 


h . . Oh Figure 2. The experimental result lIlac D .. ubnt II .... t. <liIJ  lIllD. D 1I . U.h It .... d,ID II. lith l ... trl..,G:l I.!.@L .J Figure 3. The experimental result _10000 I 1 8000 ?I ? MSTAR I :.: 6000 ? 4000 E .;; 2000 = O ?==L-?--?---L 1.5 2.5 2.75 3.25 3.5 3.75 Average Length Figure 4. The runtime of the algorithm as length changes 104 V. CONCLUSION This paper introduces an algorithm of mining spatial topology association rules based on Apriori, which uses spatial topological relation as example to present multilayer spatial association rules mining. The algorithm is suitable for mining short frequent topological item sets and realizes mining spatial multilayer transverse association rules from spatial database ACKNOWLEDGMENT This work was fully supported by science and technology research projects of Chongqing Education Commission Project No. KJ06l l Ol and KJ091 108 supported by science and technology research projects of Chongqing Three Gorges University \(Project No. l OQN-22 24 and 30 REFERENCES I] MA, R.H., PU, y.x., Ma, X.D.: GIS Spatial Association Pattern Ming. Science Press, 2007 Beijing 2] ZHANG X.W., SU, F.Z., SHI, Y.S., ZHANG, D.O.: Research on Progress of Spatial Association Rule Mining. Journal of Progress in Geography, voI.26\(6 3] LIU, Y.L., FANG, G.: The research and application of a transaction complement mining algorithm. Journal of Computer Engineering and Applications, vol. 44\(35 4] FANG, G., WEI, Z.K., YIN, Q.: Extraction of Spatial Association Rules Based on Binary Mining Algorithm in Mobile Computing. In IEEE Information Conference on Information and Automation, pp 1571-1575. IEEE press, 2008, China, Zhangjiajie 5] FANG, G., LIU, Y.L.: Application of Binary System Based Spatial 


Mining Algorithm in Mobile Intelligent Systems. Journal of Southwest University \(Natural Science Edition 1 99,2009 


Figure 5. Definition of Metric Discretization Levels 36 performance has no performance regression and can be included in the historical dataset for analysis of future tests V. CASE STUDY We conducted three case studies on two open source ecommerce applications and a large enterprise system. In each case study, we wanted to verify that our approach can reduce the amount of data a performance analyst must analyze and the subjectivity involved, by automatically reporting a list of potential problematic metrics We manually injected faults into the test scenarios of the two open source e-commerce systems. This allows us to assess our approach using the precision \(eqn. 4 eqn. 5 evaluation metrics 4 5 High precision and recall mean that our approach can accurately detect most performance problems. Performance analysts can reduce the effort required for an analysis by investigating the flagged metrics. Note that false positives are metrics that are incorrectly flagged \(they do not lead to a performance regression For the large enterprise system, we use the existing performance metrics collected by the Performance Engineering team as the input of our technique. We seek to compare the results generated by our approach against the performance analysts observations. In cases where our approach flagged more metrics than the performance analysts noted, we verify the additional problematic metrics with the organizations Performance Engineering team to determine if the metrics truly represent performance regressions. Since we do not know the actual number of performance problems, we can only provide the precision of our approach We use the average precision and recall to show the overall performance of our approach across all test scenarios for each system. Average precision and recall combine the precision eqn. 6 eqn. 7 t1,t2 , ,tk performance of our approach in each case study   


 6    7  Research Prototype: Our research prototype is implemented in Java and uses the Weka package [20] to perform various data-mining operations. The graphs in the performance analysis reports are generated with R [4 A. Studied System: Dell DVD Store System description: The Dell DVD Store \(DS2 application [3] is an open source simulation of an online ecommerce website. It is designed for benchmarking Dell hardware. DS2 includes basic e-commerce functionalities such as user registrations, user login, product search and purchase DS2 consists of a back-end database component, a Web application component, and driver programs. DS2 has multiple distributions to support different languages such as PHP, JSP or ASP and databases such as MySQL, Microsoft SQL server and Oracle. The load driver can be configured to deliver different mixes of workload. For example, we can specify the average number of searches and items per purchase In this case study, we have chosen to use the JSP distribution and a MySQL database. The JSP code runs in a Tomcat container. Our load consists of a mix of use cases including user registration, product search, and purchases Data collection: We collected 19 metrics as summarized in table 2. The data is discretized into 2-minute intervals. We ran 4 one-hour performance regression tests. The same load is used in tests A, B, and C. Our performance signatures are derived from Test A during which normal performance is assumed. For tests C and D, we manually inject faults into either the JSP code or the load driver settings to simulate implementation defects and performance analysts mistakes. The types of faults we injected are commonly used in other studies [13]. Prior to the case study, we derive a list of metrics that are expected to show performance problems, as summarized in Table 3. The Recall of our approach is calculated based on the metrics listed in Table 3  


TABLE II.     SUMMARY OF METRICS COLLECTED FOR DS2 Load Generator Processor Time Orders/minute Network Bytes Sent/sec Network Bytes Received/Sec Tomcat Processor Time Threads Virtual Bytes Private Bytes MySQL Processor Time Private Bytes Bytes written to disk/sec Context Switches/sec Page Reads/sec Page Writes/sec Committed Bytes In Use Disk Reads/sec Disk Writes/sec I/O Reads Bytes/sec I/O Writes Bytes/sec TABLE I.   AVERAGE PRECISION AND RECALL of Test Scenarios Duration per Test hours Size of Data per Test Avg Precision Avg Recall DS2 4 1 360 KB 100% 52 JPetStore 2 0.5 92 KB 75% 67 Enterprise System 13 8 4.5 MB 93% N/A  


37  Analysis of Test B: The goal of this experiment is to show that the rules generated by our approach are stable under normal system operation. Since Test B shares the same configuration and same load as Test A, ideally our approach should not flag any metric Our prototype did not report any problematic metric in Test B. The output is as expected, since Test B uses the same configuration as Test A and no performance bug was injected Analysis of Test C: In test C, we injected a databaserelated bug to simulate the effect of an implementation error This bug affects the product browsing logic in DS2. Every time a customer performs a search on the website, the same query will be repeated numerous times, causing extra workload for the backend database and Tomcat server Our approach flagged a database related metric \(# Disk Reads/sec Threads and # private bytes signaling that the metrics are violated during the whole test The result agrees with the nature of the injected fault: each browsing action generates additional queries to the database As a result, an increase in database transaction leads to an increase of # Disk Reads/sec. When the result of the query returns, the application server uses additional memory to extract the results. Furthermore, since each request would take longer to complete due to the extra queries, more threads are created in the Tomcat server to handle the otherwise normal workload. Since 3 out of 6 expected problematic metrics are detected, the precision and recall of our approach in Test C are 100% and 50% respectively Analysis of Test D: We injected a configuration bug into the load driver to simulate that a wrongly configured workload is delivered to the system. This type of fault can either be caused by a malfunctioning load generator or by a performance analyst when preparing for a performance regression test [14 In the case where a faulty load is used to test a new version of the system, the assessment derived by the performance analyst may not depict the actual performance of the system under test In Test D, we double the visitor arrival rate in the load driver. Furthermore, each visitor is set to perform additional browsing for each purchase. Figure 7 below shows the violated 


metrics reported by our prototype. The result is consistent with the nature of the fault. Additional threads and memory are required in the Tomcat server to handle the increased demand Furthermore, the additional browsing and purchases lead to an increase in the number of database reads and writes. The extra demand on the database leads to additional CPU utilization Because of the extra connections made to the database caused by the increased number of visitors, we would expect the # context switch metric in the database to be high throughout the test. To investigate the reason for the low severity of a databases context switch rate \(0.03 examined the rules flagged the # context switch metric. We found that the premises of most rules that flagged the context switch metric also contain other metrics that were flagged with high severity. Consequently, the premises of the rules that flagged # context switch are seldom satisfied resulting in the low detection rates of the # context switch metrics. Since 7 out of 13 expected metrics are detected, the precision and recall of our approach in this test are 100% and 54% respectively B. Studied System: JPetStore System description: JPetStore [1] is a larger and more complex e-commerce application than DS2. JPetStore is a reimplementation of Sun's original J2EE Pet Store and shares the same functionality as DS2. Since JPetStore does not ship with a load generator, we use a web testing tool to record and replay a scenario of a user logging in and browsing items on the site Data collection: In this case study, we have conducted two one-hour performance regression tests \(A and B performance signatures are extracted from Test A during which caches are enabled. Test B is injected with a configuration bug in MySQL. Unlike the DS2 case study where the configuration bug is injected in the load generator, the bug used in Test B simulates a performance analysts mistake to accidentally disable all caching features in the MySQL database. Because of the nature of the fault, we expect the following metrics of the database machine to be affected: CPU utilization, # threads context switches, # private bytes, and # I/O read and write bytes/sec Analysis of Test B: Our approach detected a decrease in memory footprint \(# private bytes sec in the database, and increase in # disk reads/sec and 


threads in the database. The I/O metrics include reading and writing data to network, file, and device. These observations align with the injected fault: Since the caching feature is turned off in the database, less memory is used during the execution of the test. In exchange, the database needs to read from the disk for every query submitted. The extra workload in the database  Figure 7. Performance Regression Report for DS2 Test 4 \(Increased Load TABLE III.     SUMMARY OF INJECTED FAULTS FOR DS2 Test Fault Injected Expected Problematic metric A No fault N/A B No fault No problem should be observed C Busy loop injected in the code responsible for displaying  item search results Increase in # I/O reads bytes /sec, and disk read/sec in database Increase in # threads, # private and virtual bytes, and CPU utilization in the Tomcat server D Heavier load applied to simulate error in load test configuration Increase in CPU utilization, # threads private and virtual bytes in the Tomcat server Increase in database CPU utilization disk reads, writes and I/O read bytes per second, and # context switches Increase in # orders/minute and network activities in the load generator 38 translates to a delay between when a query is received and the result is sent back, leading to a decrease in # IO write bytes/sec to the network Instead of an increase, an unexpected drop of the # threads was detected in the database. Upon verifying with the raw data for both tests, we found that the thread count in Test A \(with cache without cache 


and 21 respectively. Upon inspecting the data manually, we do not find that the decrease of one in thread count constitutes a performance problem and this is therefore a false positive Finally, throughout the test, there is no significant degradation in the average response time. Since 4 out of 6 expected problems are detected, our performance regression report has a precision of 75% and recall of 67 C. Studied System: A Large Enterprise System System description: Our third case study is conducted on a large distributed enterprise system. This system is designed to support thousands of concurrent requests. Thus, performance of this system is a top priority for the organization. For each build of the software, performance analysts must conduct a series of performance regression tests to uncover performance regressions and to file bug reports accordingly. Each test is run with the same workload, and usually spans from a few hours to a few days. After the test, a performance analyst will upload the metric data to an internal website to generate a time series plot for each metric. This internal site also serves the purpose of storing the test data for future reference. Performance analysts then manually evaluate each plot to uncover performance issues. To ensure correctness, a reviewer must sign off the performance analysts analysis before the test can be concluded. Unfortunately, we are bounded by a NonDisclosure Agreement and cannot give more details about the commercial system Data collection: In this case study, we selected thirteen 8hour performance regression tests from the organizations performance regression testing repository. These tests were conducted for a minor maintenance release of the software. The same workload was applied to all tests. In each test, over 2000 metrics were collected Out of the pool of 13 tests, 10 tests have received a pass status from the performance analysts and are used to derive performance signatures. We evaluated the performance of the 3 remaining tests \(A, B and C the performance analysts assessment \(summarized in table 4 In the following sections, we will discuss our analysis on each target test \(A, B and C Analysis of Test A: Using the history of 10 tests, our approach flagged all throughput and arrival rate metrics in the system. The rules produced in the report imply that throughputs 


and arrival rates should fall under the same range. For example component A and B should have similar request rate and throughput. However, our report indicates that half of the arrival rates and throughput metrics are high, while the other half is low. Our approach has successfully uncovered problems associated with the arrival rate and throughput in Test A that were not mentioned in the performance analysts report. We have verified our finding with a performance analyst. Our performance regression report has a precision of 100 Analysis of Test B: Our approach flagged two arrival rate metrics, two job queue metrics \(each represents one subprocess consulting with the time-series plots for each flagged metric as well as the historic range, we found that the # database scans/sec metric has three spikes during the test. These spikes are likely the cause of the rule violations. Upon discussing with a performance analyst, we find that the spikes are caused by the systems periodic maintenance and do not constitute a performance problem. Therefore, the # database scans/sec metric is a false positive. Our performance analysis report has a precision of 80 Analysis of Test C: Our approach did not flag any rule violation for this test. Upon inspection of the historical value for the metrics noted by the performance analyst, we notice that the increase of # database transactions/sec observed in Test C actually falls within the metric historical value range. Upon discussing with the Performance Engineering team, we conclude that the increase does not represent a performance problem. In this test, we show that our approach of using a historical dataset of prior tests is more resistant to fluctuations of metric values. Our approach achieves a precision of 100 The case studies show that our approach is able to detect problems in metrics when the faults are present in the systems Our approach detects problematic metrics with high precisions in all three case studies. In our case studies with the two open source systems, our approach is able to cover 50% and 67% of the expected problematic metrics VI. DISCUSSION AND FUTURE WORK A. Quantitive Techniques Although there are existing techniques [10, 11] to correlate anomalies with performance metrics by mining the raw performance data without discretization, these techniques 


usually assume the presence of Service Level Objectives \(SLO that can be used to determine precisely when an anomaly occurs. As a result, classifiers that predict the state of SLO can be induced from the raw performance data augmented with the SLO state information. Unfortunately, SLOs rarely exist during development. Furthermore, automated assignment of SLO states by analyzing metric deviations is also challenging as there could be phase shifts in the performance tests, e.g., the spikes do not align. These limitations prevent us from using classifier based techniques to detect performance regression TABLE IV.      SUMMARY OF ANALYSIS FOR THE ENTERPRISE SYSTEM Test Performance Analysts Report Our Findings A No performance problem found Our approach identified abnormal behaviors in system arrival rate and throughput metrics B Arrival rates from two load generators differ significantly Abnormally high database transaction rate High spikes in job queue Our approach flagged the same metrics as the performance analysts analysis with one false positive C Slight elevation of database transactions/sec. No metric flagged  39 B. Sampling period and Metric Discretization We choose the size of time interval for metric discretization based on how often the original data is sampled. For example an interval of 200 seconds is used to discretize data of the enterprise system, which was originally sampled approximately every 3 minutes. The extra 20 second gap is used because there was a mismatch in sampling frequencies for some metrics. We also experimented with different interval lengths. We found that less metrics are flagged as the length of the interval increases, while precision is not affected 


In our case studies, we found that the false negatives metrics that were expected to show performance regressions but were not detected by our approach no rule containing the problematic metrics was extracted by the Apriori algorithm. This was caused by our discretization technique sometimes putting all values of a metric that had large standard deviation into a single level. Candidate rules containing those metrics would exhibit low confidence and were thus pruned. In the future, we will experiment on other discretization techniques, such as Equal Width Interval Binning C. Performance Regression Testing Our approach is limited to detecting performance regressions. Functional failures that do not have noticeable effect on the performance of the system will not be detected Furthermore, problems that span across the historical dataset and the new test will not be detected by our approach. For example, no problem will be detected if both the historical dataset and the new test show the same memory leak. Our approach will only register when the memory leak worsens or improves D. Passed Tests The historical dataset from which the association rules are generated should contain tests that have the same workload configuration, preferably same hardware, and exhibit correct behavior. Using tests that contain performance problems will decrease the number of frequent item sets extracted, making our approach less effective in detecting problems in the new test. In our case study with the enterprise system, we applied the following measure to avoid adding problematic tests to our historical dataset We selected a list of tests from the repository that have received a pass status from the performance analyst We manually examined the performance metrics that are normally used by a performance analyst in each test from the list of past test to ensure no abnormal behavior was found E. System Evolution and Size of Training Data The system is often updated to support new environments or requirements. These updates may lead to changes in performance. A large variability in metric values will negatively affect the confidence of association rules generated 


in our approach. Therefore, it is necessary to update the set of tests included in the historical dataset. We are currently studying the effect of using a sliding window to select prior tests to include in the historical dataset. A sliding window allows us to automatically discard outdated tests that no longer reflect the current systems performance. However, the optimal size of the sliding window will likely be project-dependent since each project has different release frequency Alternatively, the historical dataset can also be derived from within the run. For example, the first hour of the current test can be used to derive performance signatures. Assuming that the system runs correctly during the first hour, the performance signature generated from this historical dataset will be useful to assess the stability of the system F. Hardware Differences In practice, performance regression tests of a system can be carried out on different hardware. Furthermore, third party components may change in between tests. In the future, we plan to improve our learning algorithm so that, given a new test, our tool will automatically select the tests from the repository with similar configurations G. Automated Diagnosis Our approach automatically flags metrics by using association rules that show high deviations in confidence between the new tests and the historical dataset. These deviations represent possible performance regressions or improvements and are valuable to performance analysts in assessing the system under test. Performance analysts can adjust the deviation threshold to restrict the number of rules used and, thus, limit the number of metrics flagged. Alongside with the flagged metrics, our tool also displays the list of rules that the metric violated. Performance analysts can inspect these rules to understand the relations among metrics. From our case study, we notice that some of the rules produced are highly similar. In the future, we will research for ways to merge similar rules to further condense information for performance analysts to analyze The association rules presented in our performance regression report represent metric correlations rather than causality. Performance analysts can make use of these correlations to manually derive the cause of a given problem VII. RELATED WORK 


Our goal in this work is to detect performance problems in a new test using historical data. Existing approaches monitor or analyze a system through one of two sources of historical data execution logs and performance metrics A. Analyzing Execution Logs Reynolds el al. [18] and Aguilera et al. [22] developed various algorithms for performance debugging on distributed systems. Their approach analyzes message trace of system components to infer the dominant causal paths and identify the components that account for a significant fraction of the systems latency. Unfortunately, the accuracy of the inferred paths decreases as the degree of parallelism increases, leading to low precision in identifying problematic components. Our approach is different from Reynoldss and Aguileras in that we pinpoint performance issues on the metric level rather than locating the system components that contribute significantly to system latency. Jiang et al. introduce a technique [14] to 40 identify functional problems in a load test from execution logs The authors extended this approach to analyze performance in scenarios as well as in the steps of each scenario [13]. Chen et al. proposed Pinpoint [21] to locate the subset of system components that are likely to be the cause of failures. Our work is different from Pinpoint in that Pinpoint focuses on identifying system fault rather than performance regression which can occur even when the system functions correctly In contrast to the above studies, which analyze execution logs, our approach analyzes performance metrics to identify performance problems B. Analyzing Performance Metrics Bondi [9] presented a technique to automatically identify warm-up and cool-down transients from measurements of a load test. While Bondis technique can be used to determine if a system ever reaches a stable state in the test, our approach can detect performance problems at the metric level Cohen et al. [11, 12] applied supervised machine learning techniques to induce models on performance metrics that are likely to correlate with observed faults. Bodik et al. improved Cohens work [8] by using logistic regression. Our approach is different from the above work as we do not require knowledge of violations of Service Level Objectives Jiang et al. proposed an approach [16] for fault detection 


using correlations of two system metrics. A fault is suspected when the portion of all derived models that report outliers exceeds a predefined threshold. Our approach is based on frequent item sets that can output correlations of more than two metrics. Performance analysts can leverage these metric correlations to better understand the cause of a fault. Jiang et al 15] proposed an approach to identify clusters of correlated metrics with Normalized Mutual Information as similarity measure. The authors were able to detect 77% of the injected faults and the faulty subsystems, without any false positives While the approach in [15] can output only the faulty subsystems, our approach can detect and report details about performance problems, including metrics that deviate from the expected behaviors VIII. CONCLUSIONS It is difficult for performance analysts to manually analyze performance regression testing results due to time pressure large volumes of data, and undocumented baselines Furthermore, subjectivity of individual analysts may lead to incorrect performance regressions being filed. In this paper, we explored the use of performance regression testing repositories to support performance regression analysis. Our approach automatically compares new performance regression tests to a set of association rules extracted from past tests. Potential performance regressions of system metrics are presented in a performance regression report ordered by severity. Our case studies shows that our approach is easy to adopt and can scale well to large enterprise system high precision ACKNOWLEDGMENT We are grateful to Research In Motion \(RIM access to the enterprise application used in our case study. The findings and opinions expressed in this paper are those of the authors and do not necessarily represent or reflect those of RIM and/or its subsidiaries and affiliates. Moreover, our results do not in any way reflect the quality of RIMs products REFERENCES 1] iBATIS JPetStore, http://sourceforge.net/projects/ibatisjpetstore 2] MMB3, http://technet.microsoft.com/enus/library/cc164328%28EXCHG.65%29.aspx 3] The Dell DVD Store, http://linux.dell.com/dvdstore 4] The R Project for Statistical Computing. http://www.r-project.org 5] R. Agrawal, R.Srikant, Fast Algorithms for Mining Association Rules 


in Large Databases, Proc. of 20th Intl Conf. Very Large Data Bases 1994 6] A. Avritzer and B. Larson, Load testing software using deterministic state testing, Proc. of Intl Symp. on Software Testing and Analysis 1993 7] A. Avritzer, E. J. Weyuker, The automatic generation of load test suites and the assessment of the resulting software, IEEE Trans. Softw. Eng 21\(9 8] P. Bodik, M. Goldszmidt, A. Fox, HiLighter: Automatically Building Robust Signatures of Performance Behavior for Small- and Large-Scale Systems, Proc. of the  3rd SysML, Dec 2007 9] A. B. Bondi, Automating the Analysis of Load Test Results to Assess the Scalability and Stability of a Component, Proc. of 33rd Intl CMG Conf., San Diego, CA, USA, Dec. 2-7, 2007 10] L.  Bulej, T.  Kalibera, P. Tuma, Regression Benchmarking with Simple Middleware Benchmarks,  Proc. of the 2004 IPCCC, 2004 11] I. Cohen, M. Goldszmidt, T. Kelly, J. Symons, J. S. Chase, Correlating instrumentation data to system states: A building block for automated diagnosis and control, Proc. of 6th OSDI, Dec. 2004 12] I. Cohen, S. Zhang, M. Goldszmidt, J. Symons, T. Kelly, A. Fox Capturing, indexing, clustering, and retrieving system history Proc. of the 20th ACM Symp. on Operating Systems principles, 2005 13] Z. M. Jiang, A. E. Hassan, G. Hamann, P. Flora, Automated Performance Analysis of Load Tests, Proc. of the 25th ICSM, Sept 09 14] Z. M. Jiang, A. E. Hassan, P. Flora, G. Hamann, Automatic Identification of Load Testing Problems, Proc. of the 24th Intl Conf on Softw. Maintenance, Sept 2008 15] M. Jiang, M. A. Munawar, T.  Reidemeister, P A.S. Ward, Automatic Fault Detection and Diagnosis in Complex Software Systems by Information-Theoretic Monitoring, Proc. DSN, Jun 2009 16] M. Jiang, M. A. Munawar, T. Reidemeister, P. A. S. Ward System Monitoring with Metric-Correlation Models: Problems and Solutions Proc. of the 6th Intl Conf. on Autonomic Computing, 2009 17] T. Kalibera, L. Bulej, P. Tuma, Automated Detection of Performance Regressions: The Mono Experience, 13th MASCOTS, 2005 18]  P. Reynolds, J. L. Wiener, J.C. Mogul, M. K. Aguilera, A. Vahdat WAP5: Black-box Performance Debugging for Wide-Area Systems Proc. of the 15th Intl World Wide Web Conf.s, 2006 19] E. J. Weyuker, F. I. Vokolos, Experience with performance testing of software systems: Issues, an approach, andcase study, IEEE Trans Softw. Eng., 26\(12 20] I. H. Witten, E. Frank, Data Mining: Practical Machine Learning Tools 


and Techniques, Morgan Kaufmann, June 2005 21] M. Y. Chen , E. Kiciman , E. Fratkin , A. Fox , E. Brewer, Pinpoint Problem Determination in Large, Dynamic Internet Services, Proc. of the 2002 Intl Conf. on Dependable Systems and Networks, June  2002 22] M. K. Aguilera , J. C. Mogul , J. L. Wiener , P. Reynolds , A Muthitacharoen, Performance debugging for distributed systems of black boxes, Proc. of the 19th ACM Symp. on Operating systems principles, Oct 2003 41 


DMITAR, Datasets Used Stock Data Stock Data Daily stock information provided by Yahoo finance Wth Dt W ea th er D a t a Provided by the US Department of Commerce and National Climactic Data Center for 700 locations across US Synthetic Data Provided by a CRU weather generator that uses a Markov chain model to generate simulated weather data for 11 UK sites Associative IDS for NextGen Frameworks Dr S Dua LA Tech 26 


DMITAR Results 1/5 Varying Support DMITAR Results 1/5 Stock Database Support FITI ITPMine PROWL DMITAR 14 6424.7s 132.39s 3.03s 5.556s 16 2348.9s 67.14s 2.14s 4.015s 18 861.92s 34.62s 1.55s 2.89s 20 334.51s 18.89s 1.12s 2.07s 22 143 84s 10 87s 0 87s 1 45s 22 143  84s 10  87s 0  87s 1  45s 24 63.62s 7.15s 0.671s 1.04s Weather Database Support FITI ITPMine PROWL DMITAR 14 36362.6s 893.1094s 5.843s 19.8281s 36362.6s 893.1094s 5.843s 19.8281s 16 11913.04s 378.2188s 3.8906s 13.4375s 18 4116s 170.3438s 2.75s 9.1406s 20 1507s 86.5781s 2.14s 6.203s 22 859.2813s 63.3438s 1.7969s 5.7656s 24 378.5313s 36.1875s 1.4375s 3.5625s Synthetic Dataset Support FITI ITPMine PROWL DMITAR 14 1651.6s 199.843s 3.1406s 17.015s 16 574 32 119 32 2 0938 10 875 16 574  32 s 119  32 s 2  0938 s 10  875 s 18 416.109s 95.31s 1.6094s 7.39s 20 370.25s 83.31s 1.453s 5.8438s 22 265.78s 66.3438s 1.3594s 4.75s 24 133.96s 43.0781s 0.9219s 3.5781s 


DMITAR Rlt  DMITAR  R esu lt s 2  5 Rules Formed Associative IDS for NextGen Frameworks Dr S Dua LA Tech 28 


DMITAR Rl  Varying Maxspan DMITAR  R esu l ts 3  5 Varying Maxspan Associative IDS for NextGen Frameworks Dr S Dua LA Tech 29 


DMITAR Res lts 4/5 Vig Di i DMITAR  Res u lts  4/5 V ary i n g Di mens i ons Associative IDS for NextGen Frameworks Dr S Dua LA Tech 30 


DMITAR Rl  Varying Number of Transactions DMITAR  R esu l ts 5  5 Varying Number of Transactions Associative IDS for NextGen Frameworks Dr S Dua LA Tech 31 


N/C t Rh N ew C urren t R esearc h Problem Domain Problem Statement and Challenges Associative Mining based IDS Associative Mining based IDS Introduction to data mining ii lid ii Assoc i at i on ru l e i n d ata m i n i ng DMITAR Algorithm  ARD h New Researc h Associative IDS for NextGen Frameworks Dr S Dua LA Tech 32 


Further Research Further Research Objectives of Our Intrusion Detection System Development Objectives of Our Intrusion Detection System Development 1 Refine and scale the DMITAR algorithm to suit our application 2 Develop methods for dynamically altering the sensor parameters Our Focus is Securing the NextGen Frameworks with New Technology Technology Associative IDS for NextGen Frameworks Dr S Dua LA Tech 33 


Simulated Sensing Environment Simulated Sensing Environment Screenshots of Data C ollected from S ynthetic Sensors Screenshots of Data C ollected from S ynthetic Sensors Simulated in Our Laboratory Three Steps Slides Collect data Collect data from all sources  all attributes  Select Select the source and their hierarchical attributes attributes to be monitored and Select Select the source and their hierarchical attributes attributes to be monitored  and Sample Sample them at different rates different rates and process them Associative IDS for NextGen Frameworks Dr S Dua LA Tech 34 


Data Collection Simultaneous collection of data screen from ENTITIES aircrafts Associative IDS for NextGen Frameworks Dr S Dua LA Tech 35 Source PRTG Network Monitor software screen shot Demo info www.paessler.com 


Parameter Selection Selection of an ENTITY/aircraft and monitoring its parameters and sensor readings Associative IDS for NextGen Frameworks Dr S Dua LA Tech 36 Source PRTG Network Monitor software screen shot Demo info www.paessler.com 


Sensor Sampling Selecting one sensor/probe and reading it at different resolutions or sampling rates Associative IDS for NextGen Frameworks Dr S Dua LA Tech 37 Source PRTG Network Monitor software screen shot Demo info www.paessler.com 


Si l ti Nt k Si mu l a ti on on N e t wor k Most scenarios can be simulated on a computer or computer network network  The aircrafts and sensors are simulated on a computer network bllb b y ana l ogica l su b stitutions Sensors provide information at different rates Sensors provide information at different rates Need Based Sensor Prioritization NSP and Dynamic Sensing Rate Sampling Associative IDS for NextGen Frameworks Dr S Dua LA Tech 38 


Vulnerability Search Scan 39 Sample UQA script with Nmap performed in DMRL Associative IDS for NextGen Frameworks Dr S Dua LA Tech 39 Source Nmap screenshot with a pearl script  Find Namp on Nmap.org 


Modality Aspect Modality Aspect A Multimodal distribution is a continuous probability distribution with two or more modes of underlying data Mltil d i M u lti p l e mo d es i n our model Associative IDS for NextGen Frameworks Dr S Dua LA Tech 40 Source http://en.wikipedia.org/wiki/File:Bimodal bivariate small.png 


Multi Modality Modality Fusion 41 SENSITIVE  UNCLASSIFIED For Official Use Only Associative IDS for NextGen Frameworks Dr S Dua LA Tech 41 


Emphasis Emphasis Our approach emphasizes on pre empting the attack Our intent is NOT to perform an autopsy to discover attacks Instead we aim to detect and prevent in attacks in real time Associative IDS for NextGen Frameworks Dr S Dua LA Tech 42 


Techniques for Discriminative Rules Techniques for Discriminative Rules Resolution Analysis Features Analyzed at Different Depths Anti Monotonic Principle Modality Aspect Treading into Unexplored Feature spaces Associative IDS for NextGen Frameworks Dr S Dua LA Tech 43 


Representative Outcomes Representative Outcomes Illustration of the Final Analysis Our method shifts between modalities and sampling rates for optimization The blue parallelograms are actual intrusions 44 The blue parallelograms are actual intrusions The Red Green Blue Plots are response of system Associative IDS for NextGen Frameworks Dr S Dua LA Tech 44 


Advantages of Our M ethod Advantages of Our M ethod Exploit the memory v ertical data format utilizes slidin g windows to g form a much larger database to analyze  Flexibility in Choosing what to choose  Choosing what to choose to build the rules Computational and memory efficiency We have a team working only on this aspect 45 Associative IDS for NextGen Frameworks Dr S Dua LA Tech 45 


Preliminary Results Intra transaction Relations Data rate simulator NH-134 Mb HOP PATH update \(Y/N Inference 11.5 Y Y 2 0.120 N N      Y   n 0.345 N NH134 Y/N   Inf 1 0.150 N N 2 0 120 Y N Inter transaction Relations 2 0  120 Y N       5 5.55 0.456 Y Relations  n 0.345 N N Nmap on DMRL nmap.org 


Anticipated Outcome Anticipated Outcome Develop algorithm capable of learning from a given heterogeneous diverse Develop algorithm capable of learning from a given heterogeneous diverse data ff Dynamic algorithmic f ramework designed to shi f t modalities and sampling rates based on complex logic Flexibility of integration into the Snort intrusion detection system 47 Associative IDS for NextGen Frameworks Dr S Dua LA Tech 47 


References References Aircraft Cockpit Image courtesy USAF http://www.faa.gov htt p   www.faa g ov  air traffic  technolo gy  p g  _ gy  Acharya R Dua S Du X Sree V Chua C K Automated Diagnosis of Glaucoma Using Texture and Higher Order Spectra Features To appear in IEEE Transactions on Information Technology in Biomedicine  Du X Dua S 2011 Cancer Prognosis Using Support Vector Regression in Imaging  Modality World Journal of Clinical Oncology 2  1   44 49 Du X Dua S 2010 Salient Frame Extraction Using Support Vector Regression and Motion Features pp 5 Proc of the National Aerospace and Electronics Conference July 14 16 2010 D M P D S 2010 Di i i ti Ft d Cl ifi ti Mthd f D essaue r  M  P  D ua S  2010  Di scr i m i na ti ve F ea t ures an d Cl ass ifi ca ti on M e th o d s f or Accurate Classification 1st ed vol 7704 pp 14 Bellingham WA Proceedings of SPIE Dessauer M P Dua S 2010 Low Resolution Vehicle Tracking using Dense and Reduced Local Gradient Features Maps 1st ed vol 7694 pp 8 Bellingham WA Proceedings of SPIE SPIE 


Acknowledgements Acknowledgements Fundin g A g encies  US 4 1 Million direct fundin g g g 4 g LA BoR NIH NSF AFRL AFOSR and NASA Research Team Samuel Kasimalla Brandy McKnight Dr Pradeep Chowriappa Connor Johnson Vasanth Nair Mihir Chowriappa  Connor Johnson  Vasanth Nair  Mihir Karnik Mohit Jain and Swadheen Songmen Associative IDS for NextGen Frameworks Dr S Dua LA Tech 49 All the respective Logos belong to their owners 


Rf d Rdi R e f erence d R ea di ngs Copyright of cover pages held by respective publishers 


Thank You Questions Thank You  Questions Dr Sumeet Dua E mail sdua@latech.edu Web http://dmrl.latech.edu Associative IDS for NextGen Frameworks Frameworks Dr S Dua LA Tech 51 Image Source roadtrafficsigns.com 


