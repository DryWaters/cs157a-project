Mining Cross-Modal Association Rules for Web Image Retrieval   Ruhan He 1 Naixue Xiong 2, 1 Tai-hoon Kim 3 and Yong Zhu 1  1 College of Computer Science, Wuhan Un iversity of Science and Engineering Wuhan, 430073, China 2 Department of Computer Science Georgia State University Atlanta, GA, 30303, USA 3  Division of Multimedia Engineering, Hannam University Daedeuk-gu, Daejeon, Korea heruhan@gmail.com, nxiong@cs.gsu.edu, taihoonn@empal.com   Abstract  To alleviate the known semantic gap, it is necessary to integrate the two-modal parts of web images, i.e. the low-level visual features and high-level semantic concepts \(which are usually represented by keywords for web image retrieval. In this paper, we associate the keyword and visual features of web images from a different prospective and a new approach based on the cross-modal association rules is proposed to automatically integrat e the keyword and visual features for web image retrieval. A customized mining process is developed for the special association rule that crosses the two modals of web images. The crossmodal association rule effectively associates the keyword and visual feature clusters, and seamlessly integrates the two modals of web images in retrieval process. The proposed approach is utilized successfully in a web image retrieval system named VAST VisuAl & SemanTic image search    1. Introduction  To effectively retrieve images in WWW, existing commercial engines, including Google image search Lycos, and AltaVista photo finder, etc., use text \(i.e surrounding words\ to look for images, without considering image content [2 co n t rast, trad itio n a l content-base image retrieval \(CBIR\ systems represented by QBIC ed to u tilize on l y  low-level  features such as color, texture, shape to retrieve similar images. In fact, the images on the Web are generally exposed as part of web contents. It has two-modal characteristics, i.e. textual and visual features, which bring information that are complementary and that can disambiguate each other   T h eref ore, a  w e b i m ag e s h ou ld be s p ecif i ed n o t only by the image itself, but also with respect to the web contents surrounding the imag Although efforts have been devoted to combine the two modalities, the semantic gap between them is still a huge barrier in front of researchers. The representative prior works to bridge the semantic gap in web image retrieval mainly focus on the Relevance Feedback \(RF\mechanism [5-7 d on li n e clus teri n g  method [8e v e r, t h e R F is rarel y e m plo y ed b y  web users due to the additional efforts of human interaction, and the online clustering method would dramatically increases the response time of the query Moreover, the online clustering method can not improve the retrieval effectiveness when only a few correct images are contained within topN results In this paper, we associate the keyword and visual features of web images from data mining prospective A new approach based on the cross-modal association rules is proposed here to automatically integrate keyword and visual features for web image retrieval The cross-modal association rule crosses two modals of web images and narrows the semantic gap in web image retrieval. It is successfully integrated into a web image search prototype system \(i.e. VAST system In the rest of this paper: Section 2 discusses the related works about the integration of the two modalities of web images. In Section 3, our proposed approach that mines the cross-modal association rules is described. In Section 4, we depict how the crossmodal association rules are exploited in our system Finally, we present our conclusion  2. Related works  To integrate the textual and visual information of web images and thus bridge the semantic gap, some 
International Symposium on Computer Science and its Applications 978-0-7695-3428-2/08 $25.00 © 2008 IEEE DOI 10.1109/CSA.2008.70 393 


research prototypes for web image retrieval that have emerged in recent years, such as WebMars ImageRov o rti n a [12 an d A tla s W I SE [6], etc  utilize the text and visual features together by the RF mechanism. However, according to the recent statistical analysis e b u s ers rarel y  m a k e  u s e of feedback to revise the search. Relevance feedback while just be effective in the real-life scenarios \(e.g web search\ rarely employed by web users due to the additional efforts of human interaction Some works use the online clustering method [8, 10 11 o in teg r ate th e k e yw ord an d v i s u al f e a t u r e w h ic h cluster the first keyword-based retrieval results by the visual features of image and thus automatic re-rank the results set. They increase the response time remarkably which affects the usability of the web system Moreover, the online clustering method can not improve the retrieval effectiveness when only a few correct images are contained within topN results From above works, little attention has been drawn to associating and fusing the two basic modalities of Web images by association rule mining technology despite it is extensively used in the CBIRs and the textbased search engines. Our approach realizes the integrated query from data mining prospective and overcomes the drawbacks of RF method and online clustering method  3. Mining cross-modal association rule  To discover the cross-modal association rule, we firstly quantize the visual features by clustering, then illustrate the cross-modal association in web images and finally give the mining process  3.1. Image clustering based on region features  To discover the cross-modal association, we aim to associate the keyword and visual feature clusters For the visual features, we obtain the average L*U*V color and three-level wavelet texture for each region of image. We use a fast image segmentation algorithm based on watershed algorithm and c-means algorithm. The number of the regions in an image is set to be 6. The EMD \(Earth Mover Distance\ used to compute the similarity of two images. The distance metric of two regions in EMD is Euclidean distance The EMD distance distribution of our region feature can be match with a known normal distribution 209  59 as Figure 1, which is based on the statistics of about 250,000 real web images randomly selected in the image collection of VAST system  K-Means is chosen to cluster each visual feature Based on the EMD distribution of the images, 100 such clusters are created initially \(the max radius of the cluster is set to be 2 which offer a good tradeoff between speed and accuracy. Because the distribution of the images over the clusters is very uneven, we partition the big cluster that is larger than a threshold T currently is 20,000\nto smaller clusters of about 10,000 images per cluster   0 100 200 300 400 500 0 1 2 3 4 5 6 7 8 x 10 3     EMD distance pdf   EMD pdf  Norm pdf   Figure 1  EMD distance distribution of region feature   3.2. Cross-modal association  Figure 2 shows an illustration of cross-modal association between keyword and visual feature clusters. The existing inverted file, which relates keywords to their associated images, builds the links   Web Image 1 Web Image N  Keyword 1  Keyword 2   Keyword M Feature 1 Feature 2      Cluster\(F1, 2   Cluster\(F1, L      Feature 1 Feature 2   Cluster\(F1, 1 Cluster\(F2, 1   Cluster\(F2, L    Cluster\(F2, 2  Figure 2  Cross-Modal Association between the keywords and images. Meanwhile, each image belongs to P visual feature clusters and then the links between the images and visual feature clusters are built. Based on the two links, we can easily abstract the association between the keywords and visual feature clusters. Therefore, we can find interesting association rules among these associations between the keywords 
394 


and visual feature clusters by data mining technology For example, in Figure 2 keyword 2 is possibly associated with the clusters with red dash-line \(i.e Cluster\(F1,2 and Cluster\(F2, L   3.3. Mining process  Based on the illustration in Figure 2, we give the mining process for cross-modal association rule as follows. Firstly, based on the keyword inverted index in our VAST system 1 a record of the keyword inverted index table I is defined as follows Q j image j i  k i=1,…, N j k=1,…,M j i   1  where Q j is one keyword and image j,i,k is one image that contains the keyword Q j and belongs to one web page W j,i Therefore W j i  image j i k k=1,…,M j i   2  Thus, formula \(1\be transformed as follows Q j W j i i=1,…, N j    3  where W j,i is the images containing keyword Q j and belonging to one web page. Considering the images with close size in the same web page always have semantic homogeneity and generally have some common keywords, we assume they belong to the same category For each image j,i,k we build an image-cluster table i.e. one image must belong to one cluster, and a record of the table is defined as follows image j i k C p    4  where C p is the cluster that the image j,i,k belongs to According to \(3\d \(4 the itemset of transaction T in database D is Q j C i i=1,…, m   5  where C i i=1,…, m are the clusters set.  Therefore many transactions can be deduced from one record of I  Only the itemsets containing at least one keyword and one visual cluster are considered. To satisfy the support-confidence framework, we define the support  and confidence of the association rule as follows supp\(Q j  Q j D   6  supp\(C i  C i D   7  where D\(Q j  is the set of images labeled with keyword Q j in database D  D\(C i  is the set of images in cluster Q i and D is the number of images in database D  Similarly supp\(Q j C i i=1,…, m p\(Q j C i i=1,…, m   8  conf\(Q j C i i=1,…, m p\(Q j C i i=1,…, m }\ /p\(Q j    9  The extended association rule generation algorithm is given by Table 1 based on A-priori algorithm and the above formulas. It is used to identify the frequent itemsets and generate strong association rules. Each superset of frequent itemsets with cardinality K  belongs to a set of candidate itemsets of size K i.e S K  Table 1   Cross-modal association rule generation algorithm In p ut Transaction Database D  Minimum Support Threshold min_supp  Output Frequent Itemset L  1  L 1  Q j  supp  Q j  min_supp   2  L 1  L 1  C i  supp\(C i   min_supp   3  L 2  Q j  C i  Q j  L 1  C i   L 1   supp  Q j  C i  min_supp   4  for K 3 L K-1    K o  5  S K  s k  s k  is K-itemset and a combination  of frequent sets from L K-1    6  for   D T   and   K k S s   do  7  if   T s k  do  8   supp  c k   supp  c k 1/|D  9   end if 10  end for 11   L K  c k supp c k _supp  12  end for 13   2 K K L L    14  return L  We can get the strong association rules like Q j C i i = 1, · · · ,m the algorithm in Table 1 with defining two thresholds, i.e min_supp and min_conf  Table 2 shows the characteristic of association rules distribution. It is interesting that the 1% series seems to have more items with higher confidence than 20% and 40%, while the 10% series seems to have confidence around 1%. Of course, the percentage of association rules decrease with the support and confidence increasing Table 2  The number of cross-modal association rules with the different min_supp and min_conf min_supp 0.01% 0.1% 1 10 conf>1% 101 1,306 123,861 8,798 conf>5% 0 120 22,409 1,425 conf>20% 0 0 17,820 68 conf>40% 0 0 12,414 7 Table 3 shows some examples of the cross-modal association rule. The C11 represents the cluster with ID 11, and the rest can be deduced by analogy Table 3 Examples of cross-modal association rules  cross-modal association rules support confidence Great Wall, C11, C34, C65 1.2 5.8 car, C22, C56 1.41 5.74 Great Wall, C65 3.8 36.8 
395 


 4. Retrieval by cross-modal association rule  We re-rank the initial keyword-based search results with the cross-modal association rules in VAST system  to m a ticall y  As to t h es e ru les co n t ai n i ng  k e yw ord  Q j have the same D\(Q j  and D in formula \(6\nd \(7 the clusters in these rules can be sorted by their  confidence  in descending  order. The query process can be defined as fellows 1  A user enters a query keyword Q j  2  Run the plain textual ranked boolean query based on the keyword-based inverted index and get the initial retrieved images result D\(Q j   3  Look up the association rules table, if there exist the association rules containing the keyword Q j  like the formula \(5\en go on; else go to step 9 4  According to the confidence  of these rules, we order the clusters in these rules containing keyword Q j by their confidence  5  For the top-N initial retrieved images in D\(Q j   the images in the cluster with the largest confidence ranks first, then subsequently the images in the cluster with the second largest confidence, and the same is valid for the rest 6  The images within a cluster are ranked by EMD distance to the cluster centroid in ascending order 7  The images not in these clusters are put in the last by their original order 8  Get the re-ranked results based on 5\6\d 7 9  Return the result to user It can be seen from above that, if exists the association rule for Q j the images that both are contained in the clusters in corresponding rules and include the keyword Q j have higher rank. Otherwise the query process reduces to pure keyword search  5. Conclusions  We use the data mining technique to discover the cross-modal association rules between keyword and region-based image visual feature clusters in VAST  web image retrieval system r m e th od  seamlessly integrates the keyword and visual cluster and overcomes the drawback of RF method and online clustering method  References  1  H  J i n  R  H e  Z  L i a o  W  T a o  a n d Q  Z h a n g   A  Flexible and Extensible Framework for Web Image Retrieval System Proceedings of ICIW'06 2006, pp 193-198 2 M. L  K h e r f i D  Ziou, a n d A  Be rna r di I m a g e Re trie v a l  From the World Wide Web: Issues, Techniques, and Systems ACM Computing Surveys 36\(1\, Mar. 2004 pp. 35-67  W  Ni b l ack R Bar b er W  E q ui t z  et al   T h e QBIC  project: Querying images by content using color, texture and shape," Proceedings of SPIE Storage and Retrieval for Image and Video Databases, Feb. 1994, San Jose CA, pp. 203-207 4 A   W  M. S m eu ld ers, M. W o rrin g S. San t i n i, et al  Content-Based Image Retrieval at the End of the Early Years IEEE Trans. on Pattern Analysis and Machine Intelligence 22\(12\, Dec. 2000, pp. 1349-1380 5 M. O. Bin d e r b erg e r, S. Meh r otra, K. Chakrabarti, et al WebMARS: A multimedia search engine," Proceedings of the SPIE Electronic Imaging 2000: Internet Imaging 2000, San Jose, CA, pp. 23-28 6  M. L  K h e r f i D  Zi ou a n d A  A ndbe r n a r di  A tla s WISE: A Web-based image retrieval engine Proceedings of ICISP'03, 2003, Agadir, Morocco, pp 69-77 7  S. S  Ma r c o L a C a s c ia a nd Sta n Sc la r o f f   C o m bining  Textual and Visual Cues for Content-based Image Retrieval on the World Wide Web," Proc. of IEEE Workshop on Content-based Access of Image and Video Libraries, Jun. 1998  G  P a rk Y Baek an d H K L ee  M aj o r i t y B a sed  Ranking Approach in Web Image Retrieval," Proc. of CIVR'03, 2003, pp. 111-120 9 A   T o m b ros, R. V illa  R., a n d C J. V  Rijsbe rg e n  T he  effectiveness of query specific hierarchic clustering in information retrieval Information Processing Management 38\(4\, 2002, pp. 559-582 10  H.-J. L i a n d J.-K. W a ng  P re c i se im a g e re trie v a l on the  web with a clustering and results optimization," Proc. of ICWAPR '07, Nov. 2007, Beijing, China, pp. 188-193 1 E  Ch en g F  Ji n g  C Z h an g  et al   S earch Resu l t  Clustering Based Relevance Feedback for Web Image Retrival," Proc. of ICASSP'07, Apr. 2007, Case Western Reserve Univ., Cleveland, OH, pp. 961-964 12  E. D G e la sc a  J. D. G u z m a n S  G a ug litz e t a l   CORTINA: Searching a 10 Million + Images Database," Proc. of VLDB'07, Sep. 2007, Vienna Austria 13  M. W  Berr y  P  W a n g an d Y. Yan g  M in in g  longitudinal Web queries: Trends and patterns J Amer. Soc. Inform. Sci. Tech 54, 2003, pp. 743-758  
396 


 then it is considered that flying support belongs to ITVL x  w hereas if the weight of flying support is more towards ITVL y it will be considered as ITVL y support. However, if t he weight of flying support is equal between two ITVLs we will assume that flying support belongs to the ITVL from where the sequential pattern flying support has started   Fig. 3.  Standard and Flying Support  I 1\. Valid Interval Definition After discussing the flying support concept valid interval can be defined as: an interval \(ITVL\ is valid with reference to a given sequential pattern SP, if it satisfies the user defined parameters SD SW within the said ITVL and one of the following conditions is true  267  Standard Support is 001 min_supp 267  Standard Support + Flying Support 001 min_supp 267  Flying Support 001 min_supp  C. Longest Interval \(Problem Definition The problem to mine all the longest intervals can be defined as \223Suppose we have a database of events D and a sequential pattern SP  along with all its user defined parameters and also the user defined granularity The problem is to discover all the longest intervals satisfying the min_ilen parameter for each cycle D 1 D 2 D 3 205.D n 224  I Framework to Discover Longest Intervals Due to the temporal and inter-transactional characteristics of sequential patterns it is recognised that longest interval discovery will be quite an expensive process Consequently  it is important to devise different t echniques, which can help to scan the minimum amount of the database during the mining process Keeping in view the above consideration we decompose the problem of longest interval discovery into four sub-problems These sub problems are basically set of valid intervals with different length  267  Strictly Loose Seed Interval \(SLSI 267  Loose Seed Interval \(LSI 267  Seed Interval \(SI 267  Longest Interval \(LI                               Fig. 4.  Framework to Discover Longest Intervals  T wo main search techniques the Interval Validation Process IVP and the Process Switching Mechanism PSM are introduced here for the discovery of all the longest intervals in each cycle. The main objective of IVP is to confront the complexities which emerge due to the sequential/temporal nature of sequential patterns whereas PSM is devised to increase the efficiency of the mining process by only scanning relevant intervals from the database  I.1.\  IVP \(Interval Validation Process During different stages of the longest interval discovery process, PSM passes the C ITVL Current Interval\ to IVP to v erify if the C ITVL is valid or not \(Fig 4\. IVP first checks t he validity of C ITVL by counting standard support and then i f required it also counts the flying support to check C ITVL  v alidation.  IVP utilises DSCP \(Dynamic Support Counting Process during the standard support counting process for each data sequence DSCP scans only the minimum number of required data-sets from the database in order to find the support of a given sequential pattern\. This process continues until the counted support of the given SP is equal to min_supp parameter and IVP returns \223valid\224 to PSM or there is no data sequence left in C ITVL to check \(IVP returns 223 invalid\224 to PSM If after checking the standard support IVP retains \223invalid\224 against C ITVL then the flying support c oncept needs to be explored \(Fig 4  Algorithm IVP \(Interval Validation Process\ for standard ITVL stage=s_supp indicate different stages of IVP  i=1  counter to fetch next record CS=0  current support of given SP  CR  current record C_Supp  calculated Support RR   remaining records TR   total records if stage=s_supp then  IVP is in standard support stage  LR_ID LR C ITVL     Fetch the last record ID  Loop ITVL Y  Standard Support Flying Support ITVL X  Time Line 


  CR Fetch_Rec C ITVL i\  //to fetch data sequence   C_Supp DSCP CR, SP SD,SW    if  C_Supp<>0 then   CS=CS+C_Supp i=i+1 Add C Seq_Id Seq_List     else     i=i+1 end if if CS 001 min_supp*TR\ then return\(\223valid\224 else if \( \(min_supp * TR\-CS > RR\ or \(i > LR_ID  i=0 Store CS,Data_Struc   stage=\224f_f_supp\224 exit end if  end if if stage=\224complete\224 IVP on C ITVL is complete  exit end if  Fig. 5.  IVP Algorithm for standard support   I Flying Support Discovery Flying support can exist on both sides of C ITVL  T herefore first certain portions of C ITVL  and N ITVL  Next I nterval have to be scanned to find flying support of the given SP. We can call this ITVL as FF ITVL Forward Flying I nterval However after checking the FF ITVL  if C ITVL  is s till invalid then certain portions of C ITVL  and P ITVL   Previous Interval\ have to be scanned as well; we call such ITVL as BF ITVL Backward Flying Interval\ \(Fig 6                                Fig. 6.  Flying Intervals  O nce the FF ITVL is created, the next step is to find pattern s upport in it. Upon finding the flying support for C ITVL IVP a ggregates the support against C ITVL  in the data structure  Table 1 This aggregation depends on the weight of the discovered flying support For example if 70 of the weight is in C ITVL then current support is aggregated with 0 7. The process continues until the min_supp parameter is satisfied or the algorithm scans the last data sequence of FF ITVL   D ata Structure of IVP ITVL ID  ITVL STATUS  SUPPORT STATUS  CYCLE CAL SUPPORT  C ITVL  Valid I nvalid Standard Flying Both Cycle of the C ITVL  C alculated Support  After scanning the FF ITVL  if the min_supp parameter is n ot satisfied, then IVP will count flying support in BF ITVL  O nce the BF ITVL is created, the next step is to count pattern s upport in it Upon finding the flying support IVP aggregates the support against C ITVL  This process c ontinues until the min_supp parameter is satisfied or the algorithm scans the last data sequence of BF ITVL   I 2.\ PSM \(Process Switching Mechanism The main aim of implementing PSM is to scan only those intervals ITVLs which can be part of any longest interval This is done by switching the discovery process into different modes forward mode backward mode and jumping mode Switching of process modes depends on different scenarios during the discovery of SLSI LSI SI and LI  Let us first discuss the definitions of each subproblem  Strictly Loose Seed Interval \(SLSI An interval is a SLSI Strictly Loose Seed Interval with reference to a given  sequential pattern if and only if it is a valid interval and satisfies both the following conditions  267  SLSI is not surrounded by immediate valid intervals 267  SLSI is not a part of any LSI, SI or LI  Loose Seed Interval LSI  An interval is loose seed interval \(LSI\ with reference to a given sequential pattern if and only if, it satisfies all of the following conditions  267  At least first and last ITVLs of potential seed interval are valid 267  The distance between first and last valid interval of LSI is equal to min_ilen parameter 267  There is not a single invalid ITVL between first and last ITVLs of LSI  Seed Interval SI An interval is considered as seed interval \(SI\ with reference to a given sequential pattern if the length of consecutive valid interval is equal to min_ilen parameter  Longest Interval \(LI The longest interval definition was presented in section 4.2 In Fig 7 the longest interval is depicted as LI=\(ITVL 17 ITVL 18 ITVL 19 ITVL 20 ITVL 21   I 2.1\  PSM \(Process Switching Mechanism\ Algorithm The PSM algorithm starts in forward mode by undertaking the first problem, that is to find SLSI \(Strictly Loose Seed Interval\.  It scans the first ITVL to check if it is a valid interval  If IVP discovers that C ITVL  Current I nterval\ is invalid then the process simply moves to N ITVL   Next Interval and this process continues until PSM discovers SLSI or the process reaches the last ITVL of the said cycle \(Fig 8-a                                   Fig. 7.  Different stages of longest ITVL  However, if C ITVL is recognised as valid interval it means 


 that we have found the first SLSI. Upon finding the SLSI PSM undertakes the second sub-problem discovery of LSI According to the definition of LSI for any LSI at least first and last ITVL of potential loose SI have to be valid therefore PSM jumps to the last interval of the potential loose seed interval. The reason for this jump is in the following property of longest interval  267  The longest interval cannot be less than min_ilen and every ITVL within the longest interval has to be valid ITVL  Hence, if we found that ITVL 8 is invalid then there is no n eed to check the ITVLs between ITVL 4  to ITVL 7  since t hey cannot be part of any longest interval \(Fig 8-b  After jumping to the last ITVL of potential LSI PSM again passes the C ITVL to IVP to check if the ITVL is valid o r not. If it is recognised that C ITVL is invalid then it means c urrent SLSI cannot be a part of any longest interval Therefore PSM switches to forward mode by moving to the N ITVL  Next Interval and the process of searching the n ext Strictly Loose Seed Interval \(SLSI\ continues \(Fig 8c\.  However, if C ITVL is valid at this stage, that means we h ave found the first LSI Upon discovering the LSI PSM confronts the third sub-problem discovery of SI To discover SI, PSM has to scan the remaining ITVLs between first and last ITVL of the already discovered LSI Therefore PSM switches into backward mode and scans the ITVL, which is one ITVL previous than the C ITVL Fig 8 d  Validation of C ITVL is checked by IVP again. If C ITVL is i dentified as valid interval then the process of discovering the seed interval will continue  PSM will remain in backward mode and moves to the previous ITVLs one by one to check the validity of different ITVLs This process continues until PSM reaches the already discovered valid interval or it encounters an invalid interval \(Fig 8-e  During the process of discovering SI, if PSM encounters an invalid ITVL at any stage, then it does not have to check the rest of the ITVLs of LSI \(as this LSI cannot be part of any LI\. In this scenario, PSM assigns a new value to SLSI that is the last valid interval identified by PSM in \(see Fig 8-f new SLSI is assigned with ITVL 7 Now the process of d iscovering the next LSI proceeds again. According to the definition of LSI for any LSI at least the first and last ITVLs have to be valid therefore PSM jumps to the last interval of the potential loose seed interval. How long this jump will be depends on the min_ilen parameter If PSM continues in backward mode and reaches the already discovered ITVL then it means we have found a consecutive set of valid intervals whose length is equal to the min-ilen parameter which is the definition of SI In that scenario PSM jumps to the first ITVL after the last ITVL of current SI and the discovery process of LI proceeds \(Fig 8-g\.  In the Longest Interval \(LI\ discovery process PSM switches to forward mode to check the validity of the C ITVL However, if the C ITVL is identified as v alid interval then the seed interval is extended by this C ITVL  This process continues until PSM encounters an i nvalid ITVL or PSM reaches the last interval of the data set. Once PSM encounters an invalid ITVL the process of extending the seed interval terminates. The discovered LI is stored in the data structure and the PSM algorithm proceeds to the search of the next SLSI Fig 9 As we have to discover all the longest intervals for each cycle, the process given in Fig 4 is recursive and it will continue until all the longest intervals of each cycle are found D.  PIDeriver Algorithm for Periodic Interval Discovery Once all the longest intervals for each cycle are discovered with the above motioned approach we can straightforwardly implement the PIDeriver algorithm presented by Chen in 1  t o  d e r i v e  a l l  t h e  p e r i o d i c  t i m e  intervals for a given sequential pattern              Fig. 9.  Discovery process for LI V  INCREMENTAL  DATA  MINING M ining periodicity for sequential patterns is a time consuming process Maintaining the already discovered periodic patterns in the updated database is very important since new data may invalidate some of the discovered periodic patterns and new periodic patterns may emerge due to new data Assuming that the cyclicity granularity and sequential pattern of interest remain the same the approach presented in this paper to discover periodic time intervals for a specific SP can be used for incremental mining of periodic time intervals as well  The approach presented in this paper divides the main problem of finding the periodic time intervals into two sub-problems finding the longest interval for each cycle and discovery of periodic intervals by using already discovered longest intervals of each cycle  Since the second problem is purely based on mining results of first problem the discovered longest intervals in the previous data mining efforts can be used in an incremental data mining process. During the incremental data mining process the algorithm will only focus on finding the longest intervals from new data. However, due to the temporal nature of sequential patterns some portion of the old database will be used as well, the size of this is directly proportional to the user defined parameter of SD Sequence Duration Since finding the longest interval involves most of the processing and complexity during the process of periodic time interval discovery this approach will benefit the incremental data mining quite significantly VI.GENERALISED  MODEL  FOR  FRAMEWORK T he Generalised model GN shows the discovery process of all data filtration transformation discovery of 


 all longest intervals for each cycle and periodic time intervals Transition Z 1  represents the filtration process of t he time stamped database The process of data transformation is represented by transition Z 2  and the data s egmentation by transition Z 3 Transitions Z 4 and Z 5 show r espectively the Process Switching Mechanism \(PSM\ and Interval Validation Process IVP Transition Z 1  has the f ollowing form  Z 1 l 1 l 2 l 4 l 3 l 4 r 1    l 3  l 4  r 1  l 1  false True  l 2  false True  l 4  W 4_3  W 4_4  W 4_3 223The process of data filtration has finished\224 W 4_4 254 W 4_3  P lace l 1  corresponds to the entrance point for the s tamped database in the GN It is represented by one 002  token which enters the input place with initial characteristic 223a stamped database\224  In place l 2  enters 003  t oken with initial characteristic 223time period \(TP\\224   The 002  token simultaneously with the 003 1  token passes t hrough transition Z 1  and enter place l 4  This place c orresponds to the process of filtration The two tokens merge and form one new token with initial characteristic the result of the united characteristics of the tokens On each transition activation the new token passes through the transition and enters again place l 4  extending its c haracteristic with the current results of the filtration process. After the process finishes the final token moves to place l 3 obtaining as a characteristic 223 filtered database\224 Transition Z 2 has the following form  Z 2  l 3  l 5  l 7  l 6  l 7  r 2    l 6  l 7  r 2  l 3  f  alse True   l 5  f  alse  True  l 7  W 7_6  W 7_7  W 7_6 223The process of data transformation has finished\224 W 7_6 254 W 7_7   T he description of transition Z 2 functioning is similar to t he one of transition Z 1 As a joint place between transitions Z 1  and Z 2  place l 3  do not need any addition explanations T he tokens from place l 3  pass through the transition and e nter place l 7  which corresponds to the process of data t ransformation Place l 5  is an entrance point for the p arameter giving the sequential pattern SP which is represented by one 004  token 004  token enters the net with initial characteristic 223sequential pattern\224 The tokens from places l 3 and l 5 pass simultaneously to place l 7 merge and o btain join characteristic. This characteristic is extended on every transition activation by the current results of the transformation process. After the process finishes the final token moves to place l 6 obtaining as characteristic 223 sequence database\224 The process of data segmentation consists of three consecutive stages splitting into user defined cycles division into user interested granules and granulation according to user defined sequence duration parameter. The form of transition Z 3 is the following  Z 3 l 6 l 8 l 9 l 10 l 12 l 13 l 14 l 11 l 12 l 13 l 14 r 3    l 11  l 12  l 13  l 14   l 6  false true false false  l 8  false true false false r 3  l 9  false false true false  l 10  false false false true  l 12  false W 12_12  W 12_13  false  l 13  false false W 13_13  W 13_14   l 14  W 14_11  false false W 14_14  W12_12  223The process of database division into user defined cycles has not finished\224 W12_13  254 W12_12 W13_13  223The process of database granulation has not finished\224, W13_14 = \254 W13_13, W14_11 = \223The process of database segmentation has finished\224 W14_14  254 W14_11  In places l 8  l 9  and l 10  enter respectively one 005   006  and 007  token with initial characteristics 223cyclicity interval  \(CY\\224  223granularity interval GR\\224 and 223sequence duration SD\\224   At the first activation of the transition the two tokens from places l 6 and l 8 pass simultaneously through it, merge i nto one new token and enter place l 12 At the beginning the n ewly created token obtains composite characteristic It extends its characteristic on every pass through the transition and entering into place l 12  with the current state o f the process of database division into user defined cycles After this process finishes the resulting token simultaneously with the 006 token from place l 9 pass through t ransition Z 3 and enter into place l 13 In this process the two t okens merge into one token with initial characteristic the composition of the characteristics of the parent tokens. Like in the previous case the resulting token enters place l 13  e xtending its characteristic with the current state of the process until a granulated database is obtained. On the next step the obtained token enters place l 14 simultaneously with t he 007 token from place l 10 The two tokens unite each other m erging their characteristics The newly created token passes through transition Z 3 and enters place l 14 until a final g ranulated database is obtained On each entrance into place l 14 the token extends its characteristic with the current s tate of the process of database final granulation. At the end of this process the token moves to place l 11  with a c haracteristic 223segmented database\224 Transition Z 4 has the f ollowing form  Z 3 l 6 l 8 l 9 l 10 l 12 l 13 l 14 l 11 l 12 l 13 l 14 r 3    l 11  l 12  l 13  l 14   l 6  false true false false  l 8  false true false false r 3  l 9  false false true false  l 10  false false false true  l 12  false W 12_12  W 12_13  false  l 13  false false W 13_13  W 13_14   l 14  W 14_11  false false W 14_14  


 W 12_12   223The process of database division into user d efined cycles has not finished\224 W 12_13 254 W 12_12  W 13_13  223 The process of database granulation has not finished\224 W 13_14   254 W 13_13  W 14_11   223The process of database s egmentation has finished\224 W 14_14 254 W 14_11   I n places l 8  l 9  and l 10  enter respectively one 005   006  and 007  token with initial characteristics 223cyclicity interval  \(CY\\224  223granularity interval GR\\224 and 223sequence duration SD\\224   At the first activation of the transition the two tokens from places l 6 and l 8 pass simultaneously through it, merge i nto one new token and enter place l 12 At the beginning the n ewly created token obtains composite characteristic It extends its characteristic on every pass through the transition and entering into place l 12  with the current state o f the process of database division into user defined cycles After this process finishes the resulting token simultaneously with the 006 token from place l 9 pass through t ransition Z 3 and enter into place l 13 In this process the two t okens merge into one token with initial characteristic the composition of the characteristics of the parent tokens. Like in the previous case the resulting token enters place l 13  e xtending its characteristic with the current state of the process until a granulated database is obtained. On the next step the obtained token enters place l 14 simultaneously with t he 007 token from place l 10 The two tokens unite each other m erging their characteristics The newly created token passes through transition Z 3 and enters place l 14 until a final g ranulated database is obtained On each entrance into place l 14 the token extends its characteristic with the current s tate of the process of database final granulation. At the end of this process the token moves to place l 11  with a c haracteristic 223segmented database\224 Transition Z 4 has the f ollowing form  Z 4  l 11  l 17  l 18  l 19  l 15  l 16  l 17  l 18  r 4    l 15  l 16  l 17  l 18    l 11  t  rue false  False  false   r 4  l 17  f  alse  W 17_16  W 17_17  false    l 18  false false W 18_17  true   l 19  f  alse false  True  false   W 17_16   223The process of data segmentation has f inished\224 W 17_17   254 W 17_16  W 18_17   223The PSM has to j ump minimum length parameter steps\224  Initially in place l 18 enters one b  token with initial characteristic 223minimum interval length \(min_ilen\\224   The already segmented database from place l 11 pass i nterval ITVL by interval through transition Z 4  to place l 15 The token from place l 11 passes directly to place l 15 for v alidity check without obtaining any new characteristics The b token moves simultaneously with one of the tokens in place l 19  to place l 17  obtaining as characteristic t he current state of the process of the longest interval LI finding\224  At the end of this process the resulting tokens move to place l 16 and merge with the tokens from the same interval o btaining characteristic 223segments of the longest interval\224 The form of transition Z 5 is  Z 5  l 15  l 19  r 5    l 19   r 5  l 15  t  rue  VII  CONCLUSION  AND  FUTURE  WORK I n this paper the problem of finding the periodic time intervals for a given sequential pattern is addressed The approach presented in this paper divides the main problem into two sub-problems finding the longest intervals for each cycle and discovery of periodic time intervals by using the already discovered longest intervals of each cycle Almost all the data processing and complexity is covered during the process of finding the longest intervals Moreover the second problem is purely based on mining results from the first problem.  Therefore, in this paper we mainly focused on the problem to find all the longest intervals for each cycle To confront the above problem efficiently, we introduced two main search techniques IVP Interval Validation Process\ and PSM \(Process Switching Mechanism\.  In this paper we have presented an effective mining approach for finding all the periodic time intervals for a given sequential pattern. As a future work the process presented in this paper can be extended to find periodic time intervals for all the given sequential patterns in one database scan However to accomplish this task a more complex data-structure/memory management technique needs to be implemented REFERENCES 1  X  Chen and I. Petrounias, Mining Temporal Features in Association Rules, Proc. of PKDD\22299, Prague, Czech Republic, pp.295-300 2  Ozden B Ramaswamy S and Silberschatz A  Cyclic Association Rules in Proceedings of the 14 th   International C onference on Data Engineering 1998 Orlando Florida USA IEEE Computer Society 3  Han, J., Pei, J., and Yin, Y., Mining Segment-Wise Periodic Patterns in Time-Related Databases in Proceedings of the 4 th   International C onference on Knowledge Discovery and Data Mining, 1998: AAAI Press, Menlo Park 4  Yang J Wang W and Yu P.S Mining asynchronous periodic patterns in time series data in Proceedings of KDD 2000 p 275279 5  Huang K.-Y and Change C.-H Asynchronous periodic patterns mining in temporal databases in Proceedings of the International Conference on Databases and Applications DBA'04 2004 Innsbruck, Austria 6  Huang K.-Y and Change C.-H  Mining Periodic Patterns in Sequence Data In Proceedings of the 6th International Conference on Data Warehousing and Knowledge Discovery DaWaK 2004 Zaragoza, Spain: Springer 7  Yang J Wang W and Yu P.S Mining Surprising Periodic Patterns, in Data Mining and Knowledge Discovery, 2004 8 p. 253273 8  Lin W Orgun M.A and Williams G.J  An Overview of T emporal Data Mining in Proceedings of the 1st Australian Data Mining Workshop, 2002  9  C  hen X and Petrounias I  A Framework for Temporal Data Mining, in Proceedings of 9 th International Conference on Database a nd Expert Systems Applications DEXA'98 1998 Vienna Austria: Spring 


 Fig. 8. PSM \(Process Switching Mechanism Move to N ITVL Next Interval 1 2 3 4 5 Time Line Invalid ITVL   a\  SLSI discovery process \(forward mode continues  Jump to 8 th ITVL min_ilen=6 1 2 3 4 5 Time Line 6 7 8 b SLSI found \(process in jumping mode  M o v e  t o  N I T V L  t o  f i n d  n e x t S L S I  p ro c e s s  s w i t c h  t o f o r w a r d m o d e  1 2 3 4 5 T i m e  L i n e L a s t  S L S I f o u n d 6 7 8 9 I n v a l i d I T V L  c \  SLSI found but C ITVL is invalid   Backward Mode 1 2 3 4 5 Time Line LSI found 6 7 8 9 Valid ITVL d  LSI is found and process switches into backward mode   Backward Mode 1 2 3 4 5 Time Line LSI found 6 7 8 9   e\  LSI found- Seed Interval Discovery Process 1 2 3 4 5 Time Line 6 7 8 9 Invalid ITVL SLSI is assign new value of ITVL 7 and the p rocess of searching next LSI proceed again 12 11 10 13  f\  PSM encounters invalid ITVL during the search of SI  1 2 3 4 5 T ime L ine 6 7 8 9 SI Fo u n d D isco v ery p ro c ess o f L I p ro c eed s  g\  SI is found and PSM proceed for the discovery of LI   


