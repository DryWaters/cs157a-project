Web Mining and its SQL based Parallel Execution Masaru Kitsuregawa, Takahiko Shintani Iko Pramudiono Institute of Industrial Science The University of Tokyo 7-22-1 Roppongi, Minato-ku Tokyo 106 Japan  kitsure,s hint ani iko t k1.iis.u tokyo ac j p 1 Abstract Web mining can be classified into two categories Web access log mining and Web structure mining We performed association rule mining and sequence 
pattern mining against the access log which was accumulated at NTT Software Mobile Info Search portal site Detail web log mining process and the rules we derived are re ported in this paper The parallel association rule min ing is explored on large scale PC cluster system Paral lelism is key to improve the performance We achieved substantial speed up through parallel SQL execution 1 Introduction The internet particularly the web has emerged as 
largest information pool available in the world How ever most of internet users still do not enjoy the ben efits since the wealth of information in the web are largely unstructured and unindexed Recent studies also show that the growth of web space is so dramatic by any measures The number of indexable home pages is approximated to reach 800 million pages by July 1999 and it keeps growing[l2 The same study in January 1998 only recorded 320 
million pages Therefore the research to provide web users bet ter information quality while stay scaled well with the growth of the web is one of the today hottest top ics The goal is to provide personalized information retrieval mechanism that match the need of each in dividual user 224One to one marketing\224 on the web also has similar objectives The development of the web personalization technologies will certainly benefit e-commerce too Most researchers agree that the goal can be accomplished by extracting 
the characteristics of the web and web users behavior The process in general is called web mining Thus web mining is the extraction of interesting and potentially useful patterns and implicit information from artifacts or activity re lated to web Web mining can be divided into two categories  1 Web usage mining Customization involves learning about an indi vidual user\222s preference/interests based on access patterns The access patterns can be obtained by mining the access log 
of a web site Thus customization aids in providing users with pages sites and advertisements that are of interest to them It may also be possible for sites to auto matically optimize their design and organization based on observed user patterns 2 Web structure mining Some approaches has been conducted to mine web structure Most of them take into account hyper link information and apply some techniques from graph theory Interesting concepts such as hubs and authority are Hyperlinks 
infor mation has been also used to rank search results[6 Here we report some of the web mining techniques based on association rule that can be accomplished by some modified SQL queries on relational database The integration of web with database techniques has drawn attention from researchers Some have proposed query languages for the web that is similar with SQL such as Squel[9 and WebSQL[5 They emphasize better organization of web data managed in relation database way We extend 
this concept for real applications of web mining We also address the performance problem by performing in parallel the execution of SQL queries on high cost performance PC cluster Nowadays even most of commercial RDBMS are already equipped with parallel processing ability In near future we can expect it will become a standard for RDBMS Although currently available massive par allel hardware are expensive the development of PC 128 0-7695-0960-6/01 10.00 0 2001 IEEE 


cluster using commodity PCs will make parallel pro cessing with RDBMS affordable choice for web mining application In this paper we focused on the mining access log using association rule discovery techniques We show some mining results from web log of Mobile Info Search\(M1S  a location-aware search engine Usage mining of this unique site could give some interesting insights into the behavior of mobile device users Although the amount of log at MIS is not so large generally at large portal site it tends to be very large The log can reach several tens of GB per day Just one day log is not enough for mining If we are going to use several weeks log then we have to handle more than one terabyte of data Single PC server cannot process such huge amount of data with reasonable amount of time 2 Web Usage Mining for Portal Site 2.1 Web Access Log Mining Access log of a web site records every user requests sent to the web server From the access log we can know which pages were visited by the user what kind of CGI request he submitted when was the access and it also tells to some extent where the user come from Using those information we can modify the web site to satisfy the need of users better by providing better site map change layout of the pages and the placement of links etc 13 has proposed the concept of adap tive web site that dynamically optimize the structure of web pages based on the users access pattern Some data mining techniques has been applied on web logs to predict future user behavior and to derive marketing intelligence[l7][7 SI Currently many e-commerce ap plications also provides limited personalization based on access log analysis Some pioneers such as Ama zon.com have achieved considerable success Here we will show the mining process of real web site We have collaborated with NTT Software to ana lyze the usage of a unique search engine called Mobile Info Search 2.2 Mobile Info Search\(M1S Mobile Info Search MIS is a research project con ducted by NTT Software Laboratory whose goal to provide location aware information from the internet by collecting structuring organizing and filtering in a practicable form[l4 MIS employs a mediator archi tecture Between users and information sources MIS mediates database-type resources such as online maps Figure1.AsnapshotofMobile Infosearchat http://www.kokono.net internet yellow-pages etc using Locataon Oriented Meta Search and static files using Location Oriented Robot-based Search Users input their location using address nearest station latitude-longitude or postal number If the user has a Personal Handy Phone\(PHS or Geo Positioning System\(GPS unit the user loca tion is automatically obtained The site is available to the public since 1997 Its URL is http://www.kokono.net In average 500 searches are performed on the site daily A snapshot of this site is shown in Figure 1 MIS has two main functionalities  1 Location Oriented Meta Search Many local information on the web are database type that is the information is stored in backbone database In contrast to static pages they are accessed through CGI program of WWW server MIS provides a simple interface for local informa tion services which have various search interfaces It converts the location information and picks the suitable wrapper for the requested service Exam ple of database-type resources provided are shown in table 1 2 Location-Oriented Robot-Based Search kokono 129 


Service Maps Yellow Pages Train Time Tables Weather Reports Hotel Guides I nearest station shop-cond=blank&submit-map Mapbnap-web=townpage rail-web=s-tranavi&station-web=ekimae&tv-web=tvguide HTTP/1.1 200 1389 http://www.kokono.net/mis2/mis2-header  Database-type resources On the In date=1999/01/01.00:27:59&address=Yamanashi-ken,Koufu-shi ternet Oosato-machi&NL=35.37.4.289&EL=138.33.45.315 station=Kokubo:Kaisumiyoshi:Minami-koufu:Jouei zip=400-0053&from=address&keyword shop-web=townpage shop-cond=blankbnap-web=townpage&station-web=&tv-web=tvguid Mozilla/4.O compatible MSIE 4.01 Windows 98 LastPoint=NL=35.37.4.289&EL=138.33.45.315 Search Location information used for the search 0000000003  01 1999:00:30:46 09001 longitude-latitude GET index.cgi?sel~st=O&NL=35.37.4.289&EL=138.33.45.315 address  and categories  etc station station=Kokubo:Kaisumiyoshi:Minami-koufu:Jouei address or region zip=400-0053&from=address&shop~web=townpage&keyword address=Yamanashi-ken,Koufu-shi,Oosato-machi kokono Search provides the spatial search that searches the document close to a location kokono" is a Japanese word means here kokono Search also employs robot to collects static doc uments from internet While other search engines provide a keyword-based search kokono Search do a location-based spatial search It displays doc uments in the order of the distance between the location written in the document and the user's location 3 Mining MIS Access Log and its De rived Rules 3.1 Preprocessing We analyzed the users searches from the access log recorded on the server between January and May 1999 There are 1035532 accesses on the log but the log also consists image retrieval searches without cookie and pages that do not have relation with search Those logs were removed Finally we had 25731 search logs to be mined 0 Access Log Format Each search log consists CGI parameters such as location information address, station zip location acquisition method from resource type submit the name of resource shopweb map-web, rail-web station-web, tu-web the con dition of search keyword shop-cond We treat those parameters the same way as items in trans action data of retail sales In addition we gen erate some items explaining the time of access access-week, access-hour  Example of a search log is shown in Figure 2 0 Taxonomy of Location Since names of places follow some kind of hier archy such as city is a part of prefecture or address=Yamanashi-ken,Koufu-shi,Oosato-machi station=Kokubo:Kaisumiyoshi:Minami-koufu:Jouei zip=400-0053 LastSelect=shop-web=townpage&shop-cond=blank keyword=&map-web=townpage&rail-web=s-tranavi station-web=ekimae&tv-web=tvguide Apache=l MIS=I I Figure 2 Example of anaccess log a town is a part of a city we introduce tax onomy between them We do this by adding items on part of CGI parameter address For example if we have an entry in CGI param eters entry address=Yamanashi-ken Koufu-shi 00-satomachi we can add 2 items as ancestors  address Yamanashi-ken Koufu-shi at city level and address=Yamanashi-ken at prefecture level In Japanese ken means prefecture and shi means city 0 Transformation to Transaction Table Finally we have the access log is transformed into transaction table ready for association rule min ing Part of transaction table that corresponds to log entry in Figure 2 is shown in Table 2 3.2 Association Rule Mining l first suggested the problem of finding association rule from large database An example of association rule mining is finding if a customer buys A and B then 90 of them buy also C in transaction databases of large retail organizations This 90 value is called confidence of the rule Another important parameter is support of an itemset such as A,B,C which is defined as the percentage of the itemset contained in the entire transactions For above example confidence can also be measured as support\({A,B,C divided by We show some results in Table 3 and 4 Beside com mon parameters such as confidence and support we also SUPPort\({A,B 130 


001 001 In Table 4 first three results show some correla tion between the time of searching and the conditions used for searching The last three results show how the method used by users to specify the location affects the what the search conditions a user might choose Relation LOG address=Yamanashi-ken Koufu-shi,Oosato-machi address=Yamanashi-ken station=Kokubo Kaisumiy0shi:Minami-koufu Jouei search conditions we can use this knowledge to infer zip=400-0053 from=address submitmap=Map map-web=townpage 1 Not so many good restaurants in Akihabara  keyword=][address=Tokyo station=Akihabara  shop-cond=restaurant J I In Hokkaido people looks for gasoline stand at night 1 I from its address  Table 2  Representation of access log in rela access_hour=20][address=Hokkaido,][from=address I shop-web=townpage j shop-cond=gasoline I People from Gifu-ken quite often searches tionaldatabase use user that indicate the percentage of users logs that contain the rule i.e number of users contain the rule divided by total number of users An user can have some sessions if the user accesses the web site several times and each session usually consists of several trans act ions When we set minimum support to 0.05  we got more than 1 million rules We used following heuristics to extract interesting rules  1 Put higher minimum confidence restriction to rules with low support 2 Remove item with small contribution to confidence of the rule If an item is removed from a rule and its confi dence is only degraded a little the item has little importance to the rule Those rules can be used to improve the value of web site We can identify from the rules some access pat terns of users that access this web site For example from the first rule in Table 3 we know that though Ak ihabara is a well known place in Tokyo for electronic appliances/parts shopping user that searches around Akihabara station will probably looks for restaurant From this unexpected result we can prefetch informa tion of restaurant around Akihabara station to reduce access time we can also provide links to this kind of user to make his navigation easier or offer proper adver tisement banner In addition learning users behavior provides hint for business chance for example the first rule tell us the shortcoming of restaurants in Akihabara area Other results in Table 3 show some specific be haviour of people at a certain area in Japan who use this site 1 for restaurants address=Gifu-ken shop-web=townpage  shop-cond=restaurant  However people from Gifu-ken search for I hotels on Saturdav I access-week=Satl[address=Gifu-ken I shop-web=townpage  shop-cond=hotel People from Gifu-ken must search for hotel around stations 1 address=Gifu-ken shop-web=townpage station=Kouyama  shop-cond=hotel Table 3 Some results ofMIS logminingwith regardto searchcondition r Most frequentsearches for restaurants around I I 16:OO if they start from address on Friday access-week=Fri  shop-cond=rest aurant 1  accesshour=16 r Most frequent searches for department store 1 I stand at 2O:OO if start from address  shop-cond=department laccesshour=201  1 Looking for gasoline stand on Sunday  from=address shop-cond=gasoline shop-web=townpage I Search for hotels often from station I if at Kanagawa-ken I address=Kanagawa-ken shop-cond=hotel  from=station I People at Osaka start searching convenience 1 stores from ZIP number  1 1 People at Hokkaido always search convenience stores from address address=Hokkaido shop-cond=conveni shop-web=townpage  from=address Table 4 Some results of MIS log mining with regard to time and location acquisition method 131 


3.3 Sequential Rule Mining 4.1 Association Rule Mining Based on SQL The problem of mining sequential patterns in a large database of customer transactions was introduced in 3 The transactions are ordered by the transaction time A sequential pattern is an ordered list sequence of itemsets such as 2235 of customers who buy both A and B also buy C in the next transaction\224 We show some sequential patterns that might be interesting in Table 5 When we set support to 0.1  we obtained 55000 sequence patterns Here support is the percentage of user sessions containing the pattern Some patterns indicate the behavior of users that might be planning to do shopping We can derive from second pattern that significant part of users check the weather forecast first, then they look for the shops in the yellow-pages service called 223Townpage\224 then look again for additional information in the vicinity with lcolcono Search and finally they confirm the exact loca tion in the map After finding a shop check how to go there and the weather submit shop=Shop Info  submit rail=Search Train t submitnewspaper=Newspaper submit-weather=Weather Forecast1 I Or decide the plan after checking the weather first submit-weather=Weather t submitshop=Shop  shop-web=townpage t submit_kokono=Kokono 5 IsubmitmaD=MaDI I Looking for shoDs after closing time I submitshop=Shop Info accesshour=22 access-week=Fri 3 submitmap=Map accesshour=22 access-week=Fri A common strategy to mine association rule is 1 Find all itemsets that have transaction support above minimum support usually called large item sets 2 Generate the desired rules using large itemsets Since the first step consumes most of processing time development of mining algorithm has been concen trated on this step In our experiment we employed ordinary standard SQL query that is similar to SETM algorithm[lO It is shown in Figure 3 Transaction data is normalized into the first normal form transaction ID item  In the first pass we simply gather the count of each item Items that satisfy the minimum support inserted into large itemsets table C-1 that takes form\(item, item count Then transaction data that match large itemsets stored in R-1 In other passes for example pass k we first gen erate all lexicographically ordered candidate itemsets of length k into table RTMPk by joining k-1 length transaction data Then we generate the count for those itemsets that meet minimum support and include them into large itemset table Ck Finally transaction data Rk of length k generated by matching items in candi date itemset table RTMPk with items in large item sets Original SETM algorithm assumes execution using sort-merge join Inside database server on our system relational joins are executed using hash joins and tables Table 5 Some results of sequential patternare partitioned over nodes by hashing As the result mining 4 Mining Web Log using RDBMS The ability to perform web mining using standard SQL queries is a next challenge for better integration of web and RDBMS The integration is essential since better management of web data has become a necessity for large sites The performance issue was a major problem for data mining with RDBMS Parallel execution of SQL can boost the execution of data mining queries How ever the problems with this approach are the cost of the hardware and also the degradation of performance when more processing nodes are used Our PC cluster has shown high cost performance ratio and good speed up ratio for some decision making applications[l5 We will show that parallel platforms such as PC cluster could also handle the task of web mining with suffi cient performance parallelization efficiency is much improved This ap proach is very effective for large scale data mining 4.2 Parallel Execution Environment and Perfor mance Evaluation The experiment is conducted on a PC cluster de veloped at Institute of Industrial Science The Uni versity of Tokyo This pilot system consists of one hundred commodity PCs connected by ATM network named NEDO-100 We have also developed DBKernel database server for query processing on this system Each PC has Intel Pentium Pro 200MHz CPU 4.3GB SCSI hard disk and 64 MB RAM The performance evaluation using TPC-D bench mark on 100 nodes cluster is reported[l5 The results showed it can achieve significantly higher performance especially for join intensive query such as query 9 com pared to the current commercially available high end systems 132 


140 I 120 100 80  I 60 CREATE TABLE LOG id int item int  PASS 1 CREATE TABLE C-1 item2 int cnt int CREATE TABLE R-1 id int item2 int INSERT INTO C-1 SELECT item AS item-1 COUNT FROM LOG GROUP BY item HAVING COUNT 7 minsupport INSERT INTO R-1 SELECT p.id p.item AS item1 FROM LOG p C-l c WHERE p.item  item-1  PASS k CREATE TABLE RTMPA id int item-1 int item2 int   item int CREATE TABLE CA item-1 int item2 int   item int cnt int CREATE TABLE RA item2 int   item int id int itkm-1 int INSERT INTO RTMPA SELECT p.id p.item-1 p.item2   FROM RA-1 p RA-1 q p.iteni-!-l q.itemA-1 WHERE p.id  q.id AND pitem-1  q.item-1 AND p.item2  q.item2 SOL 0.2 c SOL 0.3 x  SQL0.4  Apriori C 0.2  Apriori CO.3  Apriori C 0.4 o    AND p.itemA-2  q.item&-2 AND p.itemA-1 4 q.itemA-1 INSERT INTO CA SELECT item-1 item3  Item COUNT FROM RTMPA GROUP BY itenil. item2  item HAVING COUNT  minaupport INSERT INTO RA SELECT p.id p.item-1 p.item2 FROM RTMPA p CA c WHERE p.item-1  c.item-1 AND p.item2  c.item2 p.item AND p ten  c Item DROP TABLE RA-1 DROP TABLE RTMPA Figure 3 SQL query to mine association rule We show execution time of SQL query for associ ation rule mining with several minimum supports in Figure 4 The minimum supports are 0.2  0.3  and 0.4  We also varied the number of nodes  1 2 5 and 10 The data used here is synthetic transaction data generated with program described in Apriori al gorithm 2 to show that we can handle larger data with PC cluster The number of transactions here is 200000 We also show the result of directly coded Apriori-based C program on single node for reference The execution time for this sequential program are shown as dots on the down left of the figure The result is surprisingly well compared even with directly coded Apriori-based C program on single pro cessing node On average we can achieve the same level of execution time by parallelizing SQL based min ing with around 4 processing nodes 0 2 4 8 8 IO 12 mode5 Figure 4 Executiontime  I SdL 0.2 t SQL 0.3 E Ideal  SQL 0.4  1  7t 1 I J 0 4 6 8 10 12 des Figure 5 Speedup ratio The speedup ratio shown in Figure 5 is also rea sonably good although the speedup seems to be sat urated as the number of processing nodes increased Ideal line here is the optimal speedup we can achieve such as 10 times faster with 10 nodes As the size of the dataset assigned to each node is getting smaller processing overhead and also synchronizing cost that depends on the number of nodes cancel the gain 5 Summary The web has change some paradigms of information retrieval The challenge to provide satisfying answers from web queries faces problems from the chaotic na ture of web page generation the phenomenal growth of information on the web and the complexity of web structure The technology of web mining has showed promising results to improve the information retrieval quality from the web More sophisticated and complex web mining techniques will be inevitable for the future of web To support that we need powerful systems yet with reasonable cost We have shown that PC cluster 133 


has possibilities to be the platform for large scale web mining We have introduced some raw results of data mining on a portal site with focus on mobile users However we have not provided the evaluation of the quality of the results yet We believe that the quality of web mining techniques depends on the application The compari son with other techniques in certain applications such as prefetching and recommendation system will be one of our future work Acknowledgements We would like to thank people from NTT Software in particular Mr Katsumi Takahashi and Dr Atsuhiro Goto for providing the log file of MIS and helpful dis cussions References R Agrawal T Imielinski A Swami 224Mining Association Rules between Sets of Items in Large Databases\224 In Proc of the ACM SIGMOD Con ference on Management of Data 1993 R Agrawal, R Srikant 224Fast Algorithms for Min ing Association Rules\224 In Proc of the VLDB Con ference 1994 R Agrawal R Srikant 223Mining Sequential Pat terns\224 221In Proceedings of Int Conf on Data En gineering March 1995 R Srikant R Agrawal 223Mining Sequential Pat terns Generalizations and performance improve ments\224 221In Proceedings of 5th Int Conf on Ex tending Database Technology March 1996 G 0 Arocena A 0 Mandelzon G A Mihaila 223Applications of a Web Query Language\224 221In Pro ceedings of WWWG April 1997 S Brin L Page 223The Anatomy of a Large Scale Hypertextual Web Search Engine\224 In Proceedings of WWW7 May 1998 A Buchner M D Mulvenna 223Discovering inter net marketing intelligence through online analyti cal Web usage mining\224 In SIGMOD Record 4 1999 R Cooley B Mobasher J Srivistava 223Data preparation for mining World Wide Web browsing patterns\224 In Journal of Knowledge and Informa tion Systems 1 1999 9 E Spertus L A Stein 223Squel A Structured Query Language for the Web In Proceedings of WWW9 May 2000 lo M Houtsma A Swami 224Set-oriented Mining of Association Rules\224 In Proc of International Con ference on Data Engineering March 1995 ll J Kleinberg 223Authoritive sources in s hyper In Proceedings of ACM linked environment\224 SIAM Symposium in Discrete Algorithm 1998 12 S Lawrwence L Giles 224Accessibility of informa tion on the web\224 In Nature Vol 400 pp 107-109 1999 E131 M Perkowitz 0 Etzioni 223Towards Adaptive Web Sites Conceptual Framework and Case Study\224, In Proceedings of WWW8 May 1999 14 Katsumi Takahashi Seiji Yokoji Nobuyuki Miura 224Location Oriented Integration of Internet Infor mation  Mobile Info Search\224 In Designing the Digital City Springer-Verlag, March 2000 15 Takayuki Tamura Masato Oguchi and Masaru Kitsuregawa 223Parallel Database Processing on a 100 Node PC Cluster Cases for Decision Sup port Query Processing and Data Mining\224 In Pro ceedings of SC97 High Performance Networking and Computing\(SuperComputing 22297 November 1997 16 S Thomas S Sarawagi 223Mining Generalized Association Rules and Sequential Patterns Using SQL Queries\224 221In Proceedings of Int Conf on Knowledge Discovery and Data Mining March 1998 17 T Yan M Jacobsen H Garcia-Molina U Dayal 223From user access patterns to dynamic hypertext linking\224 In Proceedings of WWW5 May 1996 134 


267  Feature dimensions  on which the generated rules may be dimensioned such as merchant, time and area  A volume cube C v is sufficient for deriving the instances of rule X 336 Y if it has a base dimension that represents the base of the rule, and the association conditions for qualifying X 331 Y are definable on C v For deriving cross-sale association rules from cube SaleUnits an association condition can be  for each base and feature dimension C v product A\ > 0 331 C v product B\ > 0 If the association conditions used to compute multidimensional P X  307 P Y  are definable on C v then another kind of condition, called antecedent conditions that are used to compute multidimensional  P X    are also definable on C v such as  for each base and feature dimension C v product A\ > 0 Association cube The association cube C a  for rule X 336 Y gives a volume-based measure of multidimensional association relationships that are computed from the volume cube C v and is used to derive the confidence cube and the support cube of association rules. More exactly, it maintains dimensioned P X 307 P Y i.e the number of base elements that satisfy X 331 Y Usually C a is dimensioned differently from C v In the cross-sale association rule example, the association cube is defined as  CrossSales product, product2, customer_group, merchant time, area  A cell of this cube, CrossSales product 221A\222 product2 221B\222  customer_group \221 engineer\222 merchant 221Sears\222 time 221Jan98\222 area 221Los Angeles\222\eans that there are 4,500 customers who are engineers, who bought item A as well as item B, at a Sears store in Los Angeles in Jan98 For an association cube the item dimensions underlie the counts for deriving association rules, such as dimensions product and product2 for the above CrossSales cube. The dimension product2 has the same set of values as product and we call it the mirror dimension  of product We introduce a mirror dimension simply because the cross-sale association rule involves more than one element of the item dimension  The base dimension   such as the customer dimension  underlies the base of rules. Unlike the volume cube, the association cube does not necessarily have to be dimensioned by the base dimension However, we can dimension rules by a derived dimension, each value of which identifies a group of base dimension values at bottom levels. In the cube CrossSales shown above, we introduce the hierarchical dimension customer_group   which has levels customer_profession\222, \221customer_category\222 and 'top'. A relation is also defined for relating customers and customer groups. For example, a value of the derived customer_group dimension, say, \223engineer\224, is used to identify a group of individual customers who are engineers  An association can cube also have underlying feature dimensions  such as merchant, time and area Population cube and base cube The population cube C p and the base cube C b for rule X 336 Y are also derived from the volume cube C v  C p is used to measure dimensioned P X i.e the numbers of base elements satisfying X  C b is used to represent dimensioned B For the above cross-sale rules, the population cube is defined as NumOfBuyers \(product, customer_group, merchant, time area A cell of this cube NumOfBuyers product 221A\222 customer_group \221 engineer\222 merchant 221Sears\222 time 221Jan98\222 area 221Los Angeles\222  10000  means that there are 10,000 customers who are engineers, and who bought item A in Los Angeles in Jan98. The base cube is defined as  NumOfShoppers \(customer_group, merchant, time, area Note that NumOfShoppers is not aggregated from NumOfBuyers as a single customer may buy multiple products Confidence cube and support cube The confidence of rule X 336 Y defined as P X 307 P Y  P X  and the support, defined as P X 307 P Y B are represented as cubes C f  and C s  C f  is derived from C a and C p and C s is derived from C a  and C b They have the same dimensions as C a For the above cross-sale rules the confidence cube and support cube are defined as  Confidence \(product, product2, customer_group, merchant time, area   Support  product, product2, customer_group, merchant time, area Figure 2 shows the cubes related to cross-sale association rules, with one slice of each cube. The volume-cube is generated from transactions; the 


association-cube, base-cube and population-cube are derived from the volume cube; the confidence-cube is derived from the association cube and population cube and the support-cube is derived from the associationcube and base-cube. The slices of these cubes shown in Figure 2 correspond to the same list of values in dimension merchant, time, area and customer_group  Multidimensional and multilevel rules Representing association rules by cubes and underlying cubes by hierarchical dimensions, naturally supports multidimensional and multilevel rules. Also these rules are well organized and can be easily queried  First, the cells of an association cube with different dimension values are related to association rule instances in different scopes. In the association cube CrossSales cell CrossSales product \221A\222, product2 \221B\222  customer_group 221engineer\222, merchant \221Sears\222, area \221Los Angeles\222, time 221Jan98\222 represents the following multidimensional rule x 316 Customers: buy_product\(x, \221A\222 336 buy_product\(x,\221B\222  275 customer_group = \221engineer\222, merchant = \221Sears\222, area 221Los  Angeles\222, time =  \221Jan98\222 If this cell has value 4500, and the corresponding cell in the population cube has value 10000, then this rule has confidence 0.45 Next as the cubes representing rules can have hierarchical dimensions, they represent not only multidimensional but also multi-level association rules. For example, the following cells CrossSales\(product \221A\222, product2 \221B\222, customer_group 221engineer\222, merchant \221Sears\222, area \221 California 222, time 221Jan98\222 CrossSales\(product \221A\222, product2 \221B\222, customer_group 221engineer\222, merchant \221Sears\222, area \221 California 222, time 221 Year98 222 represent association rules at different area levels \(i.e the city level and the state level\d different time levels \(i.e., the month level, the year level x 316 Customers: buy_product\(x, \221A\222 336 buy_product\(x, \221B\222  275 customer_group = \221engineer\222, merchant =  \221Sears\222, area 221 California 222, time =  \221Jan98\222 x 316 Customers: buy_product\(x, \221A\222 336 buy_product\(x, \221B\222  275 customer_group = \221engineer\222, merchant =  \221Sears\222, area 221 California 222, time =  \221 Year98 222 The cell CrossSales\(product \221A\222, product2 \221B\222,  customer_group 221top\222, merchant \221top\222, area \221top\222,  time \221top\222 represents the customer-based cross-sale association rule for all customers, merchants, areas, and times in the given range of these dimensions, expressed as x 316 Customers: buy_product\(x, \221A\222 336 buy_product\(x, \221B\222 4.3  Generating Association Rule Related Cubes The basic task of our OLAP based association rule mining framework, either at the GDOS or at an LDOS is to convert a volume cube i.e. the cube representing the purchase volumes of customers dimensioned by product  area etc, into an association cube a base cube and a population cube These cubes are then used to derive the confidence cube and the support cube of multidimensional association rule instances. The following general steps are involved in cross-sale association rule mining 267  Roll up the volume cube SaleUnits by aggregating it along merchant, time, area dimensions 267  Derive cube NumOfBuyers from SaleUnits based on the antecedent condition SaleUnits 0 267  Populate cube NumOfShoppers by the counts of customers dimensioned by merchant, area  time not by product\at satisfy the antecedent conditions 267  Derive cube CrossSales from SaleUnits based on the association conditions SaleUnits  product  p 1  0 and SaleUnits  product2  p 2 0 267  Derive cube Confidence and cube Support using cell-wise operations 214  Confidence = CrossSales  NumOfBuyers 214  Support  CrossSales  NumOfShoppers  Cubes Confidence  Support  CrossSales are dimensioned by product  product2 customer_group,merchant  time, area NumOfBuyers is dimensioned by product  customer_group, merchant time, area  NumOfShoppers is dimensioned by customer_group, merchant  time, area Rules with confidence and support that exceed specified thresholds  may be considered interesting 4.4. Rules with Conjoint Items Cubes with conjoint dimensions can be used to represent refined multidimensional association rules For example, using OLAP, we can derive association rules across time  Time-variant or temporal association rules such as 


x 316 Customers buy_product\(x,\222 A\222, \221 Jan98\222  336 buy _product\(x, \221B\222, \221 Feb98\222   275 area = \221Los Angeles\222 can be used to answer such questions as \223 How are  the sales of B in Feb98  associated with the sales of A in Jan98 224 The items in this rule are value pairs of dimensions product and time In order to specify this kind of association rule we introduce a conjoint dimension product, time and mirror it with dimension product2, time2 This allows a cell in the association cube to cross two time values. Accordingly, the cubes related to association rule mining are defined as follows Association cube  CrossSales.2 \(<product, time>, <product2, time2 customer_group, merchant, area  Population cube  NumOfBuyers.2  \(<product, time>, customer_group merchant, area Base cube  NumOfShoppers.2  \( customer_group, merchant, area Confidence cube Confidence.2 \(<product, time>, <product2, time2 customer_group, merchant, area Support  cube  Support.2  product, time>, <product2, time2 customer_group, merchant, area  The steps for generating these cubes are similar to the ones described before. The major differences are that a cell is dimensioned by, besides others product, time and product2, time2 and the template of the association condition is  SaleUnit s  product p 1 time t 1  0 and  SaleUnits  product2 p 2 time2 t 2  0 where, in any instance of this condition, the time expressed by the value of time2 is not contained in the time expressed by the value of time The template of the antecedent condition is SaleUnits   product p 1 time t 1  0 In general, other dimensions such as area may be added to the conjoint dimensions to specify more refined rules 4.5. Functional Association Rules A multidimensional association rule is functional if its predicates include variables, and the variables in the consequent are functions of those in the antecedent.  For example, functional association rules can be used to answer the following questions, where a_month and a_year are variables q  What is the percentage of people in California who buy a printer in the next month after they bought a PC x 316 Customer buy_product\(x, \221PC\222, a_ month 336 buy_product\(x, \221printer\222, a_month+1  275 area = \221California\222 q  What is the percentage of people who buy a printer within the year when they bought a PC  x 316 Customer: buy_product\(x, \221PC\222, a_ year 336 buy_product\(x, \221printer\222, a_year 275 area = \221California\222 To be distinct, we call the association rules that are not functional as instance association rules; e.g x 316 Customer: buy_product\(x,\222 PC\222, \221Jan98\222 336 buy_product\(x,\222 printer\222, \221Feb98\222  275 area =  \221California\222 Time variant, functional association rules can be derived from time variant, instance association rules through cube restructuring. Let us introduce a new dimension time_delta that has values one_day, two_day 205, at the day level, and values one_month, two_month, \205, at the month level, etc. Then, let us consider the following functional association rule related cubes Association cube  CrossSales.3 \(product, product2, customer_group merchant, area, time_delta  Population cube  NumOfBuyers.3 \(product, customer_group, merchant area Base cube  NumOfShoppers.3 \( customer_group, merchant, area Confidence cube  Confidence.3 \(product, product2, customer_group merchant, area, time_delta Support cube  Support.3 \(product, product2, customer_group, merchant area, time_delta The association cube CrossSales.3  can be constructed from CrossSales.2   The cell values of CrossSales.2  in the selected time and time2 ranges are added to the corresponding cells of CrossSales.3 For example, the count value in cell  CrossSales.2\(<PC, Jan98>, <printer, Feb98>\205 is added to cell \(bin CrossSales.3\(PC, printer, one_month,\205 


It can also be added to cell CrossSales.3\(PC, printer one_year,\205 5  Distributed and Incremental Rule Mining There exist two ways to deal with association rules 267  Static that is, to extract a group of rules from a snapshot, or a history, of data and use "as is 267  Dynamic that is, to evolve rules from time to time using newly available data We mine association rules from an e-commerce data warehouse holding transaction data. The data flows in continuously and is processed daily Mining association rules dynamically has the following benefits 267  223Real-time\224 data mining, that is, the rules are drawn from the latest transactions for reflecting the current commercial trends 267  Multilevel knowledge abstraction, which requires summarizing multiple partial results. For example association rules on the month or year basis cannot be concluded from daily mining results. In fact multilevel mining is incremental in nature 267  For scalability, incremental and distributed mining has become a practical choice Figure 3: Distributed rule mining Incremental association rule mining requires combining partial results. It is easy to see that the confidence and support of multiple rules may not be combined directly. This is why we treat them as \223views\224 and only maintain the association cube, the population cube and the base cube that can be updated from each new copy of volume cube. Below, we discuss several cases to show how a GDOS can mine association rules by incorporating the partial results computed at LDOSs 267  The first case is to sum up volume-cubes generated at multiple LDOSs. Let C v,i be the volume-cube generated at LDOS i The volume-cube generated at the GDOS by combining the volume-cubes fed from these LDOSs is 345   n i i v v C C 1  The association rules are then generated at the GDOS from the centralized C v  214  The second case is to mine local rules with distinct bases at participating LDOSs, resulting in a local association cube C a,I a local population cube C p,I  and a local base cube C b,i at each LDOS. At the GDOS, multiple association cubes, population cubes and base cubes sent from the LDOSs are simply combined, resulting in a summarized association cube and a summarized population cube, as 345   n i i a a C C 1   345   n i i p p C C 1  and 345   n i i b b C C 1  The corresponding confidence cube and support cube can then be derived as described earlier. Cross-sale association rules generated from distinct customers belong to this case In general, it is inappropriate to directly combine association cubes that cover areas a 1 205, a k to cover a larger area a In the given example, this is because association cubes record counts of customers that satisfy   customer product merchant time area Doe TV Dept Store 98Q1 California Doe VCR Dept Store 98Q1 California customer product merchant time area Doe VCR Sears 5-Feb-98 San Francisco Joe PC OfficeMax 7-Feb-98 San Francisco customer product merchant time area Doe TV Fry's 3-Jan-98 San Jose Smith Radio Kmart 14-Jan-98 San Jose Association   population      base          confidence      support cube               cube                cube         cube                cube LDOS LDOS GDOS 


the association condition, and the sets of customers contained in a 1 205, a k are not mutually disjoint. This can be seen in the following examples 214  A customer who bought A and B in both San Jose and San Francisco which are covered by different LDOSs , contributes a count to the rule covering each city, but has only one count, not two, for the rule A  336  B covering California 214  A customer \(e.g. Doe in Figure 3\who bought a TV in San Jose, but a VCR in San Francisco, is not countable for the cross-sale association rule TV  336 VCR covering any of these cities, but countable for the rule covering California. This is illustrated in Figure 3 6  Conclusions In order to scale-up association rule mining in ecommerce, we have developed a distributed and cooperative data-warehouse/OLAP infrastructure. This infrastructure allows us to generate association rules with enhanced expressive power, by combining information of discrete commercial activities from different geographic areas, different merchants and over different time periods. In this paper we have introduced scoped association rules  association rules with conjoint items and functional association rules as useful extensions to association rules The proposed infrastructure has been designed and prototyped at HP Labs to support business intelligence applications in e-commerce. Our preliminary results validate the scalability and maintainability of this infrastructure, and the power of the enhanced multilevel and multidimensional association rules. In this paper we did not discuss privacy control in customer profiling However, we did address this issue in our design by incorporating support for the P3P protocol [1 i n  ou r data warehouse. We plan to integrate this framework with a commercial e-commerce system References 1  Sameet Agarwal, Rakesh Agrawal, Prasad Deshpande Ashish Gupta, Jeffrey F. Naughton, Raghu Ramakrishnan, Sunita Sarawagi, "On the Computation of Multidimensional Aggregates", 506-521, Proc. VLDB'96 1996 2  Surajit Chaudhuri and Umesh Dayal, \223An Overview of Data Warehousing and OLAP Technology\224, SIGMOD Record Vol \(26\ No \(1\ 1996 3  Qiming Chen, Umesh Dayal, Meichun Hsu 223 OLAPbased Scalable Profiling of Customer Behavior\224, Proc. Of 1 st International Conference on Data Warehousing and Knowledge Discovery \(DAWAK99\, 1999, Italy 4  Hector Garcia-Molina, Wilburt Labio, Jun Yang Expiring Data in a Warehouse", Proc. VLDB'98, 1998 5  J. Han, S. Chee, and J. Y. Chiang, "Issues for On-Line Analytical Mining of Data Warehouses", SIGMOD'98 Workshop on Research Issues on Data Mining and Knowledge Discovery \(DMKD'98\ , USA, 1998 6  J. Han, "OLAP Mining: An Integration of OLAP with Data Mining", Proc. IFIP Conference on Data Semantics DS-7\, Switzerland, 1997 7  Raymond T. Ng, Laks V.S. Lakshmanan, Jiawei Han Alex Pang, "Exploratory Mining and Pruning Optimizations of Constrained Associations Rules", Proc ACM-SIGMOD'98, 1998 8  Torben Bach Pedersen, Christian S. Jensen Multidimensional Data Modeling for Complex Data Proc. ICDE'99, 1999 9  Sunita Sarawagi, Shiby Thomas, Rakesh Agrawal Integrating Association Rule Mining with Relational Database Systems: Alternatives and Implications", Proc ACM-SIGMOD'98, 1998   Hannu Toivonen, "Sampling Large Databases for Association Rules", 134-145, Proc. VLDB'96, 1996   Dick Tsur, Jeffrey D. Ullman, Serge Abiteboul, Chris Clifton, Rajeev Motwani, Svetlozar Nestorov, Arnon Rosenthal, "Query Flocks: A Generalization of Association-Rule Mining" Proc. ACM-SIGMOD'98 1998   P3P Architecture Working Group, \223General Overview of the P3P Architecture\224, P3P-arch-971022 http://www.w3.org/TR/WD-P3P.arch.html 1997 


Plenary Panel Session 30 XML Databases   Moderator: Michael Carey, IBM Almaden Research Center USA Panelists Adam Bosworth, Microsoft Corporation USA David De Witt University of Wisconsin-Madison, USA Alon Levy University of Washington USA Bruce Lindsay IBM Almaden Research Center USA Jennifer Widom Stanford University USA Demo Session 1 Web Query Optimizer  661 V Zadorozhny L Bright L Raschid T Urhan and M Vidal ReQueSS: Relational Querying of Semi-structured Data  664 R Sunderraman The IDEAL Approach to Internet-Based Negotiation for E-Business  666 J Hammer C Huang Y Huang C Pluempitiwiriyawej M Lee H Li L Wang Y Liu and S Su READY A High Performance Event Notification Service  668 R Gruber B Krishnamurthy, and E Panagos A Multimedia Information Server with Mixed Workload Scheduling  670 G Nerjes DISIMA An Object-Oriented Approach to Developing an Image Database System  672 V Oria T Ozsu P Iglinski B Xu and L Cheng Demo Session 2 The Collaboration Management Infrastructure  677 H Schuster D Baker A Cichocki D Georgakopoulos and M Rusinkiewicz Assisting the Integration of Taxonomic Data The LITCHI Toolkit  679 I Sutherland J Robinson S Brandt A Jones S Embury W Gray R White and F Bisby TheaterLoc: Using Information Integration Technology to Rapidly Build Virtual Applications  681 G. Barish Y.4 Chen D Dipasquo, C Knoblock S Minton I Muslea and C Shahabi Lineage Tracing in a Data Warehousing System  683 Y Cui and J Widom xiii 


The Mentor-Lite Prototype A Light-Weight Workflow Management System  685 J Weissenfels M Gillmann 0 Roth, G Shegalov and W Wonner Location Prediction and Queries for Tracking Moving Objects  687 0 Wolfson B Xu and S Chamberlain Semiorder Database for Complex Activity Recognition in Multi-Sensory Environments  689 S Bhonsle A Gupta S Santini and R Jain Tutorial 1 Web Information Retrieval  693 M Henzinger Tutorial 2 Mobile and Wireless Database Access for Pervasive Computing  694 P Chrysanthis and E Pitoura Tutorial 3 Data Mining with Decision Trees  696 J Gehrke Tutorial 4 Directories Managing Data for Networked Applications  697 D Srivastava Tutorial 5 Indexing High-Dimensional Spaces Database Support for Next Decade\222s Applications  698 S Berchtold and D Keim xiv 


 T5.I2.D100K T10.I4.D100K T15.I4.D100K T10.I6.D400K T10.I6.D800K T10.I6.D1600K Optimizations across Databases 5 0 5 10 15 20 25 30 35 40 45 Improvement COMP TREE COMP-TREE 1 2 4 8 1 2 4 8 1 2 4 8 2 4 8 2 4 8 1 2 4 8 Processors Databases Figure 5 Effect of Computation and Hash Tree Balancing good as the COMP optimization The reason that the hash tree balancing is not suf\336cient to offset inherent load imbalance in the candidate generation in this case The most effective approach is to apply both optimizations at the same time COMP-TREE The combined effect is suf\336cient to push the improvements in the 40 range in the multiple-processor case On 1 processor only hash tree balancing is bene\336cial since computation balancing only adds extra cost 5.4 Short-circuited Subset Checking Figure 6 shows the improvement due to the short-circuited subset checking optimization with respect to the unoptimized version The unoptimized version is the Apriori algorithm due to Agrawal et al 5 The results are presented for dif ferent number of processors across dif ferent databases The results indicate that while there is some improvement for databases with small transaction sizes the optimization is most effective when the transaction size is large In this case we get improvements of around 25 r the unoptimized version To gain further insight into this optimization consider 336gure 7 It shows the percentage improvement obtained per iteration on applying this optimization on the T20.I6.D100K database It shows results only for the uni-processor case r similar results were obtained on more processors We observe that as the iteration k increases there is more opportunity for shortcircuiting the subset checking and we get increasing bene\336ts of up to 60 The improvements start to fall off t the high end where the number of candidates becomes small resulting in a small hash tree and less opportunity for short-circuiting It becomes clear that is an extremely effective 15 Proceedings of the 1996 ACM/IEEE Conference on Supercomputing \(SC\22296 0-89791-854-1/96 $ 10.00 ACM 


 T5.I2.D100K T10.I6.D800K T15.I4.D100K T20.I6.D100K procs across Databases 0 5 10 15 20 25 Improvement 1 2 4 8 Figure 6 Effect of Short-circuited Subset Checking 23456789101112 Iterations 0 10 20 30 40 50 60 improvement T20.I6.D100K Figure 7  Improvement per Iteration  proc   16 Proceedings of the 1996 ACM/IEEE Conference on Supercomputing \(SC\22296 0-89791-854-1/96 $ 10.00 ACM 


optimization for larger transaction sizes and in cases where there are large number of candidate k itemsets 6 Conclusions In this paper e presented a parallel implementation of the Apriori algorithm on the SGI Power Challenge shared memory multi-processor We also discussed a set of optimizations which include optimized join and pruning computation balancing for candidate generation hash tree balancing and short-circuited subset checking We then presented experimental results on each of these Improvements of more than 40 were obtained for the computation and hash tree balancing The short-circuiting optimization was found to be extremely effective for databases with large transaction sizes Finally we reported the parallel performance of the algorithm While we d good speed-up we observed a need for parallel I/O techniques for further performance gains References  R Agra wal T  Imielinski and A Swami Database mining A performance perspecti v e  I n IEEE Trans on Knowledge and Data Engg  pages 5\(6 1993  R Agra wal T  Imielinski and A Swami Mining association rules between sets of items in lar ge databases In Proc M SIGMOD Intl Conf Management of Data  May 1993  R Agra wal H Mannila R Srikant H T o i v onen and A I V erkamo F ast disco v ery of association rules In U F et al editor Advances in Knowledge Discovery and Data Mining  MIT Press 1996  R Agra wal and J Shafer  P arallel mining of association rules design implementation and e xperience Technical Report RJ10004 IBM Almaden Research Center San Jose CA 95120 Jan 1996  R Agra wal and R Srikant F ast algorithms for mining association rules In Proc 20th VLDB Conf  Sept 1994  M Cierniak W  Li and M J Zaki Loop scheduling for heterogeneity  I n 4th IEEE Intl Symposium on High-Performance Distributed Computing also as URCS-TR 540 CS Dept Univ f Rochester  Aug 1995  M Holsheimer  M  K ersten H Mannila and H T o i v onen A perspecti v e on databases and data mining In 1st Intl Conf Knowledge Discovery and Data Mining  Aug 1995  M Houtsma and A Swami Set-oriented mining of association rules In RJ 9567  IBM Almaden Oct 1993  H Mannila H T o i v onen and I V erkamo Ef 336cient algorithms for disco v ering association rules In AAAI Wkshp Knowledge Discovery in Databases  July 1994  J S P ark M Chen and P  S Y u  A n e f fecti v e hash based algorithm for mining association rules In Proc M SIGMOD Intl Conf Management of Data  May 1995 17 Proceedings of the 1996 ACM/IEEE Conference on Supercomputing \(SC\22296 0-89791-854-1/96 $ 10.00 ACM 


 J S P ark M Chen and P  S Y u  E f 336cient parallel data mining for association rules T echnical Report RC20156 IBM T J Watson Research Center Aug 1995  G Piatetsk y-Shapiro Disco v ery  presentation and analysis of strong rules In G P S et al editor  KDD  AAAI Press 1991  A Sa v asere E Omiecinski and S Na v athe An ef 336cient algorithm for mining association rules in large databases In Proc 21st VLDB Conf  1995  M J Zaki M Ogihara S P arthasarathy  and W  Li P arallel data mining for association rules on shared-memory multi-processors Technical Report 618 Department of Computer Science University of Rochester 618 1996 18 Proceedings of the 1996 ACM/IEEE Conference on Supercomputing \(SC\22296 0-89791-854-1/96 $ 10.00 ACM 


