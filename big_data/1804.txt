Proceedings of the Fitst International Conference on Machine Learning and Cybenietics Beijing, 4-5 November 2002 MINING CROSS-TABLE ASSOCIATION RULES ElASED ON PROJECTIONS OF ITEMSETS NAI-QIAN LI QIN-BA0 SONG JUN-YI SHEN Institute of Computer Software Xi\222an Jiaotong University Xi\222an 710049 China E-MAIL xalnq 163.com, xalnq@sina.com Abstract Association des are generally recognized as a highly valuable type of regularities and various algorithms have been presented for efficiently mining them in large databaws However the application of most algorithms is so far restricted to cases where information 
is put together in single table To the databases containing multiple tables, little work has been done To solve this problem we introduce the problem of mining cross-table association rules in two tables containing both quantitative and categorical attributes and present an algorithm for mining cross-table ampciation rules The algorithm is based on the projections of itemsets All large cross-table itemsets can be constructed by their projections of data being reileated Although more data is produced a lot of information about how the data was originally structured is lost Also the creation of useful understandable 2nd informative 
attributes may require a substantial amount of domain knowledge which may defy the purpose of KDD Therefore neither of approaches is very attractive cc a proper way of dealing with multiple tables is necessary 2 Related work Currentlv most work on association rule mining has  directly It neither needs to join the tables nor Creates a been done in a saele table hut little in multinle tables A  universal table or expends my of the tables The algorithm orients large databases and considem general relationships expressed by semantic correlation attributes between two tables where the cornlation may be keys 
foreign the algorithm is efficient ledng algorithn AQ is first used to mind association et al 41 Because of the restraint of its conditions the relationships among the tables can be fully loaded into the memory Thus to a certain in multiple tables by keys or other equivalent attributes The experiment shows that can be through the and the data Keywords Association rules Cross-table association rules Data mining 1 Introduction Association rules are generally recognized as a bigbly valuable type of regularities and various algorithms have 
been presented for efficiently mining them in large databases 31 To the best of our knowledge the application of most algorithms is so far restricted to cases where information is put together in single table To the  databases containing multiple tables little work has been done When adopting these algorithms to mine association rules in a database containing multiple tables one must first transform the multiple tables into a single table format There are two ways of doing it One is to create a universal table which involves joining all tables to form a single table The resulting universal table can be extremely large 
and impractical to handle In addition since multiple tables may belong to different databases or even different organizations it is difficult to join them for the sake of security or other reasons The second way of transform the multiple tables into a single table format involves the creation pf new attributes in the central fact table that summarize or aggregate information which can be found in other tables However it produces very wide table with lots 0-7803-750&4/02/$17.00 a002 IEEE extent, its application is restricted Some researchers from the area of Indmtive Logic Programming 222\223\222 studied the problem of data 
mining in multiple tables and presented some algorithms such as algorithm WARMRC6\222. However these algorithms me mostly based on data stored as F\222rolog programmes anC little attention bas been given to data stored in re1ation:d database and to how howledge of the data model can help to guide the search process They are only available in inductive relational databases ZUO Wan li 71 presented a parallel algorithm for mining association rules in multiple tables which is available in the case that the data type is only boolean and the common attributes only with value 1 bobble et a![*\222 presented a framework for mining association rules in multiple 
tables but it still deals with the joining operation among the tables Facing the above problems we introduce the problem of mining cross-tabh: association rules from the point of view of databases An algorithm for mining cross-table association rules is presented through the introduction of projections of the itemset The algorithm orients large relational databaies and considers general relationships expressed by semantic correlation attributes between two tables where the correlation attributes may be keys, foreign keys or other eqrdvalent attributes The attributes may be quantitative or categorical which are partitioned into intervals or value sets During association rule mining it does not need to join the tables and the large cross-table 


Proceedings of the First International Conference on Machine Learning and Cybernetics Beijing 45 November 2002 itemsets are constructed by using their projections in each of the tables The experiment shows that the algorithm is efficient The remaining of the paper is organized as follows Section 3 is definitions and problem statement Section 4 develops an algorithm for cross-table association rule mining. Section 5 is performance analyzing and section 6 is conclusions 3 Definitions and problem statement We now give a formal statement of the problem of mining cross-table association rules and introduce some terminology Now let RI and Rz be two relation tables We assume that these attributes may be categorical or quantitative which are partitioned into intervals or value sets Let Anr\(R and Anr\(Rz respectively denote sets of attributes of RI and Rzr and JI and Jz respectively denote the sets of equivalent attributes of RI and Rz Let UI be equal to Atrr\(RI and U be equal to Arrr\(Rz Definition 1 Let AeAttr\(Rj i=1,2 be a attribute I is one of the partitioned intervals or value sets of A Then we refer to a pair 4 h as an item for A We say that a set of items is an itemset if and only if the set consists of the items of different attributes If all.items in an itemset do not belong to the same table the itemset is also called a cross-table itemset A k-itemset is a set of k items and the k is called its length 0 Let Di denote the set of items which are defined on U where i=l 2 We have the following definitions Definition 2 Let Ri i=1,2 be a table, and 4 I be an item We say that a tuple tsRi supports the item 4 I if and only if t[A]sI Also we say that a tuple rsRi supports an itemset, if and only if the tuple r supports every item in the itemset 0 Definition 3 Let X be a cross-table itemset. Then its support is defined as the fraction of the tuples which support X in the equijoin table RI J 1 Rz denoted as X If X's support is greater than the user-specified minimum support we call X is frequent or large 0 Definition 4 A cross-table association rule is implication of the form X*Y where X and Y are itemset and XnY=0 XuYOi i=l,2 Its support is defined as o\(XaY Xur Its confidence is defined as X*Y X*ryo\(X 0 Given two relational tables RI Rz the problem of mining cross-table association rules is to find all cross-table association rules that have support and confidence greater than the user-specified minimum Support \(called minsup and minimum confidence \(called minconfl respectively 4 Cross-tahle association rule mining 4.1 The main idea adopted in the algorithm for mining cross table association rules is similar to Apriori A breadth The idea and the concept's properties first strategy from local to global bottom to top is employed. First, from bottom to top computing projections of large cross-table itemsets in each of the tables level by level and then constructing large cross-table itemsets according to the projections In the end use the itemsets produced above to generate all cross-table association rules During the whole process it neither needs to join the two tables practically nor creates a universal table or expends any of the tables This not only effectively avoids producing a substantial amount of redundant data, but also a likely explosion of data for joining operation of the tables As following we are to introduce projections of a cross table itemset and properties for some concepts Definition 5 Let X be a cross-table itemset XI be equal to x I xeXAxsOlj andXZ be equal to x IxeXhxeDz Then XI and X are called projections of X over RI and R2 respectively 0 Theorem 1 Let Vall\(JI Valz\(Jz and V be equal to r[Jll IreR11 r[Jzl I tcRzJ and Vall\(Jl Jz respectively. Then the tuple number in the equijoin table RI 11 Rz denoted as Joinsize is equal'to Zb,~I{tll fllJ~]=d rls RI 11x1 t tzl tz1JZl=d rZs,Rz 1 I U Proof Since V is a common value set of the joining attributes in the table RI and Rz and that I{tl I tl[J~I=d tl~RI and I{Izl rz[Jz]=d tzcRz are the tuple numbers for the joining attributes with a common value d respectively So it holds according to the equijoin definition of tables 0 Theorem 2 Any proper subset of a large cross-table itemset must be large in the equijoin table RI 1 Rz U Proof Let X be a large cross-table itemset For any itemset YcX the tuples that support X must support Y in the equijoin table RI 1 Rz so we have o\(X Since Xis a large cross-table itemset by the condition above then Y is also large in the table RI 11 Rz 0 Theorem 3 Let XcDl be an itemset over the table RI X is a projection of a large cross-table itemset if and only if there is an item YcD over the table Rz such that XuY is large Similarly, let XCO be an itemset over the table Rz X is a projection of a large cross-table itemset if and only if there is an item YcD over the table RI such that XuY is large U Proof If XcDl is a projection of a large cross-table itemset there must be an item YcD over the table Rz such that XuY is large by the definition 4 Against if there is an item YcDz over the table Rz such thaV'XuY is large for the itemset XcDl over the table RI then X must be a projection of the cross-table itemset XuY by the theorem 2 and the definition 4 The same as the above we can prove that the second half of the theorem 3 holds 0 In the end of this section we give some notations that will occur in our algorithm as follows For all cross-table itemsets, let Cik denote the set of all candidate k-projections potentially large projections and 4 the set of all large k-projections in the table Ri i=1,2 Let Ji.tjc denote the set of pair 5 jval sum where jvak RI I teRi A r[J V and sum is the number of tuples with the same value jval,\(i=1,2 For each itemset 171 


Proceedings of the First International Conference on Machine Zeaming and Cyhemedcs Beijing 4-5 November 2002 Xd i=l,2 let X.tjc denote a set of pair jval, sum where jval is one of the projection values that tuples supporting X in the table R are projected on the amibutes J and sum is the number of tuples with the same value jval 4.2 Computing the projections of large cross-table ihnsets In this section we give a procedure to compute the projections of large cross-table itmsets as follow Input table RI Rz minimum mincup Output set of Large Cross-table Itemsets Method for\(i=l ie2 i do begin C;l=Di foreach tuple te R and r[J;]c V do begin Count\(t J;.tjc foreach itemset uc C do if t supports U then Count U end end LlI=~cll CIE Cl 3c2e cz Lzr=lczl CZE CZI 3ClECIl Sum\(cl.tjc cz.rjc 1  Sum\(cl.tjc c  for\(i=l i<=2 i do begin for\(k=2 Ljk-]#0 k do begin   c;FcUnd-Gen\(L;k-I foreach tuple tc R and t[J;]e V do foreach itemset UE C do if t supports U then Count u.tjc if i 1 then L/F\(d Cl\200C/k 3C2ELZ1 Sum\(cl tjc cz.rjc  else LZF{cll CIE C2b 3CZEL11 Sum\(cl.tjc c2.rjc  end Answer,=ukLjk In the procedure above we first respectively scan table R and invoke function Count to compute the set J;.tjc and the set u.tjc for each item UE C;I in the table Ri i=l,2 where the function Count is as follow Count t u.tjc  end if VE u.tjc and v.jval t[Ji then else v.sum=v.sum+l insert jval sum into u.tjc with jvak Then by the theorem 3 we compute the large 1 projection set L for each table R i=1,2 where the function Sum invoked is as follow Sum cl.tjc c2.tjc forall VE cl.tjc do t[J sum=l if 3wc c2.tjc and w.jval= =v.jval then count==c unt+w.sumxv.sum reNm count After having computed L we are able to compute La 4   4 __ m:ursively from L;I i=1,2 For M2 L;k can be obtained km candidate projection set c;k by the theorem 3 but the candidate projection set Cjk is generated from L&-l by inv,king the following function Cand-Gen Cad-Gen Lik insert into Cjk select  p[lI,pl:21  p[k-ll,q[k-lIl from L;k Lir.l.q where       Ap[k-2 q[k-2:i~p[k-l]<q[k-l IP[~I,P[~I   P[~-~IJJ[~-~I P[~I,P[~I  k-2l,~lk-~l Ip[ll,p[21  P[~-~I,P[~-~I q[k-IIk L-1 A q[k-l]]e L;k-l A  A dk-1Ik 4-1 For convenience of computing in this function each itemset in L;k-l i ordered in the order of the attributes in table R and the notation p[n is used to denote j-th item in the itemset p whmxe j=l,2 ___ k-I The Cand-Gen function takes as argument Gk It returns a superset of the set of all large k-projections Its function is equivalent to extending Ljk with each item in the D and then deleting those itemsets for which the k-1 obtained by deleting one item from the 1-th to the k-2 items is not in L;k-l according to the theorem 2 The condition p[k-l]<q[k-ll simply ensures that no duplicates are generated After all computing the collections of all large projections for each table R i=1,2 respectively which is denoted as Answc r Theorem 4 The large projection set Answeri\(i=1,2 contains all proje\(:tions of all large cross-tahle itemsets in the table R 0 hoof Let X be any large cross-table itemset and X can be decomposed into XIuX2 where Xldl and X2d2 are X's large projections in the table RI and R2respectively For any item Y2d2 since cross-table itemset XIuY2d then by the theorem 2 XluY2 must be large and so the itemset ZuY for any subset Zc XI According to the process of the Answerl we have XlsAnswerl The same as the above we can prove that X2~Answer2 is also hue 0 4.3 Generating large cross-table itemsets In this section we give a procedure to generate large cross-table itmset; as follow Input Large projecton set Answerl Answer2 Output Large cr,xs-table itemsets L Method forall itemset usAnswerl do begin u.tjc, Jl.tjcYJionSize minimum minsup 172 


Proceedings of the First International Conference on Machine Learning and Cybernetics Beijing 4-5 November 2002 forall itemset v\200Answer2 do begin U Sum\(u.tjc Jz.tjcyJionSize c=Sum\(u.tjc,v tjcyJionSize if ctminsup then Insert uuv into L with cr\(uw end In'this procedure firstly invoke the Sum function to compute the support of each large projection Then generate large cross-table itemsets by the projections in Answerl and Answerz so that the set of all large cross-table itemsets L being obtained finally Theorem 5 The set of large cross-table itemsets L contain all large itemsets over the equijoin table RI J 1 Rz U Proof According to the theorem 4 any large itemset over the equijoin table RI J 1 R2 can be generated by combining one large projection in Answerl with another in Answerz It is obvious that the procedure above enumerates all possible combinations of the projections in Answerl and Answer2 Thus the theorem 5 holds 0 4.4 Generating cross-table association rules end It is similar to single table association rule mining the key to the cross-table association rule mining lies in the generating of large cross-table itemsets. We have obtained the set of large cross-table itemsets L The last step is generating all cross-table association rules In here we adopt the method given by R Agrawal et al. in literature U1 to generate all the rules 5 Performance andyzing Compared with others of multi-table association rule mining e:g 54 the significant characteristics of our algorithm are as follows 1 It orients large relational databases and considers general relationships expressed by semantic correlation attributes between two tables The table attributes may be quantitative or categorical So its application domain is wider 2 It is based on the projections of itemsets All large cross-table itemsets can be constructed by their projections directly without joining the tables so that the cross-table association rule mining problems which are not solved because the tables are not joined for the sake of security or other reasons are solved 3 The algorithm may be used in parallel computing environment It makes it possible to speed up the speed of cross-table association rule mining In order to analyze the performance some notations are given as follow IRil the number of tuples in the table Ri ICikl the number of candidate k-projections in Cik rj   tuple's length in the table Ri Ki  the maximum length of candidate projections in the table R N-----the average size of the set u.tjc U being an itemset where i=1,2 Theorem 6 In the whole generation of large cross-table itemsets the costs of computing disk I/Os and spaces are O\(IR11xrlx~IC~tl+lR21 xr2xZklCzd  O\(IRllxrlxK~+IR~lxr~xKz and O\(\(ZklClkl+ZICzkI  1+m respectively 0 Proof Since most computing is in the generating of candidate projections scanning the tables to compute candidate projections oval sum pair and constructing of large cross-table itemsets Their costs are respectively O\(lRllxrlx~~lC~~I+IRzlxr~x~~lC~~l and O\(IAnswerlIxlAnswer21xll.l Thus the total computing cost is O\(lR~lxr~x~~ICl~l+IRzlxr~x~~lC~~l  Every time the set of large k-projections is generated, the table RI and Rz must be scanned once Thus the I/O cost is O\(IR1 IxrlxKl+IR21xr2xK2 During the mining, we not only store all large projections but also their sets of the pair oval sum and the link attributes Then the space cost is O~~~lclkl+~lCz~i viz During the Toss-table association rule mining, the main cost is disk I/O It needs to scan the two tables KI and KZ passes respectively where K i=1,2 is the maximum length of candidate projections in the table Ri It is correspond to the total passes of algorithm Apriori which are used respectively in each of the two tables Thus the cost of disk I/O is acceptable in most applications Our experiments are performed on a PII-350 PC machine with 128MB main memory running on Microsoft Windows98 All the programs are written in JAVA 2 All data are obtained from a real database The results of the experiments show that the algorithm is efficient 6 Conclusions O\(zb11Llx~112xk+Z~,IL?*_IIzxk o\(\(~Icl~l+~Icz,I 1 0 When mining association rules over large relational databases algorithm costs of the spaces and times are usually very large Especially for mining cross-table association rules not only the costs of spaces and times are large but also the tables are usually not joined for the sake of security or other reasons Thus multi-table association mining bas been given little attention In this paper we put forward an algorithm for mining cross-table association rules through the introduction of projections of itemsets It neither needs to join the two tables nor creates a universal table or expends any of the tables The algorithm orients large databases and considers general relationships expressed by semantic correlation attributes between two tables The amibutes may be quantitative or categorical which are partitioned into intervals or value sets The experiments show that the algorithm is efficient The algorithm may be used in parallel computing environment Acknowledgements 173 


Proceedings of the First International Conference on Machine Learning and Cybernetics Beijing 4-5 November 2002 The work is supported by the National Natural Science Foundation of China under Grant No. 60173058 References R Agrawal R Strikant Fast algorithms for mining association rules In Proceedings of the 20th VLDB Conference, \(Santiago Chile pp 247-299,1994 J Park M. Chen, and Y Yu an effective bash-based algorithm for mining association rules In Proceedings of the 1995 ACM SIGMOD International Conference on Management of Data San Jose USA pp 175 186,1995 R Srikant R Agrawal Mining quantitative association rules in large relational tables In Proceedings of the ACM SIGMOND International Conference on Management of Data Monreal Canada pp 1-12,1996 J.S Ribeiro K.A Kaufman and L Kerschberg knowledge discovery from multiple databases In KDD-95 pp 240245,1995 S Dzeroski advances in knowledge discovery and data mining pp 118-152 Cambridge MA MIT Press 1996 L Dehaspe L De Raedt mining association rules in multiple relations In Proceedings of the 7th International Workshop on Inductive Logic Programming pp 125-132,1997 ZUO Wan-li a parallel algorithm for mining association rules across multi-tables Mini-Micro System V01.20 No.8 pp 574-577 1999 A Knobble H Blockeel A Siebes et al multi relational data mining CWI Technical report CWI INSR9908 1999 174 


036\(\001\\035 b\017\005\034 R h 021\035 023\003\006\005\017 034\021 026\020\030\005\r 034\026\005 017\021\003\023\004\005 030\b\034\b\037\b\017\005 D r MCT r MST r\b\f\030 SM  034\026\005 030\b\034\b\037\b\017\005 D 034\023\b\f\017\035\021\023\027\005\030 017\021 034\026\b\034 034\026\005 005\017 020\f R h 004\b\f\f\021\034 037\005 027\020\f\005\030 026\b\013\003\n r\002\b\005\006 023\003\006\005 r 020\f R h 030\r f E\022 T 0 l r  f t 020\f D=t b\023\034\020\b\006\006\t 017\003''\021\023\034\017 l r b\f\030 t 030\021\005\017 f\021\034 035\003\006\006\t 017\003''\021\023\034 r r g 5\022 035\021\023 005\b\004\026 034\023\b\f\017\b\004\034\020\021\f 021\035 T 0 l r 004\021\003\f\034 034\026\005 f\003\027\037\005\023 021\035 020\034\005\027\017 021\035 l r 020\f 020\034 6\022 017\021\023\034 034\026\005 034\023\b\f\017\b\004\034\020\021\f\017 020\f T 0 l r 020\f 030\005\017\004\005\f\030\020\f\n 021\023\030\005\023 021\035 034\026\005 004\b\006\004\003\006\b\034\005\030 004\021\003\f\034\017 017\b%\b\005\016 020\n\016\003\021 2 minconf  r  MCT 000 SM 021\023 minsup  r  MST 000 SM 3 f 7\022 026\021\021\017\005 034\026\005 023\017\034 034\023\b\f\017\b\004\034\020\021\f t 2 T 0 l r 8\022 006\b\004\005 b BCD 027\b\023\024 020\f t 035\021\023 034\026\005 020\034\005\027\017 020\f l r 034\026\b\034 b\023\005 f\021\034 017\003''\021\023\034\005\030 037\t t 9\022 G\005\004\021\027'\003\034\005 034\026\005 maxsup  l r  022 G\005\004\021\027'\003\034\005 minconf  r  022 G\005\004\021\027'\003\034\005 034\026\005 027\020\f\004\021\f\035 021\035 021\034\026\005\023 b\035\035\005\004\034\005\030 023\003\006\005\017 022 023\005\027\021!\005 t 035\023\021\027 T 0 l r g EF\022 G\005\027\021!\005 r 035\023\021\027 R h g n\030 034\023\035\032\020\005 007 036\032\004\005 037\023 \023\021\035 003 016\021# \005\021\022\005 036\005 \032\022 f\023\016\021 031\004\035\016\020\023\f\026\t 024 034\021 034\026\005 b\023\034\020\004\003\006\b\023 020\034\005\027\017 034\026\005\t 017\003''\021\023\034\022 007\021\023\034\020\f\n N f\003\027\037\005\023\017 020\017 O  NlogN  020\f 034\026\005 n\005\f\005\023\b\006 004\b\017\005\r 026\021*\005!\005\023 020\f 021\003\023 004\b\017\005 034\026\005 006\005\f\n\034\026 021\035 034\026\005 034\023\b\f\017\b\004\034\020\021\f\017 026\b\017 b\f 003''\005\023 037\021\003\f\030 026\020\004\026 020\017 005\023\t 017\027\b\006\006 004\021\027'\b\023\005\030 034\021 034\026\005 017\020-\005 021\035 034\026\005 030\b\034\b\037\b\017\005\022 f 017\003\004\026 b 004\b\017\005 005 004\b\f 017\021\023\034 N 034\023\b\f\017\b\004\034\020\021\f\017 020\f O  N  022 026\005 020\f\f\005\023 006\021\021 021\035 034\026\005 b\006\n\021\023\020\034\026\027 017\026\021*\f 020\f 033\020\n\003\023\005 E 005&\005\004\003\034\005\017 j T Z j\000  MST 000 SM  002j D j 034\020\027\005\017\r b\f\030 034\026\005 021'\005\023\b\034\020\021\f\017 020\f 034\026\005 020\f\f\005\023 006\021\021 004\b\f 037\005 030\021\f\005 020\f 004\021\f\017\034\b\f\034 034\020\027\005\022 026\005 b\006\n\021\023\020\034\026\027 017\026\021*\f 020\f 033\020\n\003\023\005 5 005&\005\004\003\034\005\017 020\034\017 020\f\f\005\023 006\021\021 j T r j\002  minconf  r  000 MCT  SM  034\020\027\005\017 020\f 021\023\030\005\023 034\021 023\005\030\003\004\005 034\026\005 027\020\f\020\027\003\027 004\021\f,\030\005\f\004\005 021\035 034\026\005 017\005\f\017\020\034\020!\005 023\003\006\005 r 037\005\006\021 034\026\005 MCT 037\t SM 022"\026\005!\b\006\003\005\021\035  minconf  r  000 MCT  SM  020\017 034\026\005 023\005\030\003\004\034\020\021\f f\005\005\030\005\030 020\f 034\026\005 027\020\f\020\027\003\027 004\021\f,\030\005\f\004\005 023\005'\023\005\017\005\f\034\005\030 b\017 035\023\b\004\034\020\021\f\022 025\f\030 034\026\020\017 035\023\b\004\034\020\021\f 027\003\006\034\020'\006\020\005\030 037\t 034\026\005 f\003\027\037\005\023 021\035 034\026\005 034\023\b\f\017\b\004\034\020\021\f\017 017\003 021\023\034\020\f\n 034\026\005 023\003\006\005 034\021 037\005 026\020\030\030\005\f n\020!\005\017 034\026\005 b\004\034\003\b\006 f\003\027\037\005\023 021\035 020\034\005\023\b\034\020\021\f\017\022 033\021\023 034\026\005 b\006\n\021\023\020\034\026\027 017\026\021*\f 020\f 033\020\n\003\023\005 6\r 034\026\005 020\f\f\005\023 006\021\021 020\017 005&\005\004\003\034\005\030 k 034\020\027\005\017 003\f\034\020\006 034\026\005 minsup  r  n\021\005\017 037\005\006\021 002\020\021\b 006\r\n'\030\b\n\006\b 18 79  31 76 2168  4 79 91057  33 83 41939  27 77 91847  19 35 53 001\002\003\004\005 007 036\032\004\005\r b\005\004\005\022\f\005 \017\016\020 037\023 \023\021\035 MCT 037\t SM 022"\026\005 minconf  r  020\017 020\f\020\034\020\b\006\006\t j T r j j T 0 l r j r\b\f\030\b\035 034\005\023 k 020\034\005\023\b\034\020\021\f\017 034\026\005 035\023\b\004\034\020\021\f 037\005\004\021\027\005\017 j T r j j T 0 l r j  k 020\004\026 017\026\021\003\006\030 037\005 017\027\b\006\006\005\023 034\026\b\f MCT 000 SM 020\f 021\023\030\005\023 035\021\023 034\026\005 023\003\006\005 r 034\021 037\005 026\020\030\030\005\f\022 1\026\005\f 005 020\017\021\006\b\034\005 k 035\023\021\027 034\026\020\017 035\023\b\004\034\020\021\f\r 005 021\037\034\b\020\f k  j T 0 l r j\000 j T r j MCT 000 SM 022 026\005 021'\005\023\b\034\020\021\f\017 020\f 034\026\005 020\f\f\005\023 006\021\021'\017 004\b\f 037\005 005\023\035\021\023\027\005\030 020\f 004\021\f\017\034\b\f\034 034\020\027\005 020\034\026 023\021'\005\023 026\b\017\026 017\034\023\003\004 034\003\023\005\017\022  b\002\003"\b\n\016\t 1\005 003\017\005\030 034\026\005 b\f\021\f\t\027\021\003\017 1\005\037 003\017\b\n\005 030\b\034\b 021\035 034\026\005 020\004\023\021\017\021\035\034 005\037 017\020\034\005 004\023\005\b\034\005\030 037\t L\b\004\024 007\022 023\005\005\017\005\r b!\020\030 I\005\004\024\005\023\027\b\f\r b\f\030 b\023\006 022 031\b\030\020\005 035\023\021\027 020\004\023\021\017\021\035\034\022 026\005 030\b\034\b b\017 004\023\005\b\034\005\030 037\t 017\b\027'\006\020\f\n b\f\030 023\021\004\005\017\017\020\f\n 034\026\005 022\027\020\004\023\021\017\021\035\034\022\004\021\027 006\021\n\017 b\f\030 030\021\f\b\034\005\030 034\021 034\026\005 b\004\026\020\f\005 005\b\023\f\020\f\n b\034\b G\005'\021\017\020\034\021\023\t 017\034\021\023\005\030 b\034 f\020!\005\023\017\020\034\t 021\035 b\006\020\035\021\023\f\020\b b\034 023!\020\f\005 1\005\037 017\020\034\005 A\022 026\005 1\005\037 006\021\n 030\b\034\b 024\005\005'\017 034\023\b\004\024 021\035 034\026\005 003\017\005 021\035 020\004\023\021\017\021\035\034 1\005\037 017\020\034\005 037\t 38000 b\f\021\f\t\027\021\003\017\r 023\b\f\030\021\027\006\t\\005\006\005\004\034\005\030 003\017\005\023\017\022 033\021\023 005\b\004\026 003\017\005\023\r 034\026\005 030\b\034\b 023\005\004\021\023\030\017 006\020\017\034 b\006\006 034\026\005 b\023\005\b\017 021\035 034\026\005 1\005\037 017\020\034\005\017 034\026\b\034 034\026\005 003\017\005\023 020\017\020\034\005\030 020\f b 021\f\005 005\005\024 034\020\027\005 035\023\b\027\005\022 1\005 003\017\005\030 034\026\005 034\023\b\020\f\020\f\n 017\005\034 021\f\006\t 026\020\004\026 026\b\017 32711 020\f\017\034\b\f\004\005\017\022 032\b\004\026 020\f\017\034\b\f\004\005 023\005'\023\005 017\005\f\034\017 b\f b\f\021\f\t\027\021\003\017\r b\f\030\021\027\006\t 017\005\006\005\004\034\005\030 003\017\005\023 021\035 034\026\005 1\005\037 017\020\034\005 b\f\030 004\021\023\023\005\017'\021\f\030\017 034\021 034\026\005 034\023\b\f\017\b\004\034\020\021\f\017 020\f 027\b\023\024\005\034 037\b\017\024\005\034 030\b\034\b\022 026\005 f\003\027\037\005\023 021\035 b\034\034\023\020\037\003\034\005\017 020\017 294 026\005\023\005 005\b\004\026 b\034\034\023\020\037\003\034\005 020\017 b\f b\023\005\b 021\035 034\026\005 022\027\020\004\023\021\017\021\035\034\022\004\021\027 1\005\037 017\020\034\005 b\f\030 005\b\004\026 b\034\034\023\020\037\003\034\005 004\021\023\023\005\017'\021\f\030\017 034\021 b\f 020\034\005\027 020\f 034\026\005 017\034\021\023\005 020\f 034\026\005 004\021\f\034\005&\034 021\035 027\b\023\024\005\034 037\b\017\024\005\034 030\b\034\b\022 1\005 004\006\005\b\f\005\030 034\026\005 030\b\034\b 037\t 023\005\027\021!\020\f\n 034\026\005 020\f\017\034\b\f\004\005\017 020\034\026 006\005\017\017 034\026\b\f 021\023 005+\003\b\006 034\021 f\021\f b\034\034\023\020\037\003\034\005 b\006\003\005\017 b\f\030 034\026\005 023\005\017\003\006\034\020\f\n 030\b\034\b 017\005\034 004\021\f\034\b\020\f\005\030 b\037\021\003\034 55\024 034\023\b\f\017\b\004\034\020\021\f\017\022 1\005 026\b!\005 006\005\027\005\f\034\005\030 034\026\005 017\003''\021\023\034 023\005\030\003\004\034\020\021\f b\f\030 034\026\005 023\017\034 b\006\n\021\023\020\034\026\027 035\021\023 004\021\f,\030\005\f\004\005 023\005\030\003\004\034\020\021\f\r 003\017\020\f\n 034\026\005 005\023\006 023\021\n\023\b\027 027\020\f\n 006\b\f\n\003\b\n\005\022 1\005 026\b!\005 b\006\017\021 020\027'\006\005\027\005\f\034\005\030 b f\b\020!\005 b\006\n\021 023\020\034\026\027 034\026\b\034 026\020\030\005\017 b 023\003\006\005 037\t 023\005'\006\b\004\020\f\n 1 4\017 037\t BCD 027\b\023\024\017 020\f b 023\021\003\f\030 023\021\037\020\f 035\b\017\026\020\021\f 037\t 017\005\006\005\004\034\020\f\n 034\026\005 f\005&\034 020\034\005\027 035\023\021\027 034\026\005 f\005&\034 034\023\b\f\017\b\004\034\020\021\f 020\034\026 f\021 b\023\034\020\004\003\006\b\023 023\005\035\005\023\005\f\004\005\022 026\005 f\b\020!\005 b\006\n\021 023\020\034\026\027 020\017 003\017\005\030 b\017 b 037\b\017\005 035\021\023 004\021\027'\b\023\020\017\021\f 020\034\026 034\026\005 023\003\006\005 b\f\030 017\003''\021\023\034 023\005\030\003\004\034\020\021\f b\006\n\021\023\020\034\026\027\017\022 025\017 b 023\017\034 017\034\005'\r 005 023\003\f b\f 025'\023\020\021\023\020 037\b\017\005\030 027\020\f\020\f\n b\006\n\021 023\020\034\026\027 021\f 034\026\005 030\b\034\b 020\034\026 017\003''\021\023\034 0  1 022 1\005 034\026\005\f 021\037\034\b\020\f\005\030 034\026\005 023\003\006\005\017 021\003\034 021\035 034\026\005 023\005\017\003\006\034\020\f\n 006\b\023\n\005 020\034\005\027\017\005\034\017 020\034\026 50 027\020\f\020\027\003\027 017\003''\021\023\034\022 026\005 027\020\f\020\027\003\027 004\021\f,\030\005\f\004\005 b\f\030 017\003''\021\023\034 b\006\003\005\017 b\023\005 Proceedings of the 12th Int\222l Wrkshp on Research Issues in Data Engineering: Engineering e-Commerce/ e-Business Systems \(RIDE\2220 2 1066-1395/02 $17.00 \251 2002 IEEE 


 001\002 003\002 004\002 005\002 006\002 007\b\t\n\013\f\r\t\016\r\017\020\021\022 002\023\002 002\023\003 002\023\005 002\023\024 007\025\026\017\027\013\030\r\017\020\031\r\016\031\022 007\025\026\017\032\013\030\r\017\033\b\034\017\035\013\n\n\r\034\r\t\027\\017\036\013\f\013\t\037\017 \027\034!\027\r\037\013\r\031 036 007 007\036 034\023\035\032\020\005 007 027 036\005*\032\023\020\005\t\005\021\f 001\002 003\002 004\002 005\002 006\002 007\b\t\n\013\f\r\t\016\r\017\020\021\022 006\002 001\006\002 003\006\002 004\006\002 005\006\002 006\006\002 024\006\002 006\002 013\f\r\017&\n\n\r\016\027\031 013\f\r\017&\n\n\r\016\027\031\017\b\n\017\035\013\n\n\r\034\r\t\027\017\\036\013\f\013\t\037\017 \027\034!\027\r\037\013\r\031 036 007 007\036 034\023\035\032\020\005 007 b\023 \005 017\017\005\022\f\r 004\026\021\017\005\f 020\034\026 023\005\n\b\023\030 034\021 034\t'\020\004\b\006 027\020\f\020\027\003\027 004\021\f,\030\005\f\004\005 b\f\030 017\003 021\023\034 034\026\023\005\017\026\021\006\030\017 035\023\021\027 034\026\005 006\020\034\005\023\b\034\003\023\005\022 007\005\f\017\020\034\020!\005 023\003\006\005\017 017\026\021\003\006\030 037\005 030\005\034\005\023\027\020\f\005\030 037\t 034\026\005 030\021\027\b\020\f 005&'\005\023\034\017\022 1\005 030\020\030 f\021\034 026\b!\005 034\026\005 f\005\004 005\017\017\b\023\t 030\021\027\b\020\f 024\f\021*\006\005\030\n\005\r 034\026\005\023\005\035\021\023\005 005 023\b\f\030\021\027\006\t 017\005\006\005\004\034\005\030 8 030\020\035\035\005\023\005\f\034 2\f\021\034 f\005\004\005\017\017\b\023\020\006\t 030\020\017/\021\020\f\0343 003\006\005\017 b\f\030 b\017\017\003\027\005\030 034\026\b\034 034\026\005\t b\023\005 017\005\f\017\020\034\020!\005 020\f 021\023\030\005\023 034\021 034\005\017\034 034\026\005 026\020\030\020\f\n 017\034\023\b\034\005\n\020\005\017\022 026\005 017\005\006\005\004\034\005\030 023\003\006\005 017\005\034 034\021 037\005 026\020\030\030\005\f 020\017 023\021!\020\030\005\030 020\f b\037\006\005 6\022 f 021\023 030\005\023 034\021 b\017\017\005\017\017 034\026\005 005\023\035\021\023\027\b\f\004\005 021\035 034\026\005 026\020\030\020\f\n 017\034\023\b\034\005\n\020\005\017\r 005 005\023\035\021\023\027\005\030 005&'\005\023\020\027\005\f\034\017 021\f b r 023\003\f\f\020\f\n 020\f\003 021'\005\023\b\034\020\f\n 017\t\017\034\005\027\r 020\034\026 512  021\035 027\b\020\f 027\005\027\021\023\t\r b\f\030 b 005\f\034\020\003\027  023\021\004\005\017\017\021\023 034\026\b\034 026\b\017 b 004\006\021\004\024 023\b\034\005 021\035 500 I-\022 f 034\026\020\017 005&'\006\021\023\b\034\021\023\t 017\034\003\030\t\r 005 027\005\b\017\003\023\005\030 034\026\005 034\020\027\005 023\005 003\020\023\005\027\005\f\034 021\035 034\026\005 026\020\030\020\f\n 017\034\023\b\034\005\n\020\005\017 035\021\023 030\020\035\035\005\023\005\f\034 004\021\f,\030\005\f\004\005 b\006\003\005\017 026\020\004\026 020\017 030\005'\020\004\034\005\030 020\f 033\020\n\003\023\005 7\022 025\017 004\b\f 037\005 017\005\005\f 035\023\021\027 034\026\005 n\003\023\005\r b\006\006 034\026\005 026\020\030\020\f\n 017\034\023\b\034\005\n\020\005\017 026\020\030\005 034\026\005 n\020!\005\f 023\003\006\005 017\005\034 017\003\004\004\005\017\017\035\003\006\006\t 020\f 006\005\017\017 034\026\b\f b 017\005\004\021\f\030 034\026\b\034 020\017 004\021\f\017\020\030\005\023\b\037\006\t 006\005\017\017 034\026\b\f 034\026\005 034\020\027\005 035\021\023 027\020\f\020\f\n 026\020\004\026 034\b\024\005\017 57 017\005\004\021\f\030\017 035\021\023 0  1 017\003''\021\023\034\022 033\021\023 b\023\020\021\003\017 004\021\f,\030\005\f\004\005 b\006\003\005\017 034\026\005 0$I 027\005\034\026\021\030 2\n\005\f\005\023\b\034\020\f\n 020\034\005\027\017\005\034 017\003''\021\023\034 023\005\030\003\004\034\020\021\f b\006\n\021\023\020\034\026\027 007\026\021*\f 020\f 033\020\n\003\023\005 E3 b\f\030 I 2#\t\004\006\020\004 I\020\030\0053 005\023\035\021\023\027 017\020\027\020\006\b\023\006\t 026\020\006\005 034\026\005 G 2\004\021\f,\030\005\f\004\005 023\005\030\003\004\034\020\021\f b\006\n\021\023\020\034\026\027 017\026\021*\f 020\f 033\020\n\003\023\005 53 026\020\030\005\017 034\026\005 023\003\006\005\017 035\b\017\034\005\023\022 I\021*\005!\005\023 021\003\023 027\b\020\f 005\023\035\021\023\027\b\f\004\005 004\023\020 034\005\023\020\021\f 021\035 034\026\005 030\020\035\035\005\023\005\f\034 b\006\n\021\023\020\034\026\027\017 020\017 034\026\005 017\020\030\005 005\035\035\005\004\034\017 034\026\005\t 020\f 004\003\023 021\f 034\026\005 030\b\034\b\037\b\017\005\022 1\005 027\005\b\017\003\023\005 034\026\005 017\020\030\005 005\035\035\005\004\034\017 037\t 017\003\027 027\020\f\n 003 034\026\005 f\003\027\037\005\023 021\035 023\003\006\005\017 026\020\030\030\005\f 003\f\020\f\034\005\f\034\020\021\f\b\006\006\t b\f\030 034\026\005 f\003\027\037\005\023 021\035 f\005*\006\t 020\f\034\023\021\030\003\004\005\030 023\003\006\005\017\022 026\005 005\023\035\021\023\027\b\f\004\005 021\035 034\026\005 026\020\030\020\f\n 017\034\023\b\034\005\n\020\005\017 020\f 034\005\023\027\017 021\035 034\026\005 017\020\030\005 005\035\035\005\004\034\017 b\023\005 030\005'\020\004\034\005\030 020\f 033\020\n\003\023\005 8\022 025\017 004\b\f 037\005 021\037\017\005\023!\005\030 035\023\021\027 034\026\005 n\003\023\005\r 034\026\005 G 004\b\003\017\005\017 034\026\005 006\005\b\017\034 f\003\027\037\005\023 021\035 017\020\030\005 005\035\035\005\004\034\017 035\021\006\006\021*\005\030 037\t 0$G\022 G b\f\030 0$G 021\003\034'\005\023\035\021\023\027 I 035\021\023 b\006\006 004\021\f,\030\005\f\004\005 b\006\003\005\017\022 0 017\b\021\005\016\b\030 1\r\002\027 026\005 023\021\037\006\005\027 b\030\030\023\005\017\017\005\030 020\f 034\026\020\017 b'\005\023 020\017 004\006\021\017\005\006\t 023\005\006\b\034\005\030 034\021 034\026\005 020\f\035\005\023\005\f\004\005 023\021\037\006\005\027 020\f 030\b\034\b\037\b\017\005\017 b\f\030 034\026\005 023\020!\b\004\t 023\005\017\005\023 b\034\020\021\f 023\021\037\006\005\027 020\f 030\b\034\b 027\020\f\020\f\n\022 026\b\f\n b\f\030 021\017\024\021*\020\034?7A 004\021\f\017\020\030\005\023 b 017\021\006\003\034\020\021\f 021\035 034\026\005 030\b\034\b\037\b\017\005 020\f\035\005\023\005\f\004\005 023\021\037\006\005\027 037\t 003\017\020\f\n b f\005 b\023\b\030\020\n\027 026\005\023\005 030\005\004\020\017\020\021\f 034\023\005\005 b\f\b\006\t\017\020\017 020\017 004\021\027 037\020\f\005\030 020\034\026 b\023\017\020\027\021\f\020\021\003\017 030\021*\f\n\023\b\030\020\f\n\022 f 034\026\005\020\023 017\004\026\005\027\005\r 026\b\f\n b\f\030 021\017\024\021*\020\034-\r 023\021'\021\017\005 034\026\b\034 I\020\n\026 030\005\004\020\030\005\017 026\b\034 f\021\034 034\021 030\021*\f\n\023\b\030\005 037\b\017\005\030 003'\021\f 034\026\005 023\003\006\005\017 034\026\b\034 020\034 034\026\020\f\024\017 021 004\b\f 020\f\035\005\023 2\020\022\005\022\r 037\t 003\017\020\f\n 030\005\004\020\017\020\021\f 034\023\005\005 b\f\b\006\t\017\020\0173 b\f\030 003'\021\f 034\026\005 020\027 021\023\034\b\f\004\005 021\035 034\026\005 020\f\035\021\023\027\b\034\020\021\f 034\026\b\034 021 017\026\021\003\006\030 023\005\004\005\020!\005\022 026\005\020\023 021\037/\005\004\034\020!\005 034\026\005\f 020\f 030\005!\005\006\021'\020\f\n 034\026\020\017 b\023\b\030\020\n\027 020\017 034\021 b\017\017\020\n\f b 005\f\b\006\034\t 035\003\f\004\034\020\021\f 034\021 034\026\005 b\023\017\020\027\021\f\020\021\003\017 030\021*\f\n\023\b\030\020\f\n 020\f 021\023\030\005\023 034\021 027\020\f\020\027\020-\005 034\026\005 b\027\021\003\f\034 021\035 020\f\035\021\023\027\b\034\020\021\f 034\026\b\034 020\017 f\021\034 030\021*\f n\023\b\030\005\030 b\f\030 034\021 004\021\027'\b\023\005 034\026\005 005\f\b\006\034\t 004\021\017\034\017 034\021 034\026\005 005&\034\023\b 004\021\f 030\005\f\034\020\b\006\020\034\t 034\026\b\034 020\017 021\037\034\b\020\f\005\030\022 006\020\035\034\021\f 8A 020\f!\005\017\034\020\n\b\034\005\017 034\026\005 034\005\004\026\f\020+\003\005\017 034\021 b\030\030\023\005\017\017 034\026\005 037\b 017\020\004 023\021\037\006\005\027 021\035 003\017\020\f\n f\021\f\\005\f\017\020\034\020!\005 030\b\034\b 034\021 020\f\035\005\023 017\005\f\017\020\034\020!\005 030\b\034\b 020\f 034\026\005 004\021\f\034\005&\034 021\035 030\b\034\b 027\020\f\020\f\n\022 I\020\017 n\021\b\006 020\017 034\021 b\004\004\021\027'\006\020\017\026 023\020!\b\004\t 037\t 005\f\017\003\023\020\f\n 034\026\b\034 034\026\005 030\b\034\b b!\b\020\006\b\037\006\005 034\021 034\026\005 b\030!\005\023\017\b\023\t 020\017 021\f\006\t b 017\b\027'\006\005 021\035 034\026\005 030\b\034\b 021\f 026\020\004\026 034\026\005 b\030!\005\023\017\b\023\t 021\003\006\030 006\020\024\005 034\026\005 023\003\006\005\017 034\021 026\021\006\030\022 f b\030\030\020\034\020\021\f\r 006\020\035\034\021\f 017\026\021*\017 034\026\b\034 035\021\023 004\006\b\017\017\020,\004\b\034\020\021\f 003\023'\021\017\005\017\r 034\026\005 017\005\004\003\023\020\034\t 021\035,\004\005\023 020\017 b\037\006\005 034\021 030\023\b b 023\005\006\b\034\020\021\f\017\026\020 037\005\034*\005\005\f 034\026\005 017\b\027'\006\005 017\020-\005 b\f\030 034\026\005 006\020\024\005\006\020\026\021\021\030 034\026\b\034 034\026\005 023\003\006\005\017 b\023\005 004\021\023\023\005\004\034\022 025\n\023\b*\b\006 b\f\030 007\023\020\f\024\b\f\034 5A 020\f!\005\017\034\020\n\b\034\005 034\026\005 030\005!\005\006\021'\027\005\f\034 021\035 b 030\b\034\b 027\020\f\020\f\n 034\005\004\026\f\020+\003\005 034\026\b\034 020\f\004\021\023'\021\023\b\034\005\017 023\020!\b\004\t 004\021\f\004\005\023\f\017\022 f b\023\034\020\004\003\006\b\023\r 034\026\005\t 004\021\f\017\020\030\005\023 034\026\005 004\021\f\004\023\005\034\005 004\b\017\005 021\035 037\003\020\006\030\020\f\n b 030\005\004\020\017\020\021\f 034\023\005\005 004\006\b\017\017\020,\005\023 035\023\021\027 034\023\b\020\f\020\f\n 030\b\034\b 020\f 026\020\004\026 034\026\005 b\006 003\005\017 021\035 020\f\030\020!\020\030\003\b\006 023\005\004\021\023\030\017 026\b!\005 037\005\005\f 005\023\034\003\023\037\005\030\022 026\005\020\023 n\021\b\006 020\017 034\021 003\017\005 034\026\005 005\023\034\003\023\037\005\030 030\b\034\b 2\b\004+\003\020\023\005\030 005\020\034\026\005\023 037\t b 030\020\017\004\023\005\034\020-\b\034\020\021\f 021\023 037\t b b\006\003\005 030\020\017\034\021\023\034\020\021\f 034\005\004\026\f\020+\003\0053 020\f 021\023\030\005\023 034\021 b\004\004\003\023\b\034\005\006\t 005\017\034\020\027\b\034\005 034\026\005 021\023\020\n\020\f\b\006 030\020\017\034\023\020\037\003\034\020\021\f 021\035 034\026\005 030\b\034\b b\006\003\005\017\022 t 030\021 020\f\n 034\026\020\017\r 034\026\005\t b\023\005 b\037\006\005 034\021 037\003\020\006\030 004\006\b\017\017\020,\005\023\017 026\021\017\005 b\004\004\003\023\b\004\t 020\017 004\021\027'\b\023\b\037\006\005 034\021 034\026\005 b\004\004\003\023\b\004\t 021\035 004\006\b\017\017\020,\005\023\017 037\003\020\006\034 020\034\026 034\026\005 021\023\020\n\020\f\b\006 030\b\034\b\022 025\n\023\b*\b\006 b\f\030 025\n\n\b\023*\b\006 EA 020\027'\023\021!\005 021\f 034\026\005 030\020\017\034\023\020\037\003\034\020\021\f 023\005\004\021\f\017\034\023\003\004\034\020\021\f 034\005\004\026\f\020+\003\005 023\005\017\005\f\034\005\030 020\f 5A 037\t 003\017\020\f\n 034\026\005 032 005\004\034\b\034\020\021\f b&\020\027\020-\b\034\020\021\f 2\032.3 027\005\034\026\021\030\022 026\005 b\003\034\026\021\023\017 004\006\b\020\027 034\026\b\034 032 020\017 027\021\023\005 005\035\035\005\004\034\020!\005 034\026\b\f 034\026\005 004\003\023\023\005\f\034\006\t b!\b\020\006\b\037\006\005 034\005\004\026 f\020+\003\005 020\f 034\005\023\027\017 021\035 034\026\005 006\005!\005\006 021\035 020\f\035\021\023\027\b\034\020\021\f 006\021\017\017\022 026\005\t b\006\017\021 023\021!\005 034\026\b\034 032 004\021\f!\005\023\n\005\017 034\021 034\026\005 027\b&\020\027\003\027 006\020\024\005\006\020\026\021\021\030 005\017\034\020 027\b\034\005 021\035 034\026\005 021\023\020\n\020\f\b\006 030\020\017\034\023\020\037\003\034\020\021\f 037\b\017\005\030 021\f 034\026\005 005\023\034\003\023\037\005\030 030\b\034\b Proceedings of the 12th Int\222l Wrkshp on Research Issues in Data Engineering: Engineering e-Commerce/ e-Business Systems \(RIDE\2220 2 1066-1395/02 $17.00 \251 2002 IEEE 


b\f\030 034\026\b\034 020\034 023\021!\020\030\005\017 023\021\037\003\017\034 005\017\034\020\027\b\034\005\017 021\035 034\026\005 021\023\020\n\020\f\b\006 030\020\017\034\023\020 037\003\034\020\021\f\022 033\020\f\b\006\006\t\r 034\026\005\t 023\021'\021\017\005 f\021!\005\006 027\005\034\023\020\004\017 035\021\023 034\026\005 003\b\f\034\020 004\b\034\020\021\f b\f\030 027\005\b\017\003\023\005\027\005\f\034 021\035 023\020!\b\004\t\\005\023!\020\f\n 030\b\034\b 027\020\f\020\f\n b\006\n\021\023\020\034\026\027\017\022 025 f\005 004\006\b\017\017 021\035 023\020!\b\004\t 023\005\017\005\023!\020\f\n 034\005\004\026\f\020+\003\005\017 020\017 020\f\034\023\021 030\003\004\005\030 020\f 6\r r A\022 f b\023\034\020\004\003\006\b\023 025\034\b\006\006\b\026 005\034\022 b\006 6A\r b\017\017\005\f\020 005\034\022 b\006\022 A b\f\030 016\005\023\t\024\020\021\017 005\034\022 b\006\022 A 026\b!\005 004\021\f\017\020\030\005\023\005\030 034\026\005 023\021\037\006\005\027 021\035 023\020!\b\004\t 023\005\017\005\023!\020\f\n 027\020\f\020\f\n 021\035 b\017\017\021\004\020\b\034\020\021\f 023\003\006\005\017\022 026\005 b\003 034\026\021\023\017 026\b!\005 030\005\027\021\f\017\034\023\b\034\005\030 026\021 004\005\023\034\b\020\f 017\005\f\017\020\034\020!\005 023\003\006\005\017 004\b\f 037\005 026\020\030\030\005\f 037\t 017\021\027\005 030\b\034\b 027\021\030\020,\004\b\034\020\021\f 034\005\004\026\f\020+\003\005\017 b\f\030 034\026\005\t 026\b!\005 023\021'\021\017\005\030 005\035,\004\020\005\f\034 026\005\003\023\020\017\034\020\004\017 035\021\023 017\021\006!\020\f\n 034\026\020\017 023\021\037\006\005\027 017\020\f\004\005 025\034\b\006\006\b\026 005\034\022 b\006\022 6A 023\021!\005\030 034\026\b\034 034\026\005 023\021\037\006\005\027 020\017 036\(\\b\023\030\022 f 034\026\005 004\003\023\023\005\f\034 021\023\024 005 b\023\005 004\021\f\017\020\030\005\023\020\f\n 034\026\005 017\b\027\005 023\021\037\006\005\027 037\003\034 020\f\017\034\005\b\030 021\035 b\006\006\021*\020\f\n 023\b\f\030\021\027 030\b\034\b 027\021\030\020,\004\b\034\020\021\f\r 005 026\b!\005 023\005 017\034\023\020\004\034\005\030 021\003\023\017\005\006!\005\017 034\021 020\f\034\023\021\030\003\004\020\f\n BCD b 017'\005\004\020\b\006 017\t\027\037\021\006 034\026\b\034 020\f\030\020\004\b\034\005\017 034\026\b\034 020\f\035\021\023\027\b\034\020\021\f 020\017 027\020\017\017\020\f\n\022 007\021\027\005 004\026\b\f\n\005\017 034\021 034\026\005 021\023\020\n\020\f\b\006 b\017\017\021\004\020\b\034\020\021\f 023\003\006\005 030\020\017\004\021!\005\023\t 023\021\n\023\b\027 b\023\005 f\005\004\005\017\017\b\023\t 035\021\023 034\026\005 020\f\034\023\021\030\003\004\034\020\021\f 021\035 026\005\003\023\020\017\034\020\004\017 037\b\017\005\030 021\f 034\026\020\017 020\030\005\b\022 2 r\n\006\021\020\t\003\r\n\t f 034\026\020\017 b'\005\023\r 005 026\b!\005 023\005\017\005\f\034\005\030 b f\005 017\005\034 021\035 004\021\f\004\005'\034\017 035\021\023 027\b\024\020\f\n b\017\017\021\004\020\b\034\020\021\f 023\003\006\005\017 017\005\f\017\020\034\020!\005\r b\f\030 005 026\b!\005 005&\034\005\f\030\005\030 034\026\005 b\017\017\021\004\020\b\034\020\021\f 023\003\006\005 027\020\f\020\f\n 023\021\004\005\017\017\r 020\f 021\023\030\005\023 034\021 b\004\004\021\003\f\034 035\021\023 017\005\f\017\020\034\020!\005 b\017\017\021\004\020\b\034\020\021\f 023\003\006\005\017\022 025\017\017\021\004\020\b\034\020\021\f 023\003\006\005\017 020\017 021\f\005 004\b\034\005 n\021\023\t 021\035 030\b\034\b 027\020\f\020\f\n 034\005\004\026\f\020+\003\005\017J 021\034\026\005\023 030\b\034\b 027\020\f\020\f\n 034\005\004\026 f\020+\003\005\017 017\026\021\003\006\030 b\006\017\021 037\005 004\021\f\017\020\030\005\023\005\030 035\021\023 017\005\004\003\023\020\f\n 037\021\034\026 030\b\034\b b\f\030 024\f\021*\006\005\030\n\005 020\f b 020\023\034\003\b\006 005\\003\017\020\f\005\017\017 005\f!\020\023\021\f\027\005\f\034 034\026\b\034 020\017 021'\005\f 005\f\030\005\030 b\f\030 003\006\f\005\023\b\037\006\005 034\021 b\006\006 024\020\f\030\017 021\035 030\020\035\035\005\023\005\f\034 027\b\006\005!\021\006\005\f\034 b\034\034\b\004\024\017\022 K\003\023 020\f\020\034\020\b\006 023\005\017\003\006\034\017 020\f\030\020\004\b\034\005 034\026\b\034 030\005\034\005\023\027\020\f\020\017\034\020\004 b\006\n\021 023\020\034\026\027\017 035\021\023 023\020!\b\004\t 023\005\017\005\023!\020\f\n b\017\017\021\004\020\b\034\020\021\f 023\003\006\005\017 b\023\005 b 023\021\027\020\017 020\f\n 035\023\b\027\005*\021\023\024 035\021\023 004\021\f\034\023\021\006\006\020\f\n 030\020\017\004\006\021\017\003\023\005 021\035 017\005\f\017\020\034\020!\005 030\b\034\b b\f\030 024\f\021*\006\005\030\n\005\022 f 034\026\005 f\005\b\023 035\003\034\003\023\005\r 005 020\006\006 020\f!\005\017\034\020\n\b\034\005 026\021 023\021\037\b\037\020\006\020\017\034\020\004 b\f\030 020\f\035\021\023\027\b\034\020\021\f 034\026\005\021\023\005\034\020\004 034\005\004\026\f\020+\003\005\017 004\b\f b\006\017\021 037\005 b''\006\020\005\030 034\021 034\026\020\017 023\021\037\006\005\027\022 017\b#\b\002\b\n\006\b\t EA 022 025\n\023\b*\b\006 b\f\030 022 025\n\n\b\023*\b\006\022 K\f 034\026\005 005\020\017\n\f b\f\030 M\003\b\f\034\020,\004\b 034\020\021\f 021\035 023\020!\b\004\t 023\005\017\005\023!\020\f\n b\034\b 020\f\020\f\n 025\006\n\021\023\020\034\026\027\017\022 006\016\004\003\003\t\022 n\007\027\017 016\024  r b\n\005\017 57:N588\r 5FFE\022 5A G\022 025\n\023\b*\b\006 b\f\030 G\022 007\023\020\024\b\f\034\022 023\020!\b\004\t 023\005\017\005\023!\020\f\n b\034\b 020\f\020\f\n\022 006\016\004\003\003\t\n\007\027\017 016\024 036 016\007\024\003\006\003\007\004\003 r b\n\005\017 78N85\r 5FFF\022 6A 022 L\022 025\034\b\006\006\b\026\r 032\022 005\023\034\020\f\021\r 025\022 031\022 032\006\027\b\n\b\023\027\020\030\r 022 037\023\b\026\020\027\r b\f\030 016\022 007\022 016\005\023\t\024\020\021\017\022 020\017\004\006\021\017\003\023\005 020\027\020\034\b\034\020\021\f 021\035 007\005\f\017\020\034\020!\005 G\003\006\005\017\022 006\016\022 004\003\003\t\n\007\027\017 016\024 036 007\016\r\020\003\t\027\003 013\007\t 013\b\013 007\027\n\007\003\003\006\n\007\027 016\006\031\022 017\002\016\f r b\n\005\017 78N85\r 036\021!\005\027\037\005\023 E@@@\022 7A 022 026\b\f\n b\f\030 022 007\022 021\017\024\021*\020\034-\022 b\023\017\020\027\021\f\020\021\003\017 021*\f\n\023\b\030\020\f\n b\f\030 005\004\020\017\020\021\f 023\005\005\017 025''\006\020\005\030 034\021 034\026\005 f\035\005\023\005\f\004\005 023\021\037\006\005\027\022 006\016\022 004\003\003\t\n\007\027\017 016\024 b\002\003 016\006\031\017\002\016\f 016\024 003\020 003\004\005\006\n\b\021 013\006\013\t\n\027\023\017 r b\n\005\017 5N;@\r E@@@\022 8A 022 006\020\035\034\021\f\022 017\020\f\n 007\b\027'\006\005 007\020-\005 034\021 020\027\020\034 032&'\021\017\003\023\005 034\021 b\034\b 020\f\020\f\n\022 016\005\006\007\013\r 016\024 016\023\f\005\b\003\006 003\004\005\006\n\b\021 r 273\r 5FFF\022 9A 032\022 021\026\005\f\r 022 b\034\b\023\r 007\022 033\003/\020*\b\023\b\r 025\022 0\020\021\f\020\017\r 022 f\030\t\024\r G\022 021\034 b\f\020\r L\022 022 006\006\027\b\f\r b\f\030 022 001\b\f\n\022 033\020\f\030\020\f\n f\034\005\023\005\017\034\020\f\n 025\017 017\021\004\020\b\034\020\021\f\017 1\020\034\026\021\003\034 007\003''\021\023\034 023\003\f\020\f\n\022 036 001\006\013\007\017\013\004\b\n\016\007\017 016\007 007\016\020\r\003\t\027\003 013\007\t 013\b\013 007\027\n\007\003\003\006\n\007\027 r E62E3\r 5FFE\022 A 022 032\006\005\f\b\r 016\022 007\022 016\005\023\t\024\020\021\017\r 025\022 031\022 032\006\027\b\n\b\023\027\020\030\r b\f\030 032\022 005\023\034\020\f\021\022 I\020\030\020\f\n 025\017\017\021\004\020\b\034\020\021\f G\003\006\005\017 037\t 003\017\020\f\n 021\f,\030\005\f\004\005 b\f\030 007\003''\021\023\034\022 001\016 013\f\f\003\013\006 n\007 b\002\003 006\016\004\003\003\t\n\007\027\017 016\024 036\007\024\016\006\023\013\b\n\016\007 n\t\n\007\027 016\006\031\022 017\002\016\f r 5FFE\022 A 022 021\035 b\006\020\035\021\023\f\020\b b\034 023!\020\f\005 b\004\026\020\f\005 005\b\023\f\020\f\n G\005'\021\017\020\034\021\023\t\022 http://www.ics.uci.edu/\230mlearn/MLSummary.html 022 A 016\022 007\022 016\005\023\t\024\020\021\017\r 025\022 031\022 032\006\027\b\n\b\023\027\020\030\r 022 032\006\020\017\b\r 022 032\006\005\f\b\r b\f\030 001\022 007\b\t\n\020\f\022 025\017\017\021\004\020\b\034\020\021\f G\003\006\005 I\020\030\020\f\n\022 036 001\006\013\007\017\013\004\b\n\016\007\017 016\007 007\016\020\r\003\t\027\003 013\007\t 013\b\013 007\027\n\007\003\003\006\n\007\027 r 5FFF\022 f\030\005\023 023\005!\020\005*\022 Proceedings of the 12th Int\222l Wrkshp on Research Issues in Data Engineering: Engineering e-Commerce/ e-Business Systems \(RIDE\2220 2 1066-1395/02 $17.00 \251 2002 IEEE 


of the query expression without ha ving the global view of the in ten tion There is a big c hance that the enco ded pro cedure ma y not b e the b est w a y to compute the rules dep ending on the database instance F urthermore as w e understand it their prop osals require p oten tially large n um ber of name generation for relations and attributes The names that are needed are usually database dep enden t and th us p ossibly cannot b e gathered at query time An additional pro cess needs to b e completed to gather those v ariables b efore actual computations can b egin 5  9 Optimization Issues While it w as in tellectually c hallenging to dev elop a declarativ e expression for asso ciation rule mining from deductiv e databases there are sev eral op en issues with great promises for resolution In the w orst case the least xp oin tneedsto generate n 2 tuples in the rst pass alone when the database size is n  Theoretically  this can happ en only when eac h transaction in the database pro duces an in tersection no de and when they are not related b y subset-sup erset relationship In the second pass w e need to do n 4 computations and so on The question no w is can w e a v oid generating and p erhaps scanning some of these com binations as they will not lead to useful in tersections F or example the no de b 0 3 in gure 11 is redundan t A signican t dierence with apriori lik e systems is that our system generates all the item sets top do wn in the lattice without taking their candidacy as a large item set in to consideration Apriori on the other hand do es not generate an y no de if their subsets are not large item sets themselv es and thereb y prunes a large set of no des Optimization tec hniques that exploit this so called an ti-monotonicit y prop ert y of item set lattices similar to apriori could mak e all the dierence in our setup The k ey issue w ould b e ho ww e push the selection threshold minim um supp ort inside the top do wn computation of the no des in the lattice in our metho d F or the momen t and for the sak e of this discussion let us consider a higher supp ort threshold of 60 for the database T of gure 9 No w the l-en v elop e will b e the one sho wn in ligh ter dashed lines in gure 11 and the no des under this line will b e the large item sets Notice that no ww eha v eto discard no des ad 2 0 and d 0 2 to o This raises the question is it p ossible to utilize the supp ort and condence thresholds pro vided in the query and prune candidates for in tersection an y further Ideas similar to magic sets transformation 3  24 ma y be b orro w ed to address this issue The only problem is that pruning of an y no de dep ends on its supp ort coun t whic h ma y come at a later stage By then all no des ma y already ha v e b een computed and th us pushing selection conditions inside aggregate op erator ma y b ecome non-trivial Sp ecial data structures and indexes ma y also aid in dev eloping faster metho ds to compute ecien t interse ction joins that w e ha v e utilized in this pap er W e lea v e these questions as op en issues that should be tak en up in the future F ortunately though there has been a v ast b o dy of researc h in optimizing Datalog programs including recursiv e programs suc h as the one w e ha v e used in this pap er and hence the new questions and researc h 5 Recall that their prop osal requires one to express the mining problem to the system using sev eral queries and up date statemen ts that utilizes information ab out the database con ten ts to ac hiev e its functionalit y  c hallenges that this prop osal raises for declarativ e mining ma y exploit some of these adv ances Needless to emphasize a declarativ e metho d preferably a formal one is desirable b ecause once w e understand the functioning of the system w e will then be able to select appropriate pro cedures dep ending on the instances to compute the seman tics of the program whic hw e kno wis in tended once w e establish the equiv alence of declarativ e and pro cedural seman tics of the system F ortunately  w e ha v e n umerous pro cedural metho ds for computing asso ciation rules whic h complemen t eac h other in terms of sp eed and database instances In fact that is what declarativ e systems or declarativit y buy us  a c hoice for the most ecien t and accurate pro cessing p ossible 10 Conclusion Our primary goal for this pap er has b een to demonstrate that mining asso ciation rules from an y rst-order kno wledge base is p ossible in a declarativ ew a y  without help from an y sp ecial to ols or mac hinery  and that w e can no wha v ea v ery in tuitiv e and simple program to do so W eha v esho wn that it is indeed p ossible to mine declarativ ekno wledge b y exploiting the existing mac hinery supp orted b ycon temp orary inference engines in programming languages e.g Prolog or kno wledge base systems e.g RelationLog XSB LD L  CORAL All w e require is that the engine b e able to supp ort set v alued terms grouping aggregate functions and set relational op erators for comparison functionalities whic hmostofthesesystemscurren tly supp ort W e ha v e also demonstrated that our formalism is grounded on a more mathematical foundation with formal prop erties on whic h the seman tics of the R ULES system rely  W e ha v e also raised sev eral op en issues related to eciency and query optimization whic h should b e our next order of business As future researc h w e plan to dev elop optimization tec hniques for mining queries that require non-trivial lo ok ahead and pruning tec hniques in aggregate functions The dev elopmen ts presen ted here also ha v e other signican t implications F or example it is no w p ossible to compute c hi square rules 4 using the building blo c ks pro vided b y our system Declarativ e computation of c hi square rules to our kno wledge has nev er b een attempted for the man y pro cedural concepts the computation of c hi square metho d relies on In a separate w ork 2 w e sho w that the coun ting metho d prop osed in this pap er can be eectiv ely utilized to generate the exp ectations needed in order to compute suc h rules rather easily  These are some of the issues w e plan to address in the near future The motiv ation imp ortance and the need for in tegrating data mining tec hnology with relational databases has b een addressed in sev eral articles suc h as 12  13 They con vincingly argue that without suc h in tegration data mining tec hnology ma y not nd itself in a viable p osition in the y ears to come T o b e a successful and feasible to ol for the analysis of business data in relational databases suc htec hnology m ust b e made a v ailable as part of database engines and as part of its declarativ e query language Our prop osal for declarativ e mining bears merit since it sheds ligh t on ho w rst order databases can be mined in a declarativ e and pro cedure indep enden t w a y so that the optimization issues can b e delegated to the underlying database engine Once suc h argumen ts are accepted sev eral systems 9 


related issues b ecome prime candidates for immediate atten tion F or example traditionally database systems supp orted declarativ e querying without the necessit y to care ab out the pro ceduralit y of the queries In this pap er w eha v e actually demonstrated that asso ciation rule mining can b e view ed as a Datalog query  It is immediate that a direct mapping from the Datalog expressions presen ted in this pap er to SQL can be dev elop ed with no problem at all W e can then rely on ecien t database pro cessing of the query in an optimized fashion Hence w ecomeclose to the essence of the visions expressed b y the leading database researc hers and practioners 12  References 1 Rak esh Agra w al and Ramakrishnan Srik an t F ast algorithms for mining asso ciation rules in large databases In VLDB  pages 487{499 1994 2 Anon ymous A declarativ e metho d for mining c hisquare rules from deductiv e databases T ec hnical rep ort Departmen t of Computer Science Anon ymous Univ ersit y USA F ebruary 2001 3 C Beeri and R Ramakrishnan On the po w er of magic In Pr o c e e dings of the 6th A CM Symp osium on Principles of Datab ase Systems  pages 269{283 1987 4 Sergey Brin Ra jeev Mot w ani and Craig Silv erstein Bey ond mark et bask ets Generalizing asso ciation rules to correlations In Pr o c A CM SIGMOD  pages 265 276 1997 5 D Chimen ti et al The LD L system protot yp e IEEE Journal on Data and Know le dge Engine ering  2\(1 90 1990 6 Jia w ei Han Jian P ei and Yiw en Yin Mining frequen t patterns without candidate generation In Pr o c A CM SIGMOD  pages 1{12 2000 7 Marcel Holsheimer Martin L Kersten Heikki Mannila and Hann uT oiv onen A p ersp ectiv e on databases and data mining In Pr o c of the sixth A CM SIGKDD Intl Conf  pages 150{155 Mon treal Queb ec 1995 8 Flip Korn Alexandros Labrinidis Y annis Kotidis and Christos F aloutsos Ratio rules A new paradigm for fast quan tiable data mining In Pr o c of 24th VLDB  pages 582{593 1998 9 Brian Len t Arun N Sw ami and Jennifer Widom Clustering asso ciation rules In Pr o c of the 3th ICDE  pages 220{231 1997 10 Mengc hi Liu Relationlog At yp ed extension to datalog with sets and tuples In John Llo yd editor Pr oc e e dings of the 12th International L o gic Pr o gr amming Symp osium  pages 83{97 P ortland Oregon Decem ber 1995 MIT Press 11 Rosa Meo Giusepp e Psaila and Stefano Ceri An extension to SQL for mining asso ciation rules Data Mining and Know le dge Disc overy  2\(2 1998 12 Amir Netz Sura jit Chaudh uri Je Bernhardt and Usama M F a yy ad In tegration of data mining with database tec hnology  In Pr o c e e dings of 26th VLDB  pages 719{722 2000 13 Amir Netz Sura jit Chaudh uri Usama M F a yy ad and Je Bernhardt In tegrating data mining with SQL databases In IEEE ICDE  2001 14 Ra ymond T Ng Laks V S Lakshmanan Jia w ei Han and Alex P ang Exploratory mining and pruning optimizations of constrained asso ciation rules In Pr o c A CM SIGMOD  pages 13{24 1998 15 Jong So o P ark Ming-Sy an Chen and Philip S Y u An eectiv e hash based algorithm for mining asso ciation rules In Pr o c A CM SIGMOD  pages 175{186 1995 16 Karthic k Ra jamani Alan Co x Bala Iy er and A tul Chadha Ecien t mining for asso ciation rules with relational database systems In Pr o c e e dings of the International Datab ase Engine ering and Applic ations Symp osium  pages 148{155 1999 17 R Ramakrishnan D Sriv asta v a and S Sudarshan CORAL  Con trol Relations and Logic In Pr o c of 18th VLDB Confer enc e  pages 238{250 1992 18 Konstan tinos F Sagonas T errance Swift and Da vid Scott W arren XSB as an ecien t deductiv e database engine In Pr o c of the A CM SIGMOD Intl Conf  pages 442{453 1994 19 Sunita Sara w agi Shib y Thomas and Rak esh Agra w al In tegrating mining with relational database systems Alternativ es and implications In Pr o c A CM SIGMOD  pages 343{354 1998 20 Ashok a Sa v asere Edw ard Omiecinski and Shamk an tB Nav athe An ecien t algorithm for mining asso ciation rules in large databases In Pr o c of 21th VLDB  pages 432{444 1995 21 Pradeep Sheno y  Ja y an t R Haritsa S Sudarshan Gaura v Bhalotia Ma y ank Ba w a and Dev a vrat Shah T urb o-c harging v ertical mining of large databases In A CM SIGMOD  pages 22{33 2000 22 Abraham Silb ersc hatz Henry F Korth and S Sudarshan Datab ase System Conc epts  McGra w-Hill third edition 1996 23 Shib y Thomas and Sunita Sara w agi Mining generalized asso ciation rules and sequen tial patterns using SQL queries In KDD  pages 344{348 1998 24 J D Ullman Principles of Datab ase and Know le dgeb ase Systems Part I II  Computer Science Press 1988 25 Mohammed J Zaki Generating non-redundan t association rules In Pr o c of the 6th A CM SIGKDD Intl Conf  Boston MA August 2000 1 0 


OM OM 006 OD8 01 012 014 016 018 02 022 False alarm demity Figure 9 Percentage of tracks lost within 200 seconds using three-scan assignment with PD  0.9 TI  O.ls Figure 11 T2  1.9s and T  Is ij  20 and 0  0.1 24 1 22  20  E fls 0  8l 16 0 n 14  12  0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 T1/12 PD Average track life of three-scan assignment with PD varying TI  0-ls T2  1.9s T  Is X  0.02 ij LO and   0.1 mareuvenng index Figure 12 Percentage of lost tracks of 4-D assipment in 200 seconds with maneuvering index varying X  0.01 Ti  0.1 T2  1.9s and T  IS PD  0.98 Figure 10 Percentage of lost tracks of 4-D assignment in 200 SeoDllCls with TI and T2 varying PD  0.98 X  0.02 q 20 and 0  0.1 4-1607 


Figure 13 Average gate size for Kalman filter Figure is relative as compared to nq and curves are parametrized by ij/r with unit-time between each pair of samples 1.2 Iy I 1.1 0.5 I A CRLB for he unifm samiina I  0.4 0.35 d 3 03 i7 3 0.25 0 0.M 0.04 0.06 008 0.1 0.12 0.14 0.16 0.18 0.2 False A!am DemW V I    Figure 14 CramerRao Lower Boundfor Mean Square Error of uniform and nonuniform sampling schemes with Ti  O.ls T2  1.9s T  IS PD  0.9 ij  5 and U  0.25 1 unifon sampling r-ls ked i non-uniform sampling loge inlewi I ti non-uniform sampling shod interva I 0.9 0.8 I Figure 15 MSE comparison of three-scan assignment with Ti and T2 varying I'D  1 X  0.01 ij  20 and U  0.1 4-1608 


Plenary Panel Session 30 XML Databases   Moderator: Michael Carey, IBM Almaden Research Center USA Panelists Adam Bosworth, Microsoft Corporation USA David De Witt University of Wisconsin-Madison, USA Alon Levy University of Washington USA Bruce Lindsay IBM Almaden Research Center USA Jennifer Widom Stanford University USA Demo Session 1 Web Query Optimizer  661 V Zadorozhny L Bright L Raschid T Urhan and M Vidal ReQueSS: Relational Querying of Semi-structured Data  664 R Sunderraman The IDEAL Approach to Internet-Based Negotiation for E-Business  666 J Hammer C Huang Y Huang C Pluempitiwiriyawej M Lee H Li L Wang Y Liu and S Su READY A High Performance Event Notification Service  668 R Gruber B Krishnamurthy, and E Panagos A Multimedia Information Server with Mixed Workload Scheduling  670 G Nerjes DISIMA An Object-Oriented Approach to Developing an Image Database System  672 V Oria T Ozsu P Iglinski B Xu and L Cheng Demo Session 2 The Collaboration Management Infrastructure  677 H Schuster D Baker A Cichocki D Georgakopoulos and M Rusinkiewicz Assisting the Integration of Taxonomic Data The LITCHI Toolkit  679 I Sutherland J Robinson S Brandt A Jones S Embury W Gray R White and F Bisby TheaterLoc: Using Information Integration Technology to Rapidly Build Virtual Applications  681 G. Barish Y.4 Chen D Dipasquo, C Knoblock S Minton I Muslea and C Shahabi Lineage Tracing in a Data Warehousing System  683 Y Cui and J Widom xiii 


The Mentor-Lite Prototype A Light-Weight Workflow Management System  685 J Weissenfels M Gillmann 0 Roth, G Shegalov and W Wonner Location Prediction and Queries for Tracking Moving Objects  687 0 Wolfson B Xu and S Chamberlain Semiorder Database for Complex Activity Recognition in Multi-Sensory Environments  689 S Bhonsle A Gupta S Santini and R Jain Tutorial 1 Web Information Retrieval  693 M Henzinger Tutorial 2 Mobile and Wireless Database Access for Pervasive Computing  694 P Chrysanthis and E Pitoura Tutorial 3 Data Mining with Decision Trees  696 J Gehrke Tutorial 4 Directories Managing Data for Networked Applications  697 D Srivastava Tutorial 5 Indexing High-Dimensional Spaces Database Support for Next Decade\222s Applications  698 S Berchtold and D Keim xiv 


 T5.I2.D100K T10.I4.D100K T15.I4.D100K T10.I6.D400K T10.I6.D800K T10.I6.D1600K Optimizations across Databases 5 0 5 10 15 20 25 30 35 40 45 Improvement COMP TREE COMP-TREE 1 2 4 8 1 2 4 8 1 2 4 8 2 4 8 2 4 8 1 2 4 8 Processors Databases Figure 5 Effect of Computation and Hash Tree Balancing good as the COMP optimization The reason that the hash tree balancing is not suf\336cient to offset inherent load imbalance in the candidate generation in this case The most effective approach is to apply both optimizations at the same time COMP-TREE The combined effect is suf\336cient to push the improvements in the 40 range in the multiple-processor case On 1 processor only hash tree balancing is bene\336cial since computation balancing only adds extra cost 5.4 Short-circuited Subset Checking Figure 6 shows the improvement due to the short-circuited subset checking optimization with respect to the unoptimized version The unoptimized version is the Apriori algorithm due to Agrawal et al 5 The results are presented for dif ferent number of processors across dif ferent databases The results indicate that while there is some improvement for databases with small transaction sizes the optimization is most effective when the transaction size is large In this case we get improvements of around 25 r the unoptimized version To gain further insight into this optimization consider 336gure 7 It shows the percentage improvement obtained per iteration on applying this optimization on the T20.I6.D100K database It shows results only for the uni-processor case r similar results were obtained on more processors We observe that as the iteration k increases there is more opportunity for shortcircuiting the subset checking and we get increasing bene\336ts of up to 60 The improvements start to fall off t the high end where the number of candidates becomes small resulting in a small hash tree and less opportunity for short-circuiting It becomes clear that is an extremely effective 15 Proceedings of the 1996 ACM/IEEE Conference on Supercomputing \(SC\22296 0-89791-854-1/96 $ 10.00 ACM 


 T5.I2.D100K T10.I6.D800K T15.I4.D100K T20.I6.D100K procs across Databases 0 5 10 15 20 25 Improvement 1 2 4 8 Figure 6 Effect of Short-circuited Subset Checking 23456789101112 Iterations 0 10 20 30 40 50 60 improvement T20.I6.D100K Figure 7  Improvement per Iteration  proc   16 Proceedings of the 1996 ACM/IEEE Conference on Supercomputing \(SC\22296 0-89791-854-1/96 $ 10.00 ACM 


optimization for larger transaction sizes and in cases where there are large number of candidate k itemsets 6 Conclusions In this paper e presented a parallel implementation of the Apriori algorithm on the SGI Power Challenge shared memory multi-processor We also discussed a set of optimizations which include optimized join and pruning computation balancing for candidate generation hash tree balancing and short-circuited subset checking We then presented experimental results on each of these Improvements of more than 40 were obtained for the computation and hash tree balancing The short-circuiting optimization was found to be extremely effective for databases with large transaction sizes Finally we reported the parallel performance of the algorithm While we d good speed-up we observed a need for parallel I/O techniques for further performance gains References  R Agra wal T  Imielinski and A Swami Database mining A performance perspecti v e  I n IEEE Trans on Knowledge and Data Engg  pages 5\(6 1993  R Agra wal T  Imielinski and A Swami Mining association rules between sets of items in lar ge databases In Proc M SIGMOD Intl Conf Management of Data  May 1993  R Agra wal H Mannila R Srikant H T o i v onen and A I V erkamo F ast disco v ery of association rules In U F et al editor Advances in Knowledge Discovery and Data Mining  MIT Press 1996  R Agra wal and J Shafer  P arallel mining of association rules design implementation and e xperience Technical Report RJ10004 IBM Almaden Research Center San Jose CA 95120 Jan 1996  R Agra wal and R Srikant F ast algorithms for mining association rules In Proc 20th VLDB Conf  Sept 1994  M Cierniak W  Li and M J Zaki Loop scheduling for heterogeneity  I n 4th IEEE Intl Symposium on High-Performance Distributed Computing also as URCS-TR 540 CS Dept Univ f Rochester  Aug 1995  M Holsheimer  M  K ersten H Mannila and H T o i v onen A perspecti v e on databases and data mining In 1st Intl Conf Knowledge Discovery and Data Mining  Aug 1995  M Houtsma and A Swami Set-oriented mining of association rules In RJ 9567  IBM Almaden Oct 1993  H Mannila H T o i v onen and I V erkamo Ef 336cient algorithms for disco v ering association rules In AAAI Wkshp Knowledge Discovery in Databases  July 1994  J S P ark M Chen and P  S Y u  A n e f fecti v e hash based algorithm for mining association rules In Proc M SIGMOD Intl Conf Management of Data  May 1995 17 Proceedings of the 1996 ACM/IEEE Conference on Supercomputing \(SC\22296 0-89791-854-1/96 $ 10.00 ACM 


 J S P ark M Chen and P  S Y u  E f 336cient parallel data mining for association rules T echnical Report RC20156 IBM T J Watson Research Center Aug 1995  G Piatetsk y-Shapiro Disco v ery  presentation and analysis of strong rules In G P S et al editor  KDD  AAAI Press 1991  A Sa v asere E Omiecinski and S Na v athe An ef 336cient algorithm for mining association rules in large databases In Proc 21st VLDB Conf  1995  M J Zaki M Ogihara S P arthasarathy  and W  Li P arallel data mining for association rules on shared-memory multi-processors Technical Report 618 Department of Computer Science University of Rochester 618 1996 18 Proceedings of the 1996 ACM/IEEE Conference on Supercomputing \(SC\22296 0-89791-854-1/96 $ 10.00 ACM 


