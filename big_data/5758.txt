A Frequent Itemset Storing Structure  Chen Zuyi and Zhao Taixiang  Department of Foundation  The First Aeronautic Institute of Air Force  Xin y ang  China  Email zychen7410@163.com   Abstract 321 Many decision support systems need to support online interactive f requent itemset mining however frequent itemset mining is a n intensive computation process This paper propose s an Fp tree based structure BFp tree to store frequent itemsets. This structure store pre computed frequent itemsets on a disk to support onlin e mining requests  Keywords 321 d ecision support system  frequent i tem mining  BFp tree  I  I NTRODUCTION  
Frequent itemset mining is an important problem  in the data mining area M any algorithms were introduced to min e the f requent itemset  but there are many probl ems For example  they are CPU intensive  which makes online interactive frequent itemset mining a vey challenging task Furthermore, frequent itemset mining requires a  predefined minimum support threshold  D ifferent database s and applications often require different  threshold s For example i n data warehouses where summaries of data along various dimensions and their  combinat ions are precomputed and stored 
 so that OLAP queries can be answered  quickly without the need for scanning the original  database  In this paper  we p ropose  a data structure  to store precomputed frequent itemsets on a disk  This  structure effectively utilizes the redundancy in frequent itemsets to save  space  and is  based on FP tree  II  FP T REE S TRUCTURE  A  R elated C onception  A transaction data base mining association rules can be described as follows  Let I i1  i2  311  im  is an itemset, D={t1  t2 311 
tn  is a transaction database w hich is composed of a series transactions  These  transactions have u nique identifier s Each subset of I is called a n itemset  D efinition 1 let I l  I The support  of  itemset  I l  in database D is defined as the percentage of tran sactions in D containing  il as S upport I l  t D|I l  t}/||D  D efinition 2  if S upport I l minsupport  where minsupport  is a user 
specified  minimum support threshold, then I l  is called a  frequent itemset in D  B  S tructure of Fp T ree  The  excellent  algorithm  of  d isc overing frequent itemsets early is Apriori  3  However  the  s hortcomings  brought to light  with the indepth research  1  R epeat to scan original database is necessary 2  C an produce huge c andidate itemset  There are many i mproved algorithm that have been propos ed  such as frequent closed itemsets 2   generators  4   d i s j u n c t i o n 
free sets  5   g e n e ra l i z e d  disjunction free sets 7   n o n derivable itemsets 1  a n d  kfree sets  6   F re q u e n t  c l o s e d  i t e m s e t s  a re  t h e  maximal itemsets among the itemsets appearing in th e same set of transactions and generators are the minimal ones. Disjunction free sets, generalized disjunction free sets non derivable itemsets and k free sets are generalizations of generators, and they are more concise than generators  J  Han proposed the structure of Fp tree at 2000 To build the tree  sc an ning  the original database tw ice is 
necessary  Association rules were generated according to the tree  III  BF P T REE  A  Structure of BFp T ree  and Analysis o f E xample  The BFP tree  structure is a prefix tre e li ke  structure   TID  Transactions  1 a,c,e,f,m,p  2 a,b,f,m,p  
3 a,b,d,f,g  4 d,e,f,h,p  5 a,c,d,m,v  6 a,c,h,m,s  7 a,f,m,p,u  Fig ure 1  T he tra n saction database D   


 ALL ITEMSETS  Min  support=40  c:3,d:3,p:4,f:5,m:5,a:6  cm:3,ca:3,pf:4,pm:3,pa:3 fm:3,fa:4,ma:5  cma:3,pfm:3,pfa:3,pma:3,fma:3  pfma:3  Fig ure 2 Frequent itemset    Fig ure 3  BFp tree  Figure  1 shows the set of frequent itemsets discovered from the transaction database shown in Fig 2 with  minimum support of 40 Fig 3 shows the structure of BFp tree storing itemsets Each node in a BFP tree  is  a variable length array. All entries in a node are sorted into ascending frequency order. An entry can contain multiple items if it is the only child of its parent. For example  node 2 in Fig.3 has only one entry and this en try contains two items m and a  path starting from an entry in the root node represents one or more frequent itemsets and these itemsets have the same support. For instance, the path from the first entry of the  root node to node 2 represents three itemsets fc  mg  fc  ag and fc m a T hese three itemsets have the same support of 3  B  T he Construction A lgorithm of BFp T ree   Input  l is a frequent itemset  D l  is the conditional database of l  E l  is the entry of l in th e CFP tree  min_sup is the minimum support threshold  Description  1 Scan D l  count frequent items and sort them into ascending frequency order, denoted as F  2 I={i|i  F and support l i D l   3 If I    then  4 Create a node tnode with one entry E and set E items I  5 E l child=tnode; F=F I; l l I E l  E  6  Create a new BFP tree node cnode with  F l   entries, and each entry corresponds to one item in F   7 E l child=bnode  8: for all transaction t  D l  do  9: Let t t  F; Sort items in t according to their orders in F   10: Let i be the first item of t; Insert t into D l i   11  for all entry E in cnode do  12  S=l E.items  13: CFPtreee S D;E;min_sup  14: for all transaction t  D s  do  15: t t-{i   16: Let i be the first item of t,insert t into D l i   IV  P RODUCE F REQUENT I TEMSETS  The BFP tree  constructed from a database with  respect to a given minimum support threshold is  lossless, that is, it contains th e complete set of  frequent itemset s We can produce concise representations of frequent itemsets such as frequent  closed itemsets generators, disjunction free  sets, non derivable frequent itemsets and  cover equivalent classes, from a BFP tree  efficiently  using the above  query processing algorithms be cause these concise representations use the support  information of itemsets and the superset 320 subset  relationship among itemsets to remove redundancy  Here we use frequent closed itemsets as an example  to show how these concise representations can be  produced from a B FP tree  An itemset is a closed itemset if all of its supersets are  less frequent than it The closed itemsets in a  B FP tree  are  identified  as  follows. For  each i temset l in the B FP tree, we search for its subsets. If a subset of l has the  same support as l then the subset is marked as non closed  We  traverse  the  BFP tree  in depth first  order  from  left  to  right and  search for  the  subsets  of  every  itemset being visited  According to the left contain ment property, when an itemset is visited, all the  supersets of the itemset have been visited except  those that are in the subtree pointed by l Therefore if  an itemset is not marked as non closed when it is  visited then the itemset is a closed itemset i f all the  entries in its child node are less frequent than it  V  P ROPERTIES OF THE  B FP TREE  In this section we describe the properties of the  B FP tree structure and show how to utilize these  properties to process queries on a B FP tree We  conside r several t ypes of queries  1  Queries with minimum support constraints for example 324\324find the frequent itemsets with support no less than min_sup\325\325 where min_sup should be no less than the construction minimum support of the CFP tree  c:3    d:3    p:4    f:5   m:5    a:6  ma:3  f:4  m:3   a:4  ma:3  a:3  a:5  


2  Superset queries  for example 324\324find the frequent  itemsets cont aining a set of items I \325\325 3  Subset queries for  example  322 find  the  frequent  itemsets  that are subsets of a given itemset I 4  S imilarity queries  for  example  322 find  the  frequent  itemsets  that contain at least m common items w ith a given  itemset I 323, where m I   These several types of queries are very common in practice and they are also essential for efficiently evaluating more com plex queries At the end of this paper  we briefly  discuss how to use the query processing algori thms  VI  M AINTENANCE OF A B FP T REE  The database used in mining is often very large  and dynamic in nature To avoid recomputing the  whole BFP tree  when  the underlying database is  updated we propose efficient algorithms to incrementally maintain a B FP tree Th e BFP tree  structure stores the frequent itemsets computed  from a database instead of the database itself. Maintaining a BFP tree  is essentially to maintain  the set of frequent itemsets stored in the B FP tree In  a BFP tree  structure not only the storage of  frequent itemsets is shared the update cost of  frequent itemsets can be shared too The BFP tree  structure itself also provides an efficient way to  access the original frequent itemsets Therefore  updating a BFP tree  is much easier and more  efficient than updating the frequent itemsets stored  in flat format or other structures  For the ease of presentation, in the rest of this  section we use D d and U to denote the old  database, the set of transactions to be inserted or  deleted and the updated databa se, respectively, use T x  to denote the BFP tree  constructed from  database x, where x  D d or U, and use L x to  denote the s et of frequent itemsets in x \(x  D, d  or U  VII  U PDATING F REQUENT I TEMSETS  It  is inefficient to  update the B FP tree structure  every time  a new transaction is inserted or an old  transaction is deleted because a single transaction  can affect many frequent itemsets It is more  suitable to conduct the update in batch so that  different transactions can share their updating cost  Both insertion and deletion can cause the occurrence of new frequent itemsets either because the  sup port of some itemsets increases  or  because the size of the database decreases which  lowers the  minimum count  threshold  Our  incremental update algorithm consists of two steps  the first step is to update the support of the original  frequent itemsets and the second step is to generate  new frequent itemsets  Updating existing frequent itemsets. In the first  step, the original BFP tree  and the set of new  transactions to be ins erted  are scanned simulta neously The original BFP tree  guides the  exploration of the search space over the incremental  database d. The update process is similar to  the construction algorithm of BFp tree  One difference is that frequent items are  now sorted according to their orders in the  original BFP tree  instead  of being sorted into  ascending frequency order During the update  process if the count of an itemset does not change  in U then there is no need to access the descendants  of that itemset in the original B FP tree If the  count of itemset l is changed, l can be in several  situations   1  l is frequent in D and is still frequent in U, i.e L  L D LU  2  l is frequent in D but becomes infrequent in U,i.e. l L D U  3  l is on the negative border of TD and become s frequent in U, i.e. l NB L D  L U  4  l is on the negative border of TD and is still  infrequent in U, i.e l NB L D  U  For the first case we simply update the count of l  For the second and the fourth cases we update the  count of l if they are on the negat ive border of U  otherwise they are removed from the B FP tree We  maintain the set of itemsets in the third case and  generate new frequent itemsets in the next step For  each itemset in l NB L D  L U we maintain its  count its candidate extensions and its p osition in  the CFP tree  Generating new f requent itemsets If some infre quent itemsets in D become frequent in U, that is  the negative border of the original BFP tree  expands  we scan the original database to generate  new frequent itemsets The itemsets i n NB L D  L U  are identified in the first step In the second step a  conditional database is constructed for every item set in NB L D  L U  and all the new frequent  itemsets are discovered from these conditional  databases using the construction algorithm of BFp tree  For itemset l in NB L D  L U  only transactions  containing l should be put into l\325s conditional  database. Each tran saction in l\325s conditional database contains only l\325s candidate extensions When  constructing conditional databases for the itemsets  in  NB L D  L U  we need to match every transac tion with every itemset in NB L D  L U  It can be a  very costly operation especially when the size of the  database and t he number of itemsets in NB L D  L U  are both very large We utilize prefix sharing  among itemsets to redu ce the cost for subset  matching. Let l 1  and l 2  be two itemsets in NB L D  L U  and they share the same length m prefix  If  a transaction t  does  not  contain the  ith item  of  itemset  l 1  where i m then there is no need to match  transaction t with l 2  We mainta in a length l array for each itemset l in NB L D  L U called the  jumping array of land denoted as l:jump_array  The  ith entry of l:jump_array contains the next new  itemset 


to be matched with transaction t if the i th  item of l is not contained in transaction t  VIII  C ONCLUSION  T he structure of BFp tree  utilize prefix and suffix sharing to save space  and it is efficient to condense  dens e data set  However  BFp tree is suitable for batch data processing  T he transaction database update processing requires further study  R EFERENCE S  1  R  Agrawal T  Imielinske and A  Swami 322 Mining association rules between sets of items in large databases 323  in Proc of the  ACM SIGMOD International C onference on the  M anagement of Data  Washington  D.C  May 1993 pp 207 216  2  J  Han  322 Mining frequent patterns without candidate generation 323  Proc  2000 ACM SIGMOD Int Conf on Management of Data  SIGMOD 325 00  Dallas  TX May 2000  3  R  Agrawal and R  Srikant 323 322 Fast algorithms for mining association rules 323  Proc  1994 Int  C onf Very Large Da tabases  Santiago C hile  September  1994, pp. 487 499  4  J  S  Park, M  S  Chen and P  S  Yu 322 An effective hash based algorithm for mining association rules 323  SIGMO D 324 95  1995 pp. 175 186  5  H  Toivonen 322 Sampling large databases for association rules 323  VLDB 96  1996, pp. 134 145  6  N  P asquier  322 Efficient mining for association rules using closed itemset lattices 323  Information S ystems  v ol  24  n o  1  pp  25 46  1999  7  M Kryszkiewicz and M Gajek 322 Concise representation of  frequent patterns based on general ized disjunction free  generators 323 in  Proceedings of the 6th PAKDD Conference  2002, pp. 159 171  


Figure 4 Global distribution map of innovation center in data mining: \(a\he color depth of a country represents its cumulati ve number of SCI paper which was the earliest publication regarding a certain technology in data mining, the more the deeper the blue; \(b\ The size of each dot notation represents the cumulative number of earliest SCI paper in a corresponding city, the more the bigger the dot Figure 5 Overlay Analysis of research centers and innovation centers V2-594 2010 2nd International Conference on Computer Engineering and Technology Volume 2 


Figure 6 Distribution map of cities involved in using clustering technology: \(a\The color depth of a country represents its c umulative number of SCI paper in clustering, the more the deeper the blue; \(b\ The color depth of each dot notation represents the time of involvement  in a corresponding city, the deeper the color is, the earlier the city got involved in using clustering technology Volume 2 2010 2nd International Conference on Computer Engineering and Technology V2-595 


The reasons of construction accidents Dimensional Types of the construction accidents n Personal reasons P Instrument reasons I Environmental reasons E Description High fall \(T I Caving-in or collapse T2 Poisoning \(T3 Mechanical injury \(T 4 Electrocution \(T 5 Others \(T6 Operation contrary to instruction \(P I Overlapping jobs \(P2 No professional skill \(P3 Bad commanding \(P 4 No security checks \(P 5 Others \(P6 Instrument failure \(II No security equipment 12 Installation without the regulations \(13 Others \(14 Bad weathers \(EI Operation at high position \(E2 


Geological hazard \(E3 Poisonous gas \(E4 Complex construction sites \(E5 Others \(E6 SI has some nonempty subsets like {Th Pd. {Th Id. {Ph Id. {Td. {PI}. {Id S2 has some nonempty subsets like {T2 Pd. {T2 Id Ph Id. {T2}. {PI}. {Id S3 has some nonempty subsets like {T2 P4}. {T2 Id P4, Id. {T2}. {P4}. {II S4 has some nonempty subsets like {T2 P6}. {T2 h P6 h}. {T2}. {P6}. {h As previous research. this paper tries to figure out the association rules from the factors of person and instrument so that the type of accidents would be found Therefore, the produced rules could be expressed as following CDPI!\\II ?T PI !\\ II ?TI Confidence\(P I !\\ I I ? T I PI !\\II ? T 2, Support\(PI!\\ II ? T 2 Confidence\(P I !\\ I I ? T 2 P4!\\11 ?T2' Support\(P4!\\11 ?T2 Confidence\(P 4!\\ I I ? T 2 P6!\\I2 ? T 2, SuPPort\(P6!\\ 12 ? T 2 Confidence\(P 6!\\ 12 ? T 2 Supposed the value of min-support as 70%, the strong association rule figured from frequent predicate sets would be {P4!\\II ? T2} and {P6!\\12 ? T2 6 the construction accidents of level III, the effective and value strong association rules could be expressed as Bad command, instrument failure ? collapse accident Support= 10%, Confidence= 1 OO Other person-factors, no protection ? collapse accident, \(Support= 10%, Confidence= 1 OO In construction process, a bad command plus instrument failure often make collapse accident happened Under other person-factors and no protection devices situation, collapse accident would take place. According to the result, in construction sites, the management officials should pay more attention on commanding 


equipment failures and safety measures N. TEST RESULTS Based on 387 safety accidents of level III during the construction accidents accrued from 1997 to 2006 among the whole nation, this paper selects the four dimensions Type, Person, Instrument and Environment, to find the association rules. Let min-sup be 2.5% and min-conf be 70%, valuable results are listed below Frequent predicate sets are those followings CD high fall, instruction, no protection instrument operation at high position \(support account is 12 collapse, operation contrary to instruction, no protection instrument, complicate sites \(support account is 15 collapse, no security check, no protection instrument, complicate sites \(support account is 14 poisoning, bad commanding, no protection instrument, poisonous gas \(support account is 18 Strong association rules are those followings CD operation contrary to instruction, no protection instrument, operation at high position ? high fall \(the value of confidence is 80 1080 operation contrary to instruction, no protection instrument, complicate sites ? collapse \(the value of confidence is 88 no security check, no protection instrument complicate sites ? collapse \(the value of confidence is 93 bad commanding, no protection instrument poisonous gas ? poisoning \(the value of confidence is 100 From the valuable strong association rules, the workers who operate in high during the course of construction without protection equipment would have an accident of high-falls with 80% possibility. Sometimes the constructors conduct some construction without safety equipments at complex sites would be in the accident situation of collapse contrary to instruction with 88 possibility. After construction, perhaps 93 percent of the workers who then do some operation in the complex construction sites without certain security checks and 


protection equipments would be injured under the situation of caving-in. Otherwise, along with the poisonous gas leaking out, the construction operators get poisoned, however, the management officials commit some bad commanding at the construction sites, then the operators still do their work without security equipments so that the accident of poisoning happen almost If other reasons exist, using frequent predicate sets summarized by construction accidents can find other potential rules with more than 80% of confidence in the data, which also have proved the summarized rules are reliable V. CONCLUSION Due to the construction of accidents, finally accidents records on construction increase sharply. With the aspect of Data Mining, this paper tries to provide a kind of decision support tool for construction units. Having established a model of multidimensional association rules this research could figure out why so many accidents took place by using the relevant records on construction through the relationship between the types of construction accidents and the dimensions of "person-instrument environment". In practical applications, the two significant parameters, minimum support and minimum confidence, influence the accuracy of association rules during the process of data mining. Therefore with the help of related experts or experienced personnel jointly, the parameters can be defined properly. That mining some relationships among construction accidents, can in a certain extent have some assistants for helping change the present situation of construction accidents occurred frequently, and plays a role of the warning, which help make correct and effective decision REFERENCES I] Xiao-wen ZHU, "Analysis on Present Safety Situation of Chinese Construction Industry," China Public Security no.12, pp. 27-29,2008 2] Jia-wei HAN, Bo KAN, Technology and Concepts of Data mining. Beijing: China Machine Press, 2007 3] Agrawal R, Imielinski T, Swami A N, Mining Association Rules between Sets of Items in Large Databases at SIGMOD Conference, 1993,pp. 207-216 


4] Xue-dong GAO, Wen-xian WANG and Wu Sen Multidimensional Association Rule Mining Method Based On Data Cube," Computer Engineering, vol. 29, no. 24, pp 74-76,2003 5] Investment in Fixed Assets of National Bureau of Statistics Yearbook of building industry statistics. Beijing: China Statistical Publishing House 6] Xin XIONG, Wei-ping WANG and Yue-xiang YE Personal recommendation algorithm based on concept hierarchy," Computer Applications, vol. 25, no. 5, pp 1006-1015,2005 7] Xue-qing TAN, Lin LUO and Dong-ru ZHOU, "Constraint Association Rules Mining Based on Data Cube Information Science, vol. 25, no. I, pp. 129-160,2007 108 1 


The proposed algorithm is tested on all the five datasets prepared by Roberto Bayardo, from UCI and PUMSB datasets. The datasets are available at http://fimi.cs.helsinki.fi. The characteristics of the datasets are shown in Table 6. The first column contains the names of the datasets. The second column shows the number of items contained in each dataset. The third column shows the average length of each transaction and the last column indicates the total number of transactions in each dataset TABLE 6 DATABASE CHARACTERISTICS Datasets Items Avg. length Records mushroom 119 23 8,124 chess 75 37 3,196 pusmsb* 2,088 50.4 49,046 connect 129 43 65,557 pusmsb 2,113 74.0 49,046 In order to illustrate the performance of the proposed algorithm, BitApriori is compared to the fast Apriori implemented in Ferenc [20], and another similar recently published, algorithm Index-BitTableFI proposed by Song [16]. In order to show the efficiency of the pruning technology employed in BitApriori another algorithm BitAprioriNE, which is the same as BitApriori, except that it does not use the special equal-support pruning, is designed. All of the above four algorithms are implemented in C++ and compiled with Microsoft Visual C++ 6.0. The experiments are performed on a Windows XP PC equipped with a Pentium 2.0 GHz CPU and 1.5 GB of RAM memory  For each dataset, a mass of different support thresholds are tested, and the five most important of them are chosen for reporting in this paper. The experimental results are shown in Fig. 3-7. In the figures, the y-coordinate denotes the execution time \(in seconds while x-coordinate denotes the support threshold 0 100 200 300 400 


500 600 0.05 0.06 0.07 0.08 0.09 0.1 0.11 Apriori BitApriori BitAprioriNE Index-BitTableFI  Fig.3 Execution time comparison on mushroom  0 200 400 600 800 1000 0.45 0.5 0.55 0.6 0.65 0.7 0.75 Apriori BitApriori BitAprioriNE Index-BitTableFI  Fig.4 Execution time comparison on chess  0 500 1000 1500 2000 2500 3000 3500 4000 0.25 0.3 0.35 0.4 0.45 0.5 0.55 Apriori BitApriori BitAprioriNE Index-BitTableFI  Fig.5 Execution time comparison on pusmsb 0 1000 


2000 3000 4000 5000 6000 0.65 0.7 0.75 0.8 0.85 0.9 0.95 Apriori BitApriori BitAprioriNE Index-BitTableFI  Fig.6 Execution time comparison on connect  0 500 1000 1500 2000 2500 0.675 0.725 0.775 0.825 Apriori BitApriori BitAprioriNE Index-BitTableFI  Fig.7 Execution time comparison on pusmsb  As shown in Fig. 3, BitApriori outperforms all other algorithms, and the dominance is apparent. In this dataset, the special equal-support pruning works efficiently. In Fig. 4, BitAprioriNE beats Apriori and Index-BitTableFI. In Fig. 5, the effectiveness of the proposed algorithm is verified, especially when the minimum support is low. In Fig. 6, BitAprioriWE exhausts the memory when the support threshold is lower than 0.8, but BitApriori does not. That means the special equal-support pruning contributes to save the memory. In Fig. 7, when the threshold is larger than 0.725, Apriori beats the BitApriori. But BitApriori outperforms the Apriori, when the threshold is lower than 0.725  


Apriori does not use the binary string and the special equal-support pruning. The BitTable is employed in Index-BitTableFI, but there is no special equal-support pruning, except for the frequent 2-itemsets BitAprioriNE outperforms Apriori in Fig. 3-5, but not in Fig. 6-7, because of the limitation of memory BitAprioriNE does better than Index-BitTableFI in Fig 4 and Fig. 5. In the mushroom, there is a vast number of equal-support itemsets for frequent 2-itemset. So Index-BitTableFI outperforms BitAprioriNE  On one hand, the special equal-support pruning is a useful technique for improving efficiency. The performance is improved significantly, especially when the databases contain many equal-support itemsets, such as the mushroom. It also reduces memory requirement On the other hand, the technique of binary string in BitApriori improves the efficiency of Apriori. These two techniques combine perfectly in BitApriori. So BitApriori has very good performance. It is the best for all of the five datasets  6. CONCLUSIONS  In this paper, two effective techniques are employed to improve the performance of Apriori, by reducing the cost of candidate generation, and by support counting The two effective techniques are integrated perfectly in BitApriori, and improve the computational efficiency significantly. Experimental results have shown that BitApriori outperforms the fast Apriori and Index-BitTableFI, especially when the minimum support threshold is low  When the database is large, the BitApriori may suffer the problem of memory scarcity. So how to solve the memory problem will be the question addressed in one of our future works. And another work is to improve Bitwise And Operation on the binary string, or replace it by some more effective techniques  REFERENCES 


 1] Agrawal R., T. Imielinski, A. Swami, Mining association rules between sets of items in large databases, in Proceedings of the ACM SIGMOD Conference on Management of Data. pp. 207-216 1993 2] Agrawal R., R. Srikant, Fast algorithms for mining association rules, The International Conference on Very Large Databases, pp. 487-499, 1994 3] Zaki M.J., S. Parthasarathy, M. Ogihara, W. Li New algorithms for fast discovery of association rules, in Proceedings of the 3rd International Conference on Knowledge Discovery and Data Mining, pp. 283-296, 1997 4] Han J., J. Pei, Y. Yin, Mining frequent patterns without candidate generation," in Proceedings of the 2000 ACM SIGMOD international conference on Management of data, ACM Press, pp. 1-12, 2000 5] Pork J.S., M.S. Chen, P.S. Yu, An effective hash based algorithm for mining association rules, ACM SIGMOD, pp. 175-186, 1995 6] Brin S., R. Motwani, J.D. Ullman, S. Tsur Dynamic itemset counting and implication rules for market basket data, in Proceedings of the ACM SIGMOD International Conference on Management of Data, pp. 255264, 1997 7] Brin S., R. Motwani, C. Silverstein, Beyond market baskets: generalizing association rules to correlations, in Proceedings of the ACM SIGMOD International Conference on Management of Data Tuscon, Arizona, pp. 265-276, 1997 8] Toivonen H., Sampling large databases for association rules, in Proceedings of 22nd VLDB Conference, Mumbai, India, pp. 134-145, 1996 9] Savasere A., E. Omiecinski, S.B. Navathe, An efficient algorithm for mining association rules in large databases, in Proceedings of 21th International Conference on Very Large Data Bases VLDB'95 10] Tsay Y.J., J.Y. Chiang, CBAR: an efficient method for mining association rules, Knowledge Based Systems, 18 \(2-3 


11] Liu G., H. Lu, W. Lou, Y. Xu, J.X. Yu, Efficient mining of frequent patterns using ascending frequency ordered prefix-tree, Data Mining Knowledge Discovery, 9 \(3 12] Grahne G., J. Zhu, Fast algorithms for frequent itemset mining using FP-Trees, IEEE Transaction on Knowledge and Data Engineering, 17 \(10 1347-1362, 2005 13] Zaki M.J., Scalable algorithms for association mining, IEEE Transactions on Knowledge and Data Engineering, 12 \(3 14] Zaki M.J., K. Gouda, Fast Vertical Mining Using Diffsets, in Proceedings of the ACM SIGMOD International Conference on Knowledge Discovery and Data Mining, pp. 326-335, 2003 15] Dong J., M. Han, BitTableFI: an efficient mining frequent itemsets algorithm, Knowledge Based Systems, 20 \(4 16] Song W., B.R. Yang, Z.Y. Xu, Index-BitTableFI An improved algorithm for mining frequent itemsets, Knowledge Based Systems, 21 \(6 507-513, 2008 17] Ferenc B., Surprising results of trie-based FIM algorithms, IEEE ICDM Workshop on Frequent Itemset Mining Implementations \(FIMI'04 CEUR Workshop Proceedings, vol. 90, G. Bart, J.Z Mohammed, and B. Roberto, Eds, Brighton, UK 2004 18] Ferenc B., A Survey on Frequent Itemset Mining Technical Report, Budapest University of Technology and Economic, 2006 19] Bart G., Survey on Frequent Pattern Mining Manuskript, 2002 20] Ferenc B., A fast APRIORI implementation IEEE ICDM Workshop on Frequent Itemset Mining Implementations \(FIMI'03 USA, 2003  


15] R. Agrawal and R. Srikant, "Fast algorithms for mining association rules in large Databases," presented at the Proceedings of the 20th International Conference on Very Large Data Bases, 1994 16] NKUDIC. \(June, 2006, National Kidney and Urologic Diseases Information Clearinghouse:Prostate Enlargement. Available http://kidney.niddk.nih.gov/kudiseases/pubs/prostateenlargement accessed on 10/06/2010 17] M. J. ZAKI, "Mining Non-Redundant Association Rules," Data Mining and Knowledge Discovery, 2004 18] Y. Xu and Y. Li, "Mining for Useful Association Rules Using the ATMS," presented at the International Conference on Computational Intelligence for Modelling, Control and Automation, and International Conference on Intelligent Agents, Web Technologies and Internet Commerce \(CIMCA-IAWTIC05 544 2010 10th International Conference on Intelligent Systems Design and Applications 


8]  Sergey Brin and Lawrence Page. The anatomy of a large-scale hypertextual Web search engine. Proceedings of the seventh international conference on World Wide Web 7: pp. 107-117, 1998 9]  J. Pei, J. Han, B. Mortazavi-Asl and H.Zhu, Mining Access Patterns Efficiently from Web Logs, Proceedings of the Pacific-Asia Conference on Knowledge Discovery and Data Mining, pp. 396-407 2000 10]  C. H. Cai, A. W. C. Fu, C.H. Cheng and W. W. Kwong, Mining Association Rules with Weighted Items, In Database Engineering and Applications Symposium, Proceedings IDEAS'98, pp. 68  77, 1998 11]  F. Tao, F. Murtagh and M. Farid, Weighted Association Rule Mining using Weighted Support and Significance Framework, In Proceedings of the 9th SIGKDD conference, 2003 12]  Show-Jane Yen, An Efficient Approach for Analyzing User Behaviors in a Web-Based Training Environment, International Journal of Distance Education Technologies, Vol. 1, No. 4, pp.55-71, 2003 13]  Show-Jane Yen, Yue-Shi Lee and Chung-Wen Cho, Efficient Approach for the Maintenance of Path Traversal Patterns, In Proceedings of IEEE International Conference on e-Technology, eCommerce and e-Service \(EEE 14]  M. Spiliopoulou and L. C. Faulstich, Wum: A web utilization miner EDBT Workshop WebDB98, Springer Verlag, 1996 15]  M. S. Chen, J. S. Park and P. S. Yu, Efficient data mining for path traversal patterns,  IEEE Transactions on Knowledge and Data Engineering, pp. 209-221, 1998 16]  H. Yao,H. J. Hamilton, and C. J. Butz, A Foundational Approach to Mining Itemset Utilities from Databases, Proceedings of the 4th SIAM International Conference on Data Mining, Florida, USA, 2004 17]  Z. Chen, R. H. Fowler and A. Wai-Chee Fu, Linear Time Algorithm for Finding Maximal Forward References, Proceedings of International Conference on Information Technology. Computers and Communications  \(ITCC'2003 18]  T. Jing, Wan-Li Zou and Bang-Zuo Zhang, An Efficient Web Traversal Pattern Mining algorithm Based On Suffix Array, Proceedings of the 3rd International Conference on Machine Learning and Cybernetics , pp 1535-1539, 2004 19]  Show-Jane Yen, Yue-Shi Lee and Min-Chi Hsieh, An efficient incremental algorithm for mining Web traversal patterns, Proceedings of the 2005 IEEE International Conference on e-Business Engineering ICEBE05 20]  L. Zhou, Y. Liu, J. Wang and Y. Shi, Utility-based Web Path  Traversal Pattern Mining, Seventh  IEEE International Conference on Data 


Mining Workshops, pp. 373-378, 2007 21]  C. F. Ahmed, S. K. Tanbeer, Byeong-Soo Jeong and Young-Koo Lee Efficient mining of utility-based web path traversal patterns, 11th International Conference on Advanced Communication Technology ICACT09 22]   http://en.wikipedia.org/wiki/PageRank 23] en.wikipedia.org/wiki/Association_rule_mining  Attributes? FPW Algorithm FTPW Algorithm Recognition of User behavior Visiting Frequency Page Rank Time Spent on Web page Page Size Accessibility of required information in less time Improving Web navigation and system design of Web applications  Enhancing server performance 2010 5th International Conference on Industrial and Information Systems, ICIIS 2010, Jul 29 - Aug 01, 2010, India 200 


Enhanced Inte r transaction Association Rules Enhanced Inter transaction Association Rules Enhanced Inter transaction Association Rules Extension of association rules Conditional relationships at multiple different time steps e.g itemset a\(0 0 1 2 You sense Higher data rate than normal AND You see New Route g enerated AND 1 minute a g o you detected checksum gg error packets AND 2 minutes ago your encountered wrong checksum   Implies High Chance of Intrusion Enhanced Rules and Confidence Associative IDS for NextGen Frameworks Dr S Dua LA Tech 21 


Complex Spatio temporal Association Complex Spatio temporal Association Rules Further extension of inter transaction association rules Describe event durations e.g itemset a\(0,X j,Y k,Z Eg  You sense high data rates for X seconds AND new route generated j minutes ago task completed in Y AND new route generated j minutes ago task completed in Y seconds AND checksum error packets received k minutes ago for Z seconds High Chance of Intrusion With highest confidence level in association rules  association rules  Associative IDS for NextGen Frameworks Dr S Dua LA Tech 22 


DMITAR Al ith ARD DMITAR Al gor ith m  ARD Problem Domain Problem Statement and Challenges Aiti Miig bd IDS A ssoc i a ti ve Mi n i n g b ase d IDS  Introduction to data mining Association rule in data mining DMITAR Algorithm  ARD New research Associative IDS for NextGen Frameworks Dr S Dua LA Tech 23 


DMITAR Algorithm DMITAR Difference Matrix Based Inter Transaction Association Rule Miner developed in DMRL Uses vertical data format Differences of the transaction IDs are used to generate extended itemsets Windowless mechanism Associative IDS for NextGen Frameworks Dr S Dua LA Tech 24 


Deep into the Mechanism The DMITAR algorithm is based on lhilii comp l ex mat h emat i ca l assoc i at i ve formulation and proofs Four major parts Four major parts Frequent 1 itemset generation Frequent 2 itemset generation Frequent k itemset generation k>2 Spatio temporal rule formation Associative IDS for NextGen Frameworks Dr S Dua LA Tech 25 


DMITAR, Datasets Used Stock Data Stock Data Daily stock information provided by Yahoo finance Wth Dt W ea th er D a t a Provided by the US Department of Commerce and National Climactic Data Center for 700 locations across US Synthetic Data Provided by a CRU weather generator that uses a Markov chain model to generate simulated weather data for 11 UK sites Associative IDS for NextGen Frameworks Dr S Dua LA Tech 26 


DMITAR Results 1/5 Varying Support DMITAR Results 1/5 Stock Database Support FITI ITPMine PROWL DMITAR 14 6424.7s 132.39s 3.03s 5.556s 16 2348.9s 67.14s 2.14s 4.015s 18 861.92s 34.62s 1.55s 2.89s 20 334.51s 18.89s 1.12s 2.07s 22 143 84s 10 87s 0 87s 1 45s 22 143  84s 10  87s 0  87s 1  45s 24 63.62s 7.15s 0.671s 1.04s Weather Database Support FITI ITPMine PROWL DMITAR 14 36362.6s 893.1094s 5.843s 19.8281s 36362.6s 893.1094s 5.843s 19.8281s 16 11913.04s 378.2188s 3.8906s 13.4375s 18 4116s 170.3438s 2.75s 9.1406s 20 1507s 86.5781s 2.14s 6.203s 22 859.2813s 63.3438s 1.7969s 5.7656s 24 378.5313s 36.1875s 1.4375s 3.5625s Synthetic Dataset Support FITI ITPMine PROWL DMITAR 14 1651.6s 199.843s 3.1406s 17.015s 16 574 32 119 32 2 0938 10 875 16 574  32 s 119  32 s 2  0938 s 10  875 s 18 416.109s 95.31s 1.6094s 7.39s 20 370.25s 83.31s 1.453s 5.8438s 22 265.78s 66.3438s 1.3594s 4.75s 24 133.96s 43.0781s 0.9219s 3.5781s 


DMITAR Rlt  DMITAR  R esu lt s 2  5 Rules Formed Associative IDS for NextGen Frameworks Dr S Dua LA Tech 28 


DMITAR Rl  Varying Maxspan DMITAR  R esu l ts 3  5 Varying Maxspan Associative IDS for NextGen Frameworks Dr S Dua LA Tech 29 


DMITAR Res lts 4/5 Vig Di i DMITAR  Res u lts  4/5 V ary i n g Di mens i ons Associative IDS for NextGen Frameworks Dr S Dua LA Tech 30 


DMITAR Rl  Varying Number of Transactions DMITAR  R esu l ts 5  5 Varying Number of Transactions Associative IDS for NextGen Frameworks Dr S Dua LA Tech 31 


N/C t Rh N ew C urren t R esearc h Problem Domain Problem Statement and Challenges Associative Mining based IDS Associative Mining based IDS Introduction to data mining ii lid ii Assoc i at i on ru l e i n d ata m i n i ng DMITAR Algorithm  ARD h New Researc h Associative IDS for NextGen Frameworks Dr S Dua LA Tech 32 


Further Research Further Research Objectives of Our Intrusion Detection System Development Objectives of Our Intrusion Detection System Development 1 Refine and scale the DMITAR algorithm to suit our application 2 Develop methods for dynamically altering the sensor parameters Our Focus is Securing the NextGen Frameworks with New Technology Technology Associative IDS for NextGen Frameworks Dr S Dua LA Tech 33 


Simulated Sensing Environment Simulated Sensing Environment Screenshots of Data C ollected from S ynthetic Sensors Screenshots of Data C ollected from S ynthetic Sensors Simulated in Our Laboratory Three Steps Slides Collect data Collect data from all sources  all attributes  Select Select the source and their hierarchical attributes attributes to be monitored and Select Select the source and their hierarchical attributes attributes to be monitored  and Sample Sample them at different rates different rates and process them Associative IDS for NextGen Frameworks Dr S Dua LA Tech 34 


Data Collection Simultaneous collection of data screen from ENTITIES aircrafts Associative IDS for NextGen Frameworks Dr S Dua LA Tech 35 Source PRTG Network Monitor software screen shot Demo info www.paessler.com 


Parameter Selection Selection of an ENTITY/aircraft and monitoring its parameters and sensor readings Associative IDS for NextGen Frameworks Dr S Dua LA Tech 36 Source PRTG Network Monitor software screen shot Demo info www.paessler.com 


Sensor Sampling Selecting one sensor/probe and reading it at different resolutions or sampling rates Associative IDS for NextGen Frameworks Dr S Dua LA Tech 37 Source PRTG Network Monitor software screen shot Demo info www.paessler.com 


Si l ti Nt k Si mu l a ti on on N e t wor k Most scenarios can be simulated on a computer or computer network network  The aircrafts and sensors are simulated on a computer network bllb b y ana l ogica l su b stitutions Sensors provide information at different rates Sensors provide information at different rates Need Based Sensor Prioritization NSP and Dynamic Sensing Rate Sampling Associative IDS for NextGen Frameworks Dr S Dua LA Tech 38 


Vulnerability Search Scan 39 Sample UQA script with Nmap performed in DMRL Associative IDS for NextGen Frameworks Dr S Dua LA Tech 39 Source Nmap screenshot with a pearl script  Find Namp on Nmap.org 


Modality Aspect Modality Aspect A Multimodal distribution is a continuous probability distribution with two or more modes of underlying data Mltil d i M u lti p l e mo d es i n our model Associative IDS for NextGen Frameworks Dr S Dua LA Tech 40 Source http://en.wikipedia.org/wiki/File:Bimodal bivariate small.png 


Multi Modality Modality Fusion 41 SENSITIVE  UNCLASSIFIED For Official Use Only Associative IDS for NextGen Frameworks Dr S Dua LA Tech 41 


Emphasis Emphasis Our approach emphasizes on pre empting the attack Our intent is NOT to perform an autopsy to discover attacks Instead we aim to detect and prevent in attacks in real time Associative IDS for NextGen Frameworks Dr S Dua LA Tech 42 


Techniques for Discriminative Rules Techniques for Discriminative Rules Resolution Analysis Features Analyzed at Different Depths Anti Monotonic Principle Modality Aspect Treading into Unexplored Feature spaces Associative IDS for NextGen Frameworks Dr S Dua LA Tech 43 


Representative Outcomes Representative Outcomes Illustration of the Final Analysis Our method shifts between modalities and sampling rates for optimization The blue parallelograms are actual intrusions 44 The blue parallelograms are actual intrusions The Red Green Blue Plots are response of system Associative IDS for NextGen Frameworks Dr S Dua LA Tech 44 


Advantages of Our M ethod Advantages of Our M ethod Exploit the memory v ertical data format utilizes slidin g windows to g form a much larger database to analyze  Flexibility in Choosing what to choose  Choosing what to choose to build the rules Computational and memory efficiency We have a team working only on this aspect 45 Associative IDS for NextGen Frameworks Dr S Dua LA Tech 45 


Preliminary Results Intra transaction Relations Data rate simulator NH-134 Mb HOP PATH update \(Y/N Inference 11.5 Y Y 2 0.120 N N      Y   n 0.345 N NH134 Y/N   Inf 1 0.150 N N 2 0 120 Y N Inter transaction Relations 2 0  120 Y N       5 5.55 0.456 Y Relations  n 0.345 N N Nmap on DMRL nmap.org 


Anticipated Outcome Anticipated Outcome Develop algorithm capable of learning from a given heterogeneous diverse Develop algorithm capable of learning from a given heterogeneous diverse data ff Dynamic algorithmic f ramework designed to shi f t modalities and sampling rates based on complex logic Flexibility of integration into the Snort intrusion detection system 47 Associative IDS for NextGen Frameworks Dr S Dua LA Tech 47 


References References Aircraft Cockpit Image courtesy USAF http://www.faa.gov htt p   www.faa g ov  air traffic  technolo gy  p g  _ gy  Acharya R Dua S Du X Sree V Chua C K Automated Diagnosis of Glaucoma Using Texture and Higher Order Spectra Features To appear in IEEE Transactions on Information Technology in Biomedicine  Du X Dua S 2011 Cancer Prognosis Using Support Vector Regression in Imaging  Modality World Journal of Clinical Oncology 2  1   44 49 Du X Dua S 2010 Salient Frame Extraction Using Support Vector Regression and Motion Features pp 5 Proc of the National Aerospace and Electronics Conference July 14 16 2010 D M P D S 2010 Di i i ti Ft d Cl ifi ti Mthd f D essaue r  M  P  D ua S  2010  Di scr i m i na ti ve F ea t ures an d Cl ass ifi ca ti on M e th o d s f or Accurate Classification 1st ed vol 7704 pp 14 Bellingham WA Proceedings of SPIE Dessauer M P Dua S 2010 Low Resolution Vehicle Tracking using Dense and Reduced Local Gradient Features Maps 1st ed vol 7694 pp 8 Bellingham WA Proceedings of SPIE SPIE 


Acknowledgements Acknowledgements Fundin g A g encies  US 4 1 Million direct fundin g g g 4 g LA BoR NIH NSF AFRL AFOSR and NASA Research Team Samuel Kasimalla Brandy McKnight Dr Pradeep Chowriappa Connor Johnson Vasanth Nair Mihir Chowriappa  Connor Johnson  Vasanth Nair  Mihir Karnik Mohit Jain and Swadheen Songmen Associative IDS for NextGen Frameworks Dr S Dua LA Tech 49 All the respective Logos belong to their owners 


Rf d Rdi R e f erence d R ea di ngs Copyright of cover pages held by respective publishers 


Thank You Questions Thank You  Questions Dr Sumeet Dua E mail sdua@latech.edu Web http://dmrl.latech.edu Associative IDS for NextGen Frameworks Frameworks Dr S Dua LA Tech 51 Image Source roadtrafficsigns.com 


