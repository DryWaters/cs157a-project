A PPLICATION OF A SSOCIATION R ULES M INING IN I NVENTORY C LASSIFICATION Liu Zhenyu  Wu Jun Yan  Zhenying department of Transportation  University of Inner Mongolia  Hohhot , China 08114207@bjtu.edu.cn Abstract Effective evaluation to the significance of the items is an important basis to process inventory management 002 In this context we not only consider item’s own attribute such as item’s profit and item’s cost, but also the effect of item association to process inventory classification. Using association rules related theories we build a new evaluation criterion based weighted dollar-usage and propose a new model for inventory classification based weighted association rule. We apply an improved item set-enumeration expanded tree to search every candidate frequent itemset based on matrix structure of dataset, which not only realize the significance sort of  inter-itemset but also improve the search efficiency 002 Then a calculation example is presented to test the feasibility of the model 002 Keywords Inventory Classification; Item Weight; Weighted Association Rules; Weighted dollar-usage I I NTRODUCTION In general, there are more than one species, usually as many as hundreds of varieties, need to be managed in an inventory system. If each kind of goods is fine managed there will be not only a very lar ge workload, but also a high management costs. Obviously it is not economic. In fact, the contribution of every goods on the system is different, so managers could sort these goods based on the size of contribution and use different ways to manage At present, ABC classification is commonly used by many enterprises for inventory classification. The key point of using ABC method lies in how to determine "important minorities and secondary majorities", which is the basis for the adoption of qualitative and qu antitative analysis to sort the inventory management object. In accordance with the classification index, all the objects are divided into A, B, C three types, and then take the corresponding control strategies. The commonly used classification index of ABC method is the  Of course, t h is classif i cation index is not the sole criterion for the importance of products In addition, there are other criteria, such as product’s profit availability, lead time, out-of-stock cost and rate of end-of-life There are also som e docum en ts think that t h e inventory classific ation management can not rely on only one index, while a variety of factors should be considered   th ese methods only consider the product's own characteristics. In fact, the contribution of the product depends not only on the evaluation of the product itself, but also on the associat ion impact between products In this article, in order to carry out more effective management, we take into account the product cost and profit of product’s own characteristics and the associated impact between the items to weight the size of contribution of each product to the inventory classification. Combing the profit, cost and the relations hip between items, we propose an inventory classification model based on the weighted association rules. In the pr ocess of modeling, we give different weights for each item according to its profit, and then use weighted dollar-us age of itemset to sort the inventory, which provides a viable new method for scientific and objective inventory management II I NVENTORY CLASSIFICATION CRITERION BASED ON WEIGHTED ASSOCIATION RULE The usual method for inve ntory classification only consider their own dollar-usage or profit of products, while different perspective which d ecision maker concerned about will have different criteria on the importance of inventory items. obviously one index is not enough to management needs, so in this article we use profit and dollar-usage at the same time for classification. Ho wever, in addition to these own characteristics of products, the interrelated relationship between items will also affect the actual sales of product The sales of certain products may promote or inhibit the sale of other products, so some out-of-stock products may lead to greater related losses. The purpose of this paper is to identify these potential associations, while considering the product’s own characteristics to support inventory management decision making  The main objective of associati on rule mining is to find the association relationship between items in the transaction database. If two or more data items’ values happen repeatedly and the repeated probab ility is high, then there is a link between them and you can set up the association rules between them A Association rule problem description The problem of mining asso ciation rules can be formally described as follows  Let 000^\000 m i i i I    2 1 000\026 000  be a set of products called items Let be a database of transactions, which is related to customer’s purchase behavior, where each transation D t contains a set of items such that Every transaction is asso ciated with an identifier, called An itemset is a set of i tems and a itemset is an itemset that contains exactly  items. For a given itemset  and a given transaction I t 000 TID k k A t  t  contains  if and only if 002 An association rule is an A t 000 A 
2009 Second International Workshop on Computer Science and Engineering 978-0-7695-3881-5/09 $26.00 © 2009 IEEE DOI 10.1109/WCSE.2009.257 1199 
2009 Second International Workshop on Computer Science and Engineering 978-0-7695-3881-5/09 $26.00 © 2009 IEEE DOI 10.1109/WCSE.2009.257 599 
2009 Second International Workshop on Computer Science and Engineering 978-0-7695-3881-5/09 $26.00 © 2009 IEEE DOI 10.1109/WCSE.2009.884 599 


implication of form where B A I A  I B D and The rule  holds in the database  with supp ort degree B A B A s  and confidence degree which means that the percentage of tr ansaction records containing c B A in is D s and the percentage of transaction records containing B in which contains is That is D  A A c  B   A P sup s B port     P B  A B A confidence c Rules satisfy both a minimum s threshold and a minimum threshold ar If the support degree of an itemset is greater than a minimum threshold, the itemset satisfy the mimimum threshold. Then the itemset is called frequent itemset. All the frequent itemset is denoted as  c k k L Traditional association rules algorithm treats the various items in the database in an equal and consistent manner. That is, it assumes the importance of every item is uniform. But in practice invent ory management it is not the case. the importance of every item to inventory management is different. In order to solve th is problem, we give different weights to different item and itemset according to the relative profit of them. Then we use the weighted association rule mining algorithm to mine association items, and define a "weighted dollar-usage" evaluation index to evaluate the importance of inventory items B Definition to the related concept For a gi ven item set m i  j i i   2 i I 1 m  w we give different weights for every item to distinguish the significance of each item in inventory classification corresponds to the relative profit of each item and   j  i w   j i w 1   0 j i w j i j  2  1 Definition-1 ite m weight    j i m i 1  j j i w    profit j j i   profit profit i   i denotes profit of each item Definition-2 Itemset weight Given an itemset X and the itemset weight is denoted as  I X  X  w X i w j  X w   X  i j X is the amount of items in itemset When X 1 is a specific item’s weight   X X w Definition-3 T ransaction weight Given a transaction and the transaction wei ght is denoted as  k t  D t k  k t w k t i j k t i w t w j     k t is the amount of items in transaction  Transaction weight is one type itemset weight in nature which stand for the significance of transaction in database The greater the transaction weight is, the greater the contribution of transaction to the final mining results k t Definition-4 W eighted support Given an itemset and weighted support of is denoted as  X  I X X  X wsp D t k t X D t k k k k t w t w X wsp        The itemset is then validated as significant if its weighted support is above the pre-defined minimum weighted support, which is al so called weighted frequent itemset. Given an itemset  X I X for any itemset Y  I Y  X wsp X if then it must be true that The proof will not be detailed here which can be find in  is not a weighted frequent itemset, then any superset of it can n ot be a weighted frequent ite mset. This property is very important for the later work in part 4 using Apriori method to generate candidate itemset to narrow the search space and improve the mining efficiency Y X   Y  wsp Definition-5 w eighted dollar-usage Given an itemset and weighted dollar-usage of is denoted as  X  X I X X  p X i j j i t X wsp X p   cos       cos j i t is the cost or dollar-usage of item  j i Definition-6 Le t m i i i I    2 1 be a set of items, and be a database containing transactions. Then the matr ix structure of  could be written as D n D      2 1 n V V V D And  T mk k k k a a a V      2 1 n k m j t i t i a k j k j jk   2  1   2  1 0 1  Every row vector stands for an item, and every column vector stands for a transaction While our method must re-sort item continuously according to item weighted dollar-usage, matrix structure is adopted to facilitate database scanning without the need to consider the problems brought by the order of the item in transaction. The specific process can be seen in section 3 Inference-1 According to defin ition-4 and definition-6 it is obviously that the weight ed support of item and itemset can be transformed into the follows  
1200 
600 
600 


 m j t w t w a i wsp D t k n k k jk j k   2  1        1 D t k k n k j r rk j k t w t w a i i i wsp            1 1 2 1 III I NVENTORY CLASSIFICATION BASED ON WEIGHTED ASSOCIATION RULE Our algorithms use breadth-first search of the set enumeration tree with bottom-up generate-intial-item seeding the search \(e.g.figure1\mset representing an entire level of the tree are processed together in one pass over the database. Then we can calculate the weighted support of each node using inference-1 and weighted dollar-usage using definition-5. In order to realize the inter-itemset sort, we need to so rt the frequent itemset in the same level which have been generated from the same root node in descending order by the weighted dollar-usage. Each node of the tree consists of four parts, i.e ID,items,wsp,P  ID is the node identifier items is itemset represented by the node wsp is weighted support of the node P is weighted dollar-usage of the node Inventory classific ation algorithm Input Minimum weighted support minwsp profit of each item cost of each item    j i profit   cos j i t Output Sorted items First step: Scanning the database and computing weight of each item and transaction by definition-1 and definition-3 separately. For example, the weight of item and transaction  in table-1 can be formulated as A 1 t         E profit A profit A profit A w  2   2 4 7 12 15  2  15 0.375 2       1 C w B w t w 0.24 Second step: Scanning the database, creating the matrix structure of database and initializing the matrix according to the definition-6.  For a instance, In table-1 B is one of the items in that is 1 t 1 t B so While 1 21 a 1 t A then 0 11 a Therefore  each element of the matrix is either 1 or 0 Third step: Building a set-enumeration tree like figure-1. We will calculate the weighted support of each 1-item by inference-1 after building the first level of the tree Then frequent 1-item is generated from the 1-item, and infrequent 1-item is deleted. For example, weighted support of item  in table-2 can be formulated as  A             5 1 5 15 1 11 t w t w t w a t w a A wsp         0    1    0 5 1 5 2 1 t w t w t w t w t w 0.282 Fourth step: Calculating the weighted dollar-usage of each weighted frequent 1-item by definition-5, and re-sorting the 1-item with the sa me root node in descending order. Such as, the weighted dollar-usage of item A can be formulated as   cos      A t A wsp A P 0.282*15=4.237 Fifth step: Generating candidate k itemset with Apriori algorithm. But in the jo int step of Apriori, we have to join itemset with the same orde r just in the tree. Then we should calculate the weighted support of each itemset and generate weighted frequent itemset  k C k k k L Sixth step: calculating weighted dollar-usage of each weighted frequent itemset by definition-5, and re-sorting th e itemset with the same root node in descending order Rep eat steps5 and 6, until the weighted frequent itemset k k k k L  Seventh step: we will use the mixed sort me sort all the frequent itemsets by weighted dollar-usage. Then we need to replace all the frequent itemsets with their members and hold the same rank of ordering. As a result, the list will be formed by single item  Then we have to remove all repeated items by the scan of the list from head to tail in order to form a sort for each item Last step: Set the division ratio of the product for inventory classification according to the actual situation Root AB CD AB AC AD BC BD CD ABC ABD ACD BCD ABCD Figure1 A completely expanded set-enumeration tree over{ABCD with items ordered lexically IV C ALCULATION EXAMPLE Here, transaction dataset in table 1 is used to illustrate the process and prove the validation of the algorithm for inventory classification  Let       E D C B A I  15   cos A t 12   cos B t  7   cos C t  4cos   cos D t 2   E t and  6  5  4  3  2  1  D  showed in table-1. Let profit of each item 
1201 
601 
601 


equal to half of its cost for simplicity. In tradition method the dollar-usage of every itemis  30   A P 48   B P   and which only takes cost into account, so the sort of inventory item is  14   C P      D C A B 12   D P  4   E P E In our algorithm, first let mi nimum weighted support minwsp 0.2  According to the above step1 of our algorithm, we get the weight of each transaction sh owed in the third column of table-1 Table 1 Data transactions TID Items w\(t 1 B C 0.24 2 ABE 0.24 3 B D 0.20 4 A D E 0.18 5 B C D 0.29 The matrix structure showed in table-2 by step2 Table 2 Matrix of data transactions 123 45 A01010 B11101 C10001 D00111 E 0 1 0 1 0 Using step3 we can build set-enumeration tree like figure-1 and calculate weighted support of 1-item showed in table-3. Comparing with the minimum weighted support we can remove the infrequent itemset whose weighted support is less than minwsp Then we will calculate the weighted dollar-usage of weighted frequent itemset, and re-sort the item-node in first level of the tree by the weighted dollar-usage see figure-2. Subsequently, we will get table-4 and the second level of the tree according to step5 and step6 Table 3 1-item weighted value 1-item A B C D E weighted support 0.282 0.655 0.356 0.449 0.282  minwsp  yes yes yes yes yes Weighted dollar-usage 4.237 7.864 2.492 1.797 0.565 Combing the joint step of Ap riori and order of itemset of the tree in figure-2, we can only get candidate 3-itemset and 0.194 which is less than mimwsp s o the iterative process is finished BCD   BCD wsp Table-4 2-itemset weighted value 2-item BA BC BD BE AC AD AE CD CEDE weighted support 0.1640.3560 3310.1350 0.1190.2820.1940 0.119  minwsp  no yes yes no no no yes no no no weighted dollar-usage 6.7635.288 4.802 In the light of step7, we get the finally sort order of the items  which is different from the result got from the tradition method. That is the item’s significance in inventory management is really affected by the weighted association between items. The degree depends on the relative profit of items and distribution of items in specific transaction dataset. Of course, this kind of product significance measure can not be the sole criterion for inventory classification mana gement, but it can provide valuable information for d ecision-making and improve the level of scientific management E A D C B      Root V C ONCLUSION The key issue of inventory ma nagement is the problem of inventory control. Since ther e are many items in storage we need to focus management on important items to improve efficiency. There are many criteria used to identify the importance of items, such as unit cost of product availability of product, lead ti me, out-of- stock cost and rate of end-of-life. However, these criteria only consider the product’s own characteristics. In our algorithm we not only take product’s own characteristics into account, but also the association between products. Then we propose a new inventory classification crite ria based on weighted association rule which can provi de valuable information for decision-making, and prove th e validity of the algorithm through a calculation example R EFERENCES  Zhao Xiaob0, Hu ang Si-m ing I nventor y Managem e n t M   Beijing Tsinghua University Press 2008: 46-47\(in Chinese  Z hou P Fan L W A note on multi-criteria ABC inventory classification using weighted linear optim Journal of Operational Research, 2007,182:1488-1491  Lenard J D  Roy B. Multi-ite m  in ventory control a  m u ltic riteria   Operational Res e arch, 1995 87:685-692  Ding Yan W e i Shaoy uan Xu Dong. Application of Fuzzy Comprehensive Evaluation Method in Inventory Manageme Value Engineering 2007,4\(26\7-79\(in Chinese  Jiawei Han Micheline Ka m b er Fa n m ing, Mengxiaof e ng tr anslation Data Mining Concepts and Techniqu e ijing: China Machin e Press, 2007:147-148\(in Chinese  Feng Tao, Fionn Murtagh, Mohsen Fa rid W e ighted association rule mining using weighted support and significance framewor   Proceeding of SIGKDD[C]. 2003: 661-666  Xiaoy i y ong, Chang wen-bing Ikuo Kakub. A New Algorithm of ABC Inventory Classification Base system Engineering, 2008 26\(6\0-15\(in Chinese TID ite m a jk Figure2 A set-enumeration tree with all frequent itemset after sorted B ACD BC BD AE E 
1202 
602 
602 


 Figure 2  Dependency network  Figure 3  Example of strong coupling The data mining package used also allows the rules to be visually presented. Figure 2 displays a dependency network in which each node represents a file. Each edge represents a pair wise association rule 
58 


Figure 3 displays an example of a zoom over a strong coupling between several forms of the system and its main form B  Data Validation In order to build more confidence on what was being mined, a sample of the generated rules was validated by the programmers. They used the visual representation of the rules and confirmed the consistency of the main associations presented by the dependency networks  The number of original transaction records gathered throughout eight years of operation of the version control system, was 256,804. However, after a careful data analysis, we identified that of the 256,804 original records 153,288 accounted for marks on the files \(labels\nd 69,592 were directory changes. In the end, only 33,924 changes in 4.096 files were taken into account V  R ESULTS  As seen in tables 2 and 3, our results reached averages higher than the averages presented in Zimmerman et al [5   These results suggest that association rules obtained in our industrial environment are better than those obtained in the published OSS domains. In addition, low standard deviation shown in Table 5 indicates that the values do not spread too much around the averages. Our next step was to test this evidence using inferential statistics A  Analysis and interpretation The analysis started by calculating the harmonic mean for the data presented in Zimmerman et al for eight OSS projects [5  T h is d ata is s h o w n in T a bl e 2   T h ey s e rv e as  a baseline of comparison for the results we obtained in the industrial environment, shown in Table 3 For the statistical testing, we established an apriority significance level 001 0.05. The Kolmogorov-Smirnov Test ensured that the sample was normally distributed. As seen in Table 4, we found p-values of 0.996 and 0.982 for the Navigation and Error Prevention F-measure 000  respectively.  As the p-value is the lowest possible significance with which it is possible to reject the null hypothesis, and they are larger than 0.05, we cannot reject the hypothesis that the data is normally distributed TABLE II  R ESULTS FOR COARSE GRANULARITY IN 9 AND ITS FMEASURE R=R ECALL   P    P RECISION  Suppor t Confidence Project R 000 P 000 F 000 measure R 000 P 000 F 000 measure ECLIPSE 0.17 0.26 0.21 0.03 0.48 0.06 GCC 0.44 0.42 0.43 0.29 0.82 0.43 GIMP 0.27 0.26 0.26 0.08 0.74 0.14 JBOSS 0.25 0.37 0.30 0.05 0.44 0.09 JEDIT 0.25 0.22 0.23 0.01 0.44 0.02 KOFFICE 0.24 0.26 0.25 0.04 0.61 0.08 POSTGRES 0.23 0.24 0.23 0.05 0.59 0.09 PYNTHON 0.24 0.36 0.29 0.03 0.67 0.06 Average 0.26 0.30 0.28 0.07 0.60 0.12 Navigation Prevention 0.1 0.9 13  In order to assure that we could use the T-test for independent samples, we had to test the equality of variances for the independent samples. The Levene Test, shown in Tables 6, produced p-values of 0.544 and 0.908, above 0.05 allowing us to accept the equality of variances for the samples TABLE III  R ESULTS FOR COARSE GRANULARITY IN AN INDUSTRIAL ENVIRONMENT R    R ECALL   P    P RECISION  Support Confidence Project, Description R 000 P 000 F 000 measure R 000 P 000 F 000 measure CadAlmox, Warehouse System Utilities 0.83 0.56 0.67 0.41 0.87 0.56 Cadastros, Requests System 0.79 0.61 0.69 0.30 0.94 0.45 Cliente, Customer System 0.87 0.73 0.79 0.56 0.98 0.71 Contabil, Accounting System 0.65 0.53 0.58 0.37 0.85 0.52 Fiscal, Tax System 0.89 0.62 0.73 0.43 0.93 0.59 FrameWork, Corporate Framework 0.59 0.71 0.64 0.35 0.97 0.51 GUF, Cosmetic System 0.73 0.61 0.66 0.51 0.93 0.66 Legado, Sales System 0.91 0.54 0.68 0.43 0.90 0.58 Logistica, Logistics System 0.67 0.71 0.69 0.42 0.96 0.58 SECV, Administration System 0.74 0.51 0.60 0.40 0.87 0.55 SisAlmox, Warehouse System 0.90 0.48 0.63 0.57 0.86 0.69 SisAP, Survey System 0.86 0.50 0.63 0.29 0.91 0.44 SisComo, Lending System 0.57 0.46 0.51 0.39 0.88 0.54 SisCusteio, Budget System 0.68 0.51 0.58 0.54 0.96 0.69 SisManutencao, Portal Configuration System 0.67 0.50 0.57 0.55 0.80 0.65 SisMkt, Marketing System 0.89 0.67 0.76 0.60 0.92 0.73 SisPortal , Web Portal 0.83 0.68 0.75 0.65 0.92 0.76 Web Services 0.65 0.56 0.60 0.50 0.87 0.64 Average 0.76 0.58 0.65 0.46 0.91 0.60 Navigation Prevention 13 0.1 0.9  Finally, we applied the T-Test and, in both cases, we obtained the p-value of 0.000, significantly lower than 0.05 rejecting our null hypotheses 000 1\(F-measure 000  000 2\(Fmeasure 000 We can, therefore, infer that better effectiveness of file modification prediction was achieved in our industrial projects than in the OSS projects Zimmermann et al [5 analyzed. The threats to validity to this conclusion are analyzed in the next section TABLE IV  K OLMOGOROV S MIRNOV T EST  18 18 6533 6028 7.444E-02 9.380E-02 096 110 096 110 076 102 409 466 996 982 N Mean Std. Deviation Normal Parameters a,b Absolute Positive Negative Most Extreme Differences Kolmogorov-Smirnov Z Asymp. Sig. \(2-tailed Navigation Prevention Test distribution is Normal a Calculated from data b  TABLE V  G ROUP S TATISTICS G ROUP 1    C LOSED S OURCE   G ROUP 2    O PEN S OURCE  18 6533 7.444E-02 1.755E-02 8 2750 6.969E-02 2.464E-02 18 6028 9.380E-02 2.211E-02 8 1213 1293 4.573E-02 Projects 1 2 1 2 Navigation Prevention N Mean Std Deviation Std. Error Mean 
59 


TABLE VI  L EVENE AND T  T ESTS FOR N AVIGATION AND P REVENTION   379 544 12.182 24 000 3783 3 106E-02 3142 4424 12.507 14.376 000 3783 3 025E-02 3136 4431 014 908 10.751 24 000 4815 4 479E-02 3891 5740 9.481 10.421 000 4815 5 079E-02 3690 5941 Equal variance assumed Equal variance not assumed Equal variance assumed Equal variance not assumed Navigatio n Preventio n F Sig Levene's Test for E quality of Variances t df Sig 2-tailed Mean Difference Std. Error Difference Lower Upper 95% Confidence Interval of the Difference t-test for Equality of Means B  Threats to Validity In spite of having achieved statistical significance in the study, one must consider the following threats to the validity of our study   We cannot conclude that all closed-source projects will yield similar results as the one we have obtained, process maturity can play a large role on the prediction effectiveness   Other software characteristics such as size and complexity may affect the association results. We have not test for those variables   The projects that we analyzed were stable and had a few number of transactions per day \(Table 1\ Less stable or more dynamic projects may yield different results   Like in t h e  or der i ng o f  cha nge s m a y i n fl ue nc e  the results for Navigation and Error Prevention VI  C ONCLUSIONS AND FUTURE WORK  This article shows that software module modification association rules derived from our stable industrial environment were more effective than those derived from the OSS projects reported in the literature. As association rules are already being successfully applied for impact analysis in this context [5  o u r  resu l t s i n d i c a tes th at th ey c a n  als o  b e  effectively applied in industrial environments such as the one we studied  We believe that this finding may stimulate further studies in the industry and, hopefully, motivate them to invest on association mining to support software maintenance and evolution activities  It is important to observe that in our analysis systems with little evolutive maintenance, such as the Marketing and the Customer Management System, yield rules with precision and recall better than the average. This was expected as more stable systems should yield better association rules Also, independent of the number of transaction per day systems with small training sets, such as the Accounting and the Web Services Systems, yield rules with precision and recall worse than the average. This was also expected, as this number training examples helps to strengthen the rules As mentioned before, we adapted the software engineering experimental process described in Wohlin et al  o so ft w a r e  r e po si t o r i e s m i ni ng e x p e r i m e nt s. We be l i e v e that the studies, applications, and tools for software repository mining can benefit from this type of approach Rigorous experimental description facilitates replication of studies and the executing of systematic reviews and other types of secondary analysis in the field [18  C o n s id e r in g th e  number of studies being done in the area, we believe that experimental formalism combined with approaches like standardization of data exchange formats among software repositories [1  can  con t ri b u t e t o f a cili tat e th e ex ecu t i o n  and replication of studies in the area As future work, we will start to look at fine granularity associations, analyzing classes and methods as opposed to files. We will also analyze relationships between coupling and the associations mined from version control systems We are currently finishing a Microsoft Visual Studio plug-in to use the mined rules to aid programmers on the fly It will work as a monitor that verifies saved files and warns programmers about unverified associated files. This will facilitate the programmers’ impact analysis effort and mitigate errors during program modification. After its completion, the plug-in will be experimentally evaluated in carefully controlled case studies. Lastly, we will use our Data Warehouse [6 o t e st s e ve ra l  o t her so ft w a r e m i ni ng  techniques over the data we have already gathered and preprocessed A CKNOWLEDGMENT  This study could only be developed due to the full support of CIAL–Brazil and its staff. This work is partially 
60 


supported by CNPq – Brazil’s National Research and Development Council R EFERENCES  1  Mendonça, M. G. and Sunderhaft, Nancy L \(1999\. Mining Software Engineering Data: A Survey. A DACS State-of-the-Art Report Available at http://www.dacs.dtic.mil/techs/datamining/datamining.pdf 2  Mithun Acharya, Tao Xie, Jian Pei, and Jun Xu \(2007\. Mining API Patterns as Partial Orders from Source Code: From Usage Scenarios to Specifications. In Proceedings of the 6th joint meeting of the European Software Engineering Conference and the ACM SIGSOFT Symposium on the Foundations of Software Engineering \(ESEC/FSE 2007\ Dubrovnik, Croatia, pp. 25-34 3  Zimmermann, T.; Kim, S.; Whitehead ,E. J. and Zeller, A \(2007 Predicting Faults from Cached History. In Proc. of the 29th International Conference on Software Engineering \(ICSE 2007 pages 489–498 4  Lucas Layman, Nachiappan Nagappan, Sam Guckenheimer, Jeff Beehler, Andrew Begel \(2008\. Mining software effort data preliminary analysis of visual studio team system data. In Proceedings of the International Working Conference on Mining Software Repositories, pages 43-46 5  Zimmermann, T., Zeller, A., Weissgerber, P., and Diehl, S \(2005 Mining Version Histories to Guide Software Changes. IEEE Transactions on Software Engineering, 31, 429-445 6  Colaço, Methanias, Mendonça, M. G., Rodrigues, Francisco \(2009 Data Warehousing in an Industrial Software Development Environment.  Paper submitted to 33th IEEE Software Engineering Workshop 7  T. T. Ying \(2003\. Predicting source code changes by mining revision history. Master’s thesis, University of British Columbia, Canada 8  T. Zimmermann, S. Diehl, and A. Zeller \(2003\. How history justifies system architecture \(or not\. In Proc. International Workshop on Principles of Software Evolution, Helsinki, Finland, pages 73–83 9  H. Gall, M. Jazayeri, and J. Krajewski \(2003\. CVS release history data for detecting logical couplings. In Proc. International Workshop on Principles of Software Evolution, Helsinki, Finland, pages 13–23   Robert Michael Dondero, Jr \(2008\. Predicting Software Change Coupling. PhD dissertation, Drexel University, USA   Michail \(2000\. Data mining library reuse patterns using generalized association rules. In International Conference on Software Engineering, pages 167–176   Wohlin, P. Runeson, M. Host, M. C. Ohlsson, B. Regnell, and A Wesslén \(2000\. Experimentation in software engineering: an introduction. Kluwer Academic Publishers, ISBN: 0-7923-8682-5   R. van Solingen and E. Berghout \(1999\. The Goal/Question/Metric Method: A practical guide for quality improvement of software development. McGraw-Hill   C. J. V. Rijsbergen \(1979\ Information Retrieval, 2nd edition Butterworths, London   Zimmermann T. and Weibgerber, P \(2004\ Preprocessing CVS data for fine-grained analysis. In Proc. International Workshop on Mining Software Repositories \(MSR04\, Edinburgh   K. Fogel and M. O’Neill \(2002\. cvs2cl.pl: CVS-log-message-toChangeLog conversion script. Available at http://www.redbean.com/cvs2cl   R. Agrawal and R. Srikant \(1994\ Fast algorithms for mining association rules. In Proceedings of the 20th Very Large Data Bases Conference \(VLDB\, pages 487–499. Morgan Kaufmann   T. Dyba, B. Kitchenham, and M. Jorgensen \(2005\. Evidence-based software engineering for practitioners. Software, IEEE, 22\(1\65   Sunghun Kim, Thomas Zimmermann, Miryung Kim, Ahmed E Hassan, Audris Mockus, Tudor Girba, Martin Pinzger, E. James Whitehead Jr., Andreas Zeller \(2006\. TA-RE: An Exchange Language for Mining Software Repositories. In Proceedings of the Third International Workshop on Mining Software Repositories Shanghai, China, pp. 22-25   Michael Grossman and Robert Katz \(1986\. A new approach to means of two positive numbers. International Journal of Mathematical Education in Science and Technology, Volume 17 Number 2, pages 205 – 208 
61 


Application of Chaotic Particle Swarm Optimization Algorithm in Chinese Documents Classification 763 Dekun Tan Qualitative Simulation Based on Ranked Hyperreals 767 Shusaku Tsumoto Association Action Rules and Action Paths Triggered by Meta-actions 772 Angelina A. Tzacheva and Zbigniew W. Ras Research and Prediction on Nonlinear Network Flow of Mobile Short Message Based on Neural Network 777 Nianhong Wan, Jiyi Wang, and Xuerong Wang Pattern Matching with Flexible Wildcards and Recurring Characters 782 Haiping Wang, Fei Xie, Xuegang Hu, Peipei Li, and Xindong Wu Supplier Selection Based on Rough Sets and Analytic Hierarchy Process 787 Lei Wang, Jun Ye, and Tianrui Li The Covering Upper Approximation by Subcovering 791 Shiping Wang, William Zhu, and Peiyong Zhu Stochastic Synchronization of Non-identical Genetic Networks with Time Delay 794 Zhengxia Wang and Guodong Liu An Extensible Workflow Modeling Model Based on Ontology 798 Zhenwu Wang Interval Type-2 Fuzzy PI Controllers: Why They are More Robust 802 Dongrui Wu and Woei Wan Tan Improved K-Modes Clustering Method Based on Chi-square Statistics 808 Runxiu Wu Decision Rule Acquisition Algorithm Based on Association-Characteristic Information Granular Computing 812 JianFeng Xu, Lan Liu, GuangZuo Zheng, and Yao Zhang Constructing a Fast Algorithm for Multi-label Classification with Support Vector Data Description 817 Jianhua Xu Knowledge Operations in Neighborhood System 822 Xibei Yang and Tsau Young Lin An Evaluation Method Based on Combinatorial Judgement Matrix 826 Jun Ye and Lei Wang Generating Algorithm of Approximate Decision Rules and its Applications 830 Wang Yun and Wu-Zhi Qiang Parameter Selection of Support Vector Regression Based on Particle Swarm Optimization 834 Hu Zhang, Min Wang, and Xin-han Huang T-type Pseudo-BCI Algebras and T-type Pseudo-BCI Filters 839 Xiaohong Zhang, Yinfeng Lu, and Xiaoyan Mao A Vehicle License Plate Recognition Method Based on Neural Network 845 Xing-Wang Zhang, Xian-gui Liu, and Jia Zhao Author Index 849 
xiii 


   C4.2 Open GL has excellent documentation that could help the developer learn the platform with ease C4.3 Developer has very little ex perience in working with Open GL platform  For our case study, alternative B i.e. Adobe Director was the most favorable alternative amongst all the three. It catered to the reusability criteria quite well and aimed at meeting most of the desired operational requirements for the system   6. CONCLUSION & FUTURE WORK  The main contribution of this paper is to develop an approach for evaluating performance scores in MultiCriteria decision making using an intelligent computational argumentation network. The evaluation process requires us to identify performance scores in multi criteria decision making which are not obtained objectively and quantify the same by providing a strong rationale. In this way, deeper analysis can be achieved in reducing the uncertainty problem involved in Multi Criteria decision paradigm. As a part of our future work we plan on conducting a large scale empirical analysis of the argumentation system to validate its effectiveness   REFERENCES  1  L  P Am g o u d  U sin g  A r g u men ts f o r mak i n g an d  ex p lain in g  decisions Artificial Intelligence 173 413-436, \(2009 2 A  Boch m a n   C ollectiv e A r g u men tatio n    Proceedings of the Workshop on Non-Monotonic Reasoning 2002 3 G  R Bu y u k o zk an  Ev alu a tio n o f sof tware d e v e lo p m en t  projects using a fuzzy multi-criteria decision approach Mathematics and Computers in Simualtion 77 464-475, \(2008 4 M T  Chen   F u zzy MCD M A p p r o ach t o Selec t Serv ice  Provider The IEEE International Conference on Fuzzy 2003 5 J. Con k li n  an d  M. Beg e m a n   gIBIS: A Hypertext Tool for Exploratory Policy Discussion Transactions on Office Information Systems 6\(4\: 303  331, \(1988 6 B P  Duarte D e v elo p in g a p r o jec ts ev alu a tio n sy ste m based on multiple attribute value theroy Computer Operations Research 33 1488-1504, \(2006 7 E G  Fo rm an  T h e  A n a l y t ic Hier a rch y P r o cess A n  Exposition OR CHRONICLE 1999 8 M. L ease  an d J L  L i v e l y  Using an Issue Based Hypertext System to Capture Software LifeCycle Process Hypermedia  2\(1\, pp. 34  45, \(1990 9  P e id e L i u   E valu a tio n Mo d e l o f Custo m e r Satis f a c tio n o f  B2CE Commerce Based on Combin ation of Linguistic Variables and Fuzzy Triangular Numbers Eight ACIS International Conference on Software Engin eering, Artificial Intelligence Networking and Parallel Distributed Computing, \(pp 450-454 2007  10  X  F L i u   M an ag e m en t o f an In tellig e n t A r g u m e n tatio n  Network for a Web-Based Collaborative Engineering Design Environment Proceedings of the 2007 IEEE International Symposium on Collaborative Technologies and Systems,\(CTS 2007\, Orlando, Florida May 21-25, 2007 11 X. F L i u   A n In ternet Ba se d In tellig e n t A r g u m e n tatio n  System for Collaborative Engineering Design Proceedings of the 2006 IEEE International Symposium on Collaborative Technologies and Systems pp. 318-325\. Las Vegas, Nevada 2006 12 T  M A sub jec tiv e assess m e n t o f altern ativ e m ission  architectures for the human exploration of Mars at NASA using multicriteria decision making Computer and Operations Research 1147-1164, \(June 2004 13 A  N Mo n ireh  F u zzy De cisio n Ma k i n g b a se d o n  Relationship Analysis between Criteria Annual Meeting of the North American Fuzzy Information Processing Society 2005 14 N  P a p a d ias HERMES Su p p o rti n g A r g u m e n tative  Discourse in Multi Agent Decision Making Proceedings of the 15th National Conference on Artifical Intelligence \(AAAI-98  pp. 827-832\dison, WI: AAAI/MIT Press,  \(1998a 15  E. B T riantaph y llo u   T h e Im p act o f  Ag g r e g atin g Ben e f i t  and Cost Criteria in Four MCDA Methods IEEE Transactions on Engineering Management, Vol 52, No 2 May 2005 16 S  H T s a u r T h e Ev alu a tio n o f airlin e se rv ice q u a lity b y  fuzzy MCDM Tourism Management 107-115, \(2002 1 T  D W a n g  Develo p in g a f u zz y  T O P S IS app r o ach  b a sed  on subjective weights and objective weights Expert Systems with Applications 8980-8985, \(2009 18 L  A  Zadeh  F u z z y Sets   Information and Control 8  338-353, \(1965  152 


                        





