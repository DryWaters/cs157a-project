html><head></head><body><pre style="word-wrap: break-word; white-space: pre-wrap;">Proceedings  of the 24th International Conference on Distributed Computing Systems Workshops \(ICDCSW  04 0-7695-2087-1/04 $20.00  2004 IEEE Proceedings of the 24th International Conference on Distributed Computing Systems Workshops  ICDCSW  04 0-7695-2087-1/04 $20.00  2004 IEEE Proceedings of the 24th International Conference on Distributed Computing Systems Workshops  ICDCSW  04 0-7695-2087-1/04 $20.00  2004 IEEE Proceedings of the 24th International Conference on Distributed Computing Systems Workshops  ICDCSW  04 0-7695-2087-1/04 $20.00  2004 IEEE Proceedings of the 24th International Conference on Distributed Computing Systems Workshops  ICDCSW  04 0-7695-2087-1/04 $20.00  2004 IEEE Proceedings of the 24th International Conference on Distributed Computing Systems Workshops  ICDCSW  04 0-7695-2087-1/04 $20.00  2004 IEEE pre></body></html 


KIMAS 2003 BOSTON USA We represent each record by 2"-1 tuples of the form hi j Since all values may be expressed as integers we use them as hash values for pattern searching 3 UNIQUENSS We measure the novelty or interestingness of database records by the uniqueness of combinations of their field values We consider the k-uniqueness of a record A record is k-unique for a combination of field values when the combination matches k or fewer records in the database This definition of k-uniqueness is taken from the notion of k-anonymity described in 6 Records that are k-unique may be of interest for many reasons In our work on data privacy it is important to find k-unique records because these records are at-risk for re-identification and may result in the compromise of personal information privacy The measure is computed using Boolean functions where each literal corresponds to a record field We compute a checksum using the values of a record specified by the literals in the Boolean function An implicant is a Boolean function for which the record is k-unique A prime implicant is an implicant that is no longer an implicant if any literal is removed 41 A prime implicant represents the minimum combination of fields needed to make a record k-unique If a particular combination of fields makes a record unique then any combination containing this combination is also unique 5 By grouping k-unique records according to their prime implicants we can easily identify which records are at risk and which field and field values contribute to the at risk status 4 ALGORITHM Figure 2 shows the steps required to identify k-unique records using the novelty measures we have described The first step is to compute the checksums crci on each record j for each combination bi of fields This can be done efficiently by using a hash table with the checksum as the key and the list of records generating that checksum as the value We have one such hash table for each Boolean function bi To save space we can replace the list of records with an integer count of matching records when the number of matching records exceeds k The next step is to find all of the combinations of fields bi that make each record k-unique This is done by finding every record list having k or fewer records Results are stored in a hash table with the record index j as the key and the list of implicants bi as the value The third step is to find the set of prime implicants for each k-unique record by removing non-prime implicant Boolean functions from the list of implicants for each record Finally compute the fewest combinations of fields uniqueness of the combination of fields and the number of prime implicants for each record Sort each record on each of these measures 1.Compute b,,crc j for each i and 2.Find the set of implicants b for each record j with Icrc2,1<=k 3.Compute the prime implicants for each record j 4.Compute novelty measures on each record using the prime implicants and sort records on each measure j Figure 2 Algorithm to find all k-unique records 5 ALGOFUTHM ANALYSIS In Step 1 of the algorithm for all records rj 1 e j  N we must compute the checksum for each combination of fields and values There are 2"-1 combinations for m fields This gives a worst case space and time of O\(2"N Step 2 also has time complexity of O\(2"N The order comes from the worst case where each record generates a unique checksum for each combination of fields Space complexity is O\(2'"N because there are 2m-1 implicants for each record since each implicant generated a unique checksum The space complexity,of step 3 just reduces the number of implicants in step 2 so we can place an upper hound on the complexity of O\(2"'N A naive search for prime implicants compares each implicant against each other resulting in 22"-2mt'+l comparisons for each record and a worst-case time complexity of O\(2'"N Step 4 of the algorithm has linear space complexity to store the measures for each record If we assume an in-place sorting algorithm like QuickSon then the space complexity is O\(N It takes linear time to compute the novelty measures for each record but with sorting, time complexity is O\(2 Combining results from steps 1-4 we find that the algorithm has a worst-case space complexity of d2 4\(2"'N 03\(2 O N and a worst-case time complexity of Despite the poor theoretical space-time complexity of the algorithm we expect the actual space-time complexity to be much better We make this claim on the observation that records in most databases exhibit considerable similarity 581 


KlMAS 2003 BOSTON USA Data sets have records with many field values in common Values of fields do not always take all possible values and are not evenly distributed across the range of all possible values All possible field values and all possible combinations of values may not exist in the data Furthermore not all available fields need to be used for finding k-unique records It may be that only a small subset of fields is of interest for k-uniqueness The result we expect in most situations is that the number of unique checksums is much less than N*\(2"-1 for N records with m fields It has been our experience that these are valid assumptions for medical data 6 EXAMPLE Given an example data set we compute the uniqueness measures for each record and show the records that are identified as most unique by each of these measures Table 1 contains data we use for our example Twelve individuals are described by five fields organization identifier OID SEX RACE TYPE and ZIP CODE We apply the techniques discussed previously to identify unique groups of records in the data We assume that k=l so that a record is unique on a combination of fields if it is the only record that has that combination of values Table 2 shows that three records 3 7 11 have unique combinations of values for the aid and sex fields \(indicated by bold character values In Table 3 records 3 8 and 11 are unique on the OID and RACE fields We can group two records 3 11 on their k-uniqueness over the three fields RACE TYPE and ZIP Table 4 In Table 5 we see the grouping of records 3 and 12 by their k-uniqueness on SEX RACE and ZIP values Records 3 and 11 also form a group of k-unique records on the OID and TYPE fields Table 6 Table 7 summarizes the results of the grouping Records 7 8 and 12 form k-unique groups of size one for a number of field combinations meaning that no other record is unique on that combination of field values For example record 8 is the only record with unique values for RACE ZIP TYPE,ZIP SEX,ZIP OID,ZIP From this table we also observe that records 3 and 8 belong to the most k unique groups five followed by record 11 with four groups and records 7 and 12 with three groups Table 1 Sample data Table 2 Records grouped by organization and sex 582 


KlMAS 2003 BOSTON USA Table 3 Records grouped by organization and race id 0.2 sex race 1 1 m Caucasian 71 1 m Caucasian 3 2 f Caucasian 4 3 f african 5 2 f 2frirsn ____________ _______  Table 4 Records grouped by race other and zip type zip 32 122 1 1 32122 32110 1 1 32110 1 win Table 5 Records grouped by sex race and zip  I 6 3 I 3 8 3 9 1 10 1 11 2 12 4  __ f Can 1 32110 m african 1 321 IO 321 11 f Caucasian I m african 2 321 11  m african 2 32110 m Caucasian 2 32110 _______ m african 2 321 11 583 


KlMAS 2003 BOSTON USA Table 6 Records grouped by organization and other Table 7 Records clustered by unique group I CONCLUSIONS We have presented a method for finding groups of unique records in data The groups are defined by the combinations of fields that make the records unique in the data This method of information discovery in data is being applied to identifying anonymous records in public use microdata that are at-risk for re-identification These techniques allow the rapid identification of unique records in data sets without a priori knowledge of field values or field-value ranges. These techniques can also be used to identify groups of records k I that have the same characteristics This results in the formulation and creation of new knowledge about the data, based on information that is not evident and is not otherwise easily obtained The same technique can be applied to other areas 8 REFERENCES l D Lambert Measures of Disclosure Risk and Harm Journal of Opal Statistics 9\(2 1993 http://citeseer.nj nec.com/25496.html 2 R Agrawal and R Srikant Fast Algorithms for Mining Association Rules Proceedings of the 20th Intemational Conference on Very Large Data Bases Morgan Kaufmann 1994 http://citeseer.nj.ne.com/article/agrawal94fast.html 3 R.J Hilderman and H.J Hamilton Knowledge discovery and interestingness measures: a survey Technical Report CS 99-04 University of Regina October 2000 http://citeseer.nj nec.com/hilderman99knowledge.html 4 A Ohm and L Ohno-Machado Using boolean reasoning to anonymize databases Arfificial Intelligence in Medicine 15\(3\1999 http://citeseer.nj.nec.com/6 1688.html 5 A Takemura Minimum unsafe and maximum safe sets of variables for disclosure risk assessment of individual records in a microdata set Journal of Japan Statistical Society 32107-1 17,2002 http://citeseer.nj.nec.com/4264lO.html 6 P Samarati and L Sweeney Protecting privacy when disclosing information k-anonymity and its enforcement through generalization and suppression Unpublished 1998 http://citeseer.nj.nec.com/samarati98protecting.html Notice is material is based upon work supported by the Nodonnl Science Folrndotion under Grant No 023I 783 Any opinions,findings and conclusions or recommendations upressed in this material arc those of the author ond do not necesssody reflect the vicwr of the Notiom1 Science Foundnfion 584 


 e  Detected SNPs in the top 20 models rank location of SNPs AIC 1 6455 11647 14470 15874 16217 16261 16291 192.77 2 6455 14470 15874 16217 16261 16291 16519 193.57 3 5417 14470 15874 16217 16261 16291 16519 194.57 4 4386 15874 16217 16261 16311 16519 194.72 5 6455 14470 15874 16217 16261 16291 194.84 6 11647 14470 15874 16217 16261 16291 16519 195.19 7 4386 5417 14470 16261 16519 195.44 8 6455 11647 14470 15874 16261 16291 195.81 9 5417 11647 12771 15874 16217 16261 196.01 10 6455 11647 14470 16217 16261 16291 196.17 11 12771 15874 16261 16311 16519 196.27 12 5417 11647 14470 15874 16261 16291 196.64 13 12771 14470 15874 16129 16217 16261 16311 196.90 14 14470 15874 16217 16261 16291 196.96 15 5417 14470 15874 16217 16261 16291 197.15 16 5417 11647 14470 15874 16217 16261 16291 197.23 17 6455 11647 14470 15874 16261 16291 197.67 18 6455 14470 15874 16261 16260 16291 198.15 19 11647 12771 15874 16260 16261 16519 198.16 20 6455 14470 16217 16261 16291 198.84 GA in the future work 3 The use of the logistic regression has many other merits We can statistically evaluate the accuracy and reliability of the estimation because the result is provided as the posterior probability We also can extend our model for handling nonlinear behavior of genetic or environmental factors Furthermore we can extend the conventional two-group recognition susceptible or not susceptible to more precise multi-group recognition We would like o investigate these topics in our future paper References 1 H Akaike Information theory and an extension of the maximum likelihood principle Proc 2nd Inter Symp on Information Theory Petrov B.N and Csaki F eds Akademiai Kiado Budapest 267-281 1973 2 H Akaike A ew look at the statistical model identi\223cation IEEE Trans Autom Contr AC-19 716-723 1974 3 I.C Gray D.A Campbell and N.K Spurr Single nucleotide polymorphisms as tools in human genetics Hum Mol Genet 9 2403-2408 2000 4 K Hao X Xu N Laird X Wang and X Xu Power estimation of multiple SNP association test of case-control study and application Genetic Epidemiology 26 22-30 2004 5 E.S Lander and N Schork Genetic dissection of complex traits Science 265 2037-2048 1994 6 P McCullagh and J.A Nelder Generalized Linear Models  2nd ed Chapman and Hall/CRC London 1989 7 M.R Nelson S.L.R Kardia R.E Ferrell and C.F Sing A combinatorial partitioning method to identify multilocus genotypic partitions that predict quantitative trait variation Genome Research 11 458-470 2001 8 N Risch and K Merikangas The future of genetic studies of complex human diseases Science 273 1516-1517 1996 9 R.J Sigal A Doria J.H Warram and A.S Krolewski Codon 972 polymorphism in the insulin-receptor-substrate1 gene obesity and risk of non-insulin-dependent diabetes mellitus J Clin Endocrinol Metab 81 1657-1659 1996 10 R.S Spielman R.E McGinnis and W.J Ewens Transmission test for linkage disequilibrium the insulin gene region and insulin-dependent diabetes mellitus IDDM Am J Hum Genet 52 506-513 1993 11 R.S Spielman and W.J Ewens The TDT and other familybased tests for linkage disequilibrium and association Am J Hum Genet 59 983-989 1996 12 A Wille J Hoh and J Ott Sum statistics for the joint detection of multiple disease loci in case-control association studies with SNP markers Genetic Epidemiology 25 350-359 2003 13 H Zhang and G Bonney Use of classi\223cation trees for association studies Genetic Epidemiology 19 323-332 2000 14 http://www.giib.or.jp/mtsnp/index_e.html Proceedings of the Fourth IEEE Symposium on Bioinformatics and Bioengineering \(BIBE\22204 0-7695-2173-8/04 $ 20.00 \251 2004 IEEE 


512 The T-norms min produce 2.0 examples of A&amp;B, 0.6 of A&amp;+3, and 0.6 of -A&amp;-B. The corresponding values for the product T-norm are 1.7, 0.3, and 0.3. The measures yield prod I 0.85 I 0.7 I 0.35 I 5.7 I 0.0 1 0.0 As with the data in TI, there is a notable difference between the confdence measures with the two T-norms. There are also differences in the ratio of examples to counterexamples and the interest measures. The analysis of the examples generated by the minimum indicate that the association A =$ B may he of interest. However, with the examples produced by the product T-norm, both of the interest measures are neutral One fnal example considers tuples tuples with no discem able pattem af T m={a,b,p with parameter p .  Setting p to 0 produces the minimum and 1 produces the product. For a particular set of data, the optimal T-norm could he identifed by Ending the value of the parameterp E [0,1] that maximizes the validity measure under consideration. The optimization could use either algebraic or numeric methods, hut the latter seem more suitable for the analysis of large data sets VI. CONCLUSION The determination of the degree that a tuple is an example of a fuzzy rule or association depends upon the underlying relationship between the attributes. In data mining, this re lationship is not known a number of possible methods for determining 'examplehood' should be considered. When the attribute domains are covered or partitioned by the predicates the relationship between joint and marginal distributions im pose restrictions on the suitability of T-norms to evaluate the degree a tuple is an example of an association. The parametric representations of T-norms presents the possibility of simultaneously learning both the relationship between the attributes and the proper assessment of the number of examples and counterexamples REFERENCES I] C. Alsina. On a family of connective for fuzzy sets. Fuzzy Sets and Systems, 16:231-235, 1985 17.1 P. Bosc, D. Dubois, 0. PriveR H. Prade, and M. de Calm&amp;. Fuzzy summarization of data using fuzzy cardinalities. In Pmceedings of the Ninth Intematioml Conference IPMU 2002, Pages 1553-1559, Annecy, . France, 2002 3] S .  Brin. R. Motwani, and C. Silverstein. Beyond market baskets: Gner alizing association N I ~ S  to correlations. In SIGMOD 1997, Proceedings ACM SIGMOD Intemtionol Conference on Management of Doto, pages 265-276, May 1997 141 K C. C. Chan and W.-H. Au. An effective algorithm for mining inter esting quantitative association rules. In Selected Areas in Cryptography pages 88-90, 1997 51 1. M. de Gruaf, W. A. Kosters, and I. J. W. Wilteman. Interesting fuzzy association rules in quantitative databases. Lecture Notes in Computer Science, 2168:14&amp;152, 2001 6] M. Delgado, N. Marin, D. S&amp;chez, and M. A. Vila. F w y  association rules: General madel and applications. IEEE Tromoctiom on Fuuy System, pages 21k225, 2003 7] M. Delgado, D. Sanchez, and M. A. Wa. Fuzzy cardinality based evaluation of quantifed sentences. Intemtionol Joumal of Appmximote Rearming, 2323-66, 2000 8] D. Dubois, E. Hullermeier, and H. Prade. Toward the representation of imolication-based fuuv rules in tenns of C ~ ~ S P  rules. In Pmceedinns of r the Joint 9th IFSA C o ~ r e s s  and NAFIPS ZOth'lntemational Confe&amp;i pages 1592-1597, Vancouver. July 2001 9] D. Dubois, H. prade, and T. Sudkamp. A discussion of indices for the evaluation of fuzzy associations in relational databases. In T. Bilgic B. De Baets. and 0. Kavnak. edilors. Pmceedinms of the Ek-vemh IFSA World Congkss, pages i l l - I  IS, Istanbul, June"2003 lo] Tzung-Pei Hang, Kuei-Ying Lin, and Shyue-Liang Wang. Fuzzy data mining for interesting generalized association rules. Fuuy Sets Sysr 138\(2 I l l  E. Hullermeier. Fuzzy association rules semantic issues and quality 


I l l  E. Hullermeier. Fuzzy association rules semantic issues and quality measures. In B. Reusch, editor, Computotianal Intelligence: Theory ond Applicotions, LNCS, pages 38W391. Springer-Verlag, Berlin, 2001 i2] M. Klemettinen, H. Manila, P. Ronkainen, H. Toivonen. and A. 1 Verkamo. Finding interesting rules fmm large sets of discovered association rules. In N. R. Adam, B. K. Bhargava, and Y. Yesha editors, Third Intemtionol Conference on Infomt ion and Knowledge Management \(CIKM'94 I31 Y. Kodratoff. Comparing machine leaming and knowledge discovery in databases: An application to knowledge discovery in texts. In G. Paliouras, V. Karkaletsis, and C. D. Spympoulas, editors, Machine Leoming nnd Its Applications, volume 2049 of Lecture Notes in Com puter Science, pages 1-21. Berlin, 2001. Springer-Verlag 5 I41 C. M. Kuok A. W.-C. Fu, and M. H. Wong. Mining fuzzy association rules in databases. SIGMOD Record. 27\(1 IS] 1. H. Lee and H. L. Kwang. An extension of association rules using fuzzy sets. In Pmceedings of IFSA 1997, pages 399-402, Prapue, lune 1997 16] M. I. Marrin-Bautista D. Sanchez, M. A. Vila, and H. m e n .  Measuring effectiveness in fuzzy information reldeval. In Flexible Query Answering in Fuuy Informtion Retrieval, pages 396-402. Physic-Verlag, 2001 171 R. 1. Miller and Y. Yang. Association rules over interval data. In SIGMOD 1997, Pmceedings ACM SIGMOD lntemntionol Conference on Monogement of Data, pages 452451, Tuscan, AR, May 1997. ACM Press 18] G. Piatetsky-Shapim. Discovey. analysis and presentation of strong rules. In G. PiatetsQ-Shapim and W. Frawley, editors, Knowledge Discovery in Databases, pages 229-248. AAAllMIT Press, Menlo Park CA, 1991 I91 P. Smets. Elementary semantic operators. In k. R. Yagez editor, Fuuy Set ondPossibility Theory: Recent Advances, pages 247-256. Pergamon Press, 1982 20] R. Srikant and R. Agrawd. Mining quantitative association rules in large relational tables. In H. V. Iagadish and 1. S. Mumick, editon Pmceedings of the I996 ACM SIGMOD Intemtioml Conference on Monogemnt of Dola, pages 1-12, Montreal, 1996 211 T. Sudkamp and R. J. Hammell n. Interpolation. completion. and l e m ing fuzzy rules. IEEE Transactions on System, Man, and Cybernetics 24\(2 221 P. Tan, V. Kumar, and J .  Srivastava. Selecting the right interestingness measure for association pauems. In Pmceedings of the Eight ACM SIGKDD Intemtionol Conference on Knowledge Discovery and Dora Mining, pages 3241.  Edmonton. July 2002 231 L. A. Zadeh. Pmbabilily measures of fuzzy Sem. Jouml of Mnrhew icnl Analysis and Applications, 23421427, 1968 13 pre></body></html 


4J H. Fu and E. Mephu Nguifo. Partitioning large data to scale up lattice-based algorithm. In Proceedings ofICTAI03 pages S37-S41, Sacramento, CA, November 20 03. IEEE Press SJ H. Fu and E. Mephu Nguifo. How well go lattice algo  rithms on currently used machine learning testbeds? In 4emes journees d' Extraction et de Gestion des Connais  sances, pages 373-384, France, 20 04 61 B. Ganter and R. Wille. Formal Concept Analysis. Mathe  matical Foundations. Springer, 1999 7J J. Han, J. Pei, and Y. Yin. Mining frequent patterns without candidate generation. In W. Chen, J. Naughton, and P. A Bernstein, editors, 2000 ACM SIGMOD Intl. Conference on Management of Data, pages 1-12. ACM Press, OS 2000 Data file Objects Items Min support FCI PFC \(msec msec audiology 26 110 1 30401 1302 8563 soybean-small 47 79 1 3541 516 431 lung-cancer 32 228 1 186092 21381 279689 promoters 106 228 3 298772 120426 111421 soybean-large 307 133 1 806030 357408 364524 dermatogogy 366 130 50 192203 20204 18387 breast-cancer-wis 699 110 1 9860 3529 1131 kr-vs-kp 3196 75 1100 2770846 1823092 483896 agaricus-Iepiota 8124 124 100 38347 34815 1462 connect-4bi.data 67557 126 1000 2447136 1165806 65084 Table 1. Experiments on real data.\(FCI means frequent closed itemsets. msec means milliseconds For Ref., + means PFC is faster than CLOSET Data file Min support FCI PFC \(msec msec Worst16 1 65534 571 470 271 9 Worst17 1 131070 1112 1002 541 9 Worst18 1 262142 2243 2174 1091 9 Worst19 1 524286 4576 4466 2213 10 Worst20 1 1048574 9243 9484 4606 10 Worst25 20 68405 2103 66916 451 11 Worst25 19 245505 6099 1095065 1552 11 Worst25 18 726205 15452 10235287 4486 11 Worst25 17 1807780 33348 / 10755 11 Worst25 15 7119515 102237 / 39296 11 Worst30 25 174436 6980 426964 1302 12 Worst30 20 53009101 1029771 / 344035 12 Worst50 47 20875 1132 1042 422 14 Worst50 45 2369935 227207 / 29102 14 Worst60 57 36050 7320 3205 821 15 Worst60 56 523685 82938 1665715 9123 15 Worst60 55 5985197 772210 / 92102 15 Worst70 68 2485 1102 190 121 15 Worst70 67 57225 18096 9483 1933 15 Worst70 66 974120 242138 / 26398 15 Table 2. Experiments on the worst case data 8] S. Kuznetsov and S. Obiedkov. Comparing performance of algorithms for generating concept lattices. lETAI Special Issue on Concept Lattice for KDD, 14\(2/3 9j E. Mephu Nguifo, M. Liquiere, and V. Duquenne. lETA Special Issue on Concept Lattice for KDD. Taylor and Fran  cis, 2002 IOj N. Pasquier, Y. Bastide, R. Taouil, and L. Lakhal. Efficient mining of association rules using closed itemsets lattices lournal of Information Systems, 24\(1 II j 1. Pei, 1. Han, and R. Mao. CLOSET: An efficient algo  rithm for mining frequent closed itemsets. InACM SIGMOD Workshop on Research Issues in Data Mining and Knowl  edge Discovery, pages 21-3 0, 200 0 12] 1. Wang, 1. Han, and 1. Pei. Closet+: Searching for the best strategies for mining frequent closed itelnsets. In In Pro  ceedings of the Ninth ACM SIGKDD International Confer  ence on Knowledge Discovery and Data Mining \(KDD'03 Washington, DC, USA, 2003 13] M. I. Zaki and C.-I. Hsiao. CHARM: An efficient algorithm for closed item set mining. Technical Report 99-10, Rensse  laer Polytechnic Institute, 1999 


laer Polytechnic Institute, 1999 pre></body></html 


efficiency then AOFI. However utilization of fuzzy concept hierarchies provides more flexibility in reflecting expert knowledge and so allows better modeling of real-life dependencies among attribute values, which will lead to more satisfactory overall results for the induction process. The drawback of the computational cost may additionally decline when we notice that, in contrast to many other data mining algorithms, hierarchical induction algorithms need to run only once through the original \(i.e. massive dataset. We are continuing an investigation of computational costs of our approach for large datasets ACKNOWLEDGMENT Rafal Angryk would like to thank the Montana NASA EPSCoR Grant Consortium for sponsoring this research REFERENCES 1] J. Han , M. Kamber, Data Mining: Concepts and Techniques, Morgan Kaufmann, New York, NY 2000 2] J. Han, Y. Cai, and N. Cercone  Knowledge discovery in databases: An attribute-oriented approach  Proc. 18th Int. Conf. Ver y Large Data Bases, Vancouver, Canada, 1992, pp. 547-559 3] J. Han  Towards Efficient Induction Mechanisms in Database Systems  Theoretical Computing Science, 133, 1994, pp. 361-385 4] J. Han, Y. Fu  Discovery of Multiple-Level Association Rules from Large Databases  IEEE Trans.  on KD E, 11\(5 5] C.L. Carter, H.J. Hamilton  Efficient AttributeOriented Generalization for Knowledge Discovery from Large Databases  IEEE Trans. on KDE 10\(2 6] R.J. Hilderman, H.J. Hamilton, and N. Cercone  Data mining in large databases using domain generalization graphs  Journal of Intelligent Information Systems, 13\(3 7] C.-C. Hsu  Extending attribute-oriented induction algorithm for major values and numeric values   Expert Systems with Applications , 27, 2004, pp 187-202 8] D.H. Lee, M.H. Kim  Database summarization using fuzzy ISA hierarchies  IEEE Trans . on SMC - part B, 27\(1 9] K.-M. Lee  Mining generalized fuzzy quantitative association rules with fuzzy generalization hierarchies  20th NAFIPS Int'l Conf., Vancouver Canada, 2001, pp. 2977-2982 10] J. C. Cubero, J.M. Medina, O. Pons &amp; M.A. Vila  Data Summarization in Relational Databases through  Fuzzy Dependencies  Information Sciences, 121\(3-4 11] G. Raschia, N. Mouaddib  SAINTETIQ:a fuzzy set-based approach to database summarization   Fuzzy Sets and Systems, 129\(2 162 12] R. Angryk, F. Petry  Consistent fuzzy concept hierarchies for attribute generalization  Proceeding of the IASTED Int. Conf. on Information and Knowledge Sharing, Scottsdale AZ, USA, November 2003, pp. 158-163 13] Toxics Release Inventory \(TRI available EPA database hosted at http://www.epa.gov/tri/tridata/tri01/index.htm The 2005 IEEE International Conference on Fuzzy Systems790 pre></body></html 


the initial global candidate set would be similar to the set of global MFIs. As a result, during the global mining phase the communication and synchronization overhead is low  0 2 4 6 8 1 0 Number of Nodes Figure 5. Speedup of DMM 4.4.2 Sizeup For the sizeup test, we fixed the system to the 8-node con figuration, and distributed each database listed in Table 2 to the 8 nodes. Then, we increased the local database sire at each node from 45 MB to 215 MB by duplicating the initial database partition allocated to the node. Thus, the data distribution characteristics remained the same as the local database size was increased. This is different from the speedup test, where the database repartitioning was per formed when the number of nodes was increased. The per formance of DMM is affected by the database repartitioning to some extent, although it is usually very small. During the sizeup test, the local mining result of DMM is not changed at all at each node The results shown in Figure 6 indicate that DMM has a very good sizeup property. Since increasing the size of local database did not affect the local mining result of DMM at each node, the total execution time increased just due to more disk U 0  and computation cost which scaled almost linearly with sizeup 5 Conclusions In this paper, we proposed a new parallel maximal fre quent itemset \(MFI Max-Miner \(DMM tems. DMM is a parallel version of Max-Miner, and it re quires low synchronization and communication overhead compared to other parallel algorithms. In DMM, Max Miner is applied on each database partition during the lo 0 45 90 135 180 225 270 Amwnt of Data per Node \(ME Figure 6. Sizeup of DMM cal mining phase. Only one synchronization is needed at thc end of this phase to construct thc initial global candi date set. In the global mining phase, a top-down search is performed on the candidate set, and a prefix tree is used to count the candidates with different length efficiently. Usu ally, just a few passes are needed to find all global maximal frequent itemsets. Thus, DMM largely reduces the number of synchronizations required between processing nodes Compared with Count Distribution, DMM shows a great improvement when some frequent itemscts are large \(i.e long patterns employed by DMM for efficient communication between nodes; and global support estimation, subset-infrequency based pruning, and superset-frequency based pruning are used to reduce the size of global candidate set. DMM has very good speedup and sizeup properties References I ]  R. Agrawal and R. Srikant  FdSt Algorithms for Mining As sociation Rules  Pmc. o f f h e  ZOrh VLDB Conf, 1994, pp 487499 2] R. Agrawal and I. C. Shafer  Parallel Mining of Association Rules  IEEE Trans. on Knowledge and Dura Engineering Vol. 8, No. 6, 1996, pp. 962-969 3] R. I. Bayardo  Efficient Mining Long Patlems from Databases  Proc. ofrhe ACM SIGMOD Inf  l Conf on Man ogemenr ofDara, 1998, pp. 85-91 4] S.  M. Chung and J. Yang  A Parallel Distributive Join Al gorithm for Cube-Connected Multiprocessors  IEEE Trans on Parallel and Disrribured Systems, Vol. 7, No. 2, 1996, pp 127-137 51 M. Snir, S. Otto. S. Huss-Lederman, D. Walker, and J. Don gana, MPI: The Complete Reference, The MIT Press, 1996 


gana, MPI: The Complete Reference, The MIT Press, 1996 6] R. Rymon  Search through Systematic Set Enumeralion   Pmc. of3rd Inr  l Con$ on Principles of Knowledge Repre sentation and Reasoning, 1992, pp. 539-550 507 pre></body></html 


sketch-index in answering aggregate queries. Then Section 5.2 studies the effect of approximating spatiotemporal data, while Section 5.3 presents preliminary results for mining association rules 5.1 Performance of sketch-indexes Due to the lack of real spatio-temporal datasets we generate synthetic data in a way similar to [SJLL00 TPS03] aiming at simulation of air traffic. We first adopt a real spatial dataset [Tiger] that contains 10k 2D points representing locations in the Long Beach county \(the data space is normalized to unit length on each dimension These points serve as the  airbases  At the initial timestamp 0, we generate 100k air planes, such that each plane \(i uniformly generated in [200,300], \(ii, iii destination that are two random different airbases, and iv  the velocity direction is determined by the orientation of the line segment connecting its source and destination airbases move continually according to their velocities. Once a plane reaches its destination, it flies towards another randomly selected also uniform in [0.02, 0.04 reports to its nearest airbase, or specifically, the database consists of tuples in the form &lt;time t, airbase b, plane p passenger # a&gt;, specifying that plane p with a passengers is closest to base b at time t A spatio-temporal count/sum query has two parameters the length qrlen of its query \(square number qtlen of timestamps covered by its interval. The actual extent of the window \(interval uniformly in the data space \(history, i.e., timestamps 0,100 air planes that report to airbases in qr during qt, while a sum query returns the sum of these planes  passengers. A workload consists of 100 queries with the same parameters qrlen and qtlen The disk page size is set to 1k in all cases \(the relatively small page size simulates situations where the database is much more voluminous specialized method for distinct spatio-temporal aggregation, we compare the sketch-index to the following relational approach that can be implemented in a DBMS. Specifically, we index the 4-tuple table lt;t,b,p,a&gt; using a B-tree on the time t column. Given a count query \(with window qr and interval qt SELECT distinct p FROM &lt;t,b,p,a&gt WHERE t?qt &amp; b contained in qr The performance of each method is measured as the average number of page accesses \(per query processing a workload. For the sketch-index, we also report the average \(relative Specifically, let acti and esti be the actual and estimated results of the i-th query in the workload; then the error equals \(1/100 set the number of bits in each sketch to 24, and vary the number of sketches The first experiment evaluates the space consumption Figure 5.1 shows the sketch index size as a function of the number of sketches used \(count- and sum-indexes have the same results more sketches are included, but is usually considerably smaller than the database size \(e.g., for 16 signatures, the size is only 40% the database size 0 20 40 60 80 


80 100 120 140 160 8 16 32 number of sketches size \(mega bytes database size Figure 5.1: Size comparison Next we demonstrate the superiority of the proposed sketch-pruning query algorithm, with respect to the na  ve one that applies only spatio-temporal predicates. Figure 5.2a illustrates the costs of both algorithms for countworkloads with qtlen=10 and various qrlen \(the index used in this case has 16 sketches also illustrate the performance of the relational method which, however, is clearly incomparable \(for qrlen?0.1, it is worse by an order of magnitude we omit this technique Sketch-pruning always outperforms na  ve \(e.g., eventually two times faster for qrlen=0.25 increases with qrlen, since queries returning larger results tend to set bits in the result sketch more quickly, thus enhancing the power of Heuristics 3.1 and 3.2. In Figure 5.2b, we compare the two methods by fixing qrlen to 0.15 and varying qtlen. Similar to the findings of [PTKZ02]4 both algorithms demonstrate  step-wise  growths in their costs, while sketch-pruning is again significantly faster The experiments with sum-workloads lead to the same observations, and therefore we evaluate sketch-indexes using sketch-pruning in the rest of the experiments 4 As explained in [PTKZ02], query processing accesses at most two paths from the root to the leaf level of each B-tree regardless the length of the query interval Proceedings of the 20th International Conference on Data Engineering \(ICDE  04 1063-6382/04 $ 20.00  2004 IEEE sketch-pruning naive relational 0 100 200 300 400 500 600 700 800 900 0.05 0.1 0.15 0.2 0.25 number of disk accesses query rectangle length 300 0 100 200 400 500 600 1 5 10 15 20 number of disk accesses query interval length a qtlen=10 b qrlen=0.15 Figure 5.2: Superiority of sketch-pruning \(count As discussed in Section 2, a large number of sketches reduces the variance in the resulting estimate. To verify this, Figure 5.3a plots the count-workload error of indexes 


using 8-, 16-, and 32- sketches, as a function of qrlen qtlen=10 error \(below 10 it increases slowly with qrlen used, however, the error rate is much higher \(up to 30 and has serious fluctuation, indicating the prediction is not robust. The performance of 16-sketch is in between these two extremes, or specifically, its accuracy is reasonably high \(average error around 15 much less fluctuation than 8-sketch 32-sketch 16-sketch 8-sketch relative error 0 5 10 15 20 25 30 35 0.05 0.1 0.15 0.2 0.25 query rectangle length relative error 0 5 10 15 20 25 30 35 1 5 10 15 20 query interval length a qtlen=10, count b qrlen=0.15, count relative error query rectangle length 0 5 10 15 20 25 0.05 0.1 0.15 0.2 0.25 relative error query interval length 0 5 10 15 20 25 30 1 5 10 15 20 c qtlen=10, sum d qrlen=0.15, sum Figure 5.3: Accuracy of the approximate results The same phenomena are confirmed in Figures 5.3b where we fix qrlen to 0.15 and vary qtlen 5.3d \(results for sum-workloads number of sketches improves the estimation accuracy, it also leads to higher space requirements \(as shown in Figure 5.1 Figures 5.4a and 5.4b show the number of disk accesses for the settings of Figures 5.3a and 5.3b. All indexes have almost the same behavior, while the 32-sketch is clearly more expensive than the other two indexes. The interesting observation is that 8- and 16-sketches have 


interesting observation is that 8- and 16-sketches have almost the same overhead due to the similar heights of their B-trees. Since the diagrams for sum-workloads illustrate \(almost avoid redundancy 32-sketch 16-sketch 8-sketch number of disk accesses query rectangle length 0 50 100 150 200 250 300 350 400 0.05 0.1 0.15 0.2 0.25 number of disk accesses query interval length 0 50 100 150 200 250 300 350 1 5 10 15 20 a qtlen=10 b qrlen=0.15 Figure 5.4: Costs of indexes with various signatures Summary: The sketch index constitutes an effective method for approximate spatio-temporal \(distinct aggregate processing. Particularly, the best tradeoff between space, query time, and estimation accuracy obtained by 16 sketches, which leads to size around 40 the database, fast response time \(an order of magnitude faster than the relational method average relative error 5.2 Approximating spatio-temporal data We proceed to study the efficiency of using sketches to approximate spatio-temporal data \(proposed in Section 4.1 as in the last section, except that at each timestamp all airplanes report their locations to a central server \(instead of their respective nearest bases maintains a table in the form &lt;time t, plane p, x, y&gt;, where x,y with parameters qrlen and qtlen distinct planes satisfying the spatial and temporal conditions. For comparison, we index the table using a 3D R*-tree on the columns time, x, and y. Given a query, this tree facilitates the retrieval of all qualifying tuples, after which a post-processing step is performed to obtain the Proceedings of the 20th International Conference on Data Engineering \(ICDE  04 1063-6382/04 $ 20.00  2004 IEEE number of distinct planes \(in the sequel, we refer to this method as 3DR method introduces a regular res  res grid of the data space, where the resolution res is a parameter. We adopt 16 sketches because, as mentioned earlier, this number gives the best overall performance Figure 5.5 compares the sizes of the resulting sketch indexes \(obtained with resolutions res=25, 50, 100 the database size. In all cases, we achieve high compression rate \(e.g., the rate is 25% for res=25 evaluate the query efficiency, we first set the resolution to the median value 50, and use the sketch index to answer workloads with various qrlen \(qtlen=10 


workloads with various qrlen \(qtlen=10 size \(mega bytes database size 0 20 40 60 80 100 120 140 160 25 50 100 resolution Figure 5.5: Size reduction Figure 5.6a shows the query costs \(together with the error in each case method. The sketch index is faster than 3DR by an order of magnitude \(note that the vertical axis is in logarithmic scale around 15% error observations using workloads with different qtlen Finally, we examine the effect of resolution res using a workload with qrlen=0.15 and qtlen=10. As shown in Figure 5.6c, larger res incurs higher query overhead, but improves the estimation accuracy Summary: The proposed sketch method can be used to efficiently approximate spatio-temporal data for aggregate processing. It consumes significantly smaller space, and answers a query almost in real-time with low error 3D Rsketch number of disk accesses query rectangle length 1 10 100 1k 10k 0.05 0.1 0.15 0.2 0.25 16 14% 15 15% 13 relative error number of disk accesses query interval length 1 10 100 1k 10k 1 5 10 15 20 16 15% 15% 12% 11 relative error a qtlen=10, res=25 b qrlen=0.15, res=25 0 500 1000 1500 2000 2500 25 50 100 number of disk accesses resolution 20% 15% 14 relative error c qrlen=0.15, qtlen=10 


c qrlen=0.15, qtlen=10 Figure 5.6: Query efficiency \(costs and error 5.3 Mining association rules To evaluate the proposed algorithm for mining spatiotemporal association rules, we first artificially formulate 1000 association rules in the form \(r1,T,90 with 90% confidence i randomly picked from 10k ones, \(ii in at most one rule, and \(iii Then, at each of the following 100 timestamps, we assign 100k objects to the 10k regions following these rules. We execute our algorithms \(using 16 sketches these rules, and measure \(i  correct  rules divided by the total number of discovered rules, and \(ii successfully mined Figures 5.7a and 5.7b illustrate the precision and recall as a function of T respectively. Our algorithm has good precision \(close to 90 majority of the rules discovered are correct. The recall however, is relatively low for short T, but gradually increases \(90% for T=25 evaluated in the previous sections, the estimation error decreases as the query result becomes larger \(i.e., the case for higher T 78 80 82 84 86 88 90 92 94 96 5 10 2015 25 precision HT 78 80 82 84 86 88 90 92 94 96 5 10 2015 25 recall HT a b Figure 5.7: Efficiency of the mining algorithm Summary: The preliminary results justify the usefulness of our mining algorithm, whose efficiency improves as T increases Proceedings of the 20th International Conference on Data Engineering \(ICDE  04 1063-6382/04 $ 20.00  2004 IEEE 6. Conclusions While efficient aggregation is the objective of most spatio-temporal applications in practice, the existing solutions either incur prohibitive space consumption and query time, or are not able to return useful aggregate results due to the distinct counting problem. In this paper we propose the sketch index that integrates traditional approximate counting techniques with spatio-temporal indexes. Sketch indexes use a highly optimized query algorithm resulting in both smaller database size and faster query time. Our experiments show that while a sketch index consumes only a fraction of the space required for a conventional database, it can process 


required for a conventional database, it can process queries an order of magnitude faster with average relative error less than 15 While we chose to use FM sketches, our methodology can leverage any sketches allowing union operations Comparing the efficiency of different sketches constitutes a direction for future work, as well as further investigation of more sophisticated algorithms for mining association rules. For example, heuristics similar to those used for searching sketch indexes may be applied to improve the brute-force implementation ACKNOWLEDGEMENTS Yufei Tao and Dimitris Papadias were supported by grant HKUST 6197/02E from Hong Kong RGC. George Kollios, Jeffrey Considine and were Feifei Li supported by NSF CAREER IIS-0133825 and NSF IIS-0308213 grants References BKSS90] Beckmann, N., Kriegel, H., Schneider, R Seeger, B. The R*-tree: An Efficient and Robust Access Method for Points and Rectangles. SIGMOD, 1990 CDD+01] Chaudhuri, S., Das, G., Datar, M., Motwani R., Narasayya, V. Overcoming Limitations of Sampling for Aggregation Queries. ICDE 2001 CLKB04] Jeffrey Considine, Feifei Li, George Kollios John Byers. Approximate aggregation techniques for sensor databases. ICDE, 2004 CR94] Chen, C., Roussopoulos, N. Adaptive Selectivity Estimation Using Query Feedback. SIGMOD, 1994 FM85] Flajolet, P., Martin, G. Probabilistic Counting Algorithms for Data Base Applications JCSS, 32\(2 G84] Guttman, A. R-Trees: A Dynamic Index Structure for Spatial Searching. SIGMOD 1984 GAA03] Govindarajan, S., Agarwal, P., Arge, L. CRBTree: An Efficient Indexing Scheme for Range Aggregate Queries. ICDT, 2003 GGR03] Ganguly, S., Garofalakis, M., Rastogi, R Processing Set Expressions Over Continuous Update Streams. SIGMOD, 2003 HHW97] Hellerstein, J., Haas, P., Wang, H. Online Aggregation. SIGMOD, 1997 JL99] Jurgens, M., Lenz, H. PISA: Performance Models for Index Structures with and without Aggregated Data. SSDBM, 1999 LM01] Lazaridis, I., Mehrotra, S. Progressive Approximate Aggregate Queries with a Multi-Resolution Tree Structure. SIGMOD 2001 PGF02] Palmer, C., Gibbons, P., Faloutsos, C. ANF A Fast and Scalable Tool for Data Mining in Massive Graphs. SIGKDD, 2002 PKZT01] Papadias,  D., Kalnis, P.,  Zhang, J., Tao, Y Efficient OLAP Operations in Spatial Data Warehouses. SSTD, 2001 PTKZ02] Papadias, D., Tao, Y., Kalnis, P., Zhang, J Indexing Spatio-Temporal Data Warehouses ICDE, 2002 SJLL00] Saltenis, S., Jensen, C., Leutenegger, S Lopez, M.A. Indexing the Positions of Continuously Moving Objects. SIGMOD 2000 SRF87] Sellis, T., Roussopoulos, N., Faloutsos, C The R+-tree: A Dynamic Index for MultiDimensional Objects. VLDB, 1987 TGIK02] Thaper, N., Guha, S., Indyk, P., Koudas, N Dynamic Multidimensional Histograms 


SIGMOD, 2002 Tiger] www.census.gov/geo/www/tiger TPS03] Tao, Y., Papadias, D., Sun, J. The TPR*Tree: An Optimized Spatio-Temporal Access Method for Predictive Queries. VLDB, 2003 TPZ02] Tao, Y., Papadias, D., Zhang, J. Aggregate Processing of Planar Points. EDBT, 2002 TSP03] Tao, Y., Sun, J., Papadias, D. Analysis of Predictive Spatio-Temporal Queries. TODS 28\(4 ZMT+01] Zhang, D., Markowetz, A., Tsotras, V Gunopulos, D., Seeger, B. Efficient Computation of Temporal Aggregates with Range Predicates. PODS, 2001 ZTG02] Zhang, D., Tsotras, V., Gunopulos, D Efficient Aggregation over Objects with Extent PODS, 2002 Proceedings of the 20th International Conference on Data Engineering \(ICDE  04 1063-6382/04 $ 20.00  2004 IEEE pre></body></html 


