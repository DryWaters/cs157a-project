Association Rule Algorithms for Logical Equality Relationships  Chyuan-Meei Chen Tamkang University, Taiwan, ROC 129502@mail.tku.edu.tw Shu-Hsien Liao Tamkang University, Taiwan, ROC Michael@mail.tku.edu.tw Abstract The association rule has become one of the most important techniques in data mining. New algorithms must be developed in order to apply it to more areas. This paper proposes association rule algorithms for logical equality relationships modified from the original Apriori and FPGrowth algorithms. Logical equality is defined as 
true  true \(1  1  false \(0  0 associations. This special relationship commonly occurs in the real world, such as the linkage in the stock markets and customer loyalty for a certain product 1. Introduction Since Agrawal et al. proposed the concept of association rule in 1993 and its Apriori algorithm in 1994, it has become one of the most important techniques of data mining Known as ba sket 
analysis, it was first applied to making marketing decisions in retailing stores and soon, researchers began to apply it to other industries, especially in medical, banking, telecommunication and website navigation analysis. The association rule, however, is still a new data mining method. In order to apply it to other usages, the existing algorithms must be modified and expanded. Hence, to discover advanced algorithms for more applications is one of the most important tasks for association rule researchers The Apriori algorithm and other association rule algorithms look for significant patterns in coexistences or the relationship between their antecedents and 
consequents. The true  true \(1  1 indeed essential, but the other logical comparisons such as 1  0, 0  1 and 0  0 are sometimes equally important. Hence, in addition to the normal çpositive association rule, researchers have proposed new negativeé association rule algorithm Although  negative association rules provide more selections for researchers, it can only support çoneé of the any four logical choices. Some researches may consider a 
combination of the above conditions. For instance, to search for links in stock market indexes, one should consider both up and down conditions at the same time On the other hand, to measure the exclusive OR conditions \(1  0 and 0  1\er transactions, customer loyalty for a certain product can be revealed successfully The purpose of this article is to propose new algorithms for logical equality relationships. Logical equality is defined as true if and only if the logical comparison statement \(1  1 or 0 
 0\true. It is equivalent to the XNOR gate in the logic circuit design Section 2 of this article includes procedures and difficulties encountered while implementing the logical equality association rule by the traditional Apriori algorithm. Then, the new Apriori and FP-Growth algorithms which support logical equality are proposed in sections 3 and 4. Research discussion, limitations and conclusions are listed at the end of this article 2. Implementing research by using original Apriori algorithm In the summer of 2007, the explosive sub-prime mortgage financial crisis caused the international stock market to spiral downward abruptly. This event caught my attention and evoked my desire to study the links in 
the international stock market. The research of stock market linkage is used to diversify stock investments  Alm ost all researche rs use regressi on a nd time series as their methods. Since the association rule is a method that can be used to find out the relationships between variables, the Apriori algorithm should be excellent for this type of stock market linkage research By performing the algorithm twice, once for prices moving up and the other for those moving down, the separate results can then be extracted. During this process, some important discoveries were found, as pointed out below 
 Two forms of input data must be created, one for mining the upward linkages and the other for IEEE 8th International Conference on Computer and Information Technology Workshops 978-0-7695-3242-4/08 $25.00 © 2008 IEEE DOI 10.1109/CIT.2008.Workshops.116 26 


mining the downwards. It takes twice the capacity to store all necessary research input data information  Then, perform the algorithm twice. However when a minimum support threshold is used, the individual minimum support value is very difficult to define. If losing information is not allowed, a minimum support of çzeroé must be used for the execution. This results in a tremendous waste of time and space resources  It will take additional efforts to combine two sets of results, especially if the results are of a substantial size. First, the found itemsets should be sorted, and the same pattern itemsets must be added up together, resulting in the insignificant ones being removed when their minimum support thresholds are not met  Once the large itemsets are found, calculating significant patterns of antecedents and consequents by minimum confidence value requires nontrivial SQL or other programming skills From the list of difficulties above, it is clear that creating new algorithms is necessary to perform logical equality or other similar association research 3. New algorithm modified from Apriori algorithm The Apriori algorithm is a great discovery for data mining and the association rule. By reducing insignificant candidate itemsets, it successfully increases processing speed and reduces the usage of space. Because of it, processing billions of store transactions become possible. When modifying the Apriori algorithm for the purpose of logical equality the pseudo codes look very similar to the original one except the statement in bold in the following list is processed differently Procedure Main  find_fre que nt_1-item s ets\(D for  L K-1 m i n_sup for each transaction t in D // scan D for count  C[k], t generate the subset of t that are candi dates for each candi  c.count  c i n C  k] a n d c.c ount m i n_sup  return L = Un Procedure apriori_gen\(L[k, m i n_sup for each item L[k-1 for each item L[k-1  1  1 l[1]\(2  2   l 1]\(k-2  k-2  l[1]\(k-1  2]\(k-1 h en   n step; generate candidat es if has_infrequent_subset \(c, L delete c; // prune step; remove unfruitful candidate else add c to C return C While scanning the database, the original algorithm simply scans for the \(1  1\new algorithm searches for the existence of either \(1  1\ or 0  0\hips. The technical terminologies support, confidence and lift value of the logical equality association ruleÑare defined as below. The symbol A\(1\denotes when the value of A is 1     B A  Support  ns Transactio Total  of Number  B\(0 A\(0  OR  B\(1 A\(1  of Number       B A  C1 A\(1  of Number   B\(1 A\(1  of Number  27 


    B A  C0  A\(0  of Number   B\(0 A\(0  of Number      B A  Confidence  2  B A  C0  B A  C1       B Support B A Confidence B Lift\(A    For calculation of confidence value, an average method is shown above. In the case of a huge difference between the frequencies of A\(1\nd A\(0 the weighted method is recommended for more reasonable results Table 1 Split every transaction into two forms of transactions Sample Items Positive Items Negative Items ACD ACD BE BCE BCE AD ABCE ABCE D BE BE ACD The above Table 1 shows an example transaction database. There are four sample items. The logical equality association rule looks for both positive and negative items. Hence, the four sample items now become eight items. The following diagram \(Diagram 1 demonstrates the procedures from the modified Apriori algorithm for logical equality relations. The minimum support is assumed to be 40%, or 1.6 transactions. Any candidate itemset with support value less than 1.6 will be treated as insignificant Diagram 1 Candidate and Large Itemsets of modified Apriori Algorithm for logical equality 28 


4. New algorithm modified from FPGrowth algorithm For the sake of improving processing efficiency, the FP-Growth algorithm was proposed in 2000  FP-Growth is implemented by a relatively complicated tree format with a link list and/or hash table structure The most valuable advantage of the FP-Growth is it only scans the entire database twice. Normally the size of the database is quite huge, so this algorithm can tremendously reduce overall processing time. To write programs for the FP-Growth algorithm is much more difficult than doing so for Apriori. In order to implement the tree and list structure, programmers must have excellent pointer, hash calculation memory programming skills The first FP-Growth algorithm scan of the database is used for counting the frequency of independent variables. By arrange them from the most recurrent to the least, the tree structure can be maintained in the most efficient or condensed format. Since the logical equality performs both formats of every transaction this step can be redundant because the advantage will be equaled out. Hence, no first scan is recommended unless the average item counts on one side \(positive or negative\uch greater than those on the other Next, insert both forms of the transactions into the FP-Growth tree structure. This process is exactly the same as the normal FP-Growth algorithm except the count is actually recording both positive and negative transactions. The following diagram \(Diagram 2 demonstrates the final FP-Growth tree structure after inserting the same previously used example transactions Diagram 2 The final tree structure of the modified FP-Growth algorithm 5. Research Discussion and Limitation Table 2 shows two cases with different percentages of two variables. The graphical representations are also demonstrated on Diagram 3. While using the regular association rule on both cases, the results will be the same: both contain 30% overlapping areas. But when we applied our logical equality algorithm to both cases the result of case 1 is 40%, but the result of case 2 is 100%. This tells us that even though the overlapping areas are the same, the structures of both cases are quite different. When we apply these cases to the linkages of international stock markets, the linkage of case 2 is 100%, or perfectly interdependent. On the other hand, the linkage of case 1 is only 40%; this tells us that the two markets do not have a close relationship 29 


  Table 2 Two cases with different logical distributions Logical Comparison Case 1 Case 2 1  1 30 30 1  0 30 0 0  1 30 0 0  0 10 70   Case 1 Case 2  Diagram 3 Graphical Charts for case 1 and 2  This article discusses logical equality association rule algorithms. The algorithm for the other two logical comparisons, exclusive or \(XOR, 1  0 and 0  1\ are not included and will be an excellent research idea for a future study. Of course, a gen eral algorithm which can be executed for any combination of logical comparisons will be an even better idea Association rules for logical equality relationships can be used in many areas, including the previously mentioned stock market linkage and customer loyalty Applied to the temperature changes of various cities around the world, researchers can find cities with similar temperature patterns. Of course, the time series concept should be taken into consideration, because the algorithm should be smart enough to compare the data with x days of delays automatically. That is another excellent idea for us to continue to develop on   Acknowledgements  This research was funded by the National Science Council, Taiwan, Republic of China, under contract No NSC 96-2416-H-032-003-MY2 References  1  R. Agrawal T. Imielinski and A. Swami, çMining Association Rules between Sets of Items in Large Databasesé, Proceedings of ACM SIGMOD, May 1993 pp. 207-216  R. Agrawal and S. Srikan t, çFast Algorithms for Mining Association Rules in Large Databasesé, Proceedings of the 20th International Conference on Very Large Data Bases September 1994  S. Kotsiantis and D. Kanellop oulos, çAssociation Rules  Mining: A Recent Overview GESTS International Transactions on Computer Science and Engineering, Vol.32 1\6, pp. 71-82   X. Wu, C. Zhang and S Zhang, çEfficien t M i ning of both Positive and Negative Association Rulesé, ACM Transactions on Information Systems, Vol. 22, No. 3, July 2004, pp. 381Ö405  A. Bonfiglio l i  a C. A. Favero, çExplaining comovements between stock markets: The case of US and Germanyé, Journal of International Money and Finance, 2005 pp. 1299-1316  J. Han, J  Pei and Y Yin, 20 00, çMining fr eq uent patterns without candidate generationé, In Proceedings of the 2000 ACM SIGMOD International Conference on Management of Data. ACM, Dallas, Texas, 2000, pp. 1Ö12  J. Park, M. C h en and P. Yu  A n effectiv e has h-based algorithm for mining association rulesé, in SIGMODê95, pp 175-186   30 


IEEE-ICSCN Feb 2007 detection system in which result of one layer detection module is sent to next level detection module Regression analysis methods can be followed to assign weights for each detection module and for assigning weights for current working node and neighbor node\(s REFERENCES 1 Y Zhang and W Lee Intrusion Detection in Wireless Ad Hoc Networks 6th Int'l Conf Mobile Comp and Net Aug 2000 pp 275-83 2 Y Zhang W Lee and Y A Huang Intrusion Detection Techniques for Mobile Wireless Networks ACM J Wireless Net vol 9 no 5 Sept 2003 pp.545-56 3 Amitabh Mishra Ketan Nadkarni and Animesh Patcha Virginia Tech Intrusion Detection in Wireless Ad Hoc Networks IEEE Wireless Communications February 2004 pp 48-60 4 Y Huang W Fan W Lee and P S Yu Cross-Feature Analysis for Detecting Ad-Hoc Routing Anomalies Proceedings of the 23rd IEEE International Conference on Distributed Computing Systems 2003 pp 478-487 5 Yu Liu Yang Li and Hong Man MAC Layer Anomaly Detection in Ad Hoc Networks Proceedings of the 6th IEEE Information Assurance Workshop June 17 2005 pp 402409 6 B Sun K Wu and U Pooch Routing Anomaly Detection in Mobile Ad Hoc Networks Proceedings of the 12th IEEE Int'l Conf on Computer Communications and Networks ICCCN'03 Dallas TX Oct 2003 pp 25-3 1 7 Rena Hixon Don M Gruenbacher Markov Chains in Network Intrusion Detection Proceedings of the IEEE Workshop on Information Assurance United States Military Academy 2004 pp.432-433 8 Yia-an Huang WEnke Lee A Cooperative Intrusion Detection System for Ad hoc Networks Proceedings of the Ist ACM Workshop on Security of Ad hoc and Sensor Networks 2003 pp 135-147 9 S Jha K Tan and R Maxion Markov chains classifiers and intrusion detection Proceedings of 14th IEEE Computer Security Foundations Workshop 2001 pp 206-219 10 Baolin Sun Hua Chen Layuan Li An Intrusion Detection System for AODV Proceedings of the 1 oth IEEE International Conference on Engineering of Complex Computer Systems ICECCS 05 2005 pp 358-365 11 Iaonna Stamouli Patroklos G rgyroudis Hitesh Tewari Real-time Intrusion Detection for Ad Hoc Networks Proceedings of the 6th IEEE International Symposium on a World of Wireless Mobile and Multimedia Networks 2005 pp 374-380 12 A.A.Cardenas S.Radosavac J.S.Baras Detection and Prevention of MAC Layer Misbehavior in Ad Hoc Networks Proceedings of the 2nd ACM workshop on Security of Ad hoc Networks and Sensor Networks 2004 pp 17-22 13 Daniel C.Nash Thomas L Martin Dong S Ha and Michael S Hsiao Towards an Intrusion Detection System for Battery Exhaustion Attacks on Mobile Computing Devices IEEE Int'l Conf on Pervasive Computing and Communications Workshops 2005 pp 141-145 14 T.Martin M.Hsiao D.Ha and J.Krishnaswami Denial ofService Attacks on Battery-powered Mobile Computers Second IEEE International Conference on Pervasive Computing and Communications March 2004 pp 309-318 15 Hang Yu Yang Li-Xia Xie Agent based Intrusion Detection for a Wireless Local Area Network Proceedings of the IEEE third International Conference on Machine Learning and Cybermatics 2004 pp 2640-2643 365 


Figure 3 Experiments under M E distribution same frequency for symbols and string size 30,000 Horizontal axis minimum support vertical axis number of patterns 
83 
83 


supports and that handles in particular the conjunction of constraints used in this paper The estimate of the number of patterns based on the pattern space sampling was implemented in Perl For each single extraction with exact support the running time was about a few tens of seconds to a few minutes In the case of soft support an extraction takes from a few tens of minutes to several hours to complete while for the sampling-based estimate computing one estimate requires between 1 and 30 seconds 4.2 Application to Real Data We use two datasets of DNA sequences that are promoter sequences of genes Each sequence is a string of 4,000 symbols over an alphabet of size 4 nucleotides a c g and t  The 036rst dataset r 1 contains promoter sequences of 29 genes and dataset r 2 contains promoter sequences of 21 genes These two datasets represent two biologically opposite situations of interest and extracting string patterns that have a high support in r 1 and a small support in r 2 is a way to identify putative binding sites of transcription factors molecules that bind on the promoter sequences to activate or to repress a gene The data were prepared and provided by Dr Gandrillon and his team We look for patterns satisfying MinFr  002 r 1 f 1  006 MaxFr  002 r 2 f 2  006 002   k  and for the support we used the soft support de\036nition with 003 1 slightly degenerated occurrences Such a conjunction of constraints with soft support de\036nition based on the Hamming distance has been shown to be useful in practice for transcription factor binding sites identi\036cation  The estimates were computed with distribution M D using as symbol frequencies their respective frequencies in the data 0.23 0.26 0.27 0.24 respectively for a c g and t  In this case the model is more a description of the random background than a description of the biological organization along the sequences Representative graphics obtained using these estimates and depicting portions of the extraction landscape are presented in Figure 4 on the right A typical use of such graphics is for instance to look for points in the parameter space corresponding to a large support on r 1  but a low support on r 2  a large pattern size and a rather small number of expected patterns since here the distribution represents the random background Such a point that can be used as an initial guess of the parameters to perform real extractions is for instance pattern size 10  minimal support on r 1 of 15 and maximal support on r 2 of 5 the graphic in the middle on the right indicates that for this setting only about 1 pattern due to the random background is expected For the sake of completeness in Figure 4 on the left we give the real numbers of extracted patterns In practice these graphics are not easily accessible to the user since in these experiments the running time of a single extraction ranges from several tens of minutes to several hours while for an estimate only a few tens of seconds is needed Even though the global trends correspond to the estimates they are important differences in some portions of the parameter space these differences could be expected since the distribution used does not incorporate complex biological knowledge However the estimates can still be used to help to choose initial parameter values in an exploratory mining stage and moreover 036nding such differences when running the real extractions can also be a useful piece of information in itself For example for the setting pattern size 10  minimal support 15 and maximal support 5 we have about 100 patterns really extracted while we expected only one If we suppose that the pattern space sampling can provide reasonable estimates when the data satisfy distribution M D as supported by the experiments of Section 4.1 then the 100 patterns obtained are likely to be due to a particular unknown structure in the data and not to the distribution M D only This suggest that it makes sense to look for patterns in this region of the parameter space since we can expect to obtain some interesting/useful patterns not only patterns due to the random background captured by M D  5 Related work Estimating the expected number of patterns that satisfy a constraint is in general much more dif\036cult than estimating the probability that a given pattern satis\036es such a constraint This second problem has received a lot of attention leading to many statistical measures to assess the interestingness of the patterns Concerning the 036rst problem only a few solutions have been proposed and 8 analyze the feasible distributions of frequent itemsets also of closed itemsets for and of maximal itemsets f or 12  focuses on the k ind o f d istrib utions one can e xpect for various kinds of datasets They answer the question whether there exists a frequent or maximal frequent itemset collection that has a given number of frequent itemsets of a given length computes the a v e rage number of frequent closed itemsets using probabilistic techniques These authors especially focus on minimal frequency threshold and how it in\037uences the number of extracted patterns considering 036xed and/or proportional thresholds Another approach has been proposed by Geerts et al  p ro viding a tight upper bound on the number of candidate patterns that can arise while mining frequent patterns in a level-wise setting Given the current level and the current set of frequent patterns they propose a tight bound of the maximal number of candidate patterns that can be generated on the next level In the domain of string mining designs an estimate of the number of patterns due to the random background and that are likely to be extracted with respect to 
84 
84 


Figure 4 Expected and real number of extracted patterns using two promoter sequence datasets Horizontal axis minimum support vertical axis number of patterns 
85 
85 


a frequency constraint and according to the structure of the dataset These proposals are all based on a global analytical model i.e an interesting approach that needs however to develop complex and speci\036c models As a result they cannot be easily extended to handle complex conjunctions of constraints to incorporate different symbol distributions or different semantics for pattern occurrences To the best of our knowledge no method has been proposed to estimate the number of patterns satisfying a constraint while avoiding to develop a global analytical model Our approach requires only to know how to compute for a given pattern its probability to satisfy the constraint this can be obtained in many situations and it remains ef\036cient in practice by adopting a pattern space sampling scheme 6 Conclusion Using constraints to specify subjective interestingness issues and to support actionable pattern discovery has become popular Constraint-based mining techniques are now well studied for many pattern domains but one of the bottlenecks for using them within Knowledge Discovery processes is the extraction parameter tuning This is especially true in the context of differential mining where domain knowledge is used to provide different datasets to support the search of truly interesting patterns From a user perspective a simple approach would be to get graphics that depict the extraction landscape i.e the number of extracted patterns for many points in the parameter space We developed an ef\036cient technique based on pattern space sampling that provides an estimate on the number of extracted patterns This has been applied to non trivial substring pattern mining tasks and we demonstrated by means of many experiments that the technique is effective It provides reasonable estimates given execution times that enable to probe a large number of points in the parameter space Notice that domain knowledge is also exploited here when selecting the distribution model Future directions of work include to adapt the approach to other pattern domains and to different constraints Another interesting aspect to investigate is the use of more sophisticated sampling schemes e.g that could b e incorporated in the approach when more complex syntactical constraints are handled e.g a grammar to specify the shape of the patterns Acknowledgments This work is partly funded by EU contract IQ FP6-516169 Inductive Queries for Mining Patterns and Models and by the French contract ANR-MDCO14 Bingo2 Knowledge Discovery For and By Inductive Queries We thank Dr Olivier Gandrillon from the Center for Molecular and Cellular Genetics CNRS UMR 5534 who provided the DNA promoter sequences References  J F  Boulicaut L De Raedt and H  M annila e ditors Constraint-Based Mining and Inductive Databases  volume 3848 of LNCS  Springer 2005  C  B resson C K e ime C F a ure Y  Letrillard M  B arbado S San\036lippo N Benhra O Gandrillon and S GoninGiraud Large-scale analysis by SAGE revealed new mechanisms of v-erba oncogene action BMC Genomics  8\(390 2007  L  C ao and C  Z hang Domain-dri v e n actionable kno wledge discovery in the real world In Proceedings PAKDD’06 volume 3918 of LNCS  pages 821ñ830 Springer 2006  G  D ong and J  L i Ef 036cient mining of emer ging patterns discovering trends and differences In Proceedings ACM SIGKDD’99  pages 43ñ52 1999  F  Geerts B  G oethals and J  V  d en Bussche T ight upper bounds on the number of candidate patterns ACM Trans on Database Systems  30\(2 2005  U  K eich and P  A  P e vzner  S ubtle motifs de\036ning the limits of motif 036nding algorithms Bioinformatics  18\(10 2002  S  K ramer  L De Raedt and C  Helma M olecular f eature mining in HIV data In Proceedings KDD’01  pages 136 143 2001  L  L hote F  Rioult and A  S oulet A v e rage number of frequent closed patterns in bernouilli and markovian databases In Proceedings IEEE ICDM’05  pages 713ñ716 2005  I  M itasiunaite a nd J.-F  B oulicaut Looking for monotonicity properties of a similarity constraint on sequences In Proceedings of ACM SAC’06 Data Mining  pages 546ñ552 2006  I Mitasiunaite and J F  Boulicaut Introducing s oftness i nto inductive queries on string databases In Databases and Information Systems IV  pages 117ñ132 IOS Press 2007  I Mitasiunaite C Rigotti S Schicklin L  M e yniel J F  Boulicaut and O Gandrillon Extracting signature motifs from promoter sets of differentially expressed genes Technical report LIRIS CNRS UMR 5205 INSA Lyon France 2008 23 pages Submitted  G Ramesh W  M aniatty  a nd M J Zaki F easible itemset distributions in data mining theory and application In Proceedings ACM PODS’03  pages 284ñ295 2003  F  Zelezn  y Ef\036cient sampling in relational feature spaces In Proceedings ILP’05  volume 3625 of LNCS  pages 397 413 Springer 2005 
86 
86 


