Geographic Knowledge Discovery in INGENS an Inductive Database Perspective Annalisa Appice Anna Ciampi Ant onietta Lanza D onato Malerba Antonella Rapolla Luisa Vetturi Dipartimento di Informatica Universit a degli Studi di Bari via Orabona 4 70126 Bari Italy appice@di.uniba.it aciampi@di.uniba.it la nza@di.uniba.it malerba@di.uniba.it Abstract INGENS is a prototype of GIS which integrates a geographic knowledge discovery engine to mine several kinds of spatial KDD objects from the topographic maps stored in a spatial database In this paper we describe the main principles of an inductive spatial database in INGENS Inductive database allows to keep permanent KDD objects and integrate database technology with systems for the geographic knowledge generation In contrast to traditional spatial database technology inductive database allows to answer queries which require synthesizing and applying plausible knowledge which is generated by inductive inference from both spatial objects and KDD objects prior knowledge stored in the same database 1 Introduction The huge amount of geographic data currently collected in geoscientiﬁc economic and environmental situations has promoted the current generation of spatial database systems which is appositely designed to provide the database infrastructure for adequately storing and searching geographic data Similarly to conventional database systems spatial database systems provide answers only if the answers are in the database or are computed by the spatial primitives in database A deductive database overcomes this limitation by adding to a spatial database the capabilities for drawing deductive consequences from data using a rule base The rule base or knowledge base can be constructed by spatial data mining methods Research in spatial data mining and geographic knowledge discovery is very active in last years 15 14 A n yw ay i f s p at i a l d at a m i n i n g m et hods remai n not integrated with database systems employing domain knowledge in the geographic knowledge discovery process makes data miner in charge of integrating different technologies such as data mining spatial databases knowledge bases and GIS This is the spatial counterpart of a Knowledge and Data Discovery Management System KDDMS 6 t o m anage s patial KDD applications  The objects queried in spatial KDDMS are not only the spatial objects stored in the spatial database but also the spatial KDD objects Knowledge Discovery Objects of the knowledge base KDD objects may not exist a-priori thus querying them may require their run time generation Alternatively they may be simply retrieved in the case they are previously generated and stored in a database This view gives rise to an inductive database inductive queries data mining language and inductive solvers 3 i n g eographi c knowledge discovery process in order to answer to spatial queries which require drawing spatial inductive inferences and deriving plausible conclusions Research on inductive database provides several proposals for inductive query languages such as Mine Rule 2 MSQL 7 a nd D M Q L 5  a nd i n t r oduces cons t r ai nt bas ed mining as a key mechanism for inductive query evaluation and thus knowledge discovery  A n y w a y t hes e w o rks d o not provide a general purpose solution to the speciﬁc issues posed by spatial dimension i.e computing spatial relationships and properties e.g area or perpendicularity which are not explicitly encoded in database spatial autocorrelation spatial objects which can be considered at different levels of abstraction For example MO-DMQL 13 i s a spatial data mining query language to support knowledge discovery from movement data only In this paper we present the concepts and an implementation of an inductive spatial database in INGENS that is a prototype of GIS which offers data mining facilities to support tasks of topographic map interpretation Originally built 11 12 a round t h e i dea o f i nduci n g c l a s s i  cat i o n r ul es from geo-referenced data INGENS is extended by integrating a spatial data mining query language called SDMOQL 10  a nd by s upport i n g t he di s c o v ery o f a s s o ci at i o n r ul es 
2008 IEEE International Conference on Data Mining Workshops 978-0-7695-3503-6/08 $25.00 © 2008 IEEE DOI 10.1109/ICDM.Workshops.2008.81 326 
2008 IEEE International Conference on Data Mining Workshops 978-0-7695-3503-6/08 $25.00 © 2008 IEEE DOI 10.1109/ICDMW.2008.120 326 


1  Th e a n s wer t o a n S DMOQL is a c o llectio n o f s p a tial KDD objects classiﬁcation or association rules which are induced from the spatial database but not stored in it The introduction of an inductive spatial database in INGENS allows to store spatial KDD objects to be available for subsequent queries In this way the geographic knowledge discovery process is performed by answering spatial KDD queries formulated in SDMOQL A spatial KDD object can be intended as a spatial constraint to be satisﬁed in retrieving spatial objects which cover it or learning new spatial KDD objects which are spatially related to INGENS is brieﬂy presented in the next Section Principles of the inductive spatial database are described in Section 3 while in Section 4 we present an extension of SDMOQL to query the inductive database Finally in Section 5 some examples of SDMOQL queries are described 2 INGENS Concepts and Implementations INGENS is a software system that provides the GIS infrastructure for editing storing interpreting and displaying topographic maps Topographi c maps are partitioned into a number of cells Spatial objects located in a cell are vectorized and stored an Oracle 10 g Spatial Database The spatial data mining engine works in a rst-order logic and allows to discover spatial patterns which capture a spatial arrangement of data This arrange ment is expressed in terms of spatial properties and relations At present data mining engine integrates ATRE t o i nduce s pat i a l c l a s s i  cat i o n rules and SPADA 8 to d i sco v e r s p a tial a sso ciatio n r u l es The engine works on a conceptual representation of data but topographic maps are stored in a vector format INGENS integrates spatial primitives to compute primitive descriptors of spatial objects located in a cell Some descriptors are contain C,L cell C contain a geographic object L type of L type of L part of L,F the geographic object L is composed by the geometry F line to line F1,F2 spatial relations between lines F1 and F2 line to region F1,F2 spatial relations between line F1 and polygon F2 region to region F1,F2 spatial relations between polygons F1 and F2 and so on Descriptors which involve lines e.g line to line cannot be computed on polygons or points Similarly descriptors like region to region can be computed only on polygons INGENS allows to compute descriptors to model direction relations between cells e.g north C1,C2 cell C2 is at north of cell C1 The knowledge discovery process is condensed in a query written in SDMOQL and run on the server side 3 Inductive Spatial Database An inductive spatial database aims at transforming INGENS in a Spatial Knowledge and Spatial Data Management System where the entire geographic knowledge discovery process is viewed as querying a database which contains both spatial data and generalization of spatial data induced by means of spatial data mining methods The definitions of inductive spatial database schema and inductive spatial database instance are adapted from 3  Deﬁnition 1 An inductive spatial database schema is a pair 002  R  Q R e,V  where R is a spatial database schema Q R is a collection of spatial KDD objects V is a set of result values and e is the evaluation function that deﬁnes how a spatial KDD object occurs in some spatial data The function e maps each element  r p  to an element of V where r denotes some spatial database with schema R and p is a spatial KDD object from Q R  Deﬁnition 2 An instance of an inductive spatial database schema 002 is the pair  r s  where r is a spatial database with schema R and q is a subset of Q R  In INGENS R corresponds to the object-relational data schema of the spatial database where vectorized topographic maps are stored and Q R represents the collection of spatial KDD objects which are not necessarily available a-priori in the database but they can be retrieved by running SDMOQL queries Two kind of spatial KDD objects are deﬁned that is the spatial classiﬁcation objects and the spatial association objects Deﬁnition 3 Let p be a spatial classiﬁcation object of the concept c  p is in the form 003 head 004 body bk 005  where 1 head is the classiﬁcation literal which represents c 2 body is the conjunction of literals which provides an operational deﬁnition of c 3 bk is the possibly empty set of rstorder deﬁnite clauses which provides the operational definitions of which literals in the body are not computed as primitive descriptors in INGENS The literal in the head is in the form class  V  c with V the key variable that identiﬁes the spatial object to be classiﬁed and class the classiﬁcation literal To satisfy the linkedness V occurs as argument in at least one literal of the body  Each literal in the body may be either a primitive literal i.e contain type of area  whose computation is demanded to the spatial primitives integrated in INGENS or a new literal whose operational deﬁnition is provided in the bk  The operational deﬁnition of a new literal may include both primitive literals and new literals which are deﬁned in the same bk  Example 1 describes a spatial classiﬁcation object which provides an operational deﬁnition for the concept uvial landscape Example 1  Let us consider the spatial classiﬁcation object p deﬁned as follows p.head  class\(C\=ﬂuvial landscape p.body  cell\(C 006 contain\(C,Rd\rue 006 road to river\(Rd,Rv\y perpendicular p.bk  1 cell\(C 004 type of\(C\l 2 road to river\(A,B 004 type of\(A 
327 
327 


type of\(B part of\(A,D\rue part of\(B,E\rue line to line\(D,E\=C The head identiﬁes uvial landascape as the classiﬁcation concept of this spatial KDD object The body encodes the operational deﬁnition of uvial landscape that is learned as a classiﬁcation rule by ATRE In this case the operational deﬁnition in the body classiﬁes a cell C key variable of this rule as a uvial landscape if C iscrossedbyaroad Rd that is almost perpendicular to a river Rv The bk includes the deﬁnition of the literals cell and road to river which are not computed by means of primitive descriptors automatically computed by INGENS Deﬁnition 3 can be extended in order to allow the representation of a possible dependency between several classiﬁcation concepts which are learned as part of the same recursive logical theory Example 2 A recursive logical theory which models the dependency between the concepts of uvial landscape and system of farms is the following R1 class\(C\=system of farms 004 type of\(C\l contain\(C,A type of\(A cultivation point to region\(A,B type of\(B,parcel R2 class\(C\=ﬂuvial landscape 004 close\(C,A class\(A\ystem of farms  contain\(C,B\=true type of\(B\ver Deﬁnition 4 A recursive spatial classiﬁcation object p is a spatial classiﬁcation rule whose body includes one or more classiﬁcation literals p is in the form 003 head 004 body bk F 005 with F a conjunction of disjunctive spatial classiﬁcation objects one di sjunction for each distinct concept which appears as a classiﬁcation literal in p.body A spatial classiﬁcation object is a special case of recursive spatial classiﬁcation object where F  007  According to Deﬁnition 4 the logical theory T   R 1 R 2  presented in Example 2 is stored in the inductive spatial database as two spatial classiﬁcation objects that is p 1 and p 2  respectively p 2 is a recursive spatial classiﬁcation object where p 2 F includes p 1  From a practical point of view only the object references to the base spatial KDD objects are stored in F thus avoiding to store the same spatial classiﬁcation object several times in database To complete the deﬁnition of spatial classiﬁcation object we deﬁne the evaluation function e  Deﬁnition 5 Let\(i r be a spatial database with schema R and ii p be a spatial classiﬁcation object the evaluation function e  r p  returns a sequence of boolean values  v 1 v n   one boolean value v i for each distinct spatial object reference object r i of r that matches the key variable of p in r  e  r p  is computed as e  r p   E  r 1 p  E  r n p   E  r i p  true iff p covers desc  r i  r  010 bk  that is there is a substitution 002 such that p\002 011 desc  r i  r  010 bk   desc  r i  r  denotes the rst-order conceptual description of both the reference object r i and the task-relevant spatial objects which are stored in r and are transitively spatially related to r i according to the primitive literals which appear in the body and bk of p  Example 3 describes how to compute e for a spatial classiﬁcation object p  Figure 1 Vector representation of the cells a left and b right used in Example 2 Example 3 Let us consider the spatial classiﬁcation object p deﬁned in Example 1 and the spatial database r where the cells a and b of Figure 1 are stored The conceptual description of r is obtained by extracting the literals type of contain part of and line to line for the spatial objects e.g roads and rivers located in the cells type of a  contain\(a,rv1 a type of\(rv1 a\ver part of\(rv1 a,x1 a of\(rv1 a,x2 a,rd1 a type of\(rd1 a part of\(rd1 a,x3 a contain\(a a,rd2 a type of\(rd2 a part of\(rd2 a,x4 a line to line\(x3 a,x4 a\y parallel line to line\(x3 a,x1 a\y perpendicular type of b l contain\(b,rd1 b type of\(rd1 b part of\(rd1 b,x2 b contain\(b,rd1 b type of\(rd1 b part of\(rd1 b,x2 b line to line\(x1 b,x2 b\y perpendicular e  r p  E  a p  E  b p    true f alse   since there is the substitution 002   A 004 a Rd 004 rd 1 Rv 004 rv 1  such that p\002 011 desc  a  r  010 bk  while there is no substitution 002 002 such that p\002 002 011 desc  b  r  010 bk  Only the values e  r p  that the user’s query requires are really computed Hence SDMOQL syntax must be extended by providing a new primitive to invoke the computation of e in both inductive and deductive requests Similarly to classiﬁcation we can provide the deﬁnition of a spatial association object and its evaluation function Deﬁnition 6 Let p be a spatial association object that is a spatial association rule in the form A 012 C  supp conf   p is in the form 003 A C supp conf bk 005  where 1 A antecedent of the rule and B consequent of the rule are conjunctions of literals such that A 013 B  007  A 010 C is a spatial pattern that satisﬁes linkedness 2 supp support of the rule and conf conﬁdence of the rule are estimates of the probabilities p A 013 C nd p  C  A  on the spatial data mined 
328 
328 


to discover the rule 3 bk is a possibly empty set of rstorder deﬁnite clauses which provide the deﬁnitions of non primitive literals which appear in A 010 C  Deﬁnition 7 By assuming V   true f alse   for each spatial database r with schema R and spatial association object p  e  r p  true iff the support of p.A 012 p.B computed in r 010 p.bk is greater than p.sup and the conﬁdence of p.A 012 p.B computed in r 010 p.bk is greater than p.conf  4 SDMOQL SDMOQL is a spatial data mining query language to formulate spatial KDD queries in INGENS The SDMOQL top-level syntax 10 is th e f o llo win g  003 SDMOQL 005  003 SDMOQLStatement 005  003 SDMOQLStatement 005   003 SDMOQLStatement 005  003 InductiveStatement 005 003 InductiveStatement 005  003 SpatialObjectQuery 005 mine 003 KindOfPattern 005 analyze 003 DataDescriptors 005 with descriptors 003 PatternDescriptors 005  003 BackgroundKnowledge 005  003 Hierarchy 005  with 003 InterestingnessMeasures 005  The syntax is extended with 1\anguage primitives to retrieve spatial objects which cover one or more spatial KDD objects stored in the database and 2\anguage primitives to retrieve possibly recursive spatial KDD objects which have a spatial dependency with spatial KDD objects already stored in database The novel top level syntax of a SDMOQL statement is reported below 003 SDMOQLStatement 005  003 DeductiveStatement 005 003 InductiveStatement 005 4.1 Deductive SDMOQL queries The top-level syntax of 003 DeductiveStatement 005 is reported in th following 003 DeductiveStatement 005  003 SpatialObjectQuery 005 evaluate 003 SpatialKDDObjectQuery 005 analyze 003 DataDescriptors 005 with descriptors 003 PatternDescriptors 005  003 BackgroundKnowledge 005  The analyze clause speciﬁes which primitive descriptors among those automatically generated by INGENS must be used to describe the spatial objects extracted by means of the 003 SpatialObjectQuery 005 The with descriptors clause speciﬁes the list of descriptors which appear as literals in the spatial KDD objects selected by 003 SpatialKDDObjectQuery 005  They are either primitive descriptors which are speciﬁed in the analyze clause or new descriptors whose deﬁnition is provided in the 003 BackgroundKnowledge 005 The 003 SpatialKDDObjectQuery 005 depends on the kind of knowledge 003 SpatialKDDObjectQuery 005  003 SpatialClassObjQuery 005 003 SpatialAssObjQuery 005 The SDMOQL syntax for 003 SpatialClassObjQuery 005 is deﬁned in the following 003 SpatialClassObjQuery 005  003 SpatialClassObject 005  003 SpatialClassObject 005 003 SpatialClassObject 005  class 003 concept 005 as 003 rule body 005 with key variable 003 key variable 005 The class clause speciﬁes the classiﬁcation concept whose operational deﬁnition is provided in the To compose the 003 SpatialClassObjQuery 005  INGENS users select the set of spatial classiﬁcation objects from those stored in the database Th e descriptors in both the analyze clause and the with descriptors clause are automatically extracted from both the body part and the bk part of these classiﬁcation objects The deﬁne knowledge clause provides the deﬁnition of all non primitive descriptors This deﬁnition is automatically extracted from the bk of the selected classiﬁcation objects In INGENS the execution of the query is in charge of the SDMOQL interpreter First the query is syntactically and semantically validated Second INGENS generates the conceptual representation of the spatial objects selected by computing the descriptors in the analyze clause and representing them in rst-order formalism Third each spatial KDD object selected by the query is evaluated over the conceptual representation of select ed spatial data by taking into account the background knowledge Similarly to the classiﬁcation case the syntax for 003 SpatialAssocObjectQuery 005 is deﬁned in the following 003 SpatialAssocObjQuery 005  003 SpatialAssocObject 005{\003 SpatialAssocObject 005 003 SpatialAssocObject 005  association rule 003 association rule statement 005 with support 003 supp value 005 conﬁdence 003 conf value 005 The association rule clause speciﬁes the association rule deﬁned in 003 association rule statement 005  while the clause support and the clause conﬁdence specify the minimum support and conﬁdence respectively Each association rule object is selected from those stored in database and mapped into the association rule clause support clause and conﬁdence clause Although the syntax of 003 SpatialAssocObjQuery 005 is deﬁned it is not currently supported by the SDMOQL Interpreter in INGENS 4.2 Inductive SDMOQL queries The top-level syntax of 003 InductiveStatement 005 is reported below Extensions are in italics 003 InductiveStatement 005  003 SpatialObjectQuery 005 mine 003 KindOfPattern 005  using 003 SpatialClassObjectQuery 005   recursion mode 003 ON/OFF 005  analyze 003 DataDescriptors 005  
329 
329 


The using clause speciﬁes which spatial classiﬁcation objects among those stored in the database must be used as base classiﬁcation objects for answering this inductive query If recursion mode is on spatial classiﬁcation objects to be retrieved by the query are induced as part of a logical recursive theory This theory originally includes the rst-order rules which belong to the base spatial classiﬁcation objects select ed from database by means of 003 SpatialClassObjectQuery 005  The theory is then extended by adding the rst-order rules which are induced by ATRE for the class concepts deﬁned in the mine clause Recursion ON allows the induction of rules whose body may involve literals which are the class concepts already deﬁned in the theory A recursive classiﬁcation rule is stored in database as a recursive classiﬁcation object 5 Query Examples We present some examples of geographic knowledge discovery process performed by running SDMOQL queries over the inductive spatial database of INGENS This database currently contains a map sheet M81 NW on a scale of 1:25000 produced by the Italian Military Geographic Institute IGMI The map covers 90 km 2 in the surroundings of the Ofanto River spanning from the zone of Canosa to the Ofanto mouth see Figure 2 Figure 2 Surroundings of Ofanto River The boundary of cells labeled as system of farms uvial landscape is green blue First we present an inductive SDMOQL query that is formulated according to the original SDMOQL syntax A portion of the query is reported in the following select x from Cell as x where x.id in 34 43 44 51 52 53 54 61 62 63 mine classiﬁcation as uviallandscape for class uvial landscape analyze area/2 contain/2 line to line/2  type of/1 with descriptors contain/2 cost 5 type boolean area parcel/1 cost 0 type real cultivation to parcel/2 cost 0 type nominal  deﬁne knowledge area parcel\(A,B as type of\(A part of\(A,B\rue area\(B\=C  The data miner user graphically composes the SDMOQL query and associates the cells with a concept uvial landscape or system of farms thus completely deﬁning the training data To answer the query INGENS data mining engine runs ATRE on the conceptual description generated for the cells under analysis ATRE learns the classiﬁcation object class\(X1 landscape 004 contain\(X1,X2\rue road to river\(X2,X3\y perpendicular road to river\(X4,X3\y perpendicular which discriminates training cells labeled as uvial landscape from other cells This classiﬁcation object is now kept permanent in database and available for selection in subsequently SDMOQL queries Second we present an SDMOQL query that is formulated to retrieve the possibly recursive spatial classiﬁcation objects which provide an operational deﬁnition of system of farms by exploiting a possibly spatial relationship between system of farms and uvial landscape The training data are exactly the same selected in the previous query In addition spatial classiﬁcation objects which are stored in database for the uvial landscape concept are now selected in the query A portion of the query is reported in the following select x from Cell as x where x.id in 34 43 44 51 52 53 54 61 62 63 mine classiﬁcation as systemoffarms for class system of farms using class uvial landscape as contain\(X1,X2\rue road to river\(X2,X3\y perpendicular road to river\(X4,X3\y perpendicula with class X1 recursion mode on analyze area/2 contain/2 direction/1 line to line/2  type of/1 north/2 with descriptors contain/2 cost 5 type boolean north/2 cost 5 type boolean area parcel/1 cost 0 type real  road to river/2 cost 0 type nominal deﬁne knowledge area parcel\(A,B as type of\(A part of\(A,B\rue area\(B\=C  To answer the query ATRE learns a disjunction of recursive classiﬁcation rules which provide the operational deﬁnition of system of farm by taking into account spatial relations with the classiﬁcation objects which model the uvial landscape in the database The rules are class\(X1\=system of farms 004 north\(X2,X1\rue class\(X2\ﬂuvial landscape contain\(X1,X3\=true area parcel\(X3\n[105050,152450  class\(X1\=system of farms 004 north\(X2,X1\rue class\(X2\ﬂuvial landscape contain\(X2,X3\=true 
330 
330 


geographic direction river\(X3\t Both rules are stored in the inductive spatial database in the form of recursive spatial classiﬁcation objects Finally we present a consider an SDMOQL query to locate the occurrence of uvial landscape whose deﬁnition is stored as KDD object in database on a portion of a map stored in the same database in this example the cells 6 7 8 16 17 18 26 27 and 28 select x from Cell as x where x.id in 6 7 8 16 17 18 26 27 28 evaluate class uvial landscape as contain\(X1,X2\rue road to river\(X2,X3\y perpendicular road to river\(X4,X3\y perpendi with class X1 analyze contain/2 type of/1 part of/2 line to line/2 with descriptors contain/2 cost 0 type boolean road to river/2 cost 0 type nominal deﬁne knowledge road river\(A,B as type of\(A part of\(A,D\rue type of\(B\ver part of\(B,E\rue line to line\(D,E  This query correctly retrieves the cells 8 16 17 and 26 as uvial landscape The query also returns the cell 7 as a uvial landscape while the domain expert recognizes it as a system of farm This is a case of false positive 6 Conclusions In this paper we introduce principles and architecture of an inductive spatial database in INGENS which allows to view the geographic knowledge discovery process as querying a database which contains both spatial data and generalization of spatial data induced by means of spatial data mining Spatial KDD queries are formulated in SDMOQL which is extended in order to query both the spatial objects and the spatial KDD objects As future work we plan to extend SDMOQL syntax to select manipulate and query interesting KDD objects which satisfy constraints w.r.t accuracy size and so on In addition we intend to take into account a possible temporal dimension of geographic data Acknowledgments This work is in partial fulﬁllment of research objectives of Strategic Project Telecommunication Facilities and Wireless Sensor Networks in Emergency Management and ATENEO-2008 project Knowledge Discovery in Relational Domains References  A  A ppi ce A L a nza and D  M al erba A n i nt e g rat e d p l a t form for spatial data mining within a gis environment In ICDE Workshop on Spatio-Temporal Data Mining  pages 507–516 IEEE Computer Society 2007 2 J F  Bo u lic a u t M  Kle m e ttin e n  a n d H M a n n ila  Q u e ry in g inductive databases A case study on the mine rule operator In J M Zytkow and M Quafafou editors Principles of Data Mining and Knowledge Discovery PKDD 1998 volume 1510 of LNCS  pages 194–202 Springer 1998 3 J F  Bo u lic a u t M  Kle m e ttin e n  a n d H M a n n ila  M o d e ling kdd processes within the inductive database framework In M K Mohania and A M Tjoa editors International Conference on Data Warehousing and Knowledge Discovery DAWAK 1999  volume 1676 of Lecture Notes in Computer Science  pages 293–302 Springer 1999 4 J F  Bo u lic a u t L D Ra e d t a n d H  M a n n ila  e d ito rs Constraint-Based Mining and Inductive Databases  volume 3848 of LNCS  Springer 2005 5 J  H an Y  F u W  W a ng K  K oper s ki  a nd O  Z a iane DMQL A data mining query language for relational databases In SIGMOD Workshop on Research Issues in Data Mining and Knowledge Discovery DMKD 1996  Montreal Canada 1996 6 T  I mi el i n ski a nd H  Manni l a  A dat a base per s pect i v e on knowledge discovery Communication of the ACM  39\(11\:58–64 1996 7 T  I mieli  nski and A Virmani Msql A query language for database mining Data Mining Knowledge Discovery  3\(4\:373–408 1999  F  A  L isi a nd D Malerba I nducing multi-leve l association rules from multiple relations Machine Learning  55:175 210 2004 9 D  M al er ba L ear ni ng r ecur s i v e t heor i e s i n t he nor mal i l p setting Fundamenta Informaticae  57\(1\:39–77 2003  D  Mal e r b a A  A ppi ce and M  C eci  A dat a mi ni ng quer y language for knowledge discovery in a geographical information system In R Meo P Lanzi and M Klemettinen editors Database Support for Data Mining Applications  number 2682 in LNCS pages 95–116 Springer-Verlag 2003  D Mal erba F  E s posi t o  A  L anza and F  A  L i s i  Di sco v er ing geographic knowledge The ingens system In Z W Ras and S Ohsuga editors Foundations of Intelligent Systems ISMIS 2000  volume 1932 of LNCS  pages 40–48 Springer 2000  D  Mal e r b a F  E s posi t o  A  L anza F  A  L i si  a nd A  A ppi ce Empowering a GIS with inducti ve learning cap abilities The case of ingens Journal of Computers Environment and Urban Systems Elsevier Science  27:265–281 2003  R Ort a l e  E  R i t acco N  P el eki s  R  T rasart i  G Cost a F  Gi annotti G Manco C Renso and Y Theodoridis Daedalus A knowledge discovery analysis framework for movement data In S Gaglio I Infantino and D Sacc a editors Italian Symposium on Advanced Database Systems SEBD 2008  pages 191–198 2008  S  Rinzi v illo F  T urini V  Bogorny C Krner B.Kuijpers and M May Knowledge discovery from geographical data In F.Giannoni and D Pedresch i eds Mobility Data Mining and Privacy privacy Geographic Knowledge Discovery  2007  K  Z e i t ouni  A sur v e y of spat i a l d at a m i n i n g m et hods databases and statistics point of views Data warehousing and web engineering  pages 229–242 2002 
331 
331 


0 10 20 30 40 50 60 3210.75 minimum support execution time \(minutes GMFI GMAR BASIC Cumulate  Fig. 10 Mining time in DENSE databases  7.  Conclusions  Through several comprehensive experiments, we found that the FCET and IFECT can save a larger amount of storage spaces than Apriori, MaxEclat, and CHARM in both SPARSE databases and DENSE databases. Since the FCET stores fewer elements for a long pattern, when matched with GMFI/GMAR algorithm, it also revealed efficient execution time than BASIC and CUMULATE in mining generalized association rules The time complexity to find the maximal itemsets is O\(log2n\ where n is the total number of maximal itemsets. For a long pattern, we used a partition tree to count the SUB_TID of itemsets, and then got their merged results. Although the memory required for the FCET is still exponentially large, through limiting the size of maximal itemsets and the size of clustering to a reasonable memory requirement, we do save a large amount of storage spaces, especially in dense databases  7.    Conclusions  Through several comprehensive experiments, we found that the FCET and IFECT can save a larger amount of storage spaces than Apriori, MaxEclat, and CHARM in both SPARSE databases and DENSE databases. Since the FCET stores fewer elements for a long pattern, when matched with GMFI/GMAR algorithm, it also revealed efficient execution time than BASIC and CUMULATE in mining generalized association rules The time complexity to find the maximal itemsets is O\(log 2 n\ where n is the total number of maximal itemsets For a long pattern, we used a partition tree to count the SUB_TID of itemsets, and then got their merged results Although the memory required for the FCET is still exponentially large, through limiting the size of maximal itemsets and the size of clustering to a reasonable memory requirement, we do save a large amount of storage spaces especially in dense databases 8. References  1 g ra w a l, T  Im ieli n s k i an d A  S w a m i M in i n g  association rules between sets of items in large databases,î Proc. ACM International Conference on Management of Data \(1993\, pp. 207-216 2 g ra w a l an d R. Srik an t F a s t alg o rit h m s f o r  mining association rules,î Proc. 20th International Conference on Very Large Data Bases \(1994\ pp.487499  J i aW e i Han  J i an  P e i an d YiW en Yi n   Mi n i n g frequent patterns without candidate generation,î Proc ACM International Conference on Management of Data 2000\p. 1-12 4 J  S   Pa r k  M  S  C h en  an d P S  Y u     A n ef f e c t iv e hash-based algorithm for mining association rules,î Proc ACM International Conference on Management of Data 1995\p.175-186 5 A  Sa va se r e  E  O m i e c i ns ki  a n d S N a va t h e    A n  efficient algorithm for mining association rules in large databases,î  Proc. 21st International Conference on Very Large Data Bases \(1995\ pp.432-443 6 Y i n-F u H u a ng a n d  Chi e h M i ng W u   M i n i n g  generalized association rules using pruning techniques Proc. IEEE International Conference on Data Mining 2002\p.227-234 7 a k i a n d C.J  Hsia o   E ff icie n t al g o rith m s f o r  mining closed itemsets and their lattice structure, î  IEEE Transactions on Knowledge and Data Engineering, vol 17, no. 4, April \(2005\p. 462-478   Bu rdick  M. C a li m l i m  an d J. Geh r k e  M AF I A a maximal frequent itemset algorithm for transactional databases,î Proc. 17th International Conference on Data Engineering, \(2001\p.443-452  a k i S  P a rth a s a rat h y   M. Ogih ara, a n d W. Li   New algorithms for fast discovery of association rules Proc. 3rd ACM International Conference on Knowledge Discovery in Databases and Data Mining, \(1997\pp 283-286 10 M  J  Za ki a n d K  G o ud a  Fa s t ve r t i c a l  mi ni ng usi n g  diffsets,î Proc. 9th ACM International Conference on Knowledge Discovery and Data Mining, Aug. \(2003   Mam o u l i s D  W. C h e u ng an d W. L i a n    Similarity search in sets and categorical data using the signature tree,î Proc. 19th International Conference on Data Engineering, \(2003 12 R. Srik a n t a n d R Ag ra w a l   M i n i n g g e n e ralized  association rules,î Proc. 21st International Conference on Very Large Data Bases, \(1995\.407-419    
571 


Time Complexity and Speed We now evaluate scalability and speed with large high dimensional data sets to only compute the models as shown in Figure 7 The plotted times include the time to store models on disk but exclude the time to mine frequent itemsets We experimentally prove 1 Time complexity to compute models is linear on data set size 2 Sparse vector and matrix computations yield efﬁcient algorithms whose accuracy was studied before 3 Dimensionality has minimal impact on speed assuming average transaction size T is small Transactions are clu stered with Incremental Kmeans 26 introduced on Sectio n 3 Large transaction les were created with the IBM synthetic data generator 3 ha ving defaults n 1 M T=10 I=4 Figure 7 shows time complexity to compute the clustering model The rst plot on the left shows time growth to build the clustering with a data set with one million records T10I4D1M As can be seen times grow linearly as n increases highlighting the algorithms efﬁciency On the other hand notice d has marginal impact on time when it is increased 10-fold on both models due to optimized sparse matrix computations The second plot on the right in Figure 7 shows time complexity to compute clustering models increasing k on T10I4D100k Remember k is the main parameter to control support estimation accuracy In a similar manner to the previous experiments times are plotted for two high dimensionalities d  100 and d 1  000 As can be seen time complexity is linear on k  whereas time is practically independent from d  Therefore our methods are competitive both on accuracy and time performance 4.5 Summary The clustering model provides several advantages It is a descriptive model of the data set It enables support estimation and it can be processed in main memory It requires the user to specify the number of clusters as main input parameter but it does not require support thresholds More importantly clusters can help discovering long itemsets appearing at very low support levels We now discuss accuracy In general the number of clusters is the most important model characteristic to improve accuracy A higher number of clusters generally produces tighter bounds and therefore more accurate support estimations The clustering model quality has a direct relationship to support estimation error We introduced a parameter to improve accuracy wh en mining frequent itemsets from the model this parameter eliminate spurious itemsets unlikely to be frequent The clustering model is reasonably accurate on a wide spectrum of support values but accuracy decreases as support decreases We conclude with a summary on time complexity and efﬁciency When the clustering model is available it is a signiﬁcantly faster mechanis m than the A-priori algorithm to search for frequent itemsets Decreasing support impacts performance due to the rapid co mbinatorial growth on the number of itemsets In general the clustering model is much smaller than a large data set O  dk  O  dn  A clustering model can be computed in linear time with respect to data set size In typical transaction data sets dimensionality has marginal impact on time 5 Related Work There is a lot of research work on scalable clustering 1 30 28 a nd ef  c i e nt as s o ci at i o n m i n i n g 24  1 6  40  but little has been done nding relations hips between association rules and other data mining techniques Sufﬁcient statistics are essential to accelerate clustering 7 30 28  Clustering binary data is related to clustering categorical data and binary streams 26 The k modes algorithm is proposed in 19  t hi s a l gori t h m i s a v a ri ant o f K means  but using only frequency counting on 1/1 matches ROCK is an algorithm that groups points according to their common neighbors links in a hierarchical manner 14 C A C TUS is a graph-based algorithm that clusters frequent categorical values using point summaries These approaches are different from ours since they are not distance-based Also ROCK is a hierarchical algorithm One interesting aspect discussed in 14 i s t he error p ropagat i o n w hen u s i ng a distance-based algorithm to cluster binary data in a hierarchical manner Nevertheless K-means is not hierarchical Using improved computations for text clustering given the sparse nature of matrices has been used before 6 There is criticism on using distance similarity metrics for binary data 12  b ut i n our cas e w e h a v e p ro v e n K means can provide reasonable results by ltering out most itemsets which are probably infrequent Research on association rules is extensive 15 Mos t approaches concentrate on speed ing up the association generation phase 16 S ome o f t hem u s e dat a s t ruct ures t h at can help frequency counting for itemsets like the hash-tree the FP-tree 16 or heaps  18  Others res o rt to s t atis tical techniques like sampling 38 s t at i s t i cal pruni ng 24   I n  34  global association support is bounded and approximated for data streams with the support of recent and old itemsets this approach relies on discrete algorithms for efﬁcient frequency computation instead of using machine learning models like our proposal Our intent is not to beat those more efﬁcient algorithms but to show association rules can be mined from a clustering model instead of the transaction data set In 5 i t i s s ho wn that according t o s e v eral proposed interest metrics the most interesting rules tend to be close to a support/conﬁdence border Reference 43 p ro v e s several instances of mining maximal frequent itemsets a 
616 
616 


constrained frequent itemset search are NP-hard and they are at least P-hard meaning t hey will remain intractable even if P=NP This work gives evidence it is not a good idea to mine all frequent itemsets above a support threshold since the output size is combinatorial In 13 t h e a ut hors d eri v e a bound on the number of candidate itemsets given the current set of frequent itemsets when using a level-wise algorithm Covers and bases 37 21 a re an alternati v e t o s ummarize association rules using a comb inatorial approach instead of a model Clusters have some resemblance to bases in the sense that each cluster can be used to derive all subsets from a maximal itemset The model represents an approximate cover for all potential associations We now discuss closely related work on establishing relationships between association rules and other data mining techniques Preliminary results on using clusters to get lower and upper bounds for support is given in 27  I n g eneral there is a tradeoff between rules with high support and rules with high conﬁdence 33 t h i s w o rk propos es an al gorithm that mines the best rules under a Bayesian model There has been work on clustering transactions from itemsets 41  H o w e v er  t hi s a pproach goes i n t he oppos i t e di rection it rst mines associations and from them tries to get clusters Clustering association rules rather than transactions once they are mined is analyzed in 22  T he out put is a summary of association rules The approach is different from ours since this proposal works with the original data set whereas ours produces a model of the data set In 42 the idea of mining frequent itemsets with error tolerance is introduced This approach is related to ours since the error is somewhat similar to the bounds we propose Their algorithm can be used as a means to cluster transactions or perform estimation of query selectivity In 39 t he aut hors explore the idea of building approximate models for associations to see how they change over time 6 Conclusions This article proposed to use clusters on binary data sets to bound and estimate association rule support and conﬁdence The sufﬁcient statistics for clustering binary data are simpler than those required for numeric data sets and consist only of the sum of binary points transactions Each cluster represents a long itemset from which shorter itemsets can be easily derived The clustering model on high dimensional binary data sets is computed with efﬁcient operations on sparse matrices skipping zeroes We rst presented lower and upper bounds on support whose average estimates actual support Model-based support metrics obey the well-known downward closure property Experiments measured accuracy focusing on relative error in support estimations and efﬁciency with real and synthetic data sets A clustering model is accurate to estimate support when using a sufﬁciently high number of clusters When the number of clusters increases accuracy increases On the other hand as the minimum support threshold decreases accuracy also decreases but at a different rate depending on the data set The error on support estimation slowly increases as itemset length increases The model is fairly accurate to discover a large set of frequent itemsets at multiple support levels Clustering is faster than A-priori to mine frequent itemsets without considering the time to compute the model Adding the time to compute the model clustering is slower than Apriori at high support levels but faster at low support levels The clustering model can be built in linear time on data size Sparse matrix operations enable fast computation with high dimensional transaction data sets There exist important research issues We want to analytically understand the relationship between the clustering model and the error on support estimation We need to determine an optimal number of clusters given a maximum error level Correlation analysis and PCA represent a next step after the clustering model but the challenges are updating much larger matrices and dealing with numerical issues We plan to incorporate constraints based on domain knowledge into the search process Our algorithm can be optimized to discover and periodically refresh a set of association rules on streaming data sets References 1 C  A ggar w al and P  Y u F i ndi ng gener a l i zed pr oj ect ed cl usters in high dimensional spaces In ACM SIGMOD Conference  pages 70–81 2000 2 R  A g r a w a l  T  I mie lin sk i a n d A  S w a mi M in in g a sso c i a tion rules between sets of items in large databases In ACM SIGMOD Conference  pages 207–216 1993 3 R  A gr a w al and R  S r i kant  F ast a l gor i t h ms f o r m i n i n g a ssociation rules in large databases In VLDB Conference  pages 487–499 1994 4 A  A su n c io n a n d D Ne wman  UCI Machine Learning Repository  University of California Irvine School of Inf and Comp Sci http://www.ics.uci.edu 002 mlearn/MLRepository.html 2007 5 R  B a y a r d o a n d R  A g r a w a l  M in in g t h e mo st in te re stin g rules In ACM KDD Conference  pages 145–154 1999 6 R  B ekk e r m an R  E l Y a ni v  Y  W i nt er  a nd N  T i shby  O n feature distributional clustering for text categorization In ACM SIGIR  pages 146–153 2001 7 P  B r a dl e y  U  F ayyad and C  R ei na S cal i n g c l u st er i n g a l gorithms to large databases In ACM KDD Conference  pages 9–15 1998  A  B yk o w sk y a nd C Rigotti A c ondensed representation t o nd frequent patterns In ACM PODS Conference  2001 9 C  C r e i ght on and S  H anash Mi ni ng gene e xpr essi on databases for association rules Bioinformatics  19\(1\:79 86 2003 
617 
617 


 L  C r i s t o f o r a nd D  S i mo vi ci  G ener at i n g a n i nf or mat i v e cover for association rules In ICDM  pages 597–600 2002  W  D i ng C  E i ck J  W ang and X  Y uan A f r a me w o r k f o r regional association rule mining in spatial datasets In IEEE ICDM  2006  R  D uda and P  H ar t  Pattern Classiﬁcation and Scene Analysis  J Wiley and Sons New York 1973  F  G eer t s  B  G oet h al s and J  d en B u ssche A t i ght upper bound on the number of candidate patterns In ICDM Conference  pages 155–162 2001  S  G uha R  R ast ogi  a nd K  S h i m  R O C K  A r ob ust c l u stering algorithm for categorical attributes In ICDE Conference  pages 512–521 1999  J H a n a nd M K a mber  Data Mining Concepts and Techniques  Morgan Kaufmann San Francisco 1st edition 2001  J H a n J P e i  and Y  Y i n  M i n i n g f r e quent pat t e r n s w i t hout candidate generation In ACM SIGMOD Conference  pages 1–12 2000 17 T  Ha stie  R  T ib sh ira n i a n d J  F rie d ma n  The Elements of Statistical Learning  Springer New York 1st edition 2001  J H u ang S  C h en a nd H  K uo A n ef  c i e nt i n cr emental mining algorithm-QSD Intelligent Data Analysis  11\(3\:265–278 2007  Z  H u ang E x t e nsi ons t o t h e k m eans a l gor i t h m f or cl ust e r ing large data sets with categorical values Data Mining and Knowledge Discovery  2\(3\:283–304 1998  M K r yszki e w i cz Mi ni ng w i t h co v e r a nd e x t e nsi o n oper a tors In PKDD  pages 476–482 2000  M K r yszki e w i cz R e duci n g bor der s of kdi sj unct i o n f r e e representations of frequent patterns In ACM SAC Conference  pages 559–563 2004  B  L e nt  A  S w a mi  a nd J W i dom C l u st er i n g a ssoci at i o n rules In IEEE ICDE Conference  pages 220–231 1997 23 T  M itc h e ll Machine Learning  Mac-Graw Hill New York 1997  S  Mori shi t a and J  S ese T r a v ersi ng i t e mset s l at t i ces wi t h statistical pruning In ACM PODS Conference  2000  R  N g  L  L akshmanan J H a n and A  P ang E xpl or at or y mining and pruning optimizations of constrained association rules In ACM SIGMOD  pages 13–24 1998  C  O r donez C l ust e r i ng bi nar y dat a st r eams w i t h K means In ACM DMKD Workshop  pages 10–17 2003  C  O r donez A m odel f or associ at i o n r ul es based o n c l u st er ing In ACM SAC Conference  pages 549–550 2005 28 C Ord o n e z  In te g r a tin g K me a n s c lu ste r in g w ith a r e l a tio n a l DBMS using SQL IEEE Transactions on Knowledge and Data Engineering TKDE  18\(2\:188–201 2006  C  O r donez N  E z quer r a  a nd C  S a nt ana C onst r ai ni ng and summarizing association rules in medical data Knowledge and Information Systems KAIS  9\(3\:259–283 2006  C  O r donez a nd E  O m i eci nski  E f  ci ent d i s kbased K means clustering for relational databases IEEE Transactions on Knowledge and Data Engineering TKDE  16\(8\:909–921 2004 31 S Ro we is a n d Z  G h a h r a m a n i A u n i fy in g r e v ie w o f lin e a r Gaussian models Neural Computation  11:305–345 1999  A  S a v a ser e  E  O mi eci nski  a nd S  N a v a t h e A n ef  c i e nt al gorithm for mining association rules In VLDB Conference  pages 432–444 September 1995  T  S c hef f er  F i ndi ng associ at i o n r ul es t h at t r ade s uppor t optimally against conﬁdence Intelligent Data Analysis  9\(4\:381–395 2005  C  S i l v est r i a nd S  O r l a ndo A ppr oxi mat e mi ni ng of f r e quent patterns on streams Intelligent Data Analysis  11\(1\:49–73 2007  R  S r i k ant a nd R  A g r a w a l  Mi ni ng gener a l i zed associ at i o n rules In VLDB Conference  pages 407–419 1995 36 R Srik a n t a n d R Ag ra w a l M i n i n g q u a n tita ti v e a sso c i a tio n rules in large relational tables In ACM SIGMOD Conference  pages 1–12 1996  R  T a oui l  N  Pasqui er  Y  B ast i d e and L  L akhal  Mi ni ng bases for association rules using closed sets In IEEE ICDE Conference  page 307 2000  H  T o i v onen S a mpl i n g l ar ge dat a bases f or associ at i o n r ul es In VLDB Conference  1996  A  V e l o so B  G usmao W  Mei r a M C a r v al o Par t hasar a t h i  and M Zaki Efﬁciently mining approximate models of associations in evolving databases In PKDD Conference  2002  K  W a ng Y  H e  a nd J H a n P u shi n g s uppor t c onst r ai nt s into association rules mining IEEE TKDE  15\(3\:642–658 2003  K  W a ng C  X u  a nd B  L i u C l ust e r i ng t r ansact i ons usi n g large items In ACM CIKM Conference  pages 483–490 1999  C  Y a ng U  Fayyad and P  B r a dl e y  E f  ci ent d i s co v e r y of error-tolerant of frequent itemsets in high dimensions In ACM KDD Conference  pages 194–203 2001  G  Y a ng T h e c ompl e x i t y of mi ni ng maxi mal f r e quent i t e msets and maximal frequent patterns In ACM KDD Conference  pages 344–353 2004  T  Z h ang R  R a makr i s hnan and M  L i v n y  B I R C H  A n efﬁcient data clustering method for very large databases In ACM SIGMOD Conference  pages 103–114 1996 
618 
618 


