Self-optimization Rule-chain Mining Based on Potential Association Rule Directed Graph   NING Hong-yun 1, 2 LIU Jin-lan 1 ZHANG De-gan 2  1 School of Management, Tianjin University, Tianjin 300072, China 2 School of Computer Science and Technology Tianjin University of Technology Tianjin 300191, Chin 000D  ninghongyun@hotmail.com   liujinlan@tj u.edu.cn   gandegande@tjut.edu.cn   Abstract  This paper presents an ACO-based \(Ant Colony Optimization\ mining algorithm aiming to discover longer rule-chains directly. Firstly, a potential association rule directed graph \(PAGraph\ is created in which, the dynamic heuristics is used to record participant-intensity of edge. Secondly, making use of ant’s positive feedback, pheromone on edge that ants passed is adjusted by heuristics so that it could make paths, which have longer rule-chains, have higher selection probability. Meanwhile, a bitwise-AND operation is introduced to compute rule’s confidence easily. Finally, the experimental results show the proposed method can sufficiently capture longer rulechains and it also confirms the robustness of the algorithm   1. Introduction  To finding out hidden relationships in a large transaction database, Association Rule Mining \(ARM is studied. Recently, some graph-based ARM methods are proposed and more effective than traditional algorithm based on Apriori F P t ree[2]. F o r  example, DLG algorithm uses an association graph to generate all large item sets [3,4 T h e d e p t h f i rst  traversal algorithm is proposed by Burdick in which a vertical bitmap is used to store projection of item  And a fast mining algorithm based on prefix-generallinked-list is proposed by Yang & Sun l l of t h e m  effectively reduce database scanning times. However with the introduction of graph data structure, “new complexity” is readily brought as it costs additional time and space In this paper, a novel and robust mining algorithm is presented to discover rule-chains efficiently. Firstly, a potential association rule directed graph \(PAGraph created, in which each node is corresponding to a frequent item, and each edge is a possible association rule. Then, an improved ant colony optimization algorithm \(ACO\rovided to mine rule-chains, as well as a dynamic heuristics is defined to indicate participant-intensity of edge, a vertical-bitmap-based bitwise-AND operation is used to compute rule’s support and rule’s confidence This paper is organized as follows: PAGraph design procedure is given in Section 2 as a preliminary work The rule-chains mining algorithm is given in detail in Section 3. Section 4 gives experimental results and Section 5 concludes the paper and points out the directions of future work  2. PAGraph design  There is a transaction database, TD tid  items  and TN is the number of transactions, where <tid items is a transaction tid is the transaction identifier and items is items involved in the transaction Definition 1. \(ItemBits\Bits is a bit vector about an item, its length is the number of transactions if i th bit is ‘1’, it means the item appears in the i th transaction, otherwise ‘0’, means not in i th transaction Definition 2.  \(1-FIs\-FIs is called Frequent Item Set, 1-FIs I i IID,ItemBits> | Sup I i  MinSup  i=1…N I i is the Frequent Item and N is the number of Frequent Items, where IID is the item identifier ItemBits describes the item distribution in TD, Sup I i  is the item support and MinSup is a threshold called the minimum item support Definition 3. \(FI-Bitmap\Bitmap consists of all ItemBits in 1-FIs and is called frequent item-bitmap. It is a bit matrix, denoted as: FI-Bitmap= \(ItemBits N×1  Definition 4. \(PAGraph\AGraph=<V,E> is called potential association rule directed graph, where V=1 
2008 International Symposium on Computational Intelligence and Design 978-0-7695-3311-7/08 $25.00 © 2008 IEEE DOI 10.1109/ISCID.2008.17 25 
2008 International Symposium on Computational Intelligence and Design 978-0-7695-3311-7/08 $25.00 © 2008 IEEE DOI 10.1109/ISCID.2008.17 25 


FIs I 1  I 2  I N and I i is also called item-node; E e I i I j   I i  I each edge represents the relationship between items and it may be a rule By scanning TD once, the FI-Bitmap and PAGraph can be built easily, meanwhile, in order to judge whether a rule-chain is in PAGraph, several formulas are used  T N count I Sup i  ItemBits    i   1 Sup  I i I j  TN count  ItemBits ItemBits  j i  2 Conf  I i I j     ItemBits ItemBits  j i i ItemBits count count  3 where I i I j 1-FIs Sup  I i I j s the rule’s support and Conf  I i I j the rule’s confidence count ItemBits\ the frequency of the item and can be computed by easily taking count of “1” in its ItemBits Thus Sup  I i nsidered the probability of the item Let MinSup and MinConf be the minimum rule support and the minimum rule confidence, we have the following definitions of rule and rule-chain Definition 5. \(rule\ PAGraph, if the edge from I i  to I j is a rule, it should satisfy Sup  I i I j  MinSup   Conf  I i I j  MinConf  Definition 6. \(rule-chain\ule-chain consists of a series of rules. Supposed P=< I k1 I k2 I kN I k1 is a path traversing all item-nodes, R=<I km I kn is a segment of the path, m,n=1…N, then, if R is a rulechain, it should satisfy 1\ edge e  R e is a rule 2 km-1 I km and <I kn I kn+1 are not rules We let Length\(R\e the length of the rule-chain which is the number of rules in the chain. And if each edge of P is a rule, P is called circular rule-chain and its length is N  3. ACO-based SRMining model  In PAGraph, an ACO-based self-optimization rulechain mining algorithm \(SRMining\ is proposed. The main difference between traditional ACO [7 d  SRMining is: the former aims to search for a best route, while the latter tries to mine many optimal path segments, namely rule-chains In SRMining, pheromone suggests the possibility of an edge being part of rule-chains. It will be enhanced with ants moving by accumulating heuristics, and make path, which have longer rule-chains, have higher selection probability. All of this works by an iterative process of ant’s positive feedback. Supposed path k  I k1 I k2 I kN I k1 is a path traversing all item-nodes by the ant k and R=<I m I n is a rule-chain in path k    3.1. Dynamic heuristics  Let lr Length\(R\N be the relative length of the rule-chain and ij be heuristics of edge <I i I j  ij is calculated as follows          R I I if N R Length lr R I I if lr where lr t t j i j i ij ij ij     0   4     max  1  0  0      ij is initialized to 0 and increased with more paths being found. It indicates Current Participant Intensity of an Edge to Rule-chains Edge Intensity\, which is denoted as the relative length of the present largest rule-chain covering this edge. For example, when ij  0 edge I i I j  is found in a rule-chain of path 1 and length of the rule-chain is 4, so ij 4/N Then I i I j  is involved in another rule-chain of path 2 and length of it is 3. Since 3/N ij  ij is as of old. And then I i I j  is found again in a rule-chain of path 3 and length of it is 5 Since 5/N ij  ij is updated as 5/N   3.2. Pheromone update  Definition 4. \(Path Intensity\. Path Intensity of path k  denoted as PI k is calculated as    k j i path I I ij k t t PI        5 PI k is the sum of Edge Intensity in path k So, it can be seen that the larger intensity the path has, the higher possibility of its edge being part of a long rule-chain there will be. In t th iteration, supposed m ants get m  paths r ij  r ij  m\ paths pass the edge <I i I j  ij is the incremental pheromone of <I i I j then, the pheromone of <I i I j denoted as ij can be updated by the formula ij r 1 k k ij r  PI        1  0  0  ij              where t t ij ij ij ij  6 Obviously, the pheromone on <I i I j don’t need to be updated if r ij 0. This can reduce the workload for global pheromone update. In additional, for the introduction of dynamic heuristics, there is no need of the evaporation rate. The heuristics of an edge will be 0  all the time, if the edge is not a rule. Though these edges doesn’t contribute to Path Intensity, they may play the role of connecting rule-chains which would be lost if these edges’ pheromone was evaporated 
26 
26 


 3.3. SRMining algorithm  Supposed tabu k is the tabu list of ant k The ant k  located item-node i selects an edge between item-node  i and item-node j according to the probability     otherwise tabu j t t t t t P k tabu q iq iq ij ij k ij k 0            012  012     7 where parameters and specify the importance of pheromone and heuristics. Pheromone tells ant how important the edge is in the past, while heuristics represents intensity of the edge involving in a longer rule-chain. Thus, SRMining algorithm is described as Input  FI-Bitmap Output   ij  N*N  ij  N*N where i, j =1...N SRMining  ij  N*N 0 ij  N*N 0;     // initialization  for t 1… t max do for k=1…m do i=random k I i path k I i  for s=1… N do         // seek paths with for k=1…m do {    // longer rule-chains select the item-node j to be visited next with probability   t P k ij given by formula \(7 path k path k I j tabu k tabu k I j   for k=1…m do                // Print rule-chains for each rule-chain R path k do if\(Length\(R\>0\en PrintRuleChain UpdateHeuristics UpdatePheromone   4. Results and discussion  The Experiment is designed into two parts, the result analysis and the comparison with FP-growth and DLG. Algorithms and data generators are programmed in JAVA on a PC with 1300MHz/ 512M  4.1. Result analysis  Experimental datasets used are generated by data generator, which is modified from the source file of IBM synthetic data generator of Linux version [8   I t s parameters include D is the number of transactions T is the average number of items in a transaction C is a integer array to store MinSup  MinConf  c1  cn where ci is the number of i length rule-chains For example, D10KT10C{20%,50%, 100, 70, 50 20, 10} is a dataset that consists of 10K transactions 10 items in each transaction averagely and based on MinSup 20 MinConf 50%, there are 100 1-length rule-chains, similarly, 70 2-length, 50 3-length, 20 4length and 10 5-length rule-chains Table 1 gives ten continuous running results on dataset upwards, in which Num is the number of rulechains discovered Acc is the accumulative mining rate Average Acc is average accumulative mining rate Amr  is average mining rate, and parameters of the algorithm are set as 1 1, m=1000 and t max 20                The result shows that, after running for several times, the union of result can cover all rule-chains even thought short rule-chains mining rate is slightly less than that of long rule-chains in a running for the introduction of Path Intensity. Fig. 1 shows the same effect. On the other hand, from these experiments we also see the typical ACO performance characteristics such as robust, self-adaptive, and positive feedback  Fig. 1 the number of ru le-chains discovered in ten running results Table 1. Ten continuous running results  length=1 length=2 length=3 length=4 length=5 Average Acc N um Acc N um Acc N um Acc N um Acc N um Acc 1 98 98% 69 99% 50 100% 20 100% 10 100 99.3 2 95 98% 68 99% 48 100% 19 100% 10 100 99.4 3 100 100 70 100 50 100% 20 100% 10 100 100 4 99 100 69 100 50 100% 20 100% 10 100 100 5 97 100 69 100 49 100% 20 100% 10 100 100 6 95 100 68 100 49 100% 20 100% 10 100 100 7 99 100 68 100 50 100% 20 100% 10 100 100 8 82 100 62 100 45 100% 18 100 9 100 100 9 99 100 70 100 50 100% 20 100% 10 100 100 10 98 100 68 100 49 100% 19 100% 10 100 100 Amr  96  97  98  98  99  
27 
27 


4.2. Comparison with FP-growth and DLG  Similarly, experimental datasets is generated by the data generator whose parameters D is the number of transactions, T is the average number of items in a transaction and I is the number of whole items. Fig. 2 gives the result of SRMining, FP-growth and DLG on dataset D10KT10I1K under different MinSup Since SRMining aims to discover longer rule-chains, here we use it to mine 1-length rule-chains. Let MinConf 20 1 1 t max 20 and let m is one third of the number of frequent items in 1-FIs            Result shows that SRMining is better than other two algorithms. The reason is that it scans database only once and its time complexity is only decided by scale of PAGraph. Especially, when scale of 1-FIs is small changes, its running time is stable approximately  5. Conclusions and future work  By mining rule-chains, we can gain logics between multi items. This algorithm is more intelligent as this process is robust because results can’t be affected by a few ants’ fault. By analyzing paths with higher Path Intensity, we can also get the following information 1\ If there are only several short rule-chains in a path, it means many pheromones are focused on those short rule-chains, in which the edges may be covered by other rule-chains that lead to the pheromones being promoted. Consequently, one-to-many rules must exist The solution is to analyze cross points of these paths to search one-to-many rules 2\ there are several mid-length rule-chains in a path, it means these rule-chains are relative independent. And if a longer rule-chain is existent in it under most circumstances, the rule-chain may include some rules that interest user The future work should be done on the improvement of parameters of SRMining, such as   and evaporation rate \(is 0\d we believe this will have our model work more efficiently  Acknowledgements  This work was supported by the National High Technology Research and Development Program China\(No.2007AA01Z188\ the National Natural Science Foundation, China\(No.60773073\ the Tianjin Natural Science Foundation, China \(No. 043600511  References  1  R. Agrawal, T.Imielinski, A Swami, “Mining Association Rules Between Sets of Items in Large Databases Proc of the ACM SIGMOD Conference on Management of Data ACM, New York, NY, 1993, pp. 207-2l6  2  J.W. Han, J. Pei, Y.W. Yin, R.Y. Mao, “Mining Frequent Patterns without Candidate Generation: A FrequentPattern Tree Approach Data Mining and Knowledge Discovery Kluwer Academic Publishers, Hingham MA 2004, 8\(1\, pp. 53-87  3  S.J. Yen, A.L.P. Chen, “A Graph-based Approach for Discovering Various Types of Association Rules IEEE Trans. on Knowledge and Data Eng IEEE Educational Activities Department, Piscataway NJ, 2001, 13\(5\ pp 839-845  4  M. Chen, Z.Z. Shi, W.J. Wang, “An Efficient Graphbased Algorithm for Discovering Association Rules Computer Applications Science Press, Chengdu Sichuan 2006, 26\(11\, pp. 2654-2656  5  D. Burdick, "A Maximal Frequent Item Set Algorithm for Transactional Databases Proc. of the 17th Int’l Conf. on Data Engineering IEEE Computer Society Washington DC, 2001, pp. 443-444  6  M. Yang, Z.H. Sun, “A Fast Algorithm for Discovering Association Rules based on Prefix General Linked List Mini-micro Systems Mini-micro Systems Publisher Shenyang, 2003, 24\(5\, pp. 899-901  7  M. Dorigo, Gambardella LM, “Ant Colony System: A Cooperative Learning Approach to the Traveling Salesman Problem IEEE Trans on Evolutionary Computation 1997, 1\(1\, pp. 53-66  8  R. Agrawal, IBM Synthetic Data Generator, http://www almaden.ibm.com/cs/quest/syndata.html Fig. 2 Comparison on D10KT10I1K 
28 
28 


input  the subject and relation set  S  R   a coef\002cient 022 between 0,1 output  speci\002city spe  s  assigned to all s 2 S  let k  1  get the set of leaves S 0 from S  1 for  s 0 2 S 0  assign spe  s 0   k  2 get S 0 which is the set of leaves in case that we remove the 3 nodes in S 0 and the related relations from  S  R   if  S 0    then return the terminal condition  4 foreach s 0 2 S 0 do 5 if  hyponym  s 0     then spe 1  k  6 else spe 1  022 002 min f spe  s  j s 2 hyponym  s 0  g  7 if  meronym  s 0     then spe 2  k  8 else spe 2  P s 2 meronym  s 0  spe  s  j meronym  s 0  j  9 spe  s 0   min  spe 1  spe 2   10 end 11 k  k 002 022 S 0  S 0  S 0  go to step 3 12 Algorithm 1  Analyzing Semantic Relations for Speci\002city The instances in an LIR contain a user's background knowledge and should also count in the sup  s Q  values of the LIR s citing subjects Considering the bel  i Q  calculated by Eq 5 the support value sup  i Q  held by an instance i to Q is calculated by sup  i Q   X s 2 021  i  bel  i s  002 sim  s Q   10 Because the negative subjects have sim  s Q   0  only the positive subjects cited by i count in sup  i Q   Finally sup  s Q  is calculated based on the sim  s Q  from Eq 1 or 8 the spe  s  from Algorithm 1 and the related sup  i Q  from Eq 10 sup  s Q   spe  s  002 sim  s Q  002 X i 2 021 000 1  s  sup  i Q   11 For a subject in the 002nal S 000  the sup  s Q   0 because its sim  s Q   0  The support value sup  s Q  speci\002es the w k of h k w k i 2 K in U considering an information need where s is for a k and Q is for a g 2 G  During the personalized ontology learning the WKB in the computer model C constructs an ontology for a user and the user's LIR is used to personalize the ontology Equations 1 to 11 and Algorithm 1 are used for knowledge extraction They are the F in C  as described in De\002nition 5 3.4 Ontology Model The ontology model is the product from the computer model aiming to simulate a user's implicit mental model dealing with an information need An ontology model can be formalized as follows De\002nition 5 An ontology model associated with a Q is a 4-tuple O  Q   hS  R  tax S  rel i  where 017  S is a set of subjects  S 022 S  consisting of a positive subset S  relevant and a negative subset S 000 nonrelevant to Q  017  R is a set of relations and R 022 R  017 tax S  tax S 022 S 002 S is a function de\002ning the taxonomic structure of ontology containing two directed relations of hypernym/hyponym and holonym/meronym 017 rel is a function de\002ning non-taxonomic relation of synonyms e.g overlapping The ontology model simulates a user's mental model U  The knowledge K in U is speci\002ed by S  in which the S  is relevant and S 000 is non-relevant to a Q representing an information need g 2 G  The w k for k in K is re-produced by sup  s Q  for the subjects in S  The b B in U is speci\002ed by R  tax S and rel in O  Q   The mental model U is rebuilt 4 Evaluation In the IR 002elds a common batch-style experiment is to select a collection of documents testing set a set of topics associated with relevance judgements training set and then compare the performance of experimental models Our experiments follow this style and use the standard testbed and topics as that used in the TREC-11 Filtering track 1  which aims to evaluate IR methods using relevant and nonrelevant training sets Our proposed model called ONTO model in the experiments is compared with an implemented mental model called TREC model in experiments in the experiments The experiment design is illustrated in Fig 1 Against an incoming topic the TREC model generates a training set manually whereas the ONTO model builds a user's personalized ontology automatically and generates a training set from the user's LIR  A training set consists of a set of positive samples D  and a set of negative samples D 000  Each sample is a document d holding a support value support  d  to the given topic The different training sets are used by the common information gathering system to retrieve information from the testing set The performance of the information gathering system is then affected by the training sets input Based upon this we can compare the performances and evaluate our proposed model The Reuters Corpus Volume 1 RCV1 used in the TREC-11 is also used as the testbed in our experiments The RCV1 is a large XML document set 806,791 documents with great topic coverage A set of 50 topics are also provided by the TREC-11 These topics are designed by linguists manually and associated with relevance documents judged by the same linguists All 50 topics are 1 Text REtrieval Conference http://trec.nist.gov 
510 
514 


Figure 1 Experiment Design used in our experiments in order to maintain the high stability as suggested by The topics ha v e title description and narrative However only the titles are used as queries because in real world users only use short phrases to express their information needs 4.1 Information Gathering System An information gathering system IGS is implemented for common use by all the experimental models The IGS is an implementation of a model developed by which uses user pro\002les for information gathering The s model is chosen because not only it is veri\002ed better than the Rocchio and Dempster-Shafer models but also it is extensible in using support values of training documents The input support values associated with documents would affect the IGS's performance sensitively The technical details and the related justi\002cations can be referred to The IGS 002rst uses the training set to evaluate weights for a set of selected terms T  After text pre-processing of stopword removal and word stemming a positive document d becomes a pattern that consists of a set of term frequency pairs  d  f  t 1  f 1    t 2  f 2        t k  f k  g  where f i is t i s term frequency in d  The semantic space referred by  d is represented by its normal form 014  d   which satis\002es 014  d   f  t 1  w 1    t 2  w 2        t k  w k  g  where w i  i  1      k  are the weight distribution of terms and w i  f i P k j 1 f j  A probability function on T can be derived based on the normal forms of positive documents and their supports for all t 2 T  pr 014  t   X d 2 D    t;w  2 014  d  support  d  002 w 12 The testing documents can be indexed by weight  d   which is calculated using the probability function pr 014  weight  d   X t 2 T pr 014  t  002 034  t d  13 where 034  t d   1 if t 2 d  otherwise 034  t d   0  4.2 TREC Model The TREC model is the implementation of a user's mental model For a given topic the TREC linguists read a set of documents and marked each document positive or negative against the topic If a document d is marked positive it becomes a positive document in the TREC training set and support  d   1 j D  j  otherwise it becomes a negative document and support  d   0  Since the linguists who marked the documents are also the people who generated the topics following the assumption that only users know their interests and preferences perfectly the TREC model makes a golden model to our proposed model to mark The modelling of a user's mental model can be proven successful if the ONTO model can achieve the same or close performance to this golden model 4.3 ONTO Model This model is the implementation of our proposed model As illustrated in Fig 1 and required by the IGS the input to this model is a topic and the output is a training set consisting of positive documents  D   and negative documents  D 000  Each document is associated with a support  d  value indicating its support level to the topic The WKB described in Section 3.3.1 is constructed based on the Library of Congress Subject Headings 2 LCSH system The LCSH system is a categorization developed for organizing the large volumes of library collections and for retrieving information from the library The subject headings in the LCSH are transformed into the subjects in WKB  and the LCSH structure is transformed into the backbone of WKB  Eventually the constructed WKB contains over 400,000 subjects covering various topics The semantic relations in the WKB are transformed from the references Broader term  Narrower term and Used-for  speci\002ed in the LCSH The Broader term and Narrower term references are transformed into hyponym/hypernym relations Used-for references are usually used in two situations to describe an action or to describe an object When object A is used for an action A actually becomes a part of that action like using turner in cooking when A is used for object B  A becomes a part of B  like“using wheels for a car Hence we transform the 2 http://classi\002cationweb.net 
511 
515 


Used-for references in the LCSH into holonym/meronym relations in our WKB  In the experiments we assume that each topic comes from an individual user We attempt to evaluate our model in an environment that covers great range of topics However it is not realistic to expect a participant to hold such great range of topics in personal interests Thus for the 50 experimental topics we assume each one coming from an individual user and learn her his personalized ontology An LIR is collected through searching the subject catalogue of Queensland University of Technology QUT Library 3 by using the title of a topic Librarians have assigned title table of content summary and a list of subjects to each information item e.g a book stored in QUT library The assigned subjects are treated as the tags in Web documents that cite the knowledge in the WKB  In order to simplify the experiments we only use the librarian summarized information title table of content and summary to represent an instance in an LIR  All these information can be downloaded from QUT's Web site and are available to the public Once the WKB and an LIR are ready an ontology is learned as described in Section 3.3.1 and personalized as in Section 3.3.2 The user con\002dence rates on the subjects are speci\002ed as in Section 3.3.3 A document d i in the training set is then generated by an instance i  and its support value is determined by support  d i   X s 2 021  i  s 2S sup  s Q  14 where s 2 S in O  Q  are as de\002ned in De\002nition 5 As sup  s Q   0 for s 2 S 000 according to Eq 11 the documents with support  d   0 go to D 000  whereas those with support  d   0 go to D   4.4 Performance Measures The performance of the experimental models are measured by three methods the precision averages at eleven standard recall levels 11SPR the mean average precision MAP and the F 1 Measure They are all based on precision and recall the modern IR evaluation methods The 11SPR is reported suitable for information gathering and is used in TREC evaluations as a performance measuring standard An 11SPR v alue is computed by summing the interpolated precisions at the speci\002ed recall cutoff and then dividing by the number of topics P N i 1 precision 025 N  025  f 0  0  0  1  0  2      1  0 g  15 N is the number of topics and 025 are the cutoff points where the precisions are interpolated At each 025 point an aver3 http://library.qut.edu.au Figure 2 Experimental 11SPR Results age precision value over N topics is calculated These average precisions then link to a curve describing the recallprecision performance The MAP is a stable and discriminating choice in information gathering evaluations and is recommended for measuring general-purpose information gathering methods The average precision for each topic is the mean of the precision obtained after each relevant document is retrieved The MAP for the 50 experimental topics is then the mean of the average precision scores of each of the individual topics in the experiments The MAP re\003ects the performance in a non-interpolated recall-precision fashion F 1 Measure is also well accepted by the information gathering community which is calculated by F 1  2 002 precision 002 recall precision  recall  16 Precision and recall are evenly weighted in F 1 Measure For each topic the macro F 1 Measure averages the precision and recall and then calculates F 1 Measure whereas the micro F 1 Measure calculates the F 1 Measure for each returned result and then averages the F 1 Measure values The greater F 1 values indicate the better performance 5 Results and Discussions The experiments attempt to evaluate our proposed model by comparing to an implementation of mental model We expect that the ONTO model can achieve at least the close performance to the TREC model The experimental 11SPR results are illustrated in Fig 2 At recall point 0.3 the TREC model slightly outperformed the ONTO model but at 0.5 and 0.6 the ONTO model achieved better results than the TREC model subtly At all other points their 11SPR results are just the same For the MAP results shown on Table 1 the ONTO model achieved 0.284 which is just 0.006 below the TREC model 2 
512 
516 


TREC ONTO p-value Macro-FM 0.388 0.386 0.862 Micro-FM 0.356 0.355 0.896 MAP 0.290 0.284 0.484 Table 1 Other Experimental results downgrade For the average macroand microF 1 Measures also shown on Table 1 the TREC model only outperformed the ONTO model by 0.002 0.5 in macro F 1 and 0.001 0.2 in micro F 1  The two models achieved almost the same performance The evaluation result is promising The statistical test is also performed on the experimental results in order to analyze the evaluation's reliability As suggested by we use the Student's Paired T-Test for the signi\002cance test The null hypothesis in our T-Test is that no difference exists in two comparing models When two tests produce substantially low p-value usually  0.05 the null hypothesis can be rejected In contrast when two tests produce high p-value usually  0.1 there is not or just little practical difference between two models The T-Test results are also presented on Table 1 The pvalue s show that there is no evidence of signi\002cant difference between two experimental models as the produced pvalue s are quite high  p-value 0.484\(MAP 0.862\(macroFM and 0.896\(micro-FM far greater than 0.1 Thus we can conclude that in terms of statistics our proposed model has the same performance as the golden TREC model and the evaluation result is reliable The advantage of the TREC model is that the experimental topics and the training sets are generated by the same linguists manually They as users perfectly know their information needs and what they are looking for in the training sets Therefore it is reasonable that the TREC model performed better than the ONTO model as we cannot expect that a computational model could outperform a such perfect manual model However the knowledge contained in TREC model's training sets is well formed for human beings to understand but not for computers The contained knowledge is not mathematically formalized and speci\002ed The ONTO model on the other hand formally speci\002es the user background knowledge and the related semantic relations using the world knowledge base and local instance repositories The mathematic formalizations are ideal for computers to understand This leverages the performance of the ONTO model As a result as shown on Fig 2 and Table 1 the ONTO model achieved almost the same performance as that of the TREC model 6 Conclusions In this paper an ontology-based knowledge IR framework is proposed aiming to discover a user's background knowledge to improve IR performance The framework consists of a user's mental model a querying model a computer model and an ontology model A world knowledge base is used by the computer model to construct an ontology to simulate a user's mental model and the ontology is personalized by using the user's local instance repository The semantic relations of hypernym/hyponym holonym/meronym and synonym are speci\002ed in the ontology model The framework is successfully evaluated by comparing to a manual user model The ontology-based framework is a novel contribution to knowledge engineering and Web information retrieval References   C Buckley and E M Voorhees Evaluating evaluation measure stability In Proc of SIGIR 00  pages 33–40 2000   R M Colomb Information Spaces The Architecture of Cyberspace  Springer 2002   D Dou G Frishkoff J Rong R Frank A Malony and D Tucker Development of neuroelectromagnetic ontologies\(NEMO a framework for mining brainwave ontologies In Proc of KDD 07  pages 270–279 2007   S Gauch J Chaffee and A Pretschner Ontology-based personalized search and browsing Web Intelligence and Agent Systems  1\(3-4 2003   X Jiang and A.-H Tan Mining ontological knowledge from domain-speci\002c text documents In Proc of ICDM 05  pages 665–668 2005   J D King Y Li X Tao and R Nayak Mining World Knowledge for Analysis of Search Engine Content Web Intelligence and Agent Systems  5\(3 2007   D D Lewis Y Yang T G Rose and F Li RCV1 A new benchmark collection for text categorization research Journal of Machine Learning Research  5:361–397 2004   Y Li and N Zhong Mining Ontology for Automatically Acquiring Web User Information Needs IEEE Transactions on Knowledge and Data Engineering  18\(4 2006   H Liu and P Singh ConceptNet a practical commonsense reasoning toolkit BT Technology  22\(4 2004   A D Maedche Ontology Learning for the Semantic Web  Kluwer Academic Publisher 2002   S E Robertson and I Soboroff The TREC 2002 002ltering track report In Text REtrieval Conference  2002   M D Smucker J Allan and B Carterette A Comparison of Statistical Signi\002cance Tests for Information Retrieval Evaluation In Proc of CIKM'07  pages 623–632 2007   X Tao Y Li and R Nayak A knowledge retrieval model using ontology mining and user pro\002ling Integrated Computer-Aided Engineering  15\(4 2008   X Tao Y Li N Zhong and R Nayak Ontology mining for personalzied web information gathering In Proc of WI 07  pages 351–358 2007   T Tran P Cimiano S Rudolph and R Studer Ontologybased interpretation of keywords for semantic search In Proc of the 6th ICSW  pages 523–536 2007   Y Y Yao Y Zeng N Zhong and X Huang Knowedge retrieval KR In Proc of WI 07  pages 729–735 2007 
513 
517 


TESTS IN SECOND t INDICATES nl WAS LOWERED TO 2 Training BSTC Top-k RCBT 7 OC Holdout Validation Results RCBT outperforms BSTC on the single test it could finish by more then 7 although it should be kept in mind that RCBT's results for the 24 unfinished tests could vary widely Note that BSTC's mean accuracy increases monotonically with training set size as expected At 60 training BSTC's accuracy behaves almost identically to RCBT's 40 training accuracy see Figure 6 4 Ovarian Cancer OC Experiment For the Ovarian Cancer dataset which is the largest dataset in this collection the Top-k mining method that is used by RCBT also runs into long computational times Although Top-k is an exceptiounally fast CAR group upper bound miner it still depends on performing a pruned exponential search over the training sample subset space Thus as the number of training samples increases Top-k quickly becomes computationally challenging to tune/use Table VI contains four average classification test run times in seconds for each Ovarian Cancer\(OC training size As before the second column run times each give the average time required to build both class 0/1 BSTs and then use them to classify all test's samples with BSTC Note that BSTC was able to complete each OC classification test in about 1 minute In contrast RCBT again failed to complete processing most classification tests within 2 hours Table VI's third column gives the average times required for Top-k to mine the top 10 covering rule groups upper bouhnds for each training set test with the same 2 hour cutoff procedure as used for PC testing The fourth column gives the average run times of RCBT on the tests for which Topk finished mining rules also with a 2 hour cutoff Finally the  RCBT DNF column gives the number of tests that RCBT was unable to finish classifying in  2 hours each THE OC TESTS THAT RCBT FINISHED Training BSTC RCBT 40 92.05 97.66 60 95.75 96.73 80 94 12 98.04 1-133/077 9380 96.12 1070 cJ CZ C 0.95 0.9 0.85 0.8 0.75 0.7 0.65 0.6 0.55 0.5 BSTC RCBT d Median Median  Mean 260 Near outliers  Far outliers 40 Training 60 Training 0.90.80.70.6BSTC RCBT a 80 Training 1-52/0-50 Training 0.9DNFI 0.80.70.6BSTC RCBT b 1 u0.9DNFI 0.80.70.6BSTC RCBT  RCBT DNF 40 30.89 0.6186 273.37 0/25 60 61.28 41.21  5554.37 19/25 80 71.84  1421.80  7205.43 t 21/22 TIMES FOR THE OC 9 Mean 0 Near outliers  Far outliers 1.01 11 01 1.0 d Fig 6 PC Holdout Validation Results BSTC RCBT a Fig 0.80.8 0.8BSTC RCBT BSTC RCBT b c c i DNF cJ CZ C 40 Training 60 Training 80 Training 1-133/0-77 Training 0.95 DNF DNF DNF 0.9 0.90.90.90.85 0.8 BSTC RCBT TABLE VI AVERAGE RUN 1 133/0-77 70.38  1045.65  6362.86 t 20/23 over the number of tests for which Top-k finished Because RCBT couldn't finish any 80 or 1-133/0-77 tests within 2 hours with nl  20 we lowered nl to 2 Classification Accuracy Figure 7 contains boxplots for BSTC on all four OC classification test sets Boxplots were not generated for RCBT with 60 80 or 1-133/0-77 training since it was unable to finish all 25 tests for all these training set sizes in  2 hours each Table VII lists the mean accuracies of BSTC and RCBT over the tests on which RCBT was able to produce results Hence Table VII's 40 row consists of averages over 25 results Meanwhile Table VII's 60 row results are from 6 tests 80 contains a single test's result and 1-133/0-77 results from 3 tests RCBT has better mean accuracy on the 40 training size but the results are closer on the remaining sizes   4 difference over RCBT's completed tests Again RCBT's accuracy could vary widely on its uncompleted tests CAR Mining Parameter Tuning and Scalability We attempted to run Top-k to completion on the 3 OC 80 training and 2 OC 1-133/0-77 training tests However it could not finish mining rules within the 2 hour cutoff Top-k finished two of the three 80 training tests in 775 min 43.6 sec and 185 min 3.3 sec However the third test ran for over 16,000 mnm  11 days without finishing Likewise Top-k finished one of the two 1-133/0-77 tests in 126 min 45.2 sec but couldn't finish the other in 16,000 min  11 days After increasing Top-k's support cutoff from 0.7 to 0.9 it was able to finish the two unfinished 80 and 1-133/0-77 training tests in 5 min 13.8 sec and 35 min 36.9 sec respectively However RCBT with nl 2 then wasn't able to finish lower bound rule mining for either of these two tests within 1,500 min Clearly CAR-mining and parameter tuning on large training sets is TABLE VII MEAN AcCU1ACIES FOR 


support pruning gene expression classifier with an accurate and compact fuzzy rule base for microarray data analysis Biosystems vol 85 computationally challenging As training set sizes increase it is likely that these difficulties will also increase VI RELATED WORK While operating on a microarray dataset current CAR 1 2 3 4 and other pattern/rule 20 21 mining algorithms perform a pruned and/or compacted exponential search over either the space of gene subsets or the space of sample subsets Hence they are generally quite computationally expensive for datasets containing many training samples or genes as the case may be BSTC is explicitly related to CAR-based classifiers but requires no expensive CAR mining BSTC is also related to decision tree-based classifiers such as random forest 19 and C4.5 family 9 methods It is possible to represent any consistent set of boolean association rules as a decision tree and vice versa However it is generally unclear how the trees generated by current tree-based classifiers are related to high confidence/support CARs which are known to be particularly useful for microarray data 1 2 6 7 11 BSTC is explicitly related to and motivated by CAR-based methods To the best of our knowledge there is no previous work on mining/classifying with BARs of the form we consider here Perhaps the work closest to utilizing 100 BARs is the TOPRULES 22 miner TOP-RULES utilizes a data partitioning technique to compactly report itemlgene subsets which are unique to each class set Ci Hence TOP-RULES discovers all 100 confident CARs in a dataset However the method must utilize an emerging pattern mining algorithm such as MBD-LLBORDER 23 and so generally isn't polynomial time Also related to our BAR-based techniques are recent methods which mine gene expression training data for sets of fuzzy rules 24 25 Once obtained fuzzy rules can be used for classification in a manner analogous to CARs However the resulting fuzzy classifiers don't appear to be as accurate as standard classification methods such as SVM 25 VII CONCLUSIONS AND FUTURE WORK To address the computational difficulties involved with preclassification CAR mining see Tables IV and VI we developed a novel method which considers a larger subset of CAR-related boolean association rules BARs These rules can be compactly captured in a Boolean Structure Table BST which can then be used to produce a BST classifier called BSTC Comparison to the current leading CAR classifier RCBT on several benchmark microarray datasets shows that BSTC is competitive with RCBT's accuracy while avoiding the exponential costs incurred by CAR mining see Section VB Hence BSTC extends generalized CAR based methods to larger datasets then previously practical Furthermore unlike other association rule-based classifiers BSTC easily generalizes to multi-class gene expression datasets BSTC's worst case per-query classification time is worse then CAR-based methods after all exponential time CAR mining is completed O SlS CGl versus O Si CGi As future work we plan on investigating techniques to decrease this cost by carefully culling BST exclusion lists ACKNOWLEDGM[ENTS We thank Anthony K.H Tung and Xin Xu for sending us their discretized microarray data files and Top-k/RCBT executables This research was supported in part by NSF grant DMS-0510203 NIH grant I-U54-DA021519-OlAf and by the Michigan Technology Tri-Corridor grant GR687 Any opinions findings and conclusions or recommendations expressed in this material are those of the authors and do not necessarily reflect the views of the funding agencies REFERENCES 1 G Cong K L Tan A K H Tung and X Xu Mining top-k covering rule Mining SDM 2002 5 R Agrawal T Imielinski and A Swami Mining associations between sets of items Y Ma Integrating classification and association rule mining KDD 1998 11 T McIntosh and S Chawla On discovery of maximal confident rules without pp 43-52 1999 24 S Vinterbo E Kim and L Ohno-Machado Small fuzzy and interpretable pp 165-176 2006 1071 pp 207-216 1993 6 G Dong pp 273-297 t995 9 pp 5-32 2001 20 W Li J R Quinlan Bagging boosting and c4.5 AAAI vol 1 V Vapnik Support-vector networks the best strategies for mining frequent closed itemsets KDD 2003 4 M Zaki and C Hsiao Charm L Wong Identifying good diagnostic genes or gene expression data SIGMOD 2005 2 G Cong A K H Tung X Xu F Pan and J Yang Farmer Finding interesting rule gene expression data by using the gene expression based classifiers BioiiiJcrmatics vol 21 l and Inrelligent Systenis IFIS 1993 16 Available at http://sdmc.i2r.a-star.edu.sg/rp 17 The dprep package http:/cran r-project org/doclpackages dprep pdfI 18 C Chang and C Lin Libsvm a library for support vector machines 2007 Online Available www.csie.ntu.edu.tw cjlin/papers/libsvm.pdf 19 L Breiimnan Random forests Maclh Learn vol 45 no 1 M Chen and H L Huang Interpretable X Zhang 7 J Li and pp 725-734 2002 8 C Cortes and Mac hine Learming vol 20 no 3 in microarray data SIGKDD Worikshop on Dtra Mining in Bioinfrrnatics BIOKDD 2005 12 R Agrawal and R Srikant Fast algorithms for mining association rules VLDB pp 1964-1970 2005 25 L Wong and J Li Caep Classification by aggregating emerging patterns Proc 2nd Iat Coif Discovery Scieice DS 1999 gene groups from pp 487-499 t994 13 Available ot http://www-personal umich edu/o markiwen 14 R Motwani and P Raghavan Randomized Algoriitlms Caim-bridge University Press 1995 15 S Sudarsky Fuzzy satisfiability Intl Conf on Industrial Fuzzy Contri J Han and J Pei Cmar Accurate and efficient classification based on multiple class-association rules ICDM 2001 21 F Rioult J F Boulicaut B Cremilleux and J Besson Using groups for groups in microarray datasets SIGMOD 2004 3 concept of emerging patterns BioinformJotics vol 18 transposition for pattern discovery from microarray data DMKD pp 73-79 2003 22 J Li X Zhang G Dong K Ramamohanarao and Q Sun Efficient mining of high confidence association rules without S Y Ho C H Hsieh H pp 725-730 1996 10 B Liu W Hsu and support thresholds Principles f Drata Mining aind Knowledge Discovery PKDD pp 406 411 1999 23 G Dong and J Li Efficient mining of emerging patterns discovering trends and differences KDD J Wang J Han and J Pei Closet Searching for An efficient algorithm for closed association rule mining Proc oJ the 2nd SIAM Int Con on Data in large databases SIGMOD 


