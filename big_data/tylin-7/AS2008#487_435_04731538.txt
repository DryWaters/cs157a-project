The Process Management and Quality Control of Graduation Design   Zhou Shumin 002 Liu Aihua 002 Fu Jianghui School of Information Engineering, Ea st China Institute of Technology Fuzhou, Jiangxi Province 34400, China smzhou@ecit.edu.cn   Abstract  The graduation practice and design is a comprehensive education process in cultivating talents in the university. It becomes more difficult due to the increasing graduates and the employment pressure According to the analysis of some critical problems such as the similar subject and incompact management etc., especially the investigation in graduation design in recent years, the paper prompts a bi-directional model in subject selection based on rule base and the process management mechanism in time stream Meanwhile, the system of process management and quality control of graduation design in the university based on web has been developed, which makes the process of graduation design more effective. The process management and quality control of graduation design is improved  1. Introduction  Graduation design is an necessary step in the process of cultivating talents in university. It provides a chance for students to practice their professional quality and operating ability. Its aim is to cultivate students to analyze and solve problem through utilizing basic theory, fundamental knowledge and skill of their major. In the file of “ Notice on the Improvement of Graduation Design in Ordinary College 001\001 Ministry of education points out that graduation design plays an necessary role in many aspects such as cultivating college students to seek after truth, strengthening social consciousness, putting up science research ,enhancing practice ability and so on  This work is partially supported by the Tteaching Reform Project of Jiangxi Province \(JXJG-06-108\and  JingGang Star Talents Training Plan of Jiangxi Province, China 2.The Main Problem Faced of Graduation Design  Some problems such as similar or repeated subject little time students spend and difficulty for teacher to supervise srudent  are found out in the process of graduation design due to the increasing graduates and the employment pressure. It results in the decline of quality of graduation project\(paper\This phenomenon raises people to pay attention to it extensively and many colleges have do related research. Some of them prompted process management mechanism and also developed relevant information management system to realize effective management of graduation design However, the present research and application mainly focus on the management of graduation design stream Research on the quality of graduation design subject and loose management caused by the different practical was not well enough. The paper studies the bidirectional model in subject selection based on rule base and the process management mechanism in time stream. An information system also has been developed to achieve concrete targets  3.Bi-selection Subject Model Based on Rule Base  It is the first step that student choose a subject. The subject is the chief factor to evaluate the quality of graduation design and it highly generalizes the content of graduation subject. However, some problems such as divorced from reality, outdated subject, improper degree of difficulty, serious disparity workload repeated subjects among different teachers appear in the graduation design subject due to the increasing graduates and the employment pressure. Reason is various.Firstly, the subject is planed by teachers themselves in many colleges and universities and then chosen by students in this small area selection Secondly, communication between teachers is not enough and at the same time teachers lack overall 
2008 International Symposium on Computer Science and Computational Technology 978-0-7695-3498-5/08 $25.00 © 2008 IEEE DOI 10.1109/ISCSCT.2008.321 768 


impression about topics few years ago, which makes a large part virtual and re-use subject. These subjects divorced from the actual project and most of them don’t combine theoretical knowledge with practical application. This hinders the student's self-innovation capability training at a certain extent. So establish relevant rules, use Data Mining methods to analyze it and constrain bi- selection subject between students and teachers are effective ways to enhance graduate theme  3.1.Judgment of graduation project based on Association Rules  Teachers often give appropriate topic from the perspective of their own knowledge. Although there is a collective discussion and final vetting before the design, duplication and similar topics still exist because of so many graduation design and a lack of understanding to the old subjects a few years ago. Data Mining tries to extract previous unknown, effective and potentially useful knowledge from the DB. As there are large amounts of data in the databases, it is very important for us to find the useful information from the database, and the Data Mining technology is an efficient solution to this problem. The research of Data Mining has reached significant achievement and has been applied successfully in many areas. However successful application of Data Mining in the field of education has not been reported. In 1993, R.Agrawal etc. first put forward the issue of mining association rules which provides the degree of relevance of the things. Now mining association rules has been a significant content of data mining and so draws attention of many researchers. There are many association rules in education data. Data mining can discover it. Association rules mining is to find association relation between a large number items in the database. Apriori algorithm the paper used is an important algorithm in Mining Association Rules. It can be divided into two problems 0017 find all the frequent  item whose support degree is greater than min-sup 0018 use the frequent item found in step 1 to generate expected rule. After teachers have given their subject, the computer analyzes subjects according mining rules of related data. Then computer shields repeat of similar topics and gives suggestion about similar subjects. This can effectively guarantee the quality of graduation design  3.2 The process of bi-selection subject based on binding rules  In the past time, the number of students that a teacher guides, the rights of students to choose subject are confirmed in school through paper. It is difficult to achieve genuine sense of double election. There is a restriction number of students that a teacher tutors according to his/her title. Teachers often provide more subjects to enable students have sufficient choice.  The eventual confirmation of the fist choice and second choice also need rule The system accomplishes this complex process through the following series. Firstly, system judges whether a student has rights to choose subject after the student login the system. If the student passes the verification module, he/she can begin to choose subject. The system allows each student to select a topic in the primary choice, and each topic can be chosen by several students. Then the teacher chooses students that he/she satisfied to guide. This method effectively guarantees the bilateral selection of students and advisors. The system will count the number of students for each teacher at the end of topic selection If the number has reached quota and the teacher still has superfluous topics, the superfluous topics will be shielded \(delete from the temporary table\his can avoid the number of guidance over standard When a student or teacher changes his/her choose for some reasons, the system will also count the number of student that the teacher guides. If the number doesn’t reach the quota, the teacher’s subject shielded before can be chosen again. This can ensure student to have enough choice. A specific process is shown in Figure 1   Fig1.The Process of Bi- selection Subject Based on Rules 4.Process Management of Graduation Based on Time Stream  In general undergraduate graduation design lasts for 4-6 months, and it is the longest period of time during the four-year undergraduate study. It is difficult for teachers and students to communicate with each other face-to-face because of employment pressure and different practice spots. It results in management 
769 


vacuum and loose management of graduation design The students can not finish graduate design exactly in accordance with the progress of design. They have to finish it rapidly at the end of design with poor graduate design Developing graduation design process management system based on time stream, controlling the contents of graduation design through time and using time to constraint teachers and students are effective ways to solve loose management  4.1  Access control model based on time  The entire workflow is a series of tasks to complete the same objectives in management information system based on workflow. Time-based access control model divides the system into different sets and each has its own flow h en bu s i n e s s is  divided into task unit which can’t be divided any more Task unit is the smallest module. User belongs to role A role can corresponds to multi-user and a user can contain multi-role. A role corresponding to a task has specific authority, at the same time the task is also limited by time. That is, rule that user belonging to has specific authority to task during a certain time. Time is an important feature of workflow model. Time series is an indispensable data format during people’s work and life. Analyzing time series can reveal inherent rule. It has great realistic significance for people to correctly understand things and make a scientific decision Workflow task is constrained by time. Undergraduate graduation design has strict time constraint and graduation Design Management System is a typical process-based management information systems According to time-based access control model, the design can be summarized a s Figure2    Fig 2: A time-based Graduation Design Process  4.2  The Method deal with time cue and time violation  Graduation Design is sensitive to time constraints and we must push forward graduation design process in strict accordance with time. When waiting time excesses the default value, the system gives suggestion to both teachers and students, automatically reminds staff to expedite the processing speed, warns the user to realize task that should be completed now and next time and avoids disobeying time  4.3  Bi-communication between teachers and students  Communication runs through the whole design, and it is divided into one-way exchange and two-way exchange. One-way exchange is carried out mainly through releasing press. But when students have problems in the graduate design and need teacher’s guidance, the system will provide timely platform for the two-way exchange. SMS and message boards are the way to accomplish two-way communication. When one party can not log on the Internet, he/she can use short message to realize the integration of system and mobile network. The system will automatically record message which can be received when related communicate enters the system. The reply is also feed back the sender via short message. The system uses the following technology such as ASP, SMS and database technology to realize timely two-way communication  5. Conclusion  According to bi-selection model based on rule and the process management mechanism in time stream, a process management and quality control system based on web was proposed and completed. The system realized the bi-selection of the thesis topic, the query of thesis topic and the basic demands, supervising on the network, checking of student's going, releasing announcement, thesis upload etc. The system met the dynamic demands of thesis supervising and management  6. References  1 L i uc uiy u  S tr e n g t he n pr oc e s s m a na g e m e nt to im pr ov e graduation design \(thesis\ality Higher Education Forum in 2007, No.2, pp :153-154  2 Me ng m e i M a n a g em e n t of G r a dua tion P r oje c t  or T h e s is  in the University Journal of Wuhan University of Technology 2007, Vol 29 No. 1, pp:83-86  3 D i ng G u a n g x un G r a dua tion D e s i g n Ma na g e m e nt System Research and Practice Heilongjiang education  2007,No.4,pp:68-69  4 L I A N G K un A ti m e b a s e d w o r k f l ow  m a na gem e nt  system model Journal of Northwest University 2007, Vol 37 No. 1, pp: 29-32  
770 


1190 Consequent Table                                                                                                                                                                


1191                                                                                                                                                    


1192                                                                                                                             


 Kluwer Academic Publishers Springer, New York 1st edition, 2001 14  S c h e f f e r   T   F i n d i n g  A s s o c i a t i o n  Ru l e s  t h a t  T r a de Support Optimally Against Confidence th The Elements of Statistical Learning self_care_guide/Urogenital/Postate%20Cancer.pdf  Accessed, 25 August, 2008 11  A g r a w a l   R  T   I m i e l i n s k i     A   S w a m i   M i n i n g  association rules between sets of items in large databases, In Proceedings of the 1993 ACM SIGMOD international conference on Management of data  The Netherlands 42 2001 61-95  Ordonez C Association rule discovery with the train and test approach for heart disease predictio n 207\226 216 12 001 13  H a s t i e   T    R  T i b s h i r a n i     J  H   F r i e d m a n   Proceedings of the 5th European Conference on Principles and Practice of Knowlege Discovery in Databases\(PKDD'01 IEEE Transactions on Information Technology in Biomedicine, 10\(2\, 2006. 334 \226 343 001 Freiburg, Germany : SpringerVerlag, 2001. 424-435 15  F l a c h   P  A     L a c h i c h e   N   Co n f i r m a t i o n g u i d e d  discovery of first-order rules with Tertius 10  P h a r m a c y   h t t p    w w w  p h a r m a c y  g o v  m y    


 7. Conclusions  In this paper we have proposed an intelligent and efficient technique to reassess the distances between dynamic XML documents when one or all of the initially clustered documents have changed. After the changes, the initial clustering solution might become obsolete - the distances between clustered XML documents might have changed more or less depending on the degree of modifications \(insert update, delete\hich have been applied. Re-running full pair-wise comparisons on the entire set of modified documents is not a viable option, because of the large number of redundant operations involved Our proposed technique allows the user to reassess the pair-wise XML document distances, not by fully comparing each new pair of versions in the clustering solution, but by determining the effect of the temporal changes on the previously known distances between them. This approach is both time and I/O effective, as the number of operations involved in distance reassessing is greatly reduced  References  1  Beringer, J. and H\374llermeier, E., Online clustering of parallel data streams Data and Knowledge Engineering 58\(2\,  2006, 180-204 2  Catania, B. and Maddalena A., A Clustering Approach for XML Linked Documents, Proceedings of the 13th International Workshop on Database and Expert Systems Applications \(DEXA\22202\, IEEE 2002 3  Chen, M.S., Han, J. and Yu, P., Data Mining: An Overview from Database Perspective, IEEE Transactions on Knowledge and Data Engineering vol. 8, 1996, 866-883 4  Cormen, T., Leiserson, C. and Rivest, R Introduction to algorithms, MIT Press, 1990 5  Costa, G., Manco, G., Ortale, R. and Tagarelli, A., A tree-based Approach to Clustering XML documents by Structure, PAKDD 2004, LNAI 3202, 137-148 Springer 2004 6  Dalamagas, T., Cheng, T., Winkel, K.J. and Sellis, T 2004, Clustering XML documents by Structure SETN 2004, LNAI 3025, 112-121, Springer 2004 7  Ester, M., Kriegel, H.P., Sander, J., Wimmer,M. and Xu, X., Incremental Clustering for Mining in a Data Warehousing Environment, Proc.of the 24 th VLDB Conference, New York, USA, 1998 8  Garofalakis, M., Rastogi, R., Seshadri, S. And Shim K., Data Mining and the Web: Past, Present and Future Proceedings of WIDM 99 Kansas, US, ACM 1999 9  Mignet, L., Barbosa, D. and Veltri, P., The XML web : a first study, In Proceedings of the 12 th  International Conference on WWW, 500-510 2003   Nayak, R., Xu, S., XCLS: A Fast and Effective Clustering Algorithm for Heterogeneous XML Documents, In Proceedings of the 10 th Pacific-Asia Conference on Advances in Knowledge Discovery and Data Mining, Singapore, LNCS 3918, 2006   Rusu, L.I., Rahayu, W. and Taniar, D., A methodology for Building XML Data Warehouses International Journal of Data warehousing Mining, 1\(2 67-92, 2005   Rusu, L.I., Rahayu, W. and Taniar D.,  Maintaining Versions of Dynamic XML Documents, In Proceedings of the 6th International Conference on Web Information Systems Engineering, New York NY, USA, November 20-22, 2005, LNCS 3806   Rusu, L.I., Rahayu, W. and Taniar, D., Warehousing Dynamic XML Documents, In Proceedings of the 8 th  International Conference on Data Warehousing and Knowledge Discovery \(DaWaK 2006 LNCS 4081 Springer, 175-184, 2006   Shen, Y. and Wang, B., Clustering Schemaless XML documents, CoopIS / DOA/ODBASE 2003, LNCS 2888, 767-784, Springer 2003   Yoon, J. P., Raghavan, V., Chakilam, V., and Kerschberg, L., BitCube: A Three-Dimensional Bitmap Indexing for XML Documents J. Intel. Inf Syst 17, 2-3 \(Dec. 2001\, 241-254   XML data repository, online at http www.cs.washington.edu / research / projects / xmltk xmldata  
456 
456 


5 Related Work There exists extensive previous work on both the mining of software repositories and on the use of clustering algorithms in software engineering This discussion focuses on the most similar and recent work in the area of software evolution Mining Software Repositories Our technique was partially inspired by the work of Zimmermann et al and Y ing et al 17 on the mining of association rules in change history As described in Section 1 we sought to expand the technique to be able to recommend larger but less precise clusters of elements to guide program navigation Bouktif et al also investigated how to recommend cochanges in software development As opposed to the work cited above Bouktif et al used change patterns instead of association rules Also their approach does not attempt to reconstruct transactions and can consider associated 002les that were changed in different transactions ChangeDistiller is a tool to classify changes in a transaction into 002ne-grained operations e.g addition of a method declaration and determines how strongly the change impacts other source code entities Our approach uses similar repository analysis techniques but is focused on providing task-related information as opposed to an overall assessment of a system's evolution Finally repository mining can also be used to detect aspects in the code In this conte xt aspects are recurring sets of changed elements that exhibit a regular structure Aspects differ from the clusters we detect in the regular structure they exhibit which may not necessarily align with the code that is investigated as part of change tasks Clustering Analysis The classical application of clustering for reverse engineering involves grouping software entities based on an analysis of various relations between pairs of entities of a given version of the system Despite its long and rich history  e xperimentation with this approach continues to this day For example Andreopoulos et al combined static and dynamic information K uhn et al used a te xtual similarity measure as the clustering relation and Christl et al used clustering to assist iterative semi-automated reverse engineering The main dif ferences b e tween most clusteringbased reverse engineering techniques and the subject of our investigation is that the entities we cluster are transactions rather than software entities in a single version of a system For this reason our analysis is based strictly on the evolving parts of the system Both Kothari et al and V an ya et al 15 recently reported on their use of clustering to study the evolution of software systems The idea of using change clusters is the same in both works and ours but the purpose of the work is different Kothari et al use change clusters to uncover the types of changes that happened e.g feature addition maintenance etc during the history of a software system Vanya et al use change clusters which they call evolutionary clusters to guide the partitioning of a system that would increase the likelihood that the parts of the system would evolve independently In contrast we cluster transactions based on overlapping elements not 002les to recommend clusters to support program navigation as opposed to architectural-level assessment of the system Finally Hassan and Holt evaluated on 002ve open source systems the performance of several methods to indicate elements that should be modi\002ed together This study found that using historical co-change information as opposed to using simple static analysis or code layout offered the best results in terms of recall and precision The authors then tried to improve the results using 002ltering heuristics and found that keeping only the most frequently cochanged entities yielded the best results As opposed to our approach the evaluated 002ltering heuristics were only applied on entities recovered using association rules and not using clustering techniques The focus of their study was also more speci\002c as they recommend program elements that were strictly changed  as opposed to recommending elements that might be inspected by developers 6 Conclusion Developers often need to discover code that has been navigated in the past We investigated to what extent we can bene\002t from change clusters to guide program navigation We de\002ned change clusters as groups of elements that were part of transactions or change sets that had elements in common Our analysis of close to 12 years of software change data for a total of seven different open-source systems revealed that less than 12 of the changes we studied could have bene\002ted from change clusters We conclude that further efforts should thus focus on maximizing the quality of the match between the current task and past transactions rather than 002nding many potential matches Our study has already helped us in this goal by providing reliable evidence of the effectiveness of some 002ltering heuristics and useful insights for the development of additional heuristics Acknowledgments The authors thank Emily Hill and Jos  e Correa for their advice on the statistical tests and the anonymous reviewers for their helpful suggestions This work was supported by NSERC 
25 
25 
25 
25 
25 


References  B Andreopoulos A An V  Tzerpos and X W ang Multiple layer clustering of large software systems In Proc 12th Working Conf on Reverse Engineering  pages 79–88 2005  S Bouktif Y G Gu  eh  eneuc and G Antoniol Extracting change-patterns from cvs repositories In Proc 13th Working Conf on Reverse Engineering  pages 221–230 2006  S Breu and T  Zimmermann Mining aspects from v ersion history In Proc 21st IEEE/ACM Int'l Conf on Automated Software Engineering  pages 221–230 2006  A Christl R K oschk e and M.-A Store y  Equipping the re\003exion method with automated clustering In Proc 12th Working Conf on Reverse Engineering  pages 89–98 2005  D 020 Cubrani  c G C Murphy J Singer and K S Booth Hipikat A project memory for software development IEEE Transactions on Software Engineering  31\(6 465 2005  B Fluri and H C Gall Classifyi ng change types for qualifying change couplings In Proc 14th IEEE Int'l Conf on Program Comprehension  pages 35–45 2006  A E Hassan and R C Holt Replaying de v elopment history to assess the effectiveness of change propagation tools Empirical Software Engineering  11\(3 2006  D H Hutchens and V  R Basili System s tructure analysis Clustering with data bindings IEEE Transactions on Software Engineering  11\(8 1985  D Janzen and K De V older Na vig ating and querying code without getting lost In Proc 2nd Int'l Conf on AspectOriented Software Development  pages 178–187 2003  J K ot hari T  Denton A Shok ouf andeh S Mancoridis and A E Hassan Studying the evolution of software systems using change clusters In Proc 14th IEEE Int'l Conf on Program Comprehension  pages 46–55 2006  A K uhn S Ducasse and T  G  021rba Enriching reverse engineering with semantic clustering In Proc 12th Working Conf on Reverse Engineering  pages 133–142 2005  M P  Robillard T opology analysis of softw are dependencies ACM Transactions on Software Engineering and Methodology  2008 To appear  M P  Robillard and P  Mangg ala Reusing program in v estigation knowledge for code understanding In Proc 16th IEEE Int'l Conf on Program Comprehension  pages 202 211 2008  J Sillito G Murph y  and K De V older Questions programmers ask during software evolution tasks In Proc 14th ACM SIGSOFT Int'l Symposium on the Foundations of Software Engineering  pages 23–34 2006  A V an ya L Ho\003and S Klusener  P  v an de Laar and H van Vliet Assessing software archives with evolutionary clusters In Proc 16th IEEE Int'l Conf on Program Comprehension  pages 192–201 2008  N W ilde and M C Scully  Softw are reconnaissance Mapping program features to code Software Maintenance Research and Practice  7:49–62 1995  A T  Y ing G C Murph y  R Ng and M C Chu-Carroll Predicting source code changes by mining change history IEEE Transactions on Software Engineering  30\(9 586 2004  A Zeller  The future of programming en vironments Integration synergy and assistance In Proceedings of the 29th International Conference on Software Engineering The Future of Software Engineering  pages 316–325 2007  T  Zimmermann and P  W eißgerber  Preprocessing C VS data for 002ne-grained analysis In Proc 1st Int'l Workshop on Mining Software Repositories  pages 2–6 May 2004  T  Zimmermann P  W eißgerber  S Diehl and A Zeller  Mining version histories to guide software changes In Proc 26th ACM/IEEE Int'l Conf on Software Engineering  pages 563–572 2004 A Clustering Algorithm This algorithm is not sensitive to whether a given program element exists or not in a given version of a program For example if method m exists in one version it is considered a valid program element even if it is removed in a later version In the rest of this section we use the term program element to refer to the uniquely identifying representation of the element e.g a Java fully-quali\002ed name Let T be a transaction modeled as a set of program elements changed together during the history of a software system Let T be a sequence of transactions In this algorithm a cluster is also modeled as a set of elements 1 Input  T  A sequence of transactions 2 Parameter  M IN O VERLAP  A positive non-zero value indicating the minimum overlap between two transactions in a cluster 3 Var  C  A set of clusters initially empty 4 for all T i 2 T do 5 MaxOverlap  0 6 MaxIndex  000 1 7 for all C j 2 C do 8 if j C j  T i j  MaxOverlap then 9 MaxOverlap  j C j  T i j 10 MaxIndex  j 11 end if 12 end for 13 if MaxIndex   0  MaxOverlap 025 M IN O VERLAP  then 14 C MaxIndex   C MaxIndex  T i  15 else 16 NewCluster  T i 17 C  C  f NewCluster g 18 end if 19 end for 20 return C B Systems Analyzed System home pages last veri\002ed 7 May 2008 Ant ant.apache.org Azureus azureus.sourceforge.net Hibernate www.hibernate.org JDT-Core www.eclipse.org/jdt/core JDT-UI www.eclipse.org/jdt/ui Spring springframework.org Xerces xerces.apache.org 
26 
26 
26 
26 
26 


