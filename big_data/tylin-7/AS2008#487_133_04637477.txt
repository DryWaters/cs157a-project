Research on improved Data-Mining Algorithm based on Strong Correlation Chunhong Hu 1 Zhengqiang Wang 2 1 College of Computer Science, Yangtze University, Jingzhou, Hubei, 434023, China 2 Department of Physics and Electronic Information Technology,Xiangfan University 002 Xiangfan 002 HuBei,441053,China chhu@yangtzeu.edu.cn Abstract The extensive application of association rules in commerce enables itself to be one of the most active research directions in data mining. Recently, the mining of strong correlation item pairs with statistical significance in transaction database receives a certain value. In order to further reduce the cost of testing candidate item pairs in rel ational database, we have developed the Taper algorithm according to 1NF property. The developed TaperR algorithm  can  cut the number of candidate pairs to improve effciency 1. Introduction Because lots of business data are stored in relational database, most data mining appli cations aim at relational database. Therefore there are extremely important theoretical value and practical significance for the research on the strong correlation ite m pairs in relational database. With the statistical association substituting traditional association rules, th is paper focuses on the mining of strong correlation ite m pairs whose relevance is measured through Pearson correlation coefficient in relational database 2. Pearson correlation coefficient and The Taper algorithm The relevance measurement describes the connection between variables based on statistic analysis. For discrete variables, the correlation between variables can be represented with Pearson correlation coefficient.   is a special form of Pearson correlation coefficient when variables are dual. Assume there are two dual variables A and B, when their values are as table 1 Then   can be calculated according to formula 1 00 11 01 10 1  1  PPPP PPPP 002 003\003\003 003 004 005 Table.1 the variables vaiue In the formula, P\(ij\ber of objects simultaneously satisfying A=i and B=j \(i=0,1; j=0, l addition, P\(i number of objects satisfying no need to consider A 002 upper bound of item pairs {A, B can be expressed as  sup  1 sup     2 sup  1 sup  AB BA upper AB 002 004 005 004 From formula 2, we can know that in the Taper algorithm this upper boundary is used to filter out those item pairs which are impossible to satisfy the condition, and thus we can avoid calculating these pruned item pairs and increase the efficiency 3. The normalization theory for relational database The relational database is one common database structure. Assume R is a relational schema, X, Y  R, if and for any two tuples u, v 001\031  v  X   then we can inevitably get u   X  Y is said to be a functional dependency in R, that is X function determines Y or Y function depends on X. Through the functional dependency concept, different normal forms can be defined, including 2NF, 3NF as well as BCNF. As we all know, the most important normal form which each relation must meet is 1NF. It s definition is if some domain unit cannot be divided again, then this domain is atomic If there is a relational schema R whose all attribute fields are atomic, then R belongs to the first normal form \(1NF B 01 sum 0P 00 P 00 P 00 A 1P 00 P 00 P 00 sum P  00  P  00  N 
Second International Conference on Genetic and Evolutionary Computing 978-0-7695-3334-6/08 $25.00 © 2008 IEEE DOI 10.1109/WGEC.2008.119 423 


The important application of 1NF in association mining is the two items of one item p air are impossible to come from the same attribute. Thereupon, through the character we can reduce the number of the candidate item pairs in the mining and increase the efficiency 4. The mining algorithm of strong correlation item pairs based on 1NF 002 The TaperR algorithm In order to further reduce the cost of testing candidate item pairs in relational database, in the paper, according to 1NF we improved the Taper algorithm and designed the TaperR algorithm Thus we can reduce the number of the candidate item pairs and thus increase the algorithm efficiency. The process of the TaperR algorithm includes two steps: the production of candidate item pairs and the pruning When producing the candidate item pairs, reduce the number of the candidate item pairs through 1NF. When pruning, use the upper boundary to filter out those item pairs which are impossible to meet the conditions, and thus we can avoid calculati ng these pruned item pairs First through theorem 1 to theorem 4 and so on, the superiority of the TaperR algorithm is showed Theorem 1:  The original Taper algorithm produces candidate item pairs before the pruning From Theorem 1, we can know the Taper algorithm does not consider the particu larity of the relational tables so that produces all possible combinations Theorem 2: The TaperR algorithm produces  candidate item pairs before the pruning Obviously, in the first step \(production of candidate item pairs ithm produces  less incorrect item pairs than Taper al gorithm does in relational database. Its size depends on the number of Pi with different attribute value in attribute Ai. When the relational data table contains many attributes with quite many attribute values, the superiority of the TaperR algorithm is more obvious In addition, the inco rrect item pairs in relational database can not certainly be reduced when using the upper boundary of correlation coefficient to prune Therefore the computation is further increased respectively represent the number of the items not pruned with the Taper algorithm and the TaperR algorithm \(g iven the smallest correlation threshold  \R3 \( \ pairs which are not pruned in incorrect ones in relational database. Then we  The theorem 3 shows that the Taper algorithm not only inspects  redundant item pairs when pruning, but also checks R3 \( \ore item pairs when scanning. Therefore through 1NF, the TaperR algorithm at least can reduce the computation in the pruning and scanning, which counts for much when mining large-scale data The TaperR algorithm uses   to prune, which can filter out the item pairs impossible to meet the conditions and thus avoid calculati ng the support of those pruned item pairs, and then enhances the efficiency. However from the formula, it is not difficult to find that the upper boundary always is bigger than 0.Therefore, if the smallest correlation threshold   is set to be extremely small, for instance 0.01, the pruned candidate item pairs can be extremely few, causing the pruning based on the upper boundary to be badly effective. In the paper, we take advantage of the special st ructure of relational table to further reduce the candidate item pairs. Its basic thought may be described as follows Supposing attribute value set of attribute Ai and Aj respectively are Vi={u1,u2,…,up} and V j={v1, v2 vq}. These two attributes can produce p*q item pairs However, not all these p*q item pairs are necessary uk v2\\(uk uk v1\\(uk uk vq uk vq-1\directly calculate the support of the item pairs contained vq when scanning the q-1\ pairs need calculating in the scanning Theorem 4:   With the TaperR algorithm, at most there are 11 111  1  1  22 mm ii mmm ii ii ij iiji pp pp pp 005\005 005\005\005\003 004 004 1 004\004\003 006\006 006\006\006 004 Item pairs needing inspecting the support when scanning the database without the pruning As theorem 4 shows, if the pruning effect based on upper boundary entirely is not good enough, the number of item pairs can still be effectively reduced. The TaperR algorithm still can mine item pairs highly effective, even when the smallest correlation threshold is very small Therefore, summarizing the front discussion, the overall flow of the TaperR algorithm can be described as fig. 1 Fig. 1   the flow of the TaperR algorithm  Step 1, with the TaperR algorithm, use the special structure of relational dat abase to produce all candidate The TaperR Algorithm 1\ pairs      Produce all candidate item pairs conforming to 1NF 2\ pairs      use the upper boundary to prune 3 database for the final computation outcome 
424 


item pairs according with 1NF, guaranteeing that there are no item pairs without signi ficance in relational database Step 2, in step 1, we have gained the supports of all single items .Now we can use   to prune, and thus filter out those item pairs impossibl e to meet the conditions and avoid scanning the database and calculating the supports of those pruned item pairs, and thus enhance the efficiency Step 3, scan the database. When scanning each record examine whether each item pairs in the candidate item pairs set is in the record and the support will increase by 1 when it is true. We can gain the support of each item pairs after scanning the database Use  to calculate correlation coefficient of each item pairs and then output those ite m pairs whose correlation coefficient is bigger than the smallest correlation threshold 5 The experimental results Here are the test results in real data set with the TaperR algorithm, including the comparison in the execution time and the number of item pairs between the two algorithms The effectiveness and the superiority of the TaperR algorithm are proved with the experimental results in 2 data sets. The Taper algorithm and the TaperR are programmed in Java. Also, all experimental results are gained after testing on a PC Computer running Windows 2000 Professional and with Pentium4-2.4G, 512 M memory. In the experiment, we use two data sets of the famous UCI data: mushroom dat a set and soybean data set Fig.2 and fig.3 separately showed the comparison in the number of item pairs needing inspection with the Taper algorithm and the TaperR algorithm in the mushroom the data set and the soybean data set, along with the smallest correlation threshold increasi ng. Just as what was proved theoretically above, the Taper algorithm always needs to inspect more item pairs than the TaperR algorithm does and the superiority was confirmed again with experimentsig.4 and fig.5 separately showed the comparison in the execution time \(the unit is second\of the Taper algorithm and the TaperR algorithm in the mushroom data set and the soybean data set, along with the smallest correlation threshold increasing. We can see that two algorithms execution time reduces, along with the smallest correlation threshold value increasing. Meanwhile because the Taper algorithm always needs inspecting more item pairs than the TaperR algorithm, the new algorithm has the shorter execution time 000\003\000\003\000\\000J\000\021\000\003\000\027\000\003\000\003\000W\000K\000H\000\003\000H\000[\000H\000F\000X\000W\000L\000R\000Q\000\003\000W\000L\000P\000H\000\003\000F\000R\000P\000S\000D\000U\000L\000V\000R\000Q\000\003\000L\000Q\000\003\000P\000X\000V\000K\000U\000R\000R\000P 000G\000D\000W\000D\000\003\000V\000H\000W 000\023\000\021\000\023\000\023 000\030\000\021\000\023\000\023 000\024\000\023\000\021\000\023\000\023 000\024\000\030\000\021\000\023\000\023 000\025\000\023\000\021\000\023\000\023 000\025\000\030\000\021\000\023\000\023 000\023\000\021\000\024 000\023\000\021\000\025 000\023\000\021\000\026 000\023\000\021\000\027 000\023\000\021\000\030 000\023\000\021\000\031 000\023\000\021\000\032 000\023\000\021\000\033 000\023\000\021\000\034 000W\000K\000H\000\003\000V\000P\000D\000O\000O\000H\000V\000W\000\003\000F\000R\000U\000U\000H\000O\000D\000W\000L\000R\000Q\000\003\000W\000K\000U\000H\000V\000K\000R\000O\000G\000\003\000Y\000D\000O\000X\000H 000W\000K\000H\000\003\000H\000[\000H\000F\000X\000W\000L\000R\000Q\000\003\000W\000L\000P\000H 000\003\000\003\0007\000D\000S\000H\000U 000\003\0007\000D\000S\000H\000U\0005 000\003\000\003\000\\000\021\000\003\000\030\000\003\000\003\000W\000K\000H\000\003\000H\000[\000H\000F\000X\000W\000L\000R\000Q\000\003\000W\000L\000P\000H\000\003\000F\000R\000P\000S\000D\000U\000L\000V\000R\000Q\000\003\000L\000Q\000\003\000V\000R\000\\\000E\000H\000D\000Q 000G\000D\000W\000D\000\003\000V\000H\000W 000\023 000\024 000\024 000\025 000\025 000\026 000\026 000\027 000\027 000\023\000\021\000\024 000\023\000\021\000\025 000\023\000\021\000\026 000\023\000\021\000\027 000\023\000\021\000\030 000\023\000\021\000\031 000\023\000\021\000\032 000\023\000\021\000\033 000\023\000\021\000\034 000W\000K\000H\000\003\000V\000P\000D\000O\000O\000H\000V\000W\000\003\000F\000R\000U\000U\000H\000O\000D\000W\000L\000R\000Q\000\003\000W\000K\000U\000H\000V\000K\000R\000O\000G\000\003\000Y\000D\000O\000X\000H 000W\000K\000H\000\003\000H\000[\000H\000F\000X\000W\000L\000R\000Q\000\003\000W\000L\000P\000H 000\003\000\003\0007\000D\000S\000H\000U 000\003\0007\000D\000S\000H\000U\0005 000\003\000\\000\021\000\003\000\025\000\003\000\003\000\003\000W\000K\000H\000\003\000F\000R\000P\000S\000D\000U\000L\000V\000R\000Q\000\003\000L\000Q\000\003\000W\000K\000H\000\003\000P\000X\000V\000K\000U\000R\000R\000P\000\003\000G\000D\000W\000D\000\003\000V\000H\000W 000\023 000\024\000\023\000\023\000\023 000\025\000\023\000\023\000\023 000\026\000\023\000\023\000\023 000\027\000\023\000\023\000\023 000\030\000\023\000\023\000\023 000\031\000\023\000\023\000\023 000\032\000\023\000\023\000\023 000\023\000\021\000\024 000\023\000\021\000\025 000\023\000\021\000\026 000\023\000\021\000\027 000\023\000\021\000\030 000\023\000\021\000\031 000\023\000\021\000\032 000\023\000\021\000\033 000\023\000\021\000\034 000W\000K\000H\000\003\000V\000P\000D\000O\000O\000H\000V\000W\000\003\000F\000R\000U\000U\000H\000O\000D\000W\000L\000R\000Q\000\003\000W\000K\000U\000H\000V\000K\000R\000O\000G 000W\000K\000H\000\003\000Q\000X\000P\000E\000H\000U\000\003\000R\000I\000\003\000L\000W\000H\000P\000\003\000S\000D\000L\000U\000V 0007\000D\000S\000H\000U 0007\000D\000S\000H\000U\0005 From the result, the new algorithm has good effect in mining strong correlation item pai rs in relational database and is more suitable to apply in the practical relational database system 6 Summary and the innovative points 
425 


In this paper, we subs tituted the association with traditional association rules a nd mainly researched on the mining of strong correlation ite m pairs whose relevance is measured with Pearson correlation coefficient, and have designed one highly effective algorithm. Both the theoretical analysis and the experimental results indicated that--the newly proposed TaperR algorithm has good effect in mining strong correlation item pairs in relational database and also its various aspects surpass the Taper algorithm References  Lixin Cui, Sensen Yuan Chunxi Zhao Restraint disposition association rule discovery method and algorithm Computer journal 2000.22 \(2  Y-L.Cheung A. Fu. Mining Frequent Item sets without Support Threshold: With and without Item Constraints IEEE Transactions on Knowledge and Data Engineering 16\(9   W.-Y. Kim, Y.-K. Lee, J. Iran. CCMine: Efficient Confidence-Closed Correlated Patterns. In: Proc. of PAKDD'04 Mining of 2004  Zhanhua Yang, Yan Yang, data m i ning in intelligence  Micro computer information 2006 4-3:P244-246 
426 


z support and con\002dence will be calculated via database scan at current pass Now for the rule l 1  l 2     l i 000 1   l i      l p  z we can obtain supp l 1  l 2     l i 000 1   l i      l p  z supp\(l 1  l 2      l i 000 1  l i 1     l p  z supp\(l 1  l 2      l i 000 1  l i      l p  z supp\(l 1  l 2      l i 000 1   l i     l p  supp l 1  l 2      l i 000 1  l i 1      l p  000 supp  l 1  l 2      l i 000 1  l i  l i 1      l p  conf l 1  l 2     l i 000 1   l i      l p  z supp l 1  l 2     l i 000 1   l i      l p  z  supp\(l 1  l 2      l i 000 1   l i     l p  So no such negative rule will be generated by ACN for which a database scan will be needed to count the support and con\002dence So ACN performs exactly the same number of dataset scans as Apriori Figure 3 Support and Con\002dence calculation of negative rule items from other positive rule items So ACN does not need to perform any extra database scan to calculate support and con\002dences of the generated negative rules For any rule to gather the support and con\002dence values we need to consult O\(r records where r is the number of records in the database But here the support and con\002dence of a negative rule can be calculated in O\(1 time and no I/O operation is needed As a result the mining phase of ACN remains time-ef\002cient 4 Experimental studies In this section we present some experimental facts regarding ACN and also compare it with other state-of-the-art classi\002cation algorithms in terms of accuracy Table 1 Number of positive and negative rules generated for two data sets Con\002dence Diabetes Diabetes Heart Heart  rules rules  rules rules 50-60 223 571 3438 10496 60-70 200 546 1474 4823 70-80 163 520 1770 5201 80-90 133 448 952 2917 90-100 142 474 999 2900 Table 1 gives the number of positive and negative rules generated in experiments on two data sets Diabetes and Heart From the table it is evident that the number of generated negative rules of high con\002dence\(90-100 several orders of magnitude in number than the number of generated positive rules of that con\002dence In general a rule is good if it has high con\002dence So taking the negative rules into account ACN generates more good rules than other classi\002cation methods that generate only positive rules So the class association rule set for ACN is much larger and richer Table 2 gives the comparison of accuracy among ACN C4.5 CBA and CMAR The accuracy of ACN was obtained by 10 fold cross validation over 16 datasets from UCI ML  e ha v e used C4.5 s shuf 003e utility to shuf 003e the datasets Discretization of continuous attributes is done using the same method in CBA For ACN the minimum con\002dence was set to 50 the correlation coef\002cient threshold was set to 0.2 and the remaining accuracy threshold for negative rules was set to 55 These were the best values for the parameters that we obtained experimentally From Table2 we see that the average accuracy of ACN is better than CBA CMAR and C4.5 Moreover out of the 16 datasets ACN achieves the best accuracy on more than half 9 datasets Table 3 gives the comparison of accuracy among ACN and ARC-PAN We have used only 6 datasets for comparison here since the accuracy of ARC-PAN was available for these 6 datasets only 


Table 2 Comparison of C4.5 CBA CMAR and ACN on accuracy Dataset ACN CMAR CBA C4.5 diabetes 76.3 75.8 74.5 74.2 pima 75.1 75.1 72.9 75.5 tic-tac 99.7 99.2 99.6 99.4 iris 95.3 94 94.7 95.3 heart 82.2 82.2 81.9 80.8 lymph 83.1 83.1 77.8 73.5 glass 73.8 70.1 73.9 68.7 austra 85.5 86.1 84.9 84.7 led7 71.9 72.5 71.9 73.5 horse 83.7 82.6 82.1 82.6 sonar 79.8 79.4 77.5 70.2 hepati 83.2 80.5 81.8 80.6 crx 85.2 84.9 84.7 84.9 cleve 81.5 82.2 82.8 78.2 hypo 98.9 98.4 98.9 99.2 sick 97.3 97.5 97 98.5 Average 85.4 84.6 84.3 83.0 Table 3 Comparison of ACN and ARC-PAN on accuracy Dataset ACN ARC-PAN diabetes 76.3 74.9 pima 75.1 73.1 iris 95.3 94.0 heart 82.2 83.8 led7 71.9 71.1 breast 95.3 96.2 Average 82.68 82.18 For ARC-PAN we consider the results obtained when all rules both positive and negative are used for classi\002cation From table 3 we see that the win-loss-tie record of ACN against ARC-PAN is 4-2-0 5 Conclusions In this paper we proposed a novel classi\002cation algorithm ACN that mines both positive and negative class association rules and uses both sets for classi\002cation We showed that the number of generated negative rules is large and so using them in place of some weak positive rules can enhance classi\002cation accuracy Our experiments on UCI datasets show that ACN is consistent highly effective at classi\002cation of various kinds of databases and has better average classi\002cation accuracy compared to C4.5,CBA,CMAR and ARC-PAN References  R Agra w al and R Srikant F ast algorithms for mining association rules In VLDB  Chile September 1994  M Antonie and O R Za 250 021ne An Associative Classi\002er based on Positive and Negative Rules In DMKD  Paris France June 2004  M Antonie and O R Za 250 021ne Mining Positive and Negative Association Rules an Approach for Con\002ned Rules In Principles and Practice of Knowledge Discovery in Databases  2004  E Baralis and P  Garza A Lazy Approach to Pruning Classi\002cation Rules In ICDM  2002  C Blak e and C Merz UCI repository of m achine learning databases  R Duda and P  Hart Pattern Classi\002cation and Scene Analysis  John Wiley and Sons 1973  J Han J Pei and Y  Y i n Mining frequent patterns without candidate generation In SIGMOD  2000  G K undu S Munir  M F  Bari M M Islam and K Murase A Novel Algorithm for Associative Classi\002cation In International Conference on Neural Information Processing  Japan 2007  W  Li J Han and J Pei Accurate and ef 002cient classi\002cation based on multiple class association rules In ICDM  San Jose CA November 2001  T  Lim W  Loh and Y  Shi h A comparison of prediction accuracy complexity and training time of thirty-three old and new classi\002cation algorithms Machine Learning  39 2000  B Liu W  Hsu and Y  Ma Inte grating Classi\002cation and Association Rule Mining In KDD  New York August 1998  J Quinlan C4.5:Programs for Machine Learning  Morgan Kaufmann 1993  A Sa v asere E Omiecinski and S Na v athe Mining for Strong Negative Associations in a Large Database of Customer Transactions In ICDE  1998  S.Bri n R Motw ani and C.Silv erstein Be yond mark et baskets Generalizing association rules to correlations In ACM SIGMOD  1997  D Thiruv ady and G W ebb  Mining Ne g ati v e Association Rules using GRD In PAKDD  2004  X W u C Zhang and S Zhang Ef 002cient Mining of Both Positive and Negative Association Rules ACM Trans on Information Systems  22\(3 2004  P  Y an G Chen C Cornelis M D Cock and E K erre Mining Positive and Negative Fuzzy Association Rules In LNCS 3213  2004  X Y in and J Han CP AR Classi\002cation based on Predicti v e Association Rules In SDM  2003  X Y uan B P  Buckles Z Y uan and J Zhang Mining Ne gative Association Rules In Seventh International Symposium on Computers and Communications  Italy June 2002 


Table 10 Overview of different error classes in DC1 Algorithm All Features Multi-word features Single-word features False negatives False positives False negatives False positives None of the terms extracted Some of the terms extracted All extracted but not combined On-topic features Off-topic features Not extracted Extracted falsely as multi-word On-topic features Off-topic features Association Mining 594 14 62 25 23 0 45 39 260 259 Likelihood Test 594 138 1 0 1 0 295 3 29 0 002ed the algorithm in order to consider only the subsequence of the extracted feature which consists of nouns We refer to these two modi\002cations as Subsequence Similarity SsS An evaluation of these modi\002cations is shown in columns 5 and 6 of Table 7 We observe an average increase of recall by 2 and an increase of precision by 10 4.3.2 Analysis of the Association Mining Approach The precision of the Association Mining approach is fairly low since it returns any noun as a feature if it often occurs in the documents For example the term week is extracted as a frequent feature There is no distinction between dataset speci\002c terms and common vocabulary terms Setting the minimum-support threshold higher will not solve this problem as it would lead to decreased recall Note that in our evaluation Table 8 the infrequent features hardly affect the algorithm's results since they are only very seldomly extracted at all For example in the DC1 dataset of the 597 sentences only 12 contain an opinion word but no frequent feature Of those 12 cases the infrequent feature identi\002cation leads to 7 correct and 5 false features being extracted In some cases see Column 9 of Table 10 the association mining falsely attributes nouns occurring in a sentence to a single feature set For example in 4 recent price drops have made the g3 the best bargain in digital cameras currently available g3 is extracted as a feature set since the two terms occur together as one entity in multiple other sentences The compactness pruning will therefore not remove this feature set Sentences as 4 will hence result in an error during extraction The large amount of false positives in the single-word feature extraction see Table 10 Columns 6  7 is due to the fact that many sentences in the DC1 dataset consist of comparisons of the DC1 camera to other camera models The features of these other camera models are also mentioned in the reviews and therefore falsely extracted by the association mining since the algorithm is not capable of distinguishing between references to features of the DC1 camera and any other camera model 4.3.3 Comparison of the Approaches As outlined in Table 10 the two approaches have their strengths and weaknesses in different tasks If the Likelihood Ratio Test approach fails to extract a multi-word feature the tendency is that none of the feature terms are being extracted while this is not the case in the association mining approch This is due to the fact that the association mining algorithm will return any feature combination occurring in a given sentence while the Likelihood Ratio Test approach requires that a multi-word feature occurs in the same ordering in several sentences in order to achieve a high likelihood ratio and therefore be extracted The threshold of the Likelihood Ratio Test approach in combination with the Subsequence similarity calculation will therefore prevent that a subset of a multi-word feature is extracted instead the feature will not be extracted at all At the same time the association mining extracts several false multi-word features none of them belonging to the general vocabulary We observe similar results in the analysis of the single-word errors The Likelihood Ratio Test approach fails to extract many of the features which is again due to the threshold while the Association Mining approach extracts less false features but has the problem of wrongly extracting actual single-word features as a multi-word expression as analyzed in Section 4.3.2 The inability of the Association Mining approach to recognize whether a certain candidate feature is an attribute of the current topic as de\002ned in Section 2.1 is observable in Columns 10  11 of Table 10 The Association Mining approach extracts a large number of false features compared to the Likelihood Ratio Test approach The low number of falsely extracted on-topic features of the Likelihood Ratio Test approach could be attributed to the dBNP method Apparently if a candidate BNP is preceded by a de\002nite article an on-topic feature follows However the low number of false positives during the feature extraction re\003ects the tradeoff between recall and precision of this approach 5 Conclusions In this paper we provide a comprehensive analysis of two state-of-the-art algorithms for extracting features from product reviews based on the Likelihood Ratio Test and on 
159 
150 


association mining The Likelihood Ratio Test fails to extract features also belonging to common vocabulary and it makes the extraction dependent on the feature position in the sentence leading to low recall The dBNP and bBNP based methods yield low recall due to the fact that the product features do not occur with the article the in front of them very often The Association Mining approach returns all frequent nouns which decreases precision Our results suggest that the choice of algorithm to use depends on the targeted dataset If it consists of mainly on-topic content the results of Table 10 indicate that the Association Mining algorithm is better suited for this task due to its high recall If the dataset consists of a mixture of onand off-topic content our results suggest that the Likelihood Ratio Test based algorithm would perform better due to its ability to distinguish and 002lter out the off-topic features For future work we plan to extend the Likelihood Ratio Test methods especially the dBNP based approach by other determiners such as a or this  which should increase the recall of this method Another possibility which we will investigate regards the BNP patterns The current Likelihood Ratio Test approach is not capable of dealing with discontinuous feature phrases for example in 5 the quality of the pictures is great the feature would be picture quality  This problem could be addressed by introducing wildcards in the BNP patterns We will also investigate whether there are any methods in order to calculate an optimal threshold for the candidate feature extraction in order to increase the recall of the Likelihood Ratio Test based algorithm We plan to investigate whether a deeper linguistic analysis e.g with a dependency parser can improve the feature extraction Acknowledgements The project was funded by means of the German Federal Ministry of Economy and Technology under the promotional reference 01MQ07012 The authors take the responsibility for the contents The information in this document is proprietary to the following Theseus Texo consortium members Technische Universit  at Darmstadt The information in this document is provided as is and no guarantee or warranty is given that the information is 002t for any particular purpose The above referenced consortium members shall have no liability for damages of any kind including without limitation direct special indirect or consequential damages that may result from the use of these materials subject to any liability which is mandatory due to applicable law Copyright 2008 by Technische Universit  at Darmstadt References  R Agra w al and R Srikant F ast algorithms for mining association rules Proc 20th Int Conf Very Large Data Bases VLDB  1215:487–499 1994  K Bloom N Gar g and S Ar g amon Extracting a ppraisal expressions In HLT-NAACL 2007  pages 308–315 2007  R Bruce and J W iebe Recognizing subjecti vity a case study in manual tagging Natural Language Engineering  5\(02 1999  K Da v e S La wrence and D Pennock Mi ning the peanut gallery opinion extraction and semantic classi\002cation of product reviews In Proceedings of the 12th International Conference on World Wide Web  pages 519–528 New York NY USA 2003 ACM  T  Dunning Accurate methods for the statistics of surprise and coincidence Computational Linguistics  19\(1 1993  O Feiguina and G Lapalme Query-based summ arization of customer reviews In Canadian Conference on AI  pages 452–463 2007  C Fellbaum Wordnet An Electronic Lexical Database  MIT Press 1998  A Ferraresi Building a v ery lar ge corpus of english obtained by web crawling ukwac Master's thesis University of Bologna Italy 2007  M Gamon A Aue S Corston-Oli v er  and E Ringger  Pulse Mining customer opinions from free text In Proceedings of the 6th International Symposium on Intelligent Data Analysis IDA-2006  Springer-Verlag 2005  N Glance M Hurst K Nig am M Sie gler  R Stockton and T Tomokiyo Deriving marketing intelligence from online discussion In Proceedings of the 11th ACM SIGKDD International Conference on Knowledge Discovery in Data Mining  pages 419–428 New York USA 2005 ACM  M Hu and B Liu Mining opinion features in customer reviews In Proceedings of 9th National Conference on Arti\002cial Intelligence  2004  N K obayashi K Inui K T atei shi and T  Fukushima Collecting evaluative expressions for opinion extraction In Proceedings of IJCNLP 2004  pages 596–605 2004  S Morinag a K Y amanishi K T ateishi and T  Fukushima Mining product reputations on the Web In Proceedings of KDD-02 8th ACM International Conference on Knowledge Discovery and Data Mining  pages 341–349 Edmonton CA 2002 ACM Press  A.-M Popescu and O Etzioni Extracting product features and opinions from reviews In Proceedings of HLT-EMNLP-05 the Human Language Technology Conference/Conference on Empirical Methods in Natural Language Processing  pages 339–346 Vancouver CA 2005  H Schmid T reetagger a language independent part-ofspeech tagger Institut fur Maschinelle Sprachverarbeitung Universitat Stuttgart  1995  J W iebe R Bruce and T  O'Hara De v elopment and use of a gold-standard data set for subjectivity classi\002cations In Proceedings of the 37th annual meeting of the Association for Computational Linguistics on Computational Linguistics  pages 246–253 Association for Computational Linguistics Morristown NJ USA 1999  J Y i T  Nasuka w a R Bunescu and W  Niblack Sentiment analyzer Extracting sentiments about a given topic using natural language processing techniques In Proceeding of ICDM-03 the 3ird IEEE International Conference on Data Mining  pages 427–434 Melbourne US 2003 IEEE Computer Society 
160 
151 


Figure 4 Expected and real number of extracted patterns using two promoter sequence datasets Horizontal axis minimum support vertical axis number of patterns 
85 
85 


a frequency constraint and according to the structure of the dataset These proposals are all based on a global analytical model i.e an interesting approach that needs however to develop complex and speci\036c models As a result they cannot be easily extended to handle complex conjunctions of constraints to incorporate different symbol distributions or different semantics for pattern occurrences To the best of our knowledge no method has been proposed to estimate the number of patterns satisfying a constraint while avoiding to develop a global analytical model Our approach requires only to know how to compute for a given pattern its probability to satisfy the constraint this can be obtained in many situations and it remains ef\036cient in practice by adopting a pattern space sampling scheme 6 Conclusion Using constraints to specify subjective interestingness issues and to support actionable pattern discovery has become popular Constraint-based mining techniques are now well studied for many pattern domains but one of the bottlenecks for using them within Knowledge Discovery processes is the extraction parameter tuning This is especially true in the context of differential mining where domain knowledge is used to provide different datasets to support the search of truly interesting patterns From a user perspective a simple approach would be to get graphics that depict the extraction landscape i.e the number of extracted patterns for many points in the parameter space We developed an ef\036cient technique based on pattern space sampling that provides an estimate on the number of extracted patterns This has been applied to non trivial substring pattern mining tasks and we demonstrated by means of many experiments that the technique is effective It provides reasonable estimates given execution times that enable to probe a large number of points in the parameter space Notice that domain knowledge is also exploited here when selecting the distribution model Future directions of work include to adapt the approach to other pattern domains and to different constraints Another interesting aspect to investigate is the use of more sophisticated sampling schemes e.g that could b e incorporated in the approach when more complex syntactical constraints are handled e.g a grammar to specify the shape of the patterns Acknowledgments This work is partly funded by EU contract IQ FP6-516169 Inductive Queries for Mining Patterns and Models and by the French contract ANR-MDCO14 Bingo2 Knowledge Discovery For and By Inductive Queries We thank Dr Olivier Gandrillon from the Center for Molecular and Cellular Genetics CNRS UMR 5534 who provided the DNA promoter sequences References  J F  Boulicaut L De Raedt and H  M annila e ditors Constraint-Based Mining and Inductive Databases  volume 3848 of LNCS  Springer 2005  C  B resson C K e ime C F a ure Y  Letrillard M  B arbado S San\036lippo N Benhra O Gandrillon and S GoninGiraud Large-scale analysis by SAGE revealed new mechanisms of v-erba oncogene action BMC Genomics  8\(390 2007  L  C ao and C  Z hang Domain-dri v e n actionable kno wledge discovery in the real world In Proceedings PAKDDÕ06 volume 3918 of LNCS  pages 821–830 Springer 2006  G  D ong and J  L i Ef 036cient mining of emer ging patterns discovering trends and differences In Proceedings ACM SIGKDDÕ99  pages 43–52 1999  F  Geerts B  G oethals and J  V  d en Bussche T ight upper bounds on the number of candidate patterns ACM Trans on Database Systems  30\(2 2005  U  K eich and P  A  P e vzner  S ubtle motifs de\036ning the limits of motif 036nding algorithms Bioinformatics  18\(10 2002  S  K ramer  L De Raedt and C  Helma M olecular f eature mining in HIV data In Proceedings KDDÕ01  pages 136 143 2001  L  L hote F  Rioult and A  S oulet A v e rage number of frequent closed patterns in bernouilli and markovian databases In Proceedings IEEE ICDMÕ05  pages 713–716 2005  I  M itasiunaite a nd J.-F  B oulicaut Looking for monotonicity properties of a similarity constraint on sequences In Proceedings of ACM SACÕ06 Data Mining  pages 546–552 2006  I Mitasiunaite and J F  Boulicaut Introducing s oftness i nto inductive queries on string databases In Databases and Information Systems IV  pages 117–132 IOS Press 2007  I Mitasiunaite C Rigotti S Schicklin L  M e yniel J F  Boulicaut and O Gandrillon Extracting signature motifs from promoter sets of differentially expressed genes Technical report LIRIS CNRS UMR 5205 INSA Lyon France 2008 23 pages Submitted  G Ramesh W  M aniatty  a nd M J Zaki F easible itemset distributions in data mining theory and application In Proceedings ACM PODSÕ03  pages 284–295 2003  F  Zelezn  y Ef\036cient sampling in relational feature spaces In Proceedings ILPÕ05  volume 3625 of LNCS  pages 397 413 Springer 2005 
86 
86 


