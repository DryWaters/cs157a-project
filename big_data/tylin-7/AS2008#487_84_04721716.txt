A Novel Association Rule Decision Algorithm Based on Ant Colony Optimization Algorithm for Ball Mill Pulverizing System Wenzhi Zhu Jingcheng Wang Hui Cao Yanbin Zhang School of Electrical Engineering Xi'an Jiao Tong University Xi'an 710049 Email wenzhizhu@mail.xjtu.edu.cn Abstract Optimization of automatic control is very important in ball mill pulverizing system and a novel association rule decision algorithm based on ant colony optimization algorithm ACO is proposed for improving the control performance The proposed algorithm based on ACO formulates the association rule decision problem as an optimization problem In the algorithm a new pheromone matrix is de\002ned on the construction of the problem and an effective heuristic values assignment approach which is used with the knowledge of controlled plant is proposed The 002tness function is established on the system control quality such as the overshoot the settling time and the steady state error We performed the experiments on a mined association rules base of ball mill pulverizing system Simulation results verify that the proposed algorithm can 002nd the best association rule to optimize the system control performance I I NTRODUCTION Optimization of automatic control is an important issue in Ball Mill Pulverizing System Operating optimization is to 002nd the best working condition in current running state It means determining the best set values of the controlled variables Generally set values of the controlled variables are given by the manufacturers or determined by the 002eld testing However the best set values which make industrial process running more steadily and ef\002ciently will shift with the running environment changes Therefore tracing the best set values of industrial process becomes a research focus Researchers have proposed many methods in this 002eld Genetic algorithm is an effective method and it may be easily falling to over convergence or low convergence Neural netw ork does not depend on mathematical model and the standard data for training are not easily to get Fuzzy optimization algorithm can decide the optimization searching step by the 002eld data but the membership functions and the fuzzy rules require expert knowledge Data mining is a new technology to mine information and knowledge from the 002eld data W e can mine the association rules from the 002eld database of the controlled plant in form of if    then     The antecedent represents controlled variables values as the consequent represents the system status First we query the existing AR base to con\002rm current system status Then we anti-query the AR base with the consequent part to select the best rule to set values of the controlled variables for good control performance In the anti-querying process more than one association rule would be found Therefore the decision of an appropriate association rule for good control performance in the following is referred to as AR decision problem Some researches 6 ha v e proposed different schemes for learning the relations of fuzzy inputs and fuzzy outputs and they are limited to selecting a small number of signi\002cant fuzzy if-then rules to construct a compact fuzzy classi\002cation system with high classi\002cation power using optimization models The AR decision problem can be regarded as a combinational problem which is a bit different and can not be easily solved Ant colony optimization ACO is a new paradigm of bio-inspired algorithms that has shown very good behavior when solving hard combinatorial optimization and many studies on this topic are still being pursued 8 We propose a novel association rule decision algorithm based on ant colony optimization for ball mill pulverizing system The AR decision problem is 002rstly formulated as an optimization problem and the ACO is applied to the optimization problem In the algorithm the new pheromone matrix de\002nition and the heuristic values assignment are proposed for the AR decision problem The 002tness function is established on the control quality of ball mill pulverizing system such as the overshoot the settling time and the steady state error The rest of this paper is organized as follows Section 2 summarizes some important background information The proposed decision algorithm is introduced in Section 3 Section 4 presents the simulation results Finally section 5 conclusions the paper II B ACKGROUND I NFORMATION The schematic representation of a ball mill pulverizing system is shown in Figure 1 The ball mill is fed with raw coal At the same time the hot air and recycle air are blown into the ball mill to dry and deliver the coal powder After pulverizing the coal powder is transferred into the coarse classi\002er and 002ne classi\002er The unquali\002ed powder is fed back into the ball mill for further pulverizing while the accepted powder is stored in the pulverized coal bunker Output capability which includes pulverizing capability drying capability and air draft capability mainly represents the ef\002ciency of ball mill pulverizing system Drying capability and air draft capability can be represented by measuring the outlet temperature and the inlet negative pressure respectively 
2008 International Conference on Computer Science and Software Engineering 978-0-7695-3336-0/08 $25.00 © 2008 IEEE DOI 10.1109/CSSE.2008.1171 160 


Fig 1 Ball mill pulverizing system Although pulverizing capability can not be measured directly it is related to ball mill load The ball mill load is the ratio between the volume of coal powder in the mill and the interstitial volume of the static ball charge To control the ball mill pulverizing system to work at the optimal state means setting the three controlled variables values to get a high output capability Association rules which represent the relationships between the three controlled variables and system output capability can be mined from the 002eld database to build the AR base Fuzzy sets can represent the association rules in a natural and humanunderstandable way when quantitative attributes are involved  Then the fuzzy AR base is b uilt a part of fuzzy AR are shown in Table 1 In the table X 1  X 2  X 3 and Y present the linguistic variables of ball mill load outlet temperature inlet negative pressure and pulverizing system output capability respectively The set of fuzzy linguistic variables are adopted as f NB NM NS ZO PS PM PB g  NB NM NS ZO PS PM and PB represent negative big negative middle negative small zero positive small positive middle and positive big respectively TABLE I E XAMPLE OF FUZZY AR BASE IF THEN N O X 1 X 2 X 3 Y 1 P M P M N S P M 2 P S P S P B P M 3 N B N B N B N B      Let A 1 i  A 2 i  A 3 i and B i be linguistic terms the fuzzy AR structure can be written as AR i  IF X 1 is A 1 i and X 2 is A 2 i and X 3 is A 3 i  THEN Y is B i For example it is assumed that the current measured values of ball mill load outlet temperature and inlet negative pressure are transformed to fuzzy sets as NB NB NB respectively Then we query the fuzzy AR base as Table 1 shows with the antecedent set f NB NB NB g  and 002nd AR 3 as the matching AR The corresponding consequent set NB represents the current pulverizing system output capability Since the system control objective is to get high output capability namely Y should be PB we anti-query the fuzzy AR base and 002nd AR 1 and AR 2  We have two groups of set values of ball mill load outlet temperature and inlet negative pressure as f PM PM NS g or f PS PS PB g  The controller can control the controlled variables be the set values After the system is steady the ball mill pulverizing system will get a high output capability value PB with either of the two ARs Because the set values of three controlled variables in AR 1 and AR 2 are different the selection of the two ARs will lead to different system control performance III AR DECISION ALGORITHM BY ACO In the paper an AR decision Algorithm based on ACO for the ball mill pulverizing system is proposed The block diagram of the Algorithm is shown in Figure 2 bml  ot and inp are the measure values of the ball mill load the outlet temperature and the inlet negative pressure respectively bml sv  ot sv and inp sv are the set values of bml  ot and inp  Fig 2 AR decision algorithm based on ACO In the AR decision problem more than one association rule will be found Let R i  i 1     r  be a found AR and r is the number of found association rules The combination of the three variables in R i is AR antecedent combination Ac i  Moreover we de\002ne the candidate AR antecedent combination is from the set Ac  f Ac 1    Ac r g  For each consequent value one of the r candidate AR antecedent combinations is chosen If c is the number of consequent values in the AR decision problem then we have to decide the best one from a total of r c AR decision combinations This leads to a combinational optimization problem One selected controlled variables antecedent combination of all association rules corresponds to one ant move For example in Figure 3 there are four consequent values denoted by B 1 B 4  and four candidate AR antecedent combinations Ac 1 Ac 4 for each consequent value The ant moves through B 1  B 2  B 3  and stops at B 4 from the initial state A bold line marks the tour of this ant The node visited by ant is selected as the antecedent of the association rule For the whole AR decision constructed by the ant in Figure 3 the selected antecedent parts in B 1  B 2  B 3 and B 4 are Ac 1  Ac 3  Ac 2  Ac 4  respectively In the initial of the algorithm a colony of ants is generated and placed in the nest and a terminal condition is de\002ned as the total number of searching iterations Searching for the best one among all AR decisions is based on the pheromone level which is stored in a pheromone matrix shown in Figure 3 the size of the pheromone matrix is c  r and each entry in the matrix is denoted by  ij  where i 1     c and j 1     r  When 
161 


Fig 3 AR decision constructed by an ant tour and the pheromone matrix the ant arrives at the consequent value B m  selection of the candidate AR antecedent combinations of B m 1 is according to  m 1 j  j 1     r  At iteration t  the transition probability for selecting AR antecedent combination Ac j in consequent B i is de\002ned by P ij  t    ij  t   ij   r X j 1  ij  t   ij   1 where  controls the relative weight of pheromone level and heuristic value Computing the heuristic value  usually requires apriori information about the problem instance In the AR decision problem a fuzzy AR base is constructed which presents the apriori knowledge about the ball mill pulverizing system So we use the con\002dence values of the fuzzy AR base to present the heuristic value   The pheromone trails  ij on the ant tour are updated according to the control performance of the constructed AR decision There are three controlled variables in AR base so when ant k completes a tour we evaluate the system control quality by a 002tness function E  3 X j 1  E i  E  2  E i is de\002ned as E i  1  e       i  e i ss   e    lg t i s  2 where e i ss   i and t i s present the steady state error the overshoot and the settling time of system response for the i th controlled variable respectively The weight coef\002cient  2 0.8 1.5 A lower value indicates better control quality For each iteration as in the ACS if a ne w global best ant is found in this iteration then pheromone trails on the tour traveled by the global-best ant are updated the new pheromone trail  ij  t  1 is updated by  ij  t  1  1     ij  t     ij  t  3 where  2 0 1 is the pheromone trail evaporation rate and   ij  t   1 E global  best  Otherwise no pheromone update is performed in this iteration When the terminal condition is satis\002ed the ants will 002nd the best values combinations of controlled variables according to the pheromone level and heuristic values IV T HE SIMULATION AND RESULTS Simulation is performed in Matlab 7.6 to test the feasibility and effect of the proposed algorithm We apply the ACO to the fuzzy AR base shown in Table 1 The number of ants is set to 10  ij 0 is set as positive constants The 002tness function values on each iteration is shown in 002gure 4 The algorithm converges to a solution at about 275 iterations After 350 iterations the algorithm 002nds AR 2 as the best AR to get high output capability Fig 4 The 002tness function values on each iteration A futher experiment is performed to test the system responses of the working condition presented by AR 2 and rule AR 1  The system transfer function of ball mill pulverizing system is introduced in The responses of ball mill load the outlet temperature and the inlet negative pressure are represented by RBML ROT and RINP respectively According to the working condition presented by AR 2  we set values of the three controlled variables to 0.5 0.6 and 0.6 respectively As Figure 5 shows RBML ROT and RINP enter the steady state after about 821s 1252s and 982s respectively The overshoot of ROT is about 0.025 and RBML is not more than 0.45 Moreover the steady state errors of RBML and ROT are about 0.05 and 0.025 According to AR 1  the set values of ball mill load the outlet temperature and the inlet negative pressure are 0.7 0.7 and 0.4 respectively The simulation results are shown in Figure 6 RBML ROT and RINP enter the steady state after about 1159s 1544s and 1185s respectively The overshoot of ROT is about 0.07 and RBML is not more than 0.66 Moreover the steady state errors of RBML and ROT are about 0.04 and 0.07 respectively The simulation results show that the ball mill pulverizing system have a better control performance in the working 
162 


Fig 5 Simulation results of AR2 Fig 6 Simulation results of AR1 condition presented by AR2 V C ONCLUSION In this paper a novel AR decision algorithm based on ant colony optimization for ball mill pulverizing system is proposed The algorithm has some advantages as follows First based on the ACO the algorithm can 002nd the best working condition presented by the speci\002c association rule Second the parameters in the proposed algorithm are easily to choose by using the ACO algorithm scheme Third the heuristic values represent the knowledge of ball mill pulverizing system very well And the algorithm converges to a solution quickly by using the heuristic values Simulations results also verify the feasibility and effect of the algorithm As further work we propose to use the local search to improve the performance of the algorithm A CKNOWLEDGMENT The research is 002nancially supported by National High Technology Research and Development Program of China 2006AA04Z180 R EFERENCES  C Qiming and W Yonghao The overview on the development of control techniques on intermediate storage bunker ball mill pulverizing system of power plant Journal of Shanghai University of Electric Power  vol 22 no 1 pp 2854 2006  S Dong-lin F Yu-chang and D Chun-xi Application of fuzzy controller based on ga in mill systems Editorial Dept Electric Power Sci Eng  vol 1 no 1 pp 5255 2005  W Dongfeng Y Xining and S Zhiping Dynamic mathematical model of ball mill pulverizing system and its inverse control based on distributed neural networks Proceedings of the CSEE  vol 22 no 1 pp 97101 2002  J Han and M Kamber Data Mining Concepts and Techniques Second Edition  Morgan Kaufmann 2006  H Ishibuchi K Nozaki N Yamamoto and H Tanaka Selecting fuzzy if-then rules by genetic algorithm for classi\002cation problems using genetic algorithms IEEETrans.Fuzzy Systems  vol 3 no 3 pp 260 270 August 1995  H Ishibuchi H Okada R Fujioka and H Tanaka Neural networks that learn from fuzzy if-then rules IEEETrans.Fuzzy Systems  vol 1 no 2 pp 8597 May 1993  Y Hani L Amodeoa and F Yalaouia Ant colony optimization for solving an industrial layout problem European Journal of Operational Research  vol 183 no 2 pp 633642 December 2008  Z.-F Hao R.-C Cai and H Huang An adaptive parameter control strategy for aco Proceedings of the Fifth International Conference on Machine Learning and Cybernetics  pp 203206 August 2006  M Delgado N Man\007n M J Mart\007n-Bautista D Snchez and M A Vila Mining fuzzy association rules:an overview Studies in Fuzziness and Soft Computing  2005  M Dorigo and L Gambardella Ant colony system:acooperative learning approach to the traveling salesman problem IEEETrans Evolutionary Computation  vol 1 no 1 pp 5356 1997  L Changliang L Weiping and L Changqing The self-tuning fuzzy control algorithm for ball mill pulverizing system of power plant Proceedings of the CSEE  vol 21 no 12 pp 9396 2001 
163 


to their semantic relevance. In fact, the purpose of the first phrase ranking is to find semantically equivalent web service candidates. Based on the ranking obtained in the first phrase, the second phrase that mainly considers context equivalence is implemented. In this phrase, service context is referenced and then realize the relevance reranking Let S = {S 1 S 2 S n be a web service collection and Q = {T 1 T 2 T m consisting of several keywords be the submitted query. By implementing OWL-S based approach, web services in S can be semantically ranked and the ranking result is formed as Ranking Semantic S i  S j S k  To further evaluate web service relevance, context equivalence of the top m web services in the ranking list achieved above is further evaluated. Assuming QC QC 1 QC 2 QC s contains the related web services with which the required web service join together, SC i  SC i 1 SC i t includes the web services heavily dependent with web service candidate S i in Ranking Semantic where each SC i j SC i j,1  SC i j,v  satisfies confidence\(S i  SC i j   the context equivalence of S i is then evaluated as     SC              SC         SC    Ranking t i  2 i  1 i  Context 2 1 QC QC CF QC QC CF QC QC CF S t i i i i i i SC S SC S SC S i         3 Synthetically considering the semantic equivalence and context equivalence of web service S i the relevance of S i to query Q is finally defined as   Ranking  1       Ranking    S  Q Relevance Context Semantic i i i S S        4 where represents the weights of the relevance factors namely semantic equivalence and context equivalence can be valued by empirical approach  7. Conclusions  Web service discovery is one of the fundamental problems in web service based applications. A lot of efforts have been attained in this problem among them semantic based web service discovery methods has shown encouraging performance. However, after retrieving a set of semantically equivalent web service candidates, which one is the best suitable with respect to users requirements is a potential challenge. In this paper, we studied the possibility of employing context awareness into web service discovery process and proposed a framework to build context for users and providers to capture users real need and capture the providers real intention to some extent. The context in this paper is built by using association rule to mining the frequent pattern from web service composition history. After that, a re-ranking mechanism is proposed for ranking the semantically equivalent web service candidates. It is anticipated that the proposed framework will help to alleviate the confusion for users in selecting the right web service during the web service discovery  8. References  1  UDDI, The UDDI Technical White Paper http://www.uddi.org/pubs/Ir u_UDDI_Technical_White_Paper.p df  2  Xmethods, http://www.xmethods.net  3  H. Song, D. Cheng, A. Messer, and S. Kalasapur, Web Service Discovery Using General Purpose Search Engines, In Proceedings of ICOS2007 conference USA, 2007, pp. 265-271  4  G. Tretola, and E. Zimeo, Structure Matching for Enhancing UDDI Queries Results, In Proceedings of SOCA2007 conference Newport Beach, California, USA, 2007, pp. 21-28  5  E. Stroulia, and Y. Wang, Flexible Interface Matching for Web-Service Discovery, In Proceedings of 4 th WISE conference Rome, Italy, 2003, pp  147-156  6  E. Christensen, F. Curbera, G. Meredith, and S. Weerawarana, Web Services Description Language \(WSDL\ 1.1, W3C Note, 2001  7  K. Sivashanmugam, K. Verma, A. Sheth, and J. Miller Adding Semantics to Web Services Standards, In Proceedings of ICOS2003 conference USA, 2003, pp. 395-401  8  A. Ankolekar, M. Burstein, J. Hobbs, O. Lassila, D. Martin D. McDermott, S. McIlraith, S. Narayanan, M. Paolucci, T Payne, and K. Sycara, DAML-S: Web Service Description for the Semantic Web, In Proceedings of 1 st ISWC conference  Sardinia, Italy, 2002, pp. 348-363  9  W3C, Web Services Semantics -- WSDL-S http://www.w3.org/Submission/WSDL-S    J. de Bruijn, Holger Lausen, A. Polleres, and D. Fensel The Web Service Modeling Language WSML: An Overview In Proceedings of 3 rd ESWC confenrence Budva, Montenegro 2006, pp  590-604    D. Martin, M. Paolucci, S. McIlraith, M. Burstein, D McDermott, D. McGuinness, B. Parsia, T. Payne, M. Sabou, M Solanki, N. Srinivasan, and K. Sycara, Bringing Semantics to Web Services: The OWL-S Approach, In Proceedings of 1 st  International Workshop on Semantic Web Services and Web Process Composition San Diego, California, USA, 2004, pp 26-42  
303 
303 
303 


  S. Overhage, On Specifying Web Services Using UDDI Improvements, In Proceedings of 2002 Net.Objectdays Workshops Germany 2002, pp. 535-550    Y. Li, Y. Liu, L. Zhang, G. Li, B. Xie, and J. Sun, An Exploratory Study of Web Services on the Internet, In Proceedings of ICOS2007 conference USA, 2007, pp. 380-387    E. Tamani, and P. Evripidou, A Pragmatic Methodology to Web Service Discovery, In Proceedings of ICOS2007 conference USA, 2007, pp. 1168-1171   15  B Schilit N. Adams, and R. Want, Context-Aware Computing Applications, In Proceedings of 1 st IEEE Workshop on Mobile Computing Systems and Applications 1994. pp. 85-90  16  P. Brown, J. Bovey, and X. Chen, Context-aware applications: from the laboratory to the marketplace IEEE Personal Communications Vol. 4, No. 5, 1997, pp. 58-64  17  A Dey Understanding and Using Context Personal and Ubiquitous Computing Vol. 5. No. 1, 2001, pp. 4-7    C. Lee, and A. Helal, Context Attributes: An Approach to Enable Context-awareness for Service Discovery, In Proceedings of 2003 Symposium on Applications and the Internet Orlando, Florida, USA, 2003, pp. 22-30    Z. Maamar, S. Mostéfaoui, and Q. Mahmoud, Context for Personalized Web Services, In Proceedings of the 38th Annual Hawaii International Conference on System Sciences Hawaii USA, 2005    Z. Maamar, G. AlKhatib, S. Mostéfaoui, M. Lahkim, and W. Mansoor, Context-based Personalization of Web Services Composition and Provisioning, In Proceedings of 30 th EUROMICRO Conference Rennes, France, 2004, pp. 396-403  21  B Medjahed and Y. Atif, Context-based matching for Web service composition Distributed and Parallel Databases  Vol. 21, No. 1, Springer, 2007, pp. 5-37  22  J. Kuck, and M. Gnasa, Context-Sensitive Service Discovery meets Information Retrieval, In Proceedings of 5 th IEEE International Conference on Pervasive Computing and Communications Workshops White Plains, New York, USA, 2007, pp 601-605  23  Q Sheng B. Benatallah, Z. Maamar, M. Dumas, and A Ngu, Enabling Personalized Composition and Adaptive Provisioning of Web Services, In Proceedings of 16 th CaiSE conference Riga, Latvia, 2004, pp. 322-337  24  S Pokraev J. Koolwaaij and M. Wibbels, Extending UDDI with context-aware features based on semantic service descriptions, In Proceedings of 2003 International Conference on Web Services Las Vegas, Nevada, USA, 2003, pp. 184-190  25  M. Keidl, and A. Kemper, Towards Context-Aware Adaptable Web Services, In Proceedings of the 13 th International Conference on World Wide Web - Alternate Track Papers Posters New York, USA, 2004, pp. 55-65  26  N. Luo, J. Yan, M. Liu, and S. Yang, Towards ContextAware Composition of Web Services, In Proceedings of 5 th  GCC conference Changsha, Hunan, China, 2006, pp. 494-499  27  W. Balke, and M. Wagner, Towards Personalized Selection of Web Services, In Proceedings of the 12 th International Conference on World Wide Web - Alternate Paper Tracks Budapest, Hungary, 2003  28  A. Dey, and G. Abowd, Towards a Better Understanding of Context and Context-awareness, In Proceedings of 2000 Conference on Human Factors in Computing Systems Workshop on The What, Who, Where, When, and How of ContextAwareness Hague, Netherlands, 2000  29  D. Rocco, J. Caverlee, L. Liu, and T. Critchlow, Domainspecific Web Service Discovery with Service Class Descriptions, In Proceedings of ICOS2005 USA, 2005, pp. 481-488  30  N. Kokash, A. Birukou, and V. D'Andrea, Web Service Discovery Based on Past User Experience, In Proceedings of 10 th BIS conference Poznan, Poland, 2007, pp. 95-107  31  Q. Liang, J. Chung, S. Miller, and Y. Ouyang, Service Pattern Discovery of Web Service Mining in Web Service Registry-Repository, In Proceedings of ICEBE'2006 Shanghai China, 2006, pp. 286-293  32  S. Basu, F. Casati, and F. Daniel, Web Service Dependency Discovery Tool for SOA Management, In Proceedings of SCC2007 conference USA, 2007, pp. 684-685  33  R. Agrawal, and R. Srikant, Fast algorithms for mining association rules, In Proceedings of the 20 th VLDB Conference  1994, pp. 487-499  34  J. Hipp, U. Guntzer, and G. Nakhaeizadeh, Algorithms for association rule mining: a general survey and comparison SIGKDD Explorations Vol. 2, No. 1, 2000, pp. 58-64  35  C. Zhang, and S. Zhang, S, Association Rule Mining Models and Algorithms, Springer-Verlag, Berlin Heidelberg 2002 
304 
304 
304 


 Kluwer Academic Publishers Springer, New York 1st edition, 2001 14  S c h e f f e r   T   F i n d i n g  A s s o c i a t i o n  Ru l e s  t h a t  T r a de Support Optimally Against Confidence th The Elements of Statistical Learning self_care_guide/Urogenital/Postate%20Cancer.pdf  Accessed, 25 August, 2008 11  A g r a w a l   R  T   I m i e l i n s k i     A   S w a m i   M i n i n g  association rules between sets of items in large databases, In Proceedings of the 1993 ACM SIGMOD international conference on Management of data  The Netherlands 42 2001 61-95  Ordonez C Association rule discovery with the train and test approach for heart disease predictio n 207\226 216 12 001 13  H a s t i e   T    R  T i b s h i r a n i     J  H   F r i e d m a n   Proceedings of the 5th European Conference on Principles and Practice of Knowlege Discovery in Databases\(PKDD'01 IEEE Transactions on Information Technology in Biomedicine, 10\(2\, 2006. 334 \226 343 001 Freiburg, Germany : SpringerVerlag, 2001. 424-435 15  F l a c h   P  A     L a c h i c h e   N   Co n f i r m a t i o n g u i d e d  discovery of first-order rules with Tertius 10  P h a r m a c y   h t t p    w w w  p h a r m a c y  g o v  m y    


 7. Conclusions  In this paper we have proposed an intelligent and efficient technique to reassess the distances between dynamic XML documents when one or all of the initially clustered documents have changed. After the changes, the initial clustering solution might become obsolete - the distances between clustered XML documents might have changed more or less depending on the degree of modifications \(insert update, delete\hich have been applied. Re-running full pair-wise comparisons on the entire set of modified documents is not a viable option, because of the large number of redundant operations involved Our proposed technique allows the user to reassess the pair-wise XML document distances, not by fully comparing each new pair of versions in the clustering solution, but by determining the effect of the temporal changes on the previously known distances between them. This approach is both time and I/O effective, as the number of operations involved in distance reassessing is greatly reduced  References  1  Beringer, J. and H\374llermeier, E., Online clustering of parallel data streams Data and Knowledge Engineering 58\(2\,  2006, 180-204 2  Catania, B. and Maddalena A., A Clustering Approach for XML Linked Documents, Proceedings of the 13th International Workshop on Database and Expert Systems Applications \(DEXA\22202\, IEEE 2002 3  Chen, M.S., Han, J. and Yu, P., Data Mining: An Overview from Database Perspective, IEEE Transactions on Knowledge and Data Engineering vol. 8, 1996, 866-883 4  Cormen, T., Leiserson, C. and Rivest, R Introduction to algorithms, MIT Press, 1990 5  Costa, G., Manco, G., Ortale, R. and Tagarelli, A., A tree-based Approach to Clustering XML documents by Structure, PAKDD 2004, LNAI 3202, 137-148 Springer 2004 6  Dalamagas, T., Cheng, T., Winkel, K.J. and Sellis, T 2004, Clustering XML documents by Structure SETN 2004, LNAI 3025, 112-121, Springer 2004 7  Ester, M., Kriegel, H.P., Sander, J., Wimmer,M. and Xu, X., Incremental Clustering for Mining in a Data Warehousing Environment, Proc.of the 24 th VLDB Conference, New York, USA, 1998 8  Garofalakis, M., Rastogi, R., Seshadri, S. And Shim K., Data Mining and the Web: Past, Present and Future Proceedings of WIDM 99 Kansas, US, ACM 1999 9  Mignet, L., Barbosa, D. and Veltri, P., The XML web : a first study, In Proceedings of the 12 th  International Conference on WWW, 500-510 2003   Nayak, R., Xu, S., XCLS: A Fast and Effective Clustering Algorithm for Heterogeneous XML Documents, In Proceedings of the 10 th Pacific-Asia Conference on Advances in Knowledge Discovery and Data Mining, Singapore, LNCS 3918, 2006   Rusu, L.I., Rahayu, W. and Taniar, D., A methodology for Building XML Data Warehouses International Journal of Data warehousing Mining, 1\(2 67-92, 2005   Rusu, L.I., Rahayu, W. and Taniar D.,  Maintaining Versions of Dynamic XML Documents, In Proceedings of the 6th International Conference on Web Information Systems Engineering, New York NY, USA, November 20-22, 2005, LNCS 3806   Rusu, L.I., Rahayu, W. and Taniar, D., Warehousing Dynamic XML Documents, In Proceedings of the 8 th  International Conference on Data Warehousing and Knowledge Discovery \(DaWaK 2006 LNCS 4081 Springer, 175-184, 2006   Shen, Y. and Wang, B., Clustering Schemaless XML documents, CoopIS / DOA/ODBASE 2003, LNCS 2888, 767-784, Springer 2003   Yoon, J. P., Raghavan, V., Chakilam, V., and Kerschberg, L., BitCube: A Three-Dimensional Bitmap Indexing for XML Documents J. Intel. Inf Syst 17, 2-3 \(Dec. 2001\, 241-254   XML data repository, online at http www.cs.washington.edu / research / projects / xmltk xmldata  
456 
456 


5 Related Work There exists extensive previous work on both the mining of software repositories and on the use of clustering algorithms in software engineering This discussion focuses on the most similar and recent work in the area of software evolution Mining Software Repositories Our technique was partially inspired by the work of Zimmermann et al and Y ing et al 17 on the mining of association rules in change history As described in Section 1 we sought to expand the technique to be able to recommend larger but less precise clusters of elements to guide program navigation Bouktif et al also investigated how to recommend cochanges in software development As opposed to the work cited above Bouktif et al used change patterns instead of association rules Also their approach does not attempt to reconstruct transactions and can consider associated 002les that were changed in different transactions ChangeDistiller is a tool to classify changes in a transaction into 002ne-grained operations e.g addition of a method declaration and determines how strongly the change impacts other source code entities Our approach uses similar repository analysis techniques but is focused on providing task-related information as opposed to an overall assessment of a system's evolution Finally repository mining can also be used to detect aspects in the code In this conte xt aspects are recurring sets of changed elements that exhibit a regular structure Aspects differ from the clusters we detect in the regular structure they exhibit which may not necessarily align with the code that is investigated as part of change tasks Clustering Analysis The classical application of clustering for reverse engineering involves grouping software entities based on an analysis of various relations between pairs of entities of a given version of the system Despite its long and rich history  e xperimentation with this approach continues to this day For example Andreopoulos et al combined static and dynamic information K uhn et al used a te xtual similarity measure as the clustering relation and Christl et al used clustering to assist iterative semi-automated reverse engineering The main dif ferences b e tween most clusteringbased reverse engineering techniques and the subject of our investigation is that the entities we cluster are transactions rather than software entities in a single version of a system For this reason our analysis is based strictly on the evolving parts of the system Both Kothari et al and V an ya et al 15 recently reported on their use of clustering to study the evolution of software systems The idea of using change clusters is the same in both works and ours but the purpose of the work is different Kothari et al use change clusters to uncover the types of changes that happened e.g feature addition maintenance etc during the history of a software system Vanya et al use change clusters which they call evolutionary clusters to guide the partitioning of a system that would increase the likelihood that the parts of the system would evolve independently In contrast we cluster transactions based on overlapping elements not 002les to recommend clusters to support program navigation as opposed to architectural-level assessment of the system Finally Hassan and Holt evaluated on 002ve open source systems the performance of several methods to indicate elements that should be modi\002ed together This study found that using historical co-change information as opposed to using simple static analysis or code layout offered the best results in terms of recall and precision The authors then tried to improve the results using 002ltering heuristics and found that keeping only the most frequently cochanged entities yielded the best results As opposed to our approach the evaluated 002ltering heuristics were only applied on entities recovered using association rules and not using clustering techniques The focus of their study was also more speci\002c as they recommend program elements that were strictly changed  as opposed to recommending elements that might be inspected by developers 6 Conclusion Developers often need to discover code that has been navigated in the past We investigated to what extent we can bene\002t from change clusters to guide program navigation We de\002ned change clusters as groups of elements that were part of transactions or change sets that had elements in common Our analysis of close to 12 years of software change data for a total of seven different open-source systems revealed that less than 12 of the changes we studied could have bene\002ted from change clusters We conclude that further efforts should thus focus on maximizing the quality of the match between the current task and past transactions rather than 002nding many potential matches Our study has already helped us in this goal by providing reliable evidence of the effectiveness of some 002ltering heuristics and useful insights for the development of additional heuristics Acknowledgments The authors thank Emily Hill and Jos  e Correa for their advice on the statistical tests and the anonymous reviewers for their helpful suggestions This work was supported by NSERC 
25 
25 
25 
25 
25 


References  B Andreopoulos A An V  Tzerpos and X W ang Multiple layer clustering of large software systems In Proc 12th Working Conf on Reverse Engineering  pages 7988 2005  S Bouktif Y G Gu  eh  eneuc and G Antoniol Extracting change-patterns from cvs repositories In Proc 13th Working Conf on Reverse Engineering  pages 221230 2006  S Breu and T  Zimmermann Mining aspects from v ersion history In Proc 21st IEEE/ACM Int'l Conf on Automated Software Engineering  pages 221230 2006  A Christl R K oschk e and M.-A Store y  Equipping the re\003exion method with automated clustering In Proc 12th Working Conf on Reverse Engineering  pages 8998 2005  D 020 Cubrani  c G C Murphy J Singer and K S Booth Hipikat A project memory for software development IEEE Transactions on Software Engineering  31\(6 465 2005  B Fluri and H C Gall Classifyi ng change types for qualifying change couplings In Proc 14th IEEE Int'l Conf on Program Comprehension  pages 3545 2006  A E Hassan and R C Holt Replaying de v elopment history to assess the effectiveness of change propagation tools Empirical Software Engineering  11\(3 2006  D H Hutchens and V  R Basili System s tructure analysis Clustering with data bindings IEEE Transactions on Software Engineering  11\(8 1985  D Janzen and K De V older Na vig ating and querying code without getting lost In Proc 2nd Int'l Conf on AspectOriented Software Development  pages 178187 2003  J K ot hari T  Denton A Shok ouf andeh S Mancoridis and A E Hassan Studying the evolution of software systems using change clusters In Proc 14th IEEE Int'l Conf on Program Comprehension  pages 4655 2006  A K uhn S Ducasse and T  G  021rba Enriching reverse engineering with semantic clustering In Proc 12th Working Conf on Reverse Engineering  pages 133142 2005  M P  Robillard T opology analysis of softw are dependencies ACM Transactions on Software Engineering and Methodology  2008 To appear  M P  Robillard and P  Mangg ala Reusing program in v estigation knowledge for code understanding In Proc 16th IEEE Int'l Conf on Program Comprehension  pages 202 211 2008  J Sillito G Murph y  and K De V older Questions programmers ask during software evolution tasks In Proc 14th ACM SIGSOFT Int'l Symposium on the Foundations of Software Engineering  pages 2334 2006  A V an ya L Ho\003and S Klusener  P  v an de Laar and H van Vliet Assessing software archives with evolutionary clusters In Proc 16th IEEE Int'l Conf on Program Comprehension  pages 192201 2008  N W ilde and M C Scully  Softw are reconnaissance Mapping program features to code Software Maintenance Research and Practice  7:4962 1995  A T  Y ing G C Murph y  R Ng and M C Chu-Carroll Predicting source code changes by mining change history IEEE Transactions on Software Engineering  30\(9 586 2004  A Zeller  The future of programming en vironments Integration synergy and assistance In Proceedings of the 29th International Conference on Software Engineering The Future of Software Engineering  pages 316325 2007  T  Zimmermann and P  W eißgerber  Preprocessing C VS data for 002ne-grained analysis In Proc 1st Int'l Workshop on Mining Software Repositories  pages 26 May 2004  T  Zimmermann P  W eißgerber  S Diehl and A Zeller  Mining version histories to guide software changes In Proc 26th ACM/IEEE Int'l Conf on Software Engineering  pages 563572 2004 A Clustering Algorithm This algorithm is not sensitive to whether a given program element exists or not in a given version of a program For example if method m exists in one version it is considered a valid program element even if it is removed in a later version In the rest of this section we use the term program element to refer to the uniquely identifying representation of the element e.g a Java fully-quali\002ed name Let T be a transaction modeled as a set of program elements changed together during the history of a software system Let T be a sequence of transactions In this algorithm a cluster is also modeled as a set of elements 1 Input  T  A sequence of transactions 2 Parameter  M IN O VERLAP  A positive non-zero value indicating the minimum overlap between two transactions in a cluster 3 Var  C  A set of clusters initially empty 4 for all T i 2 T do 5 MaxOverlap  0 6 MaxIndex  000 1 7 for all C j 2 C do 8 if j C j  T i j  MaxOverlap then 9 MaxOverlap  j C j  T i j 10 MaxIndex  j 11 end if 12 end for 13 if MaxIndex   0  MaxOverlap 025 M IN O VERLAP  then 14 C MaxIndex   C MaxIndex  T i  15 else 16 NewCluster  T i 17 C  C  f NewCluster g 18 end if 19 end for 20 return C B Systems Analyzed System home pages last veri\002ed 7 May 2008 Ant ant.apache.org Azureus azureus.sourceforge.net Hibernate www.hibernate.org JDT-Core www.eclipse.org/jdt/core JDT-UI www.eclipse.org/jdt/ui Spring springframework.org Xerces xerces.apache.org 
26 
26 
26 
26 
26 


