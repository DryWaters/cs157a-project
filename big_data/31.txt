AIRPORT SURFACE COLLISION WARNING SYSTEM IMPLEMENTATION Joseph W Ianniello Raymond M Kruaek United Technologies Norden Systems Inc P.O Box 5300 Norwalk Connecticut USA 06856 Phone 203\852-5000 FAX 203 852-7698 ABSTRACT The Airport Movement Area Safety System AMASS is a ground traffE control advisory system It tracks aircraft and other surface targets using data from two available sensors theairportsurfacera~,andthete~surve~lancera The system stores an 
adaptive data base that defmes the airport geography and Mic rules AMASS algorithms use the airport configuration data base and aircraft track files to test for nearly one thousand hazards AMASS issues audible warnings and displays the location of the aircraft involved on existing monitors This paper describes system operation technology and future enhancements. Preproduction system testing and validation at San Francisco International Airport SFO is also 
descn\222bed AMASS isanoutgrowthofNordenresearchanddevelopment The preproduction program was fundedby theunited States Federal Aviation Association FAA AIRPORT SURFACE TRAFFIC AUTOMATION OVERVIEW Norden developed and demonstrated the Runway Incursion Monitoring RIM system on IR&D funding in 1990 The FAA\222s intenst was heightened when three major airport surface accidents occurred in the United States between January 1990 and February 199 1 Reference  11 describes these accidents The AMASS program was funded 
by the FAA to complete the development of these concepts AMASS is a computer based system to help controllers managetrafficonairportsurfaces Itcanbeinstalledwithout disrupting airport operations The following are key system attributes a AMASS does not require additional aircraft equipment This eliminates the delays caused by equipment defmition development and installation b AMASS has minimum impact on airport operation during installation Equipment is addedin theequipment mm of the control tower, not 
on airport surfaces This is an important system attribute since adding equipment on airport surfaces involves large expenditures and disruptions to airport operations c AMASS is a modular design that enables future enhancements and additional sensors It can be upgraded to be compatible with other systems such as the Global Positioning Satellite GPS system d AMASS allows custom installation at 
different airports and is capable of easy adaptation to changing airport configurations both on a long range and daily basis Figure 1 is a simplified system block diagram For the initial installation two existing systems monitor traffic conditions  the Airport Surface Detection Equipment ASDE-3 radar and the Automated Radar Terminal System ARTS ASDE-3 systems are being installed at 29 United States airportS Additionalinstallationsareplanned.ASDE.3 
images theairportsurf~eandprovi~acompletemapupdateonce per second ARTS is an existing FAA system It provides data on aircraft being monitored by the Airport Surveillance Radar ASR which includes positional status and identificationinfarmationofaplaoachingaircraftInaddition ARTS providesrunway assignments for parallel approaches Progra\224able,highspeedprocessarsgroupsensardatainto target clusters They perform target filtering dewtion and compute target location size and velocity These processors maintain track reports for each target A general purpose computer performs the airport 
configuration and adaptation functions estimates future target positions and tests for incursions Thealertinformationprovidedby AMASS isbothvisualand audible Visual alerts identify areas with potential incursionS highlighted on existing controllers\222 displays Audible alerts are voice messages that announce the incursion type and location. Alert processing is done in the programmable high speedprocessors 425 0-7803-1343-7/93 3.00 1993 IEEE            __  


DATA LINK IEZLF OAKLAND CA I POR AUDleLE ALARMS GRWND ATC TOWER EQUIPMENT ROOM Figure 1 AMASS Overview SUBSYSTEM OPERATION Airport Surface Detection Equipment Figure2isasimplifiedblockdiagramoftheASDE-3 system ASDE provides a radar image overlaid on an airport configurationmapon themonitorsusedby groundcontrollers The major characteristics of the ADSE-3 system are a The RF transmission is at Ku band The transmitter has wide frequency agility and uses circular polarization The high RF frequency results in a 0.25 degree beam width using a 5-meter antenna This resolution provides fine imaging details that can enhance feature extraction in future implementations. The antenna is housed in an aerodynamically designed heated rotodome The rotodome sheds ice, rain, sleet and snow The circular polarization, frequency agility and rotodome enhance the Ku-band performance in precipitation The Federal Communications Commission FCC frequency allocation imposes Ku-band operation b The antenna rotates at 60 revolutions per minute The one-second update of the complete airport surface map maintains target tracks to the accuracy necessary to detect and project future positions c The display subsystem provides a flexible graphics capability that 1 Stores and displays the radar image 2 Stores and displays the airport configuration runways, taxiways, buildings,etc 3 Mixestheradarimagewiththeairportconfiguration 4 Provides independently controlled displays to observe different areas of the airport 5 Enables up to three windows on each display 6 Provides zoom, expand and panning capabilities 7 Provides an extemal video port AMASS uses the ASDE-3 display to identify the location of the alert and the aircraft involved This information is superimposed on monitors through the extemal video port ASDEJ Figure 2 Simplified Block Diagram of the ASDE-3 System 426 


AMASS was installed at SFO to verify its operation The system elements described in the following sections are for the SFO installation Automated Radar Terminal System The Automated Radar Terminal System \(ARTS computer used for SFO is at the Terminal Radar Approach Control Facility CON in Oakland, California. Reference 2 is an overview of the United States Air Traffic Control ATC system The Airport Surveillance Radar ASR detects in flight aircraft both by primary radar returns and by interrogating the on-board beacon transponder The transponder provides other aircraft flight information such as altitude, aircraft identity landing runway number etc AMASS equipment at the TRACON location has a listen only interface with the ARTS computer and fdters ARTS data to identify aircraft approaching the airport A microwave data link transfers this dataoveramodem to the AMASS equipment at the airporL The ARTS processor shown in Figure 2 receives this data and formats track reports for AMASS correIation and safety logic processing Airport Movement Area Safety System Figure 3 is a photograph of the AMASS equipment The system installed at SFO monitors active airport areas  runways and taxiways The ARTS data contains aircraft identification tags that can be affuted to landing aircraft symbols on ground controller displays Future implementations will incorporate additional sensors to expand the area of coverage enable all aircraft and vehicle identification, and automatically communicate with pilots Sensorlnput Processing The sensor input processing detects and correlates ASDE-3 and ARTS targets. The correlation function is performed from scan to scan of each sensor, and between sensors The processing depends upon the particular sensor characteristics, but in general consists of the following a Filte~goperationstorejectclutterandunwantedtargets and resolve ambiguous reports b Computations and logic to associate agiven grouping of rems as a single target, and identify new targets c Operations to compute the centroid and extent of image groupings d Tracking algorithms to correlate targets f\224 different reports of a single sensor The processed sensor information forms track reports containing target coordinates size identification aircraft type,assignedrunway,etc.Thesetrackreportsaretransferred to the computer subsystem Compurer Subsystem The computer subsystem performs safety logic processing controls system operation and manages the airport configuration data base Reference 3 details all the tasks of the computer subsystem This section describes the safety logic processing that detects andidentifies hazardous situations For each target track report the safety logic uses the target location velocity,acceleration,andmovementstatetoassess the traffic situation and applies algorithms todetect incursions and rule violations For example, assume an aircraft Target A is departing and a second aircraft Target B is on a taxiway approachingtherunwayasdepictedinFigure4.The safety logic must identify the situation determine if they can simultaneously arrive withinasafe window of theintersection and issue the appropriate alert Figure 3 AMASS Cabinet 427 


Figure 4 Crossing Runway Situation The safety logic uses a geographic data base description of the airport and the target data in the track reports to identify and classify the positional situation of aircraft For each situation a table defines the algorithm appropriate to identify problems Each table pea two targets A and B in possible conflict with each other. The movement state \(departure, departure abort landing taxi arrival stopped of each target is determined along with its direction of travel along a surface A subroutine declares either a 223problem\224 or 223no problem\224 at the table intersection of each pair of targets. This subroutine containsparametersthatspec~yminimumseparationdistance and/or time and estimates the location of each target after a specified time There are two cells  problem and no problem  at each movement state intersection because the software may take different actions depending on the situation For example, the software may declare 223no problem\224 but a caution may be issued when there are violations of separation parameters even though a collision is not probable The two classifications also provide amechanism for placing 223hold bard\222oncontrollersdisplaysor in the futute,amessage on aircraft displays Fixed hold bars at intersections indicate that access to the runway is restricted and are a visual reminder to all controllers that a runway is occupied Moving hold bars are placed in front of aircraft whose movement should be restricted For example a moving hold bar is placed in front of an aircraft in position-and-hold when an aircraft is departing on an intersecting runway There are four situation tables implemented in AMASS These include 1 Two targets on a runway 2 Two targets on separate, but intersecting runways 3 Two targets one on a taxiway and one on an intersecting runway, and 4 A single target on a runway or taxiway Additional tables can be added The safety logic processing is performed once every second TEST AND VALIDATION Two formal testing programs have been used to validate AMASS performance Factory Demonstration The fust demonstration was afactory demonstrationcompleted in October 1992 to validate the safety logic processing, the alarm generation and the interface for adapting the airport configuration Data recording and playback equipment captured aircraft movement scenarios at SFO Test scenarios developed from these recorded tracks simulate single and two target test traffic situations and exercise the safety logic. In addition a synthetic target track is actuated by a computer 223mouse.\224 The mouse designates starting position time and direction to simulatereal time-traffic situations One hundred incursions were demonstrated to teams of airtraffi\222i controllers program management personnel MIT Lincoln Laboratory consultants and MITRE Corporation consultants The demonstration was considered a success Field Validation The second test was a Field Validation at SFO employing an uncommissioned ASDE-3 and a commissioned ARTS installed at the TRACON center in Oakland California An Arts Interface Unit installed at Oakland used a modem to transfer data to SFO The demonstration used live operational data but was off-line so as not to interfere with airport operations The testing at SFO was successful and AMASS production equipment fabrication is expected to begin in thenear future EQUIPMENT FEATURES AND OPTIONS The computer subsystems  in AMASS proper and in the ARTS Interface Unit located at the TRACON site  are rugged personal computers. Table 1 lists the specifications 428 


Table 1 Equipment Specifications CPU RAM MASS STORAGE PERIPHERALS LANGUAGE AMASS Proper Intel 486 DX 25 MHz 4Mbytes 80 Mbytes Fixed Removable 2lOMbyteS Voice Processor Special Interface WATCOM CP86 ARTS Interface Unit  Intel 486 DX 25 MHz 4Mbytes 120 Mbytes Fixed Modem WATCOM CPS6 TMS 320/40 Digital Signal Processors DSPs perform the input sensor voice and display processing A 6-foot, 19-inch cabinet see Figure 3\houses the on-site AMASS equipment. The cabinet contains five 6 by 9-inch circuit card assemblies and an additional 2 display interface circuit cards for each ASDE-3 display processor ASDE-3 can have a maximum of 8 display processors to support up to 24 controller display monitors\The digital technology is dualin-linepackages.NinethousandgateFieldProgrammable Gate Arrays perform many of the logic implementations ENHANCEMENTS Norden is developing techniques to automatically identify aircraft and other airport vehicles. This will provide flight numbers on controller displays and accurate target size information in target track reports Aircraft size information enables the detection of interference between two aircraft Flight numbers attached to the aircraft radar video on the monitor help controllers identify aircraft quickly Reference U describes the use of runway lights to provide advisory information to pilots AMASS could control these lights however Norden is developing a method to communicate directly with the aircraft display This will be less costly and less disruptive to airport operations than installing runway lights AMASS presently monitors aircraft on runways and major taxiway intersections It is compatible with future sensor enhancements to extend coverage beyond the movement area Radar as a Sensor has the important advantage that it does not require any special equipment on the aircraft or other targets The use of a sensor that requires equipment on aircraft and airport vehicles is more than a monetary burden A system requiring active participation by targets cannot detect targets with failed responders, or targets that have no responders such as intruding vehicles and debris on airport surfaces The radar sensor has the disadvantage that the retums are highly dependent on the reflectivity of the targets that can vary as a function of the aspect angle between the target and the radar antenna AMASS installed systems will probably incorporate at least two or more sensor types in the future to address these issues Work is underway to integrate the AMASS concept into a complete solution for airport surface management Interface to the aircraft Global Position System GPS will be an important future addition SUMMARY This paper describes the AMASS concept andimplementation This system is a pioneering experiment into the application of electronic technology to ensure the safety of airport surface traffic Also presented is a brief discussion of future improvements and enhancements to the system Thelessonslearnedandresults from testingthepreproduction system at San Francisco International Airport indicate that AMASS is conceptually sound and the implementation will provide aid to airport ground controllers REFERENCES Ervin E Lyons The Automation of Swface Trafi Lights to Improve Airport Safety New York IEEE Systems Magazine pages 14 to 20 March 1993 Tekla S Perry Special Report Air Trafic Control IEEE Spectrum, pages 22 to 36 February 1991 Marshall Watnick and Joseph W Ianniello Airport Movement Area Safety System Proceedings of the 1 1 th Digital Avionics Systems Conference pages 549 to 552, October 1992 429 


3 The A priori w a s r un on the d atabas e o f  D+d ransactions and also on d transactions The time taken in the two cases was added up Since we are 002nding large itemsets in  D+d swellasin d  the above comparison is justi\002ed The Speedup ratio S was calculated as follows  S   time f or Apr ior i D  d  time f or Apr ior i d  time f or Adaptiv e D  d In our experiments the speed-up ratios ranged from 4.2 to 7.6 when the test data was generated using method 1 above and from 3.0 to 6.3 when method 2 was used It was observed in the experiments that the size of the largest itemset was 7 while the number of scans of the incremental database required was only 4 The number of scans of the original database was 0 or 1 The speed-up ratios obtained in our simulation results may appear lower than those reported for the FUP 4 a l gori t h m The r eas on coul d be the nature of test data and the details of coding We also note that we did not include pruning of the databases in our algorithm We stress here that since we do not scan original database more than once and that only the incremental database is scanned generally twice only it will be scanned multiple times only when it is signi\002cantly different from the original database in the rules it contains we expect to have better performance for the adaptive algorithm 6 Conclusions The real-world databases from which useful patterns and rules are mined are dynamic in nature Periodically the organizational database is updated and it may become necessary to carry out the mining process again on the updated database Since mining is a costly activity typically requiring multiple database scans process of incremental mining is proposed by researchers to maintain the rules discovered during previous mining processes In this paper we have proposed an adaptive algorithm for incremental mining We have tried to categorize different types of increments Primarily the increments could be representing similar business trends as before or signi\002cantly different trends The algorithm adapts itself by 002rst 002nding the nature of the increment It then decides whether to scan the original database for updating the rules which were obtained in earlier mining processes The algorithm not only updates rules discovered from the original database but also mines rules which may be present in the increment alone These rules may be due to new business decisions or due to changing customer preferences or seasonal trends It is important to extract them explicitly as new trends to help in business decisions It must be noted that these rules found from the increment alone may not have the required support in the updated database References  R  A gra w al T  I mielinski and A  S w a mi Database mining A performance perspective In IEEE Trans Knowledge and Data Engineering  1993 2 R  A g r a w al T  I mielin sk i an d A  S w a mi M in ing association rules between sets of items in large databas es In Proc ACM SIGMOD  1993  R  A gra w al and R  S ri kant h F a s t al gori t h ms for mining association rules in large databases In Proc 20th Int'l Conf Very Large Data Bases  1994  D a v i d W  C h eung J i a w ei H a n V i ncent T  N g and C.Y.Wong Maintenance of discovered association rules in large databases An incremental updating approach In 12th IEEE International Conference on Data Engineering  1996  D a v i d W  C h eung S  D  Lee and B  K ao A general incremental technique for maintaining discovered association rules In Proceedings of Database Systems for Advanced Applications DASFAA'97  Melbourne Australia pp 185194 1997 6 J o n g So o P ark  Min g Sy an Ch en  a n d Ph ilip S Yu An effective hash-based algorithm for mining association rules In Proceedings of ACM SIGMOD conference  San Jose California 1995  C hri s P  R a i n s f ord Muk e s h K  Mohani a and John F Roddick A temporal windowing technique for the incremental maintenance of association rules In 8th International Database Workshop Data Mining Data Ware housing and Client/Server Databases  1997  H  T oi v onen S a mpl i n g l ar ge dat a bas e s f or as sociation rules In Proceedings of Very Large Data Bases Conference  Mumbai India pp 134-145 1996 6 


Since we can only decrease the value of the subtractive term by such a transformation, we have not decreased the value of the expression Now, given and it is easy to show that  and Because the expression is anti-monotone in and and monotone in we can replace  with  with and with without decreasing its value We are now left with an expression identical to the expression in the theorem, except for occurring in place of Taking the derivative of this expression with respect to and solving for 0 reveals it is maximized when Note that for any rule derivable from  must fall between and Given this restriction on the equation is maximized at  We can therefore replace with without decreasing its value. The resulting expression, identical to that in the theorem statement, is thus an upper-bound on  To apply this result to prune a processed group  Dense-Miner sets to since the required supports are known. Computing a tight value for  where is the item in that minimizes this support value\ is not possible given the support values available in the candidate set of and its ancestors. Dense-Miner therefore sets to an upperbound on as computed by the following function when has a parent and where denotes the single item within the itemset  otherwise This computation requires only the value of which was previously computed by the parent, and the supports of candidate set members   and in order to compute  In applying theorem 5.6 to prune an unprocessed group Dense-Miner computes as above. For it lacks the necessary support information to compute so instead it computes a lowerbound on the value as described in section 5.3 5.5  Bounding support The value of is comparatively easy to compute because support is anti-monotone with respect to rule containment. For Dense-Miner simply uses the value of Other anti-monotone constraints, e.g those discussed in [1  c a n b e e x p l oi te d w i th s i m ila r  e a s e  6.     Item ordering The motivation behind reordering tail items in the Generate-Next-Level function is to, in effect, force unpromising rules into the same portion of the search tree. The reason this strategy is critical is that in order for a group to be prunable every sub-node of the group must represent a rule that fails to satisfy one of the constraints. An arbitrary ordering policy will result in a roughly even distribution of rules that satisfy the constraints throughout the search tree, yielding little pruning opportunities We experimented with several different ordering policies intended to tighten the bounds provided by the pruning functions. The strategy we found to work best exploits the fact that the computations for and both require a value and the larger the value allowed for the tighter the resulting bound. The idea then is to reorder tail items so that many sub-nodes will have a large value for This is achieved by positioning tail items which contribute to a large value of last in the ordering since tail items which appear deeper in the ordering will appear in more sub-nodes than those tail items appearing earlier. We have found that the tail items which contribute most to this value tend to be those with small values for This can be seen from Observation 5.4 which yields a larger lower-bound on when the value of summed over every tail item is small. The policy used by Dense-Miner is therefore to arrange tail items in decreasing order of  7.     Post-processing The fact that Dense-Miner finds all frequent, confident large-improvement rules and places them into follows from the completeness of a set-enumeration tree search and the correctness of our pruning rules, as established by the theorems from Section 5. Dense-Miner must still post-process because it could contain some rules that do not have a large improvement Removing rules without a large improvement is non-trivial because improvement is defined in terms of all the proper sub-rules of a rule, and all such rules are not necessarily generated by the algorithm. A naive post-processor for removing rules without a large improvement might, for every mined rule, explicitly compute its improvement by generating and testing every proper sub-rule. Because Dense-Miner is capable of mining many long rules, such an approach would be too inefficient Instead, the post-processor first identifies some rules that do not have a large improvement by simply comparing them to the other rules in the mined rule set It compares each rule to every rule such that and  If ever it is found that then rule is removed because its improvement is not large This step alone requires no database access, and removes almost all rules that do not have a large improvement To remove any remaining rules, the post-processor performs a set-enumeration tree search for rules that could potentially prove some rule in does not have a large improvement. The main difference between this procedure and the mining phase is in the pruning strategies applied For this search problem, a group is prunable when none of its derivable rules can prove that some rule in lacks a large improvement. This is determined by either of the following conditions rr s a 0 263 y  y 263b  b 243 a  y  b  a  0 b  b y  y x  x x  x  y 2 y b   gx  sup hg  C 310  minsup x  x minmax y 2 y b minsup  sup hg  C 310    x  x  x imp r  g y sup hg  tg  c 330  310\310  b sup hg  i m 226  i m 330 c 330   310  i m hg  g b sup hg  i m 226  i m 330 c 330   310  f b g  min f b g p sup hg p  i 330 c 330   310     g g p i hg  hg p  226 f b g  245  f b g p  hg  hg  C 310 hg p  hg p  C 310 sup hg p  i 330 c 330   310  g b y sup hg  tg  c 330  310\310  usup g  usup g  sup hg  C 310  uconf g  uimp g  y sup hg  tg  c 330  310\310  243 y sup hg  tg  c 330  310\310  sup hg  tg  c 330  310\310  sup hg  i 330 c 330   310  sup hg  tg  c 330  310\310  sup hg  i 330 c 330   310  sup hg  i 330 c 330   310  R R R r 1 R 316 r 2 r 2 R 316 r 2 r 1 314 conf r 1  conf r 2  226 minimp  r 1 R g R 


225 There exists no rule for which  225 for all rules such that  After groups are processed, any rule is removed if there exists some group such that and Because the search explores the set of all rules that could potentially prove some rule in does not have a large improvement, all rules without a large improvement are identified and removed Our post-processor includes some useful yet simple extensions of the above for ranking and facilitating the understanding of rules mined by Dense-Miner as well as other algorithms. The improvement of a rule is useful as an interestingness and ranking measure to be presented to the user along with confidence and support. It is also often useful to present the proper sub-rule responsible for a rule\222s improvement value. Therefore, given an arbitrary set of rules, our post-processor determines the exact improvement of every rule, and associates with every rule its proper subrule with the greatest confidence \(whether or not this subrule is in the original rule set\le-sets that are not guaranteed to have high-improvement rules \(such as those extracted from a decision tree\, the sub-rules can be used to potentially simplify, improve the generality of, and improve the predictive ability of the originals 8.     Evaluation This section provides an evaluation of Dense-Miner using two real-world data-sets which were found to be particularly dense in [4  1 The first data-set is compiled from PUMS census data obtained from It consists of 49,046 transactions with 74 items per transaction, with each transaction representing the answers to a census questionnaire. These answers include the age, taxfiling status, marital status, income, sex, veteran status, and location of residence of the respondent. Similar data-sets are used in targeted marketing campaigns for identifying a population likely to respond to a particular promotion. Continuous attributes were discretized as described in  though no frequently occurring items were discarded. The second data-set is the connect-4 data-set from the Irvine machine learning database repository It consists of 67,557 transactions and 43 items per transaction This data-set is interesting because of its size, density, and a minority consequent item \(\223tie games\224\ accurately predicted only by rules with low support. All experiments presented here use the \223unmarried partner\224 item as the consequent with the pums data-set, and the \223tie games\224 item with the connect-4 data-set; we have found that using other consequents consistently yields qualitatively similar results Execution times are reported in seconds on an IBM IntelliStation M Pro running Windows NT with a 400 MHZ Intel Pentium II Processor and 128MB of SDRAM. Execution time includes runtime for both the mining and post-processing phases The minsup setting used in the experiments is specified as a value we call minimum coverage where In the context of consequent constrained association rule mining, minimum coverage is more intuitive than minimum support, since it specifies the smallest fraction of the population of interest that must be characterized by each mined rule 8.1  Effects of minimum improvement The first experiment \(Figure 5\hows the effect of different minimp settings as minsup is varied. Minconf in these experiments is left unspecified, which disables pruning with the minimum confidence constraint. The graphs of the figure plot execution time and the number of rules returned for several algorithms at various settings of minimum support Dense-miner is run with minimp settings of .0002, .002, and 02 \(dense_0002, dense_002, and dense_02 respectively We compare its performance to that of the Apriori algorithm optimized to exploit the consequent constraint \(apriori_c This algorithm materializes only those frequent itemsets that contain the consequent itemset The first row of graphs from the figure reveals that apriori_c is too slow on all but the greatest settings of minsup for both data-sets. In contrast, very modest settings of minimp allow Dense-Miner to efficiently mine rules at far lower supports, even without exploiting the minconf constraint. A natural question is whether mining at low supports is necessary. For these data-sets, the answer is yes simply because rules with confidence significantly higher than the consequent frequency do not arise unless minimum coverage is below 20%. This can be seen from Figure 7 which plots the confidence of the best rule meeting the minimum support constraint for any given setting 2 This property is typical of data-sets from domains such as targeted marketing, where response rates tend to be low without focusing on a small but specific subset of the population The graphs in the second row of Figure 5 plot the number of rules satisfying the input constraints. Note that runtime correlates strongly with the number of rules returned for each algorithm. For apriori_c, the number of rules returned is the same as the number of frequent itemsets containing the consequent because there is no minconf constraint specified. Modest settings of minimp dramatically reduce the number of rules returned because most rules in these data-sets offer only insignificant \(if any\ predictive advantages over their proper sub-rules. This effect is particularly pronounced on the pums data-set, where a minimp setting of .0002 is too weak a constraint to keep the number of such rules from exploding as support is lowered. The increase in runtime and rule-set size as support is lowered is far more subdued given the larger \(though still small\inimp settings 1 Both data-sets are available in the form used in these experiments from http://www.almaden.ibm.com/cs/quest rR 316 hg  r 314 conf r   uconf g  226 minimp 263 rR 316 hg  r 314 rR 316 g hg  r 314 conf r   conf hg   226minimp  R http://augustus.csscr.washington.edu/census/comp_013.html http://www.ics.uci.edu/~mlearn/MLRepository.html 2 The data for this figure was generated by a version of Dense-Miner that prunes any group that cannot lead to a rule on the depicted support/confidence border. This constraint can be enforced during mining using the confidence and support bounding techniques from section 5 minimum coverage minsup sup C  244  


FIGURE 5 Execution time and rules returned versus minimum coverage for the various algorithms FIGURE 6 Execution time of dense_0002 as minconf is varied for both data-sets. Minimum coverage is fixed at 5% on pums and 1% on connect-4 FIGURE 7 Maximum confidence rule mined from each data-set for a given level of minimum coverage   1 10 100 1000 10000 100000 0 10 20 30 40 50 60 70 80 90 Execution time \(sec Minimum Coverage connect-4 apriori_c  dense_0002   dense_002   dense_02    1 10 100 1000 10000 100000 1e+06 0 10 20 30 40 50 60 70 80 90 Number of Rules Minimum Coverage connect-4 apriori_c  dense_0002   dense_002   dense_02    1 10 100 1000 10000 100000 0 10 20 30 40 50 60 70 80 90 Execution Time \(sec Minimum Coverage pums apriori_c  dense_0002   dense_002   dense_02    1 10 100 1000 10000 100000 1e+06 1e+07 0 10 20 30 40 50 60 70 80 90 Number of Rules Minimum Coverage pums apriori_c  dense_0002   dense_002   dense_02    0 500 1000 1500 2000 2500 3000 3500 20 25 30 35 40 45 50 55 60 65 Execution time \(sec minconf pums  connect-4  1 10 100 1000 10000 100000 1e+06 20 25 30 35 40 45 50 55 60 65 Number of Rules minconf pums  connect-4    0 10 20 30 40 50 60 70 80 90 100 0 10 20 30 40 50 60 70 80 90 100 Highest Rule Confidence Minimum Coverage pums  connect-4 


8.2  Effects of minimum confidence The next experiment \(Figure 6\ws the effect of varying minconf while fixing minimp and minsup to very low values. With connect-4, we used a minimum coverage of 1%, and with pums, a minimum coverage of 5%. Minimp was set to .0002 with both data-sets. As can be extrapolated from the previous figures, the number of rules meeting these weak minimp and minsup constraints would be enormous As a result, with these constraints alone, Dense-Miner exceeds the available memory of our machine The efficiency of Dense-Miner when minimum confidence is specified shows that it is effectively exploiting the confidence constraint to prune the set of rules explored. We were unable to use lower settings of minconf than those plotted because of the large number of rules. As minconf is increased beyond the point at which fewer than 100,000 rules are returned, the run-time of Dense-Miner rapidly falls to around 500 seconds on both data-sets 8.3  Summary of experimental findings These experiments demonstrate that Dense-Miner, in contrast to approaches based on finding frequent itemsets achieves good performance on highly dense data even when the input constraints are set conservatively. Minsup can be set low \(which is necessary to find high confidence rules as can minimp and minconf \(if it is set at all\This characteristic of our algorithm is important for the end-user who may not know how to set these parameters properly. Low default values can be automatically specified by the system so that all potentially useful rules are produced. Refinements of the default settings can then be made by the user to tailor this result. In general, the execution time required by Dense-Miner correlates strongly with the number of rules that satisfy all of the specified constraints 9.     Conclusions We have shown how Dense-Miner exploits rule constraints to efficiently mine consequent-constrained rules from large and dense data-sets, even at low supports. Unlike previous approaches, Dense-Miner exploits constraints such as minimum confidence \(or alternatively, minimum lift or conviction\ and a new constraint called minimum improvement during the mining phase. The minimum improvement constraint prunes any rule that does not offer a significant predictive advantage over its proper sub-rules. This increases efficiency of the algorithm, but more importantly it presents the user with a concise set of predictive rules that are easy to comprehend because every condition of each rule strongly contributes to its predictive ability The primary contribution of Dense-Miner with respect to its implementation is its search-space pruning strategy which consists of the three critical components: \(1\functions that allow the algorithm to flexibly compute bounds on confidence, improvement, and support of any rule derivable from a given node in the search tree; \(2\proaches for reusing support information gathered during previous database passes within these functions to allow pruning of nodes before they are processed; and \(3\ item-ordering heuristic that ensures there are plenty of pruning opportunities. In principle, these ideas can be retargeted to exploit other constraints in place of or in addition to those already described We lastly described a rule post-processor that DenseMiner uses to fully enforce the minimum improvement constraint. This post-processor is useful on its own for determining the improvement value of every rule in an arbitrary set of rules, as well as associating with each rule its proper sub-rule with the highest confidence. Improvement can then be used to rank the rules, and the sub-rules used to potentially simplify, generalize, and improve the predictive ability of the original rule set References 1 w a l  R.; Im ie lin ski  T   a n d S w a m i, A. 1 9 9 3   M i n i ng As so ciations between Sets of Items in Massive Databases. In Proc of the 1993 ACM-SIGMOD Int\222l Conf. on Management of Data 207-216 2 raw a l R.; M a n n ila, H Sri k an t  R T o i v o n en  H.; an d  Verkamo, A. I. 1996. Fast Discovery of Association Rules. In Advances in Knowledge Discovery and Data Mining AAAI Press, 307-328 3 K Ma ng a n a r is S a n d Sri k a n t, R 19 97  P a rtia l Cl a ssif i cation using Association Rules. In Proc. of the 3rd Int'l Conference on Knowledge Discovery in Databases and Data Mining 115-118 4 a rd o  R. J 1 9 9 8  Ef f i c i en tly Min i n g  Lo n g  P a ttern s fro m  Databases. In Proc. of the 1998 ACM-SIGMOD Int\222l Conf. on Management of Data 85-93 5  Mi c h ae l J. A a n d  Lin o f f G  S 1 9 9 7  Data Mining Techniques for Marketing, Sales and Customer Support John Wiley & Sons, Inc 6 Bri n, S  M o t w a n i, R.; Ullm a n J.; a n d  Tsu r S. 19 9 7 Dyn a m i c  Itemset Counting and Implication Rules for Market Basket Data. In Proc. of the 1997 ACM-SIGMOD Int\222l Conf. on the Management of Data 255-264 7 h e n  W   W   1 9 9 5 F a st Ef fecti v e Ru le In d u ctio n   In  Proc. of the 12th Int\222l Conf. on Machine Learning 115-123 8 In tern atio n a l Bu sin e s s Mac h in e s   1 9 9 6  IBM Intelligent Miner User\222s Guide Version 1, Release 1 9 m e t tin e n M   Ma nn ila  P  Ro nk a i ne n  P   a n d V e rk a m o  A  I. 1994. Finding Interesting Rules from Large Sets of Discovered Association Rules. In Proc. of the Third Int\222l Conf. on Information and Knowledge Management 401-407 10  Ng   R  T    L a k s hm ana n   V   S    Ha n  J   an d P a ng A  1 9 9 8   Exploratory Mining and Pruning Optimizations of Constrained Association Rules. In Proc of the 1998 ACM-SIGMOD Int\222l Conf. on the Management of Data 13-24 11 Ry mo n  R 1 9 9 2   Search  t h ro u g h Sy s t e m atic S e t En u m era tion. In Proc. of Third Int\222l Conf. on Principles of Knowledge Representation and Reasoning 539-550 1  Sha f e r  J  A g r a w a l R   an d Me ht a M 19 98  SPR I N T   A  Scalable Parallel Classifier for Data-Mining. In Proc. of the 22nd Conf. on Very Large Data-Bases 544-555 13  S m y t he P  and  Go od man   R  M 19 92 An I n f o r m at i o n Th eo retic Approach to Rule Induction from Databases IEEE Transactions on Knowledge and Data Engineering 4\(4\:301316 14  S r i k a n t   R    V u  Q an d Ag r a w a l  R  19 97 M i ni ng  A ssoc i a tion Rules with Item Constraints. In Proc. of the Third Int'l Conf. on Knowledge Discovery in Databases and Data Mining 67-73 15 W e bb, G. I 1 9 9 5 OP U S An Ef f i c i e n t Adm i ssible Algo rit h m for Unordered Search. In Journal of Artificial Intelligence Research 3:431-465 


It can also be added to cell CrossSales.3\(PC, printer one_year,\205 5  Distributed and Incremental Rule Mining There exist two ways to deal with association rules 267  Static that is, to extract a group of rules from a snapshot, or a history, of data and use "as is 267  Dynamic that is, to evolve rules from time to time using newly available data We mine association rules from an e-commerce data warehouse holding transaction data. The data flows in continuously and is processed daily Mining association rules dynamically has the following benefits 267  223Real-time\224 data mining, that is, the rules are drawn from the latest transactions for reflecting the current commercial trends 267  Multilevel knowledge abstraction, which requires summarizing multiple partial results. For example association rules on the month or year basis cannot be concluded from daily mining results. In fact multilevel mining is incremental in nature 267  For scalability, incremental and distributed mining has become a practical choice Figure 3: Distributed rule mining Incremental association rule mining requires combining partial results. It is easy to see that the confidence and support of multiple rules may not be combined directly. This is why we treat them as \223views\224 and only maintain the association cube, the population cube and the base cube that can be updated from each new copy of volume cube. Below, we discuss several cases to show how a GDOS can mine association rules by incorporating the partial results computed at LDOSs 267  The first case is to sum up volume-cubes generated at multiple LDOSs. Let C v,i be the volume-cube generated at LDOS i The volume-cube generated at the GDOS by combining the volume-cubes fed from these LDOSs is 345   n i i v v C C 1  The association rules are then generated at the GDOS from the centralized C v  214  The second case is to mine local rules with distinct bases at participating LDOSs, resulting in a local association cube C a,I a local population cube C p,I  and a local base cube C b,i at each LDOS. At the GDOS, multiple association cubes, population cubes and base cubes sent from the LDOSs are simply combined, resulting in a summarized association cube and a summarized population cube, as 345   n i i a a C C 1   345   n i i p p C C 1  and 345   n i i b b C C 1  The corresponding confidence cube and support cube can then be derived as described earlier. Cross-sale association rules generated from distinct customers belong to this case In general, it is inappropriate to directly combine association cubes that cover areas a 1 205, a k to cover a larger area a In the given example, this is because association cubes record counts of customers that satisfy   customer product merchant time area Doe TV Dept Store 98Q1 California Doe VCR Dept Store 98Q1 California customer product merchant time area Doe VCR Sears 5-Feb-98 San Francisco Joe PC OfficeMax 7-Feb-98 San Francisco customer product merchant time area Doe TV Fry's 3-Jan-98 San Jose Smith Radio Kmart 14-Jan-98 San Jose Association   population      base          confidence      support cube               cube                cube         cube                cube LDOS LDOS GDOS 


the association condition, and the sets of customers contained in a 1 205, a k are not mutually disjoint. This can be seen in the following examples 214  A customer who bought A and B in both San Jose and San Francisco which are covered by different LDOSs , contributes a count to the rule covering each city, but has only one count, not two, for the rule A  336  B covering California 214  A customer \(e.g. Doe in Figure 3\who bought a TV in San Jose, but a VCR in San Francisco, is not countable for the cross-sale association rule TV  336 VCR covering any of these cities, but countable for the rule covering California. This is illustrated in Figure 3 6  Conclusions In order to scale-up association rule mining in ecommerce, we have developed a distributed and cooperative data-warehouse/OLAP infrastructure. This infrastructure allows us to generate association rules with enhanced expressive power, by combining information of discrete commercial activities from different geographic areas, different merchants and over different time periods. In this paper we have introduced scoped association rules  association rules with conjoint items and functional association rules as useful extensions to association rules The proposed infrastructure has been designed and prototyped at HP Labs to support business intelligence applications in e-commerce. Our preliminary results validate the scalability and maintainability of this infrastructure, and the power of the enhanced multilevel and multidimensional association rules. In this paper we did not discuss privacy control in customer profiling However, we did address this issue in our design by incorporating support for the P3P protocol [1 i n  ou r data warehouse. We plan to integrate this framework with a commercial e-commerce system References 1  Sameet Agarwal, Rakesh Agrawal, Prasad Deshpande Ashish Gupta, Jeffrey F. Naughton, Raghu Ramakrishnan, Sunita Sarawagi, "On the Computation of Multidimensional Aggregates", 506-521, Proc. VLDB'96 1996 2  Surajit Chaudhuri and Umesh Dayal, \223An Overview of Data Warehousing and OLAP Technology\224, SIGMOD Record Vol \(26\ No \(1\ 1996 3  Qiming Chen, Umesh Dayal, Meichun Hsu 223 OLAPbased Scalable Profiling of Customer Behavior\224, Proc. Of 1 st International Conference on Data Warehousing and Knowledge Discovery \(DAWAK99\, 1999, Italy 4  Hector Garcia-Molina, Wilburt Labio, Jun Yang Expiring Data in a Warehouse", Proc. VLDB'98, 1998 5  J. Han, S. Chee, and J. Y. Chiang, "Issues for On-Line Analytical Mining of Data Warehouses", SIGMOD'98 Workshop on Research Issues on Data Mining and Knowledge Discovery \(DMKD'98\ , USA, 1998 6  J. Han, "OLAP Mining: An Integration of OLAP with Data Mining", Proc. IFIP Conference on Data Semantics DS-7\, Switzerland, 1997 7  Raymond T. Ng, Laks V.S. Lakshmanan, Jiawei Han Alex Pang, "Exploratory Mining and Pruning Optimizations of Constrained Associations Rules", Proc ACM-SIGMOD'98, 1998 8  Torben Bach Pedersen, Christian S. Jensen Multidimensional Data Modeling for Complex Data Proc. ICDE'99, 1999 9  Sunita Sarawagi, Shiby Thomas, Rakesh Agrawal Integrating Association Rule Mining with Relational Database Systems: Alternatives and Implications", Proc ACM-SIGMOD'98, 1998   Hannu Toivonen, "Sampling Large Databases for Association Rules", 134-145, Proc. VLDB'96, 1996   Dick Tsur, Jeffrey D. Ullman, Serge Abiteboul, Chris Clifton, Rajeev Motwani, Svetlozar Nestorov, Arnon Rosenthal, "Query Flocks: A Generalization of Association-Rule Mining" Proc. ACM-SIGMOD'98 1998   P3P Architecture Working Group, \223General Overview of the P3P Architecture\224, P3P-arch-971022 http://www.w3.org/TR/WD-P3P.arch.html 1997 


Plenary Panel Session 30 XML Databases   Moderator: Michael Carey, IBM Almaden Research Center USA Panelists Adam Bosworth, Microsoft Corporation USA David De Witt University of Wisconsin-Madison, USA Alon Levy University of Washington USA Bruce Lindsay IBM Almaden Research Center USA Jennifer Widom Stanford University USA Demo Session 1 Web Query Optimizer  661 V Zadorozhny L Bright L Raschid T Urhan and M Vidal ReQueSS: Relational Querying of Semi-structured Data  664 R Sunderraman The IDEAL Approach to Internet-Based Negotiation for E-Business  666 J Hammer C Huang Y Huang C Pluempitiwiriyawej M Lee H Li L Wang Y Liu and S Su READY A High Performance Event Notification Service  668 R Gruber B Krishnamurthy, and E Panagos A Multimedia Information Server with Mixed Workload Scheduling  670 G Nerjes DISIMA An Object-Oriented Approach to Developing an Image Database System  672 V Oria T Ozsu P Iglinski B Xu and L Cheng Demo Session 2 The Collaboration Management Infrastructure  677 H Schuster D Baker A Cichocki D Georgakopoulos and M Rusinkiewicz Assisting the Integration of Taxonomic Data The LITCHI Toolkit  679 I Sutherland J Robinson S Brandt A Jones S Embury W Gray R White and F Bisby TheaterLoc: Using Information Integration Technology to Rapidly Build Virtual Applications  681 G. Barish Y.4 Chen D Dipasquo, C Knoblock S Minton I Muslea and C Shahabi Lineage Tracing in a Data Warehousing System  683 Y Cui and J Widom xiii 


The Mentor-Lite Prototype A Light-Weight Workflow Management System  685 J Weissenfels M Gillmann 0 Roth, G Shegalov and W Wonner Location Prediction and Queries for Tracking Moving Objects  687 0 Wolfson B Xu and S Chamberlain Semiorder Database for Complex Activity Recognition in Multi-Sensory Environments  689 S Bhonsle A Gupta S Santini and R Jain Tutorial 1 Web Information Retrieval  693 M Henzinger Tutorial 2 Mobile and Wireless Database Access for Pervasive Computing  694 P Chrysanthis and E Pitoura Tutorial 3 Data Mining with Decision Trees  696 J Gehrke Tutorial 4 Directories Managing Data for Networked Applications  697 D Srivastava Tutorial 5 Indexing High-Dimensional Spaces Database Support for Next Decade\222s Applications  698 S Berchtold and D Keim xiv 


 T5.I2.D100K T10.I4.D100K T15.I4.D100K T10.I6.D400K T10.I6.D800K T10.I6.D1600K Optimizations across Databases 5 0 5 10 15 20 25 30 35 40 45 Improvement COMP TREE COMP-TREE 1 2 4 8 1 2 4 8 1 2 4 8 2 4 8 2 4 8 1 2 4 8 Processors Databases Figure 5 Effect of Computation and Hash Tree Balancing good as the COMP optimization The reason that the hash tree balancing is not suf\336cient to offset inherent load imbalance in the candidate generation in this case The most effective approach is to apply both optimizations at the same time COMP-TREE The combined effect is suf\336cient to push the improvements in the 40 range in the multiple-processor case On 1 processor only hash tree balancing is bene\336cial since computation balancing only adds extra cost 5.4 Short-circuited Subset Checking Figure 6 shows the improvement due to the short-circuited subset checking optimization with respect to the unoptimized version The unoptimized version is the Apriori algorithm due to Agrawal et al 5 The results are presented for dif ferent number of processors across dif ferent databases The results indicate that while there is some improvement for databases with small transaction sizes the optimization is most effective when the transaction size is large In this case we get improvements of around 25 r the unoptimized version To gain further insight into this optimization consider 336gure 7 It shows the percentage improvement obtained per iteration on applying this optimization on the T20.I6.D100K database It shows results only for the uni-processor case r similar results were obtained on more processors We observe that as the iteration k increases there is more opportunity for shortcircuiting the subset checking and we get increasing bene\336ts of up to 60 The improvements start to fall off t the high end where the number of candidates becomes small resulting in a small hash tree and less opportunity for short-circuiting It becomes clear that is an extremely effective 15 Proceedings of the 1996 ACM/IEEE Conference on Supercomputing \(SC\22296 0-89791-854-1/96 $ 10.00 ACM 


 T5.I2.D100K T10.I6.D800K T15.I4.D100K T20.I6.D100K procs across Databases 0 5 10 15 20 25 Improvement 1 2 4 8 Figure 6 Effect of Short-circuited Subset Checking 23456789101112 Iterations 0 10 20 30 40 50 60 improvement T20.I6.D100K Figure 7  Improvement per Iteration  proc   16 Proceedings of the 1996 ACM/IEEE Conference on Supercomputing \(SC\22296 0-89791-854-1/96 $ 10.00 ACM 


optimization for larger transaction sizes and in cases where there are large number of candidate k itemsets 6 Conclusions In this paper e presented a parallel implementation of the Apriori algorithm on the SGI Power Challenge shared memory multi-processor We also discussed a set of optimizations which include optimized join and pruning computation balancing for candidate generation hash tree balancing and short-circuited subset checking We then presented experimental results on each of these Improvements of more than 40 were obtained for the computation and hash tree balancing The short-circuiting optimization was found to be extremely effective for databases with large transaction sizes Finally we reported the parallel performance of the algorithm While we d good speed-up we observed a need for parallel I/O techniques for further performance gains References  R Agra wal T  Imielinski and A Swami Database mining A performance perspecti v e  I n IEEE Trans on Knowledge and Data Engg  pages 5\(6 1993  R Agra wal T  Imielinski and A Swami Mining association rules between sets of items in lar ge databases In Proc M SIGMOD Intl Conf Management of Data  May 1993  R Agra wal H Mannila R Srikant H T o i v onen and A I V erkamo F ast disco v ery of association rules In U F et al editor Advances in Knowledge Discovery and Data Mining  MIT Press 1996  R Agra wal and J Shafer  P arallel mining of association rules design implementation and e xperience Technical Report RJ10004 IBM Almaden Research Center San Jose CA 95120 Jan 1996  R Agra wal and R Srikant F ast algorithms for mining association rules In Proc 20th VLDB Conf  Sept 1994  M Cierniak W  Li and M J Zaki Loop scheduling for heterogeneity  I n 4th IEEE Intl Symposium on High-Performance Distributed Computing also as URCS-TR 540 CS Dept Univ f Rochester  Aug 1995  M Holsheimer  M  K ersten H Mannila and H T o i v onen A perspecti v e on databases and data mining In 1st Intl Conf Knowledge Discovery and Data Mining  Aug 1995  M Houtsma and A Swami Set-oriented mining of association rules In RJ 9567  IBM Almaden Oct 1993  H Mannila H T o i v onen and I V erkamo Ef 336cient algorithms for disco v ering association rules In AAAI Wkshp Knowledge Discovery in Databases  July 1994  J S P ark M Chen and P  S Y u  A n e f fecti v e hash based algorithm for mining association rules In Proc M SIGMOD Intl Conf Management of Data  May 1995 17 Proceedings of the 1996 ACM/IEEE Conference on Supercomputing \(SC\22296 0-89791-854-1/96 $ 10.00 ACM 


 J S P ark M Chen and P  S Y u  E f 336cient parallel data mining for association rules T echnical Report RC20156 IBM T J Watson Research Center Aug 1995  G Piatetsk y-Shapiro Disco v ery  presentation and analysis of strong rules In G P S et al editor  KDD  AAAI Press 1991  A Sa v asere E Omiecinski and S Na v athe An ef 336cient algorithm for mining association rules in large databases In Proc 21st VLDB Conf  1995  M J Zaki M Ogihara S P arthasarathy  and W  Li P arallel data mining for association rules on shared-memory multi-processors Technical Report 618 Department of Computer Science University of Rochester 618 1996 18 Proceedings of the 1996 ACM/IEEE Conference on Supercomputing \(SC\22296 0-89791-854-1/96 $ 10.00 ACM 


