Hybrid Cloud Infrastructure to Handle Large Scale Data for Bangladesh People Search \(BDPS  Narzu Tarannum and Nova Ahmed Department of Electrical and Computer Science North South University Dhaka, Bangladesh narzu.tarannum@gmail.com, nova.ahmed.2011@gmail.com  Abstract 227 The objective of our paper is to propose and experiment a hybrid Cloud computing framework which is able to handle huge data. Previously we proposed this architecture with adequate feasibility analysis. Here we discuss a prototype system using national ID database structure of Bangladesh which is prepared. We implemented and experimented each of the 
modules of the system prototype. The infrastructure of our proposed system divided into two parts: locally hosted cloud and remote cloud. Remote cloud is experimented with Elastic MapReduce \(EMR\mazon Web Service \(AWS\nd 223Eucalyptus\224 is justified for local cloud. This structure of cloud computing is handled by apache Hadoop map/reduce framework where database is implemented and experimented by HiveQL An experimental analysis is presented in this paper. User information visibility, authorization, authentication and integrity issues are also discussed in our literature review 
Keywords- Cloud Computing; AWS; Hadoop; Eucalyptus HiveQL; Election Commission of Bangladesh I   I NTRODUCTION  Cloud computing is an emerging concept for Computer network arena. Data distribution, authentication and authorization [1 a r e m a jo r ch a llen g e s t o im p l em en t an  application based on public database. We proposed an Efficient and Reliable Hybrid Cloud Architecture for big Database [2 In this work we considered national ID database, prepared by election commission \(EC\ of Bangladesh [3 W e i m pl em en t e d  
different modules of the system and experimented with a prototype in this paper. We also discuss some experimental findings to justify our previous proposal [3  T h e st r uc t u r e o f  our proposed architecture divided into two parts. One infrastructure is locally implemented using open source 223Eucalyptus\224 [4 5  a n d t h e o t h e r p a r t o f t h e  i n f r a s t r uc t u r e  will be implemented on Amazon Web Service \(AWS\ [6  cloud. In a country like Bangladesh power failure and as well as internet connection failure are common problem. Data traffic congestion, SQL server time out issue and as a result 
server down is very frequent for any kind of national level searching issue like Higher Secondary school Certificate, TIN registration issue etc National level information access through database is an international challenge. This happened because of the risk of single server failure. To defend these problems we proposed the Hybrid cloud Structure for BDPS which will be handled by apache Hadoo  8  9  A p ac he H a d oop i s a n  op e n s o u rc e software framework that supports data-intensive distributed applications. It supports the running of applications on large clusters of commodity hardware. The Hadoop framework 
transparently provides both reliability and data motion to applications. Hadoop uses map-reduce [7 It  d i vi d e s  application into various work segments and those segments can be executed or re-executed on any chosen cluster node. In addition, it provides a distributed file system that stores data on the compute nodes, providing very high aggregate bandwidth across the cluster. Both map-reduce and the distributed file systems are designed so that node failures are automatically handled by the framework. It enables applications to work with thousands of computation-independent computers and 
petabytes of data To address the [10  au th en tic ati o n  an d au th o r iza t i o n issu e  and make EC\222s Database in more effective, efficient and useful, we consider following ideas: 1. Everyone will have a password to access their information and take a printout in a specific format to use in official purpose. 2. Everyone can only check others information by entering info. 3. Academic, Job information, Criminal record can be entered and verified by same database. Figure 1 is showing the hybrid infrastructure for handling big data  Figure 1  Hybrid Structure of Cloud for Handling Big Data 
This paper is formatted in following way:- section II discusses about literature review, section III describes the motivation, we proposed architecture in section IV, the experiment of Hadoop on MapReduce is discussed in section V, section VI describes about our implemented prototype and section VII discusses about  evaluation 3rd INTERNATIONAL CONFERENCE ON INFORMATICS, ELECTRONICS & VISION 2014 978-1-4799-5180-2/14/$31.00 ©2014 IEEE 


II  L ITERATURE R EVIEW  Buyyaa et al. [1 ve  p r opose d  a r c h i t e c t u r e f o r m a r k et oriented allocation of resources within Clouds.  They have also presented a vision for the creation of global Cloud exchange for trading services. Various Cloud efforts to reveal its emerging potential for the creation of third-party services is also discussed. Lastly they have presented meta-negotiation infrastructure for global Cloud exchanges The architecture and the service model of our system are based on this model Makhija et al xpl a i n e d di ffe r e nt  e x i s t i n g pap e r s  techniques and their merits and demerits. They discussed their methods of data security and privacy etc. In all those papers some haven\222t described proper data security mechanisms, some were lack in supporting dynamic data operations, some were lack in ensuring data integrity, while some were lacking by high resource and computation cost. Hence their paper gives overall clue of all existing techniques for cloud data security and methods proposed for ensuring data authentication using Third Party Auditor \(TPA\ Mohta et al. [11 w h o ha ve gi ve n algorithm which ensures data integrity and dynamic data operations. Wang et al. [1 ar e t h e  fi r s t  w h o  ha ve  co nsi d ere d  the public adaptability in their defined provable data possession PDP\ method which ensures possession of data files on untrusted storages. The author Cong Wang et al. [1 h e public key based homomorphic authenticator and to achieve a privacy-preserving public auditing system for cloud data storage security. The author Juels et al. [14 p r o p o s e d a s ch e m e  223Proof of retrievability\224 for large files using \223sentinels\224. The security issue of our system is developed from the above discussion. Trancoso and Angeli [15 pr e s e nt e d a br i e f  description of GridArchSim which is going to be used for both research and education Ahmad et al. [16  p r es en te d a c o m p r eh en s iv e an aly s is of  cloud computing. They find the cloud concepts and demonstrate the cloud landscape vendors, growth of cloud computing, user concern about cloud security and worldwide web security revenue 2009 to 2015. Their business model is considered to develop our business model III  M OTIVATION  Cloud computing  i s  a uni ve r s al t e r m fo r a n y t hi ng t h a t  demands delivering hosted services over the Internet where Resource allocation can be adjusted. Day by day, the amount of data stored at companies like Google, Yahoo, Facebook Amazon or Twitter has become incredibly huge. So, web applications and databases in cloud are undergoing major architectural changes to take advantage of the scalability provided by the cloud Cloud computing platforms possess characteristics of both clusters and Grids, with its own special attributes and capabilities such strong support for virtualization, dynamically compo sable services with Web Service interfaces, and strong support for creating 3rd party, value added services by building on Cloud compute, storage, and application services. Thus Clouds are promising to provide services to users without reference to the infrastructure on which these are hosted Overall, Cloud Computing can lead to reduced costs and access to resources that perhaps any company would have difficulty in funding or finding difficult to justify. Considering those features we proposed architecture and justified the feasibilities in our previous work [2  W e co nsi d er ed A W S a n d  W i n d ow s Azure for Remote cloud implementation. Amazon Web Services \(AWS\6  is a c o ll ect ion  of rem o t e  c o m p u t i n g services that together make up a cloud computing platform offered over the Internet by Amazon.com. AWS is located in 8 geographical 'Regions'. Availability Zones are isolated from each other to prevent outages from spreading between Zones Windows Azure [1 i s  a  c l o u d co m p ut i ng p l a t f o r m a nd infrastructure, created by Microsoft, for building, deploying and managing applications and services through a global network of Microsoft-managed datacenters Open Source has advantages like leverage the work of a growing community of developers, works across multiple hardware infrastructures, possible to deploy at service providers and on-premise, customized to fit individual needs or to add additional services etc. So we considered Eucalyptus and Openstack for our model Eucalyptus [5 s  op e n s our c e s o ft w a r e for b u i l d i ng Amazon Web Services \(AWS\compatible private and hybrid clouds.   It allows an organization to build self-service, elastic clouds inside its datacenter using existing IT infrastructure Openstack [1 is  a c o ll ecti o n of  o p en s o u r ce c o m pon en ts t o  deliver public and private IaaS clouds whose components are Nova, Swift, Glance, Keystone, and Quantum. IaaS Cloud Services allows users to manage VMs, Virtual networks storage resources etc From the above discussion we found that AWS and Windows Azure are the options to implement Remote cloud Unfortunately the service of Windows Azure is not available in Bangladesh and the services are not only expensive but also limited comparing to AWS for our application. AWS made a number of resources available to the researchers some of them we used for our experiment which includes EC2, S3 etc Different types of instances are verified for our application For local cloud, a comparative study by [2 o na l i Y a d a v  is considered where the characteristics and performance is observed for Eucalyptus, Openstack and Opennebula. From that study we found that Eucalyptus would be better option for our proposed architecture because Eucalyptus provides an EC2 compatible cloud Computing Platform and S3-compatible Cloud Storage thus its services are available through EC2/S3 compatible APIs. Eucalyptus can leverage \(drag\ a heterogeneous collection of virtualization technologies within a single cloud, to incorporate resources that have already been virtualized without modifying their configuration IV  A RCHITECTURE OF HYBRID STRUCTURED CLOUD  We considered national ID database for searching Bangladeshi People in different purpose. An interactive web based application prototype by using hybrid structure of cloud computing has implemented in our research which is based on Hadoop with Elastic MapReduce. The EMR used four elastic EC2\ nodes that are installed on Amazon Web Service AWS\. All the core nodes including the master node is implemented on large type computing device. To address the 3rd INTERNATIONAL CONFERENCE ON INFORMATICS, ELECTRONICS & VISION 2014 978-1-4799-5180-2/14/$31.00 ©2014 IEEE 


authentication we also enabled public key and private key 223Keypair\224 tool of EC2 A  Structural Description Our proposed architecture [2  of cl ou d c o m p u tin g is  depicted in figure 1. This structure is divided into two parts One infrastructure will be locally implemented by using 223Eucalyptus\224 and the other part of the infrastructure will be implemented in well-known Amazon Web Service \(AWS cloud. On top of this infrastructure Hadoop framework would be used to implement the system. In our structure the solid lined servers are representing the \223always on\224 server. In local elastic cloud part those servers will be used for query handling requested by the users and in External AWS cloud those server will be used for backup and mirroring. In local elastic cloud part dashed line servers will be used as elastic computer which will be automatically \223UP\224 as needs' basis. The number of server will depend on the number of query request. In External AWS cloud the dashed server will be used is case of overflow request and in case of local cloud infrastructure failure. Any kind of Linux server can be used for this implementation. We used Debian Linux in our prototype cloud and Hadoop implementation. We used HiveQL [21   2 2  f o r D a ta b a se  management system in our remote cloud implementation and experiment but we used MySQL for our BDPS prototype  Figure 2  Architecture of BDPS System Figure 2 is showing the architecture of our proposed system. It shows that the Database is stored in the hybrid cloud which is made by Local and Remote cloud. Hadoop framework contains both structure and the Database. Data input authority and User can access this database by a user interface which is connected to Hadoop with secured communication protocol The selection criteria for local and remote cloud are also shown in our architecture B  Technology of implementation An open-source software framework Apache Hadoop [8 supports data distributed applications. In this framework large and segmented hardware is used to run an application using map-reduce [7  c o m p u t at i o n a l pa ra di g m In  a d di t i on  H a d o o p  provides a distributed file system that stores data on the compute nodes, providing very high aggregate bandwidth We also considered Elastic Compute Cloud \(EC2\and Simple Storage Service \(S3\ of Amazon web service \(AWS for our system. Amazon EC2 is a central part of Amazon.com's cloud computing platform. EC2 allowed us to rent virtual computers on which we could run our own application prototype. EC2 allows scalable deployment of applications by providing a Web service. We can boot an Amazon Machine Image to create a virtual machine, which Amazon calls an instance", containing any software desired like hadoop, Hive pig etc. We can create, launch, and terminate server instances as needed, paying by the hour for active servers, hence the term elastic". Amazon S3 is an online file storage web service offered by Amazon Web Services. Amazon S3 provides storage through web services interfaces \(REST, SOAP, and BitTorrent\ We used S3 to back up our old data. We successfully experiment the data exchange between EC2 and S3 of AWS 1  Technology of Hadoop Apache Hadoop is an open-source software framework for storing and large scale processing of data-sets on clusters of commodity hardware. Hadoop is an Apache top-level project being built and used by a global community of contributors and users. Pig and Hive are Higher-level languages over Hadoop that generate MapReduce programs. MapReduce is a technique that distributes the processing of very large multi-structured data files across a large cluster of machines. High performance is achieved by breaking the processing into small units of work that can be run in parallel across the hundreds, potentially thousands, of nodes in the cluster. Simple data-parallel programming model designed for scalability and faulttolerance. The challenges of cheap nodes fail, commodity network, programming distributed systems are solved by building fault-tolerance into system, push computation to the data and data-parallel programming model: users write \223map\224 223reduce\224 functions, system distributes work and handles faults. MapReduce programming model hides the complexity of work distribution and fault tolerance. The Principal design philosophies are make it scalable and cheap by lowering hardware, programming and admin costs. MapReduce is not suitable for all problems, but when it works, it saves quite a bit of time. The main features of Hadoop Distributed File System HDFS\ are single namespace for entire cluster and replicates data 3x for fault-tolerance a  Elastic MapReduce \(EMR The EMR is a web service that makes it easy to quickly and cost-effectively process vast amounts of data. Amazon EMR uses Hadoop, an open source framework, to distribute data and processing across a resizable cluster of Amazon EC2 instances We implemented our hadoop on EMR where we experiment the MapReduce function through a number of SQLs by Apache Hive command b  Apache Hive Apache Hive is a data warehouse infrastructure built on top of Hadoop for providing data summarization, query, and 3rd INTERNATIONAL CONFERENCE ON INFORMATICS, ELECTRONICS & VISION 2014 978-1-4799-5180-2/14/$31.00 ©2014 IEEE 


analysis. While initially developed by Facebook, Apache Hive is now used and developed by other companies such as Netflix Amazon maintains a software fork of Apache Hive that is included in Amazon Elastic MapReduce on Amazon Web Services 2  HortonWorks The Hortonworks Data Platform [12 is a f r am e w ork  th a t  allows for the distributed processing of large data sets across clusters of computers. It includes Apache Hadoop and is used for storing, processing, and analyzing large volumes of data The platform is designed to deal with data from many sources and formats. The platform includes various Apache Hadoop projects including the Hadoop Distributed File System MapReduce, Pig, Hive, HBase and Zookeeper and additional components. In our current experiment we implemented the remote cloud through EMR but in case of the implementation of our hybrid cloud we would need a framework like Hortonworks Data Platform. So, we also implemented HDP  ng fo u r nodd ed c l ust e r w h e r e  o n e w a s he ad nod e usi ng four other EC2 instances. In following part we only will discuss the result based on EMR V  E XPERIMENT H ADOOP WITH M AP R EDUCE  This section will discuss the configuration and performance of Hadoop which is implemented on Amazon Elastic MapReduce service [24   A  Lunch Amazon MapReduce After registering with AWS we lunched an Elastic MapReduce cluster BDPS which includes one master node and 3 core nodes that support pig and hive. In our implementation the public domain name of our master node is: \223ec2-54-254211-125.ap-southeast-1.compute.amazonaws.com\224 and authentication SSH private key file was bdps.ppk 1  Software and Hardware Description TABLE I  S OFTWARE D ESCRIPTION  Software Description Hadoop distribution This determines which distribution of Hadoop to run on the cluster. We can choose to run the Amazon distribution of Hadoop or one of several MapR distributions. We have chosen Amazon AMI version This determines the version of Hadoop and other applications such as Hive or Pig to run on the cluster. We selected AMI version 2.4.2  which means Hadoop 1.0.3 Applicatio n s to be installed A default Hive and Pig version is selected we can also choose other application from the Additional applications list. We did not choose additional applications TABLE II  H ARDWARE D ESCRIPTION  Hardware Description Network Optionally, choose a VPC subnet identifier from the list to launch the cluster in an Amazon VPC. For more information see Select an Amazon VPC Subnet for the Cluster \(Optional\ in the Amazon EMR Developer Guide. We choose Launch into EC2-Classic Maste r  The master node assigns Hadoop tasks to core and task nodes and monitors their status. There is always one master node in each cluster. This specifies the EC2 instance types to use as master nodes. Valid types are m1.small, m1.large, m1.xlarge c1.medium, c1.xlarge, m2.xlarge, m2.2xlarge, and m2.4xlarge cc1.4xlarge, cg1.4xlarge. We have chosen m1.large where count was by default 1 which means the number of master node is 1 Core A core node is an EC2 instance that runs Hadoop map and reduce tasks and stores data using the Hadoop Distributed File System \(HDFS\. Core nodes are managed by the master node This specifies the EC2 instance types to use as core nodes. We have chosen m1.large where the number of core node is 3. This specifies whether to run core nodes on Spot Instances Task Task nodes only process Hadoop tasks and don't store data You can add and remove them from a cluster to manage the EC2 instance capacity your cluster uses, increasing capacity to handle peak loads and decreasing it later. Task nodes only run a TaskTracker Hadoop daemon. We did not choose any task node in our experiment. This specifies whether to run task nodes on Spot Instances 2  EC2 Keypair Amazon EC2 uses public\226key cryptography to encrypt and decrypt login information. Public\226key cryptography uses a public key to encrypt a piece of data, such as a password, then the recipient uses the private key to decrypt the data. The public and private keys are known as a key pair. To log in to any instance, it is mandatory to create a key pair, specifying the name of the key pair when launch the instance, and also need to provide the private key when connect to the instance Linux/UNIX instances have no password, and can use a key pair to log in using SSH. With Windows instances, can use a key pair to obtain the administrator password and then log in using Remote Desktop Connection B  Command Line Interface \(CLI\ by Putty PuTTY is a free implementation of Telnet and SSH for Windows and Unix platforms, along with an xterm terminal emulator. Putty allows Windows users to connect to remote systems over the Internet via Telnet and SSH. While both Telnet and SSH allow you to connect to remote systems, SSH supported in Putty, provides for a "Secure Shell", encrypting information before it is transferred. SSH is an Internet standard supported by many computers that also support Telnet C  Experiment TABLE III  E XPERIMENT R ESULTS  Type of Instruction Total Time Process Time Create 0.1205 N/A Show Table 0.0705 N/A Select 0.157 N/A Drop Table 1.1805 N/A Load big data from File \(3,49,900 words 0.998 N/A SQL in Blank Database considering MapReduce 37.1595 0 SQL for small table \(3X3 string 44.235 2.901 SQL in big database for exist data considering MapReduce 44.785 4.915 SQL in big database for non-exist data considering MapReduce 43.8335 4.825 We experimented following type of instruction using PuTTY. Since executed the instruction from remote machine to 3rd INTERNATIONAL CONFERENCE ON INFORMATICS, ELECTRONICS & VISION 2014 978-1-4799-5180-2/14/$31.00 ©2014 IEEE 


a virtual infra-structure the time of execution varies time to time. So, we counted average time that system had taken Table III is showing the time for different types of instructions In our table times are showing in Seconds. N/A means it does not involved in MapReduce operation. By this experiment, we found that due to MapReduce operation process time does not vary significantly for big or small database. Process time found almost 3 seconds for very small database and for big database it took less than 5 seconds. A dictionary of 3,49,000 different word is used to experiment big database VI  S YSTEM P ROTOTYPE I MPLEMENTATION  This National ID database of Bangladesh contains 31 information of voter which includes picture and figure print The total number of voter is almost 95 million on November 2013. National ID number of Bangladesh contains 13 digits The structure is "DDRTTUUSSSSSS". The 1st two digits DD" for District code of the ID holder, next one digit "R" for R.M.O code, the next two digits "TT" for Thana code, next two UU" are for Union code and the last "SSSSSS" six digits are a sequential number for each citizen of the country. Figure 3 is showing a sample of national ID card and Figure 4 is showing the partial part of application form of election commission  Figure 3  Sample of National ID card of Bangladesh  Figure 4  Application form of Election Commission A  Deployment model for BDPS BDPS will make the database available to the general people by using the public cloud. Here Election Commission or a National Data Center will be the service provider. These services are free for General people to access their information Election Commission or a National Data Center can introduce a fee for new registration and update process. Since a number of agencies will use this database, a huge amount of revenue is also possible. BDPS will also offer a pay-per-use model for the corporate user who will use this database frequently for information verification B  Service Model for BDPS Since PaaS helped to run the application on the web and also provide application development toolkits, we choose PaaS as a service model for BDPS. The user of BDPS does not manage or control the underlying cloud infrastructure including network, servers, operating systems, or storage, but has control over the deployed applications One important issue in our application was the visibility Since it is general software and everyone have access to this database, visibility of other\222s information became an important issue. In our application everyone can only verify other\222s information by entering known information C  GUI S  Our GUIs are written in PHP. First GUI in Figure 5 is the interface of entering data. We have shown a partial record which we entered in the database. By the second GUI checked with some valid and invalid information and third GUI shows the response of information verification. By this concept we can ensure the visibility of private information from others  Figure 5  GUIs for information verification D  D ATABASE  In our prototype, we used five tables for five kinds of data Our current election commission [2 s t o r es 3 1  in f o rm ati o n f o r  each voter. We kept all those data in information table Academic Information, Job Record, Bank Account information and Criminal Record stored in other four tables. We implemented our prototype database on MySQL. Tables IV is showing the name of fields for corresponding table. Bold-italic field means primary key TABLE IV  F IELDS OF D ATABASE  Table Name Fields Information DID PIN_ID, Voter_ID, Name, English_name, Father_name Mother_name, Spouse_name, Gender, Merital_status, Picture 3rd INTERNATIONAL CONFERENCE ON INFORMATICS, ELECTRONICS & VISION 2014 978-1-4799-5180-2/14/$31.00 ©2014 IEEE 


Qualification, Special, Date_of_birth, Birth_district Present_address, Permanent_address, Voter_area,,Occupation Specification_sign, B_group, TIN, License, Passport IRIS_DNA, Phone, Nationality, F_print, Death_date criminal_re cord R ecord _ ID National_ID, Record_no, Case_no, Type, Place Police_station, Date, Status, Details bank_acc_l oan B ank _ I D National_ID, Account_name, Bank_name Branch_name, Account_no, Card_no, Account_type, Date Remarks Education E ducation _ I D National_ID, Degree_name, Year Registration_no, Roll_no, Result, Marks, Remarks job_record J ob _ ID National_ID, Job_title, Institute, Address Designation, Joining_date, Departure _date, Remarks VII  C ONCLUSION  The remote cloud of our proposed hybrid structure is justified with the experiment of Hadoop by EMR of AWS and the Local cloud is justified with the implementation of HDP This is a reliable and fault-tolerant system because of the characteristic of Hadoop. The main features of Hadoop Distributed File System \(HDFS\ are single namespace for entire cluster and replicates data 3x for fault-tolerance. We observed that the volume of data does not affect the process time significantly. We experimented a dictionary database with 3,49,000 different word and performed several HiveQL queries for that. We also experimented with some small database and found that the process time does not vary too much. So, if we use big database by increasing the number of elastic node, our system will perform efficiently. BDPS is used here as an example prototype with some unique features To justify our proposal we have implemented and experimented many tools of cloud computing. At the beginning we had simulated a cloud on [18 l ou ds i m t h en w e de pl o y ed Openstack and experiment some applications for performance study. After that we registered and experimented a number of applications in AWS. We lunched different type of instances like Windows, CentOS, Ubuntu etc. in different types of machine configurations. Using AWS service we deployed Hadoop on four node computing environment. Hadoop was experimented on this infer-structure. And lastly we implemented our prototype on windows apache server and verified the data entry, visibility and authentication Large scale data handling is a major challenge in Bangladesh. Election commission \(EC\ of Bangladesh has a national database with 31 types of information for 95 million of voters. Huge cost is involved to maintain this database which is supposed to use only at the time of election. Considering this point we proposed an application which would be useful to general people, government and non-government organizations along with EC. It will not only ensure the validity of data but also ensure the transparency. Our proposed structure ensured the data and database controllable and expandable according to the system\222s requirement  R EFERENCES  1  Rajkumar Buyyaa, Chee Shin Yeo, Srikumar Venugopal, James Broberg and Ivona Brandic, \223Cloud computing and emerging IT platforms Vision, hype, and reality for delivering computing as the 5th utility,\224 Future Generation Computer Systems, pp. 599-616, 2009 2  Narzu Tarannum and Nova Ahmed, \223Efficient and Reliable Hybrid Cloud Architecture for big Database,\224 International Journal on Cloud Computing: Services and Architecture \(IJCCSA\, Vol. 3, No. 6, pp. 1729, ISSN  2231-6663, December 2013 3  Election Commission Bangladesh. Web Site: http://www.ecs.gov.bd/En glish/, Last date of access: 25 th November, 2013 4  Daniel Nurmi, Rich Wolski, Chris Grzegorczyk, Graziano Obertelli Sunil Soman, Lamia Youseff and Dmitrii Zagorodnov, \223The eucalyptus open-source cloud-computing system,\224 9th IEEE/ACM International Symposium on Cluster Computing and the Grid, 2009 5  Eucalyptus. Web Page: http://www.eucalyptus.com/, Last date of access 25th November, 2013 6  Amazon Web Service. Web Page: http://aws.amazon.com/ , Last date of access: 25th November, 2013 7  Azza Abouzeid, Kamil Bajda-Pawlikowski, Daniel Abadi, Alexander Rasin and Avi Silberschatz, \223HadoopDB: An Architectural Hybrid of MapReduce and DBMS Technologies for Analytical Workloads,\224 Proceedings of the 2009 VLDB Endowment, Vol. 2, No. 1, Pages 922933, August 2009 8  Hadoop. Web Page: http://hadoop.apache.org , Last date of access: 25th November, 2013 9  Horton Hadoop Installetion guide. Web Page: https://sites.google.com/si te/howtohadoop/how-to-install-hdp#bm11, Last date of access: 25th November, 2013   Bhavna Makhija, VinitKumar Gupta and Indrajit Rajput, \223Enhanced Data Security in Cloud Computing with Third Party Auditor,\224 International Journal of Advanced Research in Computer Science and Software Engineering, Vol. 3, No. 2, ISSN: 2277 128X, February 2013   Abhishek Mohta, Ravi Kant Sahu and LK Awasthi, \223Robust Data Security for Cloud while using Third Party Auditor,\224 in International Journal of Advanced Research in Computer Science and Software Engineering, Vol. 2, No. 2, Feb 2012   Cong Wang, Kui Ren, Wenjing Lou and Jin Li, \223Toward Publicly Auditable Secure Cloud Data Storage Services,\224 IEEE Network July/August 2010   Cong Wang, Qian Wang, Kui Ren, and Wenjing Lou, \223PrivacyPreserving Public Auditing for Data Storage Security in Cloud Computing,\224 IEEE INFOCOM, San Diego, CA, March 2010   A. Juels, J. Burton, and S. Kaliski, \223PORs: Proofs of Retrievability for Large Files,\224 , Proc. ACM CCS-07, pp. 584\22697, Oct. 2007   P. Trancoso and N. Angeli, \223GridArchSim: Computer Architecture Simulation on the Grid,\224 Proc. of the 2nd European Across Grids Conference \(AxGrids\, January 2004   Tauseef Ahmad, Mohammad Amanul Haque, Khaled Al-Nafjan and Asrar Ahmad Ansari, \223Development of Cloud Computing and Security Issues,\224 Information and Knowledge Management, Vol. 3, No. 1, ISSN 2224-5758, 2013   Won Kim, \223Cloud Computing: Status and Prognosis,\224 Journal of Object Technology, vol. 8, no.1, pp. 65-72, 2009   Windows Azure. Web Page: http://www.windowsazure.com/, Last date of access: 25th November, 2013   Openstack. Webpage: http://openstack.org/, Last date of access: 25th November, 2013   Sonali Yadav, \223Comparative Study on Open Source Software for Cloud Computing Platform: Eucalyptus, Openstack and Opennebula,\224 International Journal Of Engineering And Science, Vol. 3, No. 10, PP 51-54, ISSN 2319-6483, October 2013   HadoopDB Guide. Web Page: http://hadoopdb.sourceforge.net/guide Last date of access: 25 th November, 2013   HadoopDB Guide. Web Page: http://www.coreservlets.com/hadooptutorial/, Last date of access: 25 th November, 2013   Cloudsim. Webpage: http://www.cloudbus.org/cloudsim/, Last date of access: 25th November, 2013   Console to Run and Maintain AWS. Webpage: https://console. aws.ama zon.c om/ ec2/v2/ home?region=ap-southeast-1#, Last date of access 25th November, 2013   Voter Registration form: http://www.ecs.gov.bd/MenuExternalFilesEng 188.pdf, Last date of access: 25 th November, 2013 3rd INTERNATIONAL CONFERENCE ON INFORMATICS, ELECTRONICS & VISION 2014 978-1-4799-5180-2/14/$31.00 ©2014 IEEE 


Figure 4  Flowchart illustrating initialization of OBC and device startup 7 


017 Communication Tasks Communication tasks can be classi\002ed as Uplink Task and Downlink Task These tasks are responsible for establishing a communication link with ground station for both uplink and downlink communication Uplink Communication 050tUplink\051 This task is responsible for receiving commands from ground station and parsing the data to execute suitable actions in the satellite Downlink Communication 050tDownlink\051 This task is responsible for sending telemetry data and payload data that is requested by ground station The message should be formatted in AX.25 protocol for decoding message in ground station The OBC  Comm  Downlink performs the task of forming packets of the information to be sent  OBC_Comm_Downlink\050\051 OBC_Uplink\050\051 Com_GetStatus Com_RxNewSoftware Com_PictureData Com_RxSyncData Com_LOGData Com_RxCommand Com_TxSyncData Com_RxDtmf_Command Com_LowPower Com_RxSetDebugOut Com_PowerOK Com_RxTransmit_Image Com_RxNewFlightPlan Com_RxNewAcsParam Com_RxKeplerElements Com_COMStatus Com_RxTimeSync  017 Beacon Task 050tBeacon\051 The satellite will send beacon signals to the ground station The Beacon signal contains information like the satellite ID This information is in the form of packets which are formed according to the AX.25 protocol 017 Power 050tPower\051 This task is responsible for handling all power related tasks on the OBC These tasks include software overcurrent protection and power switch control with data 003ow control command for Regulator Current and Voltage bus Following threads run in Power 050tPower\051  Power_GetStatus\050\051 Power_SetBootMode\050\051 Power_SystemReset 050\051 Power_TurnOnSubsytem\050\051 Power_TurnOffSubsytem 050\051 Power_reset_theDog\050\051 Power_BasicBeaconOff\050\051 Power_telemetry\050\051 Power_ErrorShutDown\050\051 Power_PCUPowerOK\050\051 Power_PCULowPower\050\051  017 Attitude Determination 050tAttDetr\051 This task is responsible for updating Keplerian elements performing mathematical calculations and provide actuation and determination Data acquisition of magnetometer XYZ position gyro XYZ position sun vector orbit propagation and error detection Following Threads run in Attitude Determination 050tAttDetr\051  ADCS_GetStatus ADCS_Telemetry ADCS_UpdateKeplerElements ADCS_navigation_guidance ADCS_SunData ADCS_SwitchADCSMode ADCS_Lowpower ADCS_PowerOk ADCS_TimeSynchronized  017 Mode Manager 050tModeMng\051 This task is responsible for maintaining the mode state of the satellite The mode manager will determine the state based the request and conditions received from the OBC which are associated with different subsystems like EPS COMM ADCS and thermal systems  017 Mission Timeline Manager 050tMTM\051 This task is responsible for managing the timeline for future events 5 I NITIALIZATION OF OBC  D EVICE S TARTUP The data ow shown in gure 4 describes the initialization of OBC and device startup required to send telemetry data from the sensors to communication module All the communication between tasks occur using message queues The ight software is implemented with FreeRTOS for operation of command and data handling Satellite Modes of Operation The ight software is implemented with three distinct spacecraft modes  Safe Mode  Ideal Mode Normal Mode Apart from the normal operation of the satellite the following operating modes are de\002ned for the extended convenience  optimum functioning of the satellite and for power saving functions Start-up Mode\227 This will be a one-time operational mode which will be active only after a few hours after the launch of the Satellite into the orbit Safe Mode 050Low power\051 227 In this mode only the essential modules are powered ON and only the Housekeeping  Maintenance functions are done in this mode Emergency Mode\227 The satellite is put under emergency mode during Extreme operating conditions caused due to either partial module failure or low power availability In this mode only the Power system and the Beacon is kept on and rest of the modules are suspended until the errors are recti\002ed or the normal operating conditions are restored Communication Priority Mode\227 In this mode the priority of operation is given to the Communication modules all other modules are put under minimal operative mode so that maximum power is provided to the Communication module for the duration in which the satellite happens to be in the Cone of Window Payload Priority Mode\227 In this mode maximum CPU usage and power is given to the payload requirements to ensure smooth and uninterrupted payload mission The satellite will operate in this mode during the exclusive payload operation Debug Mode\227 This mode is mostly activated along with the Emergency mode or Safe mode This mode is activated during the maintenance operation where the Runtime software errors can be debugged by up-command 6 S OFTWARE T ESTING  S IMULATION The softwares used for OBC are as follows 017 RTOS The OBC makes use of FreeRTOS It is GPL Licensed operating system that targets microcontroller It supports various degrees of multitasking ranging from a preemptive scheduler  co-operative multitasking to coroutines 017 Compiler and Debugger The Vision IDE from Keil combines project management make facilities source code editing program debugging and complete simulation in one 8 


powerful environment which makes it suitable for the project The ST-LINK/V2 tool can be easily used for JTAG and SWD interface debugging and programming Testing A code was written and executed on STM32F4DISCOVERY board to test few task management features of FreeRTOS The total 003ash footprint came upto approximately 11 Kbyte which includes FreeRTOS code application code and library code Few code snippets are listed below that show different task management features of FreeRTOS The syntax for creating a task using FreeRTOS is shown below Detailed explanation can be referred from text books on FreeRTOS  portBASE_TYPE xTaskCreate\050 pdTASK_CODE pvTaskCode const  signed  char  const  pcName unsigned  short  usStackDepth void  pvParameters unsigned  portBASE_TYPE uxPriority xTaskHandle  pxCreatedTask 051  Following is a code snippet which shows simple task creation using FreeRTOS  void  emptyTask\050 void  pvParameters\051  char  pcTaskName    Empty  Task  is running 134 n     To  display  which task  is  running for 050;;\051   Infinite  loop  USART_puts\050USART1 pcTaskName\051  For  printing  on  a  terminal software  through  USART1 Delay\050\051   int  main\050  void  051  init_USART1\0509600\051    initialize USART1    9600  baud USART_puts\050USART1   USART Initialization  complete  134 r 134 n  051  Task  Creation xTaskCreate\050emptyTask 050  signed  char  051   EmptyTask   240 NULL EmptyTaskPriority NULL\051  Execute  the  task vTaskStartScheduler\050\051   This  should never  return    Will  only  get  here  if  there  was insufficient  memory  to  create   the  idle  task  return  0   The output looks like the following  USART Initialization complete  Empty Task is running Empty Task is running Empty Task is running  Following is a code snippet which shows multitasking using FreeRTOS  void  tUplink 050 void  pvParameters\051    Variable  declarations  and  other initializations   const  char  pcTaskName  134r\134ntUlink task running\134r\134n uint8_t i=0      for 050  051   Print  out  the  name  of  this task    USART_puts\050USART1 pcTaskName\051   tUplink  code     void  tDownlink 050 void  pvParameters\051    Variable  declarations  and  other initializations   const  char  pcTaskName  134r\134ntDlink task running\134r\134n uint8_t i=0      for 050  051   Print  out  the  name  of  this task    USART_puts\050USART1 pcTaskName\051   tDownlink  code     int  main\050  void  051  init_USART1\0509600\051    initialize USART1    9600  baud USART_puts\050USART1   USART Initialization  complete  134 r 134 n  051  Task  Creation xTaskCreate\050 tUplink   tUplink   configMINIMAL_STACK_SIZE NULL 1 hUplink 051   Note  that  the priority  for  both  the  tasks  are set  the  same  050 whisi  is  1\051 xTaskCreate\050 tDownlink   tDownlink   configMINIMAL_STACK_SIZE NULL 1 hDownlink 051   This  means  that  on execution   both  tasks  will  be running  alternately  which  makes  it look  like  its  running simultaneously  Similarly   any  number  of  tasks  can be  set  the  same  priority  for multitasking  Execute  the  task vTaskStartScheduler\050\051    This  should never  return    Will  only  get  here  if  there  was insufficient  memory  to  create   the  idle  task  return  0   The output looks like the following  USART Initialization complete  tUlink task running 9 


tDlink task running tUlink task running tDlink task running tUlink task running tDlink task running  Following is a code snippet which shows dynamic priority scheduling using FreeRTOS An initial priority for the task is assigned by the uxPriority parameter of the xTaskCreate\050\051 API function The priority can be changed by using the vTaskPrioritySet\050\051 API function The maximum number of priorities can be set by de\002ning a compile time con\002guration constant in the con\002gMAX  PRIORITIES within FreeRTOSCon\002g.h header 002le Higher the con\002gMAX  PRIORITIES value the more RAM the kernel will consume  void  sampleTask1\050 void  pvParameters\051  const  char  pcTaskName    sampleTask1 is  running 134 n   unsigned  portBASE_TYPE uxPriority uxPriority  uxTaskPriorityGet\050NULL\051 for 050;;\051  Delay\050\051 USART_puts\050USART1 pcTaskName\051 USART_puts\050USART1   About  to raise  the  sampleTask2 priority 134 n  051 vTaskPrioritySet\050xTask2Handle 050uxPriority+1\051\051   void  sampleTask2\050 void  pvParameters\051  const  char  pcTaskName    sampleTask2 is  running 134 n   unsigned  portBASE_TYPE uxPriority uxPriority  uxTaskPriorityGet\050NULL\051 for 050;;\051  Delay\050\051 USART_puts\050USART1 pcTaskName\051 USART_puts\050USART1   About  to lower  the  sampleTask2 priority 134 n  051 vTaskPrioritySet\050NULL 050uxPriority-2\051\051   int  main\050  void  051  init_USART1\0509600\051    initialize USART1    9600  baud USART_puts\050USART1   USART Initialization  complete  134 r 134 n  051  Task  Creation xTaskCreate\050sampleTask1 050 signed  char  051  sampleTask1   240 NULL sampleTask1Priority NULL\051 xTaskCreate\050sampleTask2 050 signed  char  051  sampleTask2   240 NULL sampleTask2Priority xTask2Handle\051  Execute  the  task vTaskStartScheduler\050\051    This  should never  return    Will  only  get  here  if  there  was insufficient  memory  to  create   the  idle  task  return  0   The output looks like the following  USART Initialization complete  sampleTask1 is running About to raise the sampleTask2 priority sampleTask2 is running About to lower the sampleTask2 priority sampleTask1 is running About to raise the sampleTask2 priority sampleTask2 is running About to lower the sampleTask2 priority  Following is a code snippet which shows task periodicity using FreeRTOS  void  emptyTask\050 void  pvParameters\051  char  pcTaskName    Empty  Task  is running 134 n     To  display  which task  is  running for 050;;\051  USART_puts\050USART1 pcTaskName\051  For  printing  on  a  terminal software  through  USART1 Delay\050\051   void  periodicTask 050 void  pvParameters\051  const  char  pcTaskName    Periodic Task  is  running 134 n   portTickType xLastWakeTime xLastWakeTime  xTaskGetTickCount\050\051  Lets  say  the  mode  of  execution  is  as per  the  number  of  executions   that is   after  a  said  number  of executions  the  periodic  task  will execute x  050number_of_executions  y\051  number_of_executions 3  The  code  can  also  be  modified  to execute  a  periodic  task  after  a said  time  rather  than  the  number of  executions for 050;;\051  Delay\050\051 USART_puts\050USART1 pcTaskName 051 vTaskDelayUntil\050 xLastWakeTime 050x/portTICK_RATE_MS\051\051 Delay\050\051   int  main\050  void  051  init_USART1\0509600\051    initialize USART1    9600  baud USART_puts\050USART1   USART Initialization  complete  134 r 134 n  051  Task  Creation xTaskCreate\050emptyTask 050  signed  char  051   EmptyTask   240 NULL 1 NULL\051 10 


xTaskCreate\050periodicTask 050 signed  char  051  PeriodicTask   240 NULL 2 NULL\051   Note  that  the periodic  task  has  a  higher priority  Execute  the  task vTaskStartScheduler\050\051    This  should never  return    Will  only  get  here  if  there  was insufficient  memory  to  create   the  idle  task  return  0   The output looks like the following  USART Initialization complete  Empty Task is running Empty Task is running Empty Task is running Periodic Task is running Empty Task is running Empty Task is running Empty Task is running Periodic Task is running Empty Task is running  It is worth mentioning that as a subset of the not running state the aperiodic tasks are in the blocked state that is these tasks are waiting for an event to occur and the periodic update tasks are in the ready state that is they are in the not running state but are ready to run Software Test Logging Each module should have a minimum of two testing logs on 002le after completion Due to the nature of software development and debugging 050code compile test repeat etc\051 the testing logs will act as a debugging completed log which shows that the software is completed and ready to be integrated into the system Full software system tests will only begin once initial versions of modules are completed and the full system can be assembled as a functional software package The system test will attempt to check every possible system state and execution path This will ensure that the individual modules do not cause functionality problems with each other or that there are multiple modules attempting to use the same resource at the same time Error Checking Error checking in the hardware can help to eliminate additional software However commercial-off-the-shelf 050COTS\051 products that utilize hardware solutions are cost prohibitive for this project A single processor board for both satellites is utilized because of the higher power requirements of a multiprocessor plan Onboard error checking systems are adequate for our need Software redundant storage system has been designed and tested for the computers The system consists of a read write and validate module that implements a threecopy data storage system to 002x any errors that may occur during storage This system has been found to be error free and functions properly on a Compact Flash memory device 7 C ONCLUSION  S COPE FOR F UTURE The overall system architecture and requirements of the subsystems is accomplished by the open-source real-time operating system 050FreeRTOS\051 which supports various types of peripheral interfaces telemetry storage and data processing FreeRTOS was chosen for the project after performing several comparison and feasibility studies which have been discussed in the earlier sections The only drawback of FreeRTOS is that tasks are designed to enter in in\002nite loops Satellite function tasks should not be in in\002nite loop The tasks should function in the speci\002ed conditions without going into in\002nite loops To overcome this issue implementation of special techniques to avoid in\002nite loops is required Currently we are working on implementation of certain techniques described in to avoid in\002nite loops This would help to modify the existing FreeRTOS code for STUDSAT-2 Results Figure 6 shows the image data received from the hardware setup shown 002gure 5 Camera is interfaced with STM32 and commanded to take picture using UHF communication module The image stored is sent via 2.4 GHz ISL module The hex values received for the ISL module is converted to JPEG Image format to display in PC and this experiment carried out to prove the concept of transmitting image from one satellite to other satellite via ISL The results shows the decoded beacon signal received from the overall satellite subsystems interface as seen in 002gure 5 The data is received by NASTRAC 050Nitte Amateur Satellite Tracking Center\051 using MiXW 050a software TNC program\051 A CKNOWLEDGMENTS The authors sincerely thank Dr M Annadurai Chairmen SRC for Small Satellite ISRO and Shri Amereshwar Knened Project Director Small Satellite Project and all the scientists across various centers of ISRO and ISRO Satellite Centre 050ISAC\051 for their motivation and having provided the authors with all the technical and non-technical support The authors extend their sincere gratitude to Dr Jharna Majumdar Prof CSE and Dean 050R&D\051 of the Nitte Meenakshi Institute of Technology the Chief Project Coordinator of the Project STUDSAT for guiding the STUDSAT Team and playing a key role in initiating the Project STUDSAT-2 The authors render special thanks to Mr Loganathan M Director Space Program Nitte Meenakshi Institute of Technology for his support and guidance The authors are grateful to Visvesvaraya Technological University 050VTU\051 Belgaum for their Monetary support The authors thank the Management of Nitte Meenakshi Institute of Technology the lead college of the STUDSAT project for their wholehearted support for the project The authors thank Prof N.R Shetty Visionary Advisor Nitte Meenakshi Institute of Technology and Dr H.C Nagaraj Principal NMIT for providing excellent infrastructure in the college for the execution of the project and the encouragement given to the team The authors thank the Principals and the managements of the 6 consortium colleges for their support The authors also thank Richard Barry the author of FreeRTOS and Real Time Engineers Ltd for technical support 11 


Figure 5  Complete hardware test setup Figure 6  Image Received from the interface Figure 7  Beacon Received from UHF Beacon Board 12 


R EFERENCES   Caitlyn M Cooke Implementation of a Real-Time Operating System on a small Satellite Platform in Space Grant Undergraduate Research Symposium Colorado Space Grant Consortium Boulder CO 80309   Nishchay Mhatre Mohit Karve Gautam Akiwate Shravan Aras Mr Sanjeev Krishnan Varad Deshmukh Rahul Bedarkar A MODULAR GENERIC LOW-COST ON-BOARD COMPUTER SYSTEM FOR NANO/PICO SATELLITE APPLICATIONS 62nd International Astronautical Congress 2011 vol.,no.,pp IAC-11,E2,3,5,x10570 2011   Shancao Niu Jing Zhang Bin Wang Xiaodong Fu 224Analysis and Implementation of Migrating Real-Time Embedded Operating System FreeRTOS Kernel Based on S3C44B0 Processor,\224 Information Science and Engineering 050ISISE\051 2012 International Symposium on  vol no pp.430,433 14-16 Dec 2012   Ra\002a Inam Jukka Mki-Turja Mikael Sjdin Moris Behnam Hard Real-time Support for Hierarchical Scheduling in FreeRTOS*,7th annual workshop on Operating Systems Platforms for Embedded Real-Time Applications 050OSPERT 11\051 p 51-60 Porto Portugal   Rahman M.S Atiquzzaman M Ivancic W Eddy W Stewart D 224Implementation of SCTP in an open source Real-Time Operating System,\224 Military Communications Conference 2008 MILCOM 2008 IEEE  vol no pp.1,7 16-19 Nov 2008   Sarma T.C Srinivas C.V 224Design and Implementation of High Bit Rate Satellite Image Data Ingest and Processing System,\224 Signal Processing Communications and Networking 2007 ICSCN 07 International Conference on  vol no pp.149,152 22-24 Feb 2007   Sethu Selvi S Iyer N.R Sandeep G.S.P 224A facile approach to GPS navigation in unmanned ground vehicles,\224 Advances in Technology and Engineering 050ICATE\051 2013 International Conference on  vol no pp.1,6 23-25 Jan 2013   DTUsat On Board Computer 050OBC\051 System DTUsat http://etd.dtu.dk/thesis/200728/imm5238.pdf   Open source Real time Operating Systems for the STM32 and Cortex m3 MCu's https://sites.google.com/site/stm32discovery/stm32resources-and-links/open-source-real-time-operatingsystems-for-the-stm32-and-cortex-m3-mpus   Why Use FreeRTOS http://www.freertos.org/FAQWhat.html#WhyUseRTOS   FreeRTOS FAQ Memory Usage Boot Times  Context Switch Times http://www.freertos.org/FAQMem.html   FreeRTOS License Details http://www.freertos.org/a00114.html   A NEW DESIGN APPROACH OF SOFTWARE ARCHITECTURE FOR AN AUTONOMOUS OBSERVATION SATELLITE Jkrorne Gout Sara Fleury LAASCNRS   Command and Data Handling Subsystem Design for the Ionospheric Observation Nanosatellite Formation 050IONF\051 John D Jensen Utah State University Dr Charles M Swenson 050Advisor\051 Utah State University   USU Software Document AOE   Ion-F Software Architecture AOE   Super Simple Tasker 050SST\051 by Micro Samek and Robert Word in Embedded System Design 2006 B IOGRAPHY  Bheema Rajulu working as Research Scholar for Student Small Satellite Project Project STUDSAT-2 received a B.E in Electical and Electronic Engineering from Nitte Meenakshi Institute of Technology under Visweswaraya Technological University Belgaum India in July 2011 He was the core team member of the Project-STUDSAT-1 India's 002rst Pico satellite which was successfully 003own into the orbit on July 12th 2010 by PSLV Now he is leading Project STUDSAT-2 India's 002rst Twin Satellite Mission aiming to prove Inter-Satellite Communication He is the Co-author of several papers out of which one has won the ESSTA 050Emerging Scenarios in Space Technology\224\051 Best paper Award Sankar Dasiga has obtained his Bachelors Degree in ECE from Bangalore University in 1984 and Masters Degree in Electronics and Instrumentation from REC Warangal in 1988 He has 22Years experience in Embedded Systems and Semiconductor Industry His industry experience includes working in Macmet Siemens Philips Wipro CISCO and NXP He is currently working as a Professor in Department of ECE Nitte Meenakshi Institute of Technology Bangalore from 2010 He is a Deputy Project Co-ordinator for Project STUDSAT-2 Naveen Rajaraman Iyer is a 002nal year undergraduate student pursuing Bachelor of Engineering in Instrumentation Technology in M S Ramaiah Institute of Technology Bangalore India He is a robotics enthusiast who has worked on a variety of projects conducted workshops on robotics and has also represented his institute in one of the worlds most prestigious robotics competitions 050IGVC 2012\051 Additionally he has coauthored a paper titled A facile approach to GPS navigation in unmanned ground vehicles which was published in an IEEE conference International Conference on Advances in Technology and Engineering 050ICATE 2013\051 He is currently working on research projects in Centre for Cryogenic Technology 050CCT\051 and Department of Electronic Systems Engineering 050DESE\051 Indian Institute of Science 050IISc\051 Bangalore India 13 


  14    7  Op t i c a l  De p t h  p e a k r so l  p ro f i l e  f o r M a rs Y e a rs 2 6  t h ro u g h  2 7   2 0 0 3    2005   c om pr i s e d of  v i e  ME R  c a m e r a  d a t a  a n d  s c a l e d  T E S  a n d  T H E MI S  z o n a l l y av e r age d i nf r ar e d dat a  i n t he  I nSi ght  l at i t ude  band  2S t o 5N    Th i s  i s  a  r e l a t i v e l y  q u i e s c e n t  y e a r   w i t h  r e g i o n a l  s t o r m s   c e n t e r e d  n e a r  s o l s  1 5 0   5 2 0   a n d  6 7 0      Fi g   A  8  Op t i c a l  De p t h  ak r so l  p ro f i l e  f o r M a rs Y e a rs 2 7  t h ro u g h  2 8   2 0 0 5    2007   c om pr i s e d of  v i s i bl e fr e q u e n c y  ME R  c a m e r a  d a t a  a n d  s c a l e d  T H E MI S  z o n a l l y av e r age d i nf r ar e d dat a  i n t he  I nSi ght  l at i t ude  band  2S t o 5N    T hi s  i s  a qui e s c e nt  y e ar   w i t h r e gi onal  s t or m s   t he  2 007 m aj or  s t or m  ar i s e s  af t e r  I nSi ght  E O M     Fi g   A  9  Op t i c a l  De p t h  p e a k r so l  p ro f i l e  f o r M a rs Y e a rs 2 8  t h ro u g h  2 9   2 0 0 7    2009   c om pr i s e d of  v i s i bl e fr e q u e n c y  ME R  c a m e r a  d a t a  a n d  s c a l e d  T H E MI S  z o n a l l y av e r age d i nf r ar e d dat a  i n t he  I nSi ght  l at i t ude  b and  2S t o 5N     I nSi ght  la n d s  a b o u t 5 0  s o ls  b e fo r e  th e  2 0 0 7  s to r m  r is e s  u p   ta u  r e m a in s  a b o v e  2  u n til s o l 1 2 0   A fte r  th a t th e  y e a r  is  r e la tiv e ly  qui e s c e nt   w i t h t w o r e gi onal  s t or m s   c e nt e r e d on s ol  525 and s ol  680                                                0     1 2 3 1 4      5      6 7     7  8   9  1    1         1           1  2 3  4                                              0  1   2 3   4 5 6  7 8 5  9 0 7             6       8      1  2 3  4                                                0     1 2 3 1 4      5      6 7     7   8  9   1         1 9         1  2 3  4     


  15    10  Op t i c a l  De p t h  ak r so l  p ro f i l e  f o r M a rs Y e a rs 2 9  t h ro u g h  3 0   2 0 0 9    2011   c om pr i s e d of  v i s i bl e fr e q u e n c y  ME R  c a m e r a  d a t a   T h i s  i s  a  r e l a t i v e l y  q u i e s c e n t  y e a r   w i t h  t w o  n o t a b l e   b r i e f  r e g i o n a l  s t o r m s   c e n t e r e d  n e a r  s o l s  1 0  a n d  170  t hat  c oul d c hal l e nge  de pl oy m e nt  an d e ar l y  ope r at i ons     Fi g   A  11  Op t i c a l  De p t h  p e a k r so l  p ro f i l e  f o r M a rs Y e a rs 2 9  t h ro u g h  3 0   2 0 0 9      co m p r i s ed  o f  vi s i b l e fr e q u e n c y  ME R   O p p o r t u n i t y  r o v e r  o n l y   c a m e r a  d a t a   T h i s  i s  a  r e m a r k a b l y  q u i e s c e n t  y e a r   w i t h  n o  o c c u r r e n c e s  o f  o p t i c a l  d e p t h  ri si n g  a b o v e  1  5                                               0     1 2 3 4 5      6      7 8     8    9   1 5   1 5 5 2      1 4          1  2 3  4                                                0     1 2 3 1 4      5      6 7     7   8 9      2 4 4       1 4        1  2 3  4     


  16  A X   Fi g u r e  A 1   Il l u st r a t i o n  o f  ART E M I S  P 1   a  k  a   T H E M I S  B   lu n a r a p p r o a c h  2  e   in E a r t h C e n t e r e d I n e r t ia l E C I  J 2 0 0 0  c o o r d i n a te s   T h e  g r i d  r e p r e s e n ts  th e  e q u a to r i a l  p l a n e    A 2    ART E M I S  P 1  l u n a r  f l y b y   1   k fl i p   a n d  l u n a r  fl y b y   2  i n  E C I  c o o r d i n a te s   


  17   A 3   ART E M I S  P 1  lu n a r  f ly b y   1  b a c k fl i p   a n d  l u n a r  fl y b y   2  i n  m o r e  d e ta i l  i n  E C I  c o o r d i n a te s    we r e  e x e c u t e d  t o  a c c u r a t e l y  t a r g e t  t h e  B pl a ne s  o f  t he  dua l  l una r  f l y by  s c e na r i o   T r a c ki ng  c o v e r a g e  dur i ng  t he  ba c k fl i p  w a s  c r i ti c a l  to  m o n i to r  th e  s e c o n d  fl y b y   W i th  th e  s p a c e c r a ft a n te n n a  m o u n te d  o n  th e  s o u th e r n  s i d e  o f th e  sp a c e c r a f t  b o d y   c o mmu n i c a t i o n s  c o v e r a g e w i t h  t h e D S N  3 4 m s t a t i o n s  h a d  t o  b e  ca ref u l l y  a n a l y zed     Fi g u r e  A 4   ART E M I S  P 1  f i n a l  E a r t h  o r b i t s   t r a n s lu n a r t r a j e c t o r y w it h t w o d e e p  sp a c e  e x c u r si o n s   Ea r t h  f l y b y   an d  f i r s t  r e vol u t i on  of  E M  L 2  lib r a t io n   or b i t  i n  E C I  co o rd i n a t es   


  18   A 5   ART E M I S  P 1  E M  L 2  an d  E M  L 1  lib r a t io n p o in t o r b it s w it h E M L 2  to  E M  L 1  tr a n s fe r   in s e r t io n i nt o  a  r e tr o g r a d e  l u n a r  o r b i t i n  r o ta ti n g  co o rd i n a t es V ie w o f t h e E a r t h Mo o n  p l a n e  f r o m  a b o v e    A 6    ART E M I S  P 1  c o m p l e t e  tr a je c to r y  fr o m  E a r th  d e p a r tu r e  to  l u n a r  o r b i ts  in E C I c o o r d in a t e s   


  19   A 7    ART E M I S  P 2   a  k  a   T H E M I S  C  E a r t h  d e p a r t u r e  w i t h   la s t E a r t h o r b it a n d lu n a r f ly b y in E C I  co o rd i n a t es   Th e  t a b l e s  o n  ft  in d ic a t e a v a ila b ilit y o f  co m m u n i ca t i o n s  l i n k s  w i t h  s u p p o rt i n g  n et w o rk  a s s et s    Fi g u r e  A 8       lib r a t io n p o in t o b it s in  EC I  c o o r d i n a t e s   


  20   A 9   ART E M I S  P 2  c o m p l e t e  t r a j e c t o r y  f r o m  E a r t h  d e p a r t u r e  t o  l u n a r  o r b i t s  in E C I c o o r d in a t e s   A 1 S u m m a r y o f  ART E M I S  M a n e u v e r s  a n d  F u e l  B u d g e t s   Mi s s i o n  P h a s e  Pr o b e  P1   P2    Mi s s i o n  P h a s e   e  at  B eg i n  o f  e  g  l  Ex p e n d e d  b y  En d  o f  Ph a s e  g  To t a l    Ac h i e v e d   e  s    Mi s s i o n  P h a s e   e  at  B eg i n  o f  e  g  l  Ex p e n d e d  b y  En d  o f  Ph a s e  g  To t a l    Ac h i e v e d   e  s  Ea r t h  O r b i t    5    2    4   553  514  436    27  1    SD M  1   2  140  135  477  s r  1    8  039  433  567    3  TC M  2   5  005  372  672  Li b r a t i o n  Po i n t  t    36  606  351  688    31  633  188  486  Lu n a r  O r b i t  1    2  I  PR M  1   5    4  255  427  629    2  LTI  TC M  1  I  PR M  1   5  M  1  4  1    2  445  394  215  Cu r r e n t  S t a t u s    8 28        051        T  At t i t u d e  P r e c e s s i o n  M a n e u v e r  M  Or b i t  R a i s e  M a n e u v e r   M  De e p  S p a c e  M a n e u v e r  M  Pe r i o d  R e d u c t i o n  M a n e u v e r   FTM  Fl y b y  Ta r g e t i n g  M a n e u v e r  M   De f l e c t i o n  M a n e u v e r   I  Lu n a r  O r b i t  I n s e r t i o n  M a n e u v e r  M  St a t i o n k e e p i n g  M a n e u v e r   LTI  Lu n a r  Tr a n s f e r  I n i t i a t i o n  M a n e u v e r  N  Sp i n  R a t e  C o n t r o l  M a n e u v e r   M  Or b i t  M a i n t e n a n c e  M a n e u v e r  M  Tr a j e c t o r y  C o r r e c t i o n  M a n e u v e r   












































     2 8    b 4      1 8             1 2     1  8 2  


1 9    8      2 1       1     2    8    2 3\f        


     8 D 4 9  F  \b 1 8 #J 9 1     2 1   2 #-@ 1   2 9  E 1   1   2 9      6  


    8  8   1  D 1         1 F  \b0         2 D    F  \b 1 8  9  


  1 9  1   E 1  2 9     1 1 F  \b       1    18   F   1    1 #-$+  \b  2 2  


1 D     1 #-$+.B- 0/:% .0             9 1      18    1 6     1 2  1  1  


1   6      2    1 2 E 8 D 1      1 2   1   1 #-4  #-@E     2  1  1  1       


 8     1          2 F    6   F  2   8    2 C<CC/C N\bO 5      


CD    b$44NO F P Q 6   2 b$$$ ,=\b\bA  A N,O 2 C C  b$$4N  92 2   f  9-\b$$4 B N?O  !-    91  2 1 HH111-18-N+O    -1 :3%   2     0-4 


     b N4O 2   2- \f  C b$@$ \b# >\b\b$3\b$N@O  f :.% 9 /9 \f    1  6  f 2  4   A254 


Advantages of Our M ethod Advantages of Our M ethod Exploit the memory v ertical data format utilizes slidin g windows to g form a much larger database to analyze  Flexibility in Choosing what to choose  Choosing what to choose to build the rules Computational and memory efficiency We have a team working only on this aspect 45 Associative IDS for NextGen Frameworks Dr S Dua LA Tech 45 


Preliminary Results Intra transaction Relations Data rate simulator NH-134 Mb HOP PATH update \(Y/N Inference 11.5 Y Y 2 0.120 N N      Y   n 0.345 N NH134 Y/N   Inf 1 0.150 N N 2 0 120 Y N Inter transaction Relations 2 0  120 Y N       5 5.55 0.456 Y Relations  n 0.345 N N Nmap on DMRL nmap.org 


Anticipated Outcome Anticipated Outcome Develop algorithm capable of learning from a given heterogeneous diverse Develop algorithm capable of learning from a given heterogeneous diverse data ff Dynamic algorithmic f ramework designed to shi f t modalities and sampling rates based on complex logic Flexibility of integration into the Snort intrusion detection system 47 Associative IDS for NextGen Frameworks Dr S Dua LA Tech 47 


References References Aircraft Cockpit Image courtesy USAF http://www.faa.gov htt p   www.faa g ov  air traffic  technolo gy  p g  _ gy  Acharya R Dua S Du X Sree V Chua C K Automated Diagnosis of Glaucoma Using Texture and Higher Order Spectra Features To appear in IEEE Transactions on Information Technology in Biomedicine  Du X Dua S 2011 Cancer Prognosis Using Support Vector Regression in Imaging  Modality World Journal of Clinical Oncology 2  1   44 49 Du X Dua S 2010 Salient Frame Extraction Using Support Vector Regression and Motion Features pp 5 Proc of the National Aerospace and Electronics Conference July 14 16 2010 D M P D S 2010 Di i i ti Ft d Cl ifi ti Mthd f D essaue r  M  P  D ua S  2010  Di scr i m i na ti ve F ea t ures an d Cl ass ifi ca ti on M e th o d s f or Accurate Classification 1st ed vol 7704 pp 14 Bellingham WA Proceedings of SPIE Dessauer M P Dua S 2010 Low Resolution Vehicle Tracking using Dense and Reduced Local Gradient Features Maps 1st ed vol 7694 pp 8 Bellingham WA Proceedings of SPIE SPIE 


Acknowledgements Acknowledgements Fundin g A g encies  US 4 1 Million direct fundin g g g 4 g LA BoR NIH NSF AFRL AFOSR and NASA Research Team Samuel Kasimalla Brandy McKnight Dr Pradeep Chowriappa Connor Johnson Vasanth Nair Mihir Chowriappa  Connor Johnson  Vasanth Nair  Mihir Karnik Mohit Jain and Swadheen Songmen Associative IDS for NextGen Frameworks Dr S Dua LA Tech 49 All the respective Logos belong to their owners 


Rf d Rdi R e f erence d R ea di ngs Copyright of cover pages held by respective publishers 


Thank You Questions Thank You  Questions Dr Sumeet Dua E mail sdua@latech.edu Web http://dmrl.latech.edu Associative IDS for NextGen Frameworks Frameworks Dr S Dua LA Tech 51 Image Source roadtrafficsigns.com 


