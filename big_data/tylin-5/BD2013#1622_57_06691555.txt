An Evaluation Study of BigData Frameworks for\nGraph Processing\nBenedikt Elser, Alberto Montresor\nUniversit degli Studi di Trento, Italy\n{elser|montresor}@disi.unitn.it\nAbstract—When Google ?rst introduced the Map/Reduce\nparadigm in 2004, no comparable system had been available\nto the general public. The situation has changed since then.\nThe Map/Reduce paradigm has become increasingly popular\nand there is no shortage of Map/Reduce implementations in\ntoday’s computing world. The predominant solution is currently\nApache Hadoop started by Yahoo. Besides employing custom\nMap/Reduce installations, customers of cloud services can now\nexploit ready-made made installations \(e. g. the Elastic Map/Re-\nduce System second generation frameworks have\nstarted to appear. They either ?ne tune the Map/Reduce model\nfor speci?c scenarios, or change the paradigm altogether, such as\nGoogle’s Pregel. In this paper, we present a comparison between\nthese second generation frameworks and the current de-facto\nstandard Hadoop, by focusing on a speci?c scenario: large-scale\ngraph analysis. We analyze the different means of ?ne-tuning\nthose systems by exploiting their unique features. We base our\nanalysis on the k-core decomposition problem, whose goal is to\ncompute the centrality of each node in a given graph; we tested\nour implementation in a cluster of Amazon EC2 nodes with\nrealistic datasets made publicly available by the SNAP project.\nI. INTRODUCTION\nA key myth of American folklore is the garage as birthplace\nof start-ups. Google is a famous example: the company scaled\nfrom a garage in Menlo Park to a search provider indexing\nmore than 45 billion pages1. To minimize their initial hardware\ncosts, they exploited clusters of commodity hardware instead\nof investing into large supercomputers To develop novel\nparallel algorithms, engineers at Google soon realized that they\nneeded both a convenient way of programming them and a\nframework to orchestrate their execution. These requirements\nresulted in the design of the Map/Reduce platform [7]. Used\neverywhere inside Google [6], Map/Reduce received a lot\nof attention from scienti?c and business computing since\nits ?rst publication in 2004. The Map/Reduce model was\nlater reimplemented in the open-source framework Apache\nHadoop [25].\nThe availability of Map/Reduce frameworks and the abun-\ndance of cloud-provided resources \(e. g. Amazon’s EC2 [1 data available to\neveryone and started what is by now called the “big data”\nmovement. Today, everyone can start a business based on\nthe processing of large amounts of data, without being over-\nwhelmed by the initial investment. Using these techniques, it\n1http://www.worldwidewebsize.com/\nis now possible to analyze datasets so large that could have\nnever been processes without a supercomputer.\nInitially, Map/Reduce has been proposed for very simple,\nembarrassingly parallel tasks – like log analysis – applied to\nvery large and distributed datasets [7]. Later, an increasing\nnumber of papers tried to apply Map/Reduce to a larger set\nof problems including machine learning [15], joining complex\ndata?ows [4], [27], and analyzing very large-scale graphs 11].\nLinked data and graphs structures, in particular, have ac-\nquired more and more importance in today’s data world.\nIn fact, graphs are omnipresent in the Internet and in our\nlives: as examples, take the connections between friends,\nthe co-authorship relation originated from scienti?c papers,\nthe dependencies between providers and suppliers in today’s\ncomplex business world. Each of them can easily be reduced\nto a network of vertices and edges.\nThe usage of Map/Reduce beyond its original design\nhas generated a large amount of criticisms against such an\nabuse [15]; this has inspired both the adoption of speci?c\nprogramming patterns that optimize the analysis of large\nlinked data structures in Map/Reduce [13], and the creation\nof entirely new frameworks based on alternative programming\nmodels [17].\nContribution In this paper we present, to the best of\nour knowledge, the ?rst evaluation study of modern big\ndata frameworks \(Map-Reduce [], Stratosphere Hama [],\nGiraph [], Graphlab latest technological developments\nand test them in a real world setting based on an EC2 cluster.\nAs a testing problem, we adopt the k-core decomposition of\nlarge graphs, whose goal is to compute the centrality of each\nnode by identifying the maximal induced subgraphs including\nthat node. We ported a distributed k-core algorithm [19] to\neach of the considered frameworks, optimizing it to exploit\nthe special bene?ts of each of them. Furthermore, we compare\nthe results obtained in a cluster with those obtained in a\nsingle multicore machine based on shared memory. Finally,\nwe discuss the fault resilience of each framework. The rest of\nthis paper is organized as follows: Section II introduces the k-\ncore algorithm. Section III gives an overview of Map/Reduce\nand graph-centric programming models. Section IV describes\ncurrent frameworks and their improvements over Map/Reduce.\nSection V discusses the most interesting results from our\nanalysis. Section VI concludes with an outlook to future work.\n2013 IEEE International Conference on Big Data\n978-1-4799-1293-3/13/$31.00 ©2013 IEEE 60\n2II. K-CORE\nThe test algorithm we choose to implement is a distributed\nimplementation the of k-core decomposition problem [19],\nwhose goal is to determine the relative importance of a\nnode by identifying the maximal induced subgraphs of a\ngraph. k-core decomposition has been applied to a number\nof problems; for example it has been used to characterize\nsocial networks [22], to help in 


the visualization of complex\ngraphs [2] or to determine the role of proteins in complex\nproteinomic networks 3].\nInformally, a k-core is obtained by recursively removing\nall nodes with degree smaller than k, until the degree of\nall remaining vertices is larger than or equal to k. Consider\nFigure 1 as an example. Clearly, by de?nition, each k-core\nincludes the larger cores, i.e. the \(k + 1 k + 2 the 3-core is nested in the 2- and 1-\ncore. Apparently, larger values of k correspond to more central\npositions in the network.\n\b\n\t\n\n\n\n\t\n\b\nFigure 1. k-core decomposition for a sample graph [19].\nAlgorithm 1 illustrates the distributed algorithm; refer\nto [19] for an in-depth analysis. Initially, each node u sets\nits own k-core value, stored in core to its degree and sends\nit to all its neighbors \(neighbors\nV\n\(u own\nvalue and broadcasts it to its neighbors if it has changed. The\ncomputeIndex value i, such that\nthere are at least i entries equal or larger than i in est.\nFiltering To minimize the interprocess communication we\nintroduced an optimization to our k-core algorithm, referred\nas ?ltering in the rest of the paper. Instead of sending the\nchanged value to every vertex in the neighborhood, we relax\nthis constraint: neighbor vertices that have a smaller k-core\nvalue than the current computed one do not require an update.\nThis is because the computation of the value is monotonically\ndecreasing, starting at the degree\(u node u and stopping\nonly when there is a ?xed set of k nodes with the k-core value\nequal to or larger than k That computation does not depend\non the actual value of the neighbors coreness, as long as their\nvalue is higher. Even if vertices only know the initial value\nof a neighbor v, which is degree\(v correctly\ncalculate their own value. As edge degree typically follows\nAlgorithm 1: Distributed algorithm to compute the k-core\ndecomposition; routine executed by node u.\non initialization do\nchanged ? false;\ncore d\(u u  u est[v] then\nest[v]? k;\nt? computeIndex\(est, u, core time units \(round duration u distribution, reducing communication from these\nnodes makes a huge difference \(cf. section V-C4 BACKGROUND\nMap/Reduce is a data-parallel batch system, able to process\nlarge volumes of data using a simple programming model.\nThe main features of the framework include the queuing,\ndistribution and parallelization of the computation across a\ncluster of machines in a resilient way. It parallelizes the user-\nprovided implementations of the map, reducefunctions by\npartitioning the input data and feeding it to these functions.\nThe framework also takes care of the shuf?ing and sorting\nof partial solutions, as well as distribution issues and error\nhandling, such as restarting of jobs. Therefore, the programmer\nis merely required to express her algorithm as a sequence of\nthese function calls. The mapfunction turns input data which\nis not required to have any speci?c structure or relation, into a\ncollection of key-value records. These records are aggregated\nby keys into bins; each bin is processed by one instance of\nthe reducefunction Initially proposed by Google [7], there are\nnow several alternative implementations, the most prominent\none being Apache Hadoop [25].\nThe algorithms proposed in the initial paper of Map/Reduce\ndo not focus on linked data; instead, problems requiring a large\namount of independent computations were discussed, such as\nthe distributed grep problem. However, the framework can be\napplied to a variety of problems. For example iterative graph\nalgorithms can be expressed as a series of Map/Reduce runs,\nwhere each run produces an intermediate solution [5]. The\nsame steps can be applied repeatedly, by using intermediate\nsolutions as the input data, until the ?nal solution is computed.\nThe problem is that each run must include the complete\ninformation of the input graph as well, ignoring even basic\ndata persistence potential. An overview of these and other\n61\nproblems related to the processing of graphs in Map/Reduce\ncan be found in [16].\nIt is important to notice that by design, Map/Reduce is\noptimized for reliability, not for execution time. Each node can\nleave the cluster at any time, without job failures, which is due\nto a very conservative approach to redundancy. For example,\nafter each computation step, such as map, the intermediate\nresult is written back to a distributed ?le systems, to be\neasily recoverable. Furthermore, holding state on a node is\ndiscouraged which on the one hand eases the handling of node\nfailures, but on the other hand requires each computation to\nprovide all required data as input. Therefore, normally each\niteration is dominated by the data-transfer costs.\nA. Mitigations\nTypical graph analysis problems are characterized by small\noutputs \(a set of ?vertex_id result_type? tuples, or even a\nsingle value which is\nnormally a huge graph dramatic\nimpact of a Map/Reduce job’s execution time. Therefore, pat-\nterns applicable to graph algorithms have been proposed [13],\nin order to reduce the total number of messages sent.\nOne frequently employed technique is grouping: instead of\nsending data directly to a vertex, a grouping function merges\nmultiple 


vertices into a single “pool” vertex. In the subsequent\nreduce, all pooled vertices will be computed together In\ncontrast to standard Map/Reduce, the computation will be able\nto access all already computed values from the pool, which\nreduces the need of communication between nodes.\nTo mitigate the amount of graph structure information that\nis sent across the network, the schimmy pattern has been\nproposed. The idea is that the relevant structure information\nis cached on each node in the cluster and accessed by the\nuser reducecode via shared memory. To cache only relevant\ninformation, the framework function that maps vertex ids to\ncluster nodes must be appropriately customized.\nBoth methods, among others, have been analyzed in [13].\nWhile grouping did not yield a signi?cant difference in run-\ntime, the authors found the schimmy pattern to reduce the\nrun-time signi?cantly.\nHowever, both methods have been criticized in [21] for\ndestroying the resilience that comes with Map/Reduce jobs.\nB. A novel paradigm\nGoogle’s success stems from their search product which\nrelies on an iterative graph algorithm that ranks pages based\non their importance called PageRank However, by design, the\nMap/Reduce system is stateless, hence all information about\nboth nodes and their current rank, as well as their edges needs\nto be transferred in the cluster over and over. Despite being\na suboptimal choice for graph computation, the programmer’s\nfocus on a single local action that is automatically scaled to a\nlarge dataset by the framework was appealing.\nHence, Pregel [17] – a graph-parallel system based on the\nBulk Synchronous Parallel [26] \(BSP programmer implements\nan iteration step \(superstep During each iteration, the vertex program\ncan change its state, send messages to its neighbors or change\nits edges. Each iteration receives the previous iteration’s\nmessages as input. If a termination criterion is met each\nvertex can vote to halt the execution and suspend itself. By\nsuspending it basically yields its CPU time to the active nodes.\nUpon consensus about termination, the framework stops the\nexecution.\nBy restricting indirect state changes to message exchanges,\nthe authors argue that the system is inherently free of deadlocks\nand data races [17], while at the same time being simple and\nwell-performing.\nIV. SECOND GENERATION FRAMEWORK\nThis section introduces frameworks that, while loosely\nbased on the Map/Reduce paradigm signi?cantly reduce the\ncommunication overhead imposed by the original proposal.\nA. Parallelization Contracts PACT xed. In contrast,\nexisting, well-known technologies have featured sophisticated\nquery optimizers capable to dynamically adjust a data ?ow\nsince a long time. These components transform the user’s\ninput into an optimized execution plan. The optimization may\ninclude rearranging the sequence of operators, based on their\nalgebraic semantics.\nThe same is applicable to a Map/Reduce job [10]; how-\never, a more formal de?nition of the programming model’s\noperators is required. In the Stratosphere framework, so-called\n“parallelization contracts” de?ne the semantics of an operator.\nThe optimizer that consumes this information is the PACT\ncompiler. A user implements the second order function of\nan operator, which is encapsulated inside a well-de?ned ?rst\norder function. The encapsulation determines the input and\noutput of the function. For example, a match-join requires two\ninputs and has one output. These encapsulations are referred as\ninput/output contracts, respectively. Based on these contracts,\nthe compiler is able to infer possible optimization strategies.\nFurthermore, the developer may give hints to the compiler\nvia Java annotations. These hints include, for example, the\nexpected size of the input / output, the ratio of input to output\nrecords or whether the input is sorted. Using that information,\nthe PACT compiler will do an initial optimization pass before\nsubmitting the job to Nephele, the Stratosphere’s run-time\nsystem.\n1 criticism about Map/Reduce\nis the lack of an ef?cient JOIN operator [4]. While it is possible\nto implement that kind of operators on top of Map/Reduce,\nStratosphere takes another approach, by natively providing\nsuch operation – in multiple forms. Stratosphere comes with\nMATCH, CROSS and COGROUP operators; others can be sup-\nplied by the programmer. These operators allow sophisticated\nimplementations of graphs algorithms.\n62\nBoth the left side and the right side of Figure 2 represent\na k-core computation. The main difference is that on the\nright, we used a MATCH operator from the Stratosphere\nframework to join a vertices neighbors \(input A input V however, when joining sorted data, its cost is usually\nnegligible because big data algorithms are generally IO-bound\nrather than CPU-bound. By providing the neighbor data as a\nseparate input, in each iteration only the vid, core? tuple is\ntransferred from node O to node I , displacing the Schimmy\npattern. In contrast, the Map/Reduce implementation requires\na complete transfer the graph structure during each iteration.\nWe compared both approaches in Section V-C2 to identify\ncompelling differences.\nFigure 2. k-core decomposition Left Map/Reduce, Right: Match/Reduce.\nNotation: I: Input, O: Output, T: Final Output, A: Graph Structure, V Vertex\nData, Dashed Arrow: Iteration Body.\n2 


the\nStratosphere framework is the built-in support for workset\nalgorithms. This technique requires to split the algorithm data\ninto a solution set S and a working set W with the goal\nof adding dynamic programming features to Map/Reduce.\nThe working set contains only those nodes that need to\nbe recomputed in an iteration and is supposedly smaller\nthan S, which contains all graph nodes. Graph algorithms\nthat work only on their neighbor nodes, such as PageRank\nor Connected Components, exhibit such behavior. After an\niteration S is updated and a new working set is computed.\nTherefore, fewer data is repeatedly sent across the network,\nreducing the computation time signi?cantly. However, support\nfor worksets has not yet surfaced in the current Stratosphere\nimplementation.\nAn even more ef?cient solution is to consider every single\ncomputation as a "microstep" and update the solution set\nimmediately. In that case a partial solution re?ects all latest\nchanges, which leads to ?ner-grained parallelism.\nB. Pregel\nThere are two predominant distributed graph processing\nframeworks, that implement Pregel: Hama [23] and Giraph\n[24]. Both are built on top of Hadoop and are maintained by\nthe Apache project. Hama provides two distinct collections of\nAPIs: one pure BSP model for message passing and collective\ncommunication, and one vertex-centric model. Giraph focuses\ninstead on the interoperability between other Apache projects,\nsuch as direct I/O from HBase and is backed up by companies,\nsuch as Yahoo and Facebook. The BSP APIs of both projects\nlet the developer implement the functions that are executed\nby a single graph node. The node may send messages to\nother nodes that will be consumed during the next superstep.\nFurthermore, a node may vote to halt the execution.\nAlthough both frameworks are implemented on top of\nHadoop, they are fundamentally different from the matrix\ncomputation of Map/Reduce. At run-time the frameworks\nbuild up state for every single node and provide methods\nfor sending messages to its neighbors. The programmer can\nconcentrate on the actual algorithm she implements in contrast\nto implementing a map phase to perform the message sending,\nand setting up a reduce phase that needs to transfer the graph\nstructure as input for the next map.\nC. GraphLab\nGraphLab evolved from its ?rst iteration, a framework\nfor CPU-rich shared-memory systems [15], to a distributed\nversion, applicable to clusters of machines [14]. Just like\nthe Pregel proposal, the system is graph-parallel; however,\nit employs different concepts related to dynamic program-\nming techniques, synchronization constraints and vertex-to-\nnode mapping.\nWhile Pregel uses message passing as communication prim-\nitive, in GraphLab each vertex can access the state of adjacent\nvertices. GraphLab also lacks synchronized supersteps: vertex\nprograms are executed asynchronously, while the sync task\nruns continuously in the background. One gain of direct access\nand asynchrony is that nodes always access the most recent\nstate of their neighbors. Another gain of this asynchronous\nexecution is that a single slow running vertex program can\nno longer stall the system. In Pregel the interval between\ntwo supersteps is de?ned by the run time of the vertex with\nthe largest neighborhood. As the number of edges is usually\npower-law distributed, there will be few but spacious vertices\nin the graph This is why GraphLab goes a step further,\nby splitting vertices with enormous neighborhoods across\ndifferent machines and synchronizing them.\nThe functionality of GraphLab is encapsulated in the gather-\napply-scatter GAS the\nedges of each node, information from neighbors \(e.g., their\nk-core values is read-only, as\nrequired by the parallel execution of that phase. The second\nphase, called apply, is executed atomically, allowing changes\nto the data structures, for example the computation and update\nof a node’s new k-core value. The ?nal scatter phase, that is\nagain executed in parallel on the node’s edges, can be used\nfor signaling neighbor nodes or updating edge data.\nV. COMPARISON OF DISTRIBUTED FRAMEWORKS\nFine tuning both our implementations and the compared\nframeworks is critical for the execution time. We therefore\nstart this section by discuss the details of both issues, before\npresenting the most important results from our study.\n63\nG\nra\nph\nLa\nb\nH\nam\na\nSt\nra\nto\nsp\nhe\nre\nG\nira\nph\nH\nad\noo\np\nca.AstroPh.txt\n5\n10\n20\n50\n100\n200\n500\n1000\n tim\ne n[s]\nG\nra\nph\nLa\nb\nH\nam\na\nSt\nra\nto\nsp\nhe\nre\nG\nira\nph\nH\nad\noo\np\namazon0601.txt\n50\n100\n200\n500\n1000\n2000\ntim\ne n[s]\nH\nam\na\nG\nra\nph\nLa\nb\nSt\nra\nto\nsp\nhe\nre\nG\nira\nph\nH\nad\noo\np\nweb.BerkStan.txt\n100\n200\n500\n1000\n2000\ntim\ne n[s]\nH\nam\na\nG\nra\nph\nLa\nb\nG\nira\nph\nH\nad\noo\np\nSt\nra\nto\nsp\nhe\nre\nwiki.Talk.adj.txt\n1\n2\n5\n10\n20\n50\ntim\ne n[m\n]\nFigure 3. The minimum runtimes of all frameworks for different graphs.\nA. Implementation\nHadoop: In order to de?ne a baseline, we implemented\na standard Map/Reduce k-core algorithm and applied the\nschimmy and grouping patterns. We employed the built-in\nsupport for iterations, which executes map and reduce in a loop\nuntil convergence is reached. The mapfunction reads unsorted\ntuples of vertex id, k-core value and a list of neighbors.\nUsing the id as key, it sends the k-core value to both every\nneighbor and the vertex itself Binned by each vertices key, the\nreducefunction receives a list of k-core values and computes a\nnew score. It sends that value back into the mapfunction until\nthe iterations stop. When applying the grouping 


optimization,\nthe key for the reducefunction is computed by a hash function.\nTherefore, a single reducer instance computes the k-core of\nmultiple vertices and outputs one message for each vertex.\nUsing the schimmy pattern, only the vertex id and the k-core\nvalue is sent from the reducer to the mapper, the remaining\noperation is the same as previously described.\nStratosphere: We did a straight port of the Hadoop code\nto Stratosphere. However, as the PACT implementation of\niterations has yet to surface, we implemented it at the Nephele\nData Flow engine level. Furthermore we employed the match\noperator, as illustrated in Figure 2 This way, we can split the\ngraph data and structure information into two inputs and cache\nthe latter, which achieves a similar effect to the Schimmy\npattern.\nRecently Stratosphere gained Nephele support for workset\niterations [8]. Its goal is to recompute only the nodes whose\ninput values have changed. Based on that functionality we\nimplemented two solutions. The ?rst is to emit just enough\nnodes, to successfully recompute nodes, that have at least one\nrecently changed neighbor. The second is a emulation of a\nPregel implementation that saves a node’s state information\nin the solution set and passes messages along the working set\n\(cf Figure Nephele\nexecution nodes, hence both solutions represent a trade off. In\nthe ?rst case, this means increased complexity in the data ?ow\nand a slightly higher message exchange compared to Pregel.\nIn the second case, the whole node state is passed around,\nleading to increased message size. While we implemented\nboth solutions, the Pregel solution yield better results and is\nintroduced in the following.\nFigure 4. Dynamic programming inspired k-core decomposition in Strato-\nsphere. Left: Map/Reduce using worksets. Right: Using a Pregel emulation\nGiraph, Hama: Our Pregel implementations closely re-\nsemble the pseudo-code in Algorithm 1 Initially a vertex sets\nits k-core value to its degree on startup. When a vertex receives\na message, it recomputes its value. The process repeats upon\ncomputation of a changed value, otherwise the framework\nsuspends the execution of that node. As an optimization, we\nimplemented a shared hash table, that serves the most recent\ncomputation results to processes on the same node. In this\nway, we emulate the microstep" functionality of Stratosphere.\nFurthermore we worked with combiners to reduce the number\nof messages sent across the network and added ?ltering to our\nthe code. The API differences between Hama and Giraph are\nmarginal, hence both implementations are nearly identical.\nGraphLab: Just like the Pregel implementation, we closely\nimplemented our proposed pseudo-code using the GAS pat-\ntern: In the gather function, we collect the vertex id of\neach neighbor, along with its k-core value. To collect that\ndata in a list, we reimplemented the operator+= function,\nas GraphLab assumes commutative associative operations of\nprimitive data types as default. The new k-core value is\ncomputed in the apply function, while neighbors were noti?ed\nin the scatter function. We were able to run this code both with\nthe lowest consistency guarantees, thus the high parallelism.\nDespite GraphLab’s preference for the GAS pattern, we\nimplemented also a message based version using GraphLab’s\n64\nDataset Nodes Edges\nca.AstroPh 18,772 396,160\nca.CondMat 23,133 186,936\nAmazon0601 403,399 2,443,412\nweb-BerkStan 685,235 6,649,474\ncom.Youtube 1,134,890 2,987,624\nwiki-Talk 2,394,390 4,659,569\ncom.Orkut 3,072,441 117,185,083\nTable I\nDATASETS USED IN THIS STUDY\nbuilt-in messaging framework. We also added the ?ltering\ntechnique to both versions of the code.\nB. Testbed\nTo test our implementations, we set up an AWS cluster,\nrunning the 1.0.3 release of Apache Hadoop and HDFS to-\ngether with the 0.6.0 release of Apache Hama and the recently\nreleased Giraph 1.0. We installed GraphLab 2.1.4414 and the\nlatest Stratosphere checkin from the Stratosphere-iterations git\nbranch, which is fd4f at the time of writing. Experiments\nwere performed using up to 32 Amazon’s M1 MEDIUM nodes\nwith 2 EC2 Compute Units and 3.75 GB of RAM each. The\ncluster size was scaled from 2 nodes up to 32, each framework\nwas con?gured to distribute computation evenly.\nWe carried out comparison measurements on a recent 16\nCPU machine with 10 GB of RAM and Sata-SSDs. The\nsoftware was similar to the EC2 cluster setup.\nThe data sets were taken from the public available collec-\ntions of the SNAP [9] project. Table V-B summarizes them.\nC. Results\nFor the sake of brevity, we introduce only the most in-\nteresting results. We cite the individual publications where\nappropriate. Unless explicitly noted, the cluster size was set\nto 12.\n1 found the performance\nof Map/Reduce based approaches inferior to graph-centric\nones \(cf. Figure 3 marks the bottom of the table\nin each of our comparisons. The results are from 2 times up\nto 66 times slower We did not ?nd signi?cant improvements\nby using the group or schimmy patterns [12]. On the other\nhand GraphLab was – by far – the fastest of all evaluated\nframeworks. Under all circumstances, the performance of\nat least one graph-centric framework superseded the other\napproaches. Therefore, from an execution time point of view,\nwe clearly recommend relying on a graph-centric framework.\nA closer analysis of Figure 3 reveals that data sets with\nless than a hundred thousand nodes play in the hands of\nStratosphere. Its lack of a wiring phase, as in Hama, where\nnodes have to be connected to their neighbors, and the lack\nof Hadoop’s 


serialization makes it the fastest of the Java-\nbased frameworks for smaller data sets. However, for larger\ndata sets such as the Amazon0601 or Youtube ones, the\npicture is different. Here GraphLab and Hama exhibit faster\nperformance. In these cases, our Pregel Stratosphere code was\nable to yield comparable results In contrast, the Map/Reduce\nand MATCH-based Stratosphere implementations, which are\nnot shown here, were far off by a factor of at least 4. Therefore,\nin that scenario, while vertex centric frameworks take the lead,\nStratosphere is at least comparable.\nApplying the grouping or schimmy patterns to Hama did not\nyield any improvement \(cf. [20 the\ndensity of the network might have hit a suboptimal code path.\n2 comparison of\nthe more traditional approach of sending all data via a single\ninput \(map inputs, one for the graph data\nand another for the computation data \(MATCH for all tested graph data \(cf. Table II reveals\neven more gains.\nType File time [m]\nca.CondMat.txt Match/Reduce 0.23\nca.CondMat.txt Pregel 0.23\nca.CondMat.txt Map/Reduce 0.25\ncom.youtube.ungraph.txt Pregel 9.98\ncom.youtube.ungraph.txt Match/Reduce 16.78\ncom.youtube.ungraph.txt Map/Reduce 34.40\nweb.BerkStan.txt Pregel 14.12\nweb.BerkStan.txt Match/Reduce 24.70\nweb.BerkStan.txt Map/Reduce 298.35\nTable II\nMAP VS. MATCH VS. PREGEL BASED KCORE IN STRATOSPHERE\nFor small datasets, matching does not yield a noticeable\nimprovement. At the same time, the performance does not get\nworse due to the joining of both tables. For the Youtube dataset\nwith ? 1 million nodes and the Orkut data with ? 3 million\nnodes, the bene?t is between 1/3 and 1/2 of the computation\ntime in a cluster of size 12. As previously mentioned, the\nBerkeley networks are associated with particularly bad per-\nformance in Stratosphere. One cause might be the join over\nnodes with a maximum degree of 84 230. However, the results\nstill con?rm our ?nding: Even in this scenario, matching is\nthree times as fast. These results show that the addition of a\nmatch operator was indeed a valuable contribution, which both\nspeeds up the computation and obsoletes the various proposals\nfor join implementations for Map/Reduce.\nTime s]\namazon0601\nca?AstroPh\nca?CondMat\nweb?BerkStan\nwiki?Talk\n0 50 100 150\nDistributed\n0 50 100 150\nMulticore\nGraphLab\nHama\nFigure 5. Hama and GraphLab in both a distributed and multicore setting.\n3 Multicore and Shared Memory: To recon?rm our ?nd-\nings from the distributed scenario, we reproduced our mea-\nsurements on a multicore machine. In Figure 5 we compare\n65\nboth scenarios using the analyzed vertex centric frameworks.\nThe results for the Map/Reduce frameworks did not match\nthe speed of their counterparts and have been left out. The\n?rst thing to notice is that GraphLab apparently comes from\na multicore background and is still optimized for that. In that\nscenario, Hama performs worse than GraphLab by at least\n20% for every tested data set. The gain shows up especially\nusing large data sets in the multicore scenario, which is an\nimportant bene?t.\nIn the distributed scenario, the gain is negligible for a huge\ndata set like Wiki-talk and even reversed for the Berkeley\ndata. As previously mentioned, dense data set seems to exploit\na shortcoming in the implementation of distributed GraphLab.\nFor a complete analysis of GraphLab on a multicore machine\nsee [18].\nTime s]\namazon0601\nca?AstroPh\nca?CondMat\np2p?Gnutella31\nroadNet?TX\nsoc?sign?Slashdot\nweb?BerkStan\nwiki?Talk\n0 10 20 30 40 50 60\nGraphLab\n0 10 20 30 40 50 60\nHama\nfiltered\nnot?filtered\nFigure 6. Evaluation of the ?ltering proposal using GraphLab and Hama.\nIteration\nAc\ntiv\ne\n N\nod\nes\n0\n500000\n1000000\n1500000\n2000000\n2500000\n0 10 20 30 40\nAmazon0601 filter\nAmazon0601 no?filter\nweb?BerkStan filter\nweb?BerkStan no?filter\nwiki?Talk filter\nwiki?Talk no?filter\n?\n?\n?\n?\n?\n?\nFigure 7. Active Nodes with and without ?ltering.\n4 contribution of this study is an im-\nproved algorithm for the k-core decomposition. It minimizes\nthe message transfer among nodes, and thus the number\nof active nodes per iteration. This dynamic programming\ntechnique should have a measurable impact. Figure 6 analyzes\nthe proposal on the multicore machine using a variety of\ndata sets and both vertex centric frameworks. The impact is\napparently stronger for GraphLab; however, it is measurable\nalso for Hama. This might be related to implementation-\nspeci?c differences in the frameworks.\nFor the huge Wiki-talk dataset, the ?lter cuts the execution\ntime nearly by half. The plot showing the active nodes in\nFigure 7 explains such difference. Instead of the high number\nof active nodes, which only slowly fade into a stable state\nafter around 30 iterations, the activity rapidly diminishes in\nless than 5 iterations. This effect, even if not as strong, is the\nsame for all data sets.\n5 frequently cited reason for Hadoop’s\ninferior performance is the built-in checkpointing after each\nstep, which eases recovery, but hampers performance [5].\nHowever, with the relative youth of its successors, it is cur-\nrently the only framework that can actually recover from faults.\nBoth distributed GraphLab and Stratosphere detect lost nodes\nquickly, however cannot recover from errors. Both display an\nerror code on the console. Only Stratosphere has a built-in\nrecovery mechanism, which is at the time of writing unable to\nhandle 


iterations properly. Hence that situation might change\nsoon. Hama’s BSPMaster, on the other hand, waits for all\nprocesses to ?nish but does not appear to have timely heartbeat\nnoti?cation built-in.\nThese ?ndings lead us to the recommendation that under the\nassumption of high probability of node failure and extreme\nlong running jobs, a conservative choice of frameworks is\nsuitable.\nVI. CONCLUSION\nIn this paper we presented a thorough study of modern big\ndata frameworks and their application to graph algorithms.\nWe selected the k-core algorithm and adapted it to each\nplatform. We executed the algorithm both in a distributed\ncloud settings as well as on CPU rich multicore machines. Our\n?ndings con?rm the validity of these improved frameworks.\nEach of them improves over Hadoop in terms of execution\ntime. However, from a programming paradigm point of view,\na vertex centric framework is the better ?t for graph related\nproblems. Not only is the ease of programming an important\npoint, as the focus can be close to the sketched algorithm. The\nperformance of vertex-centric frameworks is not matched by\nMap/Reduce-based frameworks, even by improved ones, such\nas Stratosphere Therefore, we clearly recommend one of the\nPregel-inspired frameworks for graph processing, although the\nresilience of those frameworks has room for improvements.\nCompared to Hadoop, Stratosphere enhanced the situation\nenormously, thanks to their ?exible programming contracts\nconcept. For graph algorithms, the MATCH operator as a\nmean to split input into worksets and graph input yields clear\nperformance gains. An important announced, but still missing\nfeature of Stratosphere will be the PACT compiler support\nfor worksets. With that feature available, Stratosphere might\nbe able to catch up to vertex centric frameworks, using highly\noptimized data?ows; however, the ease of programming might\nstill be an issue. We therefore recommend a re-evaluation at\nthat point.\nAnother outcome of this work is an improved dynamic\nprogramming algorithm, which greatly improves the runtime\nof k-core. Future work on graph algorithms might consider\nthe ?ltering concept as a possible source for improvements.\nACKNOWLEDGMENT\nThis work has been partially supported by the EIT Activity\n“Europa” n. 12115 and by an AWS in Education Research\nGrant Award and by\n66\nREFERENCES\n[1] Amazon Elastic Compute Cloud \(Amazon EC2  and A. Vespignani. Large\nscale networks ?ngerprinting and visualization using the k-core decom-\nposition Advances in neural information processing systems, 18:41,\n2006.\n[3] G. D. Bader and C. W. Hogue. Analyzing yeast protein-protein\ninteraction data obtained from different sources. Nature biotechnology,\n20\(10 Oct. 2002.\n[4] S. Blanas, J. M. Patel, V. Ercegovac, J. Rao, E. J. Shekita, and Y. Tian.\nA comparison of join algorithms for log processing in mapreduce. In\nProceedings of the 2010 ACM SIGMOD International Conference on\nManagement of data, SIGMOD ’10, pages 975–986, New York, NY,\nUSA, 2010. ACM.\n[5] J. Cohen. Graph twiddling in a mapreduce world. Computing in Science\nEngineering, 11\(4  A. Garg, and S. Rajaram. Google news person-\nalization: scalable online collaborative ?ltering. In Proceedings of the\n16th international conference on World Wide Web, WWW ’07, pages\n271–280, New York, NY, USA, 2007 ACM.\n[7] J. Dean and S. Ghemawat. Mapreduce: Simpli?ed data processing\non large clusters. In Sixth Symposium on Operating System Design\nand Implementation \(OSDI’04  S. Ewen, K. Tzoumas, M. Kaufmann, and V. Markl. Spinning fast\niterative data ?ows. Proc. VLDB Endow 5\(11   F. Hueske, M. Peters, M. J. Sax, A. Rheinländer, R. Bergmann, A. Kret-\ntek, and K. Tzoumas. Opening the black boxes in data ?ow optimization.\nProc. VLDB Endow., 5\(11  S. Suri, and S. Vassilvitskii. Filtering: a method\nfor solving graph problems in mapreduce. In Proceedings of the 23rd\nACM symposium on Parallelism in algorithms and architectures, SPAA\n’11, pages 85–94, New York, NY USA, 2011. ACM.\n[12] I. Leonardi. k–core decomposition of large graphs with hadoop. Master’s\nthesis Università degli Studi di Trento, March 2011.\n[13] J. Lin and M. Schatz. Design patterns for ef?cient graph algorithms\nin mapreduce. In Proceedings of the Eighth Workshop on Mining and\nLearning with Graphs, MLG ’10 pages 78–85, New York, NY, USA,\n2010. ACM.\n[14] Y. Low, D. Bickson, J. Gonzalez, C. Guestrin, A. Kyrola, and J. M.\nHellerstein. Distributed graphlab: a framework for machine learning\nand data mining in the cloud. Proc VLDB Endow., 5\(8  M.\nHellerstein. Graphlab: A new framework for parallel machine learning.\n06 2010.\n[16] A. Lumsdaine, D Gregor, B. Hendrickson, and J. Berry. Challenges\nin parallel graph processing. Parallel Processing Letters 17\(01  Czajkowski. Pregel: a system for large-scale graph processing.\nIn Proceedings of the 2010 ACM SIGMOD International Conference on\nManagement of data, SIGMOD ’10, pages 135–146, New York, NY,\nUSA, 2010. ACM.\n[18 L. Masera. Progettazione e valutazione di algoritmi su gra? in graphlab.\nMaster’s thesis, Università degli Studi di Trento, January 2013.\n[19] A. Montresor, F. De Pellegrini, and D. Miorandi. Distributed k-core\ndecomposition. In Proceedings of the 30th annual ACM SIGACT-\nSIGOPS symposium on Principles of 


distributed computing, PODC ’11,\npages 207–208, New York, NY, USA, 2011. ACM.\n[20] L. E. P. Morales. Large scale distributed graph processing: A compar-\native analysis. Master’s thesis, Università degli Studi di Trento, March\n2012.\n[21] M. Schwarzkopf, D. G. Murray, and S. Hand. The seven deadly sins of\ncloud computing research. In Proceedings of the 4th USENIX conference\non Hot Topics in Cloud Ccomputing, HotCloud’12, pages 1–1, Berkeley,\nCA, USA, 2012. USENIX Association.\n[22] S. B. Seidman. Network structure and minimum degree Social\nNetworks, 5\(3  Hama:\nAn ef?cient matrix computation with the mapreduce framework. In\nProceedings of the 2010 IEEE Second International Conference on\nCloud Computing Technology and Science, CLOUDCOM ’10, pages\n721–726, Washington DC, USA, 2010. IEEE Computer Society.\n[24] The Apache Software Foundation. Apache Giraph http://giraph.apache.\norg/.\n[25] The Apache Software Foundation. Apache Hadoop http://hadoop.\napache.org/.\n[26] L. Valiant. A bridging model for parallel computation. Communications\nof the ACM, 33\(8  simpli?ed relational data processing on large clusters. In\nProceedings of the 2007 ACM SIGMOD international conference on\nManagement of data, SIGMOD ’07, pages 1029–1040, New York, NY,\nUSA, 2007. ACM.\n67\n 


stability \(standard deviation, tail percen-\ntile, PI multiple scenarios or system designs. This is an \narea in which our reporting is particularly weak. Even the formal statistical comparisons we provide typi-\ncally focus on a single measure, and nearly always compare means rather than measures of risk.  \nThis list of analytics challenges is not exhaustive, but it is a good start. We are currently giving simulation \nusers amazing tools for generating data, but not nearly as much help in getting the most out of these data.  \n7 CONCLUSIONS \nThis paper has continued the discussion of Grand Challenges in M&S by discussing these from an Opera-\ntional Research/Management Science \(OR/MS It has discussed themes including simulation \nin healthcare, value of information, data modeling, stochastic modeling and optimization, agent-based \nsimulation and simulation analytics. \nACKNOWLEDGMENT \nThe work described in C. Macal’s section work is supported by the U.S. Department of Energy under \ncontract number DE-AC02-06CH11357.  P. L’Ecuyer’s work is supported by grants from NSERC-\nCanada and a Canada Research Chair nREFERENCES \nAksin, O. Z., M. Armony, and V. Mehrotra. 2007. “The Modern Call Center: A Multi-Disciplinary Per-\nspective on Operations Management Research”. Production and Operations Management 16 \(6 nAsimov, I. 1988. Prelude to Foundation. Doubleday. \nAvramidis, A. N., A. Deslauriers, and P. L’Ecuyer. 2004 Modeling Daily Arrivals to a Telephone Call \nCenter”. Management Science 50 \(7 Bruno, G., Genovese, A. 2011. “Applications of agent-based models for optimization prob-\nlems: a literature review,” Expert Systems with Applications, doi: 10.1016/j.eswa. 2011.12.015 \nBengtsson L., X. Lu, A. Thorson R. Garfield, and J. von Schreeb. 2011. “Improved Response to Disas-\nters and Outbreaks by Tracking Population Movements with Mobile Phone Network Data: A Post-\nEarthquake Geospatial Study in Haiti.” PLoS Med 8\(8 e1001083. \nBowers J., Ghattas M. and Mould G. 2012. Exploring alternative routes to realising the benefits of simu-\nlation in healthcare, Journal of the Operational Research Society, 63:1457-1466. \nBrailsford S.C. 2005 Overcoming barriers to the implementation of OR simulation models in healthcare.  \nJournal of Clinical Investigative Medicine, 28:312-315. \nBrailsford S.C., Bolt T., Connell C., Klein J. and Patel B. 2009 Stakeholder engagement in health care \nsimulation. In: Rossetti MD, Hill RR, Johansson B, Dunkin A and Ingalls RG \(eds 1840–1849. \n1279\nTaylor, Brailsford, Chick, L’Ecuyer, Macal and Nelson \n \nBrailsford S.C., Bolt T.B., Bucci G., Chaussalet, T.M., Connell N.A., Harper P.R., Klein J.H., Pitt M. and \nTaylor M. 2013. Overcoming the barriers: a qualitative study of simulation adoption in the NHS. \nJournal of the Operational Research Society 64: 157-168.  \nBrailsford S.C., Harper P.R., Patel B and Pitt M. 2009. An Analysis of the Academic Literature on Simu-\nlation and Modelling in Healthcare. Journal of Simulation 3:130-140. \nChannouf, N., and P. L’Ecuyer 2012. “A Normal Copula Model for the Arrival Process in a Call Center”. \nInternational Transactions in Operational Research 19:771–787. \nEpstein, J. M., and R. Axtell. 1996. Growing Artificial Societies: Social Science From The Bottom Up. \nCambridge, MA: MIT Press. \nFerguson, N. 2007. “Capturing Human Behavior.” Nature 446:733, April. \nFletcher A. and Worthington D. 2009. What is a ‘generic’ hospital model?—a comparison of generic’ \nand ‘specific’ hospital models of emergency patient flows. Health Care Management Science 12 n374–391. \nFone D, Hollinghurst S, Temple M, Round A, Lester N, Weightman A, Roberts K, Coyle E, Bevan G and nPalmer S, 2003. Systematic review of the use and value of computer simulation modelling in popula-\ntion health and health care delivery. Journal of Public Health Medicine 25: 325–335. \nGans, N., N. Liu, A Mandelbaum, H. Shen, and H. Ye. 2010. “Service Times in Call Centers: Agent Het-\nerogeneity and Learning with some Operational Consequences”. Manuscript. \nGrimm, V., et al. 2006. “A standard protocol for describing individual-based and agent-based models.” \nEcological Modelling 198 \(1-2 2007. Interconnected DES models of emergency, outpatient, and inpatient de-\npartments of a hospital. In Henderson SG, Biller B, Hsieh M-H, Shortle J, Tew JD, and Barton RR \n\(eds Simulation Conference. Washington, DC. IEEE: Piscataway, \nNY, pp 1461–1466. \nHulshof P.J.H, Kortbeek N Boucherie R.J., Hans E.W. and Bakker P.J.M., 2012. Taxonomic classifica-\ntion of planning decisions in health care: a structured review of the state of the art in OR/MS. Health \nSystems 1: 129-175 \nIbrahim, R., and P L’Ecuyer. 2013. “Forecasting Call Center Arrivals: Fixed-Effects, Mixed-Effects, and \nBivariate Models Manufacturing and Services Operations Management 15 \(1 Shen. 2012. “On the Modeling and Forecasting of Call Cen-\nter Arrivals”. In Proceedings of the 2012 Winter Simulation Conference: IEEE Press. paper inv243. \nJaoua, A., P. L’Ecuyer, and L. Delorme. 2013. “Call type dependence in multiskill call centers”. Simula-\ntion. see http://sim.sagepub.com/content/early/2013/04/01/0037549713479405. \nJun J.B., Jacobson S.H. and Swisher J.R 1999. Application of discrete-event simulation in health care \nclinics: A survey. Journal of the Operational Research Society 50: 109–123. \nKoole, G. 2013. Call Center Optimization. MG books, Amsterdam. \nKosinaki, M 


D. Stillwell, and T. Graepel. 2013. “Private records and attributes are predictable from digi-\ntal records of human behavior,” Proc. National Academy of Sciences, 110\(15 April Modeling and Analysis. Fourth ed. New York: McGraw-Hill. \nMacal, C. M., 2009. “Agent-based modeling and artificial life,” in Encyclopedia of Complexity and Sys-\ntem Science, Robert A Meyers \(ed Springer. \nMacal, C. M., 2010. “To Agent-based Simulation from System Dynamics.” in Proceedings of the 2010 nWinter Simulation Conference. B. Johansson, S. Jain, J. Montoya-Torres, J. Hugan, and E. Yücesan, \neds. pp 371-382. Wiley-IEEE Press. \nMacal, C. M., and M. J. North. 2010. “Tutorial on agent-based modelling and simulation,” Journal of \nSimulation, Special Issue on Agent-Based Modelling 4\(3 A., Eldabi T. and Jahangrian M.  2008. Cross-sector analysis of simulation methods: A survey of \ndefense and healthcare. Transforming Government 3:181–189. \n1280\nTaylor, Brailsford, Chick, L’Ecuyer, Macal and Nelson \n nNelson, B. L. 2008. “The MORE Plot: Displaying Measures of Risk & Error from Simulation Output. \nProceedings of the 2008 Winter Simulation Conference, Edited by S. J. Mason, R. R. Hill, L. Mönch, \nO. Rose, T. Jefferson and J. W. Fowler, 413–416. Piscataway, New Jersey: Institute of Electrical and \nElectronics Engineers, Inc nNorth, M. J., and C. M. Macal. 2013. “Product and Process Design Patterns For Agent-Based Modeling,” \nJournal of Simulation, April. \nÖren, T. 2011. “A Critical Review of Definitions and About 400 Types of Modeling and Simulation.” \nModeling & Simulation Magazine. Society for Computer Simulation. No. 3 \(July L’Ecuyer, and N. Régnard. 2013. “Rate Based Arrival Process Models for Modeling and \nSimulation of Call Centers”. manuscript. \nParker, J., and J. M. Epstein. 2011. “A Distributed Platform for Global-Scale Agent-Based Models of \nDisease Transmission” ACM Trans. Model. Comput. Simul. 22\(1 1979. “Compilation of Definitions of Simulation.” Simulation. 33: 61-63 \(August ndoi:10.1177/003754977903300205. \nRobert, C. P., and G. Casella. 2004. Monte Carlo Statistical Methods. second ed. New York, NY: Spring-\ner-Verlag. \nReynolds, C. 1987. "Flocks, herds and schools: A distributed behavioral model." ACM SIGGRAPH '87: \nProc. 14th Annual Conference on Computer Graphics and Interactive Techniques, pp 25–34, \ndoi:10.1145/37401.37406. \nRubinstein, R. Y., and D. P. Kroese. 2008. Simulation and the Monte Carlo Method. 2nd ed. Wiley. \nSchloss Dagstuhl. 2002. www.dagstuhl.de/02351. \nSong, W. T., and B. W. Schmeiser 2009. Omitting meaningless digits in point estimates: The probability \nguarantee of leading-digit rules Operations Research 57:109–117. \nSteckley, S. G., S. G. Henderson, and V. Mehrotra. 2005. “Performance measures for service systems \nwith a random arrival rate”. In Proceedings of the 2005 Winter Simulation Conference, edited by M. \nE. Kuhl, N. M. Steiger, F. B. Armstrong, and J. A. Joines, 566–575: IEEE Press nTaylor, S.J.E., Fishwick, P.A., Fujimoto, R., Page, E.H., Uhrmacher, A.M., Wainer, G. 2012. Panel on \nGrand Challenges for Modeling and Simulation.  In Proceedings of the Winter Simulation Conference \n2012. ACM Press NY. \nTaylor, S.J.E., Khan, A., Morse, K.L., Tolk, A., Yilmaz, L, Zander, J. 2013a. Grand Challenges on the nTheory of Modeling and Simulation. In Proceedings of the 2013 Symposium on the Theory of Model-\ning and Simulation. SCS, Vista, CA. To appear. \nTaylor, S.J.E., O. Balci, W. Cai, M. Loper, D. Nicol and G. Riley 2013b. Grand Challenges in Modeling \nand Simulation: Expanding Our Horizons.  In Proceedings of the 2013 SIGSIM-PADS Conference, to \nappear. \nThe Economist. 2013. “Dr Seldon, I presume.” Feb. 23. \nWieland, J. R and B. L. Nelson. 2009. “How Simulation Languages Should Report Results: A Modest \nProposal.” In Proceedings of the 2009 Winter Simulation Conference, Edited by M. D. Rossetti, R. R. \nHill, B. Johansson, A. Dunkin, and R. G. Ingalls, 709–715. Piscataway, New Jersey: Institute of Elec-\ntrical and Electronics Engineers, Inc nWilson J.C.T. 1981. Implementation of computer simulation projects in health care. Journal of the Opera-\ntional Research Society 32: 825–832. \nAUTHOR BIOGRAPHIES \nSALLY C. BRAILSFORD is Professor of Management Science at the University of Southampton, UK. \nShe received a BSc in Mathematics from the University of London, and MSc and PhD in Operational Re-\nsearch from the University of Southampton. Her research interests include simulation modeling method-\nologies, system dynamics, health service research and disease modeling, and the modeling of human be-\nhavior in healthcare systems. She is chair of the European Working Group on OR Applied to Health \n1281\nTaylor, Brailsford, Chick, L’Ecuyer, Macal and Nelson \n \nServices ORAHS Science, the Journal of Simulation and Operations Research for Health Care. Her email \naddress is s.c.brailsford@soton.ac.uk. \n \nSTEPHEN E. CHICK is a professor of Technology and Operations Management at INSEAD, and the \nNovartis Chair of Healthcare Management. He has worked in the automotive and software sectors prior to \njoining academia, and now teaches operations with applications in manufacturing and services particular-\nly the health care sector. He enjoys Bayesian statistics, stochastic models, simulation, and the music of \nthe Grateful Dead. His email address is stephen.chick@insead.edu. \n \nPIERRE L’ECUYER is Professor in the DIRO, at the Université de Montréal, Canada. He holds the \nCanada Research Chair in Stochastic Simulation 


and Optimization. He is a member of the CIRRELT and \nGERAD research centers. His main research interests are random number generation, quasi-Monte Carlo \nmethods, ef?ciency improvement via variance reduction sensitivity analysis and optimization of discrete \nevent stochastic systems, and discrete-event simulation in general. He is currently Editor-in-Chief for \nACM Transactions on Modeling and Computer Simulation, and Associate/Area Editor for ACM Transac-\ntions on Mathematical Software, Statistics and Computing, International Transactions in Operational Re-\nsearch, and Cryptography and Communications. \n \nCHARLES M. MACAL, PhD, PE, is a senior system engineer at Argonne National Laboratory and Sen-\nior Fellow of the Computation Institute University of Chicago. He has developed many applications of \nagent-based simulation, discrete event simulation, system dynamics, and optimization models of econom-\nic equilibrium systems, and is a principal investigator for the Repast Simphony agent-based modeling \ntoolkit \(macal@anl.gov Walter P. Murphy Professor and Chair of the Department of Industrial Engi-\nneering and Management Sciences at Northwestern University. He is a Fellow of INFORMS and IIE. His \nresearch centers on the design and analysis of computer simulation experiments on models of stochastic \nsystems. His e-mail and web addresses are nelsonb@northwestern.edu and \nwww.iems.northwestern.edu/˜nelsonb. \n \nSIMON J E TAYLOR is the Founder and Chair of the COTS Simulation Package Interoperability \nStandards Group \(CSPI PDG Editor-in-Chief of the Journal of Simulation.  He \nwas Chair of ACM SIGSIM from 2005 to 2008. He is a Reader in the School of Information Systems, \nComputing and Mathematics at Brunel and leads the ICT Innovation Group He has published over 150 \narticles in modeling & simulation and distributed computing.  His recent work has focused on leading the \ndevelopment of Grand Challenges in Modeling & Simulation and the development of standards for dis-\ntributed simulation and cloud computing in industry. His email address is Simon.Taylor@brunel.ac.uk. \n \n1282\n 


introduced SALSA, an approach to automatically\nanalyze Hadoop logs to construct state-machine views of the\nplatform’s execution [25]. The derived state-machines are used\nto trace the data-flow and control-flow executions. SALSA\ncomputes the histograms of the durations of each state and uses\nthese histograms to estimate the Probability Density Functions\n\(PDFs between the PDFs across machines to detect\nanomalies. Tan et al. also compare the duration of a state\nin a particular node with its past PDF to determine if the\nduration exceeds a determined threshold and can be flagged\nas an anomaly.\nAnother related work to this paper is the approach of Xu\net al. in [26], which uses the source code to understand the\nstructure of the logs. They create features based on the constant\nand variable parts of the log messages and apply the Principal\nComponent Analysis \(PCA behaviour.\nAll the above approaches are all designed for system\nadministrators in managing their large clusters. Our approach,\non the other hand, aims to assist developers in comparing the\ndeployed system on such large clusters against the develop-\nment cloud.\nX. CONCLUSION\nDevelopers of BDA Apps typically first develop their appli-\ncation with a small sample of data in a pseudo cloud, then\ndeploy the application in a large scale cloud environment.\nHowever, the larger data and more complex environments\nlead to unexpected executions of the underlying platform.\nSuch unexpected executions and their context cannot be easily\nuncovered by traditional approaches.\nIn this paper, we propose an approach to uncover the\ndifferent behaviour of the underlying platforms for BDA Apps\nbetween runs with small testing data and large real-life data\nin a cloud environment. To evaluate our approach, we perform\na case study on Hadoop, a widely used platform, with three\nBDA Apps. The case study results show the strength of our\napproach in two aspects:\n1 drastically reduces the verification effort\nby 86-97% when verifying the deployment of BDA\nApps in the cloud.\n2 the prob-\nlematic logs reported by our approach are much fewer\nthan using keyword search, which makes it possible to\nmanually explore the problematic logs.\nIn addition, our approach provides additional context informa-\ntion \(execution sequences sequences of the logs to\nrapidly understand the cause of problematic log lines.\nREFERENCES\n[1] D. Fisher, R DeLine, M. Czerwinski, and S. Drucker, “Interactions with\nbig data analytics,” interactions, vol. 19, no. 3 pp. 50–59, May 2012.\n[2] N. Wingfield, “Virtual product, real profits: Players spend on zynga’s\ngames, but quality turns some off,” Wall Street Journal.\n[3] “Ebay is powered by hadoop http://wiki.apache.org/hadoop/PoweredBy.\n[4] T. White, Hadoop: The Definitive Guide. Oreilly & Associates Inc,\n2009.\n[5] M. Isard, M. Budiu, Y. Yu, A. Birrell, and D. Fetterly, “Dryad:\ndistributed data-parallel programs from sequential building blocks,”\nSIGOPS Oper. Syst. Rev., vol. 41, no. 3, pp. 59–72, Mar. 2007.\n[6 S. Sorkin, “Large-scale, unstructured data retreival and analysis using\nsplunk,” Technical paper, Splunk Inc 2009.\n[7] P. Mundkur, V. Tuulos, and J. Flatow, “Disco: a computing platform\nfor large-scale data analytics in Erlang ’11: Proc. of the 10th ACM\nSIGPLAN workshop on Erlang. New York, NY, USA: ACM, 2011, pp.\n84–89.\n[8 J. Dean and S. Ghemawat, “Mapreduce: simplified data processing on\nlarge clusters,” Commun. ACM, vol. 51, no 1, pp. 107–113, January\n2008.\n[9] W. Shang, Z. M. Jiang, B. Adams, A. E. Hassan, M. Godfrey, M. Nasser,\nand P Flora, “An Exploratory Study of the Evolution of Communicated\nInformation about the Execution of Large Software Systems,” in WCRE\n’11: Proceedings of the 18th Working Conference on Reverse Engineer-\ning, Lero Limerick, Ireland, October 2011.\n[10] Z. M. Jiang, A. E. Hassan, G. Hamann, and P. Flora, “An automated\napproach for abstracting execution logs to execution events,” J. Softw.\nMaint. Evol., vol. 20, no 4, pp. 249–267, 2008.\n[11] L. Page, S. Brin, R. Motwani, and T. Winograd, “The pagerank citation\nranking Bringing order to the web.” Stanford InfoLab, Technical Report\n1999-66, November 1999.\n[12] Z. M. Jiang, A. E Hassan, G. Hamann, and P. Flora, “Automatic\nidentification of load testing problems,” in ICSM ’08: Proc. of 24th IEEE\nInternational Conference on Software Maintenance. Beijing, China:\nIEEE, 2008, pp. 307–316.\n[13 America’s most wanted - a metric to detect persistently faulty ma-\nchines in hadoop http://hadoopblog.blogspot.com/2010/06/americas-\nmost-wanted-metric-to-detect.html.\n[14] D. Cotroneo, S Orlando, and S. Russo, “Failure classification and\nanalysis of the java virtual machine,” in Proceedings of the 26th IEEE\nInternational Conference on Distributed Computing Systems, ser. ICDCS\n’06. Washington, DC, USA IEEE Computer Society, 2006, pp. 17–.\n[15] C. Olston, B. Reed, U. Srivastava, R. Kumar, and A. Tomkins, “Pig latin:\na not-so-foreign language for data processing,” in SIGMOD ’08: Proc.\nof the 2008 ACM SIGMOD international conference on Management of\ndata. New York, NY, USA: ACM, 2008, pp. 1099–1110.\n[16] A. F. Gates O. Natkovich, S. Chopra, P. Kamath, S. M. Narayanamurthy,\nC. Olston, B. Reed, S. Srinivasan, and U Srivastava, “Building a high-\nlevel dataflow system on top of Map-Reduce: the Pig experience,” Proc.\nVLDB Endow., vol. 2, no. 2, pp. 1414–1425, 2009.\n[17] “Amazon ec2,” https://aws.amazon.com/ec2/.\n[18] M. Fischer 


J. Oberleitner, H. Gall, and T. Gschwind, “System evolution\ntracking through execution trace analysis,” in IWPC ’05: Proceedings of\nthe 13th International Workshop on Program Comprehension. Wash-\nington, DC, USA: IEEE Computer Society, 2005, pp. 237–246.\n[19] J. Kothari, D. Bespalov, S. Mancoridis, and A. Shokoufandeh On\nevaluating the efficiency of software feature development using alge-\nbraic manifolds,” in ICSM ’08 International Conference on Software\nMaintenance, 2008, pp. 7–16.\n[20] D. Ro¨thlisberger, O. Greevy, and O Nierstrasz, “Exploiting Runtime\nInformation in the IDE,” in ICPC ’08: Proceedings of the 2008 The 16th\nIEEE International Conference on Program Comprehension. Washing-\nton, DC, USA: IEEE Computer Society, 2008, pp 63–72.\n[21] I. Beschastnikh, Y. Brun, S. Schneider, M. Sloan, and M. D. Ernst,\n“Leveraging existing instrumentation to automatically infer invariant-\nconstrained models,” in ESEC/FSE ’11: Proc. of the 19th ACM SIG-\nSOFT symposium and the 13th European conference on Foundations of\nsoftware engineering. New York, NY USA: ACM, 2011, pp. 267–277.\n[22] B. Cornelissen, A. Zaidman, A. van Deursen, L. Moonen, and\nR. Koschke, “A systematic survey of program comprehension through\ndynamic analysis,” IEEE Trans. Softw. Eng., vol. 35, pp 684–702,\nSeptember 2009.\n[23] S. Reiss, The Field programming environment: A friendly integrated\nenvironment for learning and development. Springer, 1995, vol. 298.\n[24] J. Boulon, A. Konwinski, R. Qi, A. Rabkin, E Yang, and M. Yang,\n“Chukwa, a large-scale monitoring system,” in CCA ’08: Proc. of the\nfirst workshop on Cloud Computing and its Applications, 2008, pp. 1–5.\n[25] J. Tan, X. Pan, S. Kavulya, R. Gandhi, and P. Narasimhan Salsa:\nanalyzing logs as state machines,” in WASL’08: Proceedings of the First\nUSENIX conference on Analysis of system logs. Berkeley, CA, USA:\nUSENIX Association, 2008, pp. 6–6.\n[26] W. Xu, L. Huang, A. Fox, D Patterson, and M. I. Jordan, “Detecting\nlarge-scale system problems by mining console logs,” in SOSP 09:\nProceedings of the ACM SIGOPS 22nd symposium on Operating systems\nprinciples. New York, NY, USA: ACM 2009, pp. 117–132.\n411\n 


  14  
 


Available Array Energy 60297 W-hr Battery Recharge Energy Losses 93 W-hr Shunt Energy Losses 20% Battery W-hr 187 W-hr Remaining Electrical Energy 60017 W-hr Power Conversion Losses 80% Efficiency 12003 W-hr Harness Losses \(4 Available Diurnal Load Energy \(CBE Average Load Energy Supported 67.9 W Array Area 0.20 m2 12 specifically the seismometer and magnetometer continuously while other instruments such as the heat flow probes may operate intermittently. The retroreflector does not require any thermal control resources. Telecom between the Earth and the hub or from the remote units to the hub would be during the lunar day only  Description of the Design  A thermal blanket \(MLI Silver-Teflon would be used to moderate the temperature variation of the surface. The MLI and the lunar material thermal conduction properties could be used to insulate the different ALGEP elements from the external environment  The Mars Exploration Rover thermal switch and a thermal radiator with thermal louvers would be used to reject the internally generated thermal energy. The MER Thermal Switch has the ability to transfer up to 11 W. For the hub three or four switches may be necessary, depending on the RF power output  Potentially a small electric heater/thermostat system may be needed \(on the order of 10% of the dissipated electrical energy example, the seismometer, which dissipates 1.5 W, may need a 0.15 W heater. A detailed thermal analysis would be necessary to further assess this need  The ALGEP hardware location would be dictated by the science requirements. Each ALGEP element could be either positioned on the surface or buried.  An example of a buried element would be the seismometer, while the hub could be surface mounted. In either case a surface blanket would be required. The surface blanket would minimize the lunar temperature variation, from a range of -173 to ~127  C to a range under the blanked between approximately -73 to 27  C. Initial calculations indicate that the blanket extending about 0.5 m beyond the edge of the instrument or hub would provide the temperature control of the lunar surface required to minimize the temperature variation. For the lunar night, a small electric heater may be needed to keep the ALGEP hardware within specified temperature limits  For polar region operation it is assumed that the ALGEP could operate at all times as the solar arrays would always have incident solar energy and could provide electrical power for operations.  Thus with electrical power for the instruments and hub, the thermal radiator and louvers could maintain the ALGEP hardware within specified temperature limits. Initial calculations indicate that the current conceptual thermal control design does not require electric heaters for this location  Design Rationale  The design uses MLI, thermal conduction control, electric heaters, thermal radiators thermal louvers, and a deployed surface blanket to provide thermal control to maintain the remote units and hub within specified temperature limits. The surface blanket would 


specified temperature limits. The surface blanket would minimize the temperature variation of the surface, and electric heaters would provide makeup thermal energy  Risk  The thermal subsystem design is a low to moderate risk element, as the hardware used has extensive flight experience. Although this system would be on the surface of the Moon, the environment would be space-like, with the  Figure 6  ALGEP avionics block diagram showing the power and command and data handing  interface. This is a low-power design to enable data collection during lunar night at the remote units. The hub  contains the same avionics package but does not interface with an instrument  13 exception of the infrared heating of the lunar surface therefore the space qualified thermal control hardware could provide thermal control for this mission  Command and Data Handling Subsystem Design Requirements  The ALGEP controller is designed to meet the six year mission lifetime requirement stemming from the science objectives flowing down to the mission requirements and has a technology cutoff of 2016 \(assumes a 2020 launch interface to the science instrument and the UHF radio.  The controller for the hub interfaces to the UHF and S-band radios. Each type of controller would be single string  Design Assumptions  All selected electronic parts for the controller have a path to flight hardware with a technology cutoff of 2016. There would be one ALGEP hub that has a bi-directional S-band link to Earth and a UHF receiver link to the remote instrument units. There would be four ALGEP remote units that have UHF transmitters to link to the ALGEP hub. The controllers would have an operating temperature range: -20  C to 35  C. The total ionizing dose of radiation would be 2 krads for the mission  Description of the Design  Both controller designs would incorporate low-powered Field Programmable Gate Arrays FPGAs devices and I/O drivers.  Portions of the existing MultiMission System Architecture Platform \(MSAP Engineering Unit \(REU IP provide the mission clock and alarm clock logic.  Both the hub and remote unit controllers would capture engineering data regarding temperatures, currents and voltages. Figure 6 provides an overview of the command and data handling and power subsystem architectures.  The remote units would be supplied with 2 Gb of memory and the hub would have 5 Gb of memory  Design Rationale  A low-powered avionics architecture would be achieved by developing a stand-alone controller capable of operating at various power levels. In the lowest power configuration only the mission clock and alarm clock logic would be active. Other logic, analog and I/O functions would be power strobed in the off mode during this very low-power mode. Science and engineering data would be stored in non-volatile memory elements that retain their data in the power-off mode  Risk  The controller requires engineering development to obtain the low-powered mode required for night operation However, it has been designed to incorporate components with flight heritage. A lower frequency oscillator would be used to reduce power  Telecom Subsystem 


Design Requirements  The telecom subsystem is designed to return 3.4 Gb of stored data every 16 days during lunar night in addition to 1.2 Gb of additional data collected each 24 hour period during daylight. This translates into a minimum direct-to-Earth return data rate of ~50 kbps for an 8 hour pass each Earth day for 16 days of sunlight. The subsystem must operate down to a temperature of -20  C and survive non-operational temperature of -50  C. The telecom subsystem would support two-way communications between the hub and the DSN network. It would also support two-way communications between the hub and each of the remote instrument packages on the surface. There would be a minimum 3 dB margin for the direct-to-Earth DTE  Design Assumptions  The telecom subsystem is assumed to be a single string design. The hub would have an S-band radio and antenna for two-way communications with a DSN 34 m ground station. The nominal downlink rate would be 120 kbps and the uplink rate would be 2 kbps. The surface links would be at UHF. The forward link data rate would be 8 kbps and the return rate would be 256 kbps. The maximum range for the surface links would be 100 m. All of the surface links would have line-of-sight between the units. It is assumed that the astronauts would point the Sband antenna towards Earth, within 5  of the center of Earth. This should be relatively easy to do as 5  is a very loose pointing requirement and the uplink/downlink would be marginally affected if the pointing is off by a little more than 5  A signal could be added which would use an uplink from the Earth to give a relative signal power to ensure the pointing requirement is met  Description of the Design  The telecom subsystem would use a commercial off-the-shelf S-band transponder \(L3 CXS-610 has a 5 W power amplifier and an S-band diplexer included This radio is used on GRAIL and a similar unit was used on Genesis. The diplexer would be connected to an S-band low gain antenna \(LGA be a 2-element S-band patch array with a boresight gain of 9 dB. It would be mounted on the end of one solar array on the hub and gimbaled to allow the astronaut to point it to the Earth  The hub communicates with each of the remote instrument units in UHF using a new UHF micro-transceiver. Each UHF microtransceiver would have a radio frequency output power of 50 mW. The UHF transceiver would use a halfduplex system meaning it would transmit and then listen However, it cannot do both at the same time. The UHF links would use a simple UHF monopole antenna, similar to the antennas flown on MER, and mounted on the top of the hub and remote units. The hub could only communicate with one remote unit at a time. Figure 7 shows the hub and remote unit telecom block diagrams  The S-Band telemetry link has a margin of 7.0 dB for a telemetry rate of 120 kbps into a 34 m beam waveguide ground station. The data rate could be increased to reduce 14 playback time. The surface link would have a margin exceeding 20 dB for a return data rate of 256 kbps. This includes a multipath loss allotment of 20 dB. The margin would be large because the range would be so small and all of the links would be line of sight  Design Rationale  Where available, the design of this subsystem uses heritage hardware. The UHF microtransceiver is a radio that is under development for the Mars program. It would be designed for low mass, low 


Mars program. It would be designed for low mass, lowpower and low temperature operation. The S-band antenna would be a smaller, simpler version of the antenna that flew on Deep Impact. Other antenna options would be available The UHF antennas have been flown on previous Mars lander/rover missions. There would be other alternatives for the S-band antenna and the UHF transceiver on the hub could use a larger power amplifier to talk to an orbiting asset as a backup to the S-band radio  Risk  The highest risk items for telecom would be the single string design for each element and six year design lifetime. However, the S-band radio has flight heritage. The UHF radios would be a new design but do not require new technology. They would be an engineering development 8. SYSTEM SUMMARY Mass Equipment List Table 5 shows a summary of the mass and power for each of the subsystems for the remote instrument units. The mass of one remote unit without the specified instrument is 26.6 kg with contingency specified at the subsystem level based on heritage. Table 6 shows a summary of mass and power by subsystem for the hub. The mass of the hub with contingency is 44.9 kg. Table 7 shows a mass summary for the entire package with appropriate contingencies added per the JPL  s Flight Project Practices and Design Principles Design Principles. The package totals 218.2 kg which includes four remote units, five instruments, one hub, and the carrier container\(s Table 5. Mass and power summary for remote units Remote Unit Mass CBE Contingency Total Power Power 14.3 kg 30% 18.5 kg 0.180 W 2 W Night /Day Thermal 2.0 kg 29% 2.5 kg 0 W Telecom UHF 0.2 24% 0.3 kg 2 W 40 W CDS 0.7 kg 30% 0.9 kg 1 W \(1/60th per hour 3 W Structure 3.4 kg 30% 4.4 kg 0 W Total x 1 unit 20.6 kg 29% 26.6 kg Diplexer S-Band Downconverter STDN command data to S/C CDS Pr oc es so r S-Band Exciter 9 dBi S-Band LGA UHF Downconverter Small UHF transceiver command data to S/C CDS 


to S/C CDS Pr oc es so r UHF PA UHF Monopole Command data to C&amp;DH Command dat  to C&amp;DH  Figure 7  Telecom block diagram for the S-band \(top bottom  units would be located on the hub while the remote units only contain a UHF system 15 9. OPERATIONAL SCENARIOS Daytime Operations During the day, the remote units and hub would be fully operational. The remote units would collect data from their instruments as specified by the science team and store it in the controller memory. Table 8 shows the data volume expected from each instrument. After 24 hours have passed the UHF telecom system on the hub is used to poll each of the remote units separately at the designated interval for the stored data. The hub then transmits the data direct-to-Earth using the S-band radio. This requires a maximum of eight hours at 50 kbps each day using the DSN 34 m antennas However, data rates as high as 120 kbps may be achieved reducing the downlink time. The hub has enough memory margin to accumulate data from all the instruments for three Earth days before it must downlink the data Nighttime Operations During nighttime operations, data collection at the remote units would be taking place. The magnetometer and seismometer collect data continuously. However, the seismometer operates at a reduced mode where the sampling rate is reduced to one-half of the daytime rate which has been deemed more than adequate by the science team. The remaining instruments collect data at various intervals that would be conducive to the science team  s current requirements. Telecom events would not be scheduled during the lunar night. The data accumulates in the controller memory over 16 Earth days \(~14 days at an equatorial location would be considered a worse case so two days have been added to be conservative data volume summary for each instrument during a 16 Earth day lunar night. When the sun comes up and the hub and remote units have sufficient power to run the telecom systems the hub polls each remote unit separately at a designated interval similar to operations during the day. The data would then be transmitted to Earth gradually over the next few days using the S-band radio Table 7. Mass summary for total package Unit Mass Contingency Mass + contingency 4 Remote Units 82.4 kg 29% 106.4 kg Hub 35.2 kg 27% 44.9 kg Instruments including cabling 17.3 kg 30% 22.5 kg Carrier Container\(s Total with heritage contingency 153.1 kg 29% 197.5 kg  System contingency  21.4 kg 14 Total Package  43% 218.9 kg Table 8. Instrument data volumes received at the hub over one Earth day in daylight operations Science Instrument Compressed Data Volume Received at Hub 


Volume Received at Hub Mb Seismometer 236 Magnetometer 58 Heat Flow Probe 2 Seismic Sounder 700 Instrument &amp; Hub Engineering Data 6 Total 1002 Hub Memory 5000 Margin 80  Table 6. Mass and power summary for hub Hub/Base Unit Mass CBE Contingency Total Power Power 14.3 kg 30% 18.5 kg 0.180 W 2 W Night /Day Thermal 13.4 kg 28% 17.2 kg 0 W Telecom UHF Telecom S-band 3.4 15% 3.9 kg 2 W 40 W CDS 0.7 kg 30% 0.9 kg 1 W \(1/60th per hour W \(day Structure 3.4 kg 30% 4.4 kg 0 W Total x 1 unit 35.2 kg 27% 44.9 kg 2.38 W avg at night  16 10. SUMMARY AND CONCLUSIONS The ALGEP modular design builds upon lessons learned from Apollo era ALSEP package and technology advances since that time. ALGEP meets the requirements of long lifetime survival while maintaining continuous operation of its instruments during the lunar night which can last up to 16 days at equatorial regions on the Moon. The package would be powered using solar arrays and batteries alone not requiring nuclear sources to supply power or maintain thermal control. This concept is feasible due to its lowpower operational mode at night The modular design and packaging scheme provides flexibility in deployment across all regions of the Moon including the farside pending the availability of an orbital communications asset. The relatively light ALGEP package could be accommodated on astronaut activity support vehicles, providing a method to distribute the packages across the Moon, ultimately gaining a Moon-wide understanding of lunar geophysical properties ACKNOWLEDGEMENTS This work was supported by the NASA Lunar Sortie Science Opportunities Program The work described in this publication was carried out at the Jet Propulsion Laboratory, California Institute of Technology under a contract with the National Aeronautics and Space Administration References herein to any specific commercial product process or service by trade name, trademark, manufacturer 


or otherwise does not constitute or imply its endorsement by the United States Government or the Jet Propulsion Laboratory, California Institute of Technology REFERENCES 1] NRC  Scientific Context for Exploration of the Moon   Washington D.C.: The Nat. Academies Press, 2007 2] Apollo 11 Prelim. Sci. Rept., NASA SP-214, 1969 3] Apollo 12 Prelim. Sci. Rept., NASA SP-235, 1970 4] Apollo 14 Prelim. Sci. Rept., NASA SP-272, 1971 5] Apollo 15 Prelim. Sci. Rept., NASA SP-289, 1972 6] Apollo 16 Prelim. Sci. Rept., NASA SP-315, 1972 7] Apollo 17 Prelim. Sci. Rept., NASA SP-330, 1973 8] ALSEP Termination Report, NASA RP-1036, 1979 9] NRC  New Frontiers in the Solar System: an Integrated Exploration Strategy  Decadal Survey D.C.: The Nat. Academies Press, 2003 10] International Lunar Network Science Definition Team Final Report, 2009 BIOGRAPHY Melissa Jones is a member of the technical staff in the Planetary and Lunar Mission Concepts Group at the Jet Propulsion Laboratory.  Current work includes development of small Lunar lander concepts and instrument packages to deploy on the Moon,  Report Manager for the Titan Saturn System Mission Outer Planets Flagship Mission study, and staffing various concept studies as a systems engineer on Team X, JPL  s mission design team.  Melissa graduated from Loras College with a B.S. in Chemistry and a Ph.D. in Space and Planetary Science from the University of Arkansas  Linda Herrell has a BA in math/computer science/languages \(University of Texas fluids and heat transfer \(City College of New York addition to analytical work in computer science and thermal and structural analysis, she has worked as both a payload \(instrument Earth orbiting \(Hubble Space Telescope, Earth Observing System \(EOS Cassini as Proposal Manager for several NASA science missions She currently serves as the Program Architect for NASA's New Millennium Program    Table 9. Instrument data volumes generated at the hub after 16 Earth day lunar night Science Instrument Compressed Data Volume Received at Hub Mb Seismometer 1980 Magnetometer 920 Heat Flow Probe 5 Seismic Sounder 0 Instrument &amp; Hub Engineering Data 72 Total 2977 Hub Memory 5000 Margin 40  17 Bruce Banerdt has been a research geophysicist at the California Institute of Technology's Jet Propulsion Laboratory since 1977, where he does research in planetary geophysics and instrument development for flight projects. He has been on science teams for numerous planetary missions 


on science teams for numerous planetary missions including Magellan, Mars Observer, Mars Global Surveyor and Rosetta. He was the US Project Scientist for the international Mars NetLander mission, for which he was also principal investigator of the Short-Period Seismometer experiment, and is currently the Project Scientist for the Mars Exploration Rovers. He led the Geophysics and Planetary Geology group at JPL from 1993-2005, and is the JPL Discipline Program Manager for Planetary Geosciences. He has held several visiting appointments at the Institut de Physique du Globe de Paris. He has a BS in physics and a PhD in geophysics from the University of Southern California  David Hansen is a member of the technical staff in the Communications Systems and Operations Group at the Jet Propulsion Laboratory. Current work includes the development of the telecom subsystem for the Juno project. David received a B.S. in Electrical Engineering from Cornell University and an M.S. in Electrical Engineering from Stanford University  Robert Miyake is a member of the technical staff in the Mission and Technology Development Group at the Jet Propulsion Laboratory. Current work includes the development of thermal control subsystems for interplanetary flagship missions to Jupiter and Saturn missions to Mars and the Earth Moon, and is the lead Thermal Chair for the Advanced Project Design Team Robert graduated with a B. S. from San Jose State University, with extensive graduate studies at UCLA University of Washington, and University of Santa Clara  Steve Kondos is a consultant to the Structures and Mechanisms group at the Jet Propulsion Laboratory. He currently is generating the mechanical concepts for small Lunar Landers and Lunar Science Instrument packages in support of various Lunar mission initiatives. He also provides conceptual design, mass and cost estimating support for various Team X studies as the lead for the Mechanical Subsystem Chair. Steve is also involved with various other studies and proposals and provides mentoring to several young mechanical and system engineers. He graduated with a B.S. in Mechanical Engineering from the University of California, Davis and has 28 years of experience in the aerospace field ranging from detail part design to system of systems architecture development. He has worked both in industry and in government in defense, intelligence commercial and civil activities that range from ocean and land based systems to airborne and space systems. Steve has received various NASA, Air Force, Department of Defense and other agency awards for his work on such projects as the NASA Solar Array Flight Experiment, Talon Gold, MILSTAR, Iridium, SBIRS, Mars Exploration Rovers ATFLIR, Glory Aerosol Polarimeter System and several Restricted Programs  Paul Timmerman is a senior member of technical staff in the Power Systems Group at the Jet Propulsion Laboratory Twenty-five years of experience in spacecraft design including 22 at JPL, over 250 studies in Team-X, and numerous proposals. Current assignments include a wide variety of planetary mission concepts, covering all targets within the solar system and all mission classes. Paul graduated from Loras College with a B.S. in Chemistry in 1983  Vincent Randolph is a senior engineer in the Advanced Computer Systems and 


the Advanced Computer Systems and Technologies Group at the Jet Propulsion Laboratory. Current work includes generating Command and Data Handling Subsystem conceptual designs for various proposals and Team X.  He also supports Articulation Control and Electronics design activities for the Advanced Mirror Development project. Vincent graduated from the University of California at Berkeley with a B.S. in Electrical Engineering 18  pre></body></html 


i models into time and covariate dependent dynamic counterparts  ii models and reliability analysis in a more realistic manner  iii level  whether or not functional components \(loyal generals diagnose correctly and take proper actions such as fault mask of failed components \(traitors asymmetric  iv survivability analysis. Evolutionary game modeling can derive sustainable or survivable strategies \(mapped from the ESS in EGT such as node failures such as security compromise level modeling in the so-called three-layer survivability analysis developed in Ma \(2008a this article  v offer an integrated architecture that unite reliability survivability, and fault tolerance, and the modeling approaches with survival analysis and evolutionary game theory implement this architecture. Finally, the dynamic hybrid fault models, when utilized to describe the survival of players in EGT, enhance the EGT's flexibility and power in modeling the survival and behaviors of the game players which should also be applicable to other problem domains where EGT is applicable  5. OPERATIONAL LEVEL MODELING AND DECISION-MAKING  5.1. Highlights of the Tactical and Strategic Levels  Let's first summarize what are obtainable at both tactical and strategic levels. The results at both tactical and strategic levels are precisely obtainable either via analytic or simulation optimization. With the term precisely, we mean that there is no need to assign subjective probabilities to UUUR events. This is possible because we try to assess the consequences of UUUR events \(tactical level ESS strategies \(strategic level time prediction of survivability. The following is a list of specific points. I use an assumed Wireless Sensor Network WSN  i of UUUR events: \(a actions which can be treated as censored events; \(b Cont' of Box 4.2 It can be shown that the replicator differential equations are equivalent to the classical population dynamics models such as Logistic differential equation and LotkaVolterra equation \(e.g., Kot 2001 Logistic equation, or the limited per capital growth rate is similar to the change rate of the fitness  xfxfi which can be represented with the hazard function or survivor functions introduced in the previous section on survival analysis.  This essentially connects the previous survival analysis modeling for lifetime and reliability with the EGT modeling. However, EGT provides additional modeling power beyond population dynamics or survival analysis approaches introduced in the previous section. The introduction of evolutionary theory makes the games played by a population evolvable. In other words, each player \(individual 


other words, each player \(individual agent and players interact with each other to evolve an optimized system Box 4.3. Additional Comments on DHF Models  The above introduced EGT models are very general given they are the system of ordinary differential equations. Furthermore, the choice of fitness function f\(x complexity to the differential equation system.  The system can easily be turned into system of nonlinear differential equations. The analytical solution to the models may be unobtainable when nonlinear differential equations are involved and simulation and/or numerical computation are often required  In the EGT modeling, Byzantine generals are the game players, and hybrid fault models are conveniently expressed as the strategies of players; the players may have different failure or communication behaviors Furthermore, players can be further divided into groups or subpopulations to formulate more complex network organizations. In the EGT modeling, reliability can be represented as the payoff \(fitness, the native term in EGT of the game. Because reliability function can be replaced by survivor function, survival analysis is seamlessly integrated into the EGT modeling. That is, let Byzantine generals play evolutionary games and their fitness reliability function  The evolutionary stable strategy \(ESS counterpart of Nash equilibrium in traditional games ESS corresponds to sustainable strategies, which are resistant to both internal mutations \(such as turning into treason generals or nodes such as security compromises represent survivable strategies and survivability in survivability analysis. Therefore, dynamic hybrid fault models, after the extension with EGT modeling, can be used to study both reliability and survivability 13 risks such as competing risks which can be described with CRA; \(c captured with the shard frailty.  We believe that these UUUR events are sufficiently general to capture the major factors/events in reliability, security and survivability whose occurrence probabilities are hard or impossible to obtain  Instead of trying to obtain the probabilities for these events which are infeasible in most occasions, we focus on analyzing the consequences of the events.  With survival analysis, it is possible to analyze the effects of these types of events on survivor functions. In addition, spatial frailty modeling can be utilized to capture the heterogeneity of risks in space, or the spatial distribution of risks \(Ma 2008a d UUUR events introduced previously. These approaches and models that deal with the effects of UUUR events form the core of tactical level modeling  To take advantage of the tactical level modeling approaches it is obviously necessary to stick to the survivor functions or hazard functions models. In other words, survival analysis can deal with UUUR events and offer every features reliability function provides, but reliability function cannot deal with UUUR events although survivor function and reliability function have the exactly same mathematical definition. This is the junction that survival analysis plays critical role in survivability analysis at tactical level. However, we 


recognize that it is infeasible to get a simple metric for survivability similar to reliability with tactical level modeling alone. Actually, up to this point, we are still vague for the measurement of survivability or a metric for survivability. We have not answered the question: what is our metric for survivability? We think that a precise or rigorous definition of survivability at tactical level is not feasible, due to the same reason we cited previously  the inability to determine the probabilities of UUUR events However, we consider it is very helpful to define a work definition for survivability at the tactical level  We therefore define the survivability at tactical level as a metric, Su\(t t function or reliability function with UUUR events considered. In the framework of three-layer survivability analysis, this metric is what we mean with the term survivability. The "metric" per se is not the focus of the three-layer survivability analysis. It is not very informative without the supports from the next two levels  strategic and operational models.  However, it is obvious that this metric sets a foundation to incorporate UUUR effects in the modeling at the next two levels  Due to the inadequacy of tactical level modeling, we proposed the next level approach  strategic level modeling for survivability. As expected, the tactical level is one foundation of strategic level modeling ii objectives: \(a affect survivability which survival analysis alone is not adequate to deal with; \(b survivability at tactical level is necessary but not sufficient for modeling survivability, we need to define what is meant with the term survivability at strategic level  With regard to \(a behaviors or modes which have very different consequences. These failure behaviors can be captured with hybrid fault models. However, the existing hybrid fault models in fault tolerance field are not adequate for applying to survivability analysis. There are two issues involved: one is the lack of real time notion in the constraints for hybrid fault models \(e.g., N&gt;3m+1 for Byzantine Generals problem synthesize the models after the real-time notions are introduced. The solution we proposed for the first issue is the dynamic hybrid fault models, which integrate survivor functions with traditional hybrid fault models. The solution we proposed for the second issue is the introduction of EGT modeling  With regard to \(b modeling our problem at strategic level, EGT modeling is essentially a powerful optimization algorithm.  One of the most important results from EGT modeling is the so-called evolutionary stable strategies \(ESS We map the ESS in EGT to survivable strategies in survivability analysis.   Therefore, at the strategic level, our work definition for survivability refers to the survivable strategies or sustainable strategies in the native term of EGT, which can be quantified with ESS  In addition to integrating dynamic hybrid fault models another advantage for introducing EGT modeling at strategic level is the flexibility for incorporating other node behaviors \(such as cooperative vs. non-cooperative those behaviors specified in standard hybrid fault models, as well as anthropocentric factors such as costs constraints  Without UUUR events, both tactical and strategic level 


Without UUUR events, both tactical and strategic level models default to regular reliability models. This implies that, in the absence of UUUR events, reliable strategies are sustainable or survivable.  This also implies that three-layer survivability analysis defaults to reliability analysis however, the three-layer approach does offer some significant advantages over traditional reliability analysis, as discussed in previous sections. Nevertheless, when UUUR events exist, reliable strategies and survivable strategies are different. This necessitates the next operational level modeling  5.2. Operational Level Modeling and Decision-Making  When UUUR events are involved, we cannot make real time predictions of survivability at tactical and strategic levels This implies that the implementations of survivable 14 strategies need additional measures that we develop in this section.  Box 5.1 explains the ideas involved with possibly the simplest example  Figure 4 is a diagram showing a simplified relationship between action threshold survivability \(TS survivability \(ES view since both TS and ES are multidimensional and dynamic in practice. Therefore, the sole purpose of the diagram is to illustrate the major concepts discussed above The blue curve is the survivability when survivable strategies specified by ESS are implemented at some point before time s.  The system is then guaranteed to hold survivability above ES. In contrary, if no ESS implemented before time s, then the system quickly falls below to the survivable level at around 40 time units  T i m e 0 1 0 2 0 3 0 4 0 5 0 6 0 7 0 8 0 9 0 1 0 0 Su rv iv ab ili ty M et ric S u t 0 . 0 0 . 1 0 . 2 0 . 3 0 . 4 0 . 5 0 . 6 0 . 7 0 . 8 0 . 9 1 . 0 E S S  i s  I m p lm e n t e d N o  E S S  is  I m p lm e n t e d ts E S T S  Figure 4. A Diagram Showing the Relationship Between TS and ES, as well as timing of s and t, with s &lt; t  6. SUMMARY  The previous sections discussed the major building blocks 


The previous sections discussed the major building blocks for the new life-system inspired PHM architecture. This section first identifies a few minor aspects that have not been discussed explicitly but are necessary for the implementation of the architecture, and then we summarize the major building blocks in a diagram  6.1. Missing Components and Links  Optimization Objectives  Lifetime, reliability, fault tolerance, and survivability, especially the latter two, are application dependent. Generally, the optimization of reliability and survivability are consistent; in that maximization of reliability also implies maximization of survivability. However, when application detail is considered, optimization of lifetime is not necessarily consistent with the optimization of reliability. Consider the case of the monitoring sensor network as an example. The network reliability is also dependent on connectivity coverage, etc, besides network lifetime. What may be further complicated is the time factor. All of the network metrics are time-dependent. A paradoxical situation between lifetime and reliability could be that nodes never 'sleep                                                   


          Box 5.1 Operational Level Modeling  Assuming that the ESS solution for a monitoring sensor network can be expressed with the following simple algebraic conditions: survivability metric at tactical level SU = 0.7, Router-Nodes in the WSN &gt; 10%, Selfish Nodes &lt; 40%. Even with this extremely simplified scenario, the ESS strategies cannot be implemented because we do not know when the actions should be taken to warrant a sustainable system.  These conditions lack a correlation with real time  The inability to implement ESS is rooted in our inability to assign definite probabilities to UUUR events, which implies that we cannot predict when something sufficiently bad will jeopardize the system survivability What we need at the operational level is a scheme to ensure ESS strategy is in place in advance  The fundamental idea we use to implement the ESS strategy is to hedge against the UUUR events. The similar idea has been used in financial engineering and also in integrated pest management in entomology. This can be implemented with the following scheme  Let us define a pair of survivability metrics: one is the expected survivability \(ES threshold survivability or simply threshold survivability \(TS ES is equivalent to the survivability metric at tactical level. ES corresponds to ESS at strategic level, but they are not equivalent since ESS is strategy and ES is survivability. TS is the survivability metric value \(at tactical level and TS can be obtained from strategic level models. For example, TS = SU\(s t condition for the implementation of ESS. In other words, the implementation of strategies that ensures TS at time s will guarantee the future ES level at time t.  To make the implementation more reliable and convenient multiple dynamic TSs can be computed at time s1, s2 sk, with si &lt; t for all i.  These TS at times s1, s2, ..., sk should be monitored by some evaluation systems  Unlike tactical and strategic levels, the operational level modeling is approximate. The term "approximate means that we cannot predict the real time survivability or we do not know the exact time an action should be taken. Instead, the action is triggered when the monitored survivability metric SU\(r survivability \(TS scheme of TS and ES, we ensure the ES by taking preventative actions \(prescribed by ESS and triggered by the TS consequences of UUUR events  Figure 4 is a diagram showing the above concepts and the decision-making process involved 15 This wakefulness \(never 'sleep short period but at the expense of network lifetime. Of course, when the network is running out of lifetime, network reliability ultimately crashes. This example reminds us that 


reliability ultimately crashes. This example reminds us that multi-objective optimization should be the norm rather than exception  Constraints and Extensions  Many application specific factors and constraints are ignored in this article. For example, we mentioned about spatial heterogeneity of environment, but never present a mathematical description The spatial heterogeneity can be modeled with the so-called spatial frailty in multivariate survival analysis \(Ma 2008a  Evolutionary Algorithm  Evolutionary game modeling when implemented in simulation, can be conveniently implemented with an algorithm similar to Genetic Algorithms \(GA ESS in the evolutionary game model with simulation is very similar to GA. Dynamic populations, in which population size varies from generation to generation \(Ma &amp; Krings 2008f of node failures. Another issue to be addressed is the synchronous vs. asynchronous updating when topology is considered in the simulation. This update scheme can have profound influences on the results of the simulation. Results from cellular automata computing should be very useful for getting insights on the update issue  6.2. Summary and Perspective  To recapture the major points of the article, let us revisit Figure 3, which summarizes the principal modules of the proposed life-system inspired PHM architecture. The main inspiration from life systems is the notion of individuals and their assemblage, the population. Population is an emergent entity at the next level and it has emergent properties which we are often more concerned with. Survival analysis, which has become a de facto standard in biomedicine, is particularly suitable for modeling population, although it is equally appropriate at individual level. Therefore, survival analysis \(including competing risks analysis and multivariate survival analysis comprehensively in the context of PHM in a series of four papers presented at IEEE AeroSpace 2008 \(Ma &amp; Krings 2008a, b, c, &amp; d proposed architecture. Survival analysis constitutes the major mathematical tools for analyzing lifetime and reliability, and also forms the tactical level of the three-layer survivability analysis  Besides lifetime and reliability, two other major modules in Figure 3 are fault tolerance and survivability. To integrate fault tolerance into the PHM system, Dynamic Hybrid Fault DHF 2008e, Ma 2008a make real-time prediction of reliability more realistic and make real-time prediction of fault tolerance level possible DHF models also unite lifetime, reliability and fault tolerance under a unified modeling framework that consists of survival analysis and evolutionary game theory modeling  DHG models also form the partial foundation, or strategic level, for the three-layer survivability analysis. At the strategic level, the Evolutionary Stable Strategies \(ESS which is mapped to survivable or sustainable strategies, can be obtained from the evolutionary game theory based DHF models. When there is not any UUUR event involved reliability and survivability are consistent, and reliable strategies are survivable. In this case, the strategic level modeling up to this point is sufficient for the whole PHM system modeling, and there is no need for the next level  operational level modeling  When there are UUUR events in a PHM system, the 


When there are UUUR events in a PHM system, the inability to determine the occurrence probabilities of UUUR events makes the operational level modeling necessary Then the principle of hedging must be utilized to deal with the "hanging" uncertainty from UUUR events. In this case reliability strategies are not necessarily survivable strategies At the operational level modeling, a duo of survivability metrics, expected survivability \(ES survivability \(TS the survivable strategies \(ESS level are promptly implemented based on the decisionmaking rules specified with the duo of survivability metrics then the PHM system should be able to endure the consequences of potentially catastrophic UUUR events. Of course, to endure such catastrophic events, the cost may be prohibitively high, but the PHM system will, at least, warn decision-makers for the potentially huge costs.  It might be cheap to just let it fail  Figure 3 also shows several other modules, such as security safety, application systems \(such as Automatic Logistics CBM+, RCM, Life cycle cost management, Real-time warning and alert systems architectures, but we do not discuss in this paper. Generally the new architecture should be fully compatible with existing ones in incorporating these additional modules. One point we stressed is that PHM system can be an ideal place to enforce security policies. Enforcing security policies can be mandatory for PHM systems that demand high security and safety such as weapon systems or nuclear plant facilities.  This is because maintenance, even without human-initiated security breaches, can break the security policies if the maintenance is not planned and performed properly  In perspective, although I did not discuss software issues in this paper, the introduced approaches and models should provide sufficient tools for modeling software reliability and survivability with some additional extension. Given the critical importance of software to modern PHM systems, we present the following discussion on the potential extension to software domain. Specifically, two points should be noted: \(1 architecture to software should be a metric which can 16 replace the time notion in software reliability; I suggest that the Kolmogorov complexity \(e.g., Li and Vitanyi 1997 be a promising candidate \(Ma 2008a change is because software does not wear and calendar time for software reliability usually does not make much sense 2 software reliability modeling.  Extending to general survivability analysis is not a problem either. In this article I implicitly assume that reliability and survivability are positively correlated, or reliability is the foundation of survivability. This positive correlation does not have to be the case. A simplified example that illustrates this point is the 'limit order' in online stock trading, in which limit order can be used in either direction: that stock price is rising or falling.  The solution to allow negative or uncorrelated relationships between reliability and survivability are very straightforward, and the solutions are already identified in previous discussions. Specifically, multiple G-functions and multi-stage G-functions by Vincent and Brown \(2005 very feasible solution, because lifetime, reliability and survivability may simply be represented with multiple Gfunctions. Another potential solution is the accommodation of the potential conflicts between reliability and survivability with multi-objective GA algorithms, which I previously suggested to be used as updating algorithms in the optimization of evolutionary games  


 The integration of dynamic hybrid fault models with evolutionary game modeling allows one to incorporate more realistic and detailed failure \(or survival individual players in an evolutionary game. This is because dynamic hybrid fault models are supported by survival analysis modeling, e.g., time and covariate dependent hazard or survivor functions for individual players. If necessary, more complex survival analysis modeling including competing risks analysis and multivariate survival analysis, can be introduced.  Therefore, any field to which evolutionary game theory is applicable may benefit from the increased flexibility in modeling individual players.  Two particularly interesting fields are system biology and ecological modeling.  In the former field, dynamic hybrid fault models may find important applications in the study of biological networks \(such as gene, molecular, and cell networks 2008g conjecture that explains the redundancy in the universal genetic code with Byzantine general algorithm. In addition they conducted a comparative analysis of bio-robustness with engineering fault tolerance, for example, the strong similarity between network survivability and ecological stability \(Ma &amp; Krings 2008g survivability analysis can be applied for the study of survivals or extinctions of biological species under global climate changes \(Ma 2008b  In this paper, I have to ignore much of the details related to the implementation issues to present the overall architecture and major approaches clearly and concisely. To deal with the potential devils in the implementation details, a well funded research and development team is necessary to take advantages of the ideas presented here. On the positive side I do see the great potential to build an enterprise PHM software product if there is sufficient resource to complete the implementation. Given the enormous complexity associated with the PHM practice in modern engineering fields, it is nearly impossible to realize or even demonstrate the benefits of the architecture without the software implementation. The critical importance of PHM to mission critical engineering fields such as aerospace engineering, in turn, dictates the great value of such kind software product  6.3. Beyond PHM  Finally, I would like to raise two questions that may be interested in by researchers and engineers beyond PHM community. The first question is: what can PHM offer to other engineering disciplines? The second question is: what kinds of engineering fields benefit most from PHM? Here, I use the term PHM with the definition proposed by IEEE which is quoted in the introduction section of the paper  As to the first question, I suggest software engineering and survivability analysis are two fields where PHM can play significant roles. With software engineering, I refer to applying PHM principles and approaches for dealing with software reliability, quality assurance, and even software process management, rather than building PHM software mentioned in the previous subsection. For survivability analysis, borrowing the procedures and practices of PHM should be particularly helpful for expanding its role beyond its originating domain \(network systems that control critical national infrastructures is a strong advocate for the expansion of survivability analysis to PHM. Therefore, the interaction between PHM and survivability analysis should be bidirectional. Indeed, I see the close relationships between PHM, software engineering, and survivability as well-justified because they all share some critical issues including reliability survivability, security, and dependability  


 The answer to the second question is much more elusive and I cannot present a full answer without comparative analysis of several engineering fields where PHM has been actively practiced. Of course, it is obvious that fields which demand mission critical reliability and dependability also demand better PHM solutions. One additional observation I would like to make is that PHM seems to play more crucial roles for engineering practices that depend on the systematic records of 'historical' data, such as reliability data in airplane engine manufacturing, rather than on the information from ad hoc events.  This may explain the critical importance of PHM in aerospace engineering particularly in commercial airplane design and manufacturing.  For example, comparing the tasks to design and build a space shuttle vs. to design and manufacture commercial jumbo jets, PHM should be more critical in the latter task  17    Figure 2. States of a monitoring sensor node and its failure modes \(after Ma &amp; Krings 2008e     Figure 3. Core Modules and their Relationships of the Life System Inspired PHM Architecture    REFERENCES  Adamides, E. D., Y. A. Stamboulis, A. G. Varelis. 2004 Model-Based Assessment of Military Aircraft Engine Maintenance Systems Model-Based Assessment of Military Aircraft Engine Maintenance Systems. Journal of the Operational Research Society, Vol. 55, No. 9:957-967  Anderson, R. 2001. Security Engineering. Wiley  Anderson, R. 2008. Security Engineering. 2nd ed. Wiley  Bird, J. W., Hess, A. 2007.   Propulsion System Prognostics R&amp;D Through the Technical Cooperation Program Aerospace Conference, 2007 IEEE, 3-10 March 2007, 8pp  Bock, J. R., Brotherton, T., W., Gass, D. 2005. Ontogenetic reasoning system for autonomic logistics. Aerospace Conference, 2005 IEEE 5-12 March 2005.Digital Object Identifier 10.1109/AERO.2005.1559677  Brotherton, T., P. Grabill, D. Wroblewski, R. Friend, B Sotomayer, and J. Berry. 2002. A Testbed for Data Fusion for Engine Diagnostics and Prognostics. Proceedings of the 2002 IEEE Aerospace Conference  Brotherton, T.; Grabill, P.; Friend, R.; Sotomayer, B.; Berry J. 2003. A testbed for data fusion for helicopter diagnostics and prognostics. Aerospace Conference, 2003. Proceedings 2003 IEEE  Brown, E. R., N. N. McCollom, E-E. Moore, A. Hess. 2007 Prognostics and Health Management A Data-Driven Approach to Supporting the F-35 Lightning II. 2007 IEEE AeroSpace Conference  Byington, C.S.; Watson, M.J.; Bharadwaj, S.P. 2008 Automated Health Management for Gas Turbine Engine Accessory System Components. Aerospace Conference 2008 IEEE, DOI:10.1109/AERO.2008.4526610 


2008 IEEE, DOI:10.1109/AERO.2008.4526610 Environment Covariates &amp; Spatial Frailty Applications: AL; Life Cycle Mgmt; Real-Time Alerts CBM+, RCM, TLCSM; Secret Sharing and Shared Control 18 Chen, Y. Q., S. Cheng. 2005. Semi-parametric regression analysis of mean residual life with censored survival data Biometrika \(2005  29  Commenges, D. 1999. Multi-state models in Epidemiology Lifetime Data Analysis. 5:315-327  Cook, J. 2004. Contrasting Approaches to the Validation of Helicopter HUMS  A Military User  s Perspective Aerospace Conference, 2004 IEEE  Cook, J. 2007. Reducing Military Helicopter Maintenance Through Prognostics. Aerospace Conference, 2007 IEEE Digital Object Identifier 10.1109/AERO.2007.352830  Cox, D. R. 1972. Regression models and life tables.  J. R Stat. Soc. Ser. B. 34:184-220  Crowder, M. J.  2001. Classical Competing Risks. Chapman amp; Hall. 200pp  David, H. A. &amp; M. L. Moeschberger. 1978. The theory of competing risks. Macmillan Publishing, 103pp  Ellison, E., L. Linger, and M. Longstaff. 1997.  Survivable Network Systems: An Emerging Discipline, Carnegie Mellon, SEI, Technical Report CMU/SEI-97-TR-013  Hanski, I. 1999. Metapopulation Ecology. Oxford University Press  Hallam, T. G. and S. A. Levin. 1986. Mathematical Ecology. Biomathematics. Volume 17. Springer. 457pp  Hess, A., Fila, L. 2002.  The Joint Strike Fighter \(JSF concept: Potential impact on aging aircraft problems Aerospace Conference Proceedings, 2002. IEEE. Digital Object Identifier: 10.1109/AERO.2002.1036144  Hess, A., Calvello, G., T. Dabney. 2004. PHM a Key Enabler for the JSF Autonomic Logistics Support Concept. Aerospace Conference Proceedings, 2004. IEEE  Hofbauer, J. and K. Sigmund. 1998. Evolutionary Games and Population Dynamics. Cambridge University Press 323pp  Hougaard, P. 2000. Analysis of Multivariate Survival Data Springer. 560pp  Huzurbazar, A. V. 2006. Flow-graph model for multi-state time-to-event data. Wiley InterScience  Ibrahim, J. G., M. H. Chen and D. Sinha. 2005. Bayesian Survival Analysis. Springer. 481pp  Kacprzynski, G. J., Roemer, M. J., Hess, A. J. 2002. Health management system design: Development, simulation and cost/benefit optimization. IEEE Aerospace Conference Proceedings, 2002. DOI:10.1109/AERO.2002.1036148  Kalbfleisch, J. D., and R. L. Prentice, 2002. The Statistical Analysis of Failure Time Data. Wiley-InterScience, 2nd ed  Kalgren, P. W., Byington, C. S.   Roemer, M. J.  2006 Defining PHM, A Lexical Evolution of Maintenance and Logistics. Systems Readiness Technology Conference 


Logistics. Systems Readiness Technology Conference IEEE. DOI: 10.1109/AUTEST.2006.283685  Keller, K.; Baldwin, A.; Ofsthun, S.; Swearingen, K.; Vian J.; Wilmering, T.; Williams, Z. 2007. Health Management Engineering Environment and Open Integration Platform Aerospace Conference, 2007 IEEE, Digital Object Identifier 10.1109/AERO.2007.352919  Keller, K.; Sheahan, J.; Roach, J.; Casey, L.; Davis, G Flynn, F.; Perkinson, J.; Prestero, M. 2008. Power Conversion Prognostic Controller Implementation for Aeronautical Motor Drives. Aerospace Conference, 2008 IEEE. DOI:10.1109/AERO.2008.4526630  Klein, J. P. and M. L. Moeschberger. 2003. Survival analysis techniques for censored and truncated data Springer  Kingsland, S. E. 1995. Modeling Nature: Episodes in the History of Population Ecology. 2nd ed., University of Chicago Press, 315pp  Kot, M. 2001. Elements of Mathematical Ecology Cambridge University Press. 453pp  Krings, A. W. and Z. S. Ma. 2006. Fault-Models in Wireless Communication: Towards Survivable Ad Hoc Networks Military Communications Conference, 23-25 October, 7 pages, 2006  Lamport, L., R. Shostak and M. Pease. 1982. The Byzantine Generals Problem. ACM Transactions on Programming Languages and Systems, 4\(3  Lawless, J. F. 2003. Statistical models and methods for lifetime data. John Wiley &amp; Sons. 2nd ed  Line, J. K., Iyer, A. 2007. Electronic Prognostics Through Advanced Modeling Techniques. Aerospace Conference 2007 IEEE. DOI:10.1109/AERO.2007.352906  Lisnianski, A., Levitin, G. 2003. Multi-State System Reliability: Assessment, Optimization and Applications World Scientific  Liu, Y., and K. S. Trivedi. 2006. Survivability Quantification: The Analytical Modeling Approach, Int. J of Performability Engineering, Vol. 2, No 1, pp. 29-44  19 Luchinsky, D.G.; Osipov, V.V.; Smelyanskiy, V.N Timucin, D.A.; Uckun, S. 2008. Model Based IVHM System for the Solid Rocket Booster. Aerospace Conference, 2008 IEEE.DOI:10.1109/AERO.2008.4526644  Lynch, N. 1997. Distributed Algorithms. Morgan Kaufmann Press  Ma, Z. S. 1997. Demography and survival analysis of Russian wheat aphid. Ph.D. dissertation, Univ. of Idaho 306pp  Ma, Z. S. 2008a. New Approaches to Reliability and Survivability with Survival Analysis, Dynamic Hybrid Fault Models, and Evolutionary  Game Theory. Ph.D. dissertation Univ. of Idaho. 177pp  Ma, Z. S. 2008b. Survivability Analysis of Biological Species under Global Climate Changes: A New Distributed and Agent-based Simulation Architecture with Survival Analysis and Evolutionary Game Theory. The Sixth 


International Conference on Ecological Informatics. Dec 25, 2008. Cancun, Mexico  Ma, Z. S. and E. J. Bechinski. 2008. A Survival-Analysis based  Simulation Model for Russian Wheat Aphid Population Dynamics. Ecological Modeling, 216\(2 332  Ma, Z. S. and A. W. Krings. 2008a.  Survival Analysis Approach to Reliability Analysis and Prognostics and Health Management \(PHM  AIAA AeroSpace Conference, March 1-8, 2008, Big Sky, MT, 20pp  Ma, Z. S. and A. W. Krings. 2008b. Competing Risks Analysis of Reliability, Survivability, and Prognostics and Health Management \(PHM  AIAA AeroSpace Conference, March 1-8, 2008.  Big Sky, MT. 20pp  Ma, Z. S. and A. W. Krings. 2008c. Multivariate Survival Analysis \(I Dependence Modeling", Proc. IEEE  AIAA AeroSpace Conference, March 1-8, 2008, Big Sky, MT. 21pp  Ma, Z. S. and A. W. Krings., R. E. Hiromoto. 2008d Multivariate Survival Analysis \(II State Models in Biomedicine and Engineering Reliability IEEE International Conference of Biomedical Engineering and Informatics, BMEI 2008.  6 Pages  Ma, Z. S. and A. W. Krings. 2008e. Dynamic Hybrid Fault Models and their Applications to Wireless Sensor Networks WSNs Modeling, Analysis and Simulation of Wireless and Mobile Systems. \(ACM MSWiM 2008 Vancouver, Canada  Ma, Z. S. &amp; A. W. Krings. 2008f. Dynamic Populations in Genetic Algorithms. SIGAPP, the 23rd Annual ACM Symposium on Applied Computing, Ceara, Brazil, March 16-20, 2008. 5 Pages  Ma, Z. S. &amp; A. W. Krings. 2008g. Bio-Robustness and Fault Tolerance: A New Perspective on Reliable, Survivable and Evolvable Network Systems, Proc. IEEE  AIAA AeroSpace Conference, March 1-8, Big Sky, MT, 2008. 20 Pages  Ma, Z. S.  and A. W. Krings. 2009. Insect Sensory Systems Inspired Computing and Communications.  Ad Hoc Networks 7\(4  MacConnell, J.H. 2008. Structural Health Management and Structural Design: An Unbridgeable Gap? 2008 IEEE Aerospace Conference, DOI:10.1109/AERO.2008.4526613  MacConnell, J.H. 2007. ISHM &amp; Design: A review of the benefits of the ideal ISHM system. Aerospace Conference 2007 IEEE. DOI:10.1109/AERO.2007.352834  Marshall A. W., I. Olkin. 1967. A Multivariate Exponential Distribution. Journal of the American Statistical Association, 62\(317 Mar., 1967  Martinussen, T. and T. H. Scheike. 2006. Dynamic Regression Models for Survival Data. Springer. 466pp  Mazzuchi, T. A., R. Soyer., and R. V. Spring. 1989. The proportional hazards model in reliability. IEEE Proceedings of Annual Reliability and Maintainability Symposium pp.252-256  Millar, R.C., Mazzuchi, T.A. &amp; Sarkani, S., 2007. A Survey of Advanced Methods for Analysis and Modeling of 


of Advanced Methods for Analysis and Modeling of Propulsion System", GT2007-27218, ASME Turbo Expo 2007, May 14-17, Montreal, Canada  Millar, Richard C., "Non-parametric Analysis of a Complex Propulsion System Data Base", Ph.D. Dissertation, George Washington University, June 2007  Millar, R. C. 2007. A Systems Engineering Approach to PHM for Military Aircraft Propulsion Systems. Aerospace Conference, 2007 IEEE. DOI:10.1109/AERO.2007.352840  Millar, R. C. 2008.  The Role of Reliability Data Bases in Deploying CBM+, RCM and PHM with TLCSM Aerospace Conference, 2008 IEEE, 1-8 March 2008. Digital Object Identifier: 10.1109/AERO.2008.4526633  Nowak, M. 2006. Evolutionary Dynamics: Exploring the Equations of Life. Harvard University Press. 363pp  Oakes, D. &amp; Dasu, T. 1990. A note on residual life Biometrika 77, 409  10  Pintilie, M. 2006. Competing Risks: A Practical Perspective.  Wiley. 224pp  20 Smith, M. J., C. S. Byington. 2006. Layered Classification for Improved Diagnostic Isolation in Drivetrain Components. 2006 IEEE AeroSpace Conference  Therneau, T. and P. Grambsch. 2000. Modeling Survival Data: Extending the Cox Model. Springer  Vincent, T. L. and J. L. Brown. 2005. Evolutionary Game Theory, Natural Selection and Darwinian Dynamics Cambridge University Press. 382pp  Wang. J., T. Yu, W. Wang. 2008. Research on Prognostic Health Management \(PHM on Flight Data. 2008 Int. Conf. on Condition Monitoring and Diagnosis, Beijing, China, April 21-24, 2008. 5pp  Zhang, S., R. Kang, X. He, and M. G. Pecht. 2008. China  s Efforts in Prognostics and Health Management. IEEE Trans. on Components and Packaging Technologies 31\(2             BIOGRAPHY  Zhanshan \(Sam scientist and earned the terminal degrees in both fields in 1997 and 2008, respectively. He has published more than 60 peer-refereed journal and conference papers, among which approximately 40 are journal papers and more than a third are in computer science.  Prior to his recent return to academia, he worked as senior network/software engineers in semiconductor and software industry. His current research interests include: reliability, dependability and fault tolerance of distributed and software systems behavioral and cognitive ecology inspired pervasive and 


behavioral and cognitive ecology inspired pervasive and resilient computing; evolutionary &amp; rendezvous search games; evolutionary computation &amp; machine learning bioinformatics &amp; ecoinformatics                 pre></body></html 


