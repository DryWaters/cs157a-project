Feliss: Flexible distributed computing framework with light-weight checkpointing\nTakuya Araki?† Kazuyo Narita?† and Hiroshi Tamano†\n?Cloud System Research Laboratories, †Knowledge Discovery Research Laboratories\nNEC Corporation, Japan\nt-araki@dc.jp.nec.com, k-narita@ct.jp.nec.com h-tamano@bx.jp.nec.com\nAbstract—Current distributed computing frameworks, such\nas MapReduce and Spark, allow programmers to use only\nlimited operations de?ned by the framework. Because of this\nrestriction, algorithms that do not ?t with the framework\ncannot be ef?ciently expressed. This restriction arose from\nthe need of fault-tolerance. That is, these frameworks recover\nlost data by re-computing them from available data when a\nfault occurs. To ensure this mechanism works correctly, only\noperations provided by the system can be used On the other\nhand, there is another fault-tolerance method called check-\npointing. Since it achieves fault-tolerance by saving memory\ncontents, there is no such limitation to operations. However,\nthe cost of saving a memory image is high. To overcome\nthis trade-off, we propose a light-weight checkpointing method\ncalled continuation-based checkpointing, which enables low\noverhead fault-tolerance without any restriction. It saves only\nthe information that is necessary for restarting, which signif-\nicantly reduces the cost of checkpointing. We implemented a\ndistributed computing framework called Feliss by using our\ncontinuation-based checkpointing method, which includes an\nimproved MapReduce without the above restriction and a\nmessage passing interface \(MPI showed that order-of-magnitude\nspeedup can be attained with applications that cannot be\nexpressed ef?ciently with current frameworks.\nI. INTRODUCTION\nIt is becoming common to collect data from sensors, the\nWeb, business transactions, and so on, and analyze these\n“Big Data” to produce useful information.\nTo analyze these data Hadoop/MapReduce is commonly\nused. This works ef?ciently if the program ?ts well with\nMapReduce. Otherwise the performance is very poor.\nThis is due to the restriction of the framework. Since\nMapReduce only provides limited operations \(e.g. map and\nreduce algorithms. MapReduce basically\nrequires its input and output to be on HDFS, which is a\ndistributed ?le system provided by Hadoop. Therefore, these\ncombined MapReduce functions must communicate through\nHDFS ?le I/O, for example. It is dif?cult to bypass the\n?le I/O because the data?ow is prede?ned and access to\nother distributed data from map or reduce is not allowed.\nBecause of this restriction, machine learning and data mining\nalgorithms, which require iterative computation, are known\nto run slowly with MapReduce [1].\nTo solve this problem, various frameworks have been\nproposed. Spark [1] is seen as one of the most promising\nframeworks. Spark can execute machine learning algorithms\nmuch faster than MapReduce by avoiding such ?le I/O.\nSpark works on a distributed data structure called resilient\ndistributed dataset \(RDD operations such as map,\nreduce, join, and ?lter are provided.\nThough Spark is much improved from MapReduce op-\nerations that can be used are still limited, which makes it\ndif?cult to ef?ciently implement certain types of algorithms.\nAn example of such an algorithm is “Gaussian elimination”,\nwhich iteratively updates only a part of a matrix. Spark does\nnot provide an operation that modi?es an RDD, because\nRDDs are immutable; a new RDD needs to be created to\nupdate the previous one. Therefore, updating a part of a\nmatrix requires copying the entire matrix including the non-\nupdated part, which prevents ef?cient implementation.\nSuch restriction of MapReduce and Spark stems from\ntheir re-computing based implementation of fault-tolerance.\nIn the case of MapReduce, the system re-executes map or\nreduce functions on part of the input ?le to recover lost data\nif a fault occurs. In the case of Spark, the system remembers\nthe list of operations applied to RDDs and re-computes the\nlost part from where the data remains. RDDs should be\nimmutable to make this mechanism work correctly. In both\ncases, programmers should not use distributed data other\nthan what is de?ned by the system i.e. RDD and HDFS them. If the data are modi?ed\nduring computation, re-computation modi?es them again,\nwhich results in an inconsistent execution state.\nOn the other hand, there is another well known mecha-\nnism to achieve fault-tolerance: checkpointing. With check-\npointing, the execution state is saved periodically as a\n“checkpoint”. If a fault occurs, the saved checkpoint is\nrestored and execution is resumed. Therefore, there is no\nrestriction of operations when using checkpointing.\nHowever, checkpointing has the following problems In\nthe case of system level checkpointing, the entire memory\nof a process is saved as an execution state. It requires a large\namount of time to save memory contents. This high overhead\nis the reason MapReduce and Spark do not use check-\npointing. In the case of application level checkpointing, a\nprogrammer explicitly speci?es which variables to save as\nan execution state. This takes signi?cantly less time than\nsystem level checkpointing because only the information\n2013 IEEE International Conference on Big Data\n978-1-4799-1293-3/13/$31.00 ©2013 IEEE 143\nthat is necessary to restart is saved. However specifying\nevery variable to save is a burdensome for programmers\nand prone to error; checkpointing does not 


work correctly\nif a programmer forgets to save variables that are needed to\nrestart.\nTo overcome this trade-off between the existing fault-\ntolerance methods, we propose a light-weight checkpointing\nmethod called continuation-based checkpointing, which en-\nables low overhead fault-tolerance without any restriction.\nIt is a kind of application level checkpointing method,\nbut programmers do not have to explicitly specify which\nvariables to save. Instead, programmers write a program so\nthat the rest of the computation is occasionally converted\nto a data structure, called a continuation, and stored into a\npool.\nFig. 1 shows the execution ?ow of our continuation-\nbased checkpointing method. First, a program puts an initial\ncontinuation into the pool. The system picks a continuation\nup from the pool and executes it. During execution new\ncontinuations are stored into the pool. By repeating this\nprocess, the entire program is executed.\nWhen the system takes a checkpoint, it stops picking up\na continuation after ?nishing the execution of a continuation\n\(it is assumed that the execution time of one continuation\nis shorter than the checkpoint interval time structures that contain pointers into\ncontiguous data. By saving the continuation pool, all infor-\nmation that is needed to restart the program can be saved\nbecause a continuation contains pointers to variables that are\nneeded to execute it; these variables are serialized together\nwhen the continuation is serialized. In other words, the\nsystem only saves the information that is needed to restart\nthe program, which is much smaller than that of system level\ncheckpointing.\nWe developed a distributed computing framework called\nFeliss using our continuation-based checkpointing method.\nWe also implemented an improved MapReduce and a\nmessage passing interface \(MPI the\nrestriction that Hadoop MapReduce has; it does not require\nthe input and output to be on HDFS, and access to arbitrary\ndistributed data during the MapReduce execution is allowed.\nTherefore, algorithms that cannot be implemented ef?ciently\nwith Hadoop MapReduce can be executed ef?ciently. In\naddition, implementing MapReduce and MPI on the same\nframework makes it possible to write a program that uses\nboth APIs. This is useful because it enables us to write a\nprogram that executes a machine learning algorithm written\nin MPI after preprocessing raw data with MapReduce.\nII. CONTINUATION-BASED CHECKPOINTING METHOD\nIn this section, we explain our continuation-based check-\npointing method in detail including its implementation writ-\nSystem takes one and nexecutes it\nContinuation Pool\nRest of computation is \nput into pool as “continuation”\nSave continuation pool nafter serialization\n\(Assuming short \nexecution time Continuation-Based Checkpointing\nten in C++ on Linux.\nConceptually, a continuation is a data structure that rep-\nresents an execution state, which includes the data and the\ncode required to run it. The actual implementation of the\ncontinuation is just a data structure that holds the pointer to\nthe function and its arguments. Therefore, the overhead of\ncreating a continuation is limited.\nAs described in Section I, a program needs to be written\nso that the rest of the computation is occasionally converted\nto a continuation and stored into a pool in order to use\ncontinuation-based checkpointing.\nFor example, functions normally written as\nint sample\(int a a b int b b follows:\nvoid sample\(int a, int *r a make_cont\(g,b,r int b, int *r h\(b continuation\nby taking the pointer to the function and its arguments;\nput_pool stores the given continuation into the contin-\nuation pool. A continuation cannot return a value; therefore,\nthe value is returned through a pointer given as an argument.\nThe function sample can return from the function after\nexecuting put_pool without executing g. This is when\nthe system can take a checkpoint. Then, the system picks\nup the continuation of g and executes it.\nIn this example, only one continuation is created in\nthe function and stored into the pool, but storing multiple\ncontinuations in one function is allowed. In this case, the\nexecution order of these continuations is not de?ned.\nThe execution time of the continuation does not have\nto be very small; it only needs to be only small enough\ncompared to the checkpoint interval time. Therefore, a\nprogrammer does not have to divide a program into many\n144\nsmall continuations. If the execution time of a continuation is\nlarge the system waits for the continuation to ?nish before\ntaking a checkpoint, which results in a larger checkpoint\ninterval time than expected.\nContinuations must be serializable. We used the serializa-\ntion library provided by Boost [2], which can serialize prim-\nitive types and containers provided by the standard library\nby default. To serialize a user-de?ned class, a programmer\nneeds to add a piece of code into the class.\nThe serialization library properly serializes data structures\nthat have pointers in them. That is, if an object is pointed\nto by multiple objects, the information is stored in the\nserialization result. When the serialized data are deserialized,\nsuch a relationship is recovered.\nOn the other hand, the serialization library cannot serialize\nthe pointer to a function. Thus, we implemented the serial-\nization of the pointer to 


a function by using the “symbol\nname” of the function, which can be obtained as a string\nusing a function called dladdr provided by the OS. The\npointer to the function is retrieved by calling dlsym with\nthe symbol name as an argument.\nWith the above implementation, the execution state can\nbe saved by saving the continuation pool after serialization,\nwhich can save all the data that can be traced from the\ncontinuations.\nAs described above, programmers need to modify pro-\ngrams if they want to use continuation-based checkpointing.\nIn this sense, this method is semi-transparent. However, the\nmodi?cation is small enough and easy to implement. In addi-\ntion, if a programmer only uses an API, such as MapReduce,\nhe/she does not need to be aware of the checkpointing layer;\nit is hidden by the MapReduce implementation and he/she\nonly needs to provide map and reduce functions, etc.\nIII. DESIGN AND IMPLEMENTATION OF FELISS\nWe designed and implemented a distributed computing\nframework called Feliss by using our continuation-based\ncheckpointing method. In this section, we describe Feliss\nby explaining components that compose Feliss.\nA. IDL-less RPC\nWe used remote procedure call \(RPC which is a mechanism to call a\nfunction on a remote server. Sending and receiving data\nbetween servers can also be done with RPC.\nRemote procedure call is a traditional mechanism, but\nexisting RPC requires a programmer to write an interface\ndescription in IDL. It is compiled by an IDL compiler\nto produce stub codes A client and a server program are\nwritten using the stub.\nSince such a procedure is cumbersome, we designed and\nimplemented a new RPC system that does not require IDL.\nWith this system, RPC can be written like:\nint r rpc\(node, foo, 1, 2 1 checkpoint\nworker 1\ncheckpoint\nworker 3\nworker 2 checkpoint\nworker 2\ncheckpoint\nworker 1\nworker 3 checkpoint\nworker 3\ncheckpoint\nworker 2\nspare 1\nspare 2\nIf there is fault at worker 2, \ncheckpoint data are taken \nfrom worker 3 \nCheckpoint data are saved \nlocally and sent to another \nworker for preparing for fault\nFigure 2. Overview of distributed checkpointing\nHere, “rpc” is a template function that takes as its argu-\nments the remote server \(node foo 1 and 2 a compilation error.\nTo make such RPC possible, the client needs to tell the\nserver which function to call For this purpose, we used the\nsymbol name of the function just like the serialization of\na function pointer in our continuation-based checkpointing\nmethod. Arguments of the function are serialized by Boost\nand sent to the server together with the symbol name of the\nfunction.\nB. Fault-Tolerance with Continuation-based Checkpointing\nIn Section II, we described our continuation-based check-\npointing method on a single server. In this section, we\nexplain distributed checkpointing using our method.\nFor distributed checkpointing, the following servers are\nspeci?ed at initialization: a master, workers that actually do\nthe computation, and spare servers that are used when a\nfault occurs. Fig. 2 gives the overview of the distributed\ncheckpointing system. A client program ?rst connects to the\nmaster and initializes RPC. Then the master connects to the\nworkers and initializes RPC.\nA program creates a continuation and speci?es it as the\n?rst continuation The master puts it into the continuation\npool of one of the workers, which starts the program\nexecution During the execution of the continuations, some\ncontinuations are put into other workers’ continuation pools\nwith RPC, which results in distributed execution.\nThe master periodically takes checkpoints at speci?ed\nintervals. When a checkpoint is taken, the master stops\nexecution of all the workers. That is, after nishing currently\nexecuting continuation, all the workers stop picking up\ncontinuations from the continuation pool.\nAfter con?rming that all the workers have stopped, the\nmaster orders the workers to take a checkpoint Each worker\nserializes the continuation pool and saves it onto the local\n145\ndisk. The serialized data are also sent to another worker to\nprepare for server fault. After con?rming that all the workers\n?nished taking a checkpoint, the master restarts the workers.\nIf there is a long running continuation on a worker,\nother workers must wait for that worker to stop before\nstarting checkpointing. Asynchronous checkpointing, such\nas the Chandy-Lamport algorithm can solve this problem.\nImplementing such an algorithm is for future work.\nThe master periodically checks if the workers are running\ncorrectly. If a worker is not working, the master restarts\nall the workers from the checkpoint. More speci?cally, the\nmaster stops all the worker processes and restarts them;\nthey read previously taken checkpoint data and continue\nexecution from that state. The checkpoint data are read from\nthe local disk if the worker server is still working. Otherwise,\na spare server is used instead; it reads the checkpoint data\nfrom the worker that has a copy of it.\nWe assume that a fault does not occur at the master. This\nassumption is reasonable because the number of workers is\nmuch larger than that of the master, which is one, and the\nfault probability is proportional to the number of servers.\nThis assumption is adopted by most distributed frameworks\nsuch as Hadoop and Spark.\nC. Variable Wrapper and Utility Functions\nIf a server restarts from a checkpoint, addresses of the\nvariables may change when they are 


recovered from check-\npoint data. This is not a problem within a server because the\npointers that point to the variables are also changed accord-\ning to their addresses during the deserialization process. On\nthe other hand, it becomes problematic when a programmer\nwants a pointer that points to another server’s variable.\nTo solve this problem, we introduce “variable wrapper”,\nwhich wraps variables. A variable wrapper works as an ID\nof a pointer; there is a mapping table between the ID and\nthe pointer in each server. Since the table exists within\na server, the mapping can be maintained correctly after\nrestart. Programmers can use the ID as the pointer to another\nserver’s variable.\nWe also used the variable wrapper for other purposes. The\n?rst one is synchronization. The execution time of a contin-\nuation must be short enough. However, if the execution is\nblocked by synchronization, it might become too long. To\nsolve this problem, the system provides a synchronization\nmechanism that does not block execution.\nWith this mechanism, the variable wrapper works like a\n“future”. That is, the variable wrapper has two states: a\npointer is set or not set to it. To read the pointer of the\nvariable wrapper, a continuation is speci?ed; it is executed\nafter the pointer is set to the variable wrapper. This enables\nsynchronization without blocking.\nAnother functionality added to the variable wrapper is\nsaving the contents of the pointer onto the local disk after\nserialization, which is used to support out-of-core computa-\ntion. The data saved on the disk are copied to another worker\ntogether with checkpoint data when a checkpoint is taken.\nThe system provides broadcast and reduction functions\nwith a tree-based communication algorithm, which uses\nvariable wrappers as remote pointers.\nIn addition, the system provides bounded/unbounded\nqueues, which also require synchronization. This synchro-\nnization is implemented using a continuation similarly as\nmentioned above.\nD. Improved MapReduce and MPI\nProgrammers can write distributed fault-tolerant programs\nwith the functionalities explained above: RPC, continuations,\nand utility functions together with variable wrappers. How-\never, these functionalities are rather primitive. Therefore we\nprovided MapReduce on top of the checkpointing layer.\nThe MapReduce we implemented was improved so that\nthe restriction of Hadoop/MapReduce is removed; it does\nnot require the input and output to be on HDFS, and access\nto arbitrary distributed data is allowed.\nOther than that, the MapReduce API is similar to that of\nHadoop/MapReduce and Google’s original MapReduce [3];\nmap, reduce, combine, and partition functions are speci?ed\nas the arguments of the mapreduce function. These user-\nprovided functions are function objects which are instances\nof classes that have operator states within them. The\nstates can be pointers; access to other data from these\nfunction objects is allowed This enables more ?exible\nand faster execution than with the traditional MapReduce\nimplementations.\nOur MapReduce implementation uses the queues ex-\nplained above for input and output of MapReduce Multiple\nMapReduce functions can be connected through the queues.\nOne MapReduce can pass the data through memory to\nthe other. In addition, the latter MapReduce can begin\nexecution before the former MapReduce completely ?nishes.\nTherefore, in such a case, our implementation runs faster\nthan traditional implementations.\nIn one MapReduce, the map-processing and the reduce-\nprocessing parts are also connected through queues. Sorted\nmap results are sent to the reduce part, and the reduce part\nmerge-sorts results from multiple maps, which results in so\ncalled shuf?e phase.\nSince the reduce part cannot start before the map part\ncompletely ?nishes, the map results might not ?t in memory.\nSuch data are spilled out to the local disk using the variable\nwrapper described above. The spilled map results are sorted\nwith an external sort algorithm in the shuf?e phase.\nHadoop/HDFS can be used as input and output. To use\nHDFS as input, the system provides a function that reads\nchunks of a ?le from HDFS and puts them into the input\nqueues of MapReduce. Load balancing is done here similar\n146\nto the original MapReduce. It is also aware of the locality\nof the ?le; it puts local chunks as far as possible into the\nqueues.\nWe also implemented an MPI subset on top of the\ncheckpointing layer, which enables us to use existing MPI\nlibraries and algorithms written in MPI.\nTo use MPI, the continuation of the top level function\nthat uses MPI needs to be sent to all the workers. In the\nfunction, a programmer can write an MPI program as usual.\nTo use both MapReduce and MPI together, a programmer\ncan just call the mapreduce function together. They can\ncommunicate through pointers to variables, variable wrap-\npers queues, and so on.\nIV. EVALUATION\nTo show the effectiveness of the proposed method and\nframework, we conducted the following evaluations. The\nservers used for the evaluation had Xeon 2GHz quad-core\nCPUs and 12GB of RAM which were connected through\nGigabit Ethernet. We used a maximum of 18 servers.\nA. Checkpointing\nTo con?rm the effectiveness of our continuation-based\ncheckpointing method, we compared its performance with\nBerkeley Lab Checkpoint/Restart \(BLCR  onto a disk.\nFig. 3 shows the evaluation results. The program used\nfor the evaluation holds std::map<string string>\nas data, which stores 20 million elements. We evaluated\ntheir checkpointing times and checkpoint ?le sizes using\none server. Feliss could take a checkpoint 5.3 times faster\nthan BLCR. The checkpoint ?le size was 


5.6 times smaller\nthan that of BLCR, which contributed to the speed of the\ncheckpoint.\nOne reason for this is that std::map uses a data\nstructure called a red-black tree, which uses many pointers\ninternally. Because of this memory overhead, it requires\nmuch more memory than the actually stored data size.\nSerialization transforms such data structures to contain only\nthe actually stored data, which signi?cantly reduced the\ndata size. Data analysis applications usually require such\ncomplex data structures, which is different from traditional\nHPC programs that commonly use dense data structures such\nas an array.\nNext, we evaluated the checkpointing and restarting times\nof applications on Feliss. The applications used for evalua-\ntion were word count \(WC LR LU LSA  and\nlatent Dirichlet allocation \(LDA  using MPI. LSA uses both MapReduce and MPI\ntogether with Parallel ARPACK [7] to realize singular value\n0\n500\n1000\n1500\n2000\n2500\n3000\n3500\n0\n5\n10\n15\n20\n25\n30\nBLCR Feliss\nCheckpointing Time\nFile Size\nCh\nec\nkp\noi\nnt\nin\ng \nTi\nm\ne \n\(se\nc M\nB n\f \n n \b\t \n \n\f \n n\nTi\nm\ne \n\(se\nc Applications\ndecomposition that is needed in LSA. Feliss has such advan-\ntage that it can utilize existing high quality library written\nin MPI, which is dif?cult with Spark or Hadoop. LDA\nuses multiple MapReduce functions, which are ef?ciently\nconnected as described in Section III-D.\nThe input data of WC, LSA, and LDA was English\nWikipedia text of about 8 GB. The input data of LR is 20\nGB of vectors. The input data of LU is a matrix of size 4320\nx 4320.\nWe measured \(1 2 with one checkpointing, and \(3 killed just after taking the checkpoint, and the\nprogram restarted from the checkpoint after that. We used\n\(2 1 3 2 72 CPUs 4\nshows the evaluation results.\nBoth checkpointing and restarting times were small\nenough on real applications. The checkpointing and restart-\ning times of LDA were larger than those of the other\napplications because LDA uses more memory than the\nothers.\nB. Performance of Feliss\nTo determine the performance of Feliss we ?rst evaluated\nits scalability. Fig. 5 shows the execution speed of the above\napplications with various numbers of CPUs. It shows relative\nspeed normalized by the speed with 1 CPU. The checkpoint\nwas taken once during the execution. The input data were\nthe same as in the previous evaluation.\n147\n\n\n\n\n\n\n b\n\t\n\n\f\n n\nR\nel\nat\nive\n S\npe\ned\nNumber of CPUs\nFigure 5. Scalability of Feliss\nThe evaluation results show good scalability of Feliss with\nWC, LR, and LDA. The scalability with LU and LSA was\nlower than the other applications. This is because network\ncommunication became bottlenecked during the execution\nof LU and singular value decomposition used in LSA. We\nbelieve that scalability can be improved by using a faster\ninterconnect such as 10 Gigabit Ethernet or In?niBand.\nWe then executed the applications written in other frame-\nworks, and compared their performance with Feliss. We\nexecuted WC on Hadoop \(0.20.2 on Spark\n\(0.6.0 and 0.7.2 respectively 0.7 framework implemented\non top of Hadoop. Fig. 6 shows the relative speed of Feliss\ncompared with these frameworks.\nThe input data of WC, LR, LU, and LSA were the same\nas the previous evaluation. For the input data of LDA, we\nused part of the Wikipedia text of 250 MB, because the\nexecution speed of Mahout was too slow. One checkpoint\nwas taken during the execution of Feliss. We evaluated these\napplications on 18 servers \(72 CPUs applications.\nWith LR, Feliss was 2.2 times faster than Spark. One of\nthe reasons for this is that Feliss uses an ef?cient reduction\nalgorithm with tree-based communication, unlike Spark.\nSince reduction is a prede?ned operation in Spark, it cannot\nbe modi?ed at the user program level. Another reason is that\nFeliss is implemented in C++, which is faster than Scala that\nis used in Spark.\nWith LU, Feliss was 82.8 times faster than Spark. Feliss\nwas 13.8 times faster with LSA, and 17.2 times faster\nwith LDA than Mahout. These results show that even\nthese common algorithms do not ?t well with Spark or\nHadoop/MapReduce because of the above mentioned restric-\ntions, but can be expressed ef?ciently with Feliss.\nV. RELATED WORK\nResearch on checkpointing has a long history. For sys-\ntem level checkpointing, BLCR [4] has been widely used\n\n\n\n\b\n\n\n\n\n\n\n\n\b\t\n\n\f\n n\b\f\n n\b\f\n n\b\n\f\n 


n\b\n\f\nR\nel\nat\nive\n S\npe\ned\n o\nf F\nel\nis\ns\nFigure 6. Comparison with Other Frameworks\nrecently, which works as a kernel module of Linux. Libckpt\n[8] works as a user-level library, and supports incremental\ncheckpointing, which saves only the changed part after the\nprevious checkpoint. Our current framework does not sup-\nport incremental checkpointing. We plan to implement this\nfor future work. In Condor 9] checkpointing is implemented\nas a user-level library. It uses checkpointing to migrate a\nprocess for resource management in a distributed computing\nenvironment. Applying checkpointing for such a purpose is\nalso for future work.\nTransparent application level checkpointing with the help\nof a compiler was proposed in [10 It analyzes live variables\nthat should be checkpointed on behalf of a programmer. Its\nmotivation was similar to ours, but they could not reduce\nthe checkpoint size of complex data structures, such as\nstd::map, because information of the data structure is\nneeded \(e.g. to recover std::map, pointer information\nis not needed the case of serialization, a serialization\nlibrary \(or a serialization code provided by a programmer implementation cost of creating\na new compiler is much larger than that of library layer\nimplementation such as ours.\nCharm++ [11] achieves checkpointing on the program-\nming language layer. Objects of Charm++ are location\nindependent and can migrate to other processors. This char-\nacteristic is used for checkpointing These objects are similar\nto our continuations. Feliss is different from Charm++ in that\nFeliss does not require to use a special language.\nThese checkpointing methods are used together with MPI.\nFor example, Open MPI, which is a production level MPI\nimplementation, supports checkpointing using BLCR [12].\nAs for data analysis frameworks, there has been many at-\ntempts to increase the speed of large-scale machine learning.\nHowever, current systems have restrictions.\nHaloop [13] and Twister [14] can ef?ciently execute\niterative MapReduce. However, they do not support other\nexecution patterns. Piccolo [15] and Distributed GraphLab\n[16] are distributed computing frameworks that are special-\nized to speci?c data structures such as a table or a graph.\n148\nThey achieve fault-tolerance by checkpointing these data\nstructures. These frameworks have restriction in which only\nlimited distributed data structures are supported. Sparkler\n[17] extends Spark to improve the performance of large scale\nmatrix factorization problems. However, it only improves\nthe performance of such kind of problems; the restriction\nstill remains SystemML [18] compiles a machine learning\nalgorithm written in a domain speci?c language into a\nHadoop/MapReduce program. This provides ?exibility to the\nuser, but it exhibits poor performance because of the restric-\ntion of Hadoop; if the data size is small, its performance\nis much worse than R, though it has advantage that it can\nhandle larger data than R. M3R [19] improves its perfor-\nmance by creating a Hadoop/MapReduce-compatible layer\nthat gives up fault-tolerance and out-of-core computation.\nImplementation of MapReduce using MPI is proposed\nin [20]. Using both MapReduce and MPI together may be\npossible, but it does not support fault-tolerance.\nVI. CONCLUSION\nWe proposed a light-weight checkpointing method called\ncontinuation-based checkpointing, and used it to implement\na ?exible distributed computing framework called Feliss. We\nimplemented and evaluated various applications on Feliss\nand con?rmed that it can execute them more ef?ciently than\ncurrent frameworks.\nFuture work includes extension of checkpointing such\nas asynchronous checkpointing, incremental checkpointing,\nand using checkpointing for resource management Com-\npletion of MPI implementation is also for future work. We\nstarted to use Feliss as a platform of data mining research.\nWe will add other abstractions to Feliss to make it easy to\nexpress various data mining algorithms.\nACKNOWLEDGMENT\nThis work was performed of the METI R&D of Indus-\ntrial Science and Technology Frontier Program \(Green IT\nProject  Dave, J. Ma, M. Mc-\nCauley, M. J. Franklin, S. Shenker, and I. Stoica, “Re-\nsilient distributed datasets: A fault-tolerant abstraction for in-\nmemory cluster computing,” in NSDI, 2012.\n[2] R. Ramey, “Boost serialization,” http://www.boost.org/doc/\nlibs/release/libs/serialization/.\n[3] J. Dean and S. Ghemawat MapReduce: Simpli?ed data\nprocessing on large clusters,” in OSDI, 2004, pp. 137–149.\n[4] Future Technologies Group, “Berkeley Lab\nCheckpoint/Restart \(BLCR  Landauer and S. Dumais, “Latent semantic analysis,”\nScholarpedia, vol. 3, no. 11, p. 4356, 2008.\n[6] Y. Wang H. Bai, M. Stanton, W.-Y. Chen, and E. Y. Chang,\n“PLDA: Parallel latent Dirichlet allocation for large-scale\napplications,” in AAIM, 2009, pp. 301–314.\n[7] K. J. Maschhoff and D. C. Sorensen, “P ARPACK: An ef?-\ncient portable large scale eigenvalue package for distributed\nmemory parallel architectures,” in Third International Work-\nshop on Applied Parallel Computing, Industrial Computation\nand Optimization, 1996, pp 478–486.\n[8] J. S. Plank, M. Beck, G. Kingsley, and K. Li, “Libckpt:\nTransparent checkpointing under Unix,” in Usenix Winter\nTechnical Conference, 1995, pp. 213–223.\n[9] M. Litzkow, T. Tannenbaum, J. Basney, and M Livny,\n“Checkpoint and migration of UNIX processes in the Condor\ndistributed processing system,” University of 


Wisconsin -\nMadison Computer Sciences Department, Tech. Rep. UW-\nCS-TR-1346, 1997.\n[10] I. Cores, G Rodriguez, M. Martin, and P. Gonz’lez, “Reduc-\ning application-level checkpoint ?le sizes: Towards scalable\nfault tolerance solutions,” in 10th International Symposium on\nParallel and Distributed Processing with Applications \(ISPA  in-\nmemory checkpoint-based fault tolerant runtime for Charm++\nand MPI,” in CLUSTER, 2004, pp. 93–103.\n[12] J Hursey, J. Squyres, T. Mattox, and A. Lumsdaine, “The\ndesign and implementation of checkpoint/restart process fault\ntolerance for Open MPI,” in IPDPS, 2007, pp. 1 –8.\n[13] Y. Bu, B. Howe, M. Balazinska, and M. D. Ernst HaLoop:\nef?cient iterative data processing on large clusters,” Proc.\nVLDB Endow., vol. 3, no. 1-2, pp 285–296, 2010.\n[14] J. Ekanayake, H. Li, B. Zhang, T. Gunarathne, S.-H. Bae,\nJ. Qiu, and G. Fox, “Twister: A runtime for iterative MapRe-\nduce,” in HPDC’10, 2010, pp. 810–818.\n[15] R. Power and J. Li, “Piccolo: Building fast, distributed\nprograms with partitioned tables,” in OSDI, 2010, pp. 293–\n306.\n[16] Y. Low, D. Bickson, J Gonzalez, C. Guestrin, A. Kyrola,\nand J. M. Hellerstein, “Distributed GraphLab: a framework\nfor machine learning and data mining in the cloud,” Proc.\nVLDB Endow., vol. 5, no. 8, pp. 716–727, 2012.\n[17] B. Li, S Tata, and Y. Sismanis, “Sparkler: supporting large-\nscale matrix factorization,” in EDBT, 2013, pp 625–636.\n[18] A. Ghoting, R. Krishnamurthy, E. Pednault, B. Reinwald,\nV. Sindhwani, S. Tatikonda, Y. Tian, and S. Vaithyanathan,\n“SystemML: Declarative machine learning on MapReduce,”\nin ICDE, 2011, pp. 231–242.\n[19] A Shinnar, D. Cunningham, V. Saraswat, and B. Herta,\n“M3R: increased performance for in-memory Hadoop jobs,”\nProc. VLDB Endow., vol. 5, no. 12, pp. 1736–1747, 2012.\n[20] S. J. Plimpton and K. D. Devine MapReduce in MPI\nfor large-scale graph algorithms,” Parallel Comput., vol. 37,\nno. 9, pp. 610–632, 2011.\n149\n 


Illnesses \n• Suffer from Many Allergies \nThe following are the negative effects on a body from \nhaving cortisol present for too long: \n• Impaired cognitive performance \n• Suppressed thyroid function \n• Blood sugar imbalances such as hyperglycemia \n• Decreased bone density \n• Decrease in muscle tissue \n• Higher blood pressure \n• Lowered inununity and inflammatory responses in the \nbody, slowed wound healing, and other health nconsequences \n• Increased abdominal fat, which is associated with a \ngreater amount of health problems than fat deposited in \nother areas of the body. \n• Heart attacks \n• Strokes \n• The development of metabolic syndrome, higher levels \nof "bad" cholesterol \(LDL HDL lead to death. \nVIII. DEPRESSION \nDepression occurs when a person ignores the many \nmessages from the FOFR for a prolong time and the \nbrains thalamus/hypothalamus area releases chemicals \nat levels different than it would if the person was \nresponding properly to the FOFR. Depression is the \nfirst of many survival mechanisms the brain's pseudo \nconsciousness resorts to as it is forced to continuously \nwork to communicate with the conscious using limited \ncommunications methods that are often ignored by the \nconscious. It is all too common for people to become \ninsensitive to their feelings and emotions as a survival \nmechanism. \nFigure 20. The Balanced Lifestyle Necessary for \nTreating and Curing Mental Illness Includes making the \nChanges for Creating and Living a Balanced Lifestyle. \nAgain, depression is the fIrst attempt by the \nhypothalamus/subconscious portion of the brain to \ncommunicate with our conscious mind and inform us \nthat the conscious mind is ignoring the messages from \nour FOFR. These messages include hunches, feelings \nand emotions. These messages can number in the \nhundreds and range from the obvious to the subtle. \nThe time it takes the subconscious its messages are \nbeing ignored is in the years, before the symptoms \nfrom depression become serious enough to seek \nmedical treatment. Feelings often can ignored include \nanger, fear, love, happiness, sadness, guilt shame, \nloneliness. Emotions include pride, jealousy, anxiety, \nresentment, envy, frustration, joy, regret nAccording to the National Institute of Mental Health, \nsymptoms of depression include the following: \n Difficulty concentrating, remembering details, and \nmaking decisions \n• Fatigue and decreased energy \n Feelings of guilt, worthlessness, and/or helplessness \n• Feelings of hopelessness and/or pessimism \n Insomnia, early-morning wakefulness, or excessive \nsleeping \n• Irritability, restlessness \n• Loss of interest in activities or hobbies once \npleasurable, including physical intimacy \n• Overeating or appetite loss \n Persistent aches or pains, headaches, cramps, or \ndigestive problems that do not ease even with treatment \n Persistent sad, anxious, or "empty" feelings \n• Thoughts of suicide, suicide attempts \nThe following information is included in the rehabilitation \nprogram for treating and curing depression based on the \nFOFR being the cause of mental illness: \na the symptoms \n• Talk therapy to improve awareness of and reconnect \nwith feelings and emotions \nb depression: Ignoring messages from the \nsubconscious including hunches, feelings, emotions and \nother messages which causes the brain to change the brains \nchemistry causes many unpredictable behavior conditions. \nc Duration of time to acquire depression: Several years \nd Cure: Rehabilitation: Removal from existing lifestyle for \nat least 3 years. Changes to lifestyle that eliminates the \nthreats that the hypothalamus/thalamus determines to be a \nthreat \nt Good \ng depression prior to arrival in space: \n• Insensitivity to feelings and emotions \n• Unawareness for what feelings and emotions are for \n• The unawareness that the subconscious uses feeling, \nemotions, thoughts and hunches to communicate with \nthe conscious mind. \nIX. ANXIETY \nAnxiety is a serious medical illness, which affects a large \nnumber of people. It occurs often and is related to the \nmodern lifestyle that requires people to be exposed \ncontinuously to threatening people, places and activities \nsimultaneously on a long term, continuous basis. Anxiety is \none of many messages from the subconscious mind to the \nconscious mind that people describe as experiencing a \nfeeing or an emotion. Anxiety may be accompanied with \nfeelings or beliefs that their life is in immediate danger, out­\nof-control or are helpless or powerless to make changes in a \nsituation. \nAs a survival mechanism by the subconscious, anxiety \ndisorders are a result of the subconscious' independent \ndetermination that immediate danger or death exists from \npeople, places and activities simultaneously that greatly \nthreatens the person's life and the person has ignored other \nmessages with the same information in the past regularly. \nThe subconscious mind wants the conscious mind to know \nthat danger and the potential for death has been identified by \nthe subconscious. The subconscious does this by causing \nanxiety to be experienced by a person and wanting the \nperson to take action and run away from the danger. \nUnfortunately, it is extremely difficult for people to take the \nright action. \nThere are several recognized types of anxiety disorders \nincluding panic disorder, obsessive-compulsive disorder \n\(COD post-traumatic stress disorder \(PTSD 


ndisorder . \nThe following information is based on the FOFR as the \ncause and cure of anxiety disorders: \na Common treatments of the symptoms: \n• Pharmacology for symptoms \n• Talk therapy to become aware of and reconnect \nwith feelings and emotions from the subconscious.3 \nb emotions and \nother messages from FOFRlhypothalamus and subconscious \ncausing chemical brain imbalance and unpredictable \nbehavior changes. \nc recover from depression: Twice the duration \nto acquire it. \ne lifestyle for \nat least 3 years. Changes to lifestyle that eliminates the \nthreats that the hypothalamus/thalamus determines to be a \nthreat \nt nimproving the long-term relationship between the \nsubconscious and conscious mind and understanding how \nthey communicate. \ng thalamus/hypothalamus to \nits pre-damaged condition, must rely on the natural healing \nby the body. \nh Required work to recover: High. The many years of \ndamage to the thalamus and hypothalamus because of nexposure to the harmful chemicals released by the FOFR \nrequires some changes in lifestyle that are often severe for \nmost people to make. Thus, most people will live with \nanxiety and use the medications to relieve relief from the \nsymptoms rather than adopt the right lifestyle their FOFR \ndemands to stop the progression of the mental illness to \neven more severe behavior changes including suicide. \nX. THE SENSORY INPUT TO THE FOFR nThe sources of the known sensory inputs into the fight-or­\nfight response/thalamus are the ears \(sound light pressure/pain odor temperature, \npressure equivalent to a \nchannel of analog information. This means that if the \nanalog input data were converted to digital telemetry, the \nFOFRlthalamus is receiving about 1 00 GB/S of input data \nfrom each channel of information continuously during \nwaking hours. \nThe sensory input to the subconscious and conscious is far nless during sleep and so data processing decreases allowing \nthe brain to slow down and recover from the day's work \nduring sleep. The FOFR and thalamus and hypothalamus \narea of the brain continues to monitor all the data inputs for \nthreats and remains ready to initiate any action necessary for \nself-preservation. \n12 nXI. THE COMMUNICATIONS BANDWIDTH \nBETWEEN THE SUBCONSCIOUS AND THE \nCONSCIOUS \nUsing feelings, hunches and emotions to communicate from \nthe subconscious to the conscious mind, the information \ninput to the conscious mind from the subconscious mind is \nsignificantly less than the sensory input into the FOFR \nsubsystem. The conscious mind would be easily overloaded \nif it received all the information that the FOFR subsystem nreceived from a person's eyes, ears, nervous system and \nskin and nose. \nThe communications capability between the conscious and \nsubconscious mind is close to zero and this is the reason that \nthe external sensory inputs such as ears, eyes and nose, to \nthe subconscious mind must be used to communicate with \nthe subconscious mind by the conscious mind even though \nboth reside in the same brain. It is confusing to understand \nthat the conscious thoughts are not accessible to the \nsubconscious mind, but they are not. Data exists that the \ncommunications between the subconscious and conscious \nmind is one way thus forcing the conscious mind to use the \nsame communication channels that are used by the \nsubconscious for receiving all other information. \nXII. How PREDICTIVE ALGORITHMS PROCESS \nINFORMATION FOR PREDICTING MENTAL ILLNESS \nFigure 21 is the prognostic analysis that was completed on \nthree NASA EUVE satellite rate-gyros used for attitude ncontrol, pointing and reorienting of the NASA Extreme \nUltra-Violet Explorer \(EUVE orbiting \nspace science satellite. The behavior in the data in Figure 2 1  \nfor Gyro B was missed by the engineering analysis that was \ncompleted by the gyro vendor's manufacturing engineers. \nThe duration of time that the equipment telemetry spanned \nin the prognostic analysis in Figure 2 1  is equivalent to that \nof a prelaunch readiness, launch and 30  days of on-orbit \nhistory for a human space flight program. The prognostic nanalysis used the NASA EUVE gyro motor current. All \nthree rate-gyros were operating simultaneously for nredundancy purposes, only two gyros were needed \nfunctionally. The NRTE \(accelerated aging nGyro B telemetry motor current was processed using \nproprietary predictive algorithms. [ 16] \nPredictive algorithms demodulate telemetry behavior from \nthe measurements in time, amplitude, frequency and phase. \nThe demodulation process illustrates the presence of non­\nrepeatable changes that are usually overlooked and nmisdiagnosed as systemic noise from completely normal \nappearing and normal behaving people or systems nFigure 2 1 .  An Example of the Post-Processing Results \nusing Predictive Algorithms to Illustrate Accelerated \nAging in Normal Appearing Telemetry from 3 Fully \nFunctional NASA Hubble Telescope Gyroscopes 117J \nIn electronics communication theory, modulation techniques \nadd intelligence onto a carrier signal Demodulation \nrecognizes the presence of modulation on a carrier signal \nand demodulates the information providing understanding \nof the information that was modulated onto the signal. Our \nproprietary, predictive algorithms create a carrier \(baseline 


nbaseline behavior is created using the predictive \nalgorithm\(s proprietary, predictive algorithms illustrate the presence \nof prognostic markers \(a.k.a. accelerated aging/disease mental illness with certainty. \nThis is done by completing a prognostic analysis on the \nbiologically derived diagnostic data. The results of the \nprognostic analysis include the prediction of mental health \nwith certainty. \nFigure 22. The three NASA Hubble Rate Gyros from \nFigure 21 where Gyro B Telemetry Included the nPresence of Accelerated Aging. \n1 3  \nXIII. WHAT IS A THREAT, STRESS, STRESSORS \nAND TRIGGERS \nThese terms need to be defined because they often used \nincorrectly. A threat to the FOFRIhypothalamus/thalamus is ndefined only by the a person's thalamus/hypothalamus and \nis believed to include such events as a dangerous animal \nready to strike, a person attempting to strike someone, a \nperson with a gun that may fire the gun to cause harm. \nStress is the response of the body when the FOFR is \nactivated when the thalamus/hypothalamus recognizes that a \nthreat as defined by the FOFR is present. Early indicators \nthat the FOFR has been activated include: hay \nfever/allergies, canker sores in and around the mouth and \ntongue, chapped lips heartburn, hemorrhoids \(inflamed \nrectum fellow employees, a bully at school, a failing grade \non a test, an angry fried, deadlines, homework, tests nmidterms and finals. \nTriggers are events, places, people, behavior or items that \nevoke a psychological behavior or reaction. Triggers are \nunique and identified only by a person's \nFOFRIthalamus/hypothalamus as a threat. The body \nresponds with a faster heartbeat, faster breathing, \nperspiration and increased blood pressure as well as \npsychological and/or emotional responses. \nXIV. How PHYSICAL DAMAGE TO THE BODY \nAND BRAIN OCCURS WHEN THE FOFR REMAINS \nACTIVATED \nMovement Sensation Hearing Intel lect \nThought \nReasoning nMemory \n. R ight:  \nAbstract \n-,......,f->r. concepts \n* Left : \nBehaviour \nMemory \nHearing and \nvision pathways \nEmotion \n* R ight handed people \n\(for left handed people these are the other way a round nmotor and \nsensory \nfunctions \nVision \nFigure 23. The Subsystems of the Human Brain \nand their Functionality nThe continuous presence of the chemicals released by the \nFOFR over a short term or long term has a huge impact on \nthe duration of life for every person. The FOFR was \ndeveloped by the body to be used for an extremely short \nduration, yet today; it remains turned on almost \ncontinuously for many years causing massage harm to the \nbody from disease, illness and injury. \nSlIbs?telll that Oeg raded \nFOFR Activation E llo llgh to Calise \nNo  Ch<r1ge in Past Functional Performance Sch izophrenia .? ??? III \n? II> \nCO \nC \nC \no \n:;:; III n1:1 III ... \nOl \nII> \no \nFigure 24. The Different Rates of Degradation for the \nBrains Subsystems caused by the Chemicals Released by \nthe FOFR Eventually Resulting in Mental Illness. \nThis different rate of degradation for the brain's subsystems \n\(see Figure 23 released by the FOFR long-term is the basis for \nthe application and usability of the prognostic and health nmanagement program to predict and prevent mental illness. \nAs the brain's subsystems degrade in perfonnance their \nfunctionality changes and this change in functionality is \nillustrated in telemetry, using predictive algorithms in a \nPHM \(see Figure 2 1 detennining if an offset \nor non-repeatable transient event \(a.k.a. accelerated aging personnel on board space exploration missions \nby comparing a person's baseline circadian and ultradian nrhythms behavior and real-time circadian and ultradian \nrhythms. If either or both exists, it means that the nFOFRIthalamus is degraded by the harsh chemicals of the \nFOFR and the thalamus will continue to degrade in nperformance enough to cause mental illness in the near \nfuture. \nPredictive algorithms require information from the inside of \nthe active part of a system. Fortunately, the part of the brain \nthat controls circadian rhythms resides next to the thalamus \nand hypothalamus and the behavior that is controlled by the \ncircadian rhythm proved the information to be processed \nusing predictive algorithms. So when the thalamus and nhypothalamus are damaged from the harsh chemicals from \nthe FOFR, the part of the brain that controls the circadian \nrhythms is also damaged due to its location near the \nthalamus and hypothalamus \(see Figure 25 the damage \nis identifiable by using predictive algorithms to process the \n14  \nmeasurements from the body that experience circadian \nrhythm. \nFigure 25. The Location in the Brain where Circadian \nand Ultranian Rhythms Originate Near the Thalamus \nand Hypothalamus that Create the FOFR that are \nDamaged from Long Term Exposure to Cortisol and \nAdrenaline. \n[191Almost every function in the human body exhibits a \ncircadian rhythm and major changes to these rhythms can be \nused to predict mental illness. In ambulatory conditions nenvironmental factors and physical exertion can obscure or \nenhance the expressed rhythms. The three most commonly \nmonitored vital signs are blood pressure \(systolic and \ndiastolic Because these \nvariables exhibit daily rhythms, their normal values vary \nwith the time of day. \nTable 3 shows the normative ranges for these variables. \nCircadian rhythms are produced by natural factors within \nthe body 


but they are also affected by signals from the \nenvironment. Light is the main cue that triggers circadian nrhythms, and turning light on or turning light off trigger the \ngenes that control an organism's internal clocks. Circadian \nrhythms are physical, mental and behavioral changes that \nfollow an approximate 24-hour cycle, responding primarily \nto the light and darkness in a person's immediate \nenvironment. They are found in people, most living things, \nincluding animals, plants and many tiny microbes. \nCircadian rhythms change sleep-wake cycles, hormone \nrelease, body temperature and other important bodily \nfunctions. Researchers have already identified the genes that \ndirect circadian rhythms in people, fruit flies, mice, fungi \nand several other model organisms. \nCircadian rhythms determine many human behavioral \npatterns.[201 The body's master clock controls the production \nof melatonin, a honnone for sleep. The area of the brain that \ncreates circadian rhythms is located just above the optic \nnerves, which relay infonnation about the incoming light to nthe eyes. When there is less light-like at night-the area \ntells the brain to make more melatonin so a person gets \ndrowsy. Ultradian rhythms are events in the body that are \nrepeated throughout a 24-hour circadian day In contrast, \ninfradian rhythms, are events such as the human menstrual \ncycle, have period longer than a day nTable 3. The Three Measurements to Include in \nTelemetry from Space for Developing a Baseline of \nPersonnel Biological Behavior \nNORMATIVE RANGES \nMEASUREMENT MEAN LOW HIGH \nSystolic BP \(mm Hg nDiastolic BP \(mm Hg bpm OC nTemperature \(OF no 36.6 \n36.4 \no 3 6 9 1 2  1 5  1 8  2 1  24 \nTime of Day \nFigure 26. An Example of a Person's  Normal Short­\nTerm Body Temperature from Telemetry for \nDeveloping Baseline Body Temperature Behavior. \n9 "11 2 '1'1 5  \n-r h"YlI e  01''1 D a y  \nFigure 27. An Example of a Person's  Normal Short­\nTerm Systolic Blood Pressure from Telemetry for \nDeveloping a Baseline of Behavior. \n85 \n80 \n75 \nI 70 \ni 65 = \n::l :>:: 60 \n55 \nSO \n0 3 6 9 1 2  1 5  ' 8  2 1  \nTi m e  o f  Day \nOF \n99.4 \n99.0 \n98. 6 \n98. 2 \n97 .8 \n97.4 \n24 \nFigure 28. An Example of a Person's  Normal Short-term \nHeart Rate from Telemetry for Developing a Long-Term \nBaseline of behavior. \n1 5  \nUltradian rhythms play an essential part at all levels of \nbiological organization, providing timekeeping for \nintracellular processes, playing various roles in intracellular \nsignaling systems and underpinning coherent behavior in \ntissues and organs. They are crucial to endocrine and neural \nperfonnance and in psychobiology. \n80 \n::! \ni "  60 m E .i:; - 40 :rl "is 20 <il \n20 \n? _ 1 5 ? i  1 0  \n? - 5 \n0 \nModerate Light Bright Light \n8 1 6  \nHours s i n ce start of Constant R o u t i n e  \n24 32 40 4 8  0 8 16 24 3 2  \nl ? , \\j no l------II-+------? \n200 \no \n37.2 \n37.0 \n36.8 \n36.6 I--__ -.--J'---+--______ ? \n40 48 \n, \n, I I \nI \n22:00 1 0:00 22:00 1 0:00 22:00 22:00 1 0 :00 22:00 1 0:00 22:00 \nClock t ime Clock Time \nFigure 29. A Person' s Normal Short-Term Circadian \nRhythms Measurements to be Included in Telemetry for \nProcessing with Predictive Algorithm to Generate a \nBaseline from at least 6 Months of Data. \nIn lower eukaryotes short-period rhythms period 30-70 \nmin endocrine and behavioral \nrhythms characterize both wakefulness and sleep; \npathologically disordered states give rise to dynamic \ndiseases. \n1 50 \n? 1 25 • SLEEP TIME . \n? 1 00 \n:z Z 75 \n? 50 \n25 \n0 \n1 9  23 3 7 I I  I S  \n20 \n? 1 5  \n? \ng 1 0  \n? u 5 \n0 \n1 9  23 3 7 1 1  1 5  \nCLOCK TIME \nFigure 30 \(A-Top & B - Bottom Person's  Normal \nShort-Term Circadian Rhythms from Telemetry for \nCreating a Baseline \n1 9  \n1 9  \nThe Sl ee p-Wake Cycl e : Circ a d i a n  M isa l i g n m e n t  \( eg, SWD nTh body natur.Uy wanb \nto be .u p .t 4 ? .. \n9 PU nFigure 3 1 .  An Example of the Gross Change to a \nPerson' s  Circadian Rhythm as Compared to Figure 30A nCaused from too much Adrenaline and Cortisol \nPreceding the Onset of Mental Illness YSI \nXVI. THE FACTORS FOR PREDICTING \nMENTALLY ILL AND FOR CURING MENTAL \nILLNESS \nUltradian rhythms also control hwnan movements sleep, \nattention span and alertness .  A continuum exists from the \nmolecular genetics, through the cellular and neuroendocrine \nto the behavioral and psychosocial levels. The ultradian \nrhythms have far-reaching consequences for our \nunderstanding of human physiological and mental health \nand disease. Some ultradian cycling of the body include \nhormonal release, heart rate, thermoregulation, urination, \nbowel activity nostril dilation and appetite. The last \ninvolves rhythmic release of Neuropeptide Y \(NPY nCorticotropin-releasing hormone \(CRR by recognizing the presence \nof changes to the circadian rhythms that are caused by the \nlack of the following items in a person's  life. Mental illness \ncan be cured by having the same factors prominent in a \nperson's life. The healing of the brain can be increased by \nthinking of the brain as a part of the physical body. When an \narm is broken, it is set in a cast, removed from use and \nallowed time to heal/recover. The injured brain a.k.a. \nmental illness the subconscious is providing \nwarnings as depression and major depression and learn \nthe behavior necessary 


to stop the progression to bi­\npolar and/or schizophrenia \n• Recognizing feelings and emotions as messages from \nthe subconscious mind to the conscious mind \n1 6  \n• Eliminate the threat\(s is/are \npresent. \n• Eliminate the presence of the harsh chemicals released \nby the FOFR from the body by ensuring a life style that \ndoes not require the FOFR to be utilized. \n• Eliminate the presence of all behavior that can be \nidentified as a threat by the FOFR \n• Allow the hypothalamus the time to heal from the ndamage caused by the presence of the harsh chemicals \nreleased by the FOFR \n• Develop a balanced lifestyle that includes :  \na members \nc including praying out load \(so that the \nears can be used to communicate with the \nsubconscious mind by the conscious mind s exercise including: \nj poultry, vegetables, \nfruits, nuts, simple and complex carbohydrates \nk Medications as prescribed by medical doctors \nm maintaining high self awareness \nn a person ' s self-protection system train the \nphysical body to protect itself. \n0 nINFORMATION NEEDED IN TELEMETRY TO \nPREDICT, PREVENT, TREAT AND CURE MENTAL \nILLNESS \nBefore being launched to space, the rate the biological \ninformation needed to develop a baseline is much higher \nthan after the person arrives in space. This is because the \ntime in preparation may be very low while the time in space \nmay be very long. If the preparation period will be less than \nseveral weeks then sampling frequency should be ncontinuous or as continuous as feasible . If the preparation \nperiod for launch will occur over many weeks then the \nsampling frequency can be reduced to once/hour. \nIn general, the shorter the preparation time for launch the \nhigher the data sampling frequency is required. Preferably, \nprelaunch activity biological diagnostic data should be \nrecorded continuously and the data available for merging \nwith launch and on-orbit data. After a person initially \narrives in space, the sampling frequency should be \ncontinuous or near continuous . After the person has been in \nspace for several weeks, the sampling frequency can be \nreduced to once/hour. If a person is in space for several \nmonths, the sampling frequency can be reduced to as little \nas once/6 hours . \nTable 2. The Sampling Rates for Biological Diagnostic \nData for Processing with Predictive Algorithms to \nPredict Mental Illness in a Predictive Medical Program. \nDuring During After 6 After 12 Launch Weeks in Weeks \nReadiness \nLaunch \nSpace in Space \nContinuous Continuous 1 1 \nor Near or Near S ample/ S ample/ Continuous Continuous \nData Data hour 6 hours \nIn the general, the more samples of data the better defmed \nthe baseline behavior will be and the easier deviations from \nthe baseline will be able to be identified using predictive \nalgorithms.  Table 2 defmes the telemetry measurement \nsamples per measurement needed to predict mental illness \nfrom each of the different phases that data is generated and \nmade available for processing for completing prognostic \nanalysis during space exploration. This infonnation will be \nused to create a baseline behavior for comparison with \nactual data to discriminate between nonnal and abnormal nbehavior. \nTable 3 is a list of biological diagnostic measurements to be \nincluded in CCSDS telemetry available for ground \npersonnel to complete a prognostic analysis used to predict \nmental illness would be occurring in the near future. In the \nevent that the presence of accelerated aging is identified, \nindicating that mental illness will occur, changes to the \nenvironment to the environment can be made to prevent \nmental illness from occurring. \nTable 3 includes 3 5  measurements are from the circadian \nand ultranian rhythms including the value for the least \nsignificant bit \(LSB into telemetry in the CCSDS format and the \nexpected extreme range that the measurement will need to \nmeasure across and not be exceeded. The LSB value is \nimportant because it defines the smallest increment n\(resolution e.g. knowledge the \nmeasurement. The measurement range is important to defme \nthe 5th or 6th degree polynomial used to convert the 8-bit \ndigital words in telemetry back to analog telemetry so the \ntelemetry processing and display system can accurately \ndisplay the biological and engineering diagnostic \ninformation to ground personnel for analysis. \n1 7  \nTable 3 .  Thirty-Five Environmental and Biological \nMeasurements for Prognostic Analysis to be used in a \nPrognostic Analysis to Predict Mental Illness Occurring \nin the Near Future \(?6 months Provided in \nCCSDS Telemetry Rate \nSystolic BP \(Wide rum Hg At least 0 .0 1 rum 50- 1 50 \(Narrow Wide rum Hg Narrow 


Range once/day \(bpm 1 95- 1 05 once/day \(0C Level once/day mcg/dl \nSubjective At least 1 .0 rum 0- 1 00 Alertness once/day \nDesired Liquid At least \n1 .0 ml 0-2 L Intake once/day \nDesired Solid Food At least 1 .0 g 0-5 kg Intake once/day \nRequired Solid At least 1 0 g 0-3 kg Food Intake once/day \nRequired Liquid At least 1 .0 g 0-2 L Intake once/day \nActual Liquid At least 1 .0 g 0-2 L Intake once/day \nActual Solid Food At least 1 .0 g 0-3 kg Intake once/day \nActual Liquid At least 1 .0 g 0-2 L Waste once/day \nActual Solid Waste At least 1 .0 g 0-3 kg once/day \nDuration of At least 5 min 0- 1 500 Sleep/Day once/day \nDuration of At least 5 min 0- 1 500 RestlDay once/day \nDuration of At least Recreational once/day 5 min 0- 1 500 Activities/day \nDuration of At least 5 min 0- 1 500 Work/Day once/day nBiological/ Sample Physiological Rate/Data LSB Measurements to Recording Value Range be Provided in \nCCSDS Telemetry Rate \nDuration of REM At least 1 min 0- 1200 Sleep once/day \nDuration of Non- At least 5 min 0- 1 500 REM Sleep once/day \nFrequency of At least 1 0-40 Urination once/day \nFrequency of At least \nI 0- 1 5 nEmptying Bowel once/day \nDuration Between At least 1 0- 1 500 Urination once/day \nDuration Between At least 1 0-6000 Emptying Bowel once/day \nUnsuccessful At least 1 0-25 Urinations once/day \nUnsuccessful At least 1 0-25 Emptying of Bowel once/day \nDuration of At least Desired Physical once/day 1 min 0-600 Activity/Day \nDuration of At least Required Physical once/day 1 min 0-600 Activity/Day \nDuration of At least 1 min 0-600 Physical Activity once/day \nDuration of No once/day 1 min 0-6000 Activity \nDuration of No once/day 1 min 0-6000 Required Activity \nXVIII. CONCLUSION \nA prognostic and health management \(PHM industry telemetry to collect, store and distribute \nto remote locations the biological, diagnostic information \nfor process for predicting mental illness using with \npredictive algorithms .  The predictive algorithms are often \nproprietary and must be developed for use with aerospace \ntelemetry to compensate for the many shortcomings and \ncomplexities of CCSDS telemetry to be accurate and \nreliable. Our proprietary predictive algorithms were \npioneered on the Air Force's GPS satellites and Atlas launch \nvehicles over 30 years ago. They have also been \nsuccessfully used on other military, NASA and commercial \nsatellites, launch vehicles and missiles to illustrate the \npresence of accelerated aging in normal appearing \nequipment telemetry from completely normal behaving \nequipment. \nA behavior of a person ' s  FOFR can explain the cause ntreatment and the cure for mental illness .  The chemicals \n1 8  \nreleased by the FOFR when activated were developed by the \nFOFR to be in the body an extremely short duration. \nToday's  lifestyle has forced people to remain in threatening \nsituations forcing the presence of the toxic chemicals used \nby the FOFR for self preservation to be present for many \nyears at varying levels. The chemicals released by the FOFR \nand release of chemicals that are created as a result of the \nrelease of adrenaline and cortisol cause accelerated aging on \nthe entire body including all areas of the brain. When the \nFOFR is damaged from accelerated aging, it forces the \nbrain 's  chemistry to be altered by changing the ratios of \nthree main chemicals very, causing mental illness .  All the \nmedications used in mental health treat only the symptoms \nof mental illness and do not cure it. \nThe identification of accelerated aging in biological, \ndiagnostic telemetry can be used by ground personnel to \npredict the mental illness in personnel to be used for deep \nspace missions. The model of the brain' s  FOFR subsystem \nprovides the information necessary for the ground crew to \npredict and thus prevent mental illness from occurring by \nmaking the changes to the person ' s  environment. The PHM \nuses information obtained from a variety of mission phases \nincluding pre-launch readiness, launch and during deep nspace travel to develop baseline behavior from which \nmental illness can predicted so it can be prevented nREFERENCES \n[ 1 ] .  U.S .  Human Spaceflight Plans Committee. 2009. \nSeeking a Human Spaceflight Program Worthy of a Great \nNation. \n[2] . Committee for the Decadal Survey on Biological and \nPhysical Sciences in Space, Space Studies Board, \nAeronautics and Space Engineering Board, Division on \nEngineering and Physical Sciences, National Research \nCouncil, of the National Academies, Recapturing a Future \nfor Space Exploration Life and Physical Sciences Research \nfor a New Era, National Academies Press, Washington D.C.  \nUSA, 20 1 1 located at www.nap.edu. \n[3 ] .  Stern, Y. 2009. Cognitive reserve. Neuropsychologia \n47\( 1 0 n[4] . Kanas, N.,  Sandal, G .M. ,  Boyd, J .E . ,  Gushin, V.I . ,  \nManzey, D. ,  North, R. , Leon, G.R Suedfeld, P . ,  Bishop, S . ,  \nFiedler, E.R., Inoue, N. ,  e t  al. 2009. Psychology and culture \nduring long-duration space missions. Acta Astronautica \n64 :659-677. \n[5] . Institute of Medicine . 200 1 .  Safe Passage: Astronaut \nCare for Exploration Missions. National Academy Press, \nWashington D.C.  \n[6] . "Advances In In-Vivo Imaging Of Serotonergic \nNeurons In Neuropsychiatric Disorders, "  Swen Hesse, \nDepartment of Nuclear Medicine, University Hospital, \nHenryk Barthel, University of Leipzig, Leipzig, Germany, \nJohannes Schwarz, Department of Neurology, University \nHospital, University of Leipzig, Leipzig, Germany, Osama \nSabri Department of Nuclear Medicine, University \nHospital, Ulrich Miiller, Departments of Experimental \nPsychology 


and Psychiatry, University of Cambridge, \nCambridge, United Kingdom, Neuroscience & Bio­\nbehavioral Reviews Volume 29, Issue 7 ,  2005, Page 1 1 19 .  \n[7] . NASA, Washington, D .C .  Available at \nhttp www.nasa.gov/pdf/396 1 1 7main _ HSF _ Cmte ]inalRe \nport.pdf. \n[8] . National Institute of Health National Institute of \nGeneral Medical Sciences at http ://www.nigms.nih.gov/ \nEducation/Factsheet_ CircadianRhythms.htm. \n[9] .Ultradian Rhythms found at \nhttp ://www.springer.comllife+scienceslbookl978- 1 4020-\n83 5 1 -8 .  \n[ 1 0] .  Packet Telemetry, CCSDS 1 02 .0-B-5, Blue Book, \nNovember 2000, CCSDS Secretariat, Program Integration \nDivision \(Code MT Washington, DC 20546, USA \n[ 1 1 ] .  www.newscientist.com/article/mg2 1 1283 1 1 800-a­\nbrief-history-of-the-brain.html?full=true. \n[ 12 ] .  Blackburn, Elisabeth, "Stress Makes You Age Faster," \nhttp ://www.thevisualmd.comihealth _ centers/wellness/mana \nge 30ur _ stress/stress _makes 30U _age_faster \n[ 1 3 ] .  Weber, Ellen, "The Brain on Cortisol," \nhttp ://www.brainleadersandlearners comlgeneral!the-brain­\non-cortisol!. \n[ 14 ] .  The Sleep-Wake Cycle at: \nhttp ://www.nuvigil comlhcp/efficacy _through_the _ day/wha \nUs_SWD.php \n[ 1 5] .  Losik, Len, "Upgrading the Space Flight Factory \nAcceptance Testing for Equipment and Space Vehicle \nDesign, Manufacture, Test and Integration," AIAA Space \n2009 Conference proceedings. \n[ 1 6] .  Losik, Len, "Predicting Hardware Failures and \nEstimating Remaining-Usable-Life from Telemetry," \nSanLen Publishing, Sacramento, CA, 2004, ISBN 978-0-\n976749 1 -9-6. \n 1 7] .  Losik, Len, Wahl, Sheila, Lewis, Owen, "Predicting \nHardware Failures and Estimating Remaining-Usable Life \nfrom Telemetry," Lockheed Martin Space Systems \nCompany, Proceedings from the International Telemetry nConference, Las Vegas, NV, October, 1 996 \n[ 1 8] .  Failure Analysis, "Data-Driven Predictive Algorithms nUsers Guide," V2 .25, Failure Analysis, Capitola CA. \n\( 1 9] .  Circadian Rhythm Laboratory, "Rhythmiccity of the \nHuman Body Vital Signs  at www.auuuu.com. \n[2 1 ]  Losik, Len, "GPS Quarterly Orbital Report," Air Force \nGPS Program Office, CDRL Item AOOA, Air Force \nContract No. F0470 1 -C-0527. \nAUTHOR BIO \nDr. Losik is the President and Chief Technical Officer of \nFailure Analysis and an award winning spacecraft designer, \nwinning awards from Boeing and the u. s.  the Air Force for \nhis technical contributions and leadership that led to the \nfunding of the GPS program by the DoD while he was the \nBoeing GPS Space & Ground Segment Manager. Dr. Losik \n1 9  \nhas over 3 0  years experience in \nthe design, manufacture and \ntest of military, NASA and \ncommercial satellites ground \nstations, missiles and launch \nvehicles as an RF and digital \ndesign engineer, systems \nengineer Engineering \nManager and Director at \ncompanies such as Boeing, Lockheed Martin, British \nAerospace, United Technologies, LORAL and L3 \nCommunications. \nDr. Losik pioneered the use of predictive algorithms to \nmeasure satellite and launch vehicle equipment remaining \nusable life on the Boeing/Air Force 's GPS satellites and nGeneral Dynamics Atlas E/F launch vehicles beginning in \n1980. Dr. Losik also led the integration of the space-based \nIONDS nuclear detonation detection subsystem and the \nGPS L3 UHF crosslink link system into the GPS Block 1 \nqualification vehicle that launched in 1983 and the Boeing \nBlock 2 satellites. \nDr. Losik continued to use predictive algorithms \nsuccessfully on NASA, military and commercial satellites, \nmissiles and launch vehicles to predict spacecraft \nequipment failures. Dr. Losik published the results of his nresearch into the source of the information he used to \npredict equipment failures and published the results of his \nresearch in 2 books and over 25 technical papers at a wide \nvariety of technical conferences. \nAs the NASA/NOAA GOES Next Spacecraft Manager, he \nwas responsible for the design, manufacture and test of 1 0 nNASA/NOAA GOES Next 3-axis stabilized, geostationary \nweather satellites and he completed a prognostic analysis \non the first GOES Next satellite. As the Air Force Titan 34D \nand Boeing IUS solid rocket motor test manager at United \nTechnologies, where he led the 5 to 7 segment upgrade on \nthe Titan 3 SRM. \nAs the Program Manager on the NASA EUVE low earth \norbiting space science program at U. C. Berkeley, Space \nSciences Laboratory, Dr. Losik completed the first \nprognostic analysis on a NASA satellite in 1996. The results \nwere published in conjunction with Lockheed Martin \nengineers from the Advanced Development Center located \nin Sunnyvale CA. \nAs a spacecraft TC&RlTT&C/C&DH subsystem engineer, \nDr. Losik led the design of the first commercial, \ngeostationary C, Ku and Ka-Band communications satellite \ndesigned to have their subsystem equipment usable life \nmeasured prior to launch using predictive algorithms to \nidentifY the equipment that was going to fail prematurely \nearning a commendation from lNTELSAT. He also designed \nthe first commercial Ku-band TC&R subsystem, and led the \ndesign and launch of the first Mil Std 1 750A \nmicroprocessor-based central and distributed satellite \ncommand and control system using a 1553B data bus and \nADA software. \nMost recently, Dr. Losik worked at Force Computers in San \nJose CA. and embedded predicted algorithms in ntelecommunications industry NEBS and ETSl, public \ntelephone switching network \(PTSN ncompanies such as Verizon, A T&T and Alcatel-Lucent to \nmeet industry-wide 99. 999% availability requirement 


nDr. Losik has 30 years experience working with the \nsubconscious as a martial arts instructor whose objective is \nto increase the student 's reaction time of the conscious to \nthat of the fight-or-flight response and eliminating the \nrelease of cortisol and adrenaline by the student 's fight-or \nflight-response. He has also authored several books on \nmeditation, eastern thought, Lao Tzu including the Tao Te \nChing and Confucius nDr. Losik also participates in and supports the National \nAlliance on Mental Illness \(HAMl Depression and \nBi-Polar Support Alliance \(DBSA to expand \nservices and help individuals learn about living with a \nvariety of mental illnesses. Dr. Losik has helped to establish \nNAMI and DBSA self-help groups in Sacramento, Salinas \nand Santa Cruz CA. that offer access to information related \nto mental illness that is usually not available from treating \nphysicians and institutions. \n20 \n 


specified temperature limits. The surface blanket would minimize the temperature variation of the surface, and electric heaters would provide makeup thermal energy  Risk  The thermal subsystem design is a low to moderate risk element, as the hardware used has extensive flight experience. Although this system would be on the surface of the Moon, the environment would be space-like, with the  Figure 6  ALGEP avionics block diagram showing the power and command and data handing  interface. This is a low-power design to enable data collection during lunar night at the remote units. The hub  contains the same avionics package but does not interface with an instrument  13 exception of the infrared heating of the lunar surface therefore the space qualified thermal control hardware could provide thermal control for this mission  Command and Data Handling Subsystem Design Requirements  The ALGEP controller is designed to meet the six year mission lifetime requirement stemming from the science objectives flowing down to the mission requirements and has a technology cutoff of 2016 \(assumes a 2020 launch interface to the science instrument and the UHF radio.  The controller for the hub interfaces to the UHF and S-band radios. Each type of controller would be single string  Design Assumptions  All selected electronic parts for the controller have a path to flight hardware with a technology cutoff of 2016. There would be one ALGEP hub that has a bi-directional S-band link to Earth and a UHF receiver link to the remote instrument units. There would be four ALGEP remote units that have UHF transmitters to link to the ALGEP hub. The controllers would have an operating temperature range: -20  C to 35  C. The total ionizing dose of radiation would be 2 krads for the mission  Description of the Design  Both controller designs would incorporate low-powered Field Programmable Gate Arrays FPGAs devices and I/O drivers.  Portions of the existing MultiMission System Architecture Platform \(MSAP Engineering Unit \(REU IP provide the mission clock and alarm clock logic.  Both the hub and remote unit controllers would capture engineering data regarding temperatures, currents and voltages. Figure 6 provides an overview of the command and data handling and power subsystem architectures.  The remote units would be supplied with 2 Gb of memory and the hub would have 5 Gb of memory  Design Rationale  A low-powered avionics architecture would be achieved by developing a stand-alone controller capable of operating at various power levels. In the lowest power configuration only the mission clock and alarm clock logic would be active. Other logic, analog and I/O functions would be power strobed in the off mode during this very low-power mode. Science and engineering data would be stored in non-volatile memory elements that retain their data in the power-off mode  Risk  The controller requires engineering development to obtain the low-powered mode required for night operation However, it has been designed to incorporate components with flight heritage. A lower frequency oscillator would be used to reduce power  Telecom Subsystem 


Design Requirements  The telecom subsystem is designed to return 3.4 Gb of stored data every 16 days during lunar night in addition to 1.2 Gb of additional data collected each 24 hour period during daylight. This translates into a minimum direct-to-Earth return data rate of ~50 kbps for an 8 hour pass each Earth day for 16 days of sunlight. The subsystem must operate down to a temperature of -20  C and survive non-operational temperature of -50  C. The telecom subsystem would support two-way communications between the hub and the DSN network. It would also support two-way communications between the hub and each of the remote instrument packages on the surface. There would be a minimum 3 dB margin for the direct-to-Earth DTE  Design Assumptions  The telecom subsystem is assumed to be a single string design. The hub would have an S-band radio and antenna for two-way communications with a DSN 34 m ground station. The nominal downlink rate would be 120 kbps and the uplink rate would be 2 kbps. The surface links would be at UHF. The forward link data rate would be 8 kbps and the return rate would be 256 kbps. The maximum range for the surface links would be 100 m. All of the surface links would have line-of-sight between the units. It is assumed that the astronauts would point the Sband antenna towards Earth, within 5  of the center of Earth. This should be relatively easy to do as 5  is a very loose pointing requirement and the uplink/downlink would be marginally affected if the pointing is off by a little more than 5  A signal could be added which would use an uplink from the Earth to give a relative signal power to ensure the pointing requirement is met  Description of the Design  The telecom subsystem would use a commercial off-the-shelf S-band transponder \(L3 CXS-610 has a 5 W power amplifier and an S-band diplexer included This radio is used on GRAIL and a similar unit was used on Genesis. The diplexer would be connected to an S-band low gain antenna \(LGA be a 2-element S-band patch array with a boresight gain of 9 dB. It would be mounted on the end of one solar array on the hub and gimbaled to allow the astronaut to point it to the Earth  The hub communicates with each of the remote instrument units in UHF using a new UHF micro-transceiver. Each UHF microtransceiver would have a radio frequency output power of 50 mW. The UHF transceiver would use a halfduplex system meaning it would transmit and then listen However, it cannot do both at the same time. The UHF links would use a simple UHF monopole antenna, similar to the antennas flown on MER, and mounted on the top of the hub and remote units. The hub could only communicate with one remote unit at a time. Figure 7 shows the hub and remote unit telecom block diagrams  The S-Band telemetry link has a margin of 7.0 dB for a telemetry rate of 120 kbps into a 34 m beam waveguide ground station. The data rate could be increased to reduce 14 playback time. The surface link would have a margin exceeding 20 dB for a return data rate of 256 kbps. This includes a multipath loss allotment of 20 dB. The margin would be large because the range would be so small and all of the links would be line of sight  Design Rationale  Where available, the design of this subsystem uses heritage hardware. The UHF microtransceiver is a radio that is under development for the Mars program. It would be designed for low mass, low 


Mars program. It would be designed for low mass, lowpower and low temperature operation. The S-band antenna would be a smaller, simpler version of the antenna that flew on Deep Impact. Other antenna options would be available The UHF antennas have been flown on previous Mars lander/rover missions. There would be other alternatives for the S-band antenna and the UHF transceiver on the hub could use a larger power amplifier to talk to an orbiting asset as a backup to the S-band radio  Risk  The highest risk items for telecom would be the single string design for each element and six year design lifetime. However, the S-band radio has flight heritage. The UHF radios would be a new design but do not require new technology. They would be an engineering development 8. SYSTEM SUMMARY Mass Equipment List Table 5 shows a summary of the mass and power for each of the subsystems for the remote instrument units. The mass of one remote unit without the specified instrument is 26.6 kg with contingency specified at the subsystem level based on heritage. Table 6 shows a summary of mass and power by subsystem for the hub. The mass of the hub with contingency is 44.9 kg. Table 7 shows a mass summary for the entire package with appropriate contingencies added per the JPL  s Flight Project Practices and Design Principles Design Principles. The package totals 218.2 kg which includes four remote units, five instruments, one hub, and the carrier container\(s Table 5. Mass and power summary for remote units Remote Unit Mass CBE Contingency Total Power Power 14.3 kg 30% 18.5 kg 0.180 W 2 W Night /Day Thermal 2.0 kg 29% 2.5 kg 0 W Telecom UHF 0.2 24% 0.3 kg 2 W 40 W CDS 0.7 kg 30% 0.9 kg 1 W \(1/60th per hour 3 W Structure 3.4 kg 30% 4.4 kg 0 W Total x 1 unit 20.6 kg 29% 26.6 kg Diplexer S-Band Downconverter STDN command data to S/C CDS Pr oc es so r S-Band Exciter 9 dBi S-Band LGA UHF Downconverter Small UHF transceiver command data to S/C CDS 


to S/C CDS Pr oc es so r UHF PA UHF Monopole Command data to C&amp;DH Command dat  to C&amp;DH  Figure 7  Telecom block diagram for the S-band \(top bottom  units would be located on the hub while the remote units only contain a UHF system 15 9. OPERATIONAL SCENARIOS Daytime Operations During the day, the remote units and hub would be fully operational. The remote units would collect data from their instruments as specified by the science team and store it in the controller memory. Table 8 shows the data volume expected from each instrument. After 24 hours have passed the UHF telecom system on the hub is used to poll each of the remote units separately at the designated interval for the stored data. The hub then transmits the data direct-to-Earth using the S-band radio. This requires a maximum of eight hours at 50 kbps each day using the DSN 34 m antennas However, data rates as high as 120 kbps may be achieved reducing the downlink time. The hub has enough memory margin to accumulate data from all the instruments for three Earth days before it must downlink the data Nighttime Operations During nighttime operations, data collection at the remote units would be taking place. The magnetometer and seismometer collect data continuously. However, the seismometer operates at a reduced mode where the sampling rate is reduced to one-half of the daytime rate which has been deemed more than adequate by the science team. The remaining instruments collect data at various intervals that would be conducive to the science team  s current requirements. Telecom events would not be scheduled during the lunar night. The data accumulates in the controller memory over 16 Earth days \(~14 days at an equatorial location would be considered a worse case so two days have been added to be conservative data volume summary for each instrument during a 16 Earth day lunar night. When the sun comes up and the hub and remote units have sufficient power to run the telecom systems the hub polls each remote unit separately at a designated interval similar to operations during the day. The data would then be transmitted to Earth gradually over the next few days using the S-band radio Table 7. Mass summary for total package Unit Mass Contingency Mass + contingency 4 Remote Units 82.4 kg 29% 106.4 kg Hub 35.2 kg 27% 44.9 kg Instruments including cabling 17.3 kg 30% 22.5 kg Carrier Container\(s Total with heritage contingency 153.1 kg 29% 197.5 kg  System contingency  21.4 kg 14 Total Package  43% 218.9 kg Table 8. Instrument data volumes received at the hub over one Earth day in daylight operations Science Instrument Compressed Data Volume Received at Hub 


Volume Received at Hub Mb Seismometer 236 Magnetometer 58 Heat Flow Probe 2 Seismic Sounder 700 Instrument &amp; Hub Engineering Data 6 Total 1002 Hub Memory 5000 Margin 80  Table 6. Mass and power summary for hub Hub/Base Unit Mass CBE Contingency Total Power Power 14.3 kg 30% 18.5 kg 0.180 W 2 W Night /Day Thermal 13.4 kg 28% 17.2 kg 0 W Telecom UHF Telecom S-band 3.4 15% 3.9 kg 2 W 40 W CDS 0.7 kg 30% 0.9 kg 1 W \(1/60th per hour W \(day Structure 3.4 kg 30% 4.4 kg 0 W Total x 1 unit 35.2 kg 27% 44.9 kg 2.38 W avg at night  16 10. SUMMARY AND CONCLUSIONS The ALGEP modular design builds upon lessons learned from Apollo era ALSEP package and technology advances since that time. ALGEP meets the requirements of long lifetime survival while maintaining continuous operation of its instruments during the lunar night which can last up to 16 days at equatorial regions on the Moon. The package would be powered using solar arrays and batteries alone not requiring nuclear sources to supply power or maintain thermal control. This concept is feasible due to its lowpower operational mode at night The modular design and packaging scheme provides flexibility in deployment across all regions of the Moon including the farside pending the availability of an orbital communications asset. The relatively light ALGEP package could be accommodated on astronaut activity support vehicles, providing a method to distribute the packages across the Moon, ultimately gaining a Moon-wide understanding of lunar geophysical properties ACKNOWLEDGEMENTS This work was supported by the NASA Lunar Sortie Science Opportunities Program The work described in this publication was carried out at the Jet Propulsion Laboratory, California Institute of Technology under a contract with the National Aeronautics and Space Administration References herein to any specific commercial product process or service by trade name, trademark, manufacturer 


or otherwise does not constitute or imply its endorsement by the United States Government or the Jet Propulsion Laboratory, California Institute of Technology REFERENCES 1] NRC  Scientific Context for Exploration of the Moon   Washington D.C.: The Nat. Academies Press, 2007 2] Apollo 11 Prelim. Sci. Rept., NASA SP-214, 1969 3] Apollo 12 Prelim. Sci. Rept., NASA SP-235, 1970 4] Apollo 14 Prelim. Sci. Rept., NASA SP-272, 1971 5] Apollo 15 Prelim. Sci. Rept., NASA SP-289, 1972 6] Apollo 16 Prelim. Sci. Rept., NASA SP-315, 1972 7] Apollo 17 Prelim. Sci. Rept., NASA SP-330, 1973 8] ALSEP Termination Report, NASA RP-1036, 1979 9] NRC  New Frontiers in the Solar System: an Integrated Exploration Strategy  Decadal Survey D.C.: The Nat. Academies Press, 2003 10] International Lunar Network Science Definition Team Final Report, 2009 BIOGRAPHY Melissa Jones is a member of the technical staff in the Planetary and Lunar Mission Concepts Group at the Jet Propulsion Laboratory.  Current work includes development of small Lunar lander concepts and instrument packages to deploy on the Moon,  Report Manager for the Titan Saturn System Mission Outer Planets Flagship Mission study, and staffing various concept studies as a systems engineer on Team X, JPL  s mission design team.  Melissa graduated from Loras College with a B.S. in Chemistry and a Ph.D. in Space and Planetary Science from the University of Arkansas  Linda Herrell has a BA in math/computer science/languages \(University of Texas fluids and heat transfer \(City College of New York addition to analytical work in computer science and thermal and structural analysis, she has worked as both a payload \(instrument Earth orbiting \(Hubble Space Telescope, Earth Observing System \(EOS Cassini as Proposal Manager for several NASA science missions She currently serves as the Program Architect for NASA's New Millennium Program    Table 9. Instrument data volumes generated at the hub after 16 Earth day lunar night Science Instrument Compressed Data Volume Received at Hub Mb Seismometer 1980 Magnetometer 920 Heat Flow Probe 5 Seismic Sounder 0 Instrument &amp; Hub Engineering Data 72 Total 2977 Hub Memory 5000 Margin 40  17 Bruce Banerdt has been a research geophysicist at the California Institute of Technology's Jet Propulsion Laboratory since 1977, where he does research in planetary geophysics and instrument development for flight projects. He has been on science teams for numerous planetary missions 


on science teams for numerous planetary missions including Magellan, Mars Observer, Mars Global Surveyor and Rosetta. He was the US Project Scientist for the international Mars NetLander mission, for which he was also principal investigator of the Short-Period Seismometer experiment, and is currently the Project Scientist for the Mars Exploration Rovers. He led the Geophysics and Planetary Geology group at JPL from 1993-2005, and is the JPL Discipline Program Manager for Planetary Geosciences. He has held several visiting appointments at the Institut de Physique du Globe de Paris. He has a BS in physics and a PhD in geophysics from the University of Southern California  David Hansen is a member of the technical staff in the Communications Systems and Operations Group at the Jet Propulsion Laboratory. Current work includes the development of the telecom subsystem for the Juno project. David received a B.S. in Electrical Engineering from Cornell University and an M.S. in Electrical Engineering from Stanford University  Robert Miyake is a member of the technical staff in the Mission and Technology Development Group at the Jet Propulsion Laboratory. Current work includes the development of thermal control subsystems for interplanetary flagship missions to Jupiter and Saturn missions to Mars and the Earth Moon, and is the lead Thermal Chair for the Advanced Project Design Team Robert graduated with a B. S. from San Jose State University, with extensive graduate studies at UCLA University of Washington, and University of Santa Clara  Steve Kondos is a consultant to the Structures and Mechanisms group at the Jet Propulsion Laboratory. He currently is generating the mechanical concepts for small Lunar Landers and Lunar Science Instrument packages in support of various Lunar mission initiatives. He also provides conceptual design, mass and cost estimating support for various Team X studies as the lead for the Mechanical Subsystem Chair. Steve is also involved with various other studies and proposals and provides mentoring to several young mechanical and system engineers. He graduated with a B.S. in Mechanical Engineering from the University of California, Davis and has 28 years of experience in the aerospace field ranging from detail part design to system of systems architecture development. He has worked both in industry and in government in defense, intelligence commercial and civil activities that range from ocean and land based systems to airborne and space systems. Steve has received various NASA, Air Force, Department of Defense and other agency awards for his work on such projects as the NASA Solar Array Flight Experiment, Talon Gold, MILSTAR, Iridium, SBIRS, Mars Exploration Rovers ATFLIR, Glory Aerosol Polarimeter System and several Restricted Programs  Paul Timmerman is a senior member of technical staff in the Power Systems Group at the Jet Propulsion Laboratory Twenty-five years of experience in spacecraft design including 22 at JPL, over 250 studies in Team-X, and numerous proposals. Current assignments include a wide variety of planetary mission concepts, covering all targets within the solar system and all mission classes. Paul graduated from Loras College with a B.S. in Chemistry in 1983  Vincent Randolph is a senior engineer in the Advanced Computer Systems and 


the Advanced Computer Systems and Technologies Group at the Jet Propulsion Laboratory. Current work includes generating Command and Data Handling Subsystem conceptual designs for various proposals and Team X.  He also supports Articulation Control and Electronics design activities for the Advanced Mirror Development project. Vincent graduated from the University of California at Berkeley with a B.S. in Electrical Engineering 18  pre></body></html 


i models into time and covariate dependent dynamic counterparts  ii models and reliability analysis in a more realistic manner  iii level  whether or not functional components \(loyal generals diagnose correctly and take proper actions such as fault mask of failed components \(traitors asymmetric  iv survivability analysis. Evolutionary game modeling can derive sustainable or survivable strategies \(mapped from the ESS in EGT such as node failures such as security compromise level modeling in the so-called three-layer survivability analysis developed in Ma \(2008a this article  v offer an integrated architecture that unite reliability survivability, and fault tolerance, and the modeling approaches with survival analysis and evolutionary game theory implement this architecture. Finally, the dynamic hybrid fault models, when utilized to describe the survival of players in EGT, enhance the EGT's flexibility and power in modeling the survival and behaviors of the game players which should also be applicable to other problem domains where EGT is applicable  5. OPERATIONAL LEVEL MODELING AND DECISION-MAKING  5.1. Highlights of the Tactical and Strategic Levels  Let's first summarize what are obtainable at both tactical and strategic levels. The results at both tactical and strategic levels are precisely obtainable either via analytic or simulation optimization. With the term precisely, we mean that there is no need to assign subjective probabilities to UUUR events. This is possible because we try to assess the consequences of UUUR events \(tactical level ESS strategies \(strategic level time prediction of survivability. The following is a list of specific points. I use an assumed Wireless Sensor Network WSN  i of UUUR events: \(a actions which can be treated as censored events; \(b Cont' of Box 4.2 It can be shown that the replicator differential equations are equivalent to the classical population dynamics models such as Logistic differential equation and LotkaVolterra equation \(e.g., Kot 2001 Logistic equation, or the limited per capital growth rate is similar to the change rate of the fitness  xfxfi which can be represented with the hazard function or survivor functions introduced in the previous section on survival analysis.  This essentially connects the previous survival analysis modeling for lifetime and reliability with the EGT modeling. However, EGT provides additional modeling power beyond population dynamics or survival analysis approaches introduced in the previous section. The introduction of evolutionary theory makes the games played by a population evolvable. In other words, each player \(individual 


other words, each player \(individual agent and players interact with each other to evolve an optimized system Box 4.3. Additional Comments on DHF Models  The above introduced EGT models are very general given they are the system of ordinary differential equations. Furthermore, the choice of fitness function f\(x complexity to the differential equation system.  The system can easily be turned into system of nonlinear differential equations. The analytical solution to the models may be unobtainable when nonlinear differential equations are involved and simulation and/or numerical computation are often required  In the EGT modeling, Byzantine generals are the game players, and hybrid fault models are conveniently expressed as the strategies of players; the players may have different failure or communication behaviors Furthermore, players can be further divided into groups or subpopulations to formulate more complex network organizations. In the EGT modeling, reliability can be represented as the payoff \(fitness, the native term in EGT of the game. Because reliability function can be replaced by survivor function, survival analysis is seamlessly integrated into the EGT modeling. That is, let Byzantine generals play evolutionary games and their fitness reliability function  The evolutionary stable strategy \(ESS counterpart of Nash equilibrium in traditional games ESS corresponds to sustainable strategies, which are resistant to both internal mutations \(such as turning into treason generals or nodes such as security compromises represent survivable strategies and survivability in survivability analysis. Therefore, dynamic hybrid fault models, after the extension with EGT modeling, can be used to study both reliability and survivability 13 risks such as competing risks which can be described with CRA; \(c captured with the shard frailty.  We believe that these UUUR events are sufficiently general to capture the major factors/events in reliability, security and survivability whose occurrence probabilities are hard or impossible to obtain  Instead of trying to obtain the probabilities for these events which are infeasible in most occasions, we focus on analyzing the consequences of the events.  With survival analysis, it is possible to analyze the effects of these types of events on survivor functions. In addition, spatial frailty modeling can be utilized to capture the heterogeneity of risks in space, or the spatial distribution of risks \(Ma 2008a d UUUR events introduced previously. These approaches and models that deal with the effects of UUUR events form the core of tactical level modeling  To take advantage of the tactical level modeling approaches it is obviously necessary to stick to the survivor functions or hazard functions models. In other words, survival analysis can deal with UUUR events and offer every features reliability function provides, but reliability function cannot deal with UUUR events although survivor function and reliability function have the exactly same mathematical definition. This is the junction that survival analysis plays critical role in survivability analysis at tactical level. However, we 


recognize that it is infeasible to get a simple metric for survivability similar to reliability with tactical level modeling alone. Actually, up to this point, we are still vague for the measurement of survivability or a metric for survivability. We have not answered the question: what is our metric for survivability? We think that a precise or rigorous definition of survivability at tactical level is not feasible, due to the same reason we cited previously  the inability to determine the probabilities of UUUR events However, we consider it is very helpful to define a work definition for survivability at the tactical level  We therefore define the survivability at tactical level as a metric, Su\(t t function or reliability function with UUUR events considered. In the framework of three-layer survivability analysis, this metric is what we mean with the term survivability. The "metric" per se is not the focus of the three-layer survivability analysis. It is not very informative without the supports from the next two levels  strategic and operational models.  However, it is obvious that this metric sets a foundation to incorporate UUUR effects in the modeling at the next two levels  Due to the inadequacy of tactical level modeling, we proposed the next level approach  strategic level modeling for survivability. As expected, the tactical level is one foundation of strategic level modeling ii objectives: \(a affect survivability which survival analysis alone is not adequate to deal with; \(b survivability at tactical level is necessary but not sufficient for modeling survivability, we need to define what is meant with the term survivability at strategic level  With regard to \(a behaviors or modes which have very different consequences. These failure behaviors can be captured with hybrid fault models. However, the existing hybrid fault models in fault tolerance field are not adequate for applying to survivability analysis. There are two issues involved: one is the lack of real time notion in the constraints for hybrid fault models \(e.g., N&gt;3m+1 for Byzantine Generals problem synthesize the models after the real-time notions are introduced. The solution we proposed for the first issue is the dynamic hybrid fault models, which integrate survivor functions with traditional hybrid fault models. The solution we proposed for the second issue is the introduction of EGT modeling  With regard to \(b modeling our problem at strategic level, EGT modeling is essentially a powerful optimization algorithm.  One of the most important results from EGT modeling is the so-called evolutionary stable strategies \(ESS We map the ESS in EGT to survivable strategies in survivability analysis.   Therefore, at the strategic level, our work definition for survivability refers to the survivable strategies or sustainable strategies in the native term of EGT, which can be quantified with ESS  In addition to integrating dynamic hybrid fault models another advantage for introducing EGT modeling at strategic level is the flexibility for incorporating other node behaviors \(such as cooperative vs. non-cooperative those behaviors specified in standard hybrid fault models, as well as anthropocentric factors such as costs constraints  Without UUUR events, both tactical and strategic level 


Without UUUR events, both tactical and strategic level models default to regular reliability models. This implies that, in the absence of UUUR events, reliable strategies are sustainable or survivable.  This also implies that three-layer survivability analysis defaults to reliability analysis however, the three-layer approach does offer some significant advantages over traditional reliability analysis, as discussed in previous sections. Nevertheless, when UUUR events exist, reliable strategies and survivable strategies are different. This necessitates the next operational level modeling  5.2. Operational Level Modeling and Decision-Making  When UUUR events are involved, we cannot make real time predictions of survivability at tactical and strategic levels This implies that the implementations of survivable 14 strategies need additional measures that we develop in this section.  Box 5.1 explains the ideas involved with possibly the simplest example  Figure 4 is a diagram showing a simplified relationship between action threshold survivability \(TS survivability \(ES view since both TS and ES are multidimensional and dynamic in practice. Therefore, the sole purpose of the diagram is to illustrate the major concepts discussed above The blue curve is the survivability when survivable strategies specified by ESS are implemented at some point before time s.  The system is then guaranteed to hold survivability above ES. In contrary, if no ESS implemented before time s, then the system quickly falls below to the survivable level at around 40 time units  T i m e 0 1 0 2 0 3 0 4 0 5 0 6 0 7 0 8 0 9 0 1 0 0 Su rv iv ab ili ty M et ric S u t 0 . 0 0 . 1 0 . 2 0 . 3 0 . 4 0 . 5 0 . 6 0 . 7 0 . 8 0 . 9 1 . 0 E S S  i s  I m p lm e n t e d N o  E S S  is  I m p lm e n t e d ts E S T S  Figure 4. A Diagram Showing the Relationship Between TS and ES, as well as timing of s and t, with s &lt; t  6. SUMMARY  The previous sections discussed the major building blocks 


The previous sections discussed the major building blocks for the new life-system inspired PHM architecture. This section first identifies a few minor aspects that have not been discussed explicitly but are necessary for the implementation of the architecture, and then we summarize the major building blocks in a diagram  6.1. Missing Components and Links  Optimization Objectives  Lifetime, reliability, fault tolerance, and survivability, especially the latter two, are application dependent. Generally, the optimization of reliability and survivability are consistent; in that maximization of reliability also implies maximization of survivability. However, when application detail is considered, optimization of lifetime is not necessarily consistent with the optimization of reliability. Consider the case of the monitoring sensor network as an example. The network reliability is also dependent on connectivity coverage, etc, besides network lifetime. What may be further complicated is the time factor. All of the network metrics are time-dependent. A paradoxical situation between lifetime and reliability could be that nodes never 'sleep                                                   


          Box 5.1 Operational Level Modeling  Assuming that the ESS solution for a monitoring sensor network can be expressed with the following simple algebraic conditions: survivability metric at tactical level SU = 0.7, Router-Nodes in the WSN &gt; 10%, Selfish Nodes &lt; 40%. Even with this extremely simplified scenario, the ESS strategies cannot be implemented because we do not know when the actions should be taken to warrant a sustainable system.  These conditions lack a correlation with real time  The inability to implement ESS is rooted in our inability to assign definite probabilities to UUUR events, which implies that we cannot predict when something sufficiently bad will jeopardize the system survivability What we need at the operational level is a scheme to ensure ESS strategy is in place in advance  The fundamental idea we use to implement the ESS strategy is to hedge against the UUUR events. The similar idea has been used in financial engineering and also in integrated pest management in entomology. This can be implemented with the following scheme  Let us define a pair of survivability metrics: one is the expected survivability \(ES threshold survivability or simply threshold survivability \(TS ES is equivalent to the survivability metric at tactical level. ES corresponds to ESS at strategic level, but they are not equivalent since ESS is strategy and ES is survivability. TS is the survivability metric value \(at tactical level and TS can be obtained from strategic level models. For example, TS = SU\(s t condition for the implementation of ESS. In other words, the implementation of strategies that ensures TS at time s will guarantee the future ES level at time t.  To make the implementation more reliable and convenient multiple dynamic TSs can be computed at time s1, s2 sk, with si &lt; t for all i.  These TS at times s1, s2, ..., sk should be monitored by some evaluation systems  Unlike tactical and strategic levels, the operational level modeling is approximate. The term "approximate means that we cannot predict the real time survivability or we do not know the exact time an action should be taken. Instead, the action is triggered when the monitored survivability metric SU\(r survivability \(TS scheme of TS and ES, we ensure the ES by taking preventative actions \(prescribed by ESS and triggered by the TS consequences of UUUR events  Figure 4 is a diagram showing the above concepts and the decision-making process involved 15 This wakefulness \(never 'sleep short period but at the expense of network lifetime. Of course, when the network is running out of lifetime, network reliability ultimately crashes. This example reminds us that 


reliability ultimately crashes. This example reminds us that multi-objective optimization should be the norm rather than exception  Constraints and Extensions  Many application specific factors and constraints are ignored in this article. For example, we mentioned about spatial heterogeneity of environment, but never present a mathematical description The spatial heterogeneity can be modeled with the so-called spatial frailty in multivariate survival analysis \(Ma 2008a  Evolutionary Algorithm  Evolutionary game modeling when implemented in simulation, can be conveniently implemented with an algorithm similar to Genetic Algorithms \(GA ESS in the evolutionary game model with simulation is very similar to GA. Dynamic populations, in which population size varies from generation to generation \(Ma &amp; Krings 2008f of node failures. Another issue to be addressed is the synchronous vs. asynchronous updating when topology is considered in the simulation. This update scheme can have profound influences on the results of the simulation. Results from cellular automata computing should be very useful for getting insights on the update issue  6.2. Summary and Perspective  To recapture the major points of the article, let us revisit Figure 3, which summarizes the principal modules of the proposed life-system inspired PHM architecture. The main inspiration from life systems is the notion of individuals and their assemblage, the population. Population is an emergent entity at the next level and it has emergent properties which we are often more concerned with. Survival analysis, which has become a de facto standard in biomedicine, is particularly suitable for modeling population, although it is equally appropriate at individual level. Therefore, survival analysis \(including competing risks analysis and multivariate survival analysis comprehensively in the context of PHM in a series of four papers presented at IEEE AeroSpace 2008 \(Ma &amp; Krings 2008a, b, c, &amp; d proposed architecture. Survival analysis constitutes the major mathematical tools for analyzing lifetime and reliability, and also forms the tactical level of the three-layer survivability analysis  Besides lifetime and reliability, two other major modules in Figure 3 are fault tolerance and survivability. To integrate fault tolerance into the PHM system, Dynamic Hybrid Fault DHF 2008e, Ma 2008a make real-time prediction of reliability more realistic and make real-time prediction of fault tolerance level possible DHF models also unite lifetime, reliability and fault tolerance under a unified modeling framework that consists of survival analysis and evolutionary game theory modeling  DHG models also form the partial foundation, or strategic level, for the three-layer survivability analysis. At the strategic level, the Evolutionary Stable Strategies \(ESS which is mapped to survivable or sustainable strategies, can be obtained from the evolutionary game theory based DHF models. When there is not any UUUR event involved reliability and survivability are consistent, and reliable strategies are survivable. In this case, the strategic level modeling up to this point is sufficient for the whole PHM system modeling, and there is no need for the next level  operational level modeling  When there are UUUR events in a PHM system, the 


When there are UUUR events in a PHM system, the inability to determine the occurrence probabilities of UUUR events makes the operational level modeling necessary Then the principle of hedging must be utilized to deal with the "hanging" uncertainty from UUUR events. In this case reliability strategies are not necessarily survivable strategies At the operational level modeling, a duo of survivability metrics, expected survivability \(ES survivability \(TS the survivable strategies \(ESS level are promptly implemented based on the decisionmaking rules specified with the duo of survivability metrics then the PHM system should be able to endure the consequences of potentially catastrophic UUUR events. Of course, to endure such catastrophic events, the cost may be prohibitively high, but the PHM system will, at least, warn decision-makers for the potentially huge costs.  It might be cheap to just let it fail  Figure 3 also shows several other modules, such as security safety, application systems \(such as Automatic Logistics CBM+, RCM, Life cycle cost management, Real-time warning and alert systems architectures, but we do not discuss in this paper. Generally the new architecture should be fully compatible with existing ones in incorporating these additional modules. One point we stressed is that PHM system can be an ideal place to enforce security policies. Enforcing security policies can be mandatory for PHM systems that demand high security and safety such as weapon systems or nuclear plant facilities.  This is because maintenance, even without human-initiated security breaches, can break the security policies if the maintenance is not planned and performed properly  In perspective, although I did not discuss software issues in this paper, the introduced approaches and models should provide sufficient tools for modeling software reliability and survivability with some additional extension. Given the critical importance of software to modern PHM systems, we present the following discussion on the potential extension to software domain. Specifically, two points should be noted: \(1 architecture to software should be a metric which can 16 replace the time notion in software reliability; I suggest that the Kolmogorov complexity \(e.g., Li and Vitanyi 1997 be a promising candidate \(Ma 2008a change is because software does not wear and calendar time for software reliability usually does not make much sense 2 software reliability modeling.  Extending to general survivability analysis is not a problem either. In this article I implicitly assume that reliability and survivability are positively correlated, or reliability is the foundation of survivability. This positive correlation does not have to be the case. A simplified example that illustrates this point is the 'limit order' in online stock trading, in which limit order can be used in either direction: that stock price is rising or falling.  The solution to allow negative or uncorrelated relationships between reliability and survivability are very straightforward, and the solutions are already identified in previous discussions. Specifically, multiple G-functions and multi-stage G-functions by Vincent and Brown \(2005 very feasible solution, because lifetime, reliability and survivability may simply be represented with multiple Gfunctions. Another potential solution is the accommodation of the potential conflicts between reliability and survivability with multi-objective GA algorithms, which I previously suggested to be used as updating algorithms in the optimization of evolutionary games  


 The integration of dynamic hybrid fault models with evolutionary game modeling allows one to incorporate more realistic and detailed failure \(or survival individual players in an evolutionary game. This is because dynamic hybrid fault models are supported by survival analysis modeling, e.g., time and covariate dependent hazard or survivor functions for individual players. If necessary, more complex survival analysis modeling including competing risks analysis and multivariate survival analysis, can be introduced.  Therefore, any field to which evolutionary game theory is applicable may benefit from the increased flexibility in modeling individual players.  Two particularly interesting fields are system biology and ecological modeling.  In the former field, dynamic hybrid fault models may find important applications in the study of biological networks \(such as gene, molecular, and cell networks 2008g conjecture that explains the redundancy in the universal genetic code with Byzantine general algorithm. In addition they conducted a comparative analysis of bio-robustness with engineering fault tolerance, for example, the strong similarity between network survivability and ecological stability \(Ma &amp; Krings 2008g survivability analysis can be applied for the study of survivals or extinctions of biological species under global climate changes \(Ma 2008b  In this paper, I have to ignore much of the details related to the implementation issues to present the overall architecture and major approaches clearly and concisely. To deal with the potential devils in the implementation details, a well funded research and development team is necessary to take advantages of the ideas presented here. On the positive side I do see the great potential to build an enterprise PHM software product if there is sufficient resource to complete the implementation. Given the enormous complexity associated with the PHM practice in modern engineering fields, it is nearly impossible to realize or even demonstrate the benefits of the architecture without the software implementation. The critical importance of PHM to mission critical engineering fields such as aerospace engineering, in turn, dictates the great value of such kind software product  6.3. Beyond PHM  Finally, I would like to raise two questions that may be interested in by researchers and engineers beyond PHM community. The first question is: what can PHM offer to other engineering disciplines? The second question is: what kinds of engineering fields benefit most from PHM? Here, I use the term PHM with the definition proposed by IEEE which is quoted in the introduction section of the paper  As to the first question, I suggest software engineering and survivability analysis are two fields where PHM can play significant roles. With software engineering, I refer to applying PHM principles and approaches for dealing with software reliability, quality assurance, and even software process management, rather than building PHM software mentioned in the previous subsection. For survivability analysis, borrowing the procedures and practices of PHM should be particularly helpful for expanding its role beyond its originating domain \(network systems that control critical national infrastructures is a strong advocate for the expansion of survivability analysis to PHM. Therefore, the interaction between PHM and survivability analysis should be bidirectional. Indeed, I see the close relationships between PHM, software engineering, and survivability as well-justified because they all share some critical issues including reliability survivability, security, and dependability  


 The answer to the second question is much more elusive and I cannot present a full answer without comparative analysis of several engineering fields where PHM has been actively practiced. Of course, it is obvious that fields which demand mission critical reliability and dependability also demand better PHM solutions. One additional observation I would like to make is that PHM seems to play more crucial roles for engineering practices that depend on the systematic records of 'historical' data, such as reliability data in airplane engine manufacturing, rather than on the information from ad hoc events.  This may explain the critical importance of PHM in aerospace engineering particularly in commercial airplane design and manufacturing.  For example, comparing the tasks to design and build a space shuttle vs. to design and manufacture commercial jumbo jets, PHM should be more critical in the latter task  17    Figure 2. States of a monitoring sensor node and its failure modes \(after Ma &amp; Krings 2008e     Figure 3. Core Modules and their Relationships of the Life System Inspired PHM Architecture    REFERENCES  Adamides, E. D., Y. A. Stamboulis, A. G. Varelis. 2004 Model-Based Assessment of Military Aircraft Engine Maintenance Systems Model-Based Assessment of Military Aircraft Engine Maintenance Systems. Journal of the Operational Research Society, Vol. 55, No. 9:957-967  Anderson, R. 2001. Security Engineering. Wiley  Anderson, R. 2008. Security Engineering. 2nd ed. Wiley  Bird, J. W., Hess, A. 2007.   Propulsion System Prognostics R&amp;D Through the Technical Cooperation Program Aerospace Conference, 2007 IEEE, 3-10 March 2007, 8pp  Bock, J. R., Brotherton, T., W., Gass, D. 2005. Ontogenetic reasoning system for autonomic logistics. Aerospace Conference, 2005 IEEE 5-12 March 2005.Digital Object Identifier 10.1109/AERO.2005.1559677  Brotherton, T., P. Grabill, D. Wroblewski, R. Friend, B Sotomayer, and J. Berry. 2002. A Testbed for Data Fusion for Engine Diagnostics and Prognostics. Proceedings of the 2002 IEEE Aerospace Conference  Brotherton, T.; Grabill, P.; Friend, R.; Sotomayer, B.; Berry J. 2003. A testbed for data fusion for helicopter diagnostics and prognostics. Aerospace Conference, 2003. Proceedings 2003 IEEE  Brown, E. R., N. N. McCollom, E-E. Moore, A. Hess. 2007 Prognostics and Health Management A Data-Driven Approach to Supporting the F-35 Lightning II. 2007 IEEE AeroSpace Conference  Byington, C.S.; Watson, M.J.; Bharadwaj, S.P. 2008 Automated Health Management for Gas Turbine Engine Accessory System Components. Aerospace Conference 2008 IEEE, DOI:10.1109/AERO.2008.4526610 


2008 IEEE, DOI:10.1109/AERO.2008.4526610 Environment Covariates &amp; Spatial Frailty Applications: AL; Life Cycle Mgmt; Real-Time Alerts CBM+, RCM, TLCSM; Secret Sharing and Shared Control 18 Chen, Y. Q., S. Cheng. 2005. Semi-parametric regression analysis of mean residual life with censored survival data Biometrika \(2005  29  Commenges, D. 1999. Multi-state models in Epidemiology Lifetime Data Analysis. 5:315-327  Cook, J. 2004. Contrasting Approaches to the Validation of Helicopter HUMS  A Military User  s Perspective Aerospace Conference, 2004 IEEE  Cook, J. 2007. Reducing Military Helicopter Maintenance Through Prognostics. Aerospace Conference, 2007 IEEE Digital Object Identifier 10.1109/AERO.2007.352830  Cox, D. R. 1972. Regression models and life tables.  J. R Stat. Soc. Ser. B. 34:184-220  Crowder, M. J.  2001. Classical Competing Risks. Chapman amp; Hall. 200pp  David, H. A. &amp; M. L. Moeschberger. 1978. The theory of competing risks. Macmillan Publishing, 103pp  Ellison, E., L. Linger, and M. Longstaff. 1997.  Survivable Network Systems: An Emerging Discipline, Carnegie Mellon, SEI, Technical Report CMU/SEI-97-TR-013  Hanski, I. 1999. Metapopulation Ecology. Oxford University Press  Hallam, T. G. and S. A. Levin. 1986. Mathematical Ecology. Biomathematics. Volume 17. Springer. 457pp  Hess, A., Fila, L. 2002.  The Joint Strike Fighter \(JSF concept: Potential impact on aging aircraft problems Aerospace Conference Proceedings, 2002. IEEE. Digital Object Identifier: 10.1109/AERO.2002.1036144  Hess, A., Calvello, G., T. Dabney. 2004. PHM a Key Enabler for the JSF Autonomic Logistics Support Concept. Aerospace Conference Proceedings, 2004. IEEE  Hofbauer, J. and K. Sigmund. 1998. Evolutionary Games and Population Dynamics. Cambridge University Press 323pp  Hougaard, P. 2000. Analysis of Multivariate Survival Data Springer. 560pp  Huzurbazar, A. V. 2006. Flow-graph model for multi-state time-to-event data. Wiley InterScience  Ibrahim, J. G., M. H. Chen and D. Sinha. 2005. Bayesian Survival Analysis. Springer. 481pp  Kacprzynski, G. J., Roemer, M. J., Hess, A. J. 2002. Health management system design: Development, simulation and cost/benefit optimization. IEEE Aerospace Conference Proceedings, 2002. DOI:10.1109/AERO.2002.1036148  Kalbfleisch, J. D., and R. L. Prentice, 2002. The Statistical Analysis of Failure Time Data. Wiley-InterScience, 2nd ed  Kalgren, P. W., Byington, C. S.   Roemer, M. J.  2006 Defining PHM, A Lexical Evolution of Maintenance and Logistics. Systems Readiness Technology Conference 


Logistics. Systems Readiness Technology Conference IEEE. DOI: 10.1109/AUTEST.2006.283685  Keller, K.; Baldwin, A.; Ofsthun, S.; Swearingen, K.; Vian J.; Wilmering, T.; Williams, Z. 2007. Health Management Engineering Environment and Open Integration Platform Aerospace Conference, 2007 IEEE, Digital Object Identifier 10.1109/AERO.2007.352919  Keller, K.; Sheahan, J.; Roach, J.; Casey, L.; Davis, G Flynn, F.; Perkinson, J.; Prestero, M. 2008. Power Conversion Prognostic Controller Implementation for Aeronautical Motor Drives. Aerospace Conference, 2008 IEEE. DOI:10.1109/AERO.2008.4526630  Klein, J. P. and M. L. Moeschberger. 2003. Survival analysis techniques for censored and truncated data Springer  Kingsland, S. E. 1995. Modeling Nature: Episodes in the History of Population Ecology. 2nd ed., University of Chicago Press, 315pp  Kot, M. 2001. Elements of Mathematical Ecology Cambridge University Press. 453pp  Krings, A. W. and Z. S. Ma. 2006. Fault-Models in Wireless Communication: Towards Survivable Ad Hoc Networks Military Communications Conference, 23-25 October, 7 pages, 2006  Lamport, L., R. Shostak and M. Pease. 1982. The Byzantine Generals Problem. ACM Transactions on Programming Languages and Systems, 4\(3  Lawless, J. F. 2003. Statistical models and methods for lifetime data. John Wiley &amp; Sons. 2nd ed  Line, J. K., Iyer, A. 2007. Electronic Prognostics Through Advanced Modeling Techniques. Aerospace Conference 2007 IEEE. DOI:10.1109/AERO.2007.352906  Lisnianski, A., Levitin, G. 2003. Multi-State System Reliability: Assessment, Optimization and Applications World Scientific  Liu, Y., and K. S. Trivedi. 2006. Survivability Quantification: The Analytical Modeling Approach, Int. J of Performability Engineering, Vol. 2, No 1, pp. 29-44  19 Luchinsky, D.G.; Osipov, V.V.; Smelyanskiy, V.N Timucin, D.A.; Uckun, S. 2008. Model Based IVHM System for the Solid Rocket Booster. Aerospace Conference, 2008 IEEE.DOI:10.1109/AERO.2008.4526644  Lynch, N. 1997. Distributed Algorithms. Morgan Kaufmann Press  Ma, Z. S. 1997. Demography and survival analysis of Russian wheat aphid. Ph.D. dissertation, Univ. of Idaho 306pp  Ma, Z. S. 2008a. New Approaches to Reliability and Survivability with Survival Analysis, Dynamic Hybrid Fault Models, and Evolutionary  Game Theory. Ph.D. dissertation Univ. of Idaho. 177pp  Ma, Z. S. 2008b. Survivability Analysis of Biological Species under Global Climate Changes: A New Distributed and Agent-based Simulation Architecture with Survival Analysis and Evolutionary Game Theory. The Sixth 


International Conference on Ecological Informatics. Dec 25, 2008. Cancun, Mexico  Ma, Z. S. and E. J. Bechinski. 2008. A Survival-Analysis based  Simulation Model for Russian Wheat Aphid Population Dynamics. Ecological Modeling, 216\(2 332  Ma, Z. S. and A. W. Krings. 2008a.  Survival Analysis Approach to Reliability Analysis and Prognostics and Health Management \(PHM  AIAA AeroSpace Conference, March 1-8, 2008, Big Sky, MT, 20pp  Ma, Z. S. and A. W. Krings. 2008b. Competing Risks Analysis of Reliability, Survivability, and Prognostics and Health Management \(PHM  AIAA AeroSpace Conference, March 1-8, 2008.  Big Sky, MT. 20pp  Ma, Z. S. and A. W. Krings. 2008c. Multivariate Survival Analysis \(I Dependence Modeling", Proc. IEEE  AIAA AeroSpace Conference, March 1-8, 2008, Big Sky, MT. 21pp  Ma, Z. S. and A. W. Krings., R. E. Hiromoto. 2008d Multivariate Survival Analysis \(II State Models in Biomedicine and Engineering Reliability IEEE International Conference of Biomedical Engineering and Informatics, BMEI 2008.  6 Pages  Ma, Z. S. and A. W. Krings. 2008e. Dynamic Hybrid Fault Models and their Applications to Wireless Sensor Networks WSNs Modeling, Analysis and Simulation of Wireless and Mobile Systems. \(ACM MSWiM 2008 Vancouver, Canada  Ma, Z. S. &amp; A. W. Krings. 2008f. Dynamic Populations in Genetic Algorithms. SIGAPP, the 23rd Annual ACM Symposium on Applied Computing, Ceara, Brazil, March 16-20, 2008. 5 Pages  Ma, Z. S. &amp; A. W. Krings. 2008g. Bio-Robustness and Fault Tolerance: A New Perspective on Reliable, Survivable and Evolvable Network Systems, Proc. IEEE  AIAA AeroSpace Conference, March 1-8, Big Sky, MT, 2008. 20 Pages  Ma, Z. S.  and A. W. Krings. 2009. Insect Sensory Systems Inspired Computing and Communications.  Ad Hoc Networks 7\(4  MacConnell, J.H. 2008. Structural Health Management and Structural Design: An Unbridgeable Gap? 2008 IEEE Aerospace Conference, DOI:10.1109/AERO.2008.4526613  MacConnell, J.H. 2007. ISHM &amp; Design: A review of the benefits of the ideal ISHM system. Aerospace Conference 2007 IEEE. DOI:10.1109/AERO.2007.352834  Marshall A. W., I. Olkin. 1967. A Multivariate Exponential Distribution. Journal of the American Statistical Association, 62\(317 Mar., 1967  Martinussen, T. and T. H. Scheike. 2006. Dynamic Regression Models for Survival Data. Springer. 466pp  Mazzuchi, T. A., R. Soyer., and R. V. Spring. 1989. The proportional hazards model in reliability. IEEE Proceedings of Annual Reliability and Maintainability Symposium pp.252-256  Millar, R.C., Mazzuchi, T.A. &amp; Sarkani, S., 2007. A Survey of Advanced Methods for Analysis and Modeling of 


of Advanced Methods for Analysis and Modeling of Propulsion System", GT2007-27218, ASME Turbo Expo 2007, May 14-17, Montreal, Canada  Millar, Richard C., "Non-parametric Analysis of a Complex Propulsion System Data Base", Ph.D. Dissertation, George Washington University, June 2007  Millar, R. C. 2007. A Systems Engineering Approach to PHM for Military Aircraft Propulsion Systems. Aerospace Conference, 2007 IEEE. DOI:10.1109/AERO.2007.352840  Millar, R. C. 2008.  The Role of Reliability Data Bases in Deploying CBM+, RCM and PHM with TLCSM Aerospace Conference, 2008 IEEE, 1-8 March 2008. Digital Object Identifier: 10.1109/AERO.2008.4526633  Nowak, M. 2006. Evolutionary Dynamics: Exploring the Equations of Life. Harvard University Press. 363pp  Oakes, D. &amp; Dasu, T. 1990. A note on residual life Biometrika 77, 409  10  Pintilie, M. 2006. Competing Risks: A Practical Perspective.  Wiley. 224pp  20 Smith, M. J., C. S. Byington. 2006. Layered Classification for Improved Diagnostic Isolation in Drivetrain Components. 2006 IEEE AeroSpace Conference  Therneau, T. and P. Grambsch. 2000. Modeling Survival Data: Extending the Cox Model. Springer  Vincent, T. L. and J. L. Brown. 2005. Evolutionary Game Theory, Natural Selection and Darwinian Dynamics Cambridge University Press. 382pp  Wang. J., T. Yu, W. Wang. 2008. Research on Prognostic Health Management \(PHM on Flight Data. 2008 Int. Conf. on Condition Monitoring and Diagnosis, Beijing, China, April 21-24, 2008. 5pp  Zhang, S., R. Kang, X. He, and M. G. Pecht. 2008. China  s Efforts in Prognostics and Health Management. IEEE Trans. on Components and Packaging Technologies 31\(2             BIOGRAPHY  Zhanshan \(Sam scientist and earned the terminal degrees in both fields in 1997 and 2008, respectively. He has published more than 60 peer-refereed journal and conference papers, among which approximately 40 are journal papers and more than a third are in computer science.  Prior to his recent return to academia, he worked as senior network/software engineers in semiconductor and software industry. His current research interests include: reliability, dependability and fault tolerance of distributed and software systems behavioral and cognitive ecology inspired pervasive and 


behavioral and cognitive ecology inspired pervasive and resilient computing; evolutionary &amp; rendezvous search games; evolutionary computation &amp; machine learning bioinformatics &amp; ecoinformatics                 pre></body></html 


