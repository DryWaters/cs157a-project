Cloud computing offers computational resources such as processing networking and storage to customers However the cloud also brings with it security concerns which affect both cloud consumers and providers The Cloud Security Alliance CSA deìne the security concerns as the seven main threats This paper investigates how threat number one malicious 
Abstract 
Logging Solutions to Mitigate Risks Associated With Threats in Infrastructure as a Service Cloud Winai Wongthai 
School of Computing Science Newcastle University UK Email winai.wongthai f.e.liberal-rocha and aad.vanmoorsel@ncl.ac.uk 
 Francisco Rocha  Aad van Moorsel 
002 002 002 002 
activities performed in consumers virtual machines/VMs can affect the security of both consumers and providers It proposes logging solutions to mitigate risks associated with this threat We systematically design and implement a prototype of the proposed logging solutions in an IaaS to record the history of customer VMês les The proposed system can be modiìed in order to record VMs process behaviour log les These log les can assist in identifying malicious activities spamming performed in the VMs as an example of how the proposed solutions beneìts the provider side The proposed system can record the log les while having a smaller trusted computing base compared to previous work Thus the logging solutions in this paper can assist in mitigating risks associated with the CSA threats to beneìt 
consumers and providers 
I I NTRODUCTION The cloud is attractive to many organizations because of its exibility and beneìt of reducing IT costs It can potentially transform the IT industry in a wide variety of application areas and is the future of computing as argued by many people 3 4 point out that Infrastructure as a service IaaS provides a base on which to build Platform as a Service PaaS or Software as a Service SaaS offerings It is increasingly used in many areas e.g in medical experiments 6 7 Ho we v er  trust of consumers in a cloud is one of the main barriers for its continued proliferation 
Keywords cloud monitoring logging system accountability 
 
Customers want to know how the cloud operate their data e.g who has access to it and when it was accessed as argued by 9 10 11 The Cloud Security Alliance CSA has published top threats to cloud computing report that relates to the security issues This document is used in this paper to provide the basic threats which this paper aims to mitigate risks associated with these threats Research usually discusses the security in the cloud from customer perspectives However the CSA publish Top Threats Cloud Computing Survey 2012 which includes both cloud consumers 53 and providers 30 as the respondents The survey is a good example that research should consider the threats to cloud from both customer and provider perspectives Thus our study discusses mitigating the CSA threats for 
both parties Many researchers 1 14 9 8 ar gue that a logging system is a signiìcant aspect in any accountability solutions to mitigate risks associated with the threats in the cloud A logging system composes of logging processes and log les A logging process focuses on logging-related tasks and log les store contents produced by these processes However works that propose log les for accountability  14 9 8 do not clearly focus on the security of both customers and providers Additionally they do not clearly discuss how the log les contents could be and how the contents can mitigate the risks associated with threats to beneìt both customers and providers in detail This paper concerns the importance of customers critical 
les which is les in customers virtual machines/VMs disks and is valuable assets for their businesses such as databases les full detail in Section II-C It also aims to provide logging solutions to beneìt both customers and providers In our previous work we already summarized all se v en threats from CSA report Thus this paper focuses on and describes only threat 1 abuse and nefarious use of cloud computing as an example of the cloud issues we tend to provide the logging solutions to deal with Forms of this threat can be malicious customers use their VMs to attack other customers VM or attack the providerês hosting system/dom0 which hosts all customer VMs or spam activities in the VMs There are two types of log les in the cloud as discussed in 11 
le-centric logs 
and  The rst is tracing les from the time they are created to the time they are deleted as discussed in 10 The later is the hardware layer logs such as memory use disk storage temperature voltage etc as argued by It also can be e v ent logs user account activity logs processor usage etc as argued by Ho we v er  we focus on the le-centric logs This is because current research of logging in the cloud only focuses on the system-centric logs which is usually disclosed to consumers as argued by Although 11 17 consider lecentric logs in their work which can beneìt customers they do not make clear how the logs beneìt providers Thus this 
system-centric logs 
paper proposes solution regarding the le-centric logs and to beneìt both customer and provider sides 
 First this paper provides an in-depth analysis of how CSA threat 1 affects both customer and provider security concerns simultaneously The analysis differs from previous work e.g 8 which concerning security only from either customer or provider perspectives The value of the analysis is to provide a basis for what contents that logging solutions need to collect as evidence to deal with the threat To beneìt both customers and providers the knowledge of the log le contents facilitate provision of the appropriate logging solutions to deal with the right problems 
Summary of Contributions 
2013 International Conference on Cloud Computing and Big Data 978-1-4799-2829-3/13 $26.00 © 2013 IEEE DOI 10.1109/CLOUDCOM-ASIA.2013.70 163 
2013 International Conference on Cloud Computing and Big Data 978-1-4799-2830-9/14 $31.00 © 2014 IEEE DOI 10.1109/CLOUDCOM-ASIA.2013.70 163 


Thus this paper then proposes appropriate logging solutions to produce the le-centric logs above which assist in mitigating risks associated with the threat to beneìt both sides Second regarding the le-centric logs and to beneìt both customer and provider sides this paper designs and implements a prototype of the proposed logging solutions It then discusses how the result from the prototype implementation can be used to form log les to be used as evidence to mitigate risks associated with threat 1 Third the proposed system can be an alternative approach to collect le-centric logs as evidence to enhance accountability in IaaS by customerês VM memory introspection approach from the providerês hosting system This approach yields smaller trusted computing base compared to placing interceptors in the VMs as in previous work 17 W ork by 18 19 can yield the same TCB as our proposed system However they are not designed to achieve history of critical les e.g information of who accesses these les full detail in Section IV-A1 and the process behaviour log les e.g information of which le this process reading Section IV-B1 as demonstrated in this paper The design of the architecture is based on a generic logging template our previous work which can be used to perform a systematic analysis of logging system security also achieves recording VMês malicious process behaviours However it does not concern the history of critical les as done by this paper We also use the template to clarify the layout of signiìcant related components in IaaS such as the providerês hosting system/dom0 a VM logging processes log les and the critical les The template facilitates to systematically design and implement the proposed logging system and to compare the proposed system to previous work in term of TCB We use Xen to replicate IaaS cloud architecture for the prototype implementation of the proposed logging system It is currently a virtualization layer of many cloud providers e.g Amazon Elastic Compute Cloud or EC2 as ar gued by 21 The rst contrib ution is simultaneous analysis of how threat 1 affects both customer and provider and the proposed logging solutions For the analysis we investigate how customer VMs can attack other customer VMs and attack dom0 in detail We observe exactly literature underestimates the risks to the provider Thus we carefully analyse vulnerabilities of the providerês dom0 which may lead to compromising dom0 itself then all the customer VMs hosted by this dom0 For the proposed solutions we then indicate how important of customers critical les in VMs and discuss the concepts of history of critical les and process behaviour log les Then we discuss the content of both types of log les and discuss how these log les can assist in mitigating risks associated with threat 1 to beneìt both customer and provider sides To achieve the second contribution which is the design implementation and discussion of a prototype of the proposed solutions we describe the proposed logging system architecture to obtain the history of critical les based on the template Then we explain the prototype implementation and discuss how the result from the impartation can mitigate the risks associated with threat 1 To achieve the last contribution which is the proposed system can be an alternative technique that yields smaller trusted computing base compared to previous work based on the related components of logging systems from the template we discuss how the proposed system can Fig 1 The IaaS architecture from Fig 2 The overall view of a generic logging template from its IaaS components white boxes and logging components shaded colour logging process P1-4 and log les F1-4 achieve the log les we needs while yielding smaller TCB compared to previous work 17 18 19 In this paper Section II provides the background Section III discusses how threat 1 affects both customer and provider The proposed solutions and their prototype implementation are discussed in Section IV V respectively The result and how to obtain it are in Section VI Section VII discusses how the result assist in mitigating the risks associated with threat 1 and compares our proposed system with previous work Section VIII is the conclusions II B ACKGROUND This IaaS architecture is based on the Xen system The provider side can be an organization that offers VMs to the customer side The customer side can rent the VMs and remotely access them via the Internet In Figure 1 hw is short for hardware It is a machine that works as a host of a hypervisor and all guest operating systems OSes A hypervisor is software that enables the machine to run more than one guest OSes in parallel Dom0 is a privileged domain guest OS that is launched by the hypervisor during system boot It directly accesses the hw and manages domUs A domU is an unprivileged domain guest OS that runs on top of the hypervisor It is a VM and an example of an IaaS cloud product that the providers offer to customers to purchase Our previous work pro vide this template W e use it throughout this paper to facilitate in understating the layout of logging system components in IaaS In the template Figure 2 
A IaaS Architecture B A Generic Logging Template for IaaS Cloud 
164 
164 


IaaS components include hw0 hypervisor hwU dom0 domU app0 appU disk0 diskU mem0 and memU The rst four components were already discussed in Section II-A Hw0 is the same as hw in Figure 1 0 indicates that it is managed and owned by a provider AppU and app0 are applications that runs inside domU and dom0 respectively Disk0 is a physical disk of the hw0 and diskU is a virtual disk of a domU Mem0 is a main memory of the hw0 and memU is a virtual main memory of domU P1-P4 are logging processes that perform logging-related tasks F1-F4 are log les that are used for storing contents produced by the logging processes This paper deìnes  It would be very serious for any company if its business adversaries can access its critical les e.g business database les Figure 3 sho ws the location of a critical le called f in diskU within the template Critical les can be created inside domUs or may be uploaded via the Internet by customers from their local machines to diskUs in the cloud For EC2 customers upload les to domUs to run their systems for example in medical experiments 6 7 In 5 in order to more quickly nd new drugs to heal new diseases a computer intensive scientiìc experiment can be conducted in EC2 After EC2 domUs launched all essential software the input les and executable C program les are transferred to the diskUs Thus all these les in diskUs are critical from the point of view of the owner of these domUs Figure 3 shows the location of a critical le called f in diskU Thus one can clarify all components logging components IaaS components and this critical le in one view This view assists us to analyse and nd solutions to mitigate risks associated with CSA threats regarding both providers and customers In Figure 3 the dot-arrow line virtually shows that Alice Fig 3 Illustration of a location of a critical le f in diskU the domU owner accesses her critical le f using the appU However forms of threat 1 such as customer VMs attacker others VMs fully discussed in Section III may allow attackers to control this appU and use it to access the le maliciously III T HREAT 1 AFFECTS A C USTOMER AND P ROVIDER Some forms of attacks enclosed in threat 1 e.g criminals use domUs to attack other domUs or dom0 can be critical This is because they can eventually cause CSA threat 5 data loss or leakage which may occur in domUs This threat has been ranked as top in order of severity by the recent CSA reports 22 CSA state that the se v erity of this threat can be a devastating impact on the damage to oneês business brand and reputations or loss of core intellectual property Thus we provide an in-depth analysis of the impact threat 1 can have on both customers and providers simultaneously  demonstrate ho w to use a domU to extract the private keys of another domU in an Xen-Cloud environment e.g EC2 CSA also argue that domUs can host malicious software that has proven especially effective in compromising critical private resources in cloud environments Although the y did not mention that the critical private resource is belong to whom it may have belonged to customers Especially also ar gue that a b usiness competitor of a victim domU can use a malicious domU to attack the victim domU Then the competitor may be able to read private data or compromise the victim domU Thus domU attacks domU can cause a serious effect on cloud customers such as malicious access to loss or leakage of threat 5 the customers critical les e.g database les Virtualization vulnerabilities in Windows 2008 the hypervisor allow domU running under the hypervisor to crash the Windows 2008 host dom0 Thus a domU can control dom0 and exploit the other domUs hosted on the same physical machine After dom0 is compromised attack ers can get control on the entire domUs Thus the y may obtain root accounts of these domUs log into them access the domUs critical les see Figure 3 and as discussed in Section II-C above If these les are the customers business databases this can be a very serious incident ar gue that as dom0 can transparently read and write the memory content of the domU using the management interface thus if dom0 is compromised by attackers they may use this interface to steal the valuable information from any domU It is also argued by that dom0 can access all data in diskUs This can be a serious security concern from the point of view of the customers Again it can be crucial when dom0 is compromised because then all domUs could be at risks 26 states that domUs can attack the dom0 that hosts them state that this is because of a difìculty in clarifying the borders between a dom0 and domUs in the same physical machine with virtualization infrastructure Thus these unclear borders can be one of the attack channels Another channel can be vulnerabilities in dom0 An example can be holes in the management consoles of dom0 that allow attackers to gain the root privileged in this dom0 as argued by Moreo v er  after dom0 is compromised it can be used by attackers to monitor domUs eavesdrop of communications between domU and dom0 take control of all domUs and inject malware into domU images 
C Customers Critical Files in DomUs A Effects on A Customer due to Threat 1 1 DomU attacks domU 2 DomU attacks dom0 and uses this dom0 to attack other domUs B Effects on Provider due to Threat 1 1 Criminals can use domUs to attack provider dom0 
critical les as les in diskUs that are owned by customers domUês owners These les can be any le type such as text executable or database les They are the customers asset and valuable for their businesses Thus the customers do not want anyone to access these les apart from themselves and their authenticated users and do not want loss or leakage of the les 
165 
165 


2 A number of criminals in providers cloud infrastructure can affect providers business reputation A History of Critical Files to Mitigate Risks Associated with Threat 1 for Both Sides 1 What is the history of critical les 2 The history of critical les to mitigate risks associated with threat to beneìt the customers 3 How the history of critical les helps providers to deal with dom0 compromising  B Process Behaviour Log Files to Assist in Mitigating Risks Associated with Threat 1 to Beneìt the Provider 1 What is a process behaviour log les cat addr.txt 
There are many forms of attacks enclosed in threat 1 such as all the incidents caused by threat 1 discussed in Section III-A It seems that theses incidents affect only customer security concerns However these incidents can also affect provider security concerns for example allowing attackers to control dom0 and use it to compromise all domUs Then attackers especially the competitors of the victim domUs may access lose or leak customers critical les threat 5 Others forms of attacks enclosed in threat 1 also can be domUs that host spamming activities or downloads for illegal software Thus if the customers know that a lot of criminals or all mentioned forms of attacks enclosed in threat 1 are inside the providerês cloud infrastructure this can impact on the providers The impacts can be losing the providerês business reputations which can be important for customers when deciding to buy cloud products or these attacks can be an indicator of vulnerabilities in the provider infrastructure Then the customers may not want to buy or rent the product from this provider IV P ROPOSED L OGGING S OLUTIONS TO M ITIGATE R ISKS A SSOCIATED W ITH T HREAT 1 TO BENEFIT BOTH SIDES As discussed in the compromising of both domUs or dom0 in Section III either domUs or dom0 compromising may have the result of undesired access to or loss or leakage of customers critical les Thus we propose to have a history of each of these critical les This paper applies work by PASSXen and HP TrustCloud to form the deìnition of the history of a critical le PASSXen is a system that can collect the information on the creation access and destruction of a le in the domU TrustCloud is a framework to deal with the lack of trust in the cloud It has le-centric information on domUs that is obtained by tracing domUs data and les since they were created until deleted Thus  This paper discusses only some information of the periods accessed as discussed below If a critical le f is s.txt in Figure 3 the content of history of s.txt as a log le can be Table I In the table f nm is the name of critical le e.g s.txt p id e.g 4624 and p nm e.g read is the id and name of the process that accesses this le respectively and p ownId e.g 1002 Alice Id is the id of the owner of this process Sections V and VI discuss how to obtain this information The content of the table can be more complex to provide more precise evidence which will be discussed in the discussion Section VII Discussion f nm p id p nm p ownId s.txt 4624 read 1002\(alice s.txt 4800 read It would be useful if we had a history of each of domUês critical les to assist in indicating for example who has access to these les and which appU accesses them The history information can enhance accountability in the cloud and customers conìdence For example for threat 1 when Alice domU is compromised by attackers then they may control appU to access her critical le f s.txt as shown in Figure 3 discussed in Section III-A The history of f the information such as which appU accesses s.txt when and by whom this appU belonged to can be used to clarify this undesired malicious incident by the attackers History of critical les could assist in analysing attacker behaviours inside domUs To analyse attacker behaviours Alice can check row 2 column 4 in Table I and may discover that someone else Bob accesses her critical le s.txt The content of the table can be more complex to provide more precise evidence which will be discussed in Section VII In Table I when one discovers that Bob has accessed Aliceês critical le s.txt this can be a trigger for the providers to be aware that their dom0 may be compromised To identify malicious Bob accurately they can conduct further investigation for example by pinpointing Bobês Id p ownId column 4 the appU name p nm column 1 he used to access s.txt or s.txt le name Then they can gather more necessary evidence For example this can be achieved by recording Bobês appU behaviours as done in a case study of or monitoring this appU/domU for malicious network trafìc as done in Thus the history of critical les can be of beneìt the provider This paper uses Linux processes as an example of processes in a domU and uses a process and command interchangeably Actually an appU in the template becomes one or more processes/commands This paper assumes that each appU becomes only one process The provenance collection in PASSXen also has the creation access and destruction of processes in domUs However this paper brieîy discusses  For example command   is when a cat concatenate command in Linux is accessing the text le Table II can be an example of a cat process behaviour log le The content of the log of the cat can be the name of the process p nm cat the id of the process p id 4000 the 
the history of a critical le in this paper is the information on the le since it was created until permanently deleted Precisely it is records of three periods of a critical leês life time created accessed and destroyed a process behaviour log le as a record of some of the processês activities such as the process name and id a le name of a le that this process has access to and the owner id of the process 
TABLE I T HE CONTENT OF THE HISTORY OF CRITICAL FILE F  S  TXT  ADAPTED FROM  In the case of some incidents happening in domUs that have negative effects on customers or providers the history of critical les can be used as evidence to clarify what happened with these domUs This evidence can be a clue to discover what is going on inside the domUs that contain the critical les Section IV-A2 IV-A3 VII-A VII-B discuss how to discover the causes of the incidents Consequently the evidence should mitigate risks associated with threat 1 e.g criminal domUs As a result this should mitigate causes of negative impact on both customer and provider companies such as brand damage as discussed in Section III-A III-B 
1003\(bob 
166 
166 


in memU as memory space of read appU Fig 5 The system architecture of the proposed logging system 
2 Process behaviour log les to assist in mitigating risks associated with spam activities mail s spam a@b.c mail s subject cat addr.txt A Aim of the Proposed Logging System read mem B System Architecture of the Logging Solutions read mem read mem C The Security Analysis of the Proposed Logging System 
 
name of the le accessed by cat process f nm addr.txt and the id of the owner of this process p ownId This log can be different depending on who a provider customer or auditor wants it and what it is for The table shows only the content for the purpose of identifying a spam domU below p nm p id f nm p ownId cat 4000 addr.txt 1002 TABLE II A PROCESS BEHAVIOUR LOG FILE TO SHOW THE MALICIOUS CAT COMMAND READING ADDR  TXT First the providers may use a network monitoring as used in 32 The monitoring in can pinpoint which processes inside a domU are responsible for malicious or heavy network trafìc leaving the domU Second the provider may discover the commands in this domU that send emails e.g mail command in Linux To send email to a@b.c with subject as spam the command can be   Third the pro viders record behaviours of the mail command as evidence to identify accurately this spam domU We have already demonstrated recording this mail command behaviours as a log le by capturing the subject and the victimês email address parameter of mail command above in a domU in our previous work Lastly we can take one step further from Mail command to send spam emails can be   It sends emails to all victim addresses in addr.txt Thus this command involves addr.txt Table II column 3 Hence this le could be very important evidence to identify these spam activities Section VII-B discusses an example of the complete process behaviour log le to show the malicious mail and cat command involving spam activities Thus regarding addr.txt and when the providers have already pinpointed the mail command that sends spam emails as demonstrated by the y can then combine capturing the mail command malicious behaviours in with the cat command behaviour log le in Table II this command reading addr.txt as evidence to assist in identifying this spam domU Thus process behaviour log les e.g the catês behaviour log can be useful to assist in accurately analysing and identifying spam domUs in the providers IaaS cloud Reducing a number of criminal spam domUs should maintain the providers reputation This is because customers may buy the cloud product based on providers reputations V T HE P ROTOTYPE I MPLEMENTATION Figure 4 shows the context of a domU for this implementation In the gure Alice rents a Linux domU She has a critical le s.txt in diskU Read application in the rectangle in user level is an appU The name read is the appUês name and also the process name of the appU Alice can run this application to read s.txt the dot-arrow line with root or her privilege the ellipse in memU is the memory space of this read appU/process This memory space holds all information we need to record This information as shown in row 1 of Table I is a le name of s.txt a process Id e.g 4624 and a process name of read appU e.g read and an owner Id of read process e.g 1002 which is Aliceês user Id in this domU Hence is to record the history of critical les only row 1 of Table I as discussed above and then store them in a log le Fig 4 The context of the domU in the implementation a read appU a critical le s.txt in diskU and Figure 5 is the system architecture of the proposed logging system which is based on the template Figure 2 The main components are logger P1/libVMI and F3 as a log le LibVMI is a C library that can read the memory space   in memU from domU Step 1 the logger in dom0 user level is an app0 that calls libVMI to access memU step 2 to get the information in such as a le name of s.txt as discussed above Step 3 the logger writes the information as shown in row 1 of Table I into F3 This architecture is based on the template Thus it can be used to analyse the security of the proposed logging system before deployment  in this prototype implementation this paper does not discuss how to manage the logger application Thus we assume that the logger knows the critical le  our implementation deploy the logger and libVMI in dom0 and the log les F3 in hw0 The advantage of doing this is that domUs cannot tamper with these components In contrast when deploying the components inside domU this allow the owner of this domU to tamper with these components as argued by 34 8 19 Ho we v er  deplo ying 
the aim of the logging system in this implementation How the logger knows whether a le in a domU is critical or not DomUs cannot tamper with the logging components inside dom0 
read mem 
167 
167 


the logging components in dom0 also need to consider the other security aspects as discussed below The solutions for these security issues is out of the scope of this paper First  we use the logging system architecture Figure 5 as a tool for this analysing For example the security relevant question is how to ensure the integrity of the log les that are stored in disk0 which are fully owned and controlled by a provider The provider may maliciously learn about or alter the log les Second  the next security relevant question is how can an auditor ensures the integrity of the logger or libVMI which is run by the provider in dom0 Locating these components in this location can be a security risk This is because the provider may maliciously modify the loggerês code to produce contents of log les which beneìt himself We discuss only the questions above as an example of the analysis of the proposed logging system VI T HE R ESULT AND HOW TO OBTAIN I T In Figure 5 the logger command app0 runs in dom0 the 1st line in Figure 6 It keeps checking memU until read command is performed and existed in memU When read command is performed in domU the 1st line in Figure 7 the logger then keeps waiting until the read command reads s.txt When the read command starts reading s.txt the 2nd line in Figure 7 the logger immediately extracts necessary information 2nd line of Figure 6 These information are the le name s.txt read process name read process id 4624 and the id of the owner of read command 1002 After that the logger writes this extracted information to F3 Fig 6 The logger running in dom0 to record history of critical le s.txt Fig 7 The read command running in domU and reading critical le s.txt To obtain a critical le name s.txt Figure 8 shows the detail of les point Step 1 in Figure 8 les is a pointer of read processês that points to structure It contains an fdt pointer that points to the rst open le or inside structure step 2 Each points to each open le that is opened by read process step 3-4 It is assumed that read process is reading s.txt which is pointed by step 4 Figure 9 shows how after the logger locates pointer step 4 that logger obtains the le name string s.txt Step 1 the logger nds f path eld inside structure which is a structure This structure contains a dentry pointer which points to structure step 2 contains d name that is a structure step 3 which has the name pointer eld that points to string s.txt step 4 Fig 8 Detail of les pointer of read processês In the experiment the domU is for a single user However Alice owns two accounts the root can run all appUs in the domU and alice an administrator An example of the complete content of history of s.txt Table III can be constructed from the result 2nd line of Figure 6 Note that last acc column 5 presents the last accessed times of the le The asterisks  in the following tables indicate possible malicious events in domUs When the history of s.txt f nm p id p nm p ownId last acc s.txt 4624 read 1002 t1 s.txt 4002 read 1002 t2 s.txt 4003 maliciousRead 1002 t3 s.txt 4004 read 1003 t4 TABLE III A N E XAMPLE OF T HE COMPLETE CONTENT OF THE HISTORY OF S  TXT is available to Alice she may audit s.txt For example row 1 can be a normal event when Alice logs in to her domU Then she runs her read appU p nm to access s.txt f nm the dot-arrow line in Figure 4 with her or root permission The history of s.txt Table III shows Aliceês Id 1002 in column 4 In the case rootês or Aliceês password is compromised which may be caused by threat 1 row 2-3 can be suspect incidents relate to her le Row 2 can be undesired access to s.txt The reason can be that Alice has never accessed s.txt at t2 time column 5 Thus she may suspect that attackers may have accessed s.txt Another case in row 3 Alice has never used maliciousRead appU column 
the security analysis of the log les the security analysis of logging processes 
A The Result B How to Obtain the Result task struct les struct fdtable le path dentry Dentry qstr A Forming a Complete History of Critical Files from the Results to Mitigate Risks Associated with Threat 1 to Beneìt the Customers 1 Analysing malicious incidents when Alice is a single user in a domU 
task struct 
 pointing to s.txt Fig 9 How the logger obtains the le name of a critical le s.txt VII D ISCUSSION The logger Figure 5 can record the result as in line 2 of Figure 6 However this section discusses how the logger can be modiìed to produce many types of log les which assist in mitigating the risks associated with threat 1 to beneìt both customers and providers This section then compares the proposed system with previous work and discusses privacy and conìdentiality concerns of both sides due to the log les 
168 
168 


3 to access s.txt Thus she may also suspect that attackers may be doing this After pinpointing maliciousRead in order to obtain more evidence for auditing she may make further investigations using other methods e.g network monitoring as used in 32 The domU in this implementation can be used by multiple users Thus Aliceês domU have a root user Alice an administrator and Bob a standard user who shares and can log in to Aliceês domU As discussed in Section III-A this domU can be compromised by threat 1 Thus attackers may obtain both Bobês and rootês password Then they may log in to Aliceês domU using Bobês account Thus they can run Aliceês read appU with root permission to access s.txt Thus the evidence can be row 4 of Table III This row can be a suspect incident that why and how Bob id 1003 in column 4 row 4 accesses Aliceês s.txt Although the attacker uses the same appU read in column 3 row 4 which is normally used by Alice to access s.txt the log from our experiment still shows Bobês Id 1003 which is not an owner of s.txt Consequently Alice could eventually discover this suspicion from the history of s.txt Thus the history information in Table III can be evidence to assist in analysing undesired incidents inside domUs As a result this can mitigate risks associated with threat 1 to beneìt customers To enhance exibility of auditing in the cloud using logging systems the logger can be modiìed For example an auditor may want to know whether a particular appU as one that has an ability to view text les e.g gedit in Linux read s.txt or not Thus it is possible to modify the logger to record the history of this particular process instead of history of s.txt Thus this type of log le could be as in Table IV which shows a list of all les that were accessed by gedit Then the auditor can check whether this process reads s.txt or not In the table the auditor can see that gedit reads s.txt row 2 column 3 Thus this type of log les can be useful to enable exibility of the auditing p nm p id to le nm p ownId gedit 4000 a.txt 1002 gedit 4003 s.txt 1002 TABLE IV A LIST OF ALL FILES ACCESSED BY GEDIT APP U For dealing with the compromising of dom0 as discussed in Section IV-A3 that history of critical les Table I can be evidence for the providers to be aware that their cloud infrastructure may be compromised From Table III maliciousRead appU used by Bob row 3 column 3 can be used as a trigger or pinpoint for the providers to make further investigations For dealing with spamming to record the command   Table V shows that both malicious mail column 1 and cat column 2 command involving spam activities One can see that this domU owner id 1002 column 4 and 5 uses the combination of both commands to send spam emails cat to read addr.txt column 3 and then mail to send emails to all the victim addresses in addr.txt p nm1 p nm2 f nm1 p ownId1 p ownId2 mail cat addr.txt 1002 1002 TABLE V A PROCESS BEHAVIOUR LOG FILE TO SHOW THE MALICIOUS MAIL AND CAT COMMAND INVOLVING SPAM ACTIVITIES Our proposed logging system architecture Figure 5 deploys libVMI previously known as XenAccess LibVMI is based on six high level requirements of programming guidelines or good security guidelines Our proposed system architecture inherits these requirements while achieving the history of critical les The rst two requirements are no superîuous modiìcations to the hypervisor and no modiìcations to domUs These requirements involve a trusted computing base TCB which is a signiìcant factor when building logging systems in the cloud This is because in order to evaluate the trustworthiness of a software system e.g our proposed logging system it is necessary to identify its TCB Thus the size of the TCB should be as small as possible Ho we v er  36 points out that an OS is dif cult to analyse because of its size and complexity He also argues that there is too much TCB when deploying an application in an OS e.g domUs that is running on top of a hypervisor ar gue that an OS code changes rapidly over time The changes may increase the size of the OS and its complexity and as a result its TCB Thus the TCB can be a very important aspect of security in order to propose logging systems in the cloud For example the proposed systems in 35 19 38 that can be considered as solutions to mitigate risks associated with the cloud problem concern reducing the TCB size along with their proposed systems Recent work that extensively relates to a secure cloud computing environment such as that of also focuses on reducing the TCB in their proposed architecture Thus this section discusses related work that involves logging or detecting mechanism in an IaaS It also compares the logging system in this paper with those in related work based on TCB and achieving a history of critical les First Flogger and P ASSXen 17 can pro vide a history of critical les However Flogger has logging processes that are distributed across domU and dom0 PASSXen also has logging processes that are distributed across the hypervisor domU and dom0 Therefore the proposed architecture in this paper yields less TCB than Flogger and PASSXen This is because the TCB of our architecture includes only hypervisor and dom0 not domU whereas their TCB includes domU Second propose a network monitoring application that identiìes which process inside a Windows domU is responsible for malicious network trafìc leaving this domU Additionally present a demo monitoring program in dom0 that outputs all le/directory creation/removals happening in domUês root directory Both works deploy XenAccess in dom0 Thus these systems have small TCB hw0 Xen and dom0 the same as the proposed architecture in this paper However they are not designed to achieve a history of critical les but could be modiìed to add this functionality The history of critical les and process behaviours log les discussed in this paper is detailed records of activities of pro 
2 Analysing malicious incidents when Alice is in a multiple users domU 3 Another type of log les B How the Result Assists in Mitigating Risks Associated with Threat 1 to Beneìt the Providers mail s subject cat addr.txt C Related Work and Comparisons D Privacy and Conìdentiality Concerns of Customers and Providers due to the Log Files 
 
169 
169 


cesses and les in a customer VM For auditing purposes this history information can be investigated by a third party Thus this information may disclose customer business activities or malicious activities inside providerês cloud infrastructure This leads to privacy and conìdentiality issues of both customers and providers However ar gue the pri v ac y issues is manageable For example it is important to consider what is being recorded and who can access this recorded information Thus logging system management should return the recorded information at different levels of detail depending on who needs it To address the privacy and conìdentiality issues this may lead to further research such as balancing the privacy and its usage e.g This is out of the scope of this paper  VIII C ONCLUSIONS We argue that Cloud Security Alliance/CSA threat 1 related to criminal activities in customers VMs such as spamming can have serious effects for both provider and customer sides The examples are compromising providerês hosting system/dom0 consequently customer virtual machines The paper then proposes implements and discusses logging solutions to mitigate risks associated with threat 1 in infrastructure as a service IaaS cloud We argue that our result can be used to form log les called history of critical les and process behaviour log les We then demonstrate in detail how these log les can mitigate the risks to beneìt both sides To collect the log les our proposed system yields smaller trusted computing base TCB compared to previous work 17 Although work by 19 can yield the same TCB as our proposed system However they are not designed to achieve the history of critical les as discussed in this paper When we have the full implementation of the proposed system it should be an appropriate point to have the evaluation of the system performance impact or the scalability However history of critical les and process behaviour log in this paper can be important evidence to clarify what is going on in the cloud Thus these log les assist in enhancing the accountability in the cloud consequently assist in mitigating risks associated with CSA threats to beneìt both consumers and providers R EFERENCES  R Cho w  P  Golle M Jak obsson E Shi J Staddon R Masuoka and J Molina Controlling data in the cloud outsourcing computation without outsourcing control in 
 2009  M Armbrust A F ox R Grif th A D Joseph R Katz A K onwinski G Lee D Patterson A Rabkin I Stoica and M Zaharia A view of cloud computing  2010  CSA Security guidance for critical areas of focus in cloud computing version 3 Tech Rep 2011  W  Da w oud I T ak ouna and C Meinel Infrastructure as a service security Challenges and solutions in  2010  R De Paris Remi-a middle w are to handle molecular docking simulations of fully-îexible receptor model in hpc environment Masterês thesis 2012  S Hazelhurst Scientiìc computing using virtual high-performance computing a case study using the amazon elastic computing cloud 2008  P  W atson P  Lord F  Gibson P  Periorellis and G Pitsilis Cloud computing for e-science with carmen in  2008  W  W ongthai F  Rocha and A v an Moorsel  A generic logging template for infrastructure as a service cloud in  25-28 March 2013  R K K o P  Jagadpramana M Mo wbray  S Pearson M Kirchber g Q Liang and B S Lee Trustcloud A framework for accountability and trust in cloud computing  2011  R K o M Kirchber g and B S Lee From system-centric to datacentric logging accountability trust  security in cloud computing 2011  R K o P  Jagadpramana and B.-S Lee Flogger A le-centric logger for monitoring le access and transfers within cloud computing environments 2011  CSA T op threats to cloud computing v ersion 1.0  T ech Rep 2010   2012 T op threats to cloud computing surv e y results update  A Haeberlen  A case for the accountable cloud   2010  J Spring Monitoring cloud computing by layer  part 1   2011  G Aceto A Botta W  de Donato and A Pescape Cloud monitoring Deìnitions issues and future directions 2012  M C Peter Mack o and M Seltzer  Collecting pro v enance via the x en hypervisor 2011  B Dolan-Ga vitt B P ayne and W  Lee Le v eraging forensic tools for virtual machine introspection Tech Rep 2011  B P ayne M de Carbone and W  Lee Secure and e xible monitoring of virtual machines in  2007  Amazon 2012 Amazon elastic compute cloud amazon ec2  H F ang Y  Zhao H Zang H Huang Y  Song Y  Sun and Z Liu Vmguard An integrity monitoring system for management virtual machines 2010  CSA 2013 The notorious nine Cloud computing top threats in 2013  Y  Zhang A Juels M K Reiter  and T  Ristenpart Cross-vm side channels and their use to extract private keys in  2012  CSA 2010 Cloud security alliance and hp identify top cloud security threats in new research report  A Bates B Mood J Pletcher  H Pruse M V alaf ar  and K Butler  Detecting co-residency with active trafìc analysis techniques in  2012  W  Kandek 2010 V irtualization vulnerabilities up and coming  K Onoue Y  Oyama and A Y oneza w a Control of system calls from outside of virtual machines in  2008   A surv e y on security issues and solutions at dif ferent layers of cloud computing  2013  D Chisnall  2007  P  S W oole y  2011 Identifying cloud computing security risks  A Bisong and S S M Rahman  An o v ervie w of the security concerns in enterprise cloud computing  2011  A Haeberlen P  Aditya R Rodrigues and P  Druschel  Accountable virtual machines in  2010  B P ayne Vmitools V irtual machine introspection tools  J Schif fman Y  Sun H V ijayakumar  and T  Jae ger  Cloud v eriìer Veriìable auditing service for iaas clouds Tech Rep 2013  D G Murray  G Milos and S Hand Impro ving x en security through disaggregation in  2008  J M McCune Reducing the trusted computing base for applications on commodity systems Ph.D dissertation 2009  J M McCune A Perrig and S O service  ser SpringerBriefs in Computer Science 2011  F  Rocha and M Correia Luc y in the sk y without diamonds Stealing conìdential data in the cloud in  2011  F  Rocha T  Gross and A v  Moorsel Defense-in-depth against malicious insiders in the cloud in  2013  T  Bur ghardt K B  ohm A Guttmann and C Clifton Anonymous search histories featuring personalized advertisement-balancing privacy with economic interests  2011 
Proceedings of the 2009 ACM workshop on Cloud computing security Commun ACM Informatics and Systems INFOS 2010 The 7th International Conference on In 2nd Iberian Grid Infrastructure Conference Proceedings Advanced Information Networking and Applications Workshops 27th International Conference on Services IEEE Congress on SIGOPS Oper Syst Rev Security Privacy IEEE Computer Security Applications Conference Twenty-Third Annual Proceedings of the ACM conference on Computer and communications security Proceedings of the 2012 ACM Workshop on Cloud computing security workshop Proceedings of the 2008 ACM symposium on Applied computing The Journal of Supercomputing The deìnitive guide to the xen hypervisor International Journal of Network Security  Its Applications Proceedings of the 9th USENIX conference on Operating systems design and implementation VEE Bootstrapping Trust in Modern Computers Proceedings of the 41st International Conference on Dependable Systems and Networks Workshops Cloud Engineering IEEE International Conference on Trans Data Privacy 
170 
170 


in Hadoop which we called HFSP Our work brought up several challenges evaluating job size on-line without wasting resources avoiding job starvation both on small and large jobs and guaranteeing short sojourn time despite estimation errors were the most noteworthy We solved these problems in the context of a multi-server system using virtual time and aging that is built to be tolerant to failures scale-out upgrades and supports the composite job structure of MapReduce We showed that a size-based discipline such as HFSP performs very well and that a precise job size information is not essential for the scheduler to function properly Our experimental results in which we compared HFSP to the widely used FAIR scheduler indicate that both interactivity and efìciency requirements were largely met both small and large jobs do not starve and the job sojourn time distribution is consistently in favor of HFSP Our work has practical consequences as well HFSP is simple to conìgure and allows resource pools to be consolidated because workload diversity is intrinsically accounted for by the size-based discipline Our future work is related to job preemption We are currently investigating a novel technique to ll the gap between killing running tasks and waiting for tasks to nish Indeed killing a task too late is a huge waste of work and waiting for a task to complete when it just started is detrimental as well Our next goal is thus to provide a new set of primitives to suspend and resume tasks to achieve better preemption A CKNOWLEDGEMENTS This work has been partially supported by the EU projects BigFoot FP7-ICT-223850 and mPlane FP7-ICT-318627 R EFERENCES  J Dean and S Ghema w at MapReduce Simpliìed data processing on large clusters in Proc of USENIX OSDI  2004  Y  Chen S Alspaugh and R Katz Interacti v e query processing in big data systems A cross-industry study of MapReduce workloads in Proc of VLDB  2012  K Ren et al  Hadoopês adolescence An analysis of Hadoop usage in scientiìc workloads in Proc of VLDB  2013  Apache Oozie W orkîo w Scheduler  http://oozie.apache.or g   Hadoop Open source implementation of MapReduce  http hadoop.apache.org  E Friedman and S Henderson F airness and ef cienc y i n web serv er protocols in Proc of ACM SIGMETRICS  2003  L E Schrage and L W  Miller  The queue m/g/1 with the shortest remaining processing time discipline Operations Research  vol 14 no 4 1966  M Harchol-Balter et al  Size-based scheduling to improve web performance ACM TOCS  vol 21 no 2 2003  A V erma L Cherkaso v a  and R H Campbell  Aria automatic resource inference and allocation for MapReduce environments in Proc of ICAC  2011   T w o sides of a coin Optimizing the schedule of MapReduce jobs to minimize their makespan and improve cluster performance in Proc of IEEE MASCOTS  2012  S Agarw al et al  Re-optimizing Data-Parallel Computing in Proc of USENIX NSDI  2012  A D Popescu et al  Same queries different data Can we predict query performance in Proc of SMDB  2012  C T ian et al  A dynamic MapReduce scheduler for heterogeneous workloads in Proc of IEEE GCC  2009  D Lu H Sheng and P  Dinda Size-based scheduling policies with inaccurate scheduling information in Proc of IEEE MASCOTS  2004  Y  Chen et al  Statistical workload injector for MapReduce https github.com/SWIMProjectUCB/SWIM  M Zaharia et al  Delay scheduling A simple technique for achieving locality and fairness in cluster scheduling in Proc of ACM EuroSys  2010  Y  Chen A Ganapathi R.Grif th and R Katz The case for e v aluating MapReduce performance using workload suites in Proc of IEEE MASCOTS  2011  M DellêAmico  A simulator for data-intensi v e job scheduling  EURECOM Tech Rep RR-13-282 2013  J Nagle On pack et switches with inìnite storage  Communications IEEE Transactions on  vol 35 no 4 1987  S Gorinsk y and C Jechlitschek F air ef cienc y  or lo w a v erage delay without starvation in Proc of IEEE ICCCN  2007  Apache Hadoop wiki po wered by   http://wiki.apache.or g/hadoop PoweredBy  D Stiliadis and A V arma Latenc y-rate serv ers a general model for analysis of trafìc scheduling algorithms IEEE/ACM TON  vol 6 no 5 1998  Apache Hadoop f air scheduler   http://hadoop.apache.or g/docs/stable fair  scheduler.html   Hadoop MapReduce JIRA 1184  https://issues.apache.or g/jira browse/MAPREDUCE-1184   PigMix  https://cwiki.apache.or g/PIG/pigmix.html  TPC Tpc benchmarks  http://www tpc.or g/information/benchmarks asp  M P astorelli et al  Practical size-based scheduling for MapReduce workloads CoRR  vol abs/1302.2749 2013  G Ananthanarayanan et al  Reining in the outliers in map-reduce clusters using mantri in Proc of USENIX OSDI  2010  K F o x and B Mosele y  Online scheduling on identical machines using SRPT in In Proc of ACM-SIAM SODA  2011  H Chang et al  Scheduling in MapReduce-like systems for fast completion time in Proc of IEEE INFOCOM  2011  B Mosele y et al  On scheduling in map-reduce and ow-shops in In Proc of ACM SPAA  2011  T  Sandholm and K  Lai MapReduce optimization using re gulated dynamic prioritization in Proc of ACM SIGMETRICS  2009  M Isard et al  Quincy fair scheduling for distributed computing clusters in Proc of ACM SOSP  2009  A Ghodsi et al  Dominant resource fairness Fair allocation of multiple resources types in Proc of USENIX NSDI  2011  B Hindman et al  Mesos A platform for ne-grained resource sharing in the data center in Proc of USENIX NSDI  2011  T  Sandholm and K Lai Dynamic proportional share scheduling in Hadoop in Proc of JSSPP  2010  K Kc and K An yanwu Scheduling Hadoop jobs to meet deadlines  in Proc of CloudCom  2010  J W olf et al  FLEX A slot allocation scheduling optimizer for MapReduce workloads in Proc of ACM MIDDLEWARE  2010  Y  Kw on et al  Skewtune mitigating skew in MapReduce applications in Proc of ACM SIGMOD  2012  J T an X Meng and L Zhang Delay tails in MapReduce scheduling  in Proc of ACM SIGMETRICS  2012   Performance analysis of coupling scheduler for MapReduce/Hadoop in Proc of IEEE INFOCOM  2012  Apache Hadoop capacity scheduler   http://hadoop.apache.or g/docs stable/capacity scheduler.html  M Zaharia et al  Resilient distributed datasets a fault-tolerant abstraction for in-memory cluster computing in Proc of USENIX NSDI  2012  Apache Hadoop ne xtgen MapReduce yarn  http://hadoop.apache org/docs/current/hadoop-yarn/hadoop-yarn-site/YARN.html  M Schw arzk opf et al  Omega exible scalable schedulers for large compute clusters in Proc of EuroSys  2013  B Hindman et al  Mesos a platform for ne-grained resource sharing in the data center in Proc of USENIX NSDI  2011  Apache Hadoop on demand  http://hadoop.apache.or g/docs/stable hod scheduler.html 59 


608 


  11 that it will be able to meet all of the Van Allen Probes communications goals with its intended ground segments A CKNOWLEDGEMENTS  This work was performed with the support of the Radiation Belt Storm Probes mission under NASA\222s Living with a Star program. The authors would like to thank Rick Fitzgerald and Kim Cooper, Van Allen Probes project managers at JHU/APL for supporting this work. There are many at JHU/APL who contributed to the development and verification of the RF system. Significant technical contributions were made by: Christopher Haskins, Bob Wallis, Matthew Angert, Laurel Funk, Joe Sheehi, Wesley Millard, Norman Adams, Lloyd Ellis, Sheng Cheng, John Daniels, Phillip Huang, Avi Sharma, Carl Herrmann, David Jones, Brian Bubnash, Melanie Bell, Horace Malcom Michael Pavlick, Mark Bernacik, Christopher Deboy, Bob Bokulic, Sharon Ling, Albert Hong, Erik Hohlfeld, Judy Bitman, William Dove and Tony Garcia. Significant contributions were also made by the USN and TDRSS compatibility test teams  R EFERENCES  1 eck D. G.; Mau k  B  H.; Greb o w sk y  J  M.; Fo x  N J, \223The Living With a Star Radiation Belt Storm Probes Mission and Related Missions of Opportunity 224 American Geophysical Union, Fall Meeting 2006   h o rs k i y  A Y., Mauk B. H., Fox N. J Sibeck D G., Grebowsky, J. M., \223Radiation belt storm probes Resolving fundamental physics with practical consequences,\224 Journal of Atmospheric and SolarTerrestrial Physics Vol. 73, Issues 11-12, July 2011 Pages 1417-1424   S. Bu s h m a n M. Bu tler, R C o n d e, K. Fretz, C  Herrmann, A. Hill, R. Maurer, R. Nichols, G. Ottman M. Reid, G. Rogers, D. Srinivasan, J. Troll, B. Williams 223Radiation Belt Storm Probe Spacecraft and Impact of Environment on Spacecraft Design,\224 Proceedings of the 2012 IEEE Aerospace Conference, Big Sky Montana USA, March 3-10, 2012   opelan d D.J DeB o y C  C R o y s ter, D.W., Dov e  W.C., Srinivasan, D.K,. Bruzzi, J.R., Garcia, A., "The APL 18.3m station upgrade and its application to lunar missions," Aerospace Conference, 2010 IEEE , vol., no pp.1-10, 6-13 March 2010    Figure 10. FER/BER performance for all downlink modes for RF GSE, SCF, USN, and TDRSS 


  12  iv as a n D. K., A r ti s  D  A Bak er, R  B., Stil w e ll, R   K., Wallis, R. E., \223RF Communications Subsystem for the Radiation Belt Storm Probes,\224  Acta Astronautica vol 65, issue 11-12, December 2009, Pages 1639-1649   k i n s  C B., Mi llard, W P 223 M u l t i Ban d  So f t w a re Defined Radio for Spaceborne Communications Navigation, Radio Science, and Sensors,\224 2010 IEEE Aerospace Conference, March 2010  k i n s  C B., Mi llard, W P A d a m s  N. H Sri n i v a s a n  D. K., Angert, M. P., \223The Frontier Software-Defined Radio: Mission-Enabling, Multi-Band, Low-Power Performance,\224 61st  International Astronautical Congress IAC-10.B2.5.11, October 2011 8  Crowne, M.J.,  Haskins, C. B., Wallis, R. E.,  Royster D.W, \223Demonstrating TRL-6 on the JHU/APL Frontier Radio for the Radiation Belt Storm Probe mission,\224 2011 IEEE Aerospace Conference, March 2011  o ckw ood, M. K K i n n i s o n  J., F o x  N C o n d e, R  Driesman, A., \223Solar Probe Plus Mission Definition,\224 63rd  International Astronautical Congress, IAC 12.A3.5.2, October 2012   i t m a n J  223An I n D ept h  L o o k at t h e R a dio Freq u e n c y    Ground Support Equipment for the Radiation Belt Storm  Probes Mission,\223 IEEE Autotestcon, 2011, September 2011  d a m s  N.H., Bi t m a n J C opela n d D. J Sri n ivas a n  D  K.,  Garcia. A., \223RF Interference at Ground Stations Located in Populated Areas,\224 2013 IEEE Aerospace Conference, March 2013  B IOGRAPHY  Matthew J. Crowne is a member of the Senior Professional Staff of the RF Engineering group in JHU/APL\222s Space Department. He received his B.S from Johns Hopkins University in 2000 and his M.S. from the same university in 2009, both in electrical engineering Matthew joined JHU/APL in 2007 where he has been working on the development of radios for spaceflight communications systems. Prior to joining JHU/APL, he worked for Integrated Defense Systems Inc., where he developed solid state power amplifiers for electronic warfare and communication systems. Matthew was the integration and test lead for the Van Allen Probes RF communication system and is currently working on the Solar Probe Plus mission   Dipak K. Srinivasan is the supervisor of the RF Systems Engineering Section in the JHU/APL Space Department. He received his B.S. and M.Eng. in electrical engineering in 1999 and 2000 in electrical engineering from Cornell University, and an M.S. in applied physics from The Johns Hopkins University in 2003. Dipak joined the APL Space Department in 2000, where he has served as the lead RF Integration and Test Engineer for the CONTOUR and MESSENGER spacecraft and lead mission system verification engineer for the New Horizons project. He is currently the Lead RF Telecommunications Systems Engineer for the MESSENGER and Van Allen Probes missions and chairs technical sessions at the annual International Astronautical Congress  Darryl W. Royster is a member of the Senior Professional Staff in the RF Engineering Group at JHU/APL.  He led compatibility testing for the Van Allen Probes, STEREO, and MESSENGER missions.  Previously he was the System Engineer for the Satellite Communications Facility at JHU/ APL and the lead RF Integration and Test Engineer for the STEREO spacecraft.  Prior to joining the JHI/APL Space Department in 2001, Mr. Royster designed cellular and land mobile radio products for Ericsson, GE and Motorola.  He received his B.S. and M.S. in electrical engineering from Virginia Polytechnic Institute and State University in 1982 and 1984, respectively  Gregory L. Weaver joined the Senior Professional Staff of JHU/APL in 2003 and works within the RF Engineering Group of the Space Department.  He is a technologist with extensive background in the technical and business aspects of the frequency control industry and has held positions as a senior design engineer, technical manager and marketing strategist over a 25 year career history, including vice president positions with Bliley Technologies Inc. and the former Piezo Crystal Company. He received his M.S in Technology Management from the University of Pennsylvania in 1993 and his B.S. in Physics from Dickinson College in 1982.  He is a licensed professional engineer in the state of Pennsylvania, member of the IEEE and the UFFC Societ y.  He has contributed to the technical proceedings of the IEEE International Frequency Control Symposium, Precise Time and Time Interval Systems and Application Meeting and the European Frequency and Time Forum   


  13 Daniel Matlin is an Associate Professional Staff at JHU/APL and a member of the RF engineering group in the Space department.  He went through a dual Bachelors/Masters program at Johns Hopkins University graduating with his Bachelor of Science in Electrical Engineering in 2008 and his Masters of Science in Engineering from the Electrical Engineering department in 2009.  As a student he specialized in RF systems design.  Mr. Matlin started at the JHU/APL in February of 2010 and in his short time with the lab has been privileged to work on various tasks supporting the RBSP program, including supporting a successful launch and early operations.  Mr. Matlin assisted in the qualification testing for the flight DSP slices as well as the integrated flight transceivers.  He also carried out electrical testing and flight qualification of the newly designed Hypertronics stacking connectors as well as components and cables used for the RF subsystem  Nelli Mosavi is an EMC and RF Engineer in the JHU/APL Space Department, RF Systems Engineering section. She received a B.S. degree in Electrical Engineering from Oakland University Michigan in 2004 and an M.S. in Electrical Engineering from The Johns Hopkins University in 2010. She is currently working toward her Ph.D. at the University of Maryland Baltimore County. She joined APL in 2009 and has since been working on RF and EME issues on the Van Allen Probes mission. Nelli previously worked for SENTEL Corporation, General Motors, DENSO International, and Molex Automotive   


APPENDIX 3ñ RESULTS \(SEM I-PROFESSIONAL DSLRS     Run by TFDEA add-in ver 2.1 Frontier Type Orientation 2nd Goal Return to Scale Avg RoC Frontier Year MAD Dynamic OO Max CRS 1.124802 2008 1.394531 Input\(s Output\(s SOA products at Release SOA products on Frontier RoC contributors Release before forecast Release after forecast 22166527 DMU Name Date Efficiency_R Efficiency_F Effective Date Rate of Change Forecasted Date 1 Nikon D100 2002 1 1.66666667 2007.000000 1.107566 2 Olympus E1 2003 1 1.666666667 2007.000000 1.136219 3 Pentax *ist D 2003 1 1.358024691 2007.000000 1.079511 4 Nikon D20 0 2005 1 1.2 2007.000000 1.095445 5 Canon EOS 5D 2005 1 1.664796311 2007.730028 1.205269 6 Pentax K10D 2006 1 1 2006.000000  7Nikon D30 0 2007 1 1 2007.000000  8 Olympus E3 2007 1 1 2007.000000  9 Sony Alpha DSLR A70 0 2007 1 1 2007.000000  1 0 Nikon D70 0 2008 1.46 1.46 2007.000000  11 Canon EOS 5D Mark II 2008 1.065464119 1.065464119 2008.000000  12 Sony Alpha DSLR A90 0 2008 1 1 2008.000000  13 Olympus E3 0 2008 1.02 1.02 2007.000000  1 4 Pentax K20D 2008 1 1 2008.000000  15 Nikon D300s 2009 1.142857143 0.874450785 2007.000000  2008.140742 16 Canon EOS 7D 2009 1 0.754166667 2007.000000  2009.399022 17 Sony Alpha DSLR A85 0 2009 1 0.774820627 2008.000000  2010.169290 18 Pentax K-7 2009 1 0.772738276 2006.503130  2008.695302 19 Olympus E5 201 0 1.466133763 1.173333333 2007.000000   2 0 Pentax K-5 201 0 1.009024674 0.776190476 2007.000000  2009.15427 0 21 Nikon D80 0 2012 1 0.686950618 2008.000000  2011.192776 22 Canon EOS 5D Mark III 2012 1.115010291 0.930769231 2007.502755  2008.112786 23 Pentax K-5 II 2012 1 0.632075669 2006.839705  2010.740375 24 Sony Alpha SLT A99 2012 1.009662059 0.854117647 2007.640496  2008.981286 Results 2129 2013 Proceedings of PICMET '13: Technology Management for Emerging Technologies 


