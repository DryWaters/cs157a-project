January/February 2017  Computing in Science & Engineering  1521-9615/17/$33.00 \251 2017 IEEE  Copublished by the IEEE CS and the AIP  
7 
Yaoxue Zhang, Kehua G 
TRANSPAREN T COMPU T ING Transparent Computing 
  A Promising Network Computing Paradigm 
uo, and Ju R en  
   
Jianxin Wang and Jianer Chen  
Yuezhi Zhou  
 Central South University, China  Tsinghua University, China  Central South University, China By adopting the transparent computing paradigm, user terminals are becoming more lightweight with enhanced security, improved energy ef\037ciency, and cross-platform capability. A comprehensive 
survey indicates future directions of transparent computing, from traditional terminals to mobile devices. New challenges and potential research directions for applying transparent computing to mobile devices could foster further study I 
n the past 10 years, the emergence of new technologies such as cloud computing and big data have changed the core functions of computers and the Internet from computing and communicating to col lecting, storing, analyzing, and using various data and services. Simultaneously, we have witnessed the 
proliferation of mobile devices and are heading toward the Internet-of-\037ings \(IoT\ra, where light weight and mobile devices are the dominant terminals on the Internet and in our daily life. In 2014, the global revenue of the mobile Internet totaled US$3.3 trillion, and smartphone shipments exceeded 1.3 bil lion units \(approximately three times the volume of PC shipments; www.catr.cn/kxyj/qwfb/bps/201512 P020151211378960738048.pdf\. Clearly, the network computing environment is gradually evolving into 
a mobile Internet in which mobile devices request di\036erent services via various wireless communication networks, such as Wi-Fi, cellular, and ad hoc networks 037e dramatic increase in mobile devices and services provides signi\035cant opportunities and motivates the evolution of the computing paradigm from PCs to mobile devices. However, new terminals and net work environments also introduce new challenges. Lightweight terminals and smart applications \(apps 


It reduces terminals\222 complexity and cost It o\037ers cross-platform capability We can track pro gram execution routes from servers to termi nals, and because instructions on terminals are dumped after use, system security is enhanced A new paradigm. Transparent computing extends the bus transmission found in traditional computer architectures It improves the user experience Input Figure 1 possess such characteristics as mobility, portabil ity, user dependency, immediacy, and privacy. In the mobile Internet era, server-centric computing paradigms \(virtual desktops, cloud computing, and big data processing\ave been the representative technologies, but they o\036er only partial solutions to certain problems 1 On these platforms, multiple virtual operating systems \(OSs\un on cloud serv ers, and users access various resources via a remote desktop from di\036erent types of terminals. Com puting is performed by servers, whereas terminals exclusively receive and display the processed data Although server-centric computing paradigms such as cloud computing have the advantages of easy maintenance, centralized management, and high server utilization, they present limitations and numerous challenges to terminals. First, termi nals require a lot of storage and a high processing capability to store and execute OSs and software programs as they communicate with central serv ers. Second, because of the loss of credibility and controllability in terminals, users might be vulner able to many types of security attacks, such as data theft, data tampering, and privacy leakage \037ird because terminals only display computing or pro cessing results, an inferior user experience could happen when terminals support apps that require frequent user interactions. In short, server-centric computing paradigms only solve problems from the server and network perspective, not from that of users and services Transparent computing 2 which was \035rst pro posed in 2004, is a promising solution for mitigat ing or addressing these challenges. \037e core idea is that all data and software, including OSs, apps and user information, are stored on servers, with data computing performed on terminals. Users can obtain heterogeneous OSs and apps from servers and run them at their own terminals without need ing to know underlying hardware and implementa tion details 3 User interruptions from terminals are redirected to a server through a network connec tion to request the corresponding instructions and data, which are subsequently executed in a pagestreaming pattern. \037us, transparent computing possesses the following four advantages It o\037ers a high level of security With a transpar ent computing platform, it\222s possible to develop apps that work across hardware and software platforms. For example, iOS apps can be com patible with Android apps, which lets users freely access services hosted on networks that cross het erogeneous software and hardware platforms 4 Server-centric computing paradigms such as cloud computing are based on parallel virtualiza tion and solve the issue of data in the cloud, whereas transparent computing emphasizes data storage on servers and computation on terminals, streaming both execution and heterogeneous services support for heterogeneous terminals. However, server-centric computing paradigms and transparent computing aren\222t mutually exclusive; cloud resource manage ment and big data processing can also be applied on the server side of transparent computing. In essence transparent computing extends the bus transmission found in traditional computer architecture to the network \(see Figure 1 Given the inherent advantages of transparent computing, a large number of researcher and compa nies have focused on the topic over the past decade Many transparent computing standards and products  Term ina ls  can become extremely simple, nearly bare machines without software, thus making them more lightweight and reducing hardware costs January/February 2017 8   037e terminal is not only responsible for cross-platform display but it can also run heterogeneous programs from various platforms, thus making it capable of supporting apps that require frequent inter actions, such as video games Output Storage Computing Traditional computer architecture Bus Input Output Storage Computing Trans p arent com p utin g architecture Network Bus Bus Network Network 


have emerged, attracting signi\035cant attention from both industry and academia. In 2007, a research team at Intel designed a transparent computing plat form called UEFI \(Uni\035ed Extensible Firmware In terface\nd developed several apps on it by utilizing Intel\222s new-generation BIOS \(Basic Input Output System 5 Academic researchers have also developed transparent computing systems to support heteroge neous hardware architectures based on UEFI 6 Dur ing the 2012 Intel Developer Forum, Renee James executive vice president and general manager of the company\222s Software & Services Group, proclaimed 223\037e next era of computing is transparent comput ing\224 \(http://download.intel.com/newsroom/kits idf/2012_fall/pdfs/IDF2012_Renee_James.pdf Transparent computing has garnered attention from the media as well. In 2012, ScienceDaily post ed, \223An Operating System in the Cloud: TransOS Could Displace Conventional Desktop Operat ing Systems\224 \(https://www.sciencedaily.com/re leases/2012/10/121009111944.htm\, and TechEye posted, \223Researchers to Push OS into the Cloud\224 www.techeye.net/software/researchers-to-push-osinto-the-cloud\. TechNewsDaily, ScienceNewsline iSGTW, gizmag, Xataka, and eWeek have also re ported on the topic In this article, we provide a comprehensive sur vey of transparent computing and indicate some future directions for it, from traditional terminals to mobile devices Transparent Computing: Concept A rchitecture, and Key Technologies Figure 2 Transparent computing lets users enjoy services via on-demand network access with any type of device, without needing to know the location of OSs, middleware, and apps 3 037is paradigm sepa rates data storage and program execution in dif ferent computers connected by communication networks. Data and software \(including OSs\are stored and scheduled by servers but executed on users\222 terminals 7 No OS, middleware, or appli cation programs are installed on users\222 terminals rather, they\222re dynamically loaded from the server through the network when users submit requests 2 As Figure 2 shows, transparent computing has an architecture consisting of service, OS, network and terminal layers In the service layer, software and user data are stored on servers. Services can be heterogeneous and are automatically associated with di\036erent underly ing Oss; users can request any service regardless of the underlying OS 2 Services can be deployed by download or user install, and they generally include a wide variety of options, such as games, instant messaging tools, and smart home apps 037e OS layer stores heterogeneous OSs. To sup port heterogeneous services, underlying OSs must be maintained by the servers. When a user requests a service, the servers automatically choose the un derlying OS and select the OS kernel, thereafter  www.computer.org/cise    Wired/wireless networ k Client system Skype Gam e TV Internet karaok e DVD QQ iPad OVi b g system c d layers Heterogeneous service a Server Client MRBP NSAP\205   Heterogeneous OS Transparent computing. The four-layer architecture consists of \(a\ervice, \(b\perating system  c\etwork, and \(d\erminal layers 9 


Key technologies in transparent computing. There are eight technical points in a transparent computing platform, namely, multi-OS remote booting, streaming loading, lightweight virtualization, data transport protocols server management, client interface, security, and performance optimization transmitting the kernel together with any requested  service apps to the user\222s terminal. Generally, both services and OSs are stored on the servers that are responsible for managing OSs, software, and user data. In transparent computing, computation and storage are spatiotemporally separated. Suit able OSs and software are dynamically dispatched from the servers to users\222 terminals and executed on the terminals in a bu\036er-enabled block or a streaming way 037e network layer controls communications and data transmission between servers and users Software, OSs, and data are formed as blocks or streams that \034ow from the servers to users\222 ter minals. Some communication protocols such as MRBP \(Multi-OS Remote Booting Protocol 8 and NSAP \(Network Storage Access Protocol 9 have been developed to support remote booting and block transmission 037e fourth layer is responsible for receiving and executing services on user terminals, which are of ten diverse and frequently lightweight, ranging from PCs to smartphones or pads to wearable devices 10  037e terminals need only store the underlying BIOS and a selection of protocols and management pro grams, thus enabling the terminals to be securely and easily managed and maintained Figure 3 shows a technical overview of the key technologies in transparent computing. \037ere are eight technical points in a transparent comput ing platform, namely, multi-OS remote booting streaming loading, lightweight virtualization, data transport protocols, server management, client in terface, security, and performance optimization I O January/February 2017 Figure 3 10   Hardwar e EFI/UEFI \(MRBP, device driver NSAP client NSAP server Network card driver Disk I/O, streaming load OS App Transparent server management OS resource management App management server App management Apps and resource library Hardware EFI/UEFI \(MRBP, device driver MRBP Data storage and conversion Interface Security veri\037cation Transparent network Transparent terminal X86/ARM Transparent server 1 OS remote booting 7 Security 2 streaming load 3 virtualization 4 transport protocol 8 Performance optimization 5 management 6 interface Transparent client Identity authentication Caching strategy Schedule optimization Transmission optimization Load balancing Transport protocol Security monitoring Transparent network Network card driver Transport protocol 


Figure 4 www.computer.org/cise    In the transparent cloud architecture \(see Figure 4 existing algorithms and schemes 13 that have been veri\035ed to improve cloud computing\222s performance can be employed at transparent servers to manage and schedule resources. \037e di\036erence being that in cloud computing, both data storage and com puting are performed on servers, whereas in trans parent computing, data storage happens on servers but data computing happens on user terminals 4  A transparent computing system has two pri mary types of units: transparent servers and trans parent users. Transparent servers are a cluster of cloud servers for storing OSs, apps, and user data A well-developed system \(Meta OS\uns on the server side and handles three jobs 14 creating and managing an OS pool, creating and managing an app pool, and communicating with users based on transmission protocols. Additionally, management algorithms are employed on the server side to pro vide access control and \035le management 13 In terms of transparent users on the user side, Meta OS is responsible for remote accessing, OS booting, and executing required apps. OSs and apps can run through lightweight virtualization technologies 12 037e transparent cloud architecture can support heterogeneous terminals, such as PCs, smartphones and embedded and wearable devices. Figure 5 shows an example of heterogeneous terminal support. In this example, a Linux-supported calling service is stored on transparent servers and provided for user access. All OSs and apps stored on the servers are managed by Meta OS. Users need only install the Meta OS on their terminals; services, together with the supported OS \(Linux\, are transported to the ter minals in a bu\036er-enabled block or streaming way As the foundation of transparent computing sys tems, the transparent cloud architecture has attracted signi\035cant attention from both research and industri al communities. Researchers have designed a virtual machine to implement a transparent computing sys tem 15 that lets users enjoy services without needing to worry about technical issues. Based on that, other researchers developed a lightweight virtual machine called LBTC, to implement a transparent computing system that can decrease extra overhead and redirect storage I/O requests to transparent servers 16 Another study has proposed a virtual machine-based network storage system in which heterogeneous OSs and apps can be supported on demand without any modi\035 cation 12 A remote resource management method TMON\as been proposed 17 for transparent com puting, and a virtual machine monitor \(VMM\has been exploited to enable client virtualization and computation with very little overhead, especially in support of graphically intensive apps 18 App pool Hardware Meta OS OS pool Transparent cloud architecture. In cloud computing, both data storage and computing are performed on servers, whereas in transparent computing, data storage happens on servers, but data computing happens on user terminals In the past decade, several studies have focused on transparent computing. Concomitantly, some sys tems based on its underlying concept have been suc cessfully developed and invested for industrialization In 2007, researchers developed a transparent comput ing system for PCs and proposed a novel Meta OS approach for streaming programs named 4VP 10 In 2008, another team proposed a performance model ing and analysis algorithm for the Multi-OS booting process in a transparent computing environment 11 In 2012, researchers developed a virtual machine-based network storage system for a transparent computing platform 12 Since 2007, Intel has embedded UEFI into transparent computing architecture and devel oped many apps based on this combined platform 5,6 According to its definition, we can divide transparent computing\222s eight core technologies into three general ones, namely, transparent cloud architecture \(Figure 3, parts 1 through 6\, Meta OS \(Figure 3, parts 1 through 3\, and client imple mentation \(Figure 3, part 6\, plus two additional technologies \(security, Figure 3, part 7, and perfor mance optimization, Figure 3, part 8\. \037e follow ing subsections describe the three core categories in detail, followed by the additional technologies Virtual apps Meta OS Hardwar e x86, ARM MIPS\205 Server Terminal \(phone, instrumentation manufacturing control equipment wearable devices, and so on Network Virtual OSs User/data management Softwares \(including OS stored at server Apps are run at lightweight terminals Transparent Cloud A rchitecture 11 R epresentative S olutions for I mplementing Transparent Computing 


12   NSAP  As an integral part of Meta OS, NSAP is employed to transmit signals, instructions, and data between transparent servers and users. In 2009, researchers 9 proposed NSAP for transparent computing, to provide reliable data transmission throughout a local area network \(LAN\and realize OSs and other data shared among di\036erent users 037e working procedures of NSAP can be il lustrated as follows. To start, NSAP establishes and maintains communication connections between transparent servers and users. \037en, each user forms a request queue to store his or her service requirements and sends that queue to the servers. Upon receiving  the user\222s request, servers analyze the request queue and  read/write corresponding data from/to the storage  Digital home appliances Calling service PC Phone MID LID Heterogeneous hardware platform Calling service One service Terminal Server MRBP NSAP\205 Meta OS MRBP client\(n Network boot request Image/data transportation User authentication Acquisition of instance OS list Located between the hardware platform and OS Meta OS is responsible for managing hardware and software resources, including OSs, to provide users with secure and reliable computing services. \037e key technologies of Meta OS include kernel distri bution, computing, storage, management separa tion, \223block-\034ow\224 execution, cache, protocol, and virtualization. \037e Meta OS empowers users to se lect their desired services across di\036erent OS plat forms, thus making computers more powerful and convenient. An improvement of Meta OS was pro posed 7 to manage the separation of software and data, which systematically introduces the mecha nisms and algorithms for separating software and user data Meta OS contains three critical components Multi-OS remote booting protocol \(MRBP\, net work service access protocol \(NSAP\, and virtual device, I/O, and resource management  MRBP server\(1 037e function of MRBP is to boot an OS re motely, from transparent servers to users\222 terminals via networks based on a user\222s selection 14 MRBP has two parts: an MRBP client running on the user side, and an MRBP server running on the server side. Figure 6 shows the interaction procedures of the MRBP protocol Some achievements related to MRBP have been proposed in the past decade. In 2003, research ers 19 presented a network-based client booting pro tocol, NCBP, which utilizes an extended dynamic host con\035guration protocol \(DHCP\o obtain a lo cal identi\035er. \037e proposed NCBP can load a batch script language environment based on a secure and active program transport protocol \(APTP\. In 2006 researchers 20 proposed a remote booting mechanism in which the remote booting protocol is based on \035le downloading and can support multi-\035le OS kernel Windows 2000 as well as XP, for example\ooting protocols. Another study 8 proposed a new remote booting protocol, MRBP2, by which di\036erent OSs can be accessed from servers and dynamically execut ed on users\222 terminals. In 2008, researchers 11 designed a closed queuing network model to investigate the per formance of remote booting in transparent computing for workload evaluation. In 2009, a study 21 proposed ENCBP, an extended NCBP for remotely booting multiple OSs, that can improve the performance of remote booting and further enhance security by dif ferentiating the kernel types of loaded OSs Example of heterogeneous terminal support in transparent computing. A Linux-supported calling service is stored on transparent servers and provided for user access. All OSs and apps stored on the servers are managed by Meta OS. Users need only install the Meta OS on their terminals Interaction procedures of Multi-OS remote booting protocol \(MRBP January/February 2017 M eta OS Figure 5 Figure 6 MRBP 


13 TC  serial virtualization  Virtualization differences between VMWare and transparent computing www.computer.org/cise    Vir tual device and I/O management are of signi\035cant importance in transparent computing. In 2007 researchers 26 proposed an I/O management meth od, IOMan, to support multi-OS remote booting and apps running in LAN and to reduce the cost of using and maintaining computer systems. IO Man uses a software solution to set up disk access redirection; it doesn\222t need to modify the booting mechanism of certain commercial OSs, such as Windows, and doesn\222t a\036ect other I/O operations In 2008, researchers 27 proposed an optimal fore cast algorithm and a prefetching strategy to ac celerate I/O processing. In addition, researchers 28  proposed a novel method, Control-Splitted Data Transfer \(CSDT\, to process data transmission requests in transparent computing systems, which can improve the e\033ciency of data transmission In 2012, researchers 12 proposed a virtual ma chine-based network storage system for transparent computing to support heterogeneous OSs and apps After that, they proposed a virtual storage device driver model for transparent computing, TVDSM to support remote loading and running of heteroge neous OSs and apps on heterogeneous platforms 29  A multimedia I/O access control policy for transpar ent computing, the classi\035cation and aggregationbased virtual I/O mechanism \(CAVIO\, was pre sented 30 to enhance multimedia I/O performance In 2014, researchers 31 developed a virtual disk-based cloud computing platform, combining the charac teristics of cloud computing and transparent com puting, to provide heterogeneous services Importantly, virtualization in transparent computing is di\036erent from traditional virtualiza tion technologies \(such as VMWare\. In VMWare virtualization is parallel, while in transparent computing, virtualization is serially implemented from servers to users, which can be more adapted to lightweight terminals. Figure 8 shows the virtu alization di\036erences between VMWare and trans parent computing are shown in Fig. 8 In transparent computing, resource manage ment mainly includes data and user management In 2009, researchers 32 proposed a block-based data consistency method \(BDCM\o solve the data in consistency problem in transparent computing It has a superior performance to normal PCs and similar systems with the same hardware. In 2013 a study 33 proposed a shared resource and service management \(SRSM\cheme, in which heteroge neous resources and services can be dynamically scheduled and accounted on demand. In 2014, a researcher 34 designed a multi-OS booting program for smart terminals in mobile transparent comput ing that completes multi-OS booting by embed ding lightweight system booting programs and Meta OS in smart terminals. In 2015, a team 35 pre sented a new solution to ensure quality of service for resource provisioning in virtualized environments system. Finally, servers send a response, including the required data or services, to the user. In Meta OS NSAP can collaborate with MRBP to complete data transmission and remote booting \(see Figure 7 Some related works have proposed performance improvements for data transmission in transparent computing. One group 22 signi\035cantly improved network \035le system \(NFS\erformance by setting the optimal block size for reading/writing and us ing TCP as an NFS transport protocol. Other re searchers 23 proposed a dynamic trivial \035le transport protocol \(DTFTP\hat\222s based on a cross-layer design to improve data transmission performance and reduce packet loss. By utilizing DTFTP, the transmission rate can increase by 54 percent. Other studies 24,25 proposed an e\033cient multicast group ing mechanism over wireless local area network WLAN\, by which the average system loading time \(average waiting time\an be greatly reduced and user experience can be improved Collaboration of network service access protocol \(NSAP\ and MRBP  Figure 7 V 1 V 1 V i V n VMWare parallel virtualization UEFI \(BIOS Figure 8 Virtual device, I/O, and resource management Meta OS UEFI \(BIOS MetaOS NSAP MRBP  OSs \(Windows Linux\205 OSs \(Windows Linux\205 Server Client 


Differences between HTML 5 and traditional client apps Although transparent computing can provide ad vanced security for transparent users, it\222s still vul nerable to some traditional security risks, such as privileged user access, viruses, malicious attack and data theft. Meanwhile, this new computing paradigm also faces new security challenges 37 in cluding Multi-OS remote booting, virtual disk sharing, centralized security, con\035dentiality, integ rity, and availability. To address the potential secu rity risks in transparent computing systems, several approaches have been proposed One approach provides active protection in Meta OS 38 Because Meta OS is located between the hardware and the OS layer, it can monitor software and user data. We can change the boot ing area of the \035le system and develop secure OS booting and data transmission protocols, such that security can be guaranteed in the OS boot ing process by adding a control and protection module over the original \035le system. Figure 10 describes the location of the control and protec tion module In 2007, researchers 38 proposed a security en hancement for MRBP and MRBP2, called RBIS remote booting integrity service\, to resist attacks by downloading code into the networks. Based on RBIS, transparent computing can guarantee a se cure booting process based on integrity checksum which can also establish credible links from UEFI 035rmware and pass up step-by-step to enhance secu rity. Figure 11 shows the RBIS framework A second approach is to provide virus immu nity via streaming execution. In transparent com puting, all data obtained from transparent servers including software and user data, will be eliminat ed from users\222 terminals after execution, such that viruses have few opportunities to jeopardize those terminals Another approach is to conveniently monitor and manage data streams. In transparent comput ing, monitoring points can be added to I/O devices for inspecting the transmitted data stream. Because data reading and writing can be intercepted by net work interruption, data stream monitoring can en sure data integrity and accuracy \(see Figure 12 In 2010, researchers 37 summarized the secu rity challenges in transparent computing. In 2014, a study 39 proposed the transparent computing security  One of the most important characteristics of trans parent computing is its support of heterogeneous ser vices over heterogeneous terminals. \037erefore, client implementation is critical for transparent computing At the Intel Developer Forum 2012, representa tives for Intel stated that HTML 5 is the preferred technology for achieving client implementation in transparent computing \( http://download.intel.com newsroom/kits/idf/2012_fall/pdfs/IDF2012_Re nee_James.pdf\. In October 2014, based on modi\035 cations to HTML 4 \(standardized in 1997\, the \035fth revision of the HTML standard was proposed by the World Wide Web Consortium \(W3C 36 Compared with the previous versions, HTML 5 possesses the following new characteristics: rich semantic infor mation, client canvas support, client o\032ine storage support, rich multimedia support, cross-document message, and multithread support In transparent computing, HTML 5 is a suit able candidate for client implementation. Com pared with traditional client apps, HTML5 has its own advantages \(see Figure 9\. HTML 5 possesses the advantages of cross-platform support and low development costs. However, browser di\036erences and Web security attacks also pose challenges to the use of HTML 5. In transparent computing, a browser engine can be implemented down to the Meta OS layer, browser di\036erences can be shield ed, and cross-platform streaming execution can be achieved to improve the user experience S ecurity Local resource and system API APP Browser APP shell HTML 5 Implementation APP search Download Install Browser URL HTML parser Us e APP HTML 5 Usage mode Boot sector Master node sector Boot sector Master node sector 205\205 File sector 205\205 File structure in traditional pattern File structure in TC Control and protection module 205\205 File sector 205\205 January/February 2017 Client I mplementation Figure 9 Figure 10 Control and protection module 14   


15 Figure 12 Client CP U Client cach e Transparent Computing for M obile Devices N ew Challenges and Future Directions www.computer.org/cise    Performance optimization is another research fo cus in transparent computing. To improve quality of service and the overall user experience in trans parent computing, existing works mainly optimize system performance from two aspects: bu\036er opti mization and load balancing Bu\036er optimization involves designing bu\036er management algorithms to control the data bu\036ers in both servers and user terminals 41 On the user side, frequently accessed software and user data can be cached to reduce network load, while on the server side, frequently requested OSs, software and user data can be pre-fetched from hard disks into memory with the purpose of reducing the I/O cost. In 2009, researchers 42 proposed a shared storage cache simulator \(SSCS\lgorithm that improves the traditional stack-distance model by developing user management and providing accu rate cache performance analysis. In 2011, a study 43  presented the LRU-AFS algorithm based on the count threshold of data accessing times to increase the hit ratio. In 2012, researchers 44 proposed an optimal cache arrangement policy for transpar ent computing to improve system performance by analyzing workload characteristics and building a queuing model accordingly. In 2013, a team 45 de signed a bu\036er adaptation method for high-speed data transmission. In 2015, researchers 46 proposed a TCCRM cache replacement algorithm, deployed on the server side, to improve the server cache hit rate and reduce the frequency of I/O responses Another method for improving transparent computing performance is to balance the data I/O requests among a cluster of servers. Researchers 47  proposed a dynamic load-balancing algorithm based on transparent computing to share resources among clusters of servers. Another team 48 theoretically for mulated the data scheduling problem in transpar ent computing as a two-stage \034ow shop scheduling problem, which has been proven to be NP-hard Accordingly, the researchers proposed two approxi mation algorithms to reduce the make span of re sponding data requests and theoretically analyzed the upper bounds of the proposed algorithms. Other works focused on developing load-balancing algo rithms to improve energy e\033ciency 49 or investigated and optimized the performance of transparent com puting from other aspects. One team 50 analyzed and evaluated the performance of LongXing Network Computers, which are developed based on transpar ent computing. Another work 51 proposed a simple algorithm to extend the traditional two-hop relay algorithms with delay constraints. Researchers 52 also proposed an enhanced algorithm to provide good performance in transparent computing systems by reducing the number of spurious timeouts and im proving transmission e\033ciency Because of the inherent advantages of the comput ing paradigm, mobile transparent computing of fers a promising way to make mobile devices more powerful, convenient, and secure. However, when applying this computing paradigm to mobile de vices, we face some new challenges caused by new terminals and network environments N ew Challenges Meta OS Transparent client Transparent server RBIS interactive proxy  RBIS management certi\037cate generation and maintenance MRBPserver OS PreOS ICode MRBP client NSAPserver RBIS implementation Con\037guration Startup Integrity checksum layer by laye r Remote booting integrity service \(RBIS\ramework Networ k buf fe r Monitoring point Server cach e Client RA M Serve r ROM Serve r RAM Monitoring and managing data streams Figure 11 architecture \(TCSA\, which empowers users to take the initiative to protect their own data. In addition researchers 40 proposed a provably secure key agree ment protocol using smart cards that\222s based on three-party authentication and can provide highlevel security protection P erformance O ptimization 037e \035rst new challenge is how to support lightweight and energy-constrained mobile user terminals in a transparent computing framework. Generally, desk tops and laptops have more powerful processing  


Medical Big Data Platform Data sharing Software reuse 205\205 Transparent computing Computing at terminal Software stream load Xiangya 1st hospital Xiangya 3rd hospital APP2 APP1 CT Data analysis system Data Software MRI 205 205 In academia, technical issues remain that require further investigation to improve the performance of mobile transparent computing. First, a tailored architecture should be designed for mobile transparent computing to alleviate the challenges caused by new terminals and network environments 037e architecture should be able to jointly leverage the advantages of the transparent computing paradigm and the characteristics of mobile devices and networks to improve the mobile user\222s experience. Moreover because mobile data tra\033c is tremendously hiked by ever-increasing user demands, future research e\036orts should be devoted to achieving high-speed and reliable data communication between transparent terminals and servers. In addition, because mobile devices have become the information hub in our daily lives, user data\227including contextual information capabilities than lightweight mobile terminals, such as mobile phones and wearable devices. \037erefore existing solutions for client implementation and re source management should be carefully improved for resource-limited mobile terminals. In 2013, re searchers 53 proposed a completely cross-platform mobile transparent computing \(CPMTC\ethod that can allocate on-demand resources and services to support various OSs and apps. Energy is a criti cal and unreplenishable resource in battery-powered mobile devices, thus, guaranteeing the battery life of terminals without compromising quality of service is an important and challenging research issue in mobile transparent computing Another challenge is the unstable and costly wireless communication found in the mobile In ternet. Wireless networks are characterized by lowbandwidth, intermittent, and less-reliable trans mission grounds, compared with wired networks When mobile terminals connect to remote trans parent servers to run apps, those apps and their users\222 data would be fully transmitted by unstable wireless communications. Although current wire less technologies, such as 4G and the anticipated 5G technology, might be able to facilitate highspeed data transmission, unstable wireless com munications, caused by temporally and spatially varying wireless radio environments, still pose con siderable challenges in guaranteeing the user expe rience in mobile transparent computing. Latency is another challenge that could have signi\035cantly adverse impacts in terms of energy e\033ciency and the interactive response of transparent computing applications by consuming abundant mobile re sources and increasing transmission delays. More over, costly data tra\033c in the mobile Internet is a problem should also be addressed to encourage mobile transparent computing Last but not least is the challenge of supporting heterogeneous wireless networks and continuous  user mobility while ensuring seamless connec tivity to transparent servers. In mobile transpar ent computing, the integration of heterogeneous wireless networks \(such as Wi-Fi and cellular net works\oses many technical challenges caused by the heterogeneity in di\036erent architectures, access protocols, and user mobility patterns. To address these challenges, it\222s critical to develop an adaptive protocol suit, similar to AdaptNet 43 that can al leviate a plethora of heterogeneity issues, particu larly rate adaptation and congestion control, and facilitate interoperation among various networks Additionally, the integration and interoperation of heterogeneous networks in mobile transparent computing require lightweight, resource- and coste\036ective, sustainable, and user-friendly approaches with optimized performance to address seamless mobility. A mobile user\222s movement out of range from transparent servers would prove fatal to the task being performed unless there are additional resource providers along the user\222s path, so it\222s im portant to maintain seamless connectivity with the least signal tra\033c and latency, to enrich the mobile user\222s experience Xiangya medical big data platform Future R esearch and Development Directions Figure 13 January/February 2017 16   


Transparent terminal provider Chip manufacturer Interface service provider 205 Agriculture Education Stream detector Soil detector Air detector Temperature detector Precision detector Computing center service provider Hardware provider Infrastructure integrator Backbone network service provider Chip manufacturer\205 Transparent application service Industry big data analytics Operating system and infrastructure Internet service provider Third-party payment service providers Network accelerator service provider Information security service provider\205 Internet Industry Some future applications of transparent computing www.computer.org/cise    such as location\227can be leaked, putting user privacy into jeopardy. How to preserve user privacy in the mobile transparent computing framework thus constitutes a critical issue for future study In industry, transparent computing has expe rienced some successful application\227for example China Mobile\222s Aspire Company developed a new type of network operating system based on transpar ent computing, called TNOS. In Changsha, trans parent computing is being applied to help build the Xiangya medical big data platform, which can sup port cross-regional, cross-hospital, and cross-system treatment services, medical information collection and scienti\035c research. In this platform, data and user privacy can be preserved without impacting health data access for mobile users \(see Figure 13 If the challenges of mobile transparent comput ing can be addressed e\036ectively, transparent com puting could create a new industrial chain from heterogeneous mobile and embedded terminals to new infrastructures and services. Figure 14 shows some future transparent computing applications  indicating that that transparent computing-based devices can be developed and deployed for dif ferent data collection and processing tasks. \037ese data can then be transmitted to transparent severs which can also be developed as a big data platform to perform industrial big data analysis Recently, a research team at the Central South University of China released a smart watch, Ti Watch, which is being developed based on the con cept of mobile transparent computing. Because smart watches are usually associated with smart phones, TiWatch uses the associated smartphone as a transparent server while the watch itself acts as a transparent client. \037e data communication between TiWatch and the smartphone is based on Bluetooth 4.1, and the watch\222s data computation is performed on demand in a page-streaming pattern. Based on this computing paradigm, TiWatch can run various apps smoothly with low-cost hardware and greatly improve energy e\033ciency. \037e battery life is report edly longer than one week under normal usage 031 s we step into the IoT era, where lightweight and mobile devices become dominate termi nals in the Internet and our daily life, we\222re gaining Figure 14 17 Aviation Standard TC terminal 


IEEE Trans Services Computing Proc. IEEE CSSS vol 7, 2014, pp. 686\226693 2  Y. Zhang, \223Transparence Computing: Concept Architecture and Example,\224 037is work is supported by the Major Science and Tech nology Research Program for Strategic Emerging In dustry of Hunan \(2012GK4106\, International Science and Technology Cooperation Special Projects of China 2013DFB10070\, Hunan Science and Technology Plan \(2012RS4054\, and Project of Innovation-driv en Plan in Central South University \(2015CXS010 We declare that we have no con\034ict of interests. For information on this article, please email Kehua Guo guokehua@csu.edu.cn R eferences vol. 1 2008, pp. 83\22688 12  Y. Gao, Y. Zhang, and Y. Zhou, \223Building a Virtual Ma chine Based Network Storage System for Transparent Computing,\224 Ubiquitous Intelligence and Computing Proc. IEEE/IFIP EUC Proc. IEEE AINA J. Tsinghua University Science and Technology Proc. IEEE CSIP J. Soft ware Proc. IEEE HPCC Jisuanji Yanjiu yu Fazhan \(Computer Research and Development 2012, pp. 2341\2262344 13  Y. Zhang and Y. Zhou, \223Transparent Computing Spatio-Temporal Extension on Von Neumann Archi tecture for Cloud Services,\224 new opportunities, as well as new challenges, to exploit transparent computing from traditional ter minals to mobile devices. Transparent computing is a promising computing paradigm in the current mobile computing era and will continue to attract increasing attention from both academia and in dustry A cknowledgments  vol. 32, no. 12A, 2004, pp. 169\226173 3  Y. Zhang and Y. Zhou, \223Transparent Computing: A New Paradigm for Pervasive Computing,\224 vol. 1, no. 4, 2012, pp. 312\226328 6  Y. Zhang and Y. Zhou, \223TransOS: A Transparent Com puting Based Operating System for the Cloud,\224  vol. 1, 2008, p. 3 8  H. Yang et al., \223MRBP2: A Transparence Comput ing Based Remote Booting Protocol,\224 vol. 49, no. 1 2009, pp. 106 226109 10  Y. Zhang and Y. Zhou, \2234VP: A Novel Meta OS Approach for Streaming Programs in Ubiquitous Computing,\224 Cengage Learning Asia, 2010 15  G. Xu et al., \223Design and Implementation of a Vir tual Machine-Based Transparent Computing Sys tem,\224  vol. 48, no. 10, 2008, pp. 1675\2261678 16  C. Chen et al., \223Lightweight Virtual Machine-Based Transparent Computing System,\224  vol. 36, no. 11, 2010, pp. 39\22640 17  Y. Gao, Y. Zhang, and Y. Zhou, \223A Remote Resource Management Method for Transparent Computing,\224 vol. 14, no. 3, 2003, pp. 538\226546 20  X. Wang, N. Xia, and H. Yang, \223A Network Stor age Protocol Based Operating System Remote Boot Mechanism,\224 vol. 42 no. 20, 2006, pp. 95\22698 21  W. Li et al., \223ENCBP: An Extended Multi-OSes Remote Booting Method,\224 vol. 46, no. 6, 2009, pp. 905\226912 22  S. Guo, W. Yang, and G. Wang, \223NFS Protocol Performance Analysis and Improvement for Mobile Transparent Computing,\224 2013 pp. 1878\2261883 23  J. Li, \223File Transfer Protocol Research in Mobile Transparent Computing Based on Cross-Layer De sign,\224 master\222s thesis, Central South Univ., 2014 24  H. Yin, W. Yang, and G. Wang, \223Wireless Multicast for Mobile Transparent Computing,\224 2013, pp. 1884\2261889 25  H. Yin, \223Wireless Multicast for Mobile Transparent Computing in WLANs,\224 master\222s thesis, Central South Univ., 2014 26  N. Xia et al., \223IOMan: An I/O Management Meth od Supporting Multi-OS Remote Boot and Run ning,\224 vol. 44, no. 2, 2007, pp. 317\226325 Int\222 l J Cloud Computing January/February 2017 vol. 7, no. 1, 2014, pp. 40\22653 5  M. Wu, \223Analysis and a Case Study of Transpar ent Computing Implementation with UEFI,\224 vol. 1, no. 4, 20121, pp. 287\226301 7  Y. Zhang, \223\037e Challenges and Opportunities in Transparent Computing,\224 vol. 27, no. 9, 2006, pp. 1657\2261660 9  W. Kuang et al., \223NSAP: A Network Storage Access Protocol for Transparent Computing,\224 Computer Eng. & Applications Proc. IEEE HPCC Int\222 l J Cloud Computing J. Chinese Com puter Systems J. Computer Research and Development 2007, pp. 394\226403 11  G. Guo et al., \223Performance Modeling and Analy sis of the Booting Process in a Transparent Com puting Environment,\224 2012, pp. 1378\2261381 18  Y. Zhou, \223Transparent Computing: From Concept to Implementation,\224 1  R. Branch et al., \223Cloud Computing and Big Data A Review of Current Service Models and Hardware Perspectives,\224 J. Software Eng. and Applications Proc. IEEE FGCN Proc. IEEE ITME J. Tsinghua University Sci ence and Technology J. Tsinghua University Science and Technology 18   Acta Electronica Sinica Computer Eng vol. 1, 2012, p. 5 19  Y. Zhou, Y. Zhang, and Y. Wang, \223A Customizable Boot Protocol for Network Computing,\224 Springer, 2006, pp. 1\22611 4  Y. Zhou et al., \223A Bare-Metal and Asymmetric Parti tioning Approach to Client Virtualization,\224 vol. 18, no. 1, 2013, pp. 10\22621 14  Y. Zhou and Y. Zhang Transparent Computing Concepts, Architecture, and Implementation 


vol. 40, no. 3 2013, pp. 93\22698 31  Y. Zhou et al., \223TransCom: A Virtual Disk-Based Cloud Computing Platform for Heterogeneous Ser vices,\224 vol. 49, no 10, 2009, pp. 1721\2261724 33  Y. Xiong, S. Huang, and M. Wu, \223Shared Resource and Service Management for Mobile Transparent Com puting,\224 27  H. Tan, Y. Wang, and J. Sim, \223A Dynamic Rebuild Strategy of Multi-Host System Volume on Trans parence Computing Mode,\224 Proc. IEEE HPCC Proc. Int\222 l Conf. Com puting, Networking and Communications J. Tsinghua University Science and Technology Proc. IEEE HPCC vol 8, no. 2, 2010, pp. 203\226217 38  W. Kuang et al., \223RBIS: Security Enhancement for MRBP and MRBP2 Using Integrity Check,\224 19 2014  pp. 216\226220 40  H. Yang et al., \223Provably Secure \037ree-Party Authen ticated Key Agreement Protocol Using Smart Cards,\224 www.computer.org/cise    vol. 58, no. 1, 2014, p. 2938 41  Y. Fang et al., \223On Delivery Delay-Constrained 037roughput and End-to-End Delay in MANETs,\224 Yaoxue Zhang 2013, pp. 1846\2261853 34  S. Guo, \223Multi-OS Boot for Smart Terminals and Its Performance Analysis and Optimization in Mo bile Transparent Computing,\224 master\222s thesis, Cen tral South University, 2014 35  J. Liu et al., \223Aggressive Resource Provisioning for Ensuring QoS in Virtualized Environments,\224 Proc. IEEE HPCC Computer Eng Proc. IEEE HPCC Computer Eng Proc. IEEE HPCC Proc. IEEE HPCC IEEE Trans. Cloud Computing Com puter Eng J. Chinese Computer Systems Kehua Guo Comm. ACM Computer Networks J. Tsinghua University Science and Technology IEEE Trans. Network & Service Management Web Intelligence & Agent Systems Computer Eng. and Applica tions 42  L. Wei, Y. Zhang, and Y. Zhou, \223Simulation Analy sis and Validation of Cache Performance in Trans Com Systems,\224 is a fellow of the Chinese Academy of Engineering and a professor in computer science and technology at Central South University, China. His research areas include computer networking, operating systems, ubiquitous/pervasive computing, transparent computing, and active services. Zhang received a PhD in computer networking from Tohoku University. Contact  him at zxy@csu.edu.cn is an associate professor in the School of  Information Science and Engineering, Central South  2008, pp. 981\226986 28  G. Xu, W. Kuang, and Y. Zhou, \223CSDT: Method for Data Transfer between Client Devices of Trans parent Computing Systems,\224 vol 34, no. 17, 2008, pp. 1\2263 29  Y. Gao, Y. Zhang, and Y. Zhou, \223TVSDM: A Vir tual Storage Device Driver Model for Transparent Computing,\224 vol. 53, no. 7, 2013, pp. 1064\2261068 30  Y. Gao, Y. Zhang, and Y. Zhou, \223A Multimedia I/O Access Control Policy for Transparent Computing,\224  vol. 11, no. 1, 2014, pp. 46\22659 32  G. Guo and Y. Zhou, \223Block-Based Data Consis tency Method for Transparent Computing,\224 vol. 3, no. 1, 2014, p. 1 36  G. Anthes, \223HTML5 Leads a Web Revolution,\224 vol. 55, no. 7, 2012, pp. 16\22617 37  Y. Zhang et al., \223Information Security Underly ing Transparent Computing: Impacts, Visions and Challenges,\224 2014, pp. 456\226463 vol. 49, no. 10, 2009, pp. 1700\2261703 43  C. Tan et al., \223Transparent Computing System Based on Hierarchical Cache,\224 vol 37, no. 5, 2011, pp. 270\226272 44  Y. Gao, Y. Zhang, and Y. Zhou, \223Performance Anal ysis of Virtual Disk System for Transparent Com puting,\224 2012, pp. 470\226477 45  H. Liu et al., \223Receiving Bu\036er Adaptation for High-Speed Data Transfer,\224 vol. 62, no. 11, 2013, pp. 2278\2262291 46  Y. Xu, \223Optimization of Transparent Computing System Based on Virtualization,\224 master\222s thesis Central South University, 2015 47  H. Yang et al., \223A Dynamic Load Balancing Algo rithm Based on Transparence Computing,\224 vol. 32, no. 13, 2006, pp. 133\226135 48  J. Ren, Y. Zhang, and J. Chen, \223Analysis on the Scheduling Problem in Transparent Computing,\224 vol. 41, no. 17, 2005, pp. 19\22621 51  Y. Fang et al., \223A Delay Constrained Two-Hop Re lay Algorithm for Transparent Computing in MA NETs,\224 2013, pp. 2337\2262341 52  X. Wang, N. Xia, and L. Wei, \223RTO Algorithm for Transparent Computing Systems,\224 vol. 47, no. 10, 2007 pp. 1696 2261699 53  W. Liang, Y. Xiong, and M. Wu, \223A Cross Platform Computing Method and Its Application for Mobile Device in Transparent Computing,\224 2013, pp. 1838\2261845 2013, pp. 1832\2261837 49  D. Zhang et al., \223Leveraging the Tail Time for Saving Energy in Cellular Networks,\224 IEEE Trans. Mobile Computing Proc. IEEE UIC/ATC J. Tsin ghua University Science and Technology J. Tsinghua Uni versity Science and Technology vol. 13, no. 7, 2014  pp. 1536 2261549 50  G. Guo, Y. Zhang, and W. Li, \223Performance Report of Longxing Network Computer Based on Trans parent Computing,\224 J. Hunan University Natural Sciences IEEE Trans. Comput ers vol. 28, no. 2, 2007, pp. 251\226254 39  G. Wang et al., \223Security from the Transpar ent Computing Aspect,\224 


20   Read your subscriptions through the myCS publications portal at Marian Anderson: Sr. Advertising Coordinator Email: manderson@computer.org Phone: +1 714 816 2139 | Fax: +1 714 821 4010 Sandy Brown: Sr. Business Development Mgr Email sbrown@computer.org Phone: +1 714 816 2144 | Fax: +1 714 821 4010 Advertising Sales Representatives \(display Central, Northwest, Far East  Eric Kincaid Email: e.kincaid@computer.org Phone: +1 214 673 3742 Fax: +1 888 886 8599 Northeast, Midwest, Europe, Middle East  Ann & David Schissler Email: a.schissler@computer.org, d.schissler@computer.org Phone: +1 508 394 4026 Fax: +1 508 394 1707 Jianxin Wang Jianer Chen Southwest, California  Mike Hughes Email: mikehughes@computer.org Phone: +1 805 529 6790 Southeast  Heather Buonadies Email: h.buonadies@computer.org Phone: +1 973 304 4123 Fax: +1 973 585 7071  Ju Ren is the vice dean and a professor in the School of Information Science and Engineering, Cen tral South University. His research interests include algorithm analysis and optimization, parameterized algorithm, and computer networks. Wang a PhD in computer science from Central South University, China He\222s a senior member of IEEE. Contact him at jxwang csu.edu.cn University. His research interests include social com puting, ubiquitous computing, big data, and image retrieval. Guo received a PhD in computer science and technology from the Nanjing University of Science and Technology. Contact him at guokehua@csu.edu.cn is a professor of computer science at Tex as A&M University and Central South University in Changsha, China. His research is centered on computer algorithms and their applications. Chen received a PhD in computer science from Courant Institute of New York University and in mathematics from Columbia University. Contact him at jianer@csu.edu.cn is a PhD candidate in the Department of Com puter Science at Central South University, China. His research interests include wireless sensor network, mo bile sensing/computing, and cloud computing. Ren re ceived an MS in computer science from Central South University, China. Contact him at ren_ju@csu.edu.cn Yuezhi Zhou January/February 2017 http mycs.computer.org Advertising Personnel Heather Buonadies Email: h.buonadies@computer.org Phone: +1 973 304 4123 Fax: +1 973 585 7071 Advertising Sales Representatives \(Jobs Board Heather Buonadies Email: h.buonadies@computer.org Phone: +1 973 304 4123 Fax: +1 973 585 7071 ADVERTISER INFORMATION is an associate professor in the Department of Computer Science at Tsinghua University, China. His research interests include cloud computing, distributed systems, mobile devices, and systems. Zhou received a PhD in computer science and technology from Tsing hua University, China. He received the IEEE Best Paper Award at the IEEE AINA International Conference in 2007. He\222s a member of IEEE and ACM. Contact him at zhouyz@mail.tsinghua.edu.cn 


S Yang et al  Semantic Inference on Clinical Documents Combining Machine Learning Algorithms With an Inference Engine  TABLE 7 Comparison of different classifiers used in CDTS and determine the one whose symptoms are the closest to those of the new patient at this stage and its corresponding treatment strategy is hereby applied to the patient at this stage It is of note that the treatment phase numbers of the old and new medical records might not be the same in this case Afterward the treatment phase number for the new patient is adjusted to the historical medical record's next treatment phase number Repeat Rule1 until the patient fully recovers For example a dataset  will be established when the symptoms of a new patient in the third phase do not match the historical records at the same time point Then we go through all of the records again and if any two phases of one historical record share similar symptoms with the 034rst two phases of the new patient it will be kept in   Given that any historically successful treatment 021 has m treatment phases on average the comparison procedure will be conducted C 2 m D m\050m 000 1\051  2 times at most If there are n cases then the time complexity is O\050n 003 m 2 051 This method is used to capture extended similar historical cases After the establishment of   all of the phases of the cases in  are compared with the third phase of the new patient treatment on the symptoms to 034nd the most similar one with the maximum rank at the similarity measurement matrix   which determines the treatment strategy for the new patient at the third phase C RESULTS AND ANALYSIS To enlarge the training dataset we randomly resample the dataset 1000 times without replacement by using the 034lter Resample in Weka In Table 7 iOVFDT constructs the smallest tree model compared with the other three classi\034ers in terms of the nodes leaves and depth HT and HAT also perform well in the construction of a nice tree model with 97 and 116 nodes 50 and 58 leaves and 21 and 23 depths respectively HOT has the largest tree size with more nodes and leaves which implies training dataset over\034tting As shown in Figs 8 and 9 Hoeffding-based tree classi\034ers have better performance compared to iOVFDT in terms of the classi\034cation correctness 050i.e accuracy\051 and kappa statistic 050i.e stability\051 With continuous incoming instances the accuracy and stability of Hoeffding-based tree classi\034ers rise with some 035uctuation while the performance of iOVFDT is kept at a horizontal level Similar to HAT the voted ensemble FIGURE 8 Comparison of classification correctness FIGURE 9 Comparison of the Kappa statistic FIGURE 10 Comparison of the evaluation time of the CPU multi-classi\034cation algorithm 050VEMCA\051 also performs well in terms of accuracy and stability and outperforms HAT when the number of instances is larger than 340000 Figs 10 and 11 compare the evaluation time of the CPU and the memory cost of the 034ve classi\034cation algorithms iOVFDT shows the fastest speed and the smallest memory cost among the 034ve classi\034cation algorithms HT gives better performance than HAT and HOT with 6.93 seconds in CPU occupation and a 0.91-Mb memory cost VEMCA's evaluation time and memory are 20.73 seconds and 1.62 Mb respectively VOLUME 5 2017 3543 


S Yang et al  Semantic Inference on Clinical Documents Combining Machine Learning Algorithms With an Inference Engine  FIGURE 11 Comparison of the memory cost VIII CONCLUSIONS Modern techniques such as CDSS and HIS have substantially facilitated clinical diagnosis and treatment However some of the emergent problems remain to be considered The 034rst problem is challenging the traditional data analysis techniques due to rapidly increasing amounts of multidimensional clinical data The second is the dif\034culty of clinical information integration Clinical information from different contexts are heterogeneous in terms of structure and semantics For the bene\034t of patients and long-term clinical development it is very promising to integrate clinical information 050e.g outpatients medical records\051 from different clinicians or hospitals to assist in clinical decision-making The third problem is the call for personalized medicine and professional medical treatment because different doctors or hospitals are good at diagnosing and treating different diseases and the patients have the freedom to choose among them To solve the three problems above this paper proposes a clinical diagnosis and treatment system 050CDTS\051 that assists patients in choosing clinicians or hospitals according to their requirements 050e.g distance from home to hospital\051 The foundation for disease detection in CDTS consists of decision trees that are created by our voted ensemble multiclassi\034cation algorithm that enables decision-tree-based data stream mining Furthermore to integrate clinical documents and heterogeneous health information systems a new clinical tabular document model is proposed which represents clinical documents in tabular format and maintains consistent vocabulary terms and semantic relations among different contexts through the term chain and semantic relation chain Additionally a novel semantic inference algorithm is designed for disease detection and treatment suggestion based on the rules that are generated by decision trees and similarity computations among medical records The contribution of this paper can be summarized as follows 342 A uni\034ed clinical tabular document model 050CTDM\051 implemented by a new clinical tabular document language 050DocLang XML based\051 facilitates the interoperability among different clinical decision support systems 050CDSS\051 342 A new voted ensemble multi-classi\034cation algorithm is proposed in terms of running multiple decision treebased classi\034cation algorithms simultaneously on the same data stream and voting for the best output The results are associated with statistical information on the accuracy of classi\034cation which provides proof of optimization 342 A novel clinical diagnosis and treatment system with a newly designed semantic inference algorithm supports clinicians in the decision making process as well as saving time and expense for the patients For future work it is necessary to expand DocLang to become a more comprehensive markup language by importing more semantic relation types for more complex clinical documents These studies are in progress and are expected to present valuable results later REFERENCES   M A Makary and M Daniel Medical error\026The third leading cause of death in the US BMJ  vol 353 p i2139 May 2016   D Kopec M H Kabir D Reinharth O Rothschild and J A Castiglione Human errors in medical practice Systematic classi\034cation and reduction with automated information systems J Med Syst  vol 27 no 4 pp 297\025313 Aug 2003   L T Kohn J M Corrigan and M S Donaldson Eds To Err is Human Building a Safer Health System  Washington DC USA National Academy Press 2000   D W Bates et al  The Costs of adverse drug events in hospitalized patients JAMA  vol 277 no 4 pp 307\025311 1997   H Singh et al  Types and origins of diagnostic errors in primary care settings JAMA Internal Med  vol 173 no 6 pp 418\025425 Mar 2013   W Rogers B Ryack and G Moeller Computer-aided medical diagnosis Literature review Int J Biomed Comput  vol 10 no 4 pp 267\025289 Aug 1979   D Kopec and D Michie Mismatch Between Machine Representations and Human Concepts Dangers and Remedies  Brussels Belgium Forecasting and Assessment in Science and Technology 1992   D Wallace and D R Kuhn Software quality lessons from medical device failure data U.S Dept Commerce Technol Admin Nat Inst Standards Technol Gaithersburg MD USA Tech Rep NISTIR 6407 1999   D L Bates et al  Effect of computerized physician order entry and a team intervention on prevention of serious medication errors JAMA  vol 280 no 15 pp 1311\0251316 1998   W G Baxt Application of arti\034cial neural networks to clinical medicine Lancet  vol 346 pp 1135\0251138 Oct 1995   M S Hossain Cloud-supported cyber\025physical localization framework for patients monitoring IEEE Syst J  to be published A v ailable http://dx.doi.org/10.1109/JSYST.2015.2470644   E S Berner Ed Clinical Decision Support Systems Theory and Practice  2nd ed New York NY USA Springer 2007 pp 3\02522   B Rothman J C Leonard and M M Vigoda Future of electronic health records Implications for decision support Mount Sinai J Med  vol 79 no 6 pp 757\025768 2012   M H Trivedi et al  Barriers to implementation of a computerized decision support system for depression An observational report on lessons learned in real world clinical settings BMC Med Inform Decision Making  vol 9 p 6 Jan 2009   C S\341ez A Bres\363 J Vicente M Robles and J M Garc\355a-G\363mez An HL7-CDA wrapper for facilitating semantic interoperability to rule-based clinical decision support systems Comput Methods Programs Biomed  vol 109 no 3 pp 239\025249 Mar 2013   B Rothman J C Leonard and M M Vigoda Future of electronic health records Implications for decision support Mount Sinai J Med J Transl Person Med  vol 79 no 6 pp 757\025768 Nov./Dec 2012   J Gholap V P Janeja and Y Yesha Uni\034ed framework for clinical data analytics 050U-CDA\051 in Proc IEEE Int Conf Big Data 050Big Data\051  Oct./Nov 2015 pp 2939\0252941 3544 VOLUME 5 2017 


S Yang et al  Semantic Inference on Clinical Documents Combining Machine Learning Algorithms With an Inference Engine    S Hussain and S Lee Semantic transformation model for clinical documents in big data to support healthcare analytics in Proc 10th Int Conf Digit Inf Manage 050ICDIM\051  Oct 2015 pp 99\025102   M Herland T M Khoshgoftaar and R Wald Survey of clinical data mining applications on big data in health informatics in Proc 12th Int Conf Mach Learn Appl 050ICMLA\051  vol 2 Dec 2013 pp 465\025472   A Bifet and R Gavald\340 Adaptive learning from evolving data streams in Proc Int Symp Intell Data Anal  Aug 2009 pp 249\025260   R J Quinlan C4.5 Programs for Machine Learning 050Morgan Kaufmann Series in Machine Learning\051 San Mateo CA USA Morgan Kaufmann Jan 1993   L Breiman J Friedman R Olshen and C Stone Classi\034cation and Regression Trees  Monterey CA USA Wadsworth 1994   P Domingos and G Hulten Mining high-speed data streams in Proc 6th ACM SIGKDD Int Conf Knowl Discovery Data Mining  Aug 2000 pp 71\02580   N Oza and S Russell Online bagging and boosting in Arti\034cial Intelligence and Statistics  San Mateo CA USA Morgan Kaufmann 2001 pp 105\025112   A Bifet G Holmes B Pfahringer R Kirkby and R Gavalda New ensemble methods for evolving data streams in Proc 15th ACM SIGKDD Int Conf Knowl Discovery Data Mining 050KDD\051  New York NY USA 2009 pp 139\025147   E Ocampo M Maceiras S Herrera C Maurente D Rodr\355guez and M A Sicilia Comparing Bayesian inference and case-based reasoning as support techniques in the diagnosis of acute bacterial meningitis Expert Syst Appl  vol 38 no 8 pp 10343\02510354 2011   I Watson Applying Case-Based Reasoning Techniques for Enterprise Systems  San Mateo CA USA Morgan Kaufmann 1997   L OtavioAlvares Racioc\355nio Baseadoem Casos in Inform\341tica UFRGS  2006 A v ailable http://www inf.ufsc.br 030 luis.alvares INE5633/RaciocinioBC.pdf   A Aamodt and E Plaza Case-based reasoning Foundational issues methodological variations and system approaches AI Commun  vol 7 no 1 pp 39\02559 2004   R L De Mantaras et al  Retrieval reuse revision and retention in casebased reasoning Knowl Eng Rev  vol 20 no 3 pp 215\025240 2005   J Kolodner Case-Based Reasoning  San Mateo CA USA Morgan Kaufmann 1993   S K Pal and S C K Shiu Foundations of Soft Case-Based Reasoning  Hoboken NJ USA Wiley 2004   T Cerquitelli S Chiusano and X Xiao Exploiting clustering algorithms in a multiple-level fashion A comparative study in the medical care scenario Expert Syst Appl  vol 55 pp 297\025312 Aug 2016   M Ben Alaya S Medjiah T Monteil and K Drira Toward semantic interoperability in one M2M architecture IEEE Commun Mag  vol 53 no 12 pp 35\02541 Dec 2015   I Lemmens J P Koster and S Valera Achieving interoperability at semantic level in On the Move to Meaningful Internet Systems 050Lecture Notes in Computer Science\051 vol 9416 I Ciuciu et al  Eds Cham Switzerland Springer 2015   A O Shigarov Table understanding using a rule engine Expert Syst Appl  vol 42 no 2 pp 929\025937 2015   G Xiao Semantic document exchange for electronic business through user-autonomous document sense-making Ph.D dissertation Univ Macau Zhuhai China 2015   S Yang and J Guo A multi-viewed document representation for semantic document exchange in Proc IEEE 12th Int Conf e-Bus Eng 050ICEBE\051  Oct 2015 pp 154\025159   A M Namboodiri and A K Jain Document structure and layout analysis in Digital Document Processing  London U.K Springer 2007 pp 29\02548   A K Jain and B Yu Document representation and its application to page decomposition IEEE Trans Pattern Anal Mach Intell  vol 20 no 3 pp 294\025308 Mar 1998   J Guo Collaborative conceptualisation Towards a conceptual foundation of interoperable electronic product catalogue system design Enterprise Inf Syst  vol 3 no 1 pp 59\02594 2009   S Nam S Lee J G B Kim and H G Kim STEP An ontology-based smart clinical document template editing and production system Expert Syst Appl  vol 41 no 6 pp 3005\0253015 2014   Z Gong M Muyeba and J Guo Business information query expansion through semantic network Enterprise Inf Syst  vol 4 no 1 pp 1\02522 2010   J Guo L Xu Z Gong C P Che and S S Chaudhry Semantic inference on heterogeneous e-marketplace activities IEEE Trans Syst Man Cybern A Syst Humans  vol 42 no 2 pp 316\025330 Mar 2012   C S G Khoo and J.-C Na Semantic relations in information science Annu Rev Inf Sci Technol  vol 40 no 1 p 157 2006   G Hulten and L Spencer PedroDomingos Mining time-changing data streams in Proc ACM SIGKDD Int Conf Knowl Discovery Data Mining  2001 pp 97\025106   I H Witten and E Frank Data Mining Practical Machine Learning Tools and Techniques  San Mateo CA USA Morgan Kaufmann 2005   A Bifet Adaptive learning and mining for data streams and frequent patterns ACM SIGKDD Explorations Newslett  vol 11 no 1 pp 55\02556 2009   B Pfahringer G Holmes and R Kirkby New options for hoeffding trees in Proc AI  2007 pp 90\02599   B Pfahringer G Holmes and R Kirkby New options for hoeffding trees in Proc Austral Joint Conf Artif Intell  Dec 2007 pp 90\02599   H Yang and S Fong Incrementally optimized decision tree for noisy big data in Proc 1st Int Workshop Big Data Streams Heterogeneous Source Mining Algorithms Syst Program Models Appl  Aug 2012 pp 36\02544   W N Street and Y Kim A streaming ensemble algorithm 050SEA\051 for large-scale classi\034cation in Proc 7th ACM SIGKDD Int Conf Knowl Discovery Data Mining  Aug 2001 pp 377\025382  Cancer Data Access System of American National Cancer Institute  accessed on May 25 2016 A v ailable https://biometry  nci.nih.gov/cdas   S Tsumoto Automated extraction of hierarchical decision rules from clinical databases using rough set model Expert Syst Appl  vol 24 no 2 pp 189\025197 2003   S Yang and J Guo A novel approach for cross-context document reasoning in e-commerce in Proc 6th IEEE Int Conf Softw Eng Service Sci 050ICSESS\051  Sep 2015 pp 1018\0251025   J Guo SDF A sign description framework for cross-context information resource representation and interchange in Proc Enterprise Syst Conf 050ES\051  Aug 2014 pp 255\025260   Y Zhang M Chen D Huang D Wu and Y Li iDoctor Personalized and professionalized medical recommendations based on hybrid matrix factorization Future Generat Comput Syst  vol 66 pp 30\02535 Jan 2016   Y Zhang D Zhang M M Hassan A Alamri and L Peng CADRE Cloud-assisted drug recommendation service for online pharmacies Mobile Netw Appl  vol 20 no 3 pp 348\025355 2015   M Chen Y Ma J Song C.-F Lai and B Hu Smart clothing Connecting human with clouds and big data for sustainable health monitoring Mobile Netw Appl  vol 21 no 5 pp 825\025845 2016   M Chen NDNC-BAN Supporting rich media healthcare services via named data networking in cloud-assisted wireless body area networks Inf Sci  vol 284 pp 142\025156 Nov 2014   J Wan C Zou S Ullah C.-F Lai M Zhou and X Wang Cloud-enabled wireless body area networks for pervasive healthcare IEEE Netw  vol 27 no 5 pp 56\02561 Sep./Oct 2013   X Chen L Wang J Ding and N Thomas Patient 035ow scheduling and capacity planning in a smart hospital environment IEEE Access  vol 4 pp 135\025148 2016 SHUO YANG 050M'15\051 received the master's degree in software engineering from Dalian Jiaotong University Dalian China in 2013 He is currently pursuing the Ph.D degree in E-commerce technology with the Department of Computer and Information Science University of Macau His research interests include document engineering and semantic inference mainly applied to the 034eld of E-commerce E-marketplace and clinical area VOLUME 5 2017 3545 


S Yang et al  Semantic Inference on Clinical Documents Combining Machine Learning Algorithms With an Inference Engine  RAN WEI received the master's degree in pharmaceutical engineering from the New Jersey Institute of Technology Newark NJ USA in 2011 He is currently pursuing the Ph.D degree in biomedical sciences with the Department of Microbiology Rutgers University Newark His research interest focuses on the quantitative analysis of epigenetic pathways in vitamin D-regulated lung immune responses JINGZHI GUO 050M'05\051 received the the B.Econ degree in international business management from the University of International Business and Economics Beijing China in 1988 the M.Sc degree in computation from The University of Manchester Manchester U.K in 2010 and the Ph.D degree in internet computing and e-commerce from Grif\034th University Brisbane Australia in 2005 He is currently an Associate Professor in eCommerce Technology with the University of Macau Macau China His research interests include concept representation semantic integration and collaboration systems mainly applied to the 034elds of e-commerce e-marketplace e-banking and the virtual world LIDA XU 050M'86\025SM'11\051 is currently an Academician of the Russian Academy of Engineering He was recognized as a Highly Cited Researcher by Thomson Reuters 050Clarivate\051 in 2016 3546 VOLUME 5 2017 


This article has been accepted for inclusion in a future issue of this j\ournal. Content is final as presented, with the exception of pagination EEE   19 S Gong Cheng om Xidian  in 2007 and the M.S. and technical  3   He is currently an Associate Professor with Northwestern Polytechnical University. His main research interests are computer vision and pat tern recognition ei Han ently techni ch The ersity cher at the Uni His omputer vision, multi and brain imaging analysis. He es such as IEEE T C t T IONS  ON P A t t T ERN  A A YSIS  AND M CHINE  I I N t T ELLIGENCE AMI I I N t T ER NA t T IONAL J OURNAL  OF  C C O m p MP U t T ER V ISION V T C t T IONS  ON  I I m M GE P SSING  TIP C C ONFERENCE  ON  C C O m p MP U t T ER V ISION  AND P A t t T ERN  R R OGNI t T ION VPR I I N t T ERNA t T IONAL  C C ONFERENCE  ON  C C O m p MP U t T ER V ISION V I I N t T ERNA t T IONAL J OIN t T  C C ONFER ENCE  ON  A A R t T IFICIAL  I I N t T ELLIGENCE IJCAI Prof. Han is an Associate Editor of the I E E E IEEE T RANSAC t T IONS  ON  H H U m M AN M ACHINE  S S YS t T E m M S  Neurocomputing   Processing and Machine Vision and Applications  u ently f  tor ests include emote sensing om e eas  international journal, including Neurocomputing Elsevier Cognitive  Computation Springer International Journal of Image and Graphics  World of Scientific 


