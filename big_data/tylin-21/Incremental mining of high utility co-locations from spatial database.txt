215 
 


 216 
 


217 
 


218 
 


219 
 


220 
 


 221  
 


222 
 


Dan Tao et al Load Feedback-Based Resource Scheduling and Dynamic Migration-Based Data Locality for    157 Fig 10 The load averages of multiple physical hosts in the DHCI architecture 70  as a threshold Similarly when the load average exceeds this threshold the workload of the physical host is regarded as severe This striking trend in Fig 7 shows that when a physical host's workload rises and exceeds the preset threshold other physical hosts in the same virtual cluster will take part in workload balancing and thus improve the ef\002ciency Figures 9 and 10 give the performance parameters CPU utility rate CPU for short as well as the load average LA for short of 4 physical hosts during a period of 14 minutes for two different architectures We take their averages for each physical host respectively as illustrated in Figs 11 and 12 Then we calculate their variances to re\003ect the 003uctuations in workload of multiple physical hosts The variance of CPU utility rate in the traditional Hadoop cluster and the DHCI architecture are 0.196 and 0.1 respectively The ef\002ciency of the cluster load balance in the DHCI architecture is superior to that in the traditional Hadoop cluster From the perspective of load average the similar conclusion can be drawn 4.4 Test on data locality optimization To verify the effectiveness of the data locality optimization strategy we also use the benchmark Fig 11 Average CPU utility rate of each physical host in the two architectures Fig 12 Average load average of each physical host in the two architectures test cases namely WordCount TeraSort and Sort with 2 GB data volume The data in Fig 13 shows the difference in testing data from the DHCI architecture with and without data locality optimization respectively We can conclude that the time taken to execute these tasks with data locality optimization is less than that without data locality optimization while under the same data volume condition 5 Conclusion In this study we designed a novel dynamic Hadoop cluster IaaS architecture by introducing the following four modules monitoring scheduling VM management and VM migration modules In particular we proposed resource scheduling and data locality solutions We assessed the ef\002ciency of our solutions on the aforementioned virtual Hadoop cluster Convincing experimental results show that our solutions can effectively balance the load and improve system performance Acknowledgment This work was supported by the Open Project Program Fig 13 Comparison of running time in the DHCI architecture with and without data locality optimization 


158 Tsinghua Science and Technology April 2017 22\0502\051 149\226159 of Jiangsu High Technology Research Key Laboratory for Wireless Sensor Networks 050No WSNLBKF201503\051 the Fundamental Research Funds for the Central Universities 050No 2016JBM011\051 Fundamental Research Funds for the Central Universities 050No 2014ZD03-03\051 the Priority Academic Program Development of Jiangsu Higher Education Institutions and Jiangsu Collaborative Innovation Center on Atmospheric Environment and Equipment Technology References   L Z Wang J Tao H Marten A Streit S U Khan J Kolodziej and D Chen MapReduce across distributed clusters for data-intensive applications in IEEE 26th International Parallel and Distributed Processing Symposium Workshops and PhD Forum  Shanghai China 2012 pp 2004\2262011   M Armbrust A Fox R Grif\002th and M Zaharia A view of cloud computing Communications of the ACM  vol 53 no 4 pp 50\22658 2010   H Kang Y Chen J L Wong R Sion and J Wu Enhancement of Xen's scheduler for MapReduce workloads in Proceedings of the 20th International ACM Conference on High Performance Distributed Computing  New York NY USA 2011 pp 251\226262   T Sandholm and K Lai Dynamic proportional share scheduling in Hadoop in Proceedings of the 15th International Conference on Job Scheduling Strategies for Parallel Processing  Springer-Verlag 2010 pp 110\226131   B Sharma R Prabhakar S H Lim M T Kandemir and C R Das MROrchestrator A 002ne-grained resource orchestration framework for MapReduce clusters in IEEE 5th International Conference on Cloud Computing  Hawaii HI USA 2012 pp 1\2268   P Lama and X Zhou AROMA Automated resource allocation and con\002guration of MapReduce environment in the cloud in Proceedings of the 9th International Conference on Autonomic Computing  2012   L Y Zuo Z B Cao and S B Dong Virtual resource evaluation model based on entropy optimized and dynamic weighted in cloud computing 050in Chinese\051 Journal of Software  vol 24 no 8 pp 1937\2261946 2013   Q Liu W D Cai J Shen Z J Fu X D Liu and N Linge A speculative approach to spatialtemporal ef\002ciency with multi-objective optimization in a heterogeneous cloud environment Security and Communication Networks  vol 9 no 17 pp 4002\2264012 2016   M Zaharia D Borthakur J Sarma K Elmeleegy S Shenkeret and I Stoica Delay scheduling A simple technique for achieving locality and fairness in cluster scheduling in Proceedings of the 5th European Conference on Computer Systems  ACM 2010 pp 265\226278   H Jin X Yang X H Sun and I Raicu ADAPT Availability-aware MapReduce data placement for nondedicated distributed computing in IEEE International Conference on Distributed Computing Systems  Macau China 2012 pp 516\226525   A F Thaha M Singh A H M Amin N M Ahmad and S Kannan Hadoop in OpenStack Data-location-aware cluster provisioning in IEEE the 4th World Congress on Information and Communication Technologies  2014 pp 296\226301   Z Fadika and M Govindaraju DELMA Dynamically elastic MapReduce framework for CPU-intensive applications in The 11th IEEE/ACM International Symposium on Cluster Cloud and Grid Computing  2011 pp 454\226463   Y Kong M J Zhang and D Y Ye A belief propagationbased method for task allocation in open and dynamic cloud environments Knowledge-based Systems  vol 115 pp 123\226132 2016   C L Cheng J Li and Y Wang An energy-saving task scheduling strategy based on vacation queuing theory in cloud computing Tsinghua Science and Technology  vol 20 no 1 pp 28\22639 2015   R Q Sun J Y Yang Z Gao and Z Q He A virtual machine based task scheduling approach to improve data locality for virtualized Hadoop in IEEE/ACIS 13th International Conference on Computer and Information Science  2014 pp 297\226302   R Q Sun J Yang A Gao and Z Q He A resource scheduling approach to improving data locality for virtualized Hadoop cluster 050in Chinese\051 Journal of Computer Research and Development  vol 51 no Suppl pp 189\226198 2014   X P Bu J Rao and C Z Xu Interference and localityaware task scheduling for MapReduce applications in virtual clusters in Proceedings of the 22nd International Symposium on High-Performance Parallel and Distributed Computing  New York NY USA 2013 pp 227\226238   Q Zhang L Liu Y Ren K Lee Y Z Tang X Zhao and Y Zhou Residency aware inter-VM communication in virtualized cloud Performance measurement and analysis in Proc of the 6th IEEE International Conference on Cloud Computing  2013 pp 204\226211   Z J Fu X M Sun Q Liu L Zhou and J G Shu Achieving ef\002cient cloud search services multikeyword eanked aearch over encrypted cloud data supporting parallel computing IEICE Transactions on Communications  vol E98-B no 1 pp 190\226200 2015   H Y Sun W X Xie X Yang and K Lu A load balancing algorithm based OH parallel computing entropy in HPC 050in Chinese\051 Journal of Shenzhen University Science and Engineering  vol 24 no 1 pp 64\22668 2007 


Dan Tao et al Load Feedback-Based Resource Scheduling and Dynamic Migration-Based Data Locality for    159 Dan Tao is currently a professor with School of Electronic and Information Engineering Beijing Jiaotong University China She received the PhD degree from Beijing University of Posts and Telecommunications China in 2007 She was a visiting scholar in the Department of Computer Science Illinois Institute of Technology USA during 2010-2011 She has published more than 50 papers in the academic journals and conferences Her research interests include wireless networks and cloud computing Zhaowen Lin is currently an associate professor with Institute of Network Technology Beijing University of Posts and Telecommunications China He received the PhD degree from Beijing University of Posts and Telecommunications China in 2008 His research interests include future Internet key technology and network security Bingxu Wang is currently a postgraduate student of School of Electronic and Information Engineering Beijing Jiaotong University China He received the bachelor degree from Shandong University of Science and Technology China in 2013 His research interest is cloud computing 


rees China from all in pioneer net lica proceeda China China nals IEEE Who and CM 2377-3782 \(c This article has been accepted for publication in a future issue of this\ journal, but has not been fully edited. Content may change prior to fin\al publication. Citation information: DOI 10.1109/TSUSC.2017.2690301, IE\EE Transactions on Sustainable Computing 12 W Jia 


Experiment Setup Proposed attack scenario 
SECTION V EXPERIMENTS 
We allude to the lumps being Flush Reloaded by the advertisement versary as being observed since Flush-Reload basically screens access to information in the lump  Flushing a piece by means of clflush thus observing that piece should be possible without knowing the physical address of the lump since clflush takes the lump's virtual address for this situation in the adversary's address space as its operand  We call a quicker reload amid the Reload stage a watched occasion or perception  We additionally embrace ideas from measurable order and utilize the term false negative to allude to missed perceptions of the casualty's entrance to the checked piece and false positives to allude to watched occasions that are brought about by reasons other than the casualty's entrance to the observed piece We characterize a Flush-Reload convention in which the foe procedure screens a rundown of lumps at the same time and over and again until taught generally  It will first attempt to Reload the principal lump record the reload time and Flush it promptly thereafter At that point it will rehash these means on the second lump the third and so on until the last lump in the rundown  At that point the foe will sit tight for a precisely computed day and age before beginning once again from the primary piece so that the interim between the Flush and Reload of a similar lump is of an objective level 3 from the Reload of the main lump to the end of the holding up period is called one Flush-Reload cycle  An outline of the Flush-Reload convention is appeared in following Fig  
 
 chi k 2 R eI oa din g  chi nk 1  Rel o a di ng I dl e l ooping l 
Here we execute experiments on two systems  One system is a laptop and the second system is a dedicated server facilitating different services  We have installed windows server 2012 on both machines  First of all we used NMap to find OS finger printing the 
FI ng 
chi Id 
AUJS  ng 
 ch k 2 225 us bR eload Cycl e 
 


as 
using the Nassus we found the vulnerabilities available in VMs  Then generated side channel attack on both machines using flush  reload attack to get cryptographic keys and peeks inside the VMs whereas docker provides much more isolation and it was quite difficult to get all keys and peeking mechanism in docker Algorithm Flush Reload Hardware Specification System 1 System2 Use Laptop Dedicate Server 
Windows Server 2012 CPU Intel\256 Core\231 i3-4010U CPU  Intel Xeon 2.S Ghz 1.70Ghz Cores 02 Physical 04 Physical 04 Logical OS Logical RAM 4GB SGB 
 


x86-64 
L1 128 KB 256KB L2 512 KB 01 MB L3 03 MB 08MB Supporting Software Name Function Ubuntu and Windows Ubuntu and Windows server 2008 are being used to Server 2008 host multiple servers on Virtual machines Web Server Docker Container and Docker Microsoft Hyper-V NMap Nessus Docker Container cape a bit of Software in an entire file system that contains everything expected to run code runtime framework instruments framework libraries anything that can be introduced on a server This ensures the product will dependably run the same paying little respect to its surroundings  MS Hyper-V Microsoft Hyper-V codenamed Viridian and some time ago known as Windows Server Virtualization is a local hypervisor it can make virtual machines on 
frameworks running Windows Nmap is a security app used to find has and benefits on a PC organize hence making a IIguide ll of the system Nessus is a remote security checking device which filters a PC and raises a caution in the event that it 
 


225 225\225 225 225 1 111 225 225 
i 
GnuPG and Open SSL Results finds any vulnerabilities that noxious programmers could use to access any PC you have associated with a system GnuPG is an entire and free execution of the OpenPGP standard as characterized by RFC4880 otherwise called PGP  GnuPG permits to encode and sign your information and correspondence highlights a flexible key administration framework and additionally get to modules for a wide range of open key indexes  
 
26 
tt 26 
c e 
140 120 g 0 25 
System A 180    O penSSLD 9 7LR 
E Ubgcryp t 1 6LR             29 
Ubgcrypt 1 6FR 
 
 
_ OpenSS LD 9 7FR _ OpenSSLD  9.7FR 180    O penSSLD 9 7LR O pen SSL1 0.1 FR   III   Op enSSL1 0.1 LR 160 PolarSS L 1.3  3FR   0   Po l arSS L1 3 3LR 
B 
27 29 Encr ypt ions   Ill   O penS SL1 0.1 LR 160 PolarSSL1  3.3FR   0   PolarSS L1  3.3LR Ubgcrypt1 6FR Ubg c rypt1  6LR 27 Encr y pt i ons  2 System 
  
28 28 
140 25 
 


Conclusion 
1 
References 
1 
machine 8 https www.toptal.com/linux/separation-anxiety-isolating-your-system-with-linu\x-namespaces 9 Isolation in Cloud Computing and Privacy-Enhancing Technologies Suitability of PrivacyEnhancing Technologies for Separating Data Usage in Business Processes Prof Dr Noboru Sonehara Prof Dr Isao Echizen Dr SvenWohlgemuth National Institute of Informatics 2-1-2 Hitotsubashi Chiyoda-ku Tokyo sonehara@nii.ac  jp  10  Performance Isolation and Fairness for Multi-Tenant Cloud Storage David Shue Michael J Freedman and Anees Shaikh Princeton University ylBM TJ Watson Research Center 
An Updated Performance Comparison of Virtual Machines and Linux Containers Wes Felter Alexandre Ferreira Ram Rajamony Juan Rubio IBM Research Austin TX fwmf apferrei rajamony rubiojg@us.ibm.com 2 A Unified Operating System for Clouds and Manycore fos David Wentzlaff Charles Gruenwald III Nathan Beckmann Kevin Modzelewski Adam Belay Lamia Youseff Jason Miller and Anant Agarwal 3 Containers and Cloud From LXC to Docker to Kubernetes DAVID BERNSTEIN 4 Containers and Clusters for Edge Cloud Architectures a Technology Review Claus Pahl Irish Centre for Cloud Computing and Commerce IC4  Lero the Irish Software Research Centre Dublin City UniversityDublin 9 Ireland 5 Containerisation and the PaaS Cloud Claus Pahl 6 http://www.slideshare.net/BodenRussell/kvm-and-docker-lxc-benchmarking-w\ith-openstack 7 http://stackoverflow com q uestio ns/1604 7306/how-is-docker d ifferent from-a-no rma I-vi rtua 
It has been observed from experiments that container provides much more isolation among multiple users multi-tenants in cloud virtualization as compared to virtual machines Taking the example of Docker container which is light weight more secure and fast processing virtualization technique and getting much more familiarity due to its characteristics Also Container provides isolation at every instance of virtualization like at process level at file system level network level and at inter process communication lPe level 
 


