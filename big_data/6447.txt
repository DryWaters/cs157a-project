 Integration of association rule detection wit h rule-based ontological support for product recommendation  Anita Hejja Business Information Systems Department Faculty of Economic Science and Business Administration, Babes Bolyai University Cluj-Napoca, Romania lila.nita28@yahoo.com  Robert Andrei Buchmann Business Information Systems Department Faculty of Economic Science and Business Administration, Babes Bolyai University Cluj-Napoca, Romania robert.buchmann@econ.ubbcluj.ro 
 Anamaria Szekely Business Information Systems Department Faculty of Economic Science and Business Administration, Babes Bolyai University Cluj-Napoca, Romania b_ana_sz@yahoo.com   Abstract Recommender systems can increase the sales by suggesting to users additional products, that were selected by their preferences. Availability of efficient mechanisms for generating the adequate products and for capturing the eligible information are the most important challenges of Web users The Apriori algorithm is the best-known association rules 
mining algorithm, whose objective is to find all co-occurrence relationships between data items. In order to obtain a welldefined information in an open standard format, we propose an ontology-based recommender system, which describes the item features in terms of semantic concepts. In this paper, a methodology that combines the Apriori algorithm with a domain-specific ontology is proposed. The proposed model transfers the association rules on custom OWLIM rules, and by using OWLIM semantic repositories the detected associations will become public and can be interconnected with 
other information from the Internet.  In this way, new facts can be deduced, therefore new relationships and rules between product items will be generated Keywords-component: Apriori algorithm; Ontology Recommender System; Custom Rule-set; OWLIM I   I NTRODUCTION  Recommender systems have a major impact on ebusinesses by suggesting to users relevant products they may be interested in.  Recommender systems can increase the profit, if they are generating appropriate recommendations For this, it is very important to have an efficient mechanism for retrieving and storing the product and user data 
The Apriori algorithm is a well-known and used algorithm for association rules mining. Mining association rules is a fundamental task in data mining, whose objective is to find all co-occurrence relationships among data items [1   These relationships are called associations The very first motivation of association rules was the market basket data analysis. These analysisê goal is to discover how items purchased by customers in a market are associated [1  The paper presents a recommender system, which is based on Semantic Web techniques. Semantic Web allows web users to find, to distribute or to combine web data 
Semantic Web should çlearné software programs to understand information, which is easy to understand for humans, but impossible to understand for machines Semantic Web tries to facilitate the communication between software agents. For this communication ontologies are used An ontology represents a set of concepts within a domain and the relationships between the concepts. They represent a way for interoperability on the Web In this paper, we propose a prototype of recommender system for an online store, where according to the visited and bought products, product recommendations will be generated. For our system , the product and user data are 
stored in an OWLIM ontology. In this paper we will discuss about the advantages of using ontology instead of a traditional relational database In our proposed model, we transcribed the obtained association rules in OWLIM custom rules  to obtain a welldefined information. The OWL and OWLIM ontology languages have some advantages compared to an RDF data store. These advantages will be presented in this paper Besides of obtaining a well-defined information and an open recommender system, our goal was to eliminate some shortcomings of a recommender system based on Apriori algorithm, like the lack of personalization and the problem of 
new products II  PROBLEM CONTEXT AND STATEMENT  Our proposed model is based on Semantic Web solutions. The idea of Semantic Web is to allows an open infrastructure, which is based on formal representations of a domain.  Semantic Web uses the following technologies eXtensible Markup Language \(XML\ Resource Description Framework \(RDF\, RDF Schema \(RDF-S\, Web Ontology Language \(OWL\ etc 
2011 13th International Symposium on Symbolic and Numeric Algorithms for Scientific Computing 978-0-7695-4630-8/11 $26.00 © 2011 IEEE DOI 10.1109/SYNASC.2011.50 137 


 World Wide Web Consortium \(W3C\eloped the standard RDF, which is a framework for knowledge representation. It is based on triplets, consisting in subject predicate and object For building our ontology OWL language was chosen because it supports inferences, it has some important predefined properties and supports cardinalities or constraints We started our research with analyzing the existent recommender systems based on content-based recommendations and ontology. In paper [2 i m ilar  recommender model is presented, where the authors generates associations between the products using the Apirori algorithm. In their system, the product data is managing by using an OWL ontology. The goal of paper is to eliminate the problem of new products, using the relationships between the product concepts from the ontology In paper [3  th e au th ors  des cr ibe d an el e a r n i n g s y s t e m  where the recommendations represents the courses preferred by students. They used OWL ontology for modeling the knowledge data.  The recommendations were generated using collaborative techniques, finding the similarity between the used concepts Paper [4 cr ib es  a re com m e n d er s y s t em  w h ere th e  concept are managed by an ontology. The recommendations are generated using similarities between the concepts descriptions, between the users and between the semantic relationships of the concepts. Their system uses content based and collaborative filtering to obtain the personalized recommendations The authors of paper [5 t r o d u ce a m u ltilev el on t o l o g y based framework for semantic search of educational content in E-learning repository for lectures and courses. Their system is a hybrid recommender system, which combines content-based and rule-based recommendations. Their model is build by using the HyperManyMedia1 platform To understand the idea of a system based on RDF knowledge base, we can compare it to an expert system Both are representing concepts and relationships between those concepts. Both have the same goal: to answer to questions asked by humans. The major difference is that an expert system is usually specialized in one, specific problem Another difference is that an expert system is a closed system, while an RDF model is on open system, which is interconnected and is based on linked data. Knowledge base in semantic concepts promotes the principle of çAAA Anyone can say Anything About Anything\, which means that the knowledge world assumption is not limited to what is defined in the database \(used by expert systems\. In a classic expert system the knowledge, usually, is captured from experts. This means that the knowledge is implicitly validated. While, in an RDF knowledge base, the knowledge can be added by anybody, which may provide inconsistencies Besides these differences, there exist some expert systems based on ontology. In paper [6 h e au t h o r s p r o pos e  a tablet production ontology to support a generic drug tablet production expert system. They use the ontology to model the information about pharmaceutical tablet production that consists of a list of ingredients and  a set of instructions for tablet manufacturing. Their ontology can be reuse and share with other pharmaceutical dosage forms production Paper [7 e s c ri bes  an ex pe rt s y s t e m  w h ich can h e lp ca r  users to diagnose and repair the faulty car. Because their architecture requires large scale data and space resources, the authors applied to an ontological solution. Their ontology knowledge base was developed using ProtÈgÈ and it was introduced to construct the engine fault diagnoses system The authors demonstrates that çontology can facilitate the reasoning mechanism of Expert System thus alleviate the workload of developing expert system.é [7 III  INSTRUMENTATION  OWL \(Web Ontology Language\ is a language for processing web information, which was build based on RDF Resource Description Framework\d XML \(Extensible Markup Language\ Itês goal is to support software agents in reading software applications. Like RDF, it is based on a structure of triples. Each triple can be represent as an assertion about a subject, a property and an object    FIGURE. 1 RDF TRIPLE EXAMPLE Fig. 1 shows how can we represent data with RDF Our ontology was build using OWL language and uploaded in OWLIM semantic repository, which was installed over Sesame. OWLIM is a family of semantic repositories and it is a robust support for the semantics of OWL. Sesame is a Java application, which offers a system for storing and retrieving knowledge base. It has different kinds of interfaces, one of the most important being its REST interface through which we can communicate with Sesame from other software programs A standard proposed for RDF triples querying is SPARQL \(Protocol and RDF Query Language\, which is an RDF query language. SPARQL allows queries like SELECT, CONSTRUCT, DESCRIBE and ASK For prototyping purposes, we employ Python. Python has powerful libraries for semantic representation and processing. Python language was chosen, because we can connect to Sesame through the REST interface of Sesame using the URLLIB library Laptop Laptop Bag IsPurchasedWith 
138 


 IV  THE PROPOSED MODEL  A  Arhitectural Design The users interact with the online store through a web page, where according to the visited and bought products HTTP request will be generated. The Python scripts, using the URLLIB library, will send HTTP requests from the Apache server to the Tomcat server. Through the REST interface of Sesame, SPARQL queries are send to Sesame The answers to the queries contain the product recommendations, which are represented in Browser using Python scripts The logical inferences are performed by the TRREE engine, which generates the inferred closure, through the currently active rule-set. For generating the recommendation we built a custom rule-set OWLIM implements the SAIL interface of Sesame which makes OWLIM to be able to use all the facilities of Sesame [8  Sin ce OW L I M h a s an in te rn al ru le com pil e r   that could be used to configure the TRREE with a custom rule set [8  w e can c r ea te a s e t of cu s t om ru les an d ax i o m s   For this, we need to create a new .pie file   FIGURE. 2 ARHITECTURAL DESIGN  B  Mining Association Rules For mining association rules, we can start as follows I   m i i i   2 1 be a set of products and T  n t t t   2 1  set of transactions, where each i t is a set if data that  i t  002 I  An association rule is X    Y where  X 003 I, Y 003 I and X 004 Y 005  The strength of a rule is measured by its support and confidence [1  T h e s u pp o r t o f  a ru le m eas u r es p e r cen t a g e   how often the rule can be applied to a set of data \(how often certain products appear together in all transactions\. The support of a rule is computed in \(1\ The confidence of a rule is the percentage if transactions in T that contain both X and Y [1  T h e con f i den c e of a ru l e is  c o m p u t ed in   2     support =                                           \(1   confidence 2  For generating the rules, we used the Apriori algorithm as follows in Fig. 3   FIGURE. 3 APRIORI ALGORITHM \(SOURCE: [1   Apriori algorithm follows two major steps   It generates all frequent itemsets. A frequent itemset is an itemset that has transaction support above the minimum support [1     It generates all confident association rules from the frequent itemsets. A confident association rule is a rule with confidence above minimum confidence [1   The first step is to calculate the support of each set of the products and defining \(or not\ them as frequent itemsets. In the fourth line in Fig. 3, the function candidate_gen\(F\is called. This function has two steps: the Join step and the Pruning step. The Join step combine two frequent itemsets 006 n count Y X   007 count X count Y X    007 
139 


 for generating the possible candidates c The Pruning step determines if all subset of c is in 1  k F  For generating the rules for each frequent itemsets of f  we use all nonempty subsets  of f For each subset 010 we have use the \(3\ and \(4\mulas       3 and minconf        \(4  where f.count is the support of f and n is the number of transactions In our system, we have a database, where we stored the transactions. From this database, we generate the rules using the Python language. There exists a lot of implementations and software tools in many programming languages for Apriori algorithm, we chose the Orange library of Python Orange is a data mining software, which offers a flexible front-end programming for data analysis [9 i n g t h e  Orange library, we can upload the transaction data. In our application. The transaction data is stored in tab-delimited format. For a better understanding, we will demonstrate the transaction data in the following figure  FIGURE. 4 EXAMPLE OF TRANSACTION DATA The first line represents the product categories and each following line represents a transaction. In the exemple, in the first transaction the products LaptopX and CabluX were sold, and the question mark represents the lack of sells Using the method AssociationRulesIntroducer\(data, support 0.3\of the library Orange, we can generate association rules. In the data variable we uploaded our transaction data and support retains the support value  FIGURE. 5 THE OBTAINED ASSOCIATION RULES Our goal is to represent these rules, in semantic concepts. To obtain this goal, we will transcript the association rules in OWLIM rules. For example, if we detect the rule: LaptopX->CabluX, this rule will be transcripted as follows http://www.semanticweb.org/ontologies/2011 5/OntologyProduseSistemRec.owl#Laptopx http://www.semanticweb.org/ontologies/2011 5/OntologyProduseSistemRec.owlSeCumpareCu>ht tp://www.semanticweb.org/ontologies/2011/5/O ntologyProduseSistemRec.owl#Cablux After the transcription, we will upload the obtained OWLIM rules in our ontology. The ontology contains OWL triples, in N3 format. In this ontology we define the Product and User classes, and the relationships between the concepts We uploaded this ontology in the OWLIM semantic repository, which was installed over Sesame. After we obtain the OWLIM association rules, we will upload these rules in our ontology, in OWLIM using Python and the URLLIB library of Python C   TRANSCRIPTION OF ASSOCIATION RULES INTO OWLIM RULES After the association rules generation, we transcript the obtained rules in OWLIM rules. The association rules, that we obtained are in the described format, for example Laptop 006 Laptop Bag. In OWL this will be prefix prod:http://www.semanticweb.org/ontologies/20 11/5/OntologyProduseSistemRec prefix rdf:<http://www.w3.org/1999/02/22rdf-syntax-ns prod:Laptop prod:IsAssociateWith prod:LaptopBag prod:Laptop rdf:type prod:Pruduct In the root of the OWLIM kit, the PIE files contain the inference rules. These files are editable, hence, we can define our own rules. For association rules transcription we needed to create our custom_rules.pie file This file can contain up to three sections: Prefices Axioms and Rules. Only the Rules section is mandatory In the section of Prefices we defined the abbreviations for our namespaces Prefices   rdf http://www.w3.org/1999/02/22-rdfsyntax-ns rdfs http://www.w3.org/2000/01/rdfschema owl  :http://www.w3.org/2002/07/owl proton http://proton.semanticweb.org/2005/04/protons   010 010 006  f  011   count f count f confidence   010 
140 


 protont http://proton.semanticweb.org/2005/04/protont  xsd :  http://www.w3.org/2001/XMLSchema   prod http://www.semanticweb.org/ontologies/2011/5 OntologyProduseSistemRec  Only the çprodé namespace was add by us, the rest of the namespaces are predefined After the definition of the namespaces, we created the new rule-set for product recommendation, as follows Rules  Id: rec x <prod:Bought> y  y <prod:IsAssociateWith> z  x <prod:Recommend> z  Every rule consists of one or more premises and one or more corollaries. In our case the premises are x prod:Bought> y and y <prod:IsAssociateWith> z . Every left value in the not-equal constraint must denote a variable and every right value can be a variable, a short name or a full URI. Not-equal constraints may be used to force the engine not to apply the rule when the constraints are not satisfied This will improve engine's performance [10    In our case, the corollary is x <prod:Recommend> z The premises and the corollaries were been write in NTriple format. The subject, the predicate and the object must denote a full URI or a short name in format Prefix>:<LocalName> where <Prefix> is defined in  the prefix section, which was explained above [10   For an illustrative example, if a person Maria bought a product Laptop, and the product Laptop is associated with the products Cable and Laptop Bag \(we obtained this association from the association rules\en we could write the following SPARQL query PREFIX rdfs:<http://www.w3.org/2000/01/rdfschema PREFIX xsd:<http://www.w3.org/2001/XMLSchema PREFIX owl:<http://www.w3.org/2002/07/owl PREFIX rdf:<http://www.w3.org/1999/02/22-rdfsyntax-ns PREFIX protons:<http://proton.semanticweb.org/2005/0 4/protons PREFIX prod:<http://www.semanticweb.org/ontologies/2 011/5/OntologyProduseSistemRec PREFIX protont:<http://proton.semanticweb.org/2005/0 4/protont select * where {?x prod:Recommend ?z The results will generate the Cable and the Laptop Bag products. Similarly, we can set as a condition a relationship between the user and the product that he/she is visiting Rules  Id: rec  x <prod:Visit> y  y <prod:IsAssociateWith> z  x <prod:Recommend> z  D  ELIMINATING THE PROBLEM OF GENERATING PRODUCT RECOMMENDATION BASED ON STERETYPICAL INFORMATION One of the problem of content based recommender systems, is that the product generation is based on objective stereotypical information. However, the customers choose the products based on a subjective point of view. Hence, a recommender system based on association rules generation do not uses the personal values of the customers To eliminate this generic problem, many recommender systems apply to collaborative recommender techniques. A collaborative recommender system generates recommendations to a client, ba sed on correlations between that client and other clients from the store. These correlations are based on the similarity between the clients instead of the similarity between the products To eliminate this problem, we used Pearson coefficient for the clients of the store. The correlation coefficient gives a value between -1 and 1 inclusive. A value of 1 implies that a linear equation describes the relationship a user and another user perfectly. A value of -1 implies that a linear equation describes a perfectly di fferent relationship between the users . A value if 0 implies that there is no linear correlation between the users The system allows to users to give ratings for the products. To represent this, we have in our ontology as follows in Fig. 6        
141 


2150,98\216 2150,98\216 
5  Where 
n 
                    FIGURE. 6 GRAPHIC REPRESENTATION OF ONTOLOGY We used Python to determine the \215similar\216 clients. For this, we need to access our ontology from Python, using the URRLIB library 
USER 
x y N 
This means if Maria and Ion are similar clients, and if Maria bought some products from the store, we will suggest to Ion those products bought by Maria. Furthermore, we will suggest those products to Ion that are associated with the products bought by Maria. In this way , we can combine the result of a content-based recommendation method with the results of a collaborative recommendation method 
In \217clients\220 we have the list of the clients and in \217ratings\220 we the list of the properties for ratings \(RatingLaptop RatingLaptopBag, etc After we obtain the ratings for each client, we use Pearson correlation coefficient, as follows in \(5 
Pearson Pearson 
represents the number of common preferences. For filtering the similar users, we use the following pseudocode 
server='http://localhost:8080/openrdf-sesame for i in clients  for j in ratings  x = clients   y = ratings   interog='PREFIX prod:<http://www.semanticweb.org/ontologies/2 011/5/OntologyProduseSistemRec.owl#> select where {prod:'+ x + 'prod: ' +y + '?z  format=urllib.quote_plus\(intero g  info='/repositories/owlproduse query='+ format  temporar=urllib.urlopen\(server info  sir=temporar.read Algorithm Similar_person\(preferences, user n, coefficient 1     if \(i != user 2 for each i in preferences do 3                    values Rules  Id:similar  x <prod:Similar> y  y <prod:Bought> z  z <prod:IsAssociateWith> l   x <prod:Recommend> z  x <prod:Recommend> l  
 
 represents the preferences of user 2 and 
 coefficient\(preferences, user, i 4 endfor 5     values.sort 6     values.reverse 7     values first n values 8     return values  
n 
This algorithm lists a set of pairs \(user, coefficient where the users are the similar users to the target user and the coefficient is the corresponding coefficient. As arguments we have: preferences \(the target user\220s ratings\, user \(the target user\, n \(the number of users we want to generate\ and coefficient \( where we choose the function that implements the below presented Pearson formula As we obtained the list with similar clients, we will update our ontology, giving the OWL symmetric property 215Similar\216 for similar persons Now we create the custom-rule for the recommendations in the custom_rules.pie file 
RatingLaptop RatingLaptop RatingLaptopBag 2158\216 2158\216 2159\216 
MARIA ION type type 
Similar 
represents the preferences of user 1 
142 


 E  ELIMINATING THE PROBLEM OF NEW PRODUCTS Using association rules for generating product recommendation is a good solution for suggesting relevant products to users. However, when a new product appears in the store, we will not know anything about that product Hence, we will not be able to generate recommendations when a user visits that new product To eliminate this problem, we will categorize the clients in different classes, according to the products bought by them. If a person bought a laptop, maybe he will need some accessories for that laptop, like a laptop bag. Hence, we can recommend to him/her some products, that are related to the bought laptop. In our ontology, every product belongs to a high-level class. A laptop bag and a specific laptop will belong to the a class, named Laptop. If a new product appears in the store, for example a laptop bag, to be able to recommend that product we will need to find those clients who in the past, bought some products related to the laptop bag. In order to do that we have two steps   First, we need to define a class for those clients who bought products related to the Laptop class For this, we define the following OWL restriction prod:PersClassLaptop  a  owl:Restriction owl:onProperty   prod:Bought owl:hasValue     prod:Laptop    We need to define a rule, which recommends to the clients who belong to the class defined in the first step the corresponding products To obtain the desired results, we created the following rule, in the custom_rules.pie file Id:persClass  x <rdf:type> <prod:PersClassLaptop  y <rdf:type> <prod:Laptop  x <prod:Recommend> y In this way we can recommend to Maria the new product the laptop bag V  SWOT EVALUATION  Like any software application, the proposed system has some advantages and disadvantages Strengths   One of the best-known problem occurring at recommender systems is the problem of new products. Association-based recommender systems can not generate recommendations related to a new product. This problem is partially solved by using our last described OWLIM rule   The problem of the lack of personalization was solved by using the Pearson coefficient and the OWLIM custom rule described in section IV.D   Using ontology for product and user management, instead of a relational database has some advantages: in a relational database when a new statement appears, new attributes appear so we need to extend the structure of the database. Because not every statements refers to the same attributes, it may happens that some fields in the database remain empty. Databases are based on the premise that we can know everything about the entities, hence the memory space will be reserved in this idea. Using ontology, when new attributes appear, we can simply add new triples. An ontology doesnêt has a rigid predefined structure. A knowledge base is based on the premise that we can not know everything about the entities, hence the structure is expansive   This model is a god support for data searching and knowledge mining and enables the semantic interoperability   The model represents a good solution for data representation and description   An OWL ontology has some predefined important namespaces in addition, like the symmetricProperty, which was use to define the similar clients   Using the OWLIM semantic repository we have the advantages of creating customized rules and it makes Sesame to support OWL inferences   Using OWLIM has some predefined namespaces besides OWL, for example, it has the PROTONS vocabulary, which allows us to use one of the most important property, the transitiveOver property, which is a transitivity applied between different relationships. For example Client :Buy :Bread Bread:IsAssociateWith :Milk Buy PROTON:transitiveOver IsAssociateWith Result <:Client :Buy :Milk Weaknesses   The OWLIM project has two versions BigOWLIM and SwiftOWLIM. The first one, is the full version, and the last one is an open 
143 


 source version. For our system, we used SwiftOWLIM, which has some limitations compared to BigOWLIM. For example, it doesnêt ensure the detection of contradictions   Every OWL ontology has some limitations regarding to the number of triples. The maximum number of triples, in such ontology can be 300-500 millions of triples, depending on the process of inference  Opportunities   Using OWLIM, we make our ontology and our detected association rules public. In this way they become interconnected with other sources from the Internet. Using the REST interface of Sesame, anybody can read or download our ontology. We can do in the same way with other sources from the Internet, we can merge our ontology with other ontologies generating new knowledge. The presented system allows semantic search of the concepts. It represents an open knowledge base   It opens the possibilities for pragmatic web where software agents can search, and even make shopping in the name of a person Threats   Nowadays, there is a relatively small number of companies, which adopt Semantic Web technologies. One reason is that the current systems use relational databases for storing and managing data. Mapping a relational database in an RDF knowledge base may require further works   Ontologies generate heterogeneous knowledge which supports semantic contradictions Semantic Web promotes the principle of AAAé \(Anyone can say Anything About Anything\This means, that anybody can define concepts and relationships between those concepts, according to his/her personal goals This may generate semantic conflicts and contradictions. Any contradiction may produce inconsistencies and will affect the ability of software \(agents, browsers, search engines, etc in the execution of decisions VI  CONCLUSIONS AND FUTURE DEVELOPMENT  The motivation for this research came from the limitations of traditional recommender systems. Building an effective recommender system is challenging. We believe that ontology is a good solution for modeling product and user data In the presented paper we described how can we use OWLIM custom rule-set in order to eliminate some of the shortcomings of a recommender system based on Apriori algorithm. To manage the product and user data, we applied to OWL ontology, which was uploaded in OWLIM semantic repository, thereby we could improve our system using the facilities offered by OWLIM. We applied to semantic web techniques to obtain an open, public ontology which allows interoperability As a future work, we would like to extend this system to an open recommender system using Linked Data. We can combine the described model with Liked Data. The term Linked Data refers to a set of best practices for publishing and connecting structured data on the we order to build a standardized system for publishing his data and connecting it to other data sources, we will follow the Linked Data principles w h ic h s p eci fy  h o w  to u s e t h e  different standards together A CKNOWLEDGMENT  The research presented in this paper is supported by the Gazepower project \(E-marketing and software quality management based on eye tracking analysis, code 2443/2009 funded by UEFISCSU-CNCSIS through the National Research Program IDEI R EFERENCES  1  L. Bing , Web Data Mining: Exploring Hyperlinks, Contents, and Usage Data, vol.10.Issue 2, Springer, DCSA, SIGKDD Explorations 2  M.Adda,  R.Missauri, P.Valtchev, C.Djeraba, Recommendation Strategy based On Relation Rule Mining, 3 rd Workshop on Intelligent Techniques for Web Personalization 3  Z.Yu, Y.Nakamura, S.Jang, S.Kajita, K.Mase, Ontology-Based semantic recommendation for Context-Aware E-Learning, UIC 2007 LNCS 4611, pp. 898Ö907, Springer-Verlag Berlin Heidelberg 2007 4  I.Cantador, A. Bellogin, P.Castells, Ontology-based personalised and context-awarw recommendations of new items, WI-IAT '08 Proceedings of the 2008 IEEE/WIC/ACM International Conference on Web Intelligence and Intelligent Agent Technology Ö Vol. 01 IEEE Computer Society Washington, DC, USA 2008 5  L.Zhuhadar, O.Nasraoui, R.Wyatt, E.Romero, Multi-model OntologyBased Hybrid Recommender System in E-learning Domain, in Web Intelligence and Intelligent Agent Technologies, 2009. WI-IAT '09 IEEE/WIC/ACM International Joint Conferences 6  N.Chalortham, P.Leesawat, M.Buranarach, T.Supnithi, Ontology development for pharmaceutical tablet production expert system, in Electrical Engineering/Electronics, Computer, Telecommunications and Information Technology, 2008. ECTI-CON 2008. 5th International Conference 7  J. Yi,   B. Ji,   C. Chen,   X. Tian, Employing Ontology to Build the Engine Fault Diagnosis Expert System, Computer Science and Information Engineering, 2009 WRI World Congress 8  OWLIM Semantic Repository, Copyright 2005-2010 Ontotext AD, a Sirma Group company 9  Rule-basedinferencesé.Internet http://owlim.ontotext.com/display/OWLIMv42/OWLIMLite+Reasoner. Accessed on: 8.09.2011   Open source data visualization and analysis for novice and experts.é http://orange.biolab.si/doc/ofb/assoc.htm . Accessed on 16.06.2011   J.T.Pollock, \(2009\, Semantic Web for Dummies, Wiley Publishing Indianapolis, 2009  C. Bizer, T. Heath, and T. Berners-Lee, Linked data-the story so far Journal on Semantic Web and Information System  
144 


i in the next step. ? and ? are the parameters that control the level of consideration of the pheromone trail D. The algorithm of ABSSR In the following, we present our approach in the form of the algorithm. We suppose that the user is using service S and he wants to stop it Step 1: Service Cluster Selection Based on the service S, we know the service cluster of S is sc1. The cluster selection list is generated using association rules. Suppose the user selects sc2 as the cluster of next service Step 2: Parameters Initialization This step is pre-processing, in which the parameters of and Q are initialized for ant colony navigation model. Moreover, a time window for frequency is set Step 3: Heuristic Information Calculation The heuristic information ? is evaluated according to the connectedness between S and some feasible services in sc2 Suppose there are n services denoted as S1, S2, . . . , Sn, can be as the next selection from service S, a set of heuristic information {?SS1 , ?SS2 , . . . , ?SSn} is calculated using Eq.\(1 Step 4: Pheromone Trail Intensity Calculation 0 5 10 15 0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 The connectedness between the service  i  and service  j   P ij Fig. 3. Pij variations by different value of the connectedness 1 1.5 2 2.5 3 3.5 4 4.5 5 0.48 0.49 


0.5 0.51 0.52 0.53 0.54 0.55 0.56 distanceij   P ij Fig. 4. Pij variations with the increment of distanceij 0 10 20 30 40 50 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 frequencyj   P ij Fig. 5. Pij variations with the increment of frequencyj 1 2 3 4 5 6 7 8 9 10 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.95 reputationj 


  P ij Fig. 6. Pij variations with the increment of reputationij Based on the attributes of service \(distance, frequency and reputation SS1 , ?SS2 , . . . , ?SSn} is calculated, according to Eqs.\(2-4 Step 5: Probability Calculation and Service Selection In this step the set of probability {PSS1 , PSS2 , . . . , PSSn are calculated on the basic of {?SS1 , ?SS2 , . . . , ?SSn} and SS1 , ?SS2 , . . . , ?SSn} using Eq.\(5 is generated in decreasing order of {PSS1 , PSS2 , . . . , PSSn Suppose that the user selects service S? in the list as the next service he wants Step 6: Updating After the user selects a service S? in the service selection list, the values of three attributes should be updated, including the connectedness between service S and S?, frequencyS and reputationS IV. EXPERIMENTAL RESULTS To evaluate the effectiveness of ABSSR, we utilize attributebased service recommendation to test the proposed ant colony navigation model. In the model, the probability in ant colony KB is related to the values of attributes of services Experiment 1: In this experiment, the impact on the probability from different values of the heuristic information ?ij In Eq.\(1 i to j. Without lose of generality, we set Cij from 1 to 15 In addition, in the service cluster of service j, there are four other services as the next service of service i, and they are set randomly between 1 and 15 With the parameters ? = 1 and ? = 8, the probability variation is illustrated in Fig. 3. From the result, with the same pheromone trail intensity, the more Cij is, the higher Pij is Experiment 2: In experiment 2, based on the same heuristic information ?ij, the relationship between Pij and the attributes will be analyzed. The change of attributes will impact on pheromone trail intensity ?ij. In the ABSSR, three attributes are considered: distance, frequency and reputation. If all of the attributes are inconsistent in the experiment, the results are confused. Consequently, we observe one attribute with 


two other remaining attributes be constant. To protect the same order among attributes, we fixed the parameters ? = 10 2500, ? = 1000, ? = 2 and ? = 1 In Fig. 4, the distance between the service i and j is increased from 1 to 5 \(kilometers attributes. From the figure, we can observe that the probability is decreased with the increment of the distanceij, and vice versa. Similarly, we varied the values of the frequencyj and reputationj to analyze the influence of Pij \(frequencyj is from 1 to 50, and reputationj is from 1 to 100 given in Fig. 5 and Fig. 6. The probability has an increase corresponding to the growths of frequencyj and reputationj V. CONCLUSION As the number of the users of networks has been increased greatly nowadays, the proactive service recommendation in m-commerce becomes an important issue. It is computed by the contextual information from sensor nodes. Although some researchers focus on context history, the attributes of a service have been ignored. In this paper, we have presented an attribute-based scheme for recommending services for consumers. For this end, we grouped all of the given services into several clusters, employed a cluster association model and an ant colony navigation model to track the consumers behaviors, and then calculate the degree of the influences from the attributes of services in relation to the recommendation After these, a service recommendation list is generated for consumers. The proposed models were implemented and the experimental results have shown that the varieties of the attributes do have affects on ranking lists. By refining the system, the proposed scheme could be further analyzed and potentially get its own place in practice REFERENCES 1] Smith, A.D.: Exploring m-commerce in terms of viability, growth and challenges. Int. J. Mobile Communications, 2006, 4\(6 2] Cao, Y., and Li, Y.: An intelligent fuzzy-based recommendation system for consumer electronic products. Expert Systems with Applications 2007, 33\(1 3] Buratti, C., Conti, A., Dardari, D., and Verdone, R.: An Overview on Wireless Sensor Networks Technology and Evolution, Sensors., 2009, 9 9 4] Hong, J., Suh, E.H., and Kim, J.: Context-aware system for proactive personalized service based on context history. Expert Systems with 


Applications, 2009, 36\(4 5] Sadeh, N.M., Chan, T.C., Van, L., and Kwon, O.: Creating an Open Agent Environment for Context-aware M-Commerce. In: Agentcities Challenges in Open Agent Environments, Ed. by Burg, Dale, Finin Nakashima, Padgham, Sierra, and Willmott, LNAI, Springer Verlag, 2003 pp. 152-158 6] Mayrhofer, R.: Context Prediction based on Context Histories: Expected Benefits, Issues and Current State-of-the-Art. In Proc. of the 1st Intl Workshop on Exploiting Context Histories in Smart Environments, May 2005 7] Samaan, N., and Karmouch, A.: A mobility prediction architecture based on contextual knowledge and spatial conceptual maps. IEEE Transactions on Mobile Computing, 2005, 4\(6 8] Jung, J.J.: Contextualized mobile recommendation service based on interactive social network discovered from mobile users. Expert Systems with Applications, 2009, 36\(9 9] Gong, R., Ning, K., and Li, Q.: Context modeling and measuring for proactive resource recommendation in business collaboration. Computers and Industrial Engineering , 2009, 57\(1 10] Kuo, M.H. Chen, L.C., and Liang, C.W.: Building and evaluating a location-based service recommendation system with a preference adjustment mechanism. Expert Systems with Applications, 2009, 36\(2 3543-3554 11] Luther, M., Fukazawa, Y., and Wagner, M.: Situational reasoning for task-oriented mobile service recommendation. The Knowledge Engineering Review, 2008, 23\(1 12] Kwon, O., and Kim, J.: Concept lattices for visualizing and generating user profiles for context-aware service recommendations. Expert Systems with Applications, 2009, 36\(2 13] Song, S., Hwang, K., Zhou, R., and Kwok, Y.K.: Trusted P2P transactions with fuzzy reputation aggregation. IEEE Internet Computing, 2005 9\(6 14] Wu, X.D., Kumar, V., Quinlan, J.R., Ghosh, J., Yang, Q., Motoda, H McLachlan, G.J., Ng, A., Liu, B., Yu, P.S., Zhou, Z.-H., Steinbach, M Hand, D.J., and Steinberg, D.: Top 10 algorithms in data mining, Knowl Inf. Syst., 2008, 14, \(1 15] Dorigo, M., and Gambardella, L.M.: Ant colony system: a cooperative learning approach to the traveling salesman problem. IEEE Trans. Evolut Comput. 1997,1\(1 16] Colorni, A., Dorigo, M. and Maniezzo, V.: Distributed optimization by ant colonies. Proc. of European Conf. on Artificial Life, \(Ed and Bourgine, P., Elsevier Publishing, Paris, France, 1991, pp. 134-142 


5 1559 8605 8 0 0 10172 4 1559 34172 129 1 4 2 35876 It can get the same frequent activities that PHP algorithm and improved PHP algorithm, in Tab.2 we can find that there is inverse ratio between frequent activity and minimum support count, when the minimum support counts decrease frequent activities increase, just as the real world. The cost of CPU time compared as Fig.2 of these two algorithms 213 124 89 73 57 53 52 65 0 40 80 120 160 200 240 4 5 6 7 Minimum Support Count T i m e  s e c o n d s  PHP Improved Fig.2 the compare CPU time cost of PHP and improved PHP From Fig.2, as support count decreasing, the CPU running 


time of these two algorithms gets increasing, but the PHP is much speeder than the other, especially when count in 6. so wen know the more frequent itemsets and their items, the more efficient of the algorithm V. THE APPLICATION After we got the frequent itemset by the improved PHP algorithm, we can generate the strong associate rule that satisfied minimum support and minimum confidence. The confidence can be computed by Confidence\(A ? B A | B A  B support_count\(A Support_count\(A  B support_count\(A And then we can use confidence threshold strengthen the association, we use improved PHP algorithm dig X company 2002 year sale data, minimum support is 5, 3-itemset, they are 83,549,915}, {485,558,1290}, {454,1097,1546 83,549,982}, {631,980,1490}, {454,1103,1546 810,1026,1469}, {360,830,1036}, and their none null subset as for frequent 3-item {83,549,915}, we can get 83 ? 549? 915,      confidence = 5/9 = 56 83 ? 915? 549,      confidence = 5/5 = 100 915 ? 549? 83,      confidence = 5/5 = 100 83? 915 ? 549,      confidence = 5/50 = 10 549? 83 ? 915,      confidence = 5/78 = 6 915? 83 ? 549,      confidence = 5/73= 7 If the minimum confidence threshold is 80%, only if 83 ? 915 ? 549and 915 ? 549 ? 83 can generate strong associate rules, after these rules, we can not only arrange the shelf of related goods in pairs or groups, but also combine those goods that have most consumers, promote the consumer the pretermission goods. For example, the stronger associate rule 83 ? 915? 549, from the database field product, we know product_id corresponding product_name, this stronger rule is pillow ? pillow clothe ? bedsheet , if there is someone bought pillow and pillow clothe, then promote good bedsheet is an efficient way of sale VI. CONCLUSION We put Hash candidates k-itemset into affair of Dk, that is itemset include in affair, so CPU running time decreased improved PHP algorithm is more efficiency, we can use this improved PHP algorithm in commercial database digging and 


other wide usages REFERENCES 1] YANG Xuejun. The application of CRM[J].computer application,2002\(5 2] CHEN Shuangqiu, LIU Dinghong, LI Hongxing, the costumer analysis and design based on data warehouse[J].computer engineering and application,2001\(4 3] Jawei Han and Micheline Kamber,Data Mining:Comcepts and Techniques \(2001 4] J.D.Holt,and S.M.Chung, Efficient Mining of Association Rules in Text Databases CIKM99,  Kansas City, USA, pp.234-242, \(Nov.1999 5] J.S.Park, M.S.Chen and P.S.Yu, Using a Hash-Based Method with Transaction Trimming for Mining Association Rules, IEEE Transactions on Knowledge and Data Engineering, Vol.9, No.5 Sept/Oct, 1997 6] S. A. zel and H. A. Gvenir, An Algorithm for Mining Association Rules Using Perfect Hashing and Database Pruning, in: Proceedings of  the Tenth Turkish Symposium on Artificial Intelligence and Neural Networks \(TAINN'2001 Eds Gazimagusa, T.R.N.C. \(June 2001 7] SUN Zhengxi, The theory and technology of Intelligent control M].Beijing Qinghua press, 1997 8] Mitani, Koji, CRM pursues economies of depth [J]. Japanese Journal of Diamond Harvard Business, 1999, \(617  the Tenth Turkish Symposium on Artificial Intelligence and Neural Networks \(TAINN'2001 Eds Gazimagusa, T.R.N.C. \(June 2001 7] SUN Zhengxi, The theory and technology of Intelligent control M].Beijing Qinghua press, 1997 8] Mitani, Koji, CRM pursues economies of depth [J]. Japanese Journal of Diamond Harvard Business, 1999, \(617  


algorithm could not extract the correct hierarchy with 30 assigning five labels incorrectly to the root label. None of the HE algorithms could extract the correct hierarchy in the absence of 40% multi-labels. With 40% and Voting, the number of labels falsely assigned to the root was 13, while with GT it was only three. For BoosTexter, Voting assigned two labels wrongly to the root label in the experiment with TABLE I 20 NEWSGROUPS ALL, -20%, -30% AND -40% RESULTS Measure all 20% 30% 40%ARAM FAM kNN BoosT. ARAM FAM kNN BoosT. ARAM FAM kNN BoosT. ARAM FAM kNN BoosT A 0.635 0.638 0.429 0.549 0.613 0.633 0.383 0.456 0.596 0.619 0.322 0.412 0.563 0.591 0.255 0.387 F1 0.694 0.696 0.565 0.677 0.675 0.688 0.528 0.604 0.662 0.677 0.469 0.566 0.640 0.657 0.392 0.542 F 0.691 0.692 0.480 0.605 0.671 0.688 0.429 0.507 0.658 0.676 0.364 0.465 0.630 0.652 0.296 0.441 OE 0.221 0.220 0.336 0.222 0.259 0.236 0.387 0.275 0.273 0.259 0.415 0.301 0.301 0.291 0.434 0.316 RL 0.100 0.098 0.124 0.073 0.108 0.110 0.128 0.077 0.098 0.103 0.132 0.079 0.101 0.106 0.135 0.082 C 4.188 4.168 6.080 4.164 4.397 4.446 6.184 4.286 4.246 4.340 6.326 4.328 4.334 4.463 6.397 4.379 AP 0.789 0.790 0.677 0.778 0.774 0.782 0.657 0.758 0.769 0.774 0.645 0.747 0.759 0.764 0.638 0.740 AUPRC 0.775 0.772 0.618 0.749 0.743 0.727 0.581 0.691 0.733 0.722 0.555 0.671 0.715 0.708 0.535 0.660 H-loss 0.103 0.123 0.121 0.094 0.102 0.098 0.124 0.108 0.106 0.103 0.132 0.117 0.115 0.111 0.145 0.122 Wins 1 5 0 3 1 6 0 2 2 6 0 1 2 6 0 1 LCAPD 0 0 0 0 0 0 0 0 0 0 0.12 0 0.05 0 0 0 0.51 0.26 0.17 0 CTED 0 0 0 0 0 0 0 0 0 0 0.14 0 0.07 0 0 0 0.50 0.21 0.21 0 TO* 0 0 0 0 0 0 0 0 0 0 0.11 0 0.05 0 0 0 0.39 0.18 0.15 0 30% removed labels and and six labels in the experiment with 40% removed labels. GT resulted in zero distances in the both cases. Assigning more labels to the root creates more shallow and wider hierarchies \(trivial case as stated before The good hierarchy extraction with ART networks demonstrates the system robustness  even with strongly damaged data the system can rebuild the original hierarchy C. RCV1-v2 Dataset The next experiment was based on the tokenized version of 


the RCV1-v2 dataset introduced in [21]. Only the topics label set consisting of 103 labels arranged in a hierarchy of depth four is examined here. Documents of the original training set of 23,149 were converted to TF-IDF weights and normalized Afterwards the set was splitted in 15,000 randomly selected documents as training and the remaining as test samples In this case, the Voting variant of HE applied to the TTML resulted in the LCAPD, CTED and TO* values 0.12, 0.15 and 0.13, respectively. The corresponding values of the GT variant are 0.05, 0.07 and 0.05. The poor performance of the Voting method is due to the fact that for the TTML only very high threshold values succeed in removing enough noise The Voting results are thus dominated by bad hierarchies extracted for all but the highest thresholds The classification and HE results for this dataset are shown in Table II. ML-ARAM has better performance results on this data set in all points than ML-FAM except for RL being the best of all classifiers in terms of the multi-label performance measures. BoosTexter is the best in terms of all ranking measures For both HE algorithms the distances of BoosTexter are the best, those of ML-FAM second, followed ML-ARAM and ML-kNN. All three distance measures correlate. Interesting is also that for ML-kNN the distance values obtained by both HE methods are almost the same The hierarchy extracted by GT from the TTML has much lower distances values as compared with the hierarchies extracted by both methods from predicted multi-labels. This reflects a specific problem of HE, since only a small fraction of the incorrectly classified multi-labels can prevent building of a proper hierarchy. For example, 16.5% of misassigned labels in the extracted hierarchy are responsible for about 80% of LCAPD calculated from the predictions of MLARAM. This large part of the HE error is caused by only 4% of the test data. Under these circumstances the other distances behave analogically. Most labels were not assigned making them trivial edges, but six labels were assigned to a false branch. This can happen when labels have a strong correlation and in the step Hierarchy Construction of the basic algorithm the parent is not unique in the confidence matrix. BoosTexters results suffer less from this problem because it generally sets more labels for each test sample 


Both HE algorithms behaved similarly on the predictions of the ART networks. They constructed a deeper hierarchy than the original one and wrongly assigned the same 11 labels to the root node. The higher distances come from Voting assigning more labels to the wrong branch. For MLkNN both algorithms again create very similar hierarchy trees, both misassigned 28 labels to the root label. For BoosTexter it was seven with Voting and eight with GT Voting produced a deeper hierarchy here D. WIPO-alpha Dataset The WIPO-alpha dataset1 comprises patent documents collected by the World Intellectual Property Organization WIPO ments. Preprocessing was performed as follows: From each document, the title, abstract and claims texts were extracted stop words were removed using the list from [20] and words were stemmed using the Snowball stemmer [22]. All but the 1%-most-frequent stems were removed, the remaining stems were converted to TF-IDF weights and these were normalized to the range of [0, 1]. Again, TF-IDF conversion and normalization were done independently for the training and the test set. The original hierarchy consists, from top to bottom, of 8 sections, 120 classes, 630 subclasses and about 69,000 groups. In our experiment, only records from the sections A \(5802 training and 5169 test samples H \(5703 training and 5926 test samples 1http://www.wipo.int/classifications/ipc/en/ITsupport/Categorization dataset/wipo-alpha-readme.html August 2009 TABLE II RCV1-V2 RESULTS Measure ARAM FAM kNN BoosT A 0.748 0.731 0.651 0.695 F1 0.795 0.777 0.735 0.769 F 0.805 0.787 0.719 0.771 OE 0.077 0.089 0.104 0.063 RL 0.087 0.086 0.026 0.015 C 11.598 11.692 8.563 5.977 AP 0.868 0.860 0.839 0.873 AUPRC 0.830 0.794 0.807 0.838 H-loss 0.068 0.077 0.097 0.081 Wins 4 0 0 5 LCAPD 0.29 0.22 0.25 0.20 0.34 0.34 0.21 0.18 


CTED 0.32 0.23 0.28 0.22 0.38 0.37 0.24 0.20 TO* 0.27 0.18 0.22 0.17 0.31 0.30 0.21 0.17 document in the collection has one so-called main code and any number of secondary codes, where each code describes a group the document belongs to. Both main and secondary codes were used in the experiment, although codes pointing to groups outside of sections A and H were ignored. We also removed groups that did not contain at least 30 training and 30 test records \(and any documents that only belonged to such small groups 7,364 test records with 924 attributes each and a label set of size 131 In this case, the Voting variant of the HE algorithm applied to the TTML resulted in the LCAPD, CTED and TO* values of 0.13, 0.12 and 0, respectively. GT showed the same values. Remarkable are the TO* distances, which are equal to 0. This is due to the fact that the WIPO-alpha hierarchy contains 16 single-child labels that are not partitioned by the true multi-labels: whenever a single-child label j is contained in a multi-label, so is its child, and vice versa. It is therefore theoretically impossible to deduce from the multilabels which of them is the parent of the other. As a result the HE algorithms often choose the wrong parent, resulting in higher LCAPD and CTED values. TO*, as described above is invariant under such choices The results obtained on the WIPO-alpha dataset are shown in Table III. The classification performance of the ART-based networks on this dataset is slightly worse than that of BoosTexter. Mostly in the terms of OE, RL, C, AP, AUPRC, and H-loss measures BoosTexter is better because its rankings are better and it assigned more labels to each sample. But the ART networks have better HE results because their predicted labels are more consistent with the original hierarchy. MLkNN has the worst classification results and distance values again. The reason for the high relative difference between LCAPD as well as CTED and TO* obtained for the ART networks or BoosTexter as compared to the results of the other datasets is because most of the labels were assigned in the right branch but not exactly where they belong Both HE algorithms extracted the same hierarchy from the predictions of ML-ARAM and a very similar hierarchy for ML-FAM. About 5% labels were assigned wrongly to the 


root label in the hierarchies of the ART networks. For MLTABLE III WIPO-ALPHA\(AH Measure ARAM FAM kNN BoosT A 0.588 0.590 0.478 0.564 F1 0.694 0.691 0.614 0.693 F 0.682 0.682 0.593 0.679 OE 0.052 0.057 0.110 0.042 RL 0.135 0.136 0.056 0.025 C 25.135 25.269 22.380 11.742 AP 0.790 0.785 0.724 0.802 AUPRC 0.720 0.684 0.688 0.762 H-loss 0.090 0.093 0.149 0.079 Wins 1 2 0 6 LCAPD 0.16 0.16 0.17 0.17 0.32 0.38 0.21 0.21 CTED 0.18 0.18 0.19 0.19 0.38 0.53 0.27 0.27 TO* 0.05 0.05 0.07 0.07 0.24 0.32 0.08 0.08 kNN both HE methods wrongly assigned about the half of the labels and about 20% of total labels were assgined to the root label. Here, GT extracted a much worse hierarchy as shown by CTED being 0.15 higher for GT than for Voting For BoosTexter both HE methods built the same hierarchy and no label was wrongly assigned to the root. All extracted hierarchies were one level deeper than the original one Although Voting produced worse hierarchies than GT on two previous datasets, this time its distance values were comparable or even better. In comparison to Voting, GT has higher values for all distances on the multi-labels of MLkNN. Voting has the advantage of being a much simpler method and of being more dataset independent. Still the tree distances have the same ranking order for all classifiers for both HE methods VI. CONCLUSION In this paper we studied Hierarchical Multi-label Classification \(HMC tive was to derive hierarchical relationships between output classes from predicted multi-labels automatically. We have developed a data-mining-system based on two recently proposed multi-label extensions of the FAM and ARAM neural networks: ML-FAM and ML-ARAM as well as on a Hierarchy Extraction \(HE algorithm builds association rules from label co-occurrences 


and has two modifications. The presented approach is general enough to be used with any other multi-label classifier or HE algorithm. We have also developed a new tree distance measure for quantitative comparison of hierarchies In extensive experiments made on three text-mining realworld datasets, ML-FAM and ML-ARAM were compared against two state-of-the-art multi-label classifiers: ML-kNN and BoosTexter. The experimental results confirm that the proposed approach is suitable for extracting middle and large-scale class hierarchies from predicted multi-labels. In future work we intend to examine approaches for measuring the quality of hierarchical multi-label classifications REFERENCES 1] M. Ruiz and P. Srinivasan, Hierarchical text categorization using neural networks, Information Retrieval, vol. 5, no. 1, pp. 87118 2002 2] N. Cesa-Bianchi, C. Gentile, and L. Zaniboni, Incremental algorithms for hierarchical classification, The Journal of Machine Learning Research, vol. 7, pp. 3154, 2006 3] , Hierarchical classification: combining Bayes with SVM, in Proceedings of the 23rd international conference on Machine learning ACM New York, NY, USA, 2006, pp. 177184 4] F. Wu, J. Zhang, and V. Honavar, Learning classifiers using hierarchically structured class taxonomies, in Proceedings of the 6th International Symposium on Abstraction, Reformulation And Approximation Springer, 2005, p. 313 5] L. Cai and T. Hofmann, Hierarchical document categorization with support vector machines, in Proceedings of the thirteenth ACM international conference on Information and knowledge management ACM New York, NY, USA, 2004, pp. 7887 6] C. Vens, J. Struyf, L. Schietgat, S. Dz?eroski, and H. Blockeel Decision trees for hierarchical multi-label classification, Machine Learning, vol. 73, no. 2, pp. 185214, 2008 7] E. P. Sapozhnikova, Art-based neural networks for multi-label classification, in IDA, ser. Lecture Notes in Computer Science, N. M Adams, C. Robardet, A. Siebes, and J.-F. Boulicaut, Eds., vol. 5772 Springer, 2009, pp. 167177 8] M. Zhang and Z. Zhou, ML-kNN: A lazy learning approach to multilabel learning, Pattern Recognition, vol. 40, no. 7, pp. 20382048 2007 9] R. Schapire and Y. Singer, BoosTexter: A boosting-based system for text categorization, Machine learning, vol. 39, no. 2, pp. 135168 


2000 10] K. Zhang, A constrained edit distance between unordered labeled trees, Algorithmica, vol. 15, no. 3, pp. 205222, 1996 11] A. Maedche and S. Staab, Measuring similarity between ontologies Lecture notes in computer science, pp. 251263, 2002 12] G. Carpenter, S. Martens, and O. Ogas, Self-organizing information fusion and hierarchical knowledge discovery: a new framework using ARTMAP neural networks, Neural Networks, vol. 18, no. 3, pp. 287 295, 2005 13] A.-H. Tan and H. Pan, Predictive neural networks for gene expression data analysis, Neural Networks, vol. 18, pp. 297306, April 2005 14] G. Carpenter, S. Grossberg, N. Markuzon, J. Reynolds, and D. Rosen Fuzzy ARTMAP: A neural network architecture for incremental supervised learning of analog multidimensional maps, IEEE Transactions on Neural Networks, vol. 3, no. 5, pp. 698713, 1992 15] Y. Freund and R. Schapire, A decision-theoretic generalization of online learning and an application to boosting, Journal of computer and system sciences, vol. 55, no. 1, pp. 119139, 1997 16] K. Zhang and T. Jiang, Some MAX SNP-hard results concerning unordered labeled trees, Information Processing Letters, vol. 49 no. 5, pp. 249254, 1994 17] G. Tsoumakas and I. Vlahavas, Random k-labelsets: An ensemble method for multilabel classification, Lecture Notes in Computer Science, vol. 4701, p. 406, 2007 18] K. Punera, S. Rajan, and J. Ghosh, Automatic construction of nary tree based taxonomies, in Proceedings of IEEE International Conference on Data Mining-Workshops. IEEE Computer Society 2006, pp. 7579 19] T. Joachims, A probabilistic analysis of the Rocchio algorithm with TFIDF for text categorization, in Proceedings of the Fourteenth International Conference on Machine Learning. Morgan Kaufmann Publishers Inc. San Francisco, CA, USA, 1997, pp. 143151 20] A. McCallum, Bow: A toolkit for statistical language modeling, text retrieval, classification and clustering, 1996 http://www.cs.cmu.edu/ mccallum/bow 21] D. Lewis, Y. Yang, T. Rose, and F. Li, RCV1: A new benchmark collection for text categorization research, The Journal of Machine Learning Research, vol. 5, pp. 361397, 2004 22] M. Porter, Snowball: A language for stemming algorithms, 2001 http://snowball.tartarus.org/texts/introduction.html 


the US census data set. The size of pilot sample is 2000, and all 50 rules are derived from this pilot sample. In this experiment the ?xed value x for the sample size is set to be 300. The attribute income is considered as a differential attribute, and the difference of income of husband and wife is studied in this experiment. Figure 3 shows the performance of the 5 sampling 331 6DPSOLQJ9DULDQFH             9D UL DQ FH R I V WL PD WL RQ  9DU 9DU 9DU 5DQG a timation 6DPSOLQJ&RVW    


      6D PS OL QJ  RV W 9DU 9DU 9DU 5DQG b 6DPSOLQJ$FFXUDF          5  9DU 9DU 9DU 5DQG c Fig. 2. Evaluation of Sampling Methods for Association Rule Mining on the Yahoo! Dataset procedures on the problem of differential rule mining on the US census data set. The results are also similar to the experiment results for association rule mining: there is a consistent trade off between the estimation variance and sampling cost by setting their weights. Our proposed methods have better performance than simple random sampling method 


We also evaluated the performance of our methods on the Yahoo! dataset. The size of pilot sampling is 2000, and the xed value x for the sample size is 200. The attribute price is considered as the target attribute. Figure 4 shows the performance of the 5 sampling procedures on the problem of differential rule mining on the Yahoo! dataset. The results are very similar to those from the previous experiments VI. RELATED WORK We now compare our work with the existing work on sampling for association rule mining, sampling for database aggregation queries, and sampling for the deep web Sampling for Association Rule Mining: Sampling for frequent itemset mining and association rule mining has been studied by several researchers [23], [21], [11], [6]. Toivonen [23] proposed a random sampling method to identify the association rules which are then further veri?ed on the entire database. Progressive sampling [21], which is based on equivalence classes, involves determining the required sample size for association rule mining FAST [11], a two-phase sampling algorithm, has been proposed to select representative transactions, with the goal of reducing computation cost in association rule mining.A randomized counting algorithm [6] has been developed based on the Markov chain Monte Carlo method for counting the number of frequent itemsets Our work is different from these sampling methods, since we consider the problem of association rule mining on the deep web. Because the data records are hidden under limited query interfaces in these systems, sampling involves very distinct challenges Sampling for Aggregation Queries: Sampling algorithms have also been studied in the context of aggregation queries on large data bases [18], [1], [19], [25]. Approximate Pre-Aggregation APA  categorical data utilizing precomputed statistics about the dataset Wu et al. [25] proposed a Bayesian method for guessing the extreme values in a dataset based on the learned query shape pattern and characteristics from previous workloads More closely to our work, Afrati et al. [1] proposed an adaptive sampling algorithm for answering aggregation queries on hierarchical structures. They focused on adaptively adjusting the sample size assigned to each group based on the estimation error in each group. Joshi et al.[19] considered the problem of 


estimating the result of an aggregate query with a very low selectivity. A principled Bayesian framework was constructed to learn the information obtained from pilot sampling for allocating samples to strata Our methods are clearly distinct for these approaches. First strata are built dynamically in our algorithm and the relations between input and output attributes are learned for sampling on output attributes. Second, the estimation accuracy and sampling cost are optimized in our sample allocation method Hidden Web Sampling: There is recent research work [3 13], [15] on sampling from deep web, which is hidden under simple interfaces. Dasgupta et al.[13], [15] proposed HDSampler a random walk scheme over the query space provided by the interface, to select a simple random sample from hidden database Bar-Yossef et al.[3] proposed algorithms for sampling suggestions using the public suggestion interface. Our algorithm is different from their work, since our goal is sampling in the context of particular data mining tasks. We focus on achieving high accuracy with a low sampling cost for a speci?c task, instead of simple random sampling VII. CONCLUSIONS In this paper, we have proposed strati?cation based sampling methods for data mining on the deep web, particularly considering association rule mining and differential rule mining Components of our approach include: 1 the relation between input attributes and output attributes of the deep web data source, 2 maximally reduce an integrated cost metric that combines estimation variance and sampling cost, and 3 allocation method that takes into account both the estimation error and the sampling costs Our experiments show that compared with simple random sampling, our methods have higher sampling accuracy and lower sampling cost. Moreover, our approach allows user to reduce sampling costs by trading-off a fraction of estimation error 332 6DPSOLQJ9DULDQFH      


     V WL PD WL RQ R I 9D UL DQ FH  9DU 9DU 9DU 5DQG a timation 6DPSOLQJ&RVW          6D PS OL QJ  RV W 9DU 9DU 


9DU 5DQG b 6DPSOLQJ$FFXUDF          5  9DU 9DU 9DU 5DQG c Fig. 3. Evaluation of Sampling Methods for Differential Rule Mining on the US Census Dataset 6DPSOLQJ9DULDQFH             9D UL DQ FH R I V WL 


PD WL RQ  9DU 9DU 9DU 5DQG a timation 6DPSOLQJ&RVW          6D PS OL QJ  RV W  9DU 9DU 9DU 5DQG b 6DPSOLQJ$FFXUDF         


    5  9DU 9DU 9DU 5DQG c Fig. 4. Evaluation of Sampling Methods for Differential Rule Mining on the Yahoo! Dataset REFERENCES 1] Foto N. Afrati, Paraskevas V. Lekeas, and Chen Li. Adaptive-sampling algorithms for answering aggregation queries on web sites. Data Knowl Eng., 64\(2 2] Rakesh Agrawal and Ramakrishnan Srikant. Fast algorithms for mining association rules. In Proceedings of the 20th International Conference on Very Large Data Bases, pages 487499, 1994 3] Ziv Bar-Yossef and Maxim Gurevich. Mining search engine query logs via suggestion sampling. Proc. VLDB Endow., 1\(1 4] Stephen D. Bay and Michael J. Pazzani. Detecting group differences Mining contrast sets. Data Mining and Knowledge Discovery, 5\(3 246, 2001 5] M. K. Bergman. The Deep Web: Surfacing Hidden Value. Journal of Electronic Publishing, 7, 2001 6] Mario Boley and Henrik Grosskreutz. A randomized approach for approximating the number of frequent sets. In ICDM 08: Proceedings of the 2008 Eighth IEEE International Conference on Data Mining, pages 4352 Washington, DC, USA, 2008. IEEE Computer Society 7] D. Braga, S. Ceri, F. Daniel, and D. Martinenghi. Optimization of Multidomain Queries on the Web. VLDB Endowment, 1:562673, 2008 8] R. E. Ca?isch. Monte carlo and quasi-monte carlo methods. Acta Numerica 7:149, 1998 9] Andrea Cali and Davide Martinenghi. Querying Data under Access Limitations. In Proceedings of the 24th International Conference on Data Engineering, pages 5059, 2008 10] Bin Chen, Peter Haas, and Peter Scheuermann. A new two-phase sampling based algorithm for discovering association rules. In KDD 02: Proceedings of the eighth ACM SIGKDD international conference on Knowledge discovery and data mining, pages 462468, New York, NY, USA, 2002 ACM 


11] W. Cochran. Sampling Techniques. Wiley and Sons, 1977 12] Arjun Dasgupta, Gautam Das, and Heikki Mannila. A random walk approach to sampling hidden databases. In SIGMOD 07: Proceedings of the 2007 ACM SIGMOD international conference on Management of data pages 629640, New York, NY, USA, 2007. ACM 13] Arjun Dasgupta, Xin Jin, Bradley Jewell, Nan Zhang, and Gautam Das Unbiased estimation of size and other aggregates over hidden web databases In SIGMOD 10: Proceedings of the 2010 international conference on Management of data, pages 855866, New York, NY, USA, 2010. ACM 14] Arjun Dasgupta, Nan Zhang, and Gautam Das. Leveraging count information in sampling hidden databases. In ICDE 09: Proceedings of the 2009 IEEE International Conference on Data Engineering, pages 329340 Washington, DC, USA, 2009. IEEE Computer Society 15] Loekito Elsa and Bailey James. Mining in?uential attributes that capture class and group contrast behaviour. In CIKM 08: Proceeding of the 17th ACM conference on Information and knowledge management, pages 971 980, New York, NY, USA, 2008. ACM 16] E.K. Foreman. Survey sampling principles. Marcel Dekker publishers, 1991 17] Ruoming Jin, Leonid Glimcher, Chris Jermaine, and Gagan Agrawal. New sampling-based estimators for olap queries. In ICDE, page 18, 2006 18] Shantanu Joshi and Christopher M. Jermaine. Robust strati?ed sampling plans for low selectivity queries. In ICDE, pages 199208, 2008 19] Bing Liu. Web Data Mining: Exploring Hyperlinks, Contents, and Usage Data \(Data-Centric Systems and Applications Inc., Secaucus, NJ, USA, 2006 20] Srinivasan Parthasarathy. Ef?cient progressive sampling for association rules. In ICDM 02: Proceedings of the 2002 IEEE International Conference on Data Mining, page 354, Washington, DC, USA, 2002. IEEE Computer Society 21] William H. Press and Glennys R. Farrar. Recursive strati?ed sampling for multidimensional monte carlo integration. Comput. Phys., 4\(2 1990 22] Hannu Toivonen. Sampling large databases for association rules. In The VLDB Journal, pages 134145. Morgan Kaufmann, 1996 23] Fan Wang, Gagan Agrawal, Ruoming Jin, and Helen Piontkivska. Snpminer A domain-speci?c deep web mining tool. In Proceedings of the 7th IEEE International Conference on Bioinformatics and Bioengineering, pages 192 199, 2007 24] Mingxi Wu and Chris Jermaine. Guessing the extreme values in a data set a bayesian method and its applications. VLDB J., 18\(2 25] Mohammed J. Zaki. Scalable algorithms for association mining. IEEE Transactions on Knowledge and Data Engineering, 12:372390, 2000 


333 


